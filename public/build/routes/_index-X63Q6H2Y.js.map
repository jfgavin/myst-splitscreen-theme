{
  "version": 3,
  "sources": ["../../../app/routes/_index.tsx"],
  "sourcesContent": ["import {\n  KatexCSS,\n  getMetaTagsForArticle,\n  responseNoArticle,\n  responseNoSite,\n} from '@myst-theme/site';\nimport type { LinksFunction, LoaderFunction, V2_MetaFunction } from '@remix-run/node';\nimport { json, redirect } from '@remix-run/node';\nimport { getConfig, getPage } from '~/utils/loaders.server';\nimport Page from './$';\nimport { SiteManifest } from 'myst-config';\nimport { getProject } from '@myst-theme/common';\n\ntype ManifestProject = Required<SiteManifest>['projects'][0];\n\nexport const meta: V2_MetaFunction = ({ data, location }) => {\n  if (!data) return [];\n\n  const config: SiteManifest = data.config;\n  const project: ManifestProject = data.project;\n\n  return getMetaTagsForArticle({\n    origin: '',\n    url: location.pathname,\n    title: config?.title ?? project.title,\n    description: config.description ?? project.description ?? undefined,\n    image: (project.thumbnailOptimized || project.thumbnail) ?? undefined,\n    keywords: config.keywords ?? project.keywords ?? [],\n    twitter: config?.options?.twitter,\n  });\n};\n\nexport const links: LinksFunction = () => [KatexCSS];\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const config = await getConfig();\n  if (!config) throw responseNoSite();\n  const project = getProject(config);\n  if (!project) throw responseNoArticle();\n  if (project.slug) return redirect(`/${project.slug}`);\n  const page = await getPage(request, { slug: project.index });\n  return json({ config, page, project });\n};\n\nexport default Page;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,qBAAmC;AAO5B,IAAM,OAAwB,CAAC,EAAE,MAAM,SAAS,MAAM;AAf7D;AAgBE,MAAI,CAAC;AAAM,WAAO,CAAC;AAEnB,QAAM,SAAuB,KAAK;AAClC,QAAM,UAA2B,KAAK;AAEtC,SAAO,sBAAsB;AAAA,IAC3B,QAAQ;AAAA,IACR,KAAK,SAAS;AAAA,IACd,QAAO,sCAAQ,UAAR,YAAiB,QAAQ;AAAA,IAChC,cAAa,kBAAO,gBAAP,YAAsB,QAAQ,gBAA9B,YAA6C;AAAA,IAC1D,QAAQ,aAAQ,sBAAsB,QAAQ,cAAtC,YAAoD;AAAA,IAC5D,WAAU,kBAAO,aAAP,YAAmB,QAAQ,aAA3B,YAAuC,CAAC;AAAA,IAClD,UAAS,sCAAQ,YAAR,mBAAiB;AAAA,EAC5B,CAAC;AACH;AAEO,IAAM,QAAuB,MAAM,CAAC,QAAQ;AAYnD,IAAO,gBAAQ;",
  "names": []
}

{
  "version": 3,
  "sources": ["../../../../../node_modules/@codemirror/legacy-modes/mode/fcl.js"],
  "sourcesContent": ["var keywords = {\n  \"term\": true,\n  \"method\": true, \"accu\": true,\n  \"rule\": true, \"then\": true, \"is\": true, \"and\": true, \"or\": true,\n  \"if\": true, \"default\": true\n};\n\nvar start_blocks = {\n  \"var_input\": true,\n  \"var_output\": true,\n  \"fuzzify\": true,\n  \"defuzzify\": true,\n  \"function_block\": true,\n  \"ruleblock\": true\n};\n\nvar end_blocks = {\n  \"end_ruleblock\": true,\n  \"end_defuzzify\": true,\n  \"end_function_block\": true,\n  \"end_fuzzify\": true,\n  \"end_var\": true\n};\n\nvar atoms = {\n  \"true\": true, \"false\": true, \"nan\": true,\n  \"real\": true, \"min\": true, \"max\": true, \"cog\": true, \"cogs\": true\n};\n\nvar isOperatorChar = /[+\\-*&^%:=<>!|\\/]/;\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n\n  if (/[\\d\\.]/.test(ch)) {\n    if (ch == \".\") {\n      stream.match(/^[0-9]+([eE][\\-+]?[0-9]+)?/);\n    } else if (ch == \"0\") {\n      stream.match(/^[xX][0-9a-fA-F]+/) || stream.match(/^0[0-7]+/);\n    } else {\n      stream.match(/^[0-9]*\\.?[0-9]*([eE][\\-+]?[0-9]+)?/);\n    }\n    return \"number\";\n  }\n\n  if (ch == \"/\" || ch == \"(\") {\n    if (stream.eat(\"*\")) {\n      state.tokenize = tokenComment;\n      return tokenComment(stream, state);\n    }\n    if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n  if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n\n  var cur = stream.current().toLowerCase();\n  if (keywords.propertyIsEnumerable(cur) ||\n      start_blocks.propertyIsEnumerable(cur) ||\n      end_blocks.propertyIsEnumerable(cur)) {\n    return \"keyword\";\n  }\n  if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n  return \"variable\";\n}\n\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if ((ch == \"/\" || ch == \")\") && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return \"comment\";\n}\n\nfunction Context(indented, column, type, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.align = align;\n  this.prev = prev;\n}\n\nfunction pushContext(state, col, type) {\n  return state.context = new Context(state.indented, col, type, null, state.context);\n}\n\nfunction popContext(state) {\n  if (!state.context.prev) return;\n  var t = state.context.type;\n  if (t == \"end_block\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\n// Interface\n\nexport const fcl = {\n  name: \"fcl\",\n  startState: function(indentUnit) {\n    return {\n      tokenize: null,\n      context: new Context(-indentUnit, 0, \"top\", false),\n      indented: 0,\n      startOfLine: true\n    };\n  },\n\n  token: function(stream, state) {\n    var ctx = state.context;\n    if (stream.sol()) {\n      if (ctx.align == null) ctx.align = false;\n      state.indented = stream.indentation();\n      state.startOfLine = true;\n    }\n    if (stream.eatSpace()) return null;\n\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\") return style;\n    if (ctx.align == null) ctx.align = true;\n\n    var cur = stream.current().toLowerCase();\n\n    if (start_blocks.propertyIsEnumerable(cur)) pushContext(state, stream.column(), \"end_block\");\n    else if (end_blocks.propertyIsEnumerable(cur))  popContext(state);\n\n    state.startOfLine = false;\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    if (state.tokenize != tokenBase && state.tokenize != null) return 0;\n    var ctx = state.context;\n\n    var closing = end_blocks.propertyIsEnumerable(textAfter);\n    if (ctx.align) return ctx.column + (closing ? 0 : 1);\n    else return ctx.indented + (closing ? 0 : cx.unit);\n  },\n\n  languageData: {\n    commentTokens: {line: \"//\", block: {open: \"(*\", close: \"*)\"}}\n  }\n};\n\n"],
  "mappings": "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",
  "names": []
}

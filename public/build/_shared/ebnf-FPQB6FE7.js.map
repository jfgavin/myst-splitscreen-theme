{
  "version": 3,
  "sources": ["../../../../../node_modules/@codemirror/legacy-modes/mode/ebnf.js"],
  "sourcesContent": ["var commentType = {slash: 0, parenthesis: 1};\nvar stateType = {comment: 0, _string: 1, characterClass: 2};\n\nexport const ebnf = {\n  name: \"ebnf\",\n  startState: function () {\n    return {\n      stringType: null,\n      commentType: null,\n      braced: 0,\n      lhs: true,\n      localState: null,\n      stack: [],\n      inDefinition: false\n    };\n  },\n  token: function (stream, state) {\n    if (!stream) return;\n\n    //check for state changes\n    if (state.stack.length === 0) {\n      //strings\n      if ((stream.peek() == '\"') || (stream.peek() == \"'\")) {\n        state.stringType = stream.peek();\n        stream.next(); // Skip quote\n        state.stack.unshift(stateType._string);\n      } else if (stream.match('/*')) { //comments starting with /*\n        state.stack.unshift(stateType.comment);\n        state.commentType = commentType.slash;\n      } else if (stream.match('(*')) { //comments starting with (*\n        state.stack.unshift(stateType.comment);\n        state.commentType = commentType.parenthesis;\n      }\n    }\n\n    //return state\n    //stack has\n    switch (state.stack[0]) {\n    case stateType._string:\n      while (state.stack[0] === stateType._string && !stream.eol()) {\n        if (stream.peek() === state.stringType) {\n          stream.next(); // Skip quote\n          state.stack.shift(); // Clear flag\n        } else if (stream.peek() === \"\\\\\") {\n          stream.next();\n          stream.next();\n        } else {\n          stream.match(/^.[^\\\\\\\"\\']*/);\n        }\n      }\n      return state.lhs ? \"property\" : \"string\"; // Token style\n\n    case stateType.comment:\n      while (state.stack[0] === stateType.comment && !stream.eol()) {\n        if (state.commentType === commentType.slash && stream.match('*/')) {\n          state.stack.shift(); // Clear flag\n          state.commentType = null;\n        } else if (state.commentType === commentType.parenthesis && stream.match('*)')) {\n          state.stack.shift(); // Clear flag\n          state.commentType = null;\n        } else {\n          stream.match(/^.[^\\*]*/);\n        }\n      }\n      return \"comment\";\n\n    case stateType.characterClass:\n      while (state.stack[0] === stateType.characterClass && !stream.eol()) {\n        if (!(stream.match(/^[^\\]\\\\]+/) || stream.match('.'))) {\n          state.stack.shift();\n        }\n      }\n      return \"operator\";\n    }\n\n    var peek = stream.peek();\n\n    //no stack\n    switch (peek) {\n    case \"[\":\n      stream.next();\n      state.stack.unshift(stateType.characterClass);\n      return \"bracket\";\n    case \":\":\n    case \"|\":\n    case \";\":\n      stream.next();\n      return \"operator\";\n    case \"%\":\n      if (stream.match(\"%%\")) {\n        return \"header\";\n      } else if (stream.match(/[%][A-Za-z]+/)) {\n        return \"keyword\";\n      } else if (stream.match(/[%][}]/)) {\n        return \"bracket\";\n      }\n      break;\n    case \"/\":\n      if (stream.match(/[\\/][A-Za-z]+/)) {\n        return \"keyword\";\n      }\n    case \"\\\\\":\n      if (stream.match(/[\\][a-z]+/)) {\n        return \"string.special\";\n      }\n    case \".\":\n      if (stream.match(\".\")) {\n        return \"atom\";\n      }\n    case \"*\":\n    case \"-\":\n    case \"+\":\n    case \"^\":\n      if (stream.match(peek)) {\n        return \"atom\";\n      }\n    case \"$\":\n      if (stream.match(\"$$\")) {\n        return \"builtin\";\n      } else if (stream.match(/[$][0-9]+/)) {\n        return \"variableName.special\";\n      }\n    case \"<\":\n      if (stream.match(/<<[a-zA-Z_]+>>/)) {\n        return \"builtin\";\n      }\n    }\n\n    if (stream.match('//')) {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (stream.match('return')) {\n      return \"operator\";\n    } else if (stream.match(/^[a-zA-Z_][a-zA-Z0-9_]*/)) {\n      if (stream.match(/(?=[\\(.])/)) {\n        return \"variable\";\n      } else if (stream.match(/(?=[\\s\\n]*[:=])/)) {\n        return \"def\";\n      }\n      return \"variableName.special\";\n    } else if ([\"[\", \"]\", \"(\", \")\"].indexOf(stream.peek()) != -1) {\n      stream.next();\n      return \"bracket\";\n    } else if (!stream.eatSpace()) {\n      stream.next();\n    }\n    return null;\n  }\n};\n"],
  "mappings": "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",
  "names": []
}

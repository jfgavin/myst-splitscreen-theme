{
  "version": 3,
  "sources": ["../../../../../node_modules/myst-ext-grid/dist/index.js"],
  "sourcesContent": ["import { normalizeLabel, } from 'myst-common';\nfunction getColumns(columnString) {\n    const columns = (columnString !== null && columnString !== void 0 ? columnString : '1 2 2 3')\n        .split(/\\s/)\n        .map((s) => Number(s.trim()))\n        .filter((n) => !Number.isNaN(n))\n        .map((n) => Math.min(Math.max(Math.floor(n), 1), 12)); // Integer between 1 and 12\n    if (columns.length === 0 || columns.length > 4)\n        return [1, 2, 2, 3];\n    return columns;\n}\nexport const gridDirective = {\n    name: 'grid',\n    arg: {\n        type: String,\n    },\n    // options:\n    // // https://sphinx-design.readthedocs.io/en/furo-theme/grids.html#grid-options\n    // 'class-container'\n    // 'class-row'\n    // gutter\n    // margin\n    // padding\n    // reverse\n    // outline\n    body: {\n        type: 'myst',\n        required: true,\n    },\n    run(data) {\n        return [\n            {\n                type: 'grid',\n                columns: getColumns(data.arg),\n                children: data.body,\n            },\n        ];\n    },\n};\nexport const gridItemDirective = {\n    name: 'grid-item',\n    options: {\n        label: {\n            type: String,\n            alias: ['name'],\n        },\n        class: {\n            type: String,\n        },\n    },\n    body: {\n        type: 'myst',\n        required: true,\n    },\n    run(data) {\n        var _a, _b;\n        const { label, identifier } = normalizeLabel((_a = data.options) === null || _a === void 0 ? void 0 : _a.label) || {};\n        const div = {\n            type: 'div',\n            children: data.body,\n            class: (_b = data.options) === null || _b === void 0 ? void 0 : _b.class,\n            label,\n            identifier,\n        };\n        return [div];\n    },\n};\nexport const gridDirectives = [gridDirective, gridItemDirective];\n"],
  "mappings": ";;;;;;;AACA,SAAS,WAAW,cAAc;AAC9B,QAAM,WAAW,iBAAiB,QAAQ,iBAAiB,SAAS,eAAe,WAC9E,MAAM,IAAI,EACV,IAAI,CAAC,MAAM,OAAO,EAAE,KAAK,CAAC,CAAC,EAC3B,OAAO,CAAC,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,EAC9B,IAAI,CAAC,MAAM,KAAK,IAAI,KAAK,IAAI,KAAK,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;AACxD,MAAI,QAAQ,WAAW,KAAK,QAAQ,SAAS;AACzC,WAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AACtB,SAAO;AACX;AACO,IAAM,gBAAgB;AAAA,EACzB,MAAM;AAAA,EACN,KAAK;AAAA,IACD,MAAM;AAAA,EACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,MAAM;AAAA,IACF,MAAM;AAAA,IACN,UAAU;AAAA,EACd;AAAA,EACA,IAAI,MAAM;AACN,WAAO;AAAA,MACH;AAAA,QACI,MAAM;AAAA,QACN,SAAS,WAAW,KAAK,GAAG;AAAA,QAC5B,UAAU,KAAK;AAAA,MACnB;AAAA,IACJ;AAAA,EACJ;AACJ;AACO,IAAM,oBAAoB;AAAA,EAC7B,MAAM;AAAA,EACN,SAAS;AAAA,IACL,OAAO;AAAA,MACH,MAAM;AAAA,MACN,OAAO,CAAC,MAAM;AAAA,IAClB;AAAA,IACA,OAAO;AAAA,MACH,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EACA,MAAM;AAAA,IACF,MAAM;AAAA,IACN,UAAU;AAAA,EACd;AAAA,EACA,IAAI,MAAM;AACN,QAAI,IAAI;AACR,UAAM,EAAE,OAAO,WAAW,IAAI,gBAAgB,KAAK,KAAK,aAAa,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK,KAAK,CAAC;AACpH,UAAM,MAAM;AAAA,MACR,MAAM;AAAA,MACN,UAAU,KAAK;AAAA,MACf,QAAQ,KAAK,KAAK,aAAa,QAAQ,OAAO,SAAS,SAAS,GAAG;AAAA,MACnE;AAAA,MACA;AAAA,IACJ;AACA,WAAO,CAAC,GAAG;AAAA,EACf;AACJ;AACO,IAAM,iBAAiB,CAAC,eAAe,iBAAiB;",
  "names": []
}

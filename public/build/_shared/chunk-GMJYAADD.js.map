{
  "version": 3,
  "sources": ["../../../../../node_modules/myst-spec-ext/dist/types.js", "../../../../../node_modules/credit-roles/dist/index.js", "../../../../../node_modules/orcid/dist/index.js"],
  "sourcesContent": ["export var SourceFileKind;\n(function (SourceFileKind) {\n    SourceFileKind[\"Article\"] = \"Article\";\n    SourceFileKind[\"Notebook\"] = \"Notebook\";\n})(SourceFileKind || (SourceFileKind = {}));\n", "export const CREDIT_URL = 'https://credit.niso.org/';\n/**\n * enum of the CRediT roles (https://credit.niso.org)\n */\nexport var CreditRole;\n(function (CreditRole) {\n    CreditRole[\"Conceptualization\"] = \"Conceptualization\";\n    CreditRole[\"DataCuration\"] = \"Data curation\";\n    CreditRole[\"FormalAnalysis\"] = \"Formal analysis\";\n    CreditRole[\"FundingAcquisition\"] = \"Funding acquisition\";\n    CreditRole[\"Investigation\"] = \"Investigation\";\n    CreditRole[\"Methodology\"] = \"Methodology\";\n    CreditRole[\"ProjectAdministration\"] = \"Project administration\";\n    CreditRole[\"Resources\"] = \"Resources\";\n    CreditRole[\"Software\"] = \"Software\";\n    CreditRole[\"Supervision\"] = \"Supervision\";\n    CreditRole[\"Validation\"] = \"Validation\";\n    CreditRole[\"Visualization\"] = \"Visualization\";\n    CreditRole[\"WritingOriginalDraft\"] = \"Writing \\u2013 original draft\";\n    CreditRole[\"WritingReviewEditing\"] = \"Writing \\u2013 review & editing\";\n})(CreditRole || (CreditRole = {}));\n/**\n * Descriptions of the CRediT roles (https://credit.niso.org)\n */\nexport const CreditDescriptions = {\n    [CreditRole.Conceptualization]: 'Ideas; formulation or evolution of overarching research goals and aims.',\n    [CreditRole.DataCuration]: 'Management activities to annotate (produce metadata), scrub data and maintain research data (including software code, where it is necessary for interpreting the data itself) for initial use and later re-use.',\n    [CreditRole.FormalAnalysis]: 'Application of statistical, mathematical, computational, or other formal techniques to analyse or synthesize study data.',\n    [CreditRole.FundingAcquisition]: 'Acquisition of the financial support for the project leading to this publication.',\n    [CreditRole.Investigation]: 'Conducting a research and investigation process, specifically performing the experiments, or data/evidence collection.',\n    [CreditRole.Methodology]: 'Development or design of methodology; creation of models.',\n    [CreditRole.ProjectAdministration]: 'Management and coordination responsibility for the research activity planning and execution.',\n    [CreditRole.Resources]: 'Provision of study materials, reagents, materials, patients, laboratory samples, animals, instrumentation, computing resources, or other analysis tools.',\n    [CreditRole.Software]: 'Programming, software development; designing computer programs; implementation of the computer code and supporting algorithms; testing of existing code components.',\n    [CreditRole.Supervision]: 'Oversight and leadership responsibility for the research activity planning and execution, including mentorship external to the core team.',\n    [CreditRole.Validation]: 'Verification, whether as a part of the activity or separate, of the overall replication/reproducibility of results/experiments and other research outputs.',\n    [CreditRole.Visualization]: 'Preparation, creation and/or presentation of the published work, specifically visualization/data presentation.',\n    [CreditRole.WritingOriginalDraft]: 'Preparation, creation and/or presentation of the published work, specifically writing the initial draft (including substantive translation).',\n    [CreditRole.WritingReviewEditing]: 'Preparation, creation and/or presentation of the published work by those from the original research group, specifically critical review, commentary or revision \u2013 including pre- or post-publication stages.',\n};\n/**\n * CRediT roles as a list of strings\n */\nexport const ROLES = Object.keys(CreditDescriptions); // enums are not easy to index\nconst ALIAS_ROLES = {\n    writing: CreditRole.WritingOriginalDraft,\n    editing: CreditRole.WritingReviewEditing,\n    review: CreditRole.WritingReviewEditing,\n    analysis: CreditRole.FormalAnalysis,\n    funding: CreditRole.FundingAcquisition,\n    admin: CreditRole.ProjectAdministration,\n    administration: CreditRole.ProjectAdministration,\n};\n/**\n * Standardize various strings to a common string with british spelling, not for external use.\n */\nfunction standardize(v) {\n    return v\n        .trim()\n        .toLowerCase()\n        .replaceAll('z', 's') // This accounts for british spelling ...\n        .split('')\n        .reduce((s, n) => {\n        if (n.match(/([a-z])/))\n            return [...s, n];\n        const last = s[s.length - 1];\n        if (!(last === null || last === void 0 ? void 0 : last.match(/([a-z])/)))\n            return s;\n        return [...s, '-'];\n    }, [])\n        .join('');\n}\nconst STANDARDIZED_ROLES = Object.fromEntries(ROLES.map((v) => [standardize(v), v]));\nexport function normalize(value, opts) {\n    var _a, _b;\n    if (!value)\n        return undefined;\n    if (ROLES.includes(value))\n        return value;\n    if (opts === null || opts === void 0 ? void 0 : opts.strict)\n        return undefined;\n    return ((_b = (_a = STANDARDIZED_ROLES[standardize(value)]) !== null && _a !== void 0 ? _a : ALIAS_ROLES[value.toLowerCase().trim()]) !== null && _b !== void 0 ? _b : undefined);\n}\n/**\n * Validate that the input string is a valid CRediT role.\n *\n * @param value\n * @returns true if CRediT role is valid\n */\nexport function validate(value, opts) {\n    if (!value)\n        return false;\n    return !!normalize(value, opts);\n}\n/**\n * Builds a canonical URL pointing to https://credit.niso.org/\n *\n * @param value\n * @returns the CRediT role as a string\n */\nexport function buildUrl(value, opts) {\n    const role = normalize(value, opts);\n    if (!role)\n        return undefined;\n    const url = role.toLowerCase().replace('\u2013 ', '').replace('& ', '').replaceAll(' ', '-');\n    return `${CREDIT_URL}contributor-roles/${url}/`;\n}\nexport const credit = {\n    validate,\n    normalize,\n    buildUrl,\n};\n", "export const ORCID_URL = 'https://orcid.org';\nconst ORCID_REGEX_STRICT = '^([0-9]{4}-){3}[0-9]{3}[0-9X]$';\nconst ORCID_REGEX = '^((http(s)?://)?(www.)?orcid.org/)?([0-9]{4}-){3}[0-9]{3}[0-9X]$';\n/**\n * Validate that the input string is valid.\n *\n * @param value\n * @returns true if ORCID is valid\n */\nexport function validate(value, opts) {\n    const match = value === null || value === void 0 ? void 0 : value.match((opts === null || opts === void 0 ? void 0 : opts.strict) ? ORCID_REGEX_STRICT : ORCID_REGEX);\n    if (!match)\n        return false;\n    return true;\n}\n/**\n * Normalize an input string to the ID part of an ORCID\n *\n * @param value\n * @returns a string if it is valid of the form 0000-0002-7859-8394\n */\nexport function normalize(value, opts) {\n    if (!value || !validate(value, opts))\n        return undefined;\n    return value.replace(/^(https?:\\/\\/)?(www\\.)?orcid\\.org\\//, '');\n}\n/**\n * Builds a canonical URL pointing to https://orcid.org\n *\n * @param value\n * @returns the orcid as a url\n */\nexport function buildUrl(value, opts) {\n    const orcid = normalize(value, opts);\n    if (!orcid)\n        return undefined;\n    return `${ORCID_URL}/${orcid}`;\n}\nexport const orcid = {\n    validate,\n    normalize,\n    buildUrl,\n};\n"],
  "mappings": "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",
  "names": ["SourceFileKind", "CreditRole", "validate", "normalize", "buildUrl", "orcid"]
}

{
  "version": 3,
  "sources": ["../../../../../node_modules/@lumino/coreutils/src/json.ts", "../../../../../node_modules/@lumino/coreutils/src/mime.ts", "../../../../../node_modules/@lumino/coreutils/src/promise.ts", "../../../../../node_modules/@lumino/coreutils/src/token.ts", "../../../../../node_modules/@lumino/coreutils/src/random.ts", "../../../../../node_modules/@lumino/coreutils/src/random.browser.ts", "../../../../../node_modules/@lumino/coreutils/src/uuid.ts", "../../../../../node_modules/@lumino/coreutils/src/uuid.browser.ts", "../../../../../node_modules/@jupyterlab/translation/src/utils.ts", "../../../../../node_modules/@jupyterlab/translation/src/gettext.ts", "../../../../../node_modules/@jupyterlab/translation/src/base.ts", "../../../../../node_modules/@jupyterlab/statedb/src/dataconnector.ts", "../../../../../node_modules/@jupyterlab/statedb/node_modules/@lumino/properties/src/index.ts", "../../../../../node_modules/@lumino/signaling/node_modules/@lumino/algorithm/src/array.ts", "../../../../../node_modules/@lumino/signaling/node_modules/@lumino/algorithm/src/chain.ts", "../../../../../node_modules/@lumino/signaling/node_modules/@lumino/algorithm/src/empty.ts", "../../../../../node_modules/@lumino/signaling/node_modules/@lumino/algorithm/src/enumerate.ts", "../../../../../node_modules/@lumino/signaling/node_modules/@lumino/algorithm/src/filter.ts", "../../../../../node_modules/@lumino/signaling/node_modules/@lumino/algorithm/src/find.ts", "../../../../../node_modules/@lumino/signaling/node_modules/@lumino/algorithm/src/iter.ts", "../../../../../node_modules/@lumino/signaling/node_modules/@lumino/algorithm/src/map.ts", "../../../../../node_modules/@lumino/signaling/node_modules/@lumino/algorithm/src/range.ts", "../../../../../node_modules/@lumino/signaling/node_modules/@lumino/algorithm/src/reduce.ts", "../../../../../node_modules/@lumino/signaling/node_modules/@lumino/algorithm/src/repeat.ts", "../../../../../node_modules/@lumino/signaling/node_modules/@lumino/algorithm/src/retro.ts", "../../../../../node_modules/@lumino/signaling/node_modules/@lumino/algorithm/src/sort.ts", "../../../../../node_modules/@lumino/signaling/node_modules/@lumino/algorithm/src/stride.ts", "../../../../../node_modules/@lumino/signaling/node_modules/@lumino/algorithm/src/string.ts", "../../../../../node_modules/@lumino/signaling/node_modules/@lumino/algorithm/src/take.ts", "../../../../../node_modules/@lumino/signaling/node_modules/@lumino/algorithm/src/zip.ts", "../../../../../node_modules/@lumino/signaling/src/index.ts", "../../../../../node_modules/@jupyterlab/statedb/src/restorablepool.ts", "../../../../../node_modules/@jupyterlab/statedb/src/statedb.ts", "../../../../../node_modules/@jupyterlab/statedb/src/tokens.ts", "../../../../../node_modules/@jupyterlab/statedb/src/index.ts", "../../../../../node_modules/@jupyterlab/coreutils/src/activitymonitor.ts", "../../../../../node_modules/@jupyterlab/coreutils/src/lru.ts", "../../../../../node_modules/@jupyterlab/coreutils/src/markdowncodeblocks.ts", "../../../../../node_modules/minimist/index.js", "../../../../../node_modules/requires-port/index.js", "../../../../../node_modules/querystringify/index.js", "../../../../../node_modules/url-parse/index.js", "../../../../../node_modules/@jupyterlab/coreutils/src/url.ts", "../../../../../node_modules/@jupyterlab/coreutils/src/pageconfig.ts", "../../../../../node_modules/@jupyterlab/coreutils/src/path.ts", "../../../../../node_modules/@jupyterlab/coreutils/src/signal.ts", "../../../../../node_modules/@jupyterlab/coreutils/src/text.ts", "../../../../../node_modules/@jupyterlab/coreutils/src/time.ts", "../../../../../node_modules/@jupyterlab/coreutils/src/index.ts", "../../../../../node_modules/@jupyterlab/services/node_modules/@jupyterlab/coreutils/src/activitymonitor.ts", "../../../../../node_modules/@jupyterlab/services/node_modules/@jupyterlab/coreutils/src/lru.ts", "../../../../../node_modules/@jupyterlab/services/node_modules/@jupyterlab/coreutils/src/markdowncodeblocks.ts", "../../../../../node_modules/@jupyterlab/services/node_modules/@jupyterlab/coreutils/src/url.ts", "../../../../../node_modules/@jupyterlab/services/node_modules/@jupyterlab/coreutils/src/pageconfig.ts", "../../../../../node_modules/@jupyterlab/services/node_modules/@jupyterlab/coreutils/src/path.ts", "../../../../../node_modules/@jupyterlab/services/node_modules/@jupyterlab/coreutils/src/signal.ts", "../../../../../node_modules/@jupyterlab/services/node_modules/@jupyterlab/coreutils/src/text.ts", "../../../../../node_modules/@jupyterlab/services/node_modules/@jupyterlab/coreutils/src/time.ts", "../../../../../node_modules/@jupyterlab/services/node_modules/@jupyterlab/coreutils/src/index.ts", "../../../../../node_modules/@jupyterlab/services/src/kernel/messages.ts", "../../../../../node_modules/@jupyterlab/services/src/kernel/serialize.ts", "../../../../../node_modules/@jupyterlab/services/src/shim/ws.ts", "../../../../../node_modules/@jupyterlab/services/src/serverconnection.ts", "../../../../../node_modules/@jupyterlab/services/src/basemanager.ts", "../../../../../node_modules/@jupyterlab/services/src/config/index.ts", "../../../../../node_modules/@jupyterlab/services/src/validate.ts", "../../../../../node_modules/@jupyterlab/services/src/contents/validate.ts", "../../../../../node_modules/@jupyterlab/services/src/contents/index.ts", "../../../../../node_modules/@lumino/polling/src/poll.ts", "../../../../../node_modules/@lumino/polling/src/ratelimiter.ts", "../../../../../node_modules/@jupyterlab/services/src/event/index.ts", "../../../../../node_modules/@jupyterlab/services/src/kernel/validate.ts", "../../../../../node_modules/@jupyterlab/services/src/kernel/restapi.ts", "../../../../../node_modules/@lumino/disposable/src/index.ts", "../../../../../node_modules/@jupyterlab/services/src/kernel/comm.ts", "../../../../../node_modules/@jupyterlab/services/src/kernel/future.ts", "../../../../../node_modules/@jupyterlab/services/src/kernelspec/validate.ts", "../../../../../node_modules/@jupyterlab/services/src/kernelspec/restapi.ts", "../../../../../node_modules/@jupyterlab/services/src/kernelspec/manager.ts", "../../../../../node_modules/@jupyterlab/services/src/kernelspec/index.ts", "../../../../../node_modules/@jupyterlab/services/src/kernel/default.ts", "../../../../../node_modules/@jupyterlab/services/src/kernel/manager.ts", "../../../../../node_modules/@jupyterlab/services/src/kernel/index.ts", "../../../../../node_modules/@jupyterlab/services/src/builder/index.ts", "../../../../../node_modules/@jupyterlab/services/src/nbconvert/index.ts", "../../../../../node_modules/@jupyterlab/services/src/session/validate.ts", "../../../../../node_modules/@jupyterlab/services/src/session/restapi.ts", "../../../../../node_modules/@jupyterlab/services/src/session/default.ts", "../../../../../node_modules/@jupyterlab/services/src/session/manager.ts", "../../../../../node_modules/@jupyterlab/services/src/session/index.ts", "../../../../../node_modules/@jupyterlab/services/node_modules/@jupyterlab/statedb/src/dataconnector.ts", "../../../../../node_modules/@jupyterlab/services/node_modules/@lumino/properties/src/index.ts", "../../../../../node_modules/@jupyterlab/services/node_modules/@jupyterlab/statedb/src/restorablepool.ts", "../../../../../node_modules/@jupyterlab/services/node_modules/@jupyterlab/statedb/src/statedb.ts", "../../../../../node_modules/@jupyterlab/services/node_modules/@jupyterlab/statedb/src/tokens.ts", "../../../../../node_modules/@jupyterlab/services/node_modules/@jupyterlab/statedb/src/index.ts", "../../../../../node_modules/@jupyterlab/services/src/setting/index.ts", "../../../../../node_modules/@jupyterlab/services/src/terminal/restapi.ts", "../../../../../node_modules/@jupyterlab/services/src/terminal/terminal.ts", "../../../../../node_modules/@jupyterlab/services/src/terminal/default.ts", "../../../../../node_modules/@jupyterlab/services/src/terminal/manager.ts", "../../../../../node_modules/@jupyterlab/services/src/terminal/index.ts", "../../../../../node_modules/@jupyterlab/services/src/user/index.ts", "../../../../../node_modules/@jupyterlab/services/src/workspace/index.ts", "../../../../../node_modules/@jupyterlab/services/src/manager.ts", "../../../../../node_modules/@jupyterlab/services/src/index.ts", "../../../../../node_modules/@jupyterlab/translation/src/server.ts", "../../../../../node_modules/@jupyterlab/translation/src/tokens.ts", "../../../../../node_modules/@jupyterlab/translation/src/manager.ts", "../../../../../node_modules/@jupyterlab/translation/src/index.ts", "../../../../../node_modules/free-style/src/index.ts", "../../../../../node_modules/typestyle/lib/internal/formatting.js", "../../../../../node_modules/typestyle/lib/internal/utilities.js", "../../../../../node_modules/typestyle/lib/internal/typestyle.js", "../../../../../node_modules/typestyle/lib/types.js", "../../../../../node_modules/typestyle/lib/index.js", "../../../../../node_modules/@jupyterlab/ui-components/src/style/icon.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/style/index.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/utils.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/icon/labicon.tsx", "../../../../../node_modules/@jupyterlab/ui-components/src/icon/iconimports.ts", "../../../../../node_modules/@lumino/virtualdom/node_modules/@lumino/algorithm/src/array.ts", "../../../../../node_modules/@lumino/virtualdom/node_modules/@lumino/algorithm/src/chain.ts", "../../../../../node_modules/@lumino/virtualdom/node_modules/@lumino/algorithm/src/empty.ts", "../../../../../node_modules/@lumino/virtualdom/node_modules/@lumino/algorithm/src/enumerate.ts", "../../../../../node_modules/@lumino/virtualdom/node_modules/@lumino/algorithm/src/filter.ts", "../../../../../node_modules/@lumino/virtualdom/node_modules/@lumino/algorithm/src/find.ts", "../../../../../node_modules/@lumino/virtualdom/node_modules/@lumino/algorithm/src/iter.ts", "../../../../../node_modules/@lumino/virtualdom/node_modules/@lumino/algorithm/src/map.ts", "../../../../../node_modules/@lumino/virtualdom/node_modules/@lumino/algorithm/src/range.ts", "../../../../../node_modules/@lumino/virtualdom/node_modules/@lumino/algorithm/src/reduce.ts", "../../../../../node_modules/@lumino/virtualdom/node_modules/@lumino/algorithm/src/repeat.ts", "../../../../../node_modules/@lumino/virtualdom/node_modules/@lumino/algorithm/src/retro.ts", "../../../../../node_modules/@lumino/virtualdom/node_modules/@lumino/algorithm/src/sort.ts", "../../../../../node_modules/@lumino/virtualdom/node_modules/@lumino/algorithm/src/stride.ts", "../../../../../node_modules/@lumino/virtualdom/node_modules/@lumino/algorithm/src/string.ts", "../../../../../node_modules/@lumino/virtualdom/node_modules/@lumino/algorithm/src/take.ts", "../../../../../node_modules/@lumino/virtualdom/node_modules/@lumino/algorithm/src/zip.ts", "../../../../../node_modules/@lumino/virtualdom/src/index.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/algorithm/src/array.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/algorithm/src/chain.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/algorithm/src/empty.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/algorithm/src/enumerate.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/algorithm/src/filter.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/algorithm/src/find.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/algorithm/src/iter.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/algorithm/src/map.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/algorithm/src/range.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/algorithm/src/reduce.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/algorithm/src/repeat.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/algorithm/src/retro.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/algorithm/src/sort.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/algorithm/src/stride.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/algorithm/src/string.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/algorithm/src/take.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/algorithm/src/zip.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/domutils/src/clipboard.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/domutils/src/element.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/domutils/src/platform.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/domutils/src/selector.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/collections/src/linkedlist.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/messaging/src/index.ts", "../../../../../node_modules/@lumino/widgets/node_modules/@lumino/properties/src/index.ts", "../../../../../node_modules/@lumino/dragdrop/src/index.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/algorithm/src/array.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/algorithm/src/chain.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/algorithm/src/empty.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/algorithm/src/enumerate.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/algorithm/src/filter.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/algorithm/src/find.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/algorithm/src/iter.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/algorithm/src/map.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/algorithm/src/range.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/algorithm/src/reduce.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/algorithm/src/repeat.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/algorithm/src/retro.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/algorithm/src/sort.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/algorithm/src/stride.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/algorithm/src/string.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/algorithm/src/take.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/algorithm/src/zip.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/domutils/src/clipboard.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/domutils/src/element.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/domutils/src/platform.ts", "../../../../../node_modules/@lumino/commands/node_modules/@lumino/domutils/src/selector.ts", "../../../../../node_modules/@lumino/keyboard/src/index.ts", "../../../../../node_modules/@lumino/commands/src/index.ts", "../../../../../node_modules/@lumino/widgets/src/boxengine.ts", "../../../../../node_modules/@lumino/widgets/src/title.ts", "../../../../../node_modules/@lumino/widgets/src/widget.ts", "../../../../../node_modules/@lumino/widgets/src/layout.ts", "../../../../../node_modules/@lumino/widgets/src/panellayout.ts", "../../../../../node_modules/@lumino/widgets/src/utils.ts", "../../../../../node_modules/@lumino/widgets/src/splitlayout.ts", "../../../../../node_modules/@lumino/widgets/src/accordionlayout.ts", "../../../../../node_modules/@lumino/widgets/src/panel.ts", "../../../../../node_modules/@lumino/widgets/src/splitpanel.ts", "../../../../../node_modules/@lumino/widgets/src/accordionpanel.ts", "../../../../../node_modules/@lumino/widgets/src/boxlayout.ts", "../../../../../node_modules/@lumino/widgets/src/boxpanel.ts", "../../../../../node_modules/@lumino/widgets/src/commandpalette.ts", "../../../../../node_modules/@lumino/widgets/src/menu.ts", "../../../../../node_modules/@lumino/widgets/src/contextmenu.ts", "../../../../../node_modules/@lumino/widgets/src/tabbar.ts", "../../../../../node_modules/@lumino/widgets/src/docklayout.ts", "../../../../../node_modules/@lumino/widgets/src/dockpanel.ts", "../../../../../node_modules/@lumino/widgets/src/focustracker.ts", "../../../../../node_modules/@lumino/widgets/src/gridlayout.ts", "../../../../../node_modules/@lumino/widgets/src/menubar.ts", "../../../../../node_modules/@lumino/widgets/src/scrollbar.ts", "../../../../../node_modules/@lumino/widgets/src/singletonlayout.ts", "../../../../../node_modules/@lumino/widgets/src/stackedlayout.ts", "../../../../../node_modules/@lumino/widgets/src/stackedpanel.ts", "../../../../../node_modules/@lumino/widgets/src/tabpanel.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/icon/widgets/commandpalettesvg.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/icon/widgets/menusvg.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/icon/widgets/tabbarsvg.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/icon/widgets/index.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/icon/index.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/components/inputgroup.tsx", "../../../../../node_modules/@jupyterlab/ui-components/src/components/button.tsx", "../../../../../node_modules/@jupyterlab/ui-components/src/components/collapser.ts", "../../../../../node_modules/react/cjs/react-jsx-runtime.development.js", "../../../../../node_modules/react/jsx-runtime.js", "../../../../../node_modules/@rjsf/utils/src/isObject.ts", "../../../../../node_modules/@rjsf/utils/src/allowAdditionalItems.ts", "../../../../../node_modules/@rjsf/utils/src/asNumber.ts", "../../../../../node_modules/@rjsf/utils/src/constants.ts", "../../../../../node_modules/@rjsf/utils/src/getUiOptions.ts", "../../../../../node_modules/@rjsf/utils/src/canExpand.ts", "../../../../../node_modules/lodash/_freeGlobal.js", "../../../../../node_modules/lodash/_root.js", "../../../../../node_modules/lodash/_Symbol.js", "../../../../../node_modules/lodash/_getRawTag.js", "../../../../../node_modules/lodash/_objectToString.js", "../../../../../node_modules/lodash/_baseGetTag.js", "../../../../../node_modules/lodash/_overArg.js", "../../../../../node_modules/lodash/_getPrototype.js", "../../../../../node_modules/lodash/isObjectLike.js", "../../../../../node_modules/lodash/isPlainObject.js", "../../../../../node_modules/@rjsf/utils/src/createErrorHandler.ts", "../../../../../node_modules/lodash/_listCacheClear.js", "../../../../../node_modules/lodash/eq.js", "../../../../../node_modules/lodash/_assocIndexOf.js", "../../../../../node_modules/lodash/_listCacheDelete.js", "../../../../../node_modules/lodash/_listCacheGet.js", "../../../../../node_modules/lodash/_listCacheHas.js", "../../../../../node_modules/lodash/_listCacheSet.js", "../../../../../node_modules/lodash/_ListCache.js", "../../../../../node_modules/lodash/_stackClear.js", "../../../../../node_modules/lodash/_stackDelete.js", "../../../../../node_modules/lodash/_stackGet.js", "../../../../../node_modules/lodash/_stackHas.js", "../../../../../node_modules/lodash/isObject.js", "../../../../../node_modules/lodash/isFunction.js", "../../../../../node_modules/lodash/_coreJsData.js", "../../../../../node_modules/lodash/_isMasked.js", "../../../../../node_modules/lodash/_toSource.js", "../../../../../node_modules/lodash/_baseIsNative.js", "../../../../../node_modules/lodash/_getValue.js", "../../../../../node_modules/lodash/_getNative.js", "../../../../../node_modules/lodash/_Map.js", "../../../../../node_modules/lodash/_nativeCreate.js", "../../../../../node_modules/lodash/_hashClear.js", "../../../../../node_modules/lodash/_hashDelete.js", "../../../../../node_modules/lodash/_hashGet.js", "../../../../../node_modules/lodash/_hashHas.js", "../../../../../node_modules/lodash/_hashSet.js", "../../../../../node_modules/lodash/_Hash.js", "../../../../../node_modules/lodash/_mapCacheClear.js", "../../../../../node_modules/lodash/_isKeyable.js", "../../../../../node_modules/lodash/_getMapData.js", "../../../../../node_modules/lodash/_mapCacheDelete.js", "../../../../../node_modules/lodash/_mapCacheGet.js", "../../../../../node_modules/lodash/_mapCacheHas.js", "../../../../../node_modules/lodash/_mapCacheSet.js", "../../../../../node_modules/lodash/_MapCache.js", "../../../../../node_modules/lodash/_stackSet.js", "../../../../../node_modules/lodash/_Stack.js", "../../../../../node_modules/lodash/_setCacheAdd.js", "../../../../../node_modules/lodash/_setCacheHas.js", "../../../../../node_modules/lodash/_SetCache.js", "../../../../../node_modules/lodash/_arraySome.js", "../../../../../node_modules/lodash/_cacheHas.js", "../../../../../node_modules/lodash/_equalArrays.js", "../../../../../node_modules/lodash/_Uint8Array.js", "../../../../../node_modules/lodash/_mapToArray.js", "../../../../../node_modules/lodash/_setToArray.js", "../../../../../node_modules/lodash/_equalByTag.js", "../../../../../node_modules/lodash/_arrayPush.js", "../../../../../node_modules/lodash/isArray.js", "../../../../../node_modules/lodash/_baseGetAllKeys.js", "../../../../../node_modules/lodash/_arrayFilter.js", "../../../../../node_modules/lodash/stubArray.js", "../../../../../node_modules/lodash/_getSymbols.js", "../../../../../node_modules/lodash/_baseTimes.js", "../../../../../node_modules/lodash/_baseIsArguments.js", "../../../../../node_modules/lodash/isArguments.js", "../../../../../node_modules/lodash/stubFalse.js", "../../../../../node_modules/lodash/isBuffer.js", "../../../../../node_modules/lodash/_isIndex.js", "../../../../../node_modules/lodash/isLength.js", "../../../../../node_modules/lodash/_baseIsTypedArray.js", "../../../../../node_modules/lodash/_baseUnary.js", "../../../../../node_modules/lodash/_nodeUtil.js", "../../../../../node_modules/lodash/isTypedArray.js", "../../../../../node_modules/lodash/_arrayLikeKeys.js", "../../../../../node_modules/lodash/_isPrototype.js", "../../../../../node_modules/lodash/_nativeKeys.js", "../../../../../node_modules/lodash/_baseKeys.js", "../../../../../node_modules/lodash/isArrayLike.js", "../../../../../node_modules/lodash/keys.js", "../../../../../node_modules/lodash/_getAllKeys.js", "../../../../../node_modules/lodash/_equalObjects.js", "../../../../../node_modules/lodash/_DataView.js", "../../../../../node_modules/lodash/_Promise.js", "../../../../../node_modules/lodash/_Set.js", "../../../../../node_modules/lodash/_WeakMap.js", "../../../../../node_modules/lodash/_getTag.js", "../../../../../node_modules/lodash/_baseIsEqualDeep.js", "../../../../../node_modules/lodash/_baseIsEqual.js", "../../../../../node_modules/lodash/isEqualWith.js", "../../../../../node_modules/@rjsf/utils/src/deepEquals.ts", "../../../../../node_modules/lodash/isSymbol.js", "../../../../../node_modules/lodash/_isKey.js", "../../../../../node_modules/lodash/memoize.js", "../../../../../node_modules/lodash/_memoizeCapped.js", "../../../../../node_modules/lodash/_stringToPath.js", "../../../../../node_modules/lodash/_arrayMap.js", "../../../../../node_modules/lodash/_baseToString.js", "../../../../../node_modules/lodash/toString.js", "../../../../../node_modules/lodash/_castPath.js", "../../../../../node_modules/lodash/_toKey.js", "../../../../../node_modules/lodash/_baseGet.js", "../../../../../node_modules/lodash/get.js", "../../../../../node_modules/lodash/isEmpty.js", "../../../../../node_modules/jsonpointer/jsonpointer.js", "../../../../../node_modules/lodash/_arrayEach.js", "../../../../../node_modules/lodash/_defineProperty.js", "../../../../../node_modules/lodash/_baseAssignValue.js", "../../../../../node_modules/lodash/_assignValue.js", "../../../../../node_modules/lodash/_copyObject.js", "../../../../../node_modules/lodash/_baseAssign.js", "../../../../../node_modules/lodash/_nativeKeysIn.js", "../../../../../node_modules/lodash/_baseKeysIn.js", "../../../../../node_modules/lodash/keysIn.js", "../../../../../node_modules/lodash/_baseAssignIn.js", "../../../../../node_modules/lodash/_cloneBuffer.js", "../../../../../node_modules/lodash/_copyArray.js", "../../../../../node_modules/lodash/_copySymbols.js", "../../../../../node_modules/lodash/_getSymbolsIn.js", "../../../../../node_modules/lodash/_copySymbolsIn.js", "../../../../../node_modules/lodash/_getAllKeysIn.js", "../../../../../node_modules/lodash/_initCloneArray.js", "../../../../../node_modules/lodash/_cloneArrayBuffer.js", "../../../../../node_modules/lodash/_cloneDataView.js", "../../../../../node_modules/lodash/_cloneRegExp.js", "../../../../../node_modules/lodash/_cloneSymbol.js", "../../../../../node_modules/lodash/_cloneTypedArray.js", "../../../../../node_modules/lodash/_initCloneByTag.js", "../../../../../node_modules/lodash/_baseCreate.js", "../../../../../node_modules/lodash/_initCloneObject.js", "../../../../../node_modules/lodash/_baseIsMap.js", "../../../../../node_modules/lodash/isMap.js", "../../../../../node_modules/lodash/_baseIsSet.js", "../../../../../node_modules/lodash/isSet.js", "../../../../../node_modules/lodash/_baseClone.js", "../../../../../node_modules/lodash/last.js", "../../../../../node_modules/lodash/_baseSlice.js", "../../../../../node_modules/lodash/_parent.js", "../../../../../node_modules/lodash/_baseUnset.js", "../../../../../node_modules/lodash/_customOmitClone.js", "../../../../../node_modules/lodash/_isFlattenable.js", "../../../../../node_modules/lodash/_baseFlatten.js", "../../../../../node_modules/lodash/flatten.js", "../../../../../node_modules/lodash/_apply.js", "../../../../../node_modules/lodash/_overRest.js", "../../../../../node_modules/lodash/constant.js", "../../../../../node_modules/lodash/identity.js", "../../../../../node_modules/lodash/_baseSetToString.js", "../../../../../node_modules/lodash/_shortOut.js", "../../../../../node_modules/lodash/_setToString.js", "../../../../../node_modules/lodash/_flatRest.js", "../../../../../node_modules/lodash/omit.js", "../../../../../node_modules/@rjsf/utils/src/findSchemaDefinition.ts", "../../../../../node_modules/lodash/_baseHas.js", "../../../../../node_modules/lodash/_hasPath.js", "../../../../../node_modules/lodash/has.js", "../../../../../node_modules/lodash/isNumber.js", "../../../../../node_modules/lodash/isString.js", "../../../../../node_modules/lodash/_arrayReduce.js", "../../../../../node_modules/lodash/_createBaseFor.js", "../../../../../node_modules/lodash/_baseFor.js", "../../../../../node_modules/lodash/_baseForOwn.js", "../../../../../node_modules/lodash/_createBaseEach.js", "../../../../../node_modules/lodash/_baseEach.js", "../../../../../node_modules/lodash/_baseIsMatch.js", "../../../../../node_modules/lodash/_isStrictComparable.js", "../../../../../node_modules/lodash/_getMatchData.js", "../../../../../node_modules/lodash/_matchesStrictComparable.js", "../../../../../node_modules/lodash/_baseMatches.js", "../../../../../node_modules/lodash/_baseHasIn.js", "../../../../../node_modules/lodash/hasIn.js", "../../../../../node_modules/lodash/_baseMatchesProperty.js", "../../../../../node_modules/lodash/_baseProperty.js", "../../../../../node_modules/lodash/_basePropertyDeep.js", "../../../../../node_modules/lodash/property.js", "../../../../../node_modules/lodash/_baseIteratee.js", "../../../../../node_modules/lodash/_baseReduce.js", "../../../../../node_modules/lodash/reduce.js", "../../../../../node_modules/lodash/_castFunction.js", "../../../../../node_modules/lodash/_trimmedEndIndex.js", "../../../../../node_modules/lodash/_baseTrim.js", "../../../../../node_modules/lodash/toNumber.js", "../../../../../node_modules/lodash/toFinite.js", "../../../../../node_modules/lodash/toInteger.js", "../../../../../node_modules/lodash/times.js", "../../../../../node_modules/@rjsf/utils/src/getOptionMatchingSimpleDiscriminator.ts", "../../../../../node_modules/@rjsf/utils/src/schema/getMatchingOption.ts", "../../../../../node_modules/@rjsf/utils/src/schema/getFirstMatchingOption.ts", "../../../../../node_modules/lodash/isEqual.js", "../../../../../node_modules/lodash/_baseSet.js", "../../../../../node_modules/lodash/set.js", "../../../../../node_modules/lodash/transform.js", "../../../../../node_modules/lodash/_assignMergeValue.js", "../../../../../node_modules/lodash/isArrayLikeObject.js", "../../../../../node_modules/lodash/_safeGet.js", "../../../../../node_modules/lodash/toPlainObject.js", "../../../../../node_modules/lodash/_baseMergeDeep.js", "../../../../../node_modules/lodash/_baseMerge.js", "../../../../../node_modules/lodash/_baseRest.js", "../../../../../node_modules/lodash/_isIterateeCall.js", "../../../../../node_modules/lodash/_createAssigner.js", "../../../../../node_modules/lodash/merge.js", "../../../../../node_modules/lodash/flattenDeep.js", "../../../../../node_modules/lodash/_baseFindIndex.js", "../../../../../node_modules/lodash/_baseIsNaN.js", "../../../../../node_modules/lodash/_strictIndexOf.js", "../../../../../node_modules/lodash/_baseIndexOf.js", "../../../../../node_modules/lodash/_arrayIncludes.js", "../../../../../node_modules/lodash/_arrayIncludesWith.js", "../../../../../node_modules/lodash/noop.js", "../../../../../node_modules/lodash/_createSet.js", "../../../../../node_modules/lodash/_baseUniq.js", "../../../../../node_modules/lodash/uniq.js", "../../../../../node_modules/lodash/cloneDeep.js", "../../../../../node_modules/lodash/_baseMap.js", "../../../../../node_modules/lodash/_baseSortBy.js", "../../../../../node_modules/lodash/_compareAscending.js", "../../../../../node_modules/lodash/_compareMultiple.js", "../../../../../node_modules/lodash/_baseOrderBy.js", "../../../../../node_modules/lodash/sortBy.js", "../../../../../node_modules/lodash/uniqWith.js", "../../../../../node_modules/lodash/defaults.js", "../../../../../node_modules/lodash/_baseIntersection.js", "../../../../../node_modules/lodash/_castArrayLikeObject.js", "../../../../../node_modules/lodash/intersectionWith.js", "../../../../../node_modules/lodash/isBoolean.js", "../../../../../node_modules/json-schema-compare/src/index.js", "../../../../../node_modules/validate.io-array/lib/index.js", "../../../../../node_modules/validate.io-number/lib/index.js", "../../../../../node_modules/validate.io-integer/lib/index.js", "../../../../../node_modules/validate.io-integer-array/lib/index.js", "../../../../../node_modules/validate.io-function/lib/index.js", "../../../../../node_modules/compute-gcd/lib/index.js", "../../../../../node_modules/compute-lcm/lib/index.js", "../../../../../node_modules/lodash/_customDefaultsMerge.js", "../../../../../node_modules/lodash/mergeWith.js", "../../../../../node_modules/lodash/defaultsDeep.js", "../../../../../node_modules/lodash/intersection.js", "../../../../../node_modules/lodash/_baseIndexOfWith.js", "../../../../../node_modules/lodash/_basePullAll.js", "../../../../../node_modules/lodash/pullAll.js", "../../../../../node_modules/lodash/forEach.js", "../../../../../node_modules/lodash/_baseDifference.js", "../../../../../node_modules/lodash/without.js", "../../../../../node_modules/json-schema-merge-allof/src/common.js", "../../../../../node_modules/json-schema-merge-allof/src/complex-resolvers/properties.js", "../../../../../node_modules/json-schema-merge-allof/src/complex-resolvers/items.js", "../../../../../node_modules/json-schema-merge-allof/src/index.js", "../../../../../node_modules/@rjsf/utils/src/getDiscriminatorFieldFromSchema.ts", "../../../../../node_modules/@rjsf/utils/src/guessType.ts", "../../../../../node_modules/lodash/union.js", "../../../../../node_modules/@rjsf/utils/src/getSchemaType.ts", "../../../../../node_modules/@rjsf/utils/src/mergeSchemas.ts", "../../../../../node_modules/@rjsf/utils/src/schema/retrieveSchema.ts", "../../../../../node_modules/@rjsf/utils/src/schema/getClosestMatchingOption.ts", "../../../../../node_modules/@rjsf/utils/src/isFixedItems.ts", "../../../../../node_modules/@rjsf/utils/src/mergeDefaultsWithFormData.ts", "../../../../../node_modules/@rjsf/utils/src/mergeObjects.ts", "../../../../../node_modules/@rjsf/utils/src/isConstant.ts", "../../../../../node_modules/@rjsf/utils/src/schema/isSelect.ts", "../../../../../node_modules/@rjsf/utils/src/schema/isMultiSelect.ts", "../../../../../node_modules/@rjsf/utils/src/schema/getDefaultFormState.ts", "../../../../../node_modules/@rjsf/utils/src/isCustomWidget.ts", "../../../../../node_modules/@rjsf/utils/src/schema/isFilesArray.ts", "../../../../../node_modules/@rjsf/utils/src/schema/getDisplayLabel.ts", "../../../../../node_modules/@rjsf/utils/src/schema/mergeValidationData.ts", "../../../../../node_modules/@rjsf/utils/src/schema/sanitizeDataForNewSchema.ts", "../../../../../node_modules/@rjsf/utils/src/schema/toIdSchema.ts", "../../../../../node_modules/@rjsf/utils/src/schema/toPathSchema.ts", "../../../../../node_modules/@rjsf/utils/src/schema/index.ts", "../../../../../node_modules/@rjsf/utils/src/createSchemaUtils.ts", "../../../../../node_modules/@rjsf/utils/src/dataURItoBlob.ts", "../../../../../node_modules/@rjsf/utils/src/replaceStringParameters.ts", "../../../../../node_modules/@rjsf/utils/src/englishStringTranslator.ts", "../../../../../node_modules/@rjsf/utils/src/enumOptionsValueForIndex.ts", "../../../../../node_modules/@rjsf/utils/src/enumOptionsDeselectValue.ts", "../../../../../node_modules/@rjsf/utils/src/enumOptionsIsSelected.ts", "../../../../../node_modules/@rjsf/utils/src/enumOptionsIndexForValue.ts", "../../../../../node_modules/lodash/isNil.js", "../../../../../node_modules/@rjsf/utils/src/enumOptionsSelectValue.ts", "../../../../../node_modules/@rjsf/utils/src/ErrorSchemaBuilder.ts", "../../../../../node_modules/@rjsf/utils/src/getDateElementProps.ts", "../../../../../node_modules/@rjsf/utils/src/rangeSpec.ts", "../../../../../node_modules/@rjsf/utils/src/getInputProps.ts", "../../../../../node_modules/@rjsf/utils/src/getSubmitButtonOptions.ts", "../../../../../node_modules/@rjsf/utils/src/getTemplate.ts", "../../../../../node_modules/@rjsf/utils/node_modules/react-is/cjs/react-is.development.js", "../../../../../node_modules/@rjsf/utils/node_modules/react-is/index.js", "../../../../../node_modules/@rjsf/utils/src/getWidget.tsx", "../../../../../node_modules/@rjsf/utils/src/hashForSchema.ts", "../../../../../node_modules/@rjsf/utils/src/hasWidget.ts", "../../../../../node_modules/@rjsf/utils/src/idGenerators.ts", "../../../../../node_modules/@rjsf/utils/src/labelValue.ts", "../../../../../node_modules/@rjsf/utils/src/localToUTC.ts", "../../../../../node_modules/@rjsf/utils/src/toConstant.ts", "../../../../../node_modules/@rjsf/utils/src/optionsList.ts", "../../../../../node_modules/@rjsf/utils/src/orderProperties.ts", "../../../../../node_modules/@rjsf/utils/src/pad.ts", "../../../../../node_modules/@rjsf/utils/src/parseDateString.ts", "../../../../../node_modules/@rjsf/utils/src/schemaRequiresTrueValue.ts", "../../../../../node_modules/@rjsf/utils/src/shouldRender.ts", "../../../../../node_modules/@rjsf/utils/src/toDateString.ts", "../../../../../node_modules/@rjsf/utils/src/toErrorList.ts", "../../../../../node_modules/lodash/toPath.js", "../../../../../node_modules/@rjsf/utils/src/toErrorSchema.ts", "../../../../../node_modules/@rjsf/utils/src/unwrapErrorHandler.ts", "../../../../../node_modules/@rjsf/utils/src/utcToLocal.ts", "../../../../../node_modules/@rjsf/utils/src/validationDataMerge.ts", "../../../../../node_modules/@rjsf/utils/src/withIdRefPrefix.ts", "../../../../../node_modules/@rjsf/utils/lib/types.js", "../../../../../node_modules/@rjsf/utils/src/enums.ts", "../../../../../node_modules/@rjsf/utils/src/parser/ParserValidator.ts", "../../../../../node_modules/@rjsf/utils/src/parser/schemaParser.ts", "../../../../../node_modules/@rjsf/utils/src/parser/index.ts", "../../../../../node_modules/@rjsf/utils/src/index.ts", "../../../../../node_modules/lodash/_basePickBy.js", "../../../../../node_modules/lodash/_basePick.js", "../../../../../node_modules/lodash/pick.js", "../../../../../node_modules/tslib/tslib.es6.mjs", "../../../../../node_modules/@rjsf/core/src/components/fields/ArrayField.tsx", "../../../../../node_modules/@rjsf/core/src/components/fields/BooleanField.tsx", "../../../../../node_modules/@rjsf/core/src/components/fields/MultiSchemaField.tsx", "../../../../../node_modules/@rjsf/core/src/components/fields/NumberField.tsx", "../../../../../node_modules/markdown-to-jsx/index.tsx", "../../../../../node_modules/lodash/unset.js", "../../../../../node_modules/@rjsf/core/src/components/fields/ObjectField.tsx", "../../../../../node_modules/@rjsf/core/src/components/fields/SchemaField.tsx", "../../../../../node_modules/@rjsf/core/src/components/fields/StringField.tsx", "../../../../../node_modules/@rjsf/core/src/components/fields/NullField.tsx", "../../../../../node_modules/@rjsf/core/src/components/fields/index.ts", "../../../../../node_modules/@rjsf/core/src/components/templates/ArrayFieldDescriptionTemplate.tsx", "../../../../../node_modules/@rjsf/core/src/components/templates/ArrayFieldTemplate.tsx", "../../../../../node_modules/@rjsf/core/src/components/templates/ArrayFieldTitleTemplate.tsx", "../../../../../node_modules/@rjsf/core/src/components/templates/BaseInputTemplate.tsx", "../../../../../node_modules/@rjsf/core/src/components/templates/ButtonTemplates/SubmitButton.tsx", "../../../../../node_modules/@rjsf/core/src/components/templates/ButtonTemplates/IconButton.tsx", "../../../../../node_modules/@rjsf/core/src/components/templates/ButtonTemplates/AddButton.tsx", "../../../../../node_modules/@rjsf/core/src/components/templates/ButtonTemplates/index.ts", "../../../../../node_modules/@rjsf/core/src/components/templates/ErrorList.tsx", "../../../../../node_modules/@rjsf/core/src/components/templates/FieldTemplate/FieldTemplate.tsx", "../../../../../node_modules/@rjsf/core/src/components/templates/FieldTemplate/index.ts", "../../../../../node_modules/@rjsf/core/src/components/templates/FieldErrorTemplate.tsx", "../../../../../node_modules/@rjsf/core/src/components/templates/FieldHelpTemplate.tsx", "../../../../../node_modules/@rjsf/core/src/components/templates/ObjectFieldTemplate.tsx", "../../../../../node_modules/@rjsf/core/src/components/templates/UnsupportedField.tsx", "../../../../../node_modules/@rjsf/core/src/components/templates/WrapIfAdditionalTemplate.tsx", "../../../../../node_modules/@rjsf/core/src/components/templates/index.ts", "../../../../../node_modules/@rjsf/core/src/components/widgets/AltDateWidget.tsx", "../../../../../node_modules/@rjsf/core/src/components/widgets/CheckboxWidget.tsx", "../../../../../node_modules/@rjsf/core/src/components/widgets/CheckboxesWidget.tsx", "../../../../../node_modules/@rjsf/core/src/components/widgets/ColorWidget.tsx", "../../../../../node_modules/@rjsf/core/src/components/widgets/DateWidget.tsx", "../../../../../node_modules/@rjsf/core/src/components/widgets/DateTimeWidget.tsx", "../../../../../node_modules/@rjsf/core/src/components/widgets/EmailWidget.tsx", "../../../../../node_modules/@rjsf/core/src/components/widgets/FileWidget.tsx", "../../../../../node_modules/@rjsf/core/src/components/widgets/PasswordWidget.tsx", "../../../../../node_modules/@rjsf/core/src/components/widgets/RadioWidget.tsx", "../../../../../node_modules/@rjsf/core/src/components/widgets/SelectWidget.tsx", "../../../../../node_modules/@rjsf/core/src/components/widgets/TextareaWidget.tsx", "../../../../../node_modules/@rjsf/core/src/components/widgets/TextWidget.tsx", "../../../../../node_modules/@rjsf/core/src/components/widgets/TimeWidget.tsx", "../../../../../node_modules/@rjsf/core/src/components/widgets/URLWidget.tsx", "../../../../../node_modules/@rjsf/core/src/components/widgets/UpDownWidget.tsx", "../../../../../node_modules/@rjsf/core/src/components/widgets/index.ts", "../../../../../node_modules/@rjsf/core/src/getDefaultRegistry.ts", "../../../../../node_modules/@rjsf/core/src/components/Form.tsx", "../../../../../node_modules/@rjsf/core/src/withTheme.tsx", "../../../../../node_modules/@rjsf/core/src/index.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/components/form.tsx", "../../../../../node_modules/@jupyterlab/ui-components/src/components/interface.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/components/htmlselect.tsx", "../../../../../node_modules/@jupyterlab/ui-components/src/components/iframe.ts", "../../../../../node_modules/@jupyterlab/ui-components/node_modules/@lumino/algorithm/src/array.ts", "../../../../../node_modules/@jupyterlab/ui-components/node_modules/@lumino/algorithm/src/chain.ts", "../../../../../node_modules/@jupyterlab/ui-components/node_modules/@lumino/algorithm/src/empty.ts", "../../../../../node_modules/@jupyterlab/ui-components/node_modules/@lumino/algorithm/src/enumerate.ts", "../../../../../node_modules/@jupyterlab/ui-components/node_modules/@lumino/algorithm/src/filter.ts", "../../../../../node_modules/@jupyterlab/ui-components/node_modules/@lumino/algorithm/src/find.ts", "../../../../../node_modules/@jupyterlab/ui-components/node_modules/@lumino/algorithm/src/iter.ts", "../../../../../node_modules/@jupyterlab/ui-components/node_modules/@lumino/algorithm/src/map.ts", "../../../../../node_modules/@jupyterlab/ui-components/node_modules/@lumino/algorithm/src/range.ts", "../../../../../node_modules/@jupyterlab/ui-components/node_modules/@lumino/algorithm/src/reduce.ts", "../../../../../node_modules/@jupyterlab/ui-components/node_modules/@lumino/algorithm/src/repeat.ts", "../../../../../node_modules/@jupyterlab/ui-components/node_modules/@lumino/algorithm/src/retro.ts", "../../../../../node_modules/@jupyterlab/ui-components/node_modules/@lumino/algorithm/src/sort.ts", "../../../../../node_modules/@jupyterlab/ui-components/node_modules/@lumino/algorithm/src/stride.ts", "../../../../../node_modules/@jupyterlab/ui-components/node_modules/@lumino/algorithm/src/string.ts", "../../../../../node_modules/@jupyterlab/ui-components/node_modules/@lumino/algorithm/src/take.ts", "../../../../../node_modules/@jupyterlab/ui-components/node_modules/@lumino/algorithm/src/zip.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/components/menu.ts", "../../../../../node_modules/@jupyterlab/ui-components/node_modules/@lumino/collections/src/linkedlist.ts", "../../../../../node_modules/@jupyterlab/ui-components/node_modules/@lumino/messaging/src/index.ts", "../../../../../node_modules/@jupyterlab/ui-components/node_modules/@lumino/properties/src/index.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/components/vdom.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/components/toolbar.tsx", "../../../../../node_modules/@jupyterlab/ui-components/src/components/panelwithtoolbar.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/components/search.tsx", "../../../../../node_modules/@jupyterlab/ui-components/src/components/sidepanel.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/components/spinner.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/components/styling.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/components/switch.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/components/windowedlist.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/components/index.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/hoverbox.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/tokens.ts", "../../../../../node_modules/@jupyterlab/ui-components/src/FormRendererRegistry.tsx", "../../../../../node_modules/@jupyterlab/ui-components/src/index.ts", "../../../../../node_modules/@babel/runtime/helpers/esm/extends.js", "../../../../../node_modules/@babel/runtime/helpers/esm/typeof.js", "../../../../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js", "../../../../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js", "../../../../../node_modules/@babel/runtime/helpers/esm/defineProperty.js", "../../../../../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js", "../../../../../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js", "../../../../../node_modules/@jupyterlab/observables/src/observablemap.ts", "../../../../../node_modules/@jupyterlab/observables/node_modules/@lumino/algorithm/src/array.ts", "../../../../../node_modules/@jupyterlab/observables/node_modules/@lumino/algorithm/src/chain.ts", "../../../../../node_modules/@jupyterlab/observables/node_modules/@lumino/algorithm/src/empty.ts", "../../../../../node_modules/@jupyterlab/observables/node_modules/@lumino/algorithm/src/enumerate.ts", "../../../../../node_modules/@jupyterlab/observables/node_modules/@lumino/algorithm/src/filter.ts", "../../../../../node_modules/@jupyterlab/observables/node_modules/@lumino/algorithm/src/find.ts", "../../../../../node_modules/@jupyterlab/observables/node_modules/@lumino/algorithm/src/iter.ts", "../../../../../node_modules/@jupyterlab/observables/node_modules/@lumino/algorithm/src/map.ts", "../../../../../node_modules/@jupyterlab/observables/node_modules/@lumino/algorithm/src/range.ts", "../../../../../node_modules/@jupyterlab/observables/node_modules/@lumino/algorithm/src/reduce.ts", "../../../../../node_modules/@jupyterlab/observables/node_modules/@lumino/algorithm/src/repeat.ts", "../../../../../node_modules/@jupyterlab/observables/node_modules/@lumino/algorithm/src/retro.ts", "../../../../../node_modules/@jupyterlab/observables/node_modules/@lumino/algorithm/src/sort.ts", "../../../../../node_modules/@jupyterlab/observables/node_modules/@lumino/algorithm/src/stride.ts", "../../../../../node_modules/@jupyterlab/observables/node_modules/@lumino/algorithm/src/string.ts", "../../../../../node_modules/@jupyterlab/observables/node_modules/@lumino/algorithm/src/take.ts", "../../../../../node_modules/@jupyterlab/observables/node_modules/@lumino/algorithm/src/zip.ts", "../../../../../node_modules/@jupyterlab/observables/node_modules/@lumino/collections/src/linkedlist.ts", "../../../../../node_modules/@jupyterlab/observables/node_modules/@lumino/messaging/src/index.ts", "../../../../../node_modules/@jupyterlab/observables/src/observablejson.ts", "../../../../../node_modules/@jupyterlab/observables/src/observablestring.ts", "../../../../../node_modules/@jupyterlab/observables/src/observablelist.ts", "../../../../../node_modules/@jupyterlab/observables/src/undoablelist.ts", "../../../../../node_modules/@jupyterlab/observables/src/modeldb.ts", "../../../../../node_modules/@jupyterlab/observables/src/index.ts", "../../../../../node_modules/@jupyterlab/statusbar/src/components/hover.tsx", "../../../../../node_modules/@jupyterlab/statusbar/src/components/text.tsx", "../../../../../node_modules/@jupyterlab/statusbar/src/components/group.tsx", "../../../../../node_modules/@jupyterlab/statusbar/src/components/progressBar.tsx", "../../../../../node_modules/@jupyterlab/statusbar/src/components/progressCircle.tsx", "../../../../../node_modules/@jupyterlab/statusbar/src/components/index.ts", "../../../../../node_modules/@jupyterlab/statusbar/node_modules/@lumino/algorithm/src/array.ts", "../../../../../node_modules/@jupyterlab/statusbar/node_modules/@lumino/algorithm/src/chain.ts", "../../../../../node_modules/@jupyterlab/statusbar/node_modules/@lumino/algorithm/src/empty.ts", "../../../../../node_modules/@jupyterlab/statusbar/node_modules/@lumino/algorithm/src/enumerate.ts", "../../../../../node_modules/@jupyterlab/statusbar/node_modules/@lumino/algorithm/src/filter.ts", "../../../../../node_modules/@jupyterlab/statusbar/node_modules/@lumino/algorithm/src/find.ts", "../../../../../node_modules/@jupyterlab/statusbar/node_modules/@lumino/algorithm/src/iter.ts", "../../../../../node_modules/@jupyterlab/statusbar/node_modules/@lumino/algorithm/src/map.ts", "../../../../../node_modules/@jupyterlab/statusbar/node_modules/@lumino/algorithm/src/range.ts", "../../../../../node_modules/@jupyterlab/statusbar/node_modules/@lumino/algorithm/src/reduce.ts", "../../../../../node_modules/@jupyterlab/statusbar/node_modules/@lumino/algorithm/src/repeat.ts", "../../../../../node_modules/@jupyterlab/statusbar/node_modules/@lumino/algorithm/src/retro.ts", "../../../../../node_modules/@jupyterlab/statusbar/node_modules/@lumino/algorithm/src/sort.ts", "../../../../../node_modules/@jupyterlab/statusbar/node_modules/@lumino/algorithm/src/stride.ts", "../../../../../node_modules/@jupyterlab/statusbar/node_modules/@lumino/algorithm/src/string.ts", "../../../../../node_modules/@jupyterlab/statusbar/node_modules/@lumino/algorithm/src/take.ts", "../../../../../node_modules/@jupyterlab/statusbar/node_modules/@lumino/algorithm/src/zip.ts", "../../../../../node_modules/@jupyterlab/statusbar/src/statusbar.ts", "../../../../../node_modules/@jupyterlab/statusbar/src/tokens.ts", "../../../../../node_modules/@jupyterlab/statusbar/src/index.ts"],
  "sourcesContent": ["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * A type alias for a JSON primitive.\n */\nexport type JSONPrimitive = boolean | number | string | null;\n\n/**\n * A type alias for a JSON value.\n */\nexport type JSONValue = JSONPrimitive | JSONObject | JSONArray;\n\n/**\n * A type definition for a JSON object.\n */\nexport interface JSONObject {\n  [key: string]: JSONValue;\n}\n\n/**\n * A type definition for a JSON array.\n */\nexport interface JSONArray extends Array<JSONValue> {}\n\n/**\n * A type definition for a readonly JSON object.\n */\nexport interface ReadonlyJSONObject {\n  readonly [key: string]: ReadonlyJSONValue;\n}\n\n/**\n * A type definition for a readonly JSON array.\n */\nexport interface ReadonlyJSONArray extends ReadonlyArray<ReadonlyJSONValue> {}\n\n/**\n * A type alias for a readonly JSON value.\n */\nexport type ReadonlyJSONValue =\n  | JSONPrimitive\n  | ReadonlyJSONObject\n  | ReadonlyJSONArray;\n\n/**\n * A type alias for a partial JSON value.\n *\n * Note: Partial here means that JSON object attributes can be `undefined`.\n */\nexport type PartialJSONValue =\n  | JSONPrimitive\n  | PartialJSONObject\n  | PartialJSONArray;\n\n/**\n * A type definition for a partial JSON object.\n *\n * Note: Partial here means that the JSON object attributes can be `undefined`.\n */\nexport interface PartialJSONObject {\n  [key: string]: PartialJSONValue | undefined;\n}\n\n/**\n * A type definition for a partial JSON array.\n *\n * Note: Partial here means that JSON object attributes can be `undefined`.\n */\nexport interface PartialJSONArray extends Array<PartialJSONValue> {}\n\n/**\n * A type definition for a readonly partial JSON object.\n *\n * Note: Partial here means that JSON object attributes can be `undefined`.\n */\nexport interface ReadonlyPartialJSONObject {\n  readonly [key: string]: ReadonlyPartialJSONValue | undefined;\n}\n\n/**\n * A type definition for a readonly partial JSON array.\n *\n * Note: Partial here means that JSON object attributes can be `undefined`.\n */\nexport interface ReadonlyPartialJSONArray\n  extends ReadonlyArray<ReadonlyPartialJSONValue> {}\n\n/**\n * A type alias for a readonly partial JSON value.\n *\n * Note: Partial here means that JSON object attributes can be `undefined`.\n */\nexport type ReadonlyPartialJSONValue =\n  | JSONPrimitive\n  | ReadonlyPartialJSONObject\n  | ReadonlyPartialJSONArray;\n\n/**\n * The namespace for JSON-specific functions.\n */\nexport namespace JSONExt {\n  /**\n   * A shared frozen empty JSONObject\n   */\n  export const emptyObject = Object.freeze({}) as ReadonlyJSONObject;\n\n  /**\n   * A shared frozen empty JSONArray\n   */\n  export const emptyArray = Object.freeze([]) as ReadonlyJSONArray;\n\n  /**\n   * Test whether a JSON value is a primitive.\n   *\n   * @param value - The JSON value of interest.\n   *\n   * @returns `true` if the value is a primitive,`false` otherwise.\n   */\n  export function isPrimitive(\n    value: ReadonlyPartialJSONValue\n  ): value is JSONPrimitive {\n    return (\n      value === null ||\n      typeof value === 'boolean' ||\n      typeof value === 'number' ||\n      typeof value === 'string'\n    );\n  }\n\n  /**\n   * Test whether a JSON value is an array.\n   *\n   * @param value - The JSON value of interest.\n   *\n   * @returns `true` if the value is a an array, `false` otherwise.\n   */\n  export function isArray(value: JSONValue): value is JSONArray;\n  export function isArray(value: ReadonlyJSONValue): value is ReadonlyJSONArray;\n  export function isArray(value: PartialJSONValue): value is PartialJSONArray;\n  export function isArray(\n    value: ReadonlyPartialJSONValue\n  ): value is ReadonlyPartialJSONArray;\n  export function isArray(value: ReadonlyPartialJSONValue): boolean {\n    return Array.isArray(value);\n  }\n\n  /**\n   * Test whether a JSON value is an object.\n   *\n   * @param value - The JSON value of interest.\n   *\n   * @returns `true` if the value is a an object, `false` otherwise.\n   */\n  export function isObject(value: JSONValue): value is JSONObject;\n  export function isObject(\n    value: ReadonlyJSONValue\n  ): value is ReadonlyJSONObject;\n  export function isObject(value: PartialJSONValue): value is PartialJSONObject;\n  export function isObject(\n    value: ReadonlyPartialJSONValue\n  ): value is ReadonlyPartialJSONObject;\n  export function isObject(value: ReadonlyPartialJSONValue): boolean {\n    return !isPrimitive(value) && !isArray(value);\n  }\n\n  /**\n   * Compare two JSON values for deep equality.\n   *\n   * @param first - The first JSON value of interest.\n   *\n   * @param second - The second JSON value of interest.\n   *\n   * @returns `true` if the values are equivalent, `false` otherwise.\n   */\n  export function deepEqual(\n    first: ReadonlyPartialJSONValue,\n    second: ReadonlyPartialJSONValue\n  ): boolean {\n    // Check referential and primitive equality first.\n    if (first === second) {\n      return true;\n    }\n\n    // If one is a primitive, the `===` check ruled out the other.\n    if (isPrimitive(first) || isPrimitive(second)) {\n      return false;\n    }\n\n    // Test whether they are arrays.\n    let a1 = isArray(first);\n    let a2 = isArray(second);\n\n    // Bail if the types are different.\n    if (a1 !== a2) {\n      return false;\n    }\n\n    // If they are both arrays, compare them.\n    if (a1 && a2) {\n      return deepArrayEqual(\n        first as ReadonlyPartialJSONArray,\n        second as ReadonlyPartialJSONArray\n      );\n    }\n\n    // At this point, they must both be objects.\n    return deepObjectEqual(\n      first as ReadonlyPartialJSONObject,\n      second as ReadonlyPartialJSONObject\n    );\n  }\n\n  /**\n   * Create a deep copy of a JSON value.\n   *\n   * @param value - The JSON value to copy.\n   *\n   * @returns A deep copy of the given JSON value.\n   */\n  export function deepCopy<T extends ReadonlyPartialJSONValue>(value: T): T {\n    // Do nothing for primitive values.\n    if (isPrimitive(value)) {\n      return value;\n    }\n\n    // Deep copy an array.\n    if (isArray(value)) {\n      return deepArrayCopy(value);\n    }\n\n    // Deep copy an object.\n    return deepObjectCopy(value);\n  }\n\n  /**\n   * Compare two JSON arrays for deep equality.\n   */\n  function deepArrayEqual(\n    first: ReadonlyPartialJSONArray,\n    second: ReadonlyPartialJSONArray\n  ): boolean {\n    // Check referential equality first.\n    if (first === second) {\n      return true;\n    }\n\n    // Test the arrays for equal length.\n    if (first.length !== second.length) {\n      return false;\n    }\n\n    // Compare the values for equality.\n    for (let i = 0, n = first.length; i < n; ++i) {\n      if (!deepEqual(first[i], second[i])) {\n        return false;\n      }\n    }\n\n    // At this point, the arrays are equal.\n    return true;\n  }\n\n  /**\n   * Compare two JSON objects for deep equality.\n   */\n  function deepObjectEqual(\n    first: ReadonlyPartialJSONObject,\n    second: ReadonlyPartialJSONObject\n  ): boolean {\n    // Check referential equality first.\n    if (first === second) {\n      return true;\n    }\n\n    // Check for the first object's keys in the second object.\n    for (let key in first) {\n      if (first[key] !== undefined && !(key in second)) {\n        return false;\n      }\n    }\n\n    // Check for the second object's keys in the first object.\n    for (let key in second) {\n      if (second[key] !== undefined && !(key in first)) {\n        return false;\n      }\n    }\n\n    // Compare the values for equality.\n    for (let key in first) {\n      // Get the values.\n      let firstValue = first[key];\n      let secondValue = second[key];\n\n      // If both are undefined, ignore the key.\n      if (firstValue === undefined && secondValue === undefined) {\n        continue;\n      }\n\n      // If only one value is undefined, the objects are not equal.\n      if (firstValue === undefined || secondValue === undefined) {\n        return false;\n      }\n\n      // Compare the values.\n      if (!deepEqual(firstValue, secondValue)) {\n        return false;\n      }\n    }\n\n    // At this point, the objects are equal.\n    return true;\n  }\n\n  /**\n   * Create a deep copy of a JSON array.\n   */\n  function deepArrayCopy(value: any): any {\n    let result = new Array<any>(value.length);\n    for (let i = 0, n = value.length; i < n; ++i) {\n      result[i] = deepCopy(value[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Create a deep copy of a JSON object.\n   */\n  function deepObjectCopy(value: any): any {\n    let result: any = {};\n    for (let key in value) {\n      // Ignore undefined values.\n      let subvalue = value[key];\n      if (subvalue === undefined) {\n        continue;\n      }\n      result[key] = deepCopy(subvalue);\n    }\n    return result;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * An object which stores MIME data for general application use.\n *\n * #### Notes\n * This class does not attempt to enforce \"correctness\" of MIME types\n * and their associated data. Since this class is designed to transfer\n * arbitrary data and objects within the same application, it assumes\n * that the user provides correct and accurate data.\n */\nexport class MimeData {\n  /**\n   * Get an array of the MIME types contained within the dataset.\n   *\n   * @returns A new array of the MIME types, in order of insertion.\n   */\n  types(): string[] {\n    return this._types.slice();\n  }\n\n  /**\n   * Test whether the dataset has an entry for the given type.\n   *\n   * @param mime - The MIME type of interest.\n   *\n   * @returns `true` if the dataset contains a value for the given\n   *   MIME type, `false` otherwise.\n   */\n  hasData(mime: string): boolean {\n    return this._types.indexOf(mime) !== -1;\n  }\n\n  /**\n   * Get the data value for the given MIME type.\n   *\n   * @param mime - The MIME type of interest.\n   *\n   * @returns The value for the given MIME type, or `undefined` if\n   *   the dataset does not contain a value for the type.\n   */\n  getData(mime: string): any | undefined {\n    let i = this._types.indexOf(mime);\n    return i !== -1 ? this._values[i] : undefined;\n  }\n\n  /**\n   * Set the data value for the given MIME type.\n   *\n   * @param mime - The MIME type of interest.\n   *\n   * @param data - The data value for the given MIME type.\n   *\n   * #### Notes\n   * This will overwrite any previous entry for the MIME type.\n   */\n  setData(mime: string, data: unknown): void {\n    this.clearData(mime);\n    this._types.push(mime);\n    this._values.push(data);\n  }\n\n  /**\n   * Remove the data entry for the given MIME type.\n   *\n   * @param mime - The MIME type of interest.\n   *\n   * #### Notes\n   * This is a no-op if there is no entry for the given MIME type.\n   */\n  clearData(mime: string): void {\n    let i = this._types.indexOf(mime);\n    if (i !== -1) {\n      this._types.splice(i, 1);\n      this._values.splice(i, 1);\n    }\n  }\n\n  /**\n   * Remove all data entries from the dataset.\n   */\n  clear(): void {\n    this._types.length = 0;\n    this._values.length = 0;\n  }\n\n  private _types: string[] = [];\n  private _values: any[] = [];\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * A class which wraps a promise into a delegate object.\n *\n * #### Notes\n * This class is useful when the logic to resolve or reject a promise\n * cannot be defined at the point where the promise is created.\n */\nexport class PromiseDelegate<T> {\n  /**\n   * Construct a new promise delegate.\n   */\n  constructor() {\n    this.promise = new Promise<T>((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  /**\n   * The promise wrapped by the delegate.\n   */\n  readonly promise: Promise<T>;\n\n  /**\n   * Resolve the wrapped promise with the given value.\n   *\n   * @param value - The value to use for resolving the promise.\n   */\n  resolve(value: T | PromiseLike<T>): void {\n    let resolve = this._resolve;\n    resolve(value);\n  }\n\n  /**\n   * Reject the wrapped promise with the given value.\n   *\n   * @reason - The reason for rejecting the promise.\n   */\n  reject(reason: unknown): void {\n    let reject = this._reject;\n    reject(reason);\n  }\n\n  private _resolve: (value: T | PromiseLike<T>) => void;\n  private _reject: (reason: any) => void;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * A runtime object which captures compile-time type information.\n *\n * #### Notes\n * A token captures the compile-time type of an interface or class in\n * an object which can be used at runtime in a type-safe fashion.\n */\nexport class Token<T> {\n  /**\n   * Construct a new token.\n   *\n   * @param name - A human readable name for the token.\n   * @param description - Token purpose description for documentation.\n   */\n  constructor(name: string, description?: string) {\n    this.name = name;\n    this.description = description ?? '';\n    this._tokenStructuralPropertyT = null!;\n  }\n\n  /**\n   * Token purpose description.\n   */\n  readonly description?: string; // FIXME remove `?` for the next major version\n\n  /**\n   * The human readable name for the token.\n   *\n   * #### Notes\n   * This can be useful for debugging and logging.\n   */\n  readonly name: string;\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  private _tokenStructuralPropertyT: T;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n// Fallback\nexport function fallbackRandomValues(buffer: Uint8Array): void {\n  let value = 0;\n  for (let i = 0, n = buffer.length; i < n; ++i) {\n    if (i % 4 === 0) {\n      value = (Math.random() * 0xffffffff) >>> 0;\n    }\n    buffer[i] = value & 0xff;\n    value >>>= 8;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\nimport { fallbackRandomValues } from './random';\n\n// Declare ambient variables for `window` and `require` to avoid a\n// hard dependency on both. This package must run on node.\ndeclare let window: any;\n\n/**\n * The namespace for random number related functionality.\n */\nexport namespace Random {\n  /**\n   * A function which generates random bytes.\n   *\n   * @param buffer - The `Uint8Array` to fill with random bytes.\n   *\n   * #### Notes\n   * A cryptographically strong random number generator will be used if\n   * available. Otherwise, `Math.random` will be used as a fallback for\n   * randomness.\n   *\n   * The following RNGs are supported, listed in order of precedence:\n   *   - `window.crypto.getRandomValues`\n   *   - `window.msCrypto.getRandomValues`\n   *   - `require('crypto').randomFillSync\n   *   - `require('crypto').randomBytes\n   *   - `Math.random`\n   */\n  export const getRandomValues = (() => {\n    // Look up the crypto module if available.\n    const crypto: any =\n      (typeof window !== 'undefined' && (window.crypto || window.msCrypto)) ||\n      null;\n\n    // Modern browsers and IE 11\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n      return function getRandomValues(buffer: Uint8Array): void {\n        return crypto.getRandomValues(buffer);\n      };\n    }\n\n    // Fallback\n    return fallbackRandomValues;\n  })();\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * A function which creates a function that generates UUID v4 identifiers.\n *\n * @returns A new function that creates a UUID v4 string.\n *\n * #### Notes\n * This implementation complies with RFC 4122.\n *\n * This uses `Random.getRandomValues()` for random bytes, which in\n * turn will use the underlying `crypto` module of the platform if\n * it is available. The fallback for randomness is `Math.random`.\n */\nexport function uuid4Factory(\n  getRandomValues: (bytes: Uint8Array) => void\n): () => string {\n  // Create a 16 byte array to hold the random values.\n  const bytes = new Uint8Array(16);\n\n  // Create a look up table from bytes to hex strings.\n  const lut = new Array<string>(256);\n\n  // Pad the single character hex digits with a leading zero.\n  for (let i = 0; i < 16; ++i) {\n    lut[i] = '0' + i.toString(16);\n  }\n\n  // Populate the rest of the hex digits.\n  for (let i = 16; i < 256; ++i) {\n    lut[i] = i.toString(16);\n  }\n\n  // Return a function which generates the UUID.\n  return function uuid4(): string {\n    // Get a new batch of random values.\n    getRandomValues(bytes);\n\n    // Set the UUID version number to 4.\n    bytes[6] = 0x40 | (bytes[6] & 0x0f);\n\n    // Set the clock sequence bit to the RFC spec.\n    bytes[8] = 0x80 | (bytes[8] & 0x3f);\n\n    // Assemble the UUID string.\n    return (\n      lut[bytes[0]] +\n      lut[bytes[1]] +\n      lut[bytes[2]] +\n      lut[bytes[3]] +\n      '-' +\n      lut[bytes[4]] +\n      lut[bytes[5]] +\n      '-' +\n      lut[bytes[6]] +\n      lut[bytes[7]] +\n      '-' +\n      lut[bytes[8]] +\n      lut[bytes[9]] +\n      '-' +\n      lut[bytes[10]] +\n      lut[bytes[11]] +\n      lut[bytes[12]] +\n      lut[bytes[13]] +\n      lut[bytes[14]] +\n      lut[bytes[15]]\n    );\n  };\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { Random } from './random.browser';\nimport { uuid4Factory } from './uuid';\n\n/**\n * The namespace for UUID related functionality.\n */\nexport namespace UUID {\n  /**\n   * A function which generates UUID v4 identifiers.\n   *\n   * @returns A new UUID v4 string.\n   *\n   * #### Notes\n   * This implementation complies with RFC 4122.\n   *\n   * This uses `Random.getRandomValues()` for random bytes, which in\n   * turn will use the underlying `crypto` module of the platform if\n   * it is available. The fallback for randomness is `Math.random`.\n   */\n  export const uuid4 = uuid4Factory(Random.getRandomValues);\n}\n", "/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n\n/**\n * Normalize domain\n *\n * @param domain Domain to normalize\n * @returns Normalized domain\n */\nexport function normalizeDomain(domain: string): string {\n  return domain.replace('-', '_');\n}\n", "/* ----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|\n| Base gettext.js implementation.\n| Copyright (c) Guillaume Potier.\n| Distributed under the terms of the Modified MIT License.\n| See: https://github.com/guillaumepotier/gettext.js\n|\n| Type definitions.\n| Copyright (c) Julien Crouzet and Florian Schwingenschl\u00F6gl.\n| Distributed under the terms of the Modified MIT License.\n| See: https://github.com/DefinitelyTyped/DefinitelyTyped\n|----------------------------------------------------------------------------*/\n\nimport { normalizeDomain } from './utils';\n\n/**\n * A plural form function.\n */\ntype PluralForm = (n: number) => number;\n\n/**\n * Metadata for a language pack.\n */\ninterface IJsonDataHeader {\n  /**\n   * Language locale. Example: es_CO, es-CO.\n   */\n  language: string;\n\n  /**\n   * The domain of the translation, usually the normalized package name.\n   * Example: \"jupyterlab\", \"jupyterlab_git\"\n   *\n   * #### Note\n   * Normalization replaces `-` by `_` in package name.\n   */\n  domain: string;\n\n  /**\n   * String describing the plural of the given language.\n   * See: https://www.gnu.org/software/gettext/manual/html_node/Translating-plural-forms.html\n   */\n  pluralForms: string;\n}\n\n/**\n * Translatable string messages.\n */\ninterface IJsonDataMessages {\n  /**\n   * Translation strings for a given msg_id.\n   */\n  [key: string]: string[] | IJsonDataHeader;\n}\n\n/**\n * Translatable string messages incluing metadata.\n */\ninterface IJsonData extends IJsonDataMessages {\n  /**\n   * Metadata of the language bundle.\n   */\n  '': IJsonDataHeader;\n}\n\n/**\n * Configurable options for the Gettext constructor.\n */\ninterface IOptions {\n  /**\n   * Language locale. Example: es_CO, es-CO.\n   */\n  locale?: string;\n\n  /**\n   * The domain of the translation, usually the normalized package name.\n   * Example: \"jupyterlab\", \"jupyterlab_git\"\n   *\n   * #### Note\n   * Normalization replaces `-` by `_` in package name.\n   */\n  domain?: string;\n\n  /**\n   * The delimiter to use when adding contextualized strings.\n   */\n  contextDelimiter?: string;\n\n  /**\n   * Translation message strings.\n   */\n  messages?: Array<string>;\n\n  /**\n   * String describing the plural of the given language.\n   * See: https://www.gnu.org/software/gettext/manual/html_node/Translating-plural-forms.html\n   */\n  pluralForms?: string;\n\n  /**\n   * The string prefix to add to localized strings.\n   */\n  stringsPrefix?: string;\n\n  /**\n   * Plural form function.\n   */\n  pluralFunc?: PluralForm;\n}\n\n/**\n * Options of the main translation `t` method.\n */\ninterface ITOptions {\n  /**\n   * String describing the plural of the given language.\n   * See: https://www.gnu.org/software/gettext/manual/html_node/Translating-plural-forms.html\n   */\n  pluralForm?: string;\n\n  /**\n   * Plural form function.\n   */\n  pluralFunc?: PluralForm;\n\n  /**\n   * Language locale. Example: es_CO, es-CO.\n   */\n  locale?: string;\n}\n\n/**\n * Gettext class providing localization methods.\n */\nclass Gettext {\n  constructor(options?: IOptions) {\n    options = options || {};\n\n    // default values that could be overridden in Gettext() constructor\n    this._defaults = {\n      domain: 'messages',\n      locale: document.documentElement.getAttribute('lang') || 'en',\n      pluralFunc: function (n: number) {\n        return { nplurals: 2, plural: n != 1 ? 1 : 0 };\n      },\n      contextDelimiter: String.fromCharCode(4), // \\u0004\n      stringsPrefix: ''\n    };\n\n    // Ensure the correct separator is used\n    this._locale = (options.locale || this._defaults.locale).replace('_', '-');\n    this._domain = normalizeDomain(options.domain || this._defaults.domain);\n    this._contextDelimiter =\n      options.contextDelimiter || this._defaults.contextDelimiter;\n    this._stringsPrefix = options.stringsPrefix || this._defaults.stringsPrefix;\n    this._pluralFuncs = {};\n    this._dictionary = {};\n    this._pluralForms = {};\n\n    if (options.messages) {\n      this._dictionary[this._domain] = {};\n      this._dictionary[this._domain][this._locale] = options.messages;\n    }\n\n    if (options.pluralForms) {\n      this._pluralForms[this._locale] = options.pluralForms;\n    }\n  }\n\n  /**\n   * Set current context delimiter.\n   *\n   * @param delimiter - The delimiter to set.\n   */\n  setContextDelimiter(delimiter: string): void {\n    this._contextDelimiter = delimiter;\n  }\n\n  /**\n   * Get current context delimiter.\n   *\n   * @returns The current delimiter.\n   */\n  getContextDelimiter(): string {\n    return this._contextDelimiter;\n  }\n\n  /**\n   * Set current locale.\n   *\n   * @param locale - The locale to set.\n   */\n  setLocale(locale: string): void {\n    this._locale = locale.replace('_', '-');\n  }\n\n  /**\n   * Get current locale.\n   *\n   * @returns The current locale.\n   */\n  getLocale(): string {\n    return this._locale;\n  }\n\n  /**\n   * Set current domain.\n   *\n   * @param domain - The domain to set.\n   */\n  setDomain(domain: string): void {\n    this._domain = normalizeDomain(domain);\n  }\n\n  /**\n   * Get current domain.\n   *\n   * @returns The current domain string.\n   */\n  getDomain(): string {\n    return this._domain;\n  }\n\n  /**\n   * Set current strings prefix.\n   *\n   * @param prefix - The string prefix to set.\n   */\n  setStringsPrefix(prefix: string): void {\n    this._stringsPrefix = prefix;\n  }\n\n  /**\n   * Get current strings prefix.\n   *\n   * @returns The strings prefix.\n   */\n  getStringsPrefix(): string {\n    return this._stringsPrefix;\n  }\n\n  /**\n   * `sprintf` equivalent, takes a string and some arguments to make a\n   * computed string.\n   *\n   * @param fmt - The string to interpolate.\n   * @param args - The variables to use in interpolation.\n   *\n   * ### Examples\n   * strfmt(\"%1 dogs are in %2\", 7, \"the kitchen\"); => \"7 dogs are in the kitchen\"\n   * strfmt(\"I like %1, bananas and %1\", \"apples\"); => \"I like apples, bananas and apples\"\n   */\n  static strfmt(fmt: string, ...args: any[]): string {\n    return (\n      fmt\n        // put space after double % to prevent placeholder replacement of such matches\n        .replace(/%%/g, '%% ')\n        // replace placeholders\n        .replace(/%(\\d+)/g, function (str, p1) {\n          return args[p1 - 1];\n        })\n        // replace double % and space with single %\n        .replace(/%% /g, '%')\n    );\n  }\n\n  /**\n   * Load json translations strings (In Jed 2.x format).\n   *\n   * @param jsonData - The translation strings plus metadata.\n   * @param domain - The translation domain, e.g. \"jupyterlab\".\n   */\n  loadJSON(jsonData: IJsonData, domain: string): void {\n    if (\n      !jsonData[''] ||\n      !jsonData['']['language'] ||\n      !jsonData['']['pluralForms']\n    ) {\n      throw new Error(\n        `Wrong jsonData, it must have an empty key (\"\") with \"language\" and \"pluralForms\" information: ${jsonData}`\n      );\n    }\n\n    domain = normalizeDomain(domain);\n\n    let headers = jsonData[''];\n    let jsonDataCopy = JSON.parse(JSON.stringify(jsonData));\n    delete jsonDataCopy[''];\n\n    this.setMessages(\n      domain || this._defaults.domain,\n      headers['language'],\n      jsonDataCopy,\n      headers['pluralForms']\n    );\n  }\n\n  /**\n   * Shorthand for gettext.\n   *\n   * @param msgid - The singular string to translate.\n   * @param args - Any additional values to use with interpolation.\n   *\n   * @returns A translated string if found, or the original string.\n   *\n   * ### Notes\n   * This is not a private method (starts with an underscore) it is just\n   * a shorter and standard way to call these methods.\n   */\n  __(msgid: string, ...args: any[]): string {\n    return this.gettext(msgid, ...args);\n  }\n\n  /**\n   * Shorthand for ngettext.\n   *\n   * @param msgid - The singular string to translate.\n   * @param msgid_plural - The plural string to translate.\n   * @param n - The number for pluralization.\n   * @param args - Any additional values to use with interpolation.\n   *\n   * @returns A translated string if found, or the original string.\n   *\n   * ### Notes\n   * This is not a private method (starts with an underscore) it is just\n   * a shorter and standard way to call these methods.\n   */\n  _n(msgid: string, msgid_plural: string, n: number, ...args: any[]): string {\n    return this.ngettext(msgid, msgid_plural, n, ...args);\n  }\n\n  /**\n   * Shorthand for pgettext.\n   *\n   * @param msgctxt - The message context.\n   * @param msgid - The singular string to translate.\n   * @param args - Any additional values to use with interpolation.\n   *\n   * @returns A translated string if found, or the original string.\n   *\n   * ### Notes\n   * This is not a private method (starts with an underscore) it is just\n   * a shorter and standard way to call these methods.\n   */\n  _p(msgctxt: string, msgid: string, ...args: any[]): string {\n    return this.pgettext(msgctxt, msgid, ...args);\n  }\n\n  /**\n   * Shorthand for npgettext.\n   *\n   * @param msgctxt - The message context.\n   * @param msgid - The singular string to translate.\n   * @param msgid_plural - The plural string to translate.\n   * @param n - The number for pluralization.\n   * @param args - Any additional values to use with interpolation.\n   *\n   * @returns A translated string if found, or the original string.\n   *\n   * ### Notes\n   * This is not a private method (starts with an underscore) it is just\n   * a shorter and standard way to call these methods.\n   */\n  _np(\n    msgctxt: string,\n    msgid: string,\n    msgid_plural: string,\n    n: number,\n    ...args: any[]\n  ): string {\n    return this.npgettext(msgctxt, msgid, msgid_plural, n, ...args);\n  }\n\n  /**\n   * Translate a singular string with extra interpolation values.\n   *\n   * @param msgid - The singular string to translate.\n   * @param args - Any additional values to use with interpolation.\n   *\n   * @returns A translated string if found, or the original string.\n   */\n  gettext(msgid: string, ...args: any[]): string {\n    return this.dcnpgettext('', '', msgid, '', 0, ...args);\n  }\n\n  /**\n   * Translate a plural string with extra interpolation values.\n   *\n   * @param msgid - The singular string to translate.\n   * @param args - Any additional values to use with interpolation.\n   *\n   * @returns A translated string if found, or the original string.\n   */\n  ngettext(\n    msgid: string,\n    msgid_plural: string,\n    n: number,\n    ...args: any[]\n  ): string {\n    return this.dcnpgettext('', '', msgid, msgid_plural, n, ...args);\n  }\n\n  /**\n   * Translate a contextualized singular string with extra interpolation values.\n   *\n   * @param msgctxt - The message context.\n   * @param msgid - The singular string to translate.\n   * @param args - Any additional values to use with interpolation.\n   *\n   * @returns A translated string if found, or the original string.\n   *\n   * ### Notes\n   * This is not a private method (starts with an underscore) it is just\n   * a shorter and standard way to call these methods.\n   */\n  pgettext(msgctxt: string, msgid: string, ...args: any[]): string {\n    return this.dcnpgettext('', msgctxt, msgid, '', 0, ...args);\n  }\n\n  /**\n   * Translate a contextualized plural string with extra interpolation values.\n   *\n   * @param msgctxt - The message context.\n   * @param msgid - The singular string to translate.\n   * @param msgid_plural - The plural string to translate.\n   * @param n - The number for pluralization.\n   * @param args - Any additional values to use with interpolation\n   *\n   * @returns A translated string if found, or the original string.\n   */\n  npgettext(\n    msgctxt: string,\n    msgid: string,\n    msgid_plural: string,\n    n: number,\n    ...args: any[]\n  ): string {\n    return this.dcnpgettext('', msgctxt, msgid, msgid_plural, n, ...args);\n  }\n\n  /**\n   * Translate a singular string with extra interpolation values.\n   *\n   * @param domain - The translations domain.\n   * @param msgctxt - The message context.\n   * @param msgid - The singular string to translate.\n   * @param msgid_plural - The plural string to translate.\n   * @param n - The number for pluralization.\n   * @param args - Any additional values to use with interpolation\n   *\n   * @returns A translated string if found, or the original string.\n   */\n  dcnpgettext(\n    domain: string,\n    msgctxt: string,\n    msgid: string,\n    msgid_plural: string,\n    n: number,\n    ...args: any[]\n  ): string {\n    domain = normalizeDomain(domain) || this._domain;\n\n    let translation: Array<string>;\n    let key: string = msgctxt\n      ? msgctxt + this._contextDelimiter + msgid\n      : msgid;\n    let options: any = { pluralForm: false };\n    let exist: boolean = false;\n    let locale: string = this._locale;\n    let locales = this.expandLocale(this._locale);\n\n    for (let i in locales) {\n      locale = locales[i];\n      exist =\n        this._dictionary[domain] &&\n        this._dictionary[domain][locale] &&\n        this._dictionary[domain][locale][key];\n\n      // check condition are valid (.length)\n      // because it's not possible to define both a singular and a plural form of the same msgid,\n      // we need to check that the stored form is the same as the expected one.\n      // if not, we'll just ignore the translation and consider it as not translated.\n      if (msgid_plural) {\n        exist = exist && this._dictionary[domain][locale][key].length > 1;\n      } else {\n        exist = exist && this._dictionary[domain][locale][key].length == 1;\n      }\n\n      if (exist) {\n        // This ensures that a variation is used.\n        options.locale = locale;\n        break;\n      }\n    }\n\n    if (!exist) {\n      translation = [msgid];\n      options.pluralFunc = this._defaults.pluralFunc;\n    } else {\n      translation = this._dictionary[domain][locale][key];\n    }\n\n    // Singular form\n    if (!msgid_plural) {\n      return this.t(translation, n, options, ...args);\n    }\n\n    // Plural one\n    options.pluralForm = true;\n    let value: Array<string> = exist ? translation : [msgid, msgid_plural];\n    return this.t(value, n, options, ...args);\n  }\n\n  /**\n   * Split a locale into parent locales. \"es-CO\" -> [\"es-CO\", \"es\"]\n   *\n   * @param locale - The locale string.\n   *\n   * @returns An array of locales.\n   */\n  private expandLocale(locale: string): Array<string> {\n    let locales: Array<string> = [locale];\n    let i: number = locale.lastIndexOf('-');\n    while (i > 0) {\n      locale = locale.slice(0, i);\n      locales.push(locale);\n      i = locale.lastIndexOf('-');\n    }\n    return locales;\n  }\n\n  /**\n   * Split a locale into parent locales. \"es-CO\" -> [\"es-CO\", \"es\"]\n   *\n   * @param pluralForm - Plural form string..\n   * @returns An function to compute plural forms.\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private getPluralFunc(pluralForm: string): Function {\n    // Plural form string regexp\n    // taken from https://github.com/Orange-OpenSource/gettext.js/blob/master/lib.gettext.js\n    // plural forms list available here http://localization-guide.readthedocs.org/en/latest/l10n/pluralforms.html\n    let pf_re = new RegExp(\n      '^\\\\s*nplurals\\\\s*=\\\\s*[0-9]+\\\\s*;\\\\s*plural\\\\s*=\\\\s*(?:\\\\s|[-\\\\?\\\\|&=!<>+*/%:;n0-9_()])+'\n    );\n\n    if (!pf_re.test(pluralForm))\n      throw new Error(\n        Gettext.strfmt('The plural form \"%1\" is not valid', pluralForm)\n      );\n\n    // Careful here, this is a hidden eval() equivalent..\n    // Risk should be reasonable though since we test the pluralForm through regex before\n    // taken from https://github.com/Orange-OpenSource/gettext.js/blob/master/lib.gettext.js\n    // TODO: should test if https://github.com/soney/jsep present and use it if so\n    return new Function(\n      'n',\n      'let plural, nplurals; ' +\n        pluralForm +\n        ' return { nplurals: nplurals, plural: (plural === true ? 1 : (plural ? plural : 0)) };'\n    );\n  }\n\n  /**\n   * Remove the context delimiter from string.\n   *\n   * @param str - Translation string.\n   * @returns A translation string without context.\n   */\n  private removeContext(str: string): string {\n    // if there is context, remove it\n    if (str.indexOf(this._contextDelimiter) !== -1) {\n      let parts = str.split(this._contextDelimiter);\n      return parts[1];\n    }\n    return str;\n  }\n\n  /**\n   * Proper translation function that handle plurals and directives.\n   *\n   * @param messages - List of translation strings.\n   * @param n - The number for pluralization.\n   * @param options - Translation options.\n   * @param args - Any variables to interpolate.\n   *\n   * @returns A translation string without context.\n   *\n   * ### Notes\n   * Contains juicy parts of https://github.com/Orange-OpenSource/gettext.js/blob/master/lib.gettext.js\n   */\n  private t(\n    messages: Array<string>,\n    n: number,\n    options: ITOptions,\n    ...args: any[]\n  ): string {\n    // Singular is very easy, just pass dictionary message through strfmt\n    if (!options.pluralForm)\n      return (\n        this._stringsPrefix +\n        Gettext.strfmt(this.removeContext(messages[0]), ...args)\n      );\n\n    let plural;\n\n    // if a plural func is given, use that one\n    if (options.pluralFunc) {\n      plural = options.pluralFunc(n);\n\n      // if plural form never interpreted before, do it now and store it\n    } else if (!this._pluralFuncs[options.locale || '']) {\n      this._pluralFuncs[options.locale || ''] = this.getPluralFunc(\n        this._pluralForms[options.locale || '']\n      );\n      plural = this._pluralFuncs[options.locale || ''](n);\n\n      // we have the plural function, compute the plural result\n    } else {\n      plural = this._pluralFuncs[options.locale || ''](n);\n    }\n\n    // If there is a problem with plurals, fallback to singular one\n    if (\n      'undefined' === typeof !plural.plural ||\n      plural.plural > plural.nplurals ||\n      messages.length <= plural.plural\n    )\n      plural.plural = 0;\n\n    return (\n      this._stringsPrefix +\n      Gettext.strfmt(\n        this.removeContext(messages[plural.plural]),\n        ...[n].concat(args)\n      )\n    );\n  }\n\n  /**\n   * Set messages after loading them.\n   *\n   * @param domain - The translation domain.\n   * @param locale - The translation locale.\n   * @param messages - List of translation strings.\n   * @param pluralForms - Plural form string.\n   *\n   * ### Notes\n   * Contains juicy parts of https://github.com/Orange-OpenSource/gettext.js/blob/master/lib.gettext.js\n   */\n  private setMessages(\n    domain: string,\n    locale: string,\n    messages: IJsonDataMessages,\n    pluralForms: string\n  ): void {\n    domain = normalizeDomain(domain);\n\n    if (pluralForms) this._pluralForms[locale] = pluralForms;\n\n    if (!this._dictionary[domain]) this._dictionary[domain] = {};\n\n    this._dictionary[domain][locale] = messages;\n  }\n\n  private _stringsPrefix: string;\n  private _pluralForms: any;\n  private _dictionary: any;\n  private _locale: string;\n  private _domain: string;\n  private _contextDelimiter: string;\n  private _pluralFuncs: any;\n  private _defaults: any;\n}\n\nexport { Gettext };\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { Gettext } from './gettext';\nimport { ITranslator, TranslationBundle } from './tokens';\n\n/**\n * A translator that loads a dummy language bundle that returns the same input\n * strings.\n */\nclass NullTranslator implements ITranslator {\n  constructor(bundle: TranslationBundle) {\n    this._languageBundle = bundle;\n  }\n\n  readonly languageCode: string = 'en';\n\n  load(domain: string): TranslationBundle {\n    return this._languageBundle;\n  }\n\n  private _languageBundle: TranslationBundle;\n}\n\n/**\n * A language bundle that returns the same input strings.\n */\nclass NullLanguageBundle {\n  __(msgid: string, ...args: any[]): string {\n    return this.gettext(msgid, ...args);\n  }\n\n  _n(msgid: string, msgid_plural: string, n: number, ...args: any[]): string {\n    return this.ngettext(msgid, msgid_plural, n, ...args);\n  }\n\n  _p(msgctxt: string, msgid: string, ...args: any[]): string {\n    return this.pgettext(msgctxt, msgid, ...args);\n  }\n\n  _np(\n    msgctxt: string,\n    msgid: string,\n    msgid_plural: string,\n    n: number,\n    ...args: any[]\n  ): string {\n    return this.npgettext(msgctxt, msgid, msgid_plural, n, ...args);\n  }\n\n  gettext(msgid: string, ...args: any[]): string {\n    return Gettext.strfmt(msgid, ...args);\n  }\n\n  ngettext(\n    msgid: string,\n    msgid_plural: string,\n    n: number,\n    ...args: any[]\n  ): string {\n    return Gettext.strfmt(n == 1 ? msgid : msgid_plural, ...[n].concat(args));\n  }\n\n  pgettext(msgctxt: string, msgid: string, ...args: any[]): string {\n    return Gettext.strfmt(msgid, ...args);\n  }\n\n  npgettext(\n    msgctxt: string,\n    msgid: string,\n    msgid_plural: string,\n    n: number,\n    ...args: any[]\n  ): string {\n    return this.ngettext(msgid, msgid_plural, n, ...args);\n  }\n\n  dcnpgettext(\n    domain: string,\n    msgctxt: string,\n    msgid: string,\n    msgid_plural: string,\n    n: number,\n    ...args: any[]\n  ): string {\n    return this.ngettext(msgid, msgid_plural, n, ...args);\n  }\n}\n\n/**\n * The application null translator instance that just returns the same text.\n * Also provides interpolation.\n */\nexport const nullTranslator = new NullTranslator(new NullLanguageBundle());\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { IDataConnector } from './interfaces';\n\n/**\n * An abstract class that adheres to the data connector interface.\n *\n * @typeparam T - The basic entity response type a service's connector.\n *\n * @typeparam U - The basic entity request type, which is conventionally the\n * same as the response type but may be different if a service's implementation\n * requires input data to be different from output responses. Defaults to `T`.\n *\n * @typeparam V - The basic token applied to a request, conventionally a string\n * ID or filter, but may be set to a different type when an implementation\n * requires it. Defaults to `string`.\n *\n * @typeparam W - The type of the optional `query` parameter of the `list`\n * method. Defaults to `string`.\n *\n * #### Notes\n * The only abstract method in this class is the `fetch` method, which must be\n * reimplemented by all subclasses. The `remove` and `save` methods have a\n * default implementation that returns a promise that will always reject. This\n * class is a convenience superclass for connectors that only need to `fetch`.\n */\nexport abstract class DataConnector<T, U = T, V = string, W = string>\n  implements IDataConnector<T, U, V, W>\n{\n  /**\n   * Retrieve an item from the data connector.\n   *\n   * @param id - The identifier used to retrieve an item.\n   *\n   * @returns A promise that resolves with a data payload if available.\n   *\n   * #### Notes\n   * The promise returned by this method may be rejected if an error occurs in\n   * retrieving the data. Nonexistence of an `id` will succeed with `undefined`.\n   */\n  abstract fetch(id: V): Promise<T | undefined>;\n\n  /**\n   * Retrieve the list of items available from the data connector.\n   *\n   * @param query - The optional query filter to apply to the connector request.\n   *\n   * @returns A promise that always rejects with an error.\n   *\n   * #### Notes\n   * Subclasses should reimplement if they support a back-end that can list.\n   */\n  async list(query?: W): Promise<{ ids: V[]; values: T[] }> {\n    throw new Error('DataConnector#list method has not been implemented.');\n  }\n\n  /**\n   * Remove a value using the data connector.\n   *\n   * @param id - The identifier for the data being removed.\n   *\n   * @returns A promise that always rejects with an error.\n   *\n   * #### Notes\n   * Subclasses should reimplement if they support a back-end that can remove.\n   */\n  async remove(id: V): Promise<any> {\n    throw new Error('DataConnector#remove method has not been implemented.');\n  }\n\n  /**\n   * Save a value using the data connector.\n   *\n   * @param id - The identifier for the data being saved.\n   *\n   * @param value - The data being saved.\n   *\n   * @returns A promise that always rejects with an error.\n   *\n   * #### Notes\n   * Subclasses should reimplement if they support a back-end that can save.\n   */\n  async save(id: V, value: U): Promise<any> {\n    throw new Error('DataConnector#save method has not been implemented.');\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * @packageDocumentation\n * @module properties\n */\n\n/**\n * A class which attaches a value to an external object.\n *\n * #### Notes\n * Attached properties are used to extend the state of an object with\n * semantic data from an unrelated class. They also encapsulate value\n * creation, coercion, and notification.\n *\n * Because attached property values are stored in a hash table, which\n * in turn is stored in a WeakMap keyed on the owner object, there is\n * non-trivial storage overhead involved in their use. The pattern is\n * therefore best used for the storage of rare data.\n */\nexport class AttachedProperty<T, U> {\n  /**\n   * Construct a new attached property.\n   *\n   * @param options - The options for initializing the property.\n   */\n  constructor(options: AttachedProperty.IOptions<T, U>) {\n    this.name = options.name;\n    this._create = options.create;\n    this._coerce = options.coerce || null;\n    this._compare = options.compare || null;\n    this._changed = options.changed || null;\n  }\n\n  /**\n   * The human readable name for the property.\n   */\n  readonly name: string;\n\n  /**\n   * Get the current value of the property for a given owner.\n   *\n   * @param owner - The property owner of interest.\n   *\n   * @returns The current value of the property.\n   *\n   * #### Notes\n   * If the value has not yet been set, the default value will be\n   * computed and assigned as the current value of the property.\n   */\n  get(owner: T): U {\n    let value: U;\n    let map = Private.ensureMap(owner);\n    if (this._pid in map) {\n      value = map[this._pid];\n    } else {\n      value = map[this._pid] = this._createValue(owner);\n    }\n    return value;\n  }\n\n  /**\n   * Set the current value of the property for a given owner.\n   *\n   * @param owner - The property owner of interest.\n   *\n   * @param value - The value for the property.\n   *\n   * #### Notes\n   * If the value has not yet been set, the default value will be\n   * computed and used as the previous value for the comparison.\n   */\n  set(owner: T, value: U): void {\n    let oldValue: U;\n    let map = Private.ensureMap(owner);\n    if (this._pid in map) {\n      oldValue = map[this._pid];\n    } else {\n      oldValue = map[this._pid] = this._createValue(owner);\n    }\n    let newValue = this._coerceValue(owner, value);\n    this._maybeNotify(owner, oldValue, (map[this._pid] = newValue));\n  }\n\n  /**\n   * Explicitly coerce the current property value for a given owner.\n   *\n   * @param owner - The property owner of interest.\n   *\n   * #### Notes\n   * If the value has not yet been set, the default value will be\n   * computed and used as the previous value for the comparison.\n   */\n  coerce(owner: T): void {\n    let oldValue: U;\n    let map = Private.ensureMap(owner);\n    if (this._pid in map) {\n      oldValue = map[this._pid];\n    } else {\n      oldValue = map[this._pid] = this._createValue(owner);\n    }\n    let newValue = this._coerceValue(owner, oldValue);\n    this._maybeNotify(owner, oldValue, (map[this._pid] = newValue));\n  }\n\n  /**\n   * Get or create the default value for the given owner.\n   */\n  private _createValue(owner: T): U {\n    let create = this._create;\n    return create(owner);\n  }\n\n  /**\n   * Coerce the value for the given owner.\n   */\n  private _coerceValue(owner: T, value: U): U {\n    let coerce = this._coerce;\n    return coerce ? coerce(owner, value) : value;\n  }\n\n  /**\n   * Compare the old value and new value for equality.\n   */\n  private _compareValue(oldValue: U, newValue: U): boolean {\n    let compare = this._compare;\n    return compare ? compare(oldValue, newValue) : oldValue === newValue;\n  }\n\n  /**\n   * Run the change notification if the given values are different.\n   */\n  private _maybeNotify(owner: T, oldValue: U, newValue: U): void {\n    let changed = this._changed;\n    if (changed && !this._compareValue(oldValue, newValue)) {\n      changed(owner, oldValue, newValue);\n    }\n  }\n\n  private _pid = Private.nextPID();\n  private _create: (owner: T) => U;\n  private _coerce: ((owner: T, value: U) => U) | null;\n  private _compare: ((oldValue: U, newValue: U) => boolean) | null;\n  private _changed: ((owner: T, oldValue: U, newValue: U) => void) | null;\n}\n\n/**\n * The namespace for the `AttachedProperty` class statics.\n */\nexport namespace AttachedProperty {\n  /**\n   * The options object used to initialize an attached property.\n   */\n  export interface IOptions<T, U> {\n    /**\n     * The human readable name for the property.\n     *\n     * #### Notes\n     * By convention, this should be the same as the name used to define\n     * the public accessor for the property value.\n     *\n     * This **does not** have an effect on the property lookup behavior.\n     * Multiple properties may share the same name without conflict.\n     */\n    name: string;\n\n    /**\n     * A factory function used to create the default property value.\n     *\n     * #### Notes\n     * This will be called whenever the property value is required,\n     * but has not yet been set for a given owner.\n     */\n    create: (owner: T) => U;\n\n    /**\n     * A function used to coerce a supplied value into the final value.\n     *\n     * #### Notes\n     * This will be called whenever the property value is changed, or\n     * when the property is explicitly coerced. The return value will\n     * be used as the final value of the property.\n     *\n     * This will **not** be called for the initial default value.\n     */\n    coerce?: (owner: T, value: U) => U;\n\n    /**\n     * A function used to compare two values for equality.\n     *\n     * #### Notes\n     * This is called to determine if the property value has changed.\n     * It should return `true` if the given values are equivalent, or\n     * `false` if they are different.\n     *\n     * If this is not provided, it defaults to the `===` operator.\n     */\n    compare?: (oldValue: U, newValue: U) => boolean;\n\n    /**\n     * A function called when the property value has changed.\n     *\n     * #### Notes\n     * This will be invoked when the property value is changed and the\n     * comparator indicates that the old value is not equal to the new\n     * value.\n     *\n     * This will **not** be called for the initial default value.\n     */\n    changed?: (owner: T, oldValue: U, newValue: U) => void;\n  }\n\n  /**\n   * Clear the stored property data for the given owner.\n   *\n   * @param owner - The property owner of interest.\n   *\n   * #### Notes\n   * This will clear all property values for the owner, but it will\n   * **not** run the change notification for any of the properties.\n   */\n  export function clearData(owner: unknown): void {\n    Private.ownerData.delete(owner);\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A typedef for a mapping of property id to property value.\n   */\n  export type PropertyMap = { [key: string]: any };\n\n  /**\n   * A weak mapping of property owner to property map.\n   */\n  export const ownerData = new WeakMap<any, PropertyMap>();\n\n  /**\n   * A function which computes successive unique property ids.\n   */\n  export const nextPID = (() => {\n    let id = 0;\n    return () => {\n      let rand = Math.random();\n      let stem = `${rand}`.slice(2);\n      return `pid-${stem}-${id++}`;\n    };\n  })();\n\n  /**\n   * Lookup the data map for the property owner.\n   *\n   * This will create the map if one does not already exist.\n   */\n  export function ensureMap(owner: unknown): PropertyMap {\n    let map = ownerData.get(owner);\n    if (map) {\n      return map;\n    }\n    map = Object.create(null) as PropertyMap;\n    ownerData.set(owner, map);\n    return map;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for array-specific algorithms.\n */\nexport namespace ArrayExt {\n  /**\n   * Find the index of the first occurrence of a value in an array.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param value - The value to locate in the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first occurrence of the value, or `-1`\n   *   if the value is not found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four', 'one'];\n   * ArrayExt.firstIndexOf(data, 'red');        // -1\n   * ArrayExt.firstIndexOf(data, 'one');        // 0\n   * ArrayExt.firstIndexOf(data, 'one', 1);     // 4\n   * ArrayExt.firstIndexOf(data, 'two', 2);     // -1\n   * ArrayExt.firstIndexOf(data, 'two', 2, 1);  // 1\n   * ```\n   */\n  export function firstIndexOf<T>(\n    array: ArrayLike<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start + i) % n;\n      if (array[j] === value) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the last occurrence of a value in an array.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param value - The value to locate in the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the last occurrence of the value, or `-1`\n   *   if the value is not found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four', 'one'];\n   * ArrayExt.lastIndexOf(data, 'red');        // -1\n   * ArrayExt.lastIndexOf(data, 'one');        // 4\n   * ArrayExt.lastIndexOf(data, 'one', 1);     // 0\n   * ArrayExt.lastIndexOf(data, 'two', 0);     // -1\n   * ArrayExt.lastIndexOf(data, 'two', 0, 1);  // 1\n   * ```\n   */\n  export function lastIndexOf<T>(\n    array: ArrayLike<T>,\n    value: T,\n    start = -1,\n    stop = 0\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (start < stop) {\n      span = start + 1 + (n - stop);\n    } else {\n      span = start - stop + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start - i + n) % n;\n      if (array[j] === value) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the first value which matches a predicate.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first matching value, or `-1` if no\n   *   matching value is found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findFirstIndex(data, isEven);       // 1\n   * ArrayExt.findFirstIndex(data, isEven, 4);    // 5\n   * ArrayExt.findFirstIndex(data, isEven, 6);    // -1\n   * ArrayExt.findFirstIndex(data, isEven, 6, 5); // 1\n   * ```\n   */\n  export function findFirstIndex<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start + i) % n;\n      if (fn(array[j], j)) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the last value which matches a predicate.\n   *\n   * @param object - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the last matching value, or `-1` if no\n   *   matching value is found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findLastIndex(data, isEven);        // 5\n   * ArrayExt.findLastIndex(data, isEven, 4);     // 3\n   * ArrayExt.findLastIndex(data, isEven, 0);     // -1\n   * ArrayExt.findLastIndex(data, isEven, 0, 1);  // 5\n   * ```\n   */\n  export function findLastIndex<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let d: number;\n    if (start < stop) {\n      d = start + 1 + (n - stop);\n    } else {\n      d = start - stop + 1;\n    }\n    for (let i = 0; i < d; ++i) {\n      let j = (start - i + n) % n;\n      if (fn(array[j], j)) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the first value which matches a predicate.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The first matching value, or `undefined` if no matching\n   *   value is found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findFirstValue(data, isEven);       // 2\n   * ArrayExt.findFirstValue(data, isEven, 2);    // 4\n   * ArrayExt.findFirstValue(data, isEven, 6);    // undefined\n   * ArrayExt.findFirstValue(data, isEven, 6, 5); // 2\n   * ```\n   */\n  export function findFirstValue<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): T | undefined {\n    let index = findFirstIndex(array, fn, start, stop);\n    return index !== -1 ? array[index] : undefined;\n  }\n\n  /**\n   * Find the last value which matches a predicate.\n   *\n   * @param object - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The last matching value, or `undefined` if no matching\n   *   value is found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findLastValue(data, isEven);        // 2\n   * ArrayExt.findLastValue(data, isEven, 4);     // 4\n   * ArrayExt.findLastValue(data, isEven, 0);     // undefined\n   * ArrayExt.findLastValue(data, isEven, 0, 1);  // 2\n   * ```\n   */\n  export function findLastValue<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): T | undefined {\n    let index = findLastIndex(array, fn, start, stop);\n    return index !== -1 ? array[index] : undefined;\n  }\n\n  /**\n   * Find the index of the first element which compares `>=` to a value.\n   *\n   * @param array - The sorted array-like object to search.\n   *\n   * @param value - The value to locate in the array.\n   *\n   * @param fn - The 3-way comparison function to apply to the values.\n   *   It should return `< 0` if an element is less than a value, `0` if\n   *   an element is equal to a value, or `> 0` if an element is greater\n   *   than a value.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first element which compares `>=` to the\n   *   value, or `length` if there is no such element. If the computed\n   *   index for `stop` is less than `start`, then the computed index\n   *   for `start` is returned.\n   *\n   * #### Notes\n   * The array must already be sorted in ascending order according to\n   * the comparison function.\n   *\n   * #### Complexity\n   * Logarithmic.\n   *\n   * #### Undefined Behavior\n   * Searching a range which is not sorted in ascending order.\n   *\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function numberCmp(a: number, b: number): number {\n   *   return a - b;\n   * }\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.lowerBound(data, 0, numberCmp);   // 0\n   * ArrayExt.lowerBound(data, 6, numberCmp);   // 3\n   * ArrayExt.lowerBound(data, 7, numberCmp);   // 3\n   * ArrayExt.lowerBound(data, -1, numberCmp);  // 0\n   * ArrayExt.lowerBound(data, 10, numberCmp);  // 6\n   * ```\n   */\n  export function lowerBound<T, U>(\n    array: ArrayLike<T>,\n    value: U,\n    fn: (element: T, value: U) => number,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let begin = start;\n    let span = stop - start + 1;\n    while (span > 0) {\n      let half = span >> 1;\n      let middle = begin + half;\n      if (fn(array[middle], value) < 0) {\n        begin = middle + 1;\n        span -= half + 1;\n      } else {\n        span = half;\n      }\n    }\n    return begin;\n  }\n\n  /**\n   * Find the index of the first element which compares `>` than a value.\n   *\n   * @param array - The sorted array-like object to search.\n   *\n   * @param value - The value to locate in the array.\n   *\n   * @param fn - The 3-way comparison function to apply to the values.\n   *   It should return `< 0` if an element is less than a value, `0` if\n   *   an element is equal to a value, or `> 0` if an element is greater\n   *   than a value.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first element which compares `>` than the\n   *   value, or `length` if there is no such element. If the computed\n   *   index for `stop` is less than `start`, then the computed index\n   *   for `start` is returned.\n   *\n   * #### Notes\n   * The array must already be sorted in ascending order according to\n   * the comparison function.\n   *\n   * #### Complexity\n   * Logarithmic.\n   *\n   * #### Undefined Behavior\n   * Searching a range which is not sorted in ascending order.\n   *\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function numberCmp(a: number, b: number): number {\n   *   return a - b;\n   * }\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.upperBound(data, 0, numberCmp);   // 1\n   * ArrayExt.upperBound(data, 6, numberCmp);   // 3\n   * ArrayExt.upperBound(data, 7, numberCmp);   // 5\n   * ArrayExt.upperBound(data, -1, numberCmp);  // 0\n   * ArrayExt.upperBound(data, 10, numberCmp);  // 6\n   * ```\n   */\n  export function upperBound<T, U>(\n    array: ArrayLike<T>,\n    value: U,\n    fn: (element: T, value: U) => number,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let begin = start;\n    let span = stop - start + 1;\n    while (span > 0) {\n      let half = span >> 1;\n      let middle = begin + half;\n      if (fn(array[middle], value) > 0) {\n        span = half;\n      } else {\n        begin = middle + 1;\n        span -= half + 1;\n      }\n    }\n    return begin;\n  }\n\n  /**\n   * Test whether two arrays are shallowly equal.\n   *\n   * @param a - The first array-like object to compare.\n   *\n   * @param b - The second array-like object to compare.\n   *\n   * @param fn - The comparison function to apply to the elements. It\n   *   should return `true` if the elements are \"equal\". The default\n   *   compares elements using strict `===` equality.\n   *\n   * @returns Whether the two arrays are shallowly equal.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * Modifying the length of the arrays while comparing.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let d1 = [0, 3, 4, 7, 7, 9];\n   * let d2 = [0, 3, 4, 7, 7, 9];\n   * let d3 = [42];\n   * ArrayExt.shallowEqual(d1, d2);  // true\n   * ArrayExt.shallowEqual(d2, d3);  // false\n   * ```\n   */\n  export function shallowEqual<T>(\n    a: ArrayLike<T>,\n    b: ArrayLike<T>,\n    fn?: (a: T, b: T) => boolean\n  ): boolean {\n    // Check for object identity first.\n    if (a === b) {\n      return true;\n    }\n\n    // Bail early if the lengths are different.\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    // Compare each element for equality.\n    for (let i = 0, n = a.length; i < n; ++i) {\n      if (fn ? !fn(a[i], b[i]) : a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    // The array are shallowly equal.\n    return true;\n  }\n\n  /**\n   * Create a slice of an array subject to an optional step.\n   *\n   * @param array - The array-like object of interest.\n   *\n   * @param options - The options for configuring the slice.\n   *\n   * @returns A new array with the specified values.\n   *\n   * @throws An exception if the slice `step` is `0`.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start`, `stop`, or `step` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.slice(data);                         // [0, 3, 4, 7, 7, 9]\n   * ArrayExt.slice(data, { start: 2 });           // [4, 7, 7, 9]\n   * ArrayExt.slice(data, { start: 0, stop: 4 });  // [0, 3, 4, 7]\n   * ArrayExt.slice(data, { step: 2 });            // [0, 4, 7]\n   * ArrayExt.slice(data, { step: -1 });           // [9, 7, 7, 4, 3, 0]\n   * ```\n   */\n  export function slice<T>(\n    array: ArrayLike<T>,\n    options: slice.IOptions = {}\n  ): T[] {\n    // Extract the options.\n    let { start, stop, step } = options;\n\n    // Set up the `step` value.\n    if (step === undefined) {\n      step = 1;\n    }\n\n    // Validate the step size.\n    if (step === 0) {\n      throw new Error('Slice `step` cannot be zero.');\n    }\n\n    // Look up the length of the array.\n    let n = array.length;\n\n    // Set up the `start` value.\n    if (start === undefined) {\n      start = step < 0 ? n - 1 : 0;\n    } else if (start < 0) {\n      start = Math.max(start + n, step < 0 ? -1 : 0);\n    } else if (start >= n) {\n      start = step < 0 ? n - 1 : n;\n    }\n\n    // Set up the `stop` value.\n    if (stop === undefined) {\n      stop = step < 0 ? -1 : n;\n    } else if (stop < 0) {\n      stop = Math.max(stop + n, step < 0 ? -1 : 0);\n    } else if (stop >= n) {\n      stop = step < 0 ? n - 1 : n;\n    }\n\n    // Compute the slice length.\n    let length;\n    if ((step < 0 && stop >= start) || (step > 0 && start >= stop)) {\n      length = 0;\n    } else if (step < 0) {\n      length = Math.floor((stop - start + 1) / step + 1);\n    } else {\n      length = Math.floor((stop - start - 1) / step + 1);\n    }\n\n    // Compute the sliced result.\n    let result: T[] = [];\n    for (let i = 0; i < length; ++i) {\n      result[i] = array[start + i * step];\n    }\n\n    // Return the result.\n    return result;\n  }\n\n  /**\n   * The namespace for the `slice` function statics.\n   */\n  export namespace slice {\n    /**\n     * The options for the `slice` function.\n     */\n    export interface IOptions {\n      /**\n       * The starting index of the slice, inclusive.\n       *\n       * Negative values are taken as an offset from the end\n       * of the array.\n       *\n       * The default is `0` if `step > 0` else `n - 1`.\n       */\n      start?: number;\n\n      /**\n       * The stopping index of the slice, exclusive.\n       *\n       * Negative values are taken as an offset from the end\n       * of the array.\n       *\n       * The default is `n` if `step > 0` else `-n - 1`.\n       */\n      stop?: number;\n\n      /**\n       * The step value for the slice.\n       *\n       * This must not be `0`.\n       *\n       * The default is `1`.\n       */\n      step?: number;\n    }\n  }\n\n  /**\n   * An array-like object which supports item assignment.\n   */\n  export type MutableArrayLike<T> = {\n    readonly length: number;\n    [index: number]: T;\n  };\n\n  /**\n   * Move an element in an array from one index to another.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param fromIndex - The index of the element to move. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * @param toIndex - The target index of the element. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `fromIndex` or `toIndex` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.move(data, 1, 2);  // [0, 2, 1, 3, 4]\n   * ArrayExt.move(data, 4, 2);  // [0, 2, 4, 1, 3]\n   * ```\n   */\n  export function move<T>(\n    array: MutableArrayLike<T>,\n    fromIndex: number,\n    toIndex: number\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (fromIndex < 0) {\n      fromIndex = Math.max(0, fromIndex + n);\n    } else {\n      fromIndex = Math.min(fromIndex, n - 1);\n    }\n    if (toIndex < 0) {\n      toIndex = Math.max(0, toIndex + n);\n    } else {\n      toIndex = Math.min(toIndex, n - 1);\n    }\n    if (fromIndex === toIndex) {\n      return;\n    }\n    let value = array[fromIndex];\n    let d = fromIndex < toIndex ? 1 : -1;\n    for (let i = fromIndex; i !== toIndex; i += d) {\n      array[i] = array[i + d];\n    }\n    array[toIndex] = value;\n  }\n\n  /**\n   * Reverse an array in-place.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param start - The index of the first element in the range to be\n   *   reversed, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   reversed, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or  `stop` index which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.reverse(data, 1, 3);  // [0, 3, 2, 1, 4]\n   * ArrayExt.reverse(data, 3);     // [0, 3, 2, 4, 1]\n   * ArrayExt.reverse(data);        // [1, 4, 2, 3, 0]\n   * ```\n   */\n  export function reverse<T>(\n    array: MutableArrayLike<T>,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    while (start < stop) {\n      let a = array[start];\n      let b = array[stop];\n      array[start++] = b;\n      array[stop--] = a;\n    }\n  }\n\n  /**\n   * Rotate the elements of an array in-place.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param delta - The amount of rotation to apply to the elements. A\n   *   positive value will rotate the elements to the left. A negative\n   *   value will rotate the elements to the right.\n   *\n   * @param start - The index of the first element in the range to be\n   *   rotated, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   rotated, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `delta`, `start`, or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.rotate(data, 2);        // [2, 3, 4, 0, 1]\n   * ArrayExt.rotate(data, -2);       // [0, 1, 2, 3, 4]\n   * ArrayExt.rotate(data, 10);       // [0, 1, 2, 3, 4]\n   * ArrayExt.rotate(data, 9);        // [4, 0, 1, 2, 3]\n   * ArrayExt.rotate(data, 2, 1, 3);  // [4, 2, 0, 1, 3]\n   * ```\n   */\n  export function rotate<T>(\n    array: MutableArrayLike<T>,\n    delta: number,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    if (start >= stop) {\n      return;\n    }\n    let length = stop - start + 1;\n    if (delta > 0) {\n      delta = delta % length;\n    } else if (delta < 0) {\n      delta = ((delta % length) + length) % length;\n    }\n    if (delta === 0) {\n      return;\n    }\n    let pivot = start + delta;\n    reverse(array, start, pivot - 1);\n    reverse(array, pivot, stop);\n    reverse(array, start, stop);\n  }\n\n  /**\n   * Fill an array with a static value.\n   *\n   * @param array - The mutable array-like object to fill.\n   *\n   * @param value - The static value to use to fill the array.\n   *\n   * @param start - The index of the first element in the range to be\n   *   filled, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   filled, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Notes\n   * If `stop < start` the fill will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four'];\n   * ArrayExt.fill(data, 'r');        // ['r', 'r', 'r', 'r']\n   * ArrayExt.fill(data, 'g', 1);     // ['r', 'g', 'g', 'g']\n   * ArrayExt.fill(data, 'b', 2, 3);  // ['r', 'g', 'b', 'b']\n   * ArrayExt.fill(data, 'z', 3, 1);  // ['z', 'z', 'b', 'z']\n   * ```\n   */\n  export function fill<T>(\n    array: MutableArrayLike<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n === 0) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      array[(start + i) % n] = value;\n    }\n  }\n\n  /**\n   * Insert a value into an array at a specific index.\n   *\n   * @param array - The array of interest.\n   *\n   * @param index - The index at which to insert the value. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * @param value - The value to set at the specified index.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2];\n   * ArrayExt.insert(data, 0, -1);  // [-1, 0, 1, 2]\n   * ArrayExt.insert(data, 2, 12);  // [-1, 0, 12, 1, 2]\n   * ArrayExt.insert(data, -1, 7);  // [-1, 0, 12, 1, 7, 2]\n   * ArrayExt.insert(data, 6, 19);  // [-1, 0, 12, 1, 7, 2, 19]\n   * ```\n   */\n  export function insert<T>(array: Array<T>, index: number, value: T): void {\n    let n = array.length;\n    if (index < 0) {\n      index = Math.max(0, index + n);\n    } else {\n      index = Math.min(index, n);\n    }\n    for (let i = n; i > index; --i) {\n      array[i] = array[i - 1];\n    }\n    array[index] = value;\n  }\n\n  /**\n   * Remove and return a value at a specific index in an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param index - The index of the value to remove. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The value at the specified index, or `undefined` if the\n   *   index is out of range.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeAt(data, 2);   // 23\n   * ArrayExt.removeAt(data, -2);  // 12\n   * ArrayExt.removeAt(data, 10);  // undefined;\n   * ```\n   */\n  export function removeAt<T>(array: Array<T>, index: number): T | undefined {\n    let n = array.length;\n    if (index < 0) {\n      index += n;\n    }\n    if (index < 0 || index >= n) {\n      return undefined;\n    }\n    let value = array[index];\n    for (let i = index + 1; i < n; ++i) {\n      array[i - 1] = array[i];\n    }\n    array.length = n - 1;\n    return value;\n  }\n\n  /**\n   * Remove the first occurrence of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the removed value, or `-1` if the value\n   *   is not contained in the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeFirstOf(data, 12);        // 1\n   * ArrayExt.removeFirstOf(data, 17);        // -1\n   * ArrayExt.removeFirstOf(data, 39, 3);     // -1\n   * ArrayExt.removeFirstOf(data, 39, 3, 2);  // 2\n   * ```\n   */\n  export function removeFirstOf<T>(\n    array: Array<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let index = firstIndexOf(array, value, start, stop);\n    if (index !== -1) {\n      removeAt(array, index);\n    }\n    return index;\n  }\n\n  /**\n   * Remove the last occurrence of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the removed value, or `-1` if the value\n   *   is not contained in the array.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeLastOf(data, 12);        // 5\n   * ArrayExt.removeLastOf(data, 17);        // -1\n   * ArrayExt.removeLastOf(data, 39, 2);     // -1\n   * ArrayExt.removeLastOf(data, 39, 2, 3);  // 3\n   * ```\n   */\n  export function removeLastOf<T>(\n    array: Array<T>,\n    value: T,\n    start = -1,\n    stop = 0\n  ): number {\n    let index = lastIndexOf(array, value, start, stop);\n    if (index !== -1) {\n      removeAt(array, index);\n    }\n    return index;\n  }\n\n  /**\n   * Remove all occurrences of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The number of elements removed from the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will conceptually wrap at the end of\n   * the array, however the array will be traversed front-to-back.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [14, 12, 23, 39, 14, 12, 19, 14];\n   * ArrayExt.removeAllOf(data, 12);        // 2\n   * ArrayExt.removeAllOf(data, 17);        // 0\n   * ArrayExt.removeAllOf(data, 14, 1, 4);  // 1\n   * ```\n   */\n  export function removeAllOf<T>(\n    array: Array<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let count = 0;\n    for (let i = 0; i < n; ++i) {\n      if (start <= stop && i >= start && i <= stop && array[i] === value) {\n        count++;\n      } else if (\n        stop < start &&\n        (i <= stop || i >= start) &&\n        array[i] === value\n      ) {\n        count++;\n      } else if (count > 0) {\n        array[i - count] = array[i];\n      }\n    }\n    if (count > 0) {\n      array.length = n - count;\n    }\n    return count;\n  }\n\n  /**\n   * Remove the first occurrence of a value which matches a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The removed `{ index, value }`, which will be `-1` and\n   *   `undefined` if the value is not contained in the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeFirstWhere(data, isEven);     // { index: 0, value: 0 }\n   * ArrayExt.removeFirstWhere(data, isEven, 2);  // { index: 3, value: 14 }\n   * ArrayExt.removeFirstWhere(data, isEven, 4);  // { index: -1, value: undefined }\n   * ```\n   */\n  export function removeFirstWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): { index: number; value: T | undefined } {\n    let value: T | undefined;\n    let index = findFirstIndex(array, fn, start, stop);\n    if (index !== -1) {\n      value = removeAt(array, index);\n    }\n    return { index, value };\n  }\n\n  /**\n   * Remove the last occurrence of a value which matches a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The removed `{ index, value }`, which will be `-1` and\n   *   `undefined` if the value is not contained in the array.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeLastWhere(data, isEven);        // { index: 5, value: 12 }\n   * ArrayExt.removeLastWhere(data, isEven, 2);     // { index: 1, value: 12 }\n   * ArrayExt.removeLastWhere(data, isEven, 2, 1);  // { index: -1, value: undefined }\n   * ```\n   */\n  export function removeLastWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): { index: number; value: T | undefined } {\n    let value: T | undefined;\n    let index = findLastIndex(array, fn, start, stop);\n    if (index !== -1) {\n      value = removeAt(array, index);\n    }\n    return { index, value };\n  }\n\n  /**\n   * Remove all occurrences of values which match a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The number of elements removed from the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will conceptually wrap at the end of\n   * the array, however the array will be traversed front-to-back.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * function isNegative(value: number): boolean {\n   *   return value < 0;\n   * }\n   *\n   * let data = [0, 12, -13, -9, 23, 39, 14, -15, 12, 75];\n   * ArrayExt.removeAllWhere(data, isEven);            // 4\n   * ArrayExt.removeAllWhere(data, isNegative, 0, 3);  // 2\n   * ```\n   */\n  export function removeAllWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let count = 0;\n    for (let i = 0; i < n; ++i) {\n      if (start <= stop && i >= start && i <= stop && fn(array[i], i)) {\n        count++;\n      } else if (stop < start && (i <= stop || i >= start) && fn(array[i], i)) {\n        count++;\n      } else if (count > 0) {\n        array[i - count] = array[i];\n      }\n    }\n    if (count > 0) {\n      array.length = n - count;\n    }\n    return count;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Chain together several iterables.\n *\n * @deprecated\n *\n * @param objects - The iterable objects of interest.\n *\n * @returns An iterator which yields the values of the iterables\n *   in the order in which they are supplied.\n *\n * #### Example\n * ```typescript\n * import { chain } from '@lumino/algorithm';\n *\n * let data1 = [1, 2, 3];\n * let data2 = [4, 5, 6];\n *\n * let stream = chain(data1, data2);\n *\n * Array.from(stream);  // [1, 2, 3, 4, 5, 6]\n * ```\n */\nexport function* chain<T>(...objects: Iterable<T>[]): IterableIterator<T> {\n  for (const object of objects) {\n    yield* object;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an empty iterator.\n *\n * @returns A new iterator which yields nothing.\n *\n * #### Example\n * ```typescript\n * import { empty } from '@lumino/algorithm';\n *\n * let stream = empty<number>();\n *\n * Array.from(stream);  // []\n * ```\n */\n// eslint-disable-next-line require-yield\nexport function* empty<T>(): IterableIterator<T> {\n  return;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Enumerate an iterable object.\n *\n * @param object - The iterable object of interest.\n *\n * @param start - The starting enum value. The default is `0`.\n *\n * @returns An iterator which yields the enumerated values.\n *\n * #### Example\n * ```typescript\n * import { enumerate } from '@lumino/algorithm';\n *\n * let data = ['foo', 'bar', 'baz'];\n *\n * let stream = enumerate(data, 1);\n *\n * Array.from(stream);  // [[1, 'foo'], [2, 'bar'], [3, 'baz']]\n * ```\n */\nexport function* enumerate<T>(\n  object: Iterable<T>,\n  start = 0\n): IterableIterator<[number, T]> {\n  for (const value of object) {\n    yield [start++, value];\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Filter an iterable for values which pass a test.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns An iterator which yields the values which pass the test.\n *\n * #### Example\n * ```typescript\n * import { filter } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = filter(data, value => value % 2 === 0);\n *\n * Array.from(stream);  // [2, 4, 6]\n * ```\n */\nexport function* filter<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): IterableIterator<T> {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      yield value;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Find the first value in an iterable which matches a predicate.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The predicate function to apply to the values.\n *\n * @returns The first matching value, or `undefined` if no matching\n *   value is found.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { find } from '@lumino/algorithm';\n *\n * interface IAnimal { species: string, name: string };\n *\n * function isCat(value: IAnimal): boolean {\n *   return value.species === 'cat';\n * }\n *\n * let data: IAnimal[] = [\n *   { species: 'dog', name: 'spot' },\n *   { species: 'cat', name: 'fluffy' },\n *   { species: 'alligator', name: 'pocho' }\n * ];\n *\n * find(data, isCat).name;  // 'fluffy'\n * ```\n */\nexport function find<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): T | undefined {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return value;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Find the index of the first value which matches a predicate.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The predicate function to apply to the values.\n *\n * @returns The index of the first matching value, or `-1` if no\n *   matching value is found.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { findIndex } from '@lumino/algorithm';\n *\n * interface IAnimal { species: string, name: string };\n *\n * function isCat(value: IAnimal): boolean {\n *   return value.species === 'cat';\n * }\n *\n * let data: IAnimal[] = [\n *   { species: 'dog', name: 'spot' },\n *   { species: 'cat', name: 'fluffy' },\n *   { species: 'alligator', name: 'pocho' }\n * ];\n *\n * findIndex(data, isCat);  // 1\n * ```\n */\nexport function findIndex<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): number {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return index - 1;\n    }\n  }\n  return -1;\n}\n\n/**\n * Find the minimum value in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns The minimum value in the iterable. If multiple values are\n *   equivalent to the minimum, the left-most value is returned. If\n *   the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { min } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * min([7, 4, 0, 3, 9, 4], numberCmp);  // 0\n * ```\n */\nexport function min<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): T | undefined {\n  let result: T | undefined = undefined;\n  for (const value of object) {\n    if (result === undefined) {\n      result = value;\n      continue;\n    }\n    if (fn(value, result) < 0) {\n      result = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Find the maximum value in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns The maximum value in the iterable. If multiple values are\n *   equivalent to the maximum, the left-most value is returned. If\n *   the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { max } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * max([7, 4, 0, 3, 9, 4], numberCmp);  // 9\n * ```\n */\nexport function max<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): T | undefined {\n  let result: T | undefined = undefined;\n  for (const value of object) {\n    if (result === undefined) {\n      result = value;\n      continue;\n    }\n    if (fn(value, result) > 0) {\n      result = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Find the minimum and maximum values in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns A 2-tuple of the `[min, max]` values in the iterable. If\n *   multiple values are equivalent, the left-most values are returned.\n *   If the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { minmax } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * minmax([7, 4, 0, 3, 9, 4], numberCmp);  // [0, 9]\n * ```\n */\nexport function minmax<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): [T, T] | undefined {\n  let empty = true;\n  let vmin: T;\n  let vmax: T;\n  for (const value of object) {\n    if (empty) {\n      vmin = value;\n      vmax = value;\n      empty = false;\n    } else if (fn(value, vmin!) < 0) {\n      vmin = value;\n    } else if (fn(value, vmax!) > 0) {\n      vmax = value;\n    }\n  }\n  return empty ? undefined : [vmin!, vmax!];\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an array from an iterable of values.\n *\n * @deprecated\n *\n * @param object - The iterable object of interest.\n *\n * @returns A new array of values from the given object.\n *\n * #### Example\n * ```typescript\n * import { toArray } from '@lumino/algorithm';\n *\n * let stream = [1, 2, 3, 4, 5, 6][Symbol.iterator]();\n *\n * toArray(stream);  // [1, 2, 3, 4, 5, 6];\n * ```\n */\nexport function toArray<T>(object: Iterable<T>): T[] {\n  return Array.from(object);\n}\n\n/**\n * Create an object from an iterable of key/value pairs.\n *\n * @param object - The iterable object of interest.\n *\n * @returns A new object mapping keys to values.\n *\n * #### Example\n * ```typescript\n * import { toObject } from '@lumino/algorithm';\n *\n * let data: [string, number][] = [['one', 1], ['two', 2], ['three', 3]];\n *\n * toObject(data);  // { one: 1, two: 2, three: 3 }\n * ```\n */\nexport function toObject<T>(object: Iterable<[string, T]>): {\n  [key: string]: T;\n} {\n  const result: { [key: string]: T } = {};\n  for (const [key, value] of object) {\n    result[key] = value;\n  }\n  return result;\n}\n\n/**\n * Invoke a function for each value in an iterable.\n *\n * @deprecated\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The callback function to invoke for each value.\n *\n * #### Notes\n * Iteration can be terminated early by returning `false` from the\n * callback function.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { each } from '@lumino/algorithm';\n *\n * let data = [5, 7, 0, -2, 9];\n *\n * each(data, value => { console.log(value); });\n * ```\n */\nexport function each<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean | void\n): void {\n  let index = 0;\n  for (const value of object) {\n    if (false === fn(value, index++)) {\n      return;\n    }\n  }\n}\n\n/**\n * Test whether all values in an iterable satisfy a predicate.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns `true` if all values pass the test, `false` otherwise.\n *\n * #### Notes\n * Iteration terminates on the first `false` predicate result.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { every } from '@lumino/algorithm';\n *\n * let data = [5, 7, 1];\n *\n * every(data, value => value % 2 === 0);  // false\n * every(data, value => value % 2 === 1);  // true\n * ```\n */\nexport function every<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): boolean {\n  let index = 0;\n  for (const value of object) {\n    if (false === fn(value, index++)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Test whether any value in an iterable satisfies a predicate.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns `true` if any value passes the test, `false` otherwise.\n *\n * #### Notes\n * Iteration terminates on the first `true` predicate result.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { some } from '@lumino/algorithm';\n *\n * let data = [5, 7, 1];\n *\n * some(data, value => value === 7);  // true\n * some(data, value => value === 3);  // false\n * ```\n */\nexport function some<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): boolean {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return true;\n    }\n  }\n  return false;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Transform the values of an iterable with a mapping function.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The mapping function to invoke for each value.\n *\n * @returns An iterator which yields the transformed values.\n *\n * #### Example\n * ```typescript\n * import { map } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3];\n *\n * let stream = map(data, value => value * 2);\n *\n * Array.from(stream);  // [2, 4, 6]\n * ```\n */\nexport function* map<T, U>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => U\n): IterableIterator<U> {\n  let index = 0;\n  for (const value of object) {\n    yield fn(value, index++);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Create an iterator of evenly spaced values.\n *\n * @param start - The starting value for the range, inclusive.\n *\n * @param stop - The stopping value for the range, exclusive.\n *\n * @param step - The distance between each value.\n *\n * @returns An iterator which produces evenly spaced values.\n *\n * #### Notes\n * In the single argument form of `range(stop)`, `start` defaults to\n * `0` and `step` defaults to `1`.\n *\n * In the two argument form of `range(start, stop)`, `step` defaults\n * to `1`.\n *\n * #### Example\n * ```typescript\n * import { range } from '@lumino/algorithm';\n *\n * let stream = range(2, 4);\n *\n * Array.from(stream);  // [2, 3]\n * ```\n */\nexport function* range(\n  start: number,\n  stop?: number,\n  step?: number\n): IterableIterator<number> {\n  if (stop === undefined) {\n    stop = start;\n    start = 0;\n    step = 1;\n  } else if (step === undefined) {\n    step = 1;\n  }\n  const length = Private.rangeLength(start, stop, step);\n  for (let index = 0; index < length; index++) {\n    yield start + step * index;\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Compute the effective length of a range.\n   *\n   * @param start - The starting value for the range, inclusive.\n   *\n   * @param stop - The stopping value for the range, exclusive.\n   *\n   * @param step - The distance between each value.\n   *\n   * @returns The number of steps need to traverse the range.\n   */\n  export function rangeLength(\n    start: number,\n    stop: number,\n    step: number\n  ): number {\n    if (step === 0) {\n      return Infinity;\n    }\n    if (start > stop && step > 0) {\n      return 0;\n    }\n    if (start < stop && step < 0) {\n      return 0;\n    }\n    return Math.ceil((stop - start) / step);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Summarize all values in an iterable using a reducer function.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The reducer function to invoke for each value.\n *\n * @param initial - The initial value to start accumulation.\n *\n * @returns The final accumulated value.\n *\n * #### Notes\n * The `reduce` function follows the conventions of `Array#reduce`.\n *\n * If the iterator is empty, an initial value is required. That value\n * will be used as the return value. If no initial value is provided,\n * an error will be thrown.\n *\n * If the iterator contains a single item and no initial value is\n * provided, the single item is used as the return value.\n *\n * Otherwise, the reducer is invoked for each element in the iterable.\n * If an initial value is not provided, the first element will be used\n * as the initial accumulated value.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { reduce } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5];\n *\n * let sum = reduce(data, (a, value) => a + value);  // 15\n * ```\n */\nexport function reduce<T>(\n  object: Iterable<T>,\n  fn: (accumulator: T, value: T, index: number) => T\n): T;\nexport function reduce<T, U>(\n  object: Iterable<T>,\n  fn: (accumulator: U, value: T, index: number) => U,\n  initial: U\n): U;\nexport function reduce<T>(\n  object: Iterable<T>,\n  fn: (accumulator: any, value: T, index: number) => any,\n  initial?: unknown\n): any {\n  // Setup the iterator and fetch the first value.\n  const it = object[Symbol.iterator]();\n  let index = 0;\n  let first = it.next();\n\n  // An empty iterator and no initial value is an error.\n  if (first.done && initial === undefined) {\n    throw new TypeError('Reduce of empty iterable with no initial value.');\n  }\n\n  // If the iterator is empty, return the initial value.\n  if (first.done) {\n    return initial;\n  }\n\n  // If the iterator has a single item and no initial value, the\n  // reducer is not invoked and the first item is the return value.\n  let second = it.next();\n  if (second.done && initial === undefined) {\n    return first.value;\n  }\n\n  // If iterator has a single item and an initial value is provided,\n  // the reducer is invoked and that result is the return value.\n  if (second.done) {\n    return fn(initial, first.value, index++);\n  }\n\n  // Setup the initial accumlated value.\n  let accumulator: any;\n  if (initial === undefined) {\n    accumulator = fn(first.value, second.value, index++);\n  } else {\n    accumulator = fn(fn(initial, first.value, index++), second.value, index++);\n  }\n\n  // Iterate the rest of the values, updating the accumulator.\n  let next: IteratorResult<T>;\n  while (!(next = it.next()).done) {\n    accumulator = fn(accumulator, next.value, index++);\n  }\n\n  // Return the final accumulated value.\n  return accumulator;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an iterator which repeats a value a number of times.\n *\n * @deprecated\n *\n * @param value - The value to repeat.\n *\n * @param count - The number of times to repeat the value.\n *\n * @returns A new iterator which repeats the specified value.\n *\n * #### Example\n * ```typescript\n * import { repeat } from '@lumino/algorithm';\n *\n * let stream = repeat(7, 3);\n *\n * Array.from(stream);  // [7, 7, 7]\n * ```\n */\nexport function* repeat<T>(value: T, count: number): IterableIterator<T> {\n  while (0 < count--) {\n    yield value;\n  }\n}\n\n/**\n * Create an iterator which yields a value a single time.\n *\n * @deprecated\n *\n * @param value - The value to wrap in an iterator.\n *\n * @returns A new iterator which yields the value a single time.\n *\n * #### Example\n * ```typescript\n * import { once } from '@lumino/algorithm';\n *\n * let stream = once(7);\n *\n * Array.from(stream);  // [7]\n * ```\n */\nexport function* once<T>(value: T): IterableIterator<T> {\n  yield value;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * An object which can produce a reverse iterator over its values.\n */\nexport interface IRetroable<T> {\n  /**\n   * Get a reverse iterator over the object's values.\n   *\n   * @returns An iterator which yields the object's values in reverse.\n   */\n  retro(): IterableIterator<T>;\n}\n\n/**\n * Create an iterator for a retroable object.\n *\n * @param object - The retroable or array-like object of interest.\n *\n * @returns An iterator which traverses the object's values in reverse.\n *\n * #### Example\n * ```typescript\n * import { retro } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = retro(data);\n *\n * Array.from(stream);  // [6, 5, 4, 3, 2, 1]\n * ```\n */\nexport function* retro<T>(\n  object: IRetroable<T> | ArrayLike<T>\n): IterableIterator<T> {\n  if (typeof (object as IRetroable<T>).retro === 'function') {\n    yield* (object as IRetroable<T>).retro();\n  } else {\n    for (let index = (object as ArrayLike<T>).length - 1; index > -1; index--) {\n      yield (object as ArrayLike<T>)[index];\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Topologically sort an iterable of edges.\n *\n * @param edges - The iterable object of edges to sort.\n *   An edge is represented as a 2-tuple of `[fromNode, toNode]`.\n *\n * @returns The topologically sorted array of nodes.\n *\n * #### Notes\n * If a cycle is present in the graph, the cycle will be ignored and\n * the return value will be only approximately sorted.\n *\n * #### Example\n * ```typescript\n * import { topologicSort } from '@lumino/algorithm';\n *\n * let data = [\n *   ['d', 'e'],\n *   ['c', 'd'],\n *   ['a', 'b'],\n *   ['b', 'c']\n * ];\n *\n * topologicSort(data);  // ['a', 'b', 'c', 'd', 'e']\n * ```\n */\nexport function topologicSort<T>(edges: Iterable<[T, T]>): T[] {\n  // Setup the shared sorting state.\n  let sorted: T[] = [];\n  let visited = new Set<T>();\n  let graph = new Map<T, T[]>();\n\n  // Add the edges to the graph.\n  for (const edge of edges) {\n    addEdge(edge);\n  }\n\n  // Visit each node in the graph.\n  for (const [k] of graph) {\n    visit(k);\n  }\n\n  // Return the sorted results.\n  return sorted;\n\n  // Add an edge to the graph.\n  function addEdge(edge: [T, T]): void {\n    let [fromNode, toNode] = edge;\n    let children = graph.get(toNode);\n    if (children) {\n      children.push(fromNode);\n    } else {\n      graph.set(toNode, [fromNode]);\n    }\n  }\n\n  // Recursively visit the node.\n  function visit(node: T): void {\n    if (visited.has(node)) {\n      return;\n    }\n    visited.add(node);\n    let children = graph.get(node);\n    if (children) {\n      for (const child of children) {\n        visit(child);\n      }\n    }\n    sorted.push(node);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Iterate over an iterable using a stepped increment.\n *\n * @param object - The iterable object of interest.\n *\n * @param step - The distance to step on each iteration. A value\n *   of less than `1` will behave the same as a value of `1`.\n *\n * @returns An iterator which traverses the iterable step-wise.\n *\n * #### Example\n * ```typescript\n * import { stride } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = stride(data, 2);\n *\n * Array.from(stream);  // [1, 3, 5];\n * ```\n */\nexport function* stride<T>(\n  object: Iterable<T>,\n  step: number\n): IterableIterator<T> {\n  let count = 0;\n  for (const value of object) {\n    if (0 === count++ % step) {\n      yield value;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for string-specific algorithms.\n */\nexport namespace StringExt {\n  /**\n   * Find the indices of characters in a source text.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The matched indices, or `null` if there is no match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * In order for there to be a match, all of the characters in `query`\n   * **must** appear in `source` in the order given by `query`.\n   *\n   * Characters are matched using strict `===` equality.\n   */\n  export function findIndices(\n    source: string,\n    query: string,\n    start = 0\n  ): number[] | null {\n    let indices = new Array<number>(query.length);\n    for (let i = 0, j = start, n = query.length; i < n; ++i, ++j) {\n      j = source.indexOf(query[i], j);\n      if (j === -1) {\n        return null;\n      }\n      indices[i] = j;\n    }\n    return indices;\n  }\n\n  /**\n   * The result of a string match function.\n   */\n  export interface IMatchResult {\n    /**\n     * A score which indicates the strength of the match.\n     *\n     * The documentation of a given match function should specify\n     * whether a lower or higher score is a stronger match.\n     */\n    score: number;\n\n    /**\n     * The indices of the matched characters in the source text.\n     *\n     * The indices will appear in increasing order.\n     */\n    indices: number[];\n  }\n\n  /**\n   * A string matcher which uses a sum-of-squares algorithm.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The match result, or `null` if there is no match.\n   *   A lower `score` represents a stronger match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * This scoring algorithm uses a sum-of-squares approach to determine\n   * the score. In order for there to be a match, all of the characters\n   * in `query` **must** appear in `source` in order. The index of each\n   * matching character is squared and added to the score. This means\n   * that early and consecutive character matches are preferred, while\n   * late matches are heavily penalized.\n   */\n  export function matchSumOfSquares(\n    source: string,\n    query: string,\n    start = 0\n  ): IMatchResult | null {\n    let indices = findIndices(source, query, start);\n    if (!indices) {\n      return null;\n    }\n    let score = 0;\n    for (let i = 0, n = indices.length; i < n; ++i) {\n      let j = indices[i] - start;\n      score += j * j;\n    }\n    return { score, indices };\n  }\n\n  /**\n   * A string matcher which uses a sum-of-deltas algorithm.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The match result, or `null` if there is no match.\n   *   A lower `score` represents a stronger match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * This scoring algorithm uses a sum-of-deltas approach to determine\n   * the score. In order for there to be a match, all of the characters\n   * in `query` **must** appear in `source` in order. The delta between\n   * the indices are summed to create the score. This means that groups\n   * of matched characters are preferred, while fragmented matches are\n   * penalized.\n   */\n  export function matchSumOfDeltas(\n    source: string,\n    query: string,\n    start = 0\n  ): IMatchResult | null {\n    let indices = findIndices(source, query, start);\n    if (!indices) {\n      return null;\n    }\n    let score = 0;\n    let last = start - 1;\n    for (let i = 0, n = indices.length; i < n; ++i) {\n      let j = indices[i];\n      score += j - last - 1;\n      last = j;\n    }\n    return { score, indices };\n  }\n\n  /**\n   * Highlight the matched characters of a source text.\n   *\n   * @param source - The text which should be highlighted.\n   *\n   * @param indices - The indices of the matched characters. They must\n   *   appear in increasing order and must be in bounds of the source.\n   *\n   * @param fn - The function to apply to the matched chunks.\n   *\n   * @returns An array of unmatched and highlighted chunks.\n   */\n  export function highlight<T>(\n    source: string,\n    indices: ReadonlyArray<number>,\n    fn: (chunk: string) => T\n  ): Array<string | T> {\n    // Set up the result array.\n    let result: Array<string | T> = [];\n\n    // Set up the counter variables.\n    let k = 0;\n    let last = 0;\n    let n = indices.length;\n\n    // Iterator over each index.\n    while (k < n) {\n      // Set up the chunk indices.\n      let i = indices[k];\n      let j = indices[k];\n\n      // Advance the right chunk index until it's non-contiguous.\n      while (++k < n && indices[k] === j + 1) {\n        j++;\n      }\n\n      // Extract the unmatched text.\n      if (last < i) {\n        result.push(source.slice(last, i));\n      }\n\n      // Extract and highlight the matched text.\n      if (i < j + 1) {\n        result.push(fn(source.slice(i, j + 1)));\n      }\n\n      // Update the last visited index.\n      last = j + 1;\n    }\n\n    // Extract any remaining unmatched text.\n    if (last < source.length) {\n      result.push(source.slice(last));\n    }\n\n    // Return the highlighted result.\n    return result;\n  }\n\n  /**\n   * A 3-way string comparison function.\n   *\n   * @param a - The first string of interest.\n   *\n   * @param b - The second string of interest.\n   *\n   * @returns `-1` if `a < b`, else `1` if `a > b`, else `0`.\n   */\n  export function cmp(a: string, b: string): number {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Take a fixed number of items from an iterable.\n *\n * @param object - The iterable object of interest.\n *\n * @param count - The number of items to take from the iterable.\n *\n * @returns An iterator which yields the specified number of items\n *   from the source iterable.\n *\n * #### Notes\n * The returned iterator will exhaust early if the source iterable\n * contains an insufficient number of items.\n *\n * #### Example\n * ```typescript\n * import { take } from '@lumino/algorithm';\n *\n * let stream = take([5, 4, 3, 2, 1, 0, -1], 3);\n *\n * Array.from(stream);  // [5, 4, 3]\n * ```\n */\nexport function* take<T>(\n  object: Iterable<T>,\n  count: number\n): IterableIterator<T> {\n  if (count < 1) {\n    return;\n  }\n  const it = object[Symbol.iterator]();\n  let item: IteratorResult<T>;\n  while (0 < count-- && !(item = it.next()).done) {\n    yield item.value;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { every } from './iter';\n\n/**\n * Iterate several iterables in lockstep.\n *\n * @param objects - The iterable objects of interest.\n *\n * @returns An iterator which yields successive tuples of values where\n *   each value is taken in turn from the provided iterables. It will\n *   be as long as the shortest provided iterable.\n *\n * #### Example\n * ```typescript\n * import { zip } from '@lumino/algorithm';\n *\n * let data1 = [1, 2, 3];\n * let data2 = [4, 5, 6];\n *\n * let stream = zip(data1, data2);\n *\n * Array.from(stream);  // [[1, 4], [2, 5], [3, 6]]\n * ```\n */\nexport function* zip<T>(...objects: Iterable<T>[]): IterableIterator<T[]> {\n  const iters = objects.map(obj => obj[Symbol.iterator]());\n  let tuple = iters.map(it => it.next());\n  for (; every(tuple, item => !item.done); tuple = iters.map(it => it.next())) {\n    yield tuple.map(item => item.value);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * @packageDocumentation\n * @module signaling\n */\nimport { ArrayExt, find } from '@lumino/algorithm';\nimport { PromiseDelegate } from '@lumino/coreutils';\n\n/**\n * A type alias for a slot function.\n *\n * @param sender - The object emitting the signal.\n *\n * @param args - The args object emitted with the signal.\n *\n * #### Notes\n * A slot is invoked when a signal to which it is connected is emitted.\n */\nexport type Slot<T, U> = (sender: T, args: U) => void;\n\n/**\n * An object used for type-safe inter-object communication.\n *\n * #### Notes\n * Signals provide a type-safe implementation of the publish-subscribe\n * pattern. An object (publisher) declares which signals it will emit,\n * and consumers connect callbacks (subscribers) to those signals. The\n * subscribers are invoked whenever the publisher emits the signal.\n */\nexport interface ISignal<T, U> {\n  /**\n   * Connect a slot to the signal.\n   *\n   * @param slot - The slot to invoke when the signal is emitted.\n   *\n   * @param thisArg - The `this` context for the slot. If provided,\n   *   this must be a non-primitive object.\n   *\n   * @returns `true` if the connection succeeds, `false` otherwise.\n   *\n   * #### Notes\n   * Slots are invoked in the order in which they are connected.\n   *\n   * Signal connections are unique. If a connection already exists for\n   * the given `slot` and `thisArg`, this method returns `false`.\n   *\n   * A newly connected slot will not be invoked until the next time the\n   * signal is emitted, even if the slot is connected while the signal\n   * is dispatching.\n   */\n  connect(slot: Slot<T, U>, thisArg?: any): boolean;\n\n  /**\n   * Disconnect a slot from the signal.\n   *\n   * @param slot - The slot to disconnect from the signal.\n   *\n   * @param thisArg - The `this` context for the slot. If provided,\n   *   this must be a non-primitive object.\n   *\n   * @returns `true` if the connection is removed, `false` otherwise.\n   *\n   * #### Notes\n   * If no connection exists for the given `slot` and `thisArg`, this\n   * method returns `false`.\n   *\n   * A disconnected slot will no longer be invoked, even if the slot\n   * is disconnected while the signal is dispatching.\n   */\n  disconnect(slot: Slot<T, U>, thisArg?: any): boolean;\n}\n\n/**\n * An object that is both a signal and an async iterable.\n */\nexport interface IStream<T, U> extends ISignal<T, U>, AsyncIterable<U> {}\n\n/**\n * A concrete implementation of `ISignal`.\n *\n * #### Example\n * ```typescript\n * import { ISignal, Signal } from '@lumino/signaling';\n *\n * class SomeClass {\n *\n *   constructor(name: string) {\n *     this.name = name;\n *   }\n *\n *   readonly name: string;\n *\n *   get valueChanged: ISignal<this, number> {\n *     return this._valueChanged;\n *   }\n *\n *   get value(): number {\n *     return this._value;\n *   }\n *\n *   set value(value: number) {\n *     if (value === this._value) {\n *       return;\n *     }\n *     this._value = value;\n *     this._valueChanged.emit(value);\n *   }\n *\n *   private _value = 0;\n *   private _valueChanged = new Signal<this, number>(this);\n * }\n *\n * function logger(sender: SomeClass, value: number): void {\n *   console.log(sender.name, value);\n * }\n *\n * let m1 = new SomeClass('foo');\n * let m2 = new SomeClass('bar');\n *\n * m1.valueChanged.connect(logger);\n * m2.valueChanged.connect(logger);\n *\n * m1.value = 42;  // logs: foo 42\n * m2.value = 17;  // logs: bar 17\n * ```\n */\nexport class Signal<T, U> implements ISignal<T, U> {\n  /**\n   * Construct a new signal.\n   *\n   * @param sender - The sender which owns the signal.\n   */\n  constructor(sender: T) {\n    this.sender = sender;\n  }\n\n  /**\n   * The sender which owns the signal.\n   */\n  readonly sender: T;\n\n  /**\n   * Connect a slot to the signal.\n   *\n   * @param slot - The slot to invoke when the signal is emitted.\n   *\n   * @param thisArg - The `this` context for the slot. If provided,\n   *   this must be a non-primitive object.\n   *\n   * @returns `true` if the connection succeeds, `false` otherwise.\n   */\n  connect(slot: Slot<T, U>, thisArg?: unknown): boolean {\n    return Private.connect(this, slot, thisArg);\n  }\n\n  /**\n   * Disconnect a slot from the signal.\n   *\n   * @param slot - The slot to disconnect from the signal.\n   *\n   * @param thisArg - The `this` context for the slot. If provided,\n   *   this must be a non-primitive object.\n   *\n   * @returns `true` if the connection is removed, `false` otherwise.\n   */\n  disconnect(slot: Slot<T, U>, thisArg?: unknown): boolean {\n    return Private.disconnect(this, slot, thisArg);\n  }\n\n  /**\n   * Emit the signal and invoke the connected slots.\n   *\n   * @param args - The args to pass to the connected slots.\n   *\n   * #### Notes\n   * Slots are invoked synchronously in connection order.\n   *\n   * Exceptions thrown by connected slots will be caught and logged.\n   */\n  emit(args: U): void {\n    Private.emit(this, args);\n  }\n}\n\n/**\n * The namespace for the `Signal` class statics.\n */\nexport namespace Signal {\n  /**\n   * Remove all connections between a sender and receiver.\n   *\n   * @param sender - The sender object of interest.\n   *\n   * @param receiver - The receiver object of interest.\n   *\n   * #### Notes\n   * If a `thisArg` is provided when connecting a signal, that object\n   * is considered the receiver. Otherwise, the `slot` is considered\n   * the receiver.\n   */\n  export function disconnectBetween(sender: unknown, receiver: unknown): void {\n    Private.disconnectBetween(sender, receiver);\n  }\n\n  /**\n   * Remove all connections where the given object is the sender.\n   *\n   * @param sender - The sender object of interest.\n   */\n  export function disconnectSender(sender: unknown): void {\n    Private.disconnectSender(sender);\n  }\n\n  /**\n   * Remove all connections where the given object is the receiver.\n   *\n   * @param receiver - The receiver object of interest.\n   *\n   * #### Notes\n   * If a `thisArg` is provided when connecting a signal, that object\n   * is considered the receiver. Otherwise, the `slot` is considered\n   * the receiver.\n   */\n  export function disconnectReceiver(receiver: unknown): void {\n    Private.disconnectReceiver(receiver);\n  }\n\n  /**\n   * Remove all connections where an object is the sender or receiver.\n   *\n   * @param object - The object of interest.\n   *\n   * #### Notes\n   * If a `thisArg` is provided when connecting a signal, that object\n   * is considered the receiver. Otherwise, the `slot` is considered\n   * the receiver.\n   */\n  export function disconnectAll(object: unknown): void {\n    Private.disconnectAll(object);\n  }\n\n  /**\n   * Clear all signal data associated with the given object.\n   *\n   * @param object - The object for which the data should be cleared.\n   *\n   * #### Notes\n   * This removes all signal connections and any other signal data\n   * associated with the object.\n   */\n  export function clearData(object: unknown): void {\n    Private.disconnectAll(object);\n  }\n\n  /**\n   * A type alias for the exception handler function.\n   */\n  export type ExceptionHandler = (err: Error) => void;\n\n  /**\n   * Get the signal exception handler.\n   *\n   * @returns The current exception handler.\n   *\n   * #### Notes\n   * The default exception handler is `console.error`.\n   */\n  export function getExceptionHandler(): ExceptionHandler {\n    return Private.exceptionHandler;\n  }\n\n  /**\n   * Set the signal exception handler.\n   *\n   * @param handler - The function to use as the exception handler.\n   *\n   * @returns The old exception handler.\n   *\n   * #### Notes\n   * The exception handler is invoked when a slot throws an exception.\n   */\n  export function setExceptionHandler(\n    handler: ExceptionHandler\n  ): ExceptionHandler {\n    let old = Private.exceptionHandler;\n    Private.exceptionHandler = handler;\n    return old;\n  }\n}\n\n/**\n * A concrete implementation of `IStream`.\n *\n * #### Example\n * ```typescript\n * import { IStream, Stream } from '@lumino/signaling';\n *\n * class SomeClass {\n *\n *   constructor(name: string) {\n *     this.name = name;\n *   }\n *\n *   readonly name: string;\n *\n *   get pings(): IStream<this, string> {\n *     return this._pings;\n *   }\n *\n *   ping(value: string) {\n *     this._pings.emit(value);\n *   }\n *\n *   private _pings = new Stream<this, string>(this);\n * }\n *\n * let m1 = new SomeClass('foo');\n *\n * m1.pings.connect((_, value: string) => {\n *   console.log('connect', value);\n * });\n *\n * void (async () => {\n *   for await (const ping of m1.pings) {\n *     console.log('iterator', ping);\n *   }\n * })();\n *\n * m1.ping('alpha');  // logs: connect alpha\n *                    // logs: iterator alpha\n * m1.ping('beta');   // logs: connect beta\n *                    // logs: iterator beta\n * ```\n */\nexport class Stream<T, U> extends Signal<T, U> implements IStream<T, U> {\n  /**\n   * Return an async iterator that yields every emission.\n   */\n  async *[Symbol.asyncIterator](): AsyncIterableIterator<U> {\n    let pending = this._pending;\n    while (true) {\n      try {\n        const { args, next } = await pending.promise;\n        pending = next;\n        yield args;\n      } catch (_) {\n        return; // Any promise rejection stops the iterator.\n      }\n    }\n  }\n\n  /**\n   * Emit the signal, invoke the connected slots, and yield the emission.\n   *\n   * @param args - The args to pass to the connected slots.\n   */\n  emit(args: U): void {\n    const pending = this._pending;\n    const next = (this._pending = new PromiseDelegate());\n    pending.resolve({ args, next });\n    super.emit(args);\n  }\n\n  /**\n   * Stop the stream's async iteration.\n   */\n  stop(): void {\n    this._pending.promise.catch(() => undefined);\n    this._pending.reject('stop');\n    this._pending = new PromiseDelegate();\n  }\n\n  private _pending: Private.Pending<U> = new PromiseDelegate();\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A pending promise in a promise chain underlying a stream.\n   */\n  export type Pending<U> = PromiseDelegate<{ args: U; next: Pending<U> }>;\n\n  /**\n   * The signal exception handler function.\n   */\n  export let exceptionHandler: Signal.ExceptionHandler = (err: Error) => {\n    console.error(err);\n  };\n\n  /**\n   * Connect a slot to a signal.\n   *\n   * @param signal - The signal of interest.\n   *\n   * @param slot - The slot to invoke when the signal is emitted.\n   *\n   * @param thisArg - The `this` context for the slot. If provided,\n   *   this must be a non-primitive object.\n   *\n   * @returns `true` if the connection succeeds, `false` otherwise.\n   */\n  export function connect<T, U>(\n    signal: Signal<T, U>,\n    slot: Slot<T, U>,\n    thisArg?: unknown\n  ): boolean {\n    // Coerce a `null` `thisArg` to `undefined`.\n    thisArg = thisArg || undefined;\n\n    // Ensure the sender's array of receivers is created.\n    let receivers = receiversForSender.get(signal.sender);\n    if (!receivers) {\n      receivers = [];\n      receiversForSender.set(signal.sender, receivers);\n    }\n\n    // Bail if a matching connection already exists.\n    if (findConnection(receivers, signal, slot, thisArg)) {\n      return false;\n    }\n\n    // Choose the best object for the receiver.\n    let receiver = thisArg || slot;\n\n    // Ensure the receiver's array of senders is created.\n    let senders = sendersForReceiver.get(receiver);\n    if (!senders) {\n      senders = [];\n      sendersForReceiver.set(receiver, senders);\n    }\n\n    // Create a new connection and add it to the end of each array.\n    let connection = { signal, slot, thisArg };\n    receivers.push(connection);\n    senders.push(connection);\n\n    // Indicate a successful connection.\n    return true;\n  }\n\n  /**\n   * Disconnect a slot from a signal.\n   *\n   * @param signal - The signal of interest.\n   *\n   * @param slot - The slot to disconnect from the signal.\n   *\n   * @param thisArg - The `this` context for the slot. If provided,\n   *   this must be a non-primitive object.\n   *\n   * @returns `true` if the connection is removed, `false` otherwise.\n   */\n  export function disconnect<T, U>(\n    signal: Signal<T, U>,\n    slot: Slot<T, U>,\n    thisArg?: unknown\n  ): boolean {\n    // Coerce a `null` `thisArg` to `undefined`.\n    thisArg = thisArg || undefined;\n\n    // Lookup the list of receivers, and bail if none exist.\n    let receivers = receiversForSender.get(signal.sender);\n    if (!receivers || receivers.length === 0) {\n      return false;\n    }\n\n    // Bail if no matching connection exits.\n    let connection = findConnection(receivers, signal, slot, thisArg);\n    if (!connection) {\n      return false;\n    }\n\n    // Choose the best object for the receiver.\n    let receiver = thisArg || slot;\n\n    // Lookup the array of senders, which is now known to exist.\n    let senders = sendersForReceiver.get(receiver)!;\n\n    // Clear the connection and schedule cleanup of the arrays.\n    connection.signal = null;\n    scheduleCleanup(receivers);\n    scheduleCleanup(senders);\n\n    // Indicate a successful disconnection.\n    return true;\n  }\n\n  /**\n   * Remove all connections between a sender and receiver.\n   *\n   * @param sender - The sender object of interest.\n   *\n   * @param receiver - The receiver object of interest.\n   */\n  export function disconnectBetween(sender: unknown, receiver: unknown): void {\n    // If there are no receivers, there is nothing to do.\n    let receivers = receiversForSender.get(sender);\n    if (!receivers || receivers.length === 0) {\n      return;\n    }\n\n    // If there are no senders, there is nothing to do.\n    let senders = sendersForReceiver.get(receiver);\n    if (!senders || senders.length === 0) {\n      return;\n    }\n\n    // Clear each connection between the sender and receiver.\n    for (const connection of senders) {\n      // Skip connections which have already been cleared.\n      if (!connection.signal) {\n        continue;\n      }\n\n      // Clear the connection if it matches the sender.\n      if (connection.signal.sender === sender) {\n        connection.signal = null;\n      }\n    }\n\n    // Schedule a cleanup of the senders and receivers.\n    scheduleCleanup(receivers);\n    scheduleCleanup(senders);\n  }\n\n  /**\n   * Remove all connections where the given object is the sender.\n   *\n   * @param sender - The sender object of interest.\n   */\n  export function disconnectSender(sender: unknown): void {\n    // If there are no receivers, there is nothing to do.\n    let receivers = receiversForSender.get(sender);\n    if (!receivers || receivers.length === 0) {\n      return;\n    }\n\n    // Clear each receiver connection.\n    for (const connection of receivers) {\n      // Skip connections which have already been cleared.\n      if (!connection.signal) {\n        continue;\n      }\n\n      // Choose the best object for the receiver.\n      let receiver = connection.thisArg || connection.slot;\n\n      // Clear the connection.\n      connection.signal = null;\n\n      // Cleanup the array of senders, which is now known to exist.\n      scheduleCleanup(sendersForReceiver.get(receiver)!);\n    }\n\n    // Schedule a cleanup of the receivers.\n    scheduleCleanup(receivers);\n  }\n\n  /**\n   * Remove all connections where the given object is the receiver.\n   *\n   * @param receiver - The receiver object of interest.\n   */\n  export function disconnectReceiver(receiver: unknown): void {\n    // If there are no senders, there is nothing to do.\n    let senders = sendersForReceiver.get(receiver);\n    if (!senders || senders.length === 0) {\n      return;\n    }\n\n    // Clear each sender connection.\n    for (const connection of senders) {\n      // Skip connections which have already been cleared.\n      if (!connection.signal) {\n        continue;\n      }\n\n      // Lookup the sender for the connection.\n      let sender = connection.signal.sender;\n\n      // Clear the connection.\n      connection.signal = null;\n\n      // Cleanup the array of receivers, which is now known to exist.\n      scheduleCleanup(receiversForSender.get(sender)!);\n    }\n\n    // Schedule a cleanup of the list of senders.\n    scheduleCleanup(senders);\n  }\n\n  /**\n   * Remove all connections where an object is the sender or receiver.\n   *\n   * @param object - The object of interest.\n   */\n  export function disconnectAll(object: unknown): void {\n    // Remove all connections where the given object is the sender.\n    disconnectSender(object);\n    // Remove all connections where the given object is the receiver.\n    disconnectReceiver(object);\n  }\n\n  /**\n   * Emit a signal and invoke its connected slots.\n   *\n   * @param signal - The signal of interest.\n   *\n   * @param args - The args to pass to the connected slots.\n   *\n   * #### Notes\n   * Slots are invoked synchronously in connection order.\n   *\n   * Exceptions thrown by connected slots will be caught and logged.\n   */\n  export function emit<T, U>(signal: Signal<T, U>, args: U): void {\n    // If there are no receivers, there is nothing to do.\n    let receivers = receiversForSender.get(signal.sender);\n    if (!receivers || receivers.length === 0) {\n      return;\n    }\n\n    // Invoke the slots for connections with a matching signal.\n    // Any connections added during emission are not invoked.\n    for (let i = 0, n = receivers.length; i < n; ++i) {\n      let connection = receivers[i];\n      if (connection.signal === signal) {\n        invokeSlot(connection, args);\n      }\n    }\n  }\n\n  /**\n   * An object which holds connection data.\n   */\n  interface IConnection {\n    /**\n     * The signal for the connection.\n     *\n     * A `null` signal indicates a cleared connection.\n     */\n    signal: Signal<any, any> | null;\n\n    /**\n     * The slot connected to the signal.\n     */\n    readonly slot: Slot<any, any>;\n\n    /**\n     * The `this` context for the slot.\n     */\n    readonly thisArg: any;\n  }\n\n  /**\n   * A weak mapping of sender to array of receiver connections.\n   */\n  const receiversForSender = new WeakMap<any, IConnection[]>();\n\n  /**\n   * A weak mapping of receiver to array of sender connections.\n   */\n  const sendersForReceiver = new WeakMap<any, IConnection[]>();\n\n  /**\n   * A set of connection arrays which are pending cleanup.\n   */\n  const dirtySet = new Set<IConnection[]>();\n\n  /**\n   * A function to schedule an event loop callback.\n   */\n  const schedule = (() => {\n    let ok = typeof requestAnimationFrame === 'function';\n    return ok ? requestAnimationFrame : setImmediate;\n  })();\n\n  /**\n   * Find a connection which matches the given parameters.\n   */\n  function findConnection(\n    connections: IConnection[],\n    signal: Signal<any, any>,\n    slot: Slot<any, any>,\n    thisArg: any\n  ): IConnection | undefined {\n    return find(\n      connections,\n      connection =>\n        connection.signal === signal &&\n        connection.slot === slot &&\n        connection.thisArg === thisArg\n    );\n  }\n\n  /**\n   * Invoke a slot with the given parameters.\n   *\n   * The connection is assumed to be valid.\n   *\n   * Exceptions in the slot will be caught and logged.\n   */\n  function invokeSlot(connection: IConnection, args: any): void {\n    let { signal, slot, thisArg } = connection;\n    try {\n      slot.call(thisArg, signal!.sender, args);\n    } catch (err) {\n      exceptionHandler(err);\n    }\n  }\n\n  /**\n   * Schedule a cleanup of a connection array.\n   *\n   * This will add the array to the dirty set and schedule a deferred\n   * cleanup of the array contents. On cleanup, any connection with a\n   * `null` signal will be removed from the array.\n   */\n  function scheduleCleanup(array: IConnection[]): void {\n    if (dirtySet.size === 0) {\n      schedule(cleanupDirtySet);\n    }\n    dirtySet.add(array);\n  }\n\n  /**\n   * Cleanup the connection lists in the dirty set.\n   *\n   * This function should only be invoked asynchronously, when the\n   * stack frame is guaranteed to not be on the path of user code.\n   */\n  function cleanupDirtySet(): void {\n    dirtySet.forEach(cleanupConnections);\n    dirtySet.clear();\n  }\n\n  /**\n   * Cleanup the dirty connections in a connections array.\n   *\n   * This will remove any connection with a `null` signal.\n   *\n   * This function should only be invoked asynchronously, when the\n   * stack frame is guaranteed to not be on the path of user code.\n   */\n  function cleanupConnections(connections: IConnection[]): void {\n    ArrayExt.removeAllWhere(connections, isDeadConnection);\n  }\n\n  /**\n   * Test whether a connection is dead.\n   *\n   * A dead connection has a `null` signal.\n   */\n  function isDeadConnection(connection: IConnection): boolean {\n    return connection.signal === null;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { PromiseDelegate } from '@lumino/coreutils';\nimport { IObservableDisposable } from '@lumino/disposable';\nimport { AttachedProperty } from '@lumino/properties';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { IObjectPool, IRestorable } from './interfaces';\n\n/**\n * An object pool that supports restoration.\n *\n * @typeparam T - The type of object being tracked.\n */\nexport class RestorablePool<\n    T extends IObservableDisposable = IObservableDisposable\n  >\n  implements IObjectPool<T>, IRestorable<T>\n{\n  /**\n   * Create a new restorable pool.\n   *\n   * @param options - The instantiation options for a restorable pool.\n   */\n  constructor(options: RestorablePool.IOptions) {\n    this.namespace = options.namespace;\n  }\n\n  /**\n   * A namespace for all tracked objects.\n   */\n  readonly namespace: string;\n\n  /**\n   * A signal emitted when an object object is added.\n   *\n   * #### Notes\n   * This signal will only fire when an object is added to the pool.\n   * It will not fire if an object injected into the pool.\n   */\n  get added(): ISignal<this, T> {\n    return this._added;\n  }\n\n  /**\n   * The current object.\n   *\n   * #### Notes\n   * The restorable pool does not set `current`. It is intended for client use.\n   *\n   * If `current` is set to an object that does not exist in the pool, it is a\n   * no-op.\n   */\n  get current(): T | null {\n    return this._current;\n  }\n  set current(obj: T | null) {\n    if (this._current === obj) {\n      return;\n    }\n    if (obj !== null && this._objects.has(obj)) {\n      this._current = obj;\n      this._currentChanged.emit(this._current);\n    }\n  }\n\n  /**\n   * A signal emitted when the current widget changes.\n   */\n  get currentChanged(): ISignal<this, T | null> {\n    return this._currentChanged;\n  }\n\n  /**\n   * Test whether the pool is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * A promise resolved when the restorable pool has been restored.\n   */\n  get restored(): Promise<void> {\n    return this._restored.promise;\n  }\n\n  /**\n   * The number of objects held by the pool.\n   */\n  get size(): number {\n    return this._objects.size;\n  }\n\n  /**\n   * A signal emitted when an object is updated.\n   */\n  get updated(): ISignal<this, T> {\n    return this._updated;\n  }\n\n  /**\n   * Add a new object to the pool.\n   *\n   * @param obj - The object object being added.\n   *\n   * #### Notes\n   * The object passed into the pool is added synchronously; its existence in\n   * the pool can be checked with the `has()` method. The promise this method\n   * returns resolves after the object has been added and saved to an underlying\n   * restoration connector, if one is available.\n   */\n  async add(obj: T): Promise<void> {\n    if (obj.isDisposed) {\n      const warning = 'A disposed object cannot be added.';\n      console.warn(warning, obj);\n      throw new Error(warning);\n    }\n\n    if (this._objects.has(obj)) {\n      const warning = 'This object already exists in the pool.';\n      console.warn(warning, obj);\n      throw new Error(warning);\n    }\n\n    this._objects.add(obj);\n    obj.disposed.connect(this._onInstanceDisposed, this);\n\n    if (Private.injectedProperty.get(obj)) {\n      return;\n    }\n\n    if (this._restore) {\n      const { connector } = this._restore;\n      const objName = this._restore.name(obj);\n\n      if (objName) {\n        const name = `${this.namespace}:${objName}`;\n        const data = this._restore.args?.(obj);\n\n        Private.nameProperty.set(obj, name);\n        await connector.save(name, { data });\n      }\n    }\n\n    // Emit the added signal.\n    this._added.emit(obj);\n  }\n\n  /**\n   * Dispose of the resources held by the pool.\n   *\n   * #### Notes\n   * Disposing a pool does not affect the underlying data in the data connector,\n   * it simply disposes the client-side pool without making any connector calls.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._current = null;\n    this._isDisposed = true;\n    this._objects.clear();\n    Signal.clearData(this);\n  }\n\n  /**\n   * Find the first object in the pool that satisfies a filter function.\n   *\n   * @param - fn The filter function to call on each object.\n   */\n  find(fn: (obj: T) => boolean): T | undefined {\n    const values = this._objects.values();\n    for (const value of values) {\n      if (fn(value)) {\n        return value;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Iterate through each object in the pool.\n   *\n   * @param fn - The function to call on each object.\n   */\n  forEach(fn: (obj: T) => void): void {\n    this._objects.forEach(fn);\n  }\n\n  /**\n   * Filter the objects in the pool based on a predicate.\n   *\n   * @param fn - The function by which to filter.\n   */\n  filter(fn: (obj: T) => boolean): T[] {\n    const filtered: T[] = [];\n    this.forEach(obj => {\n      if (fn(obj)) {\n        filtered.push(obj);\n      }\n    });\n    return filtered;\n  }\n\n  /**\n   * Inject an object into the restorable pool without the pool handling its\n   * restoration lifecycle.\n   *\n   * @param obj - The object to inject into the pool.\n   */\n  inject(obj: T): Promise<void> {\n    Private.injectedProperty.set(obj, true);\n    return this.add(obj);\n  }\n\n  /**\n   * Check if this pool has the specified object.\n   *\n   * @param obj - The object whose existence is being checked.\n   */\n  has(obj: T): boolean {\n    return this._objects.has(obj);\n  }\n\n  /**\n   * Restore the objects in this pool's namespace.\n   *\n   * @param options - The configuration options that describe restoration.\n   *\n   * @returns A promise that resolves when restoration has completed.\n   *\n   * #### Notes\n   * This function should almost never be invoked by client code. Its primary\n   * use case is to be invoked by a layout restorer plugin that handles\n   * multiple restorable pools and, when ready, asks them each to restore their\n   * respective objects.\n   */\n  async restore(options: IRestorable.IOptions<T>): Promise<any> {\n    if (this._hasRestored) {\n      throw new Error('This pool has already been restored.');\n    }\n\n    this._hasRestored = true;\n\n    const { command, connector, registry, when } = options;\n    const namespace = this.namespace;\n    const promises = when\n      ? [connector.list(namespace)].concat(when)\n      : [connector.list(namespace)];\n\n    this._restore = options;\n\n    const [saved] = await Promise.all(promises);\n    const values = await Promise.all(\n      saved.ids.map(async (id, index) => {\n        const value = saved.values[index];\n        const args = value && (value as any).data;\n\n        if (args === undefined) {\n          return connector.remove(id);\n        }\n\n        // Execute the command and if it fails, delete the state restore data.\n        return registry\n          .execute(command, args)\n          .catch(() => connector.remove(id));\n      })\n    );\n    this._restored.resolve();\n    return values;\n  }\n\n  /**\n   * Save the restore data for a given object.\n   *\n   * @param obj - The object being saved.\n   */\n  async save(obj: T): Promise<void> {\n    const injected = Private.injectedProperty.get(obj);\n\n    if (!this._restore || !this.has(obj) || injected) {\n      return;\n    }\n\n    const { connector } = this._restore;\n    const objName = this._restore.name(obj);\n    const oldName = Private.nameProperty.get(obj);\n    const newName = objName ? `${this.namespace}:${objName}` : '';\n\n    if (oldName && oldName !== newName) {\n      await connector.remove(oldName);\n    }\n\n    // Set the name property irrespective of whether the new name is null.\n    Private.nameProperty.set(obj, newName);\n\n    if (newName) {\n      const data = this._restore.args?.(obj);\n      await connector.save(newName, { data });\n    }\n\n    if (oldName !== newName) {\n      this._updated.emit(obj);\n    }\n  }\n\n  /**\n   * Clean up after disposed objects.\n   */\n  private _onInstanceDisposed(obj: T): void {\n    this._objects.delete(obj);\n\n    if (obj === this._current) {\n      this._current = null;\n      this._currentChanged.emit(this._current);\n    }\n\n    if (Private.injectedProperty.get(obj)) {\n      return;\n    }\n\n    if (!this._restore) {\n      return;\n    }\n\n    const { connector } = this._restore;\n    const name = Private.nameProperty.get(obj);\n\n    if (name) {\n      void connector.remove(name);\n    }\n  }\n\n  private _added = new Signal<this, T>(this);\n  private _current: T | null = null;\n  private _currentChanged = new Signal<this, T | null>(this);\n  private _hasRestored = false;\n  private _isDisposed = false;\n  private _objects = new Set<T>();\n  private _restore: IRestorable.IOptions<T> | null = null;\n  private _restored = new PromiseDelegate<void>();\n  private _updated = new Signal<this, T>(this);\n}\n\n/**\n * A namespace for `RestorablePool` statics.\n */\nexport namespace RestorablePool {\n  /**\n   * The instantiation options for the restorable pool.\n   */\n  export interface IOptions {\n    /**\n     * A namespace designating objects from this pool.\n     */\n    namespace: string;\n  }\n}\n\n/*\n * A namespace for private data.\n */\nnamespace Private {\n  /**\n   * An attached property to indicate whether an object has been injected.\n   */\n  export const injectedProperty = new AttachedProperty<\n    IObservableDisposable,\n    boolean\n  >({\n    name: 'injected',\n    create: () => false\n  });\n\n  /**\n   * An attached property for an object's ID.\n   */\n  export const nameProperty = new AttachedProperty<\n    IObservableDisposable,\n    string\n  >({\n    name: 'name',\n    create: () => ''\n  });\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { ReadonlyPartialJSONValue } from '@lumino/coreutils';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { IDataConnector } from './interfaces';\nimport { IStateDB } from './tokens';\n\n/**\n * The default concrete implementation of a state database.\n */\nexport class StateDB<\n  T extends ReadonlyPartialJSONValue = ReadonlyPartialJSONValue\n> implements IStateDB<T>\n{\n  /**\n   * Create a new state database.\n   *\n   * @param options - The instantiation options for a state database.\n   */\n  constructor(options: StateDB.IOptions<T> = {}) {\n    const { connector, transform } = options;\n\n    this._connector = connector || new StateDB.Connector();\n    if (!transform) {\n      this._ready = Promise.resolve(undefined);\n    } else {\n      this._ready = transform.then(transformation => {\n        const { contents, type } = transformation;\n\n        switch (type) {\n          case 'cancel':\n            return;\n          case 'clear':\n            return this._clear();\n          case 'merge':\n            return this._merge(contents || {});\n          case 'overwrite':\n            return this._overwrite(contents || {});\n          default:\n            return;\n        }\n      });\n    }\n  }\n\n  /**\n   * A signal that emits the change type any time a value changes.\n   */\n  get changed(): ISignal<this, StateDB.Change> {\n    return this._changed;\n  }\n\n  /**\n   * Clear the entire database.\n   */\n  async clear(): Promise<void> {\n    await this._ready;\n    await this._clear();\n  }\n\n  /**\n   * Retrieve a saved bundle from the database.\n   *\n   * @param id - The identifier used to retrieve a data bundle.\n   *\n   * @returns A promise that bears a data payload if available.\n   *\n   * #### Notes\n   * The `id` values of stored items in the state database are formatted:\n   * `'namespace:identifier'`, which is the same convention that command\n   * identifiers in JupyterLab use as well. While this is not a technical\n   * requirement for `fetch()`, `remove()`, and `save()`, it *is* necessary for\n   * using the `list(namespace: string)` method.\n   *\n   * The promise returned by this method may be rejected if an error occurs in\n   * retrieving the data. Non-existence of an `id` will succeed with the `value`\n   * `undefined`.\n   */\n  async fetch(id: string): Promise<T | undefined> {\n    await this._ready;\n    return this._fetch(id);\n  }\n\n  /**\n   * Retrieve all the saved bundles for a namespace.\n   *\n   * @param filter - The namespace prefix to retrieve.\n   *\n   * @returns A promise that bears a collection of payloads for a namespace.\n   *\n   * #### Notes\n   * Namespaces are entirely conventional entities. The `id` values of stored\n   * items in the state database are formatted: `'namespace:identifier'`, which\n   * is the same convention that command identifiers in JupyterLab use as well.\n   *\n   * If there are any errors in retrieving the data, they will be logged to the\n   * console in order to optimistically return any extant data without failing.\n   * This promise will always succeed.\n   */\n  async list(namespace: string): Promise<{ ids: string[]; values: T[] }> {\n    await this._ready;\n    return this._list(namespace);\n  }\n\n  /**\n   * Remove a value from the database.\n   *\n   * @param id - The identifier for the data being removed.\n   *\n   * @returns A promise that is rejected if remove fails and succeeds otherwise.\n   */\n  async remove(id: string): Promise<void> {\n    await this._ready;\n    await this._remove(id);\n    this._changed.emit({ id, type: 'remove' });\n  }\n\n  /**\n   * Save a value in the database.\n   *\n   * @param id - The identifier for the data being saved.\n   *\n   * @param value - The data being saved.\n   *\n   * @returns A promise that is rejected if saving fails and succeeds otherwise.\n   *\n   * #### Notes\n   * The `id` values of stored items in the state database are formatted:\n   * `'namespace:identifier'`, which is the same convention that command\n   * identifiers in JupyterLab use as well. While this is not a technical\n   * requirement for `fetch()`, `remove()`, and `save()`, it *is* necessary for\n   * using the `list(namespace: string)` method.\n   */\n  async save(id: string, value: T): Promise<void> {\n    await this._ready;\n    await this._save(id, value);\n    this._changed.emit({ id, type: 'save' });\n  }\n\n  /**\n   * Return a serialized copy of the state database's entire contents.\n   *\n   * @returns A promise that resolves with the database contents as JSON.\n   */\n  async toJSON(): Promise<{ readonly [id: string]: T }> {\n    await this._ready;\n\n    const { ids, values } = await this._list();\n\n    return values.reduce(\n      (acc, val, idx) => {\n        acc[ids[idx]] = val;\n        return acc;\n      },\n      {} as { [id: string]: T }\n    );\n  }\n\n  /**\n   * Clear the entire database.\n   */\n  private async _clear(): Promise<void> {\n    await Promise.all((await this._list()).ids.map(id => this._remove(id)));\n  }\n\n  /**\n   * Fetch a value from the database.\n   */\n  private async _fetch(id: string): Promise<T | undefined> {\n    const value = await this._connector.fetch(id);\n\n    if (value) {\n      return (JSON.parse(value) as Private.Envelope).v as T;\n    }\n  }\n\n  /**\n   * Fetch a list from the database.\n   */\n  private async _list(namespace = ''): Promise<{ ids: string[]; values: T[] }> {\n    const { ids, values } = await this._connector.list(namespace);\n\n    return {\n      ids,\n      values: values.map(val => (JSON.parse(val) as Private.Envelope).v as T)\n    };\n  }\n\n  /**\n   * Merge data into the state database.\n   */\n  private async _merge(contents: StateDB.Content<T>): Promise<void> {\n    await Promise.all(\n      Object.keys(contents).map(\n        key => contents[key] && this._save(key, contents[key]!)\n      )\n    );\n  }\n\n  /**\n   * Overwrite the entire database with new contents.\n   */\n  private async _overwrite(contents: StateDB.Content<T>): Promise<void> {\n    await this._clear();\n    await this._merge(contents);\n  }\n\n  /**\n   * Remove a key in the database.\n   */\n  private async _remove(id: string): Promise<void> {\n    return this._connector.remove(id);\n  }\n\n  /**\n   * Save a key and its value in the database.\n   */\n  private async _save(id: string, value: T): Promise<void> {\n    return this._connector.save(id, JSON.stringify({ v: value }));\n  }\n\n  private _changed = new Signal<this, StateDB.Change>(this);\n  private _connector: IDataConnector<string>;\n  private _ready: Promise<void>;\n}\n\n/**\n * A namespace for StateDB statics.\n */\nexport namespace StateDB {\n  /**\n   * A state database change.\n   */\n  export type Change = {\n    /**\n     * The key of the database item that was changed.\n     *\n     * #### Notes\n     * This field is set to `null` for global changes (i.e. `clear`).\n     */\n    id: string | null;\n\n    /**\n     * The type of change.\n     */\n    type: 'clear' | 'remove' | 'save';\n  };\n\n  /**\n   * A data transformation that can be applied to a state database.\n   */\n  export type DataTransform<\n    T extends ReadonlyPartialJSONValue = ReadonlyPartialJSONValue\n  > = {\n    /*\n     * The change operation being applied.\n     */\n    type: 'cancel' | 'clear' | 'merge' | 'overwrite';\n\n    /**\n     * The contents of the change operation.\n     */\n    contents: Content<T> | null;\n  };\n\n  /**\n   * Database content map\n   */\n  export type Content<T> = { [id: string]: T | undefined };\n\n  /**\n   * The instantiation options for a state database.\n   */\n  export interface IOptions<\n    T extends ReadonlyPartialJSONValue = ReadonlyPartialJSONValue\n  > {\n    /**\n     * Optional string key/value connector. Defaults to in-memory connector.\n     */\n    connector?: IDataConnector<string>;\n\n    /**\n     * An optional promise that resolves with a data transformation that is\n     * applied to the database contents before the database begins resolving\n     * client requests.\n     */\n    transform?: Promise<DataTransform<T>>;\n  }\n\n  /**\n   * An in-memory string key/value data connector.\n   */\n  export class Connector implements IDataConnector<string> {\n    /**\n     * Retrieve an item from the data connector.\n     */\n    async fetch(id: string): Promise<string> {\n      return this._storage[id];\n    }\n\n    /**\n     * Retrieve the list of items available from the data connector.\n     *\n     * @param namespace - If not empty, only keys whose first token before `:`\n     * exactly match `namespace` will be returned, e.g. `foo` in `foo:bar`.\n     */\n    async list(namespace = ''): Promise<{ ids: string[]; values: string[] }> {\n      return Object.keys(this._storage).reduce(\n        (acc, val) => {\n          if (namespace === '' ? true : namespace === val.split(':')[0]) {\n            acc.ids.push(val);\n            acc.values.push(this._storage[val]);\n          }\n          return acc;\n        },\n        { ids: [] as string[], values: [] as string[] }\n      );\n    }\n\n    /**\n     * Remove a value using the data connector.\n     */\n    async remove(id: string): Promise<void> {\n      delete this._storage[id];\n    }\n\n    /**\n     * Save a value using the data connector.\n     */\n    async save(id: string, value: string): Promise<void> {\n      this._storage[id] = value;\n    }\n\n    private _storage: { [key: string]: string } = {};\n  }\n}\n\n/*\n * A namespace for private module data.\n */\nnamespace Private {\n  /**\n   * An envelope around a JSON value stored in the state database.\n   */\n  export type Envelope = { readonly v: ReadonlyPartialJSONValue };\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { ReadonlyPartialJSONValue, Token } from '@lumino/coreutils';\nimport { IDataConnector } from './interfaces';\n\n/**\n * The default state database token.\n */\nexport const IStateDB = new Token<IStateDB>(\n  '@jupyterlab/coreutils:IStateDB',\n  `A service for the JupyterLab state database.\n  Use this if you want to store data that will persist across page loads.\n  See \"state database\" for more information.`\n);\n\n/**\n * The description of a state database.\n */\nexport interface IStateDB<\n  T extends ReadonlyPartialJSONValue = ReadonlyPartialJSONValue\n> extends IDataConnector<T> {\n  /**\n   * Return a serialized copy of the state database's entire contents.\n   *\n   * @returns A promise that bears the database contents as JSON.\n   */\n  toJSON(): Promise<{ [id: string]: T }>;\n}\n", "/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n/**\n * @packageDocumentation\n * @module statedb\n */\n\nexport * from './dataconnector';\nexport * from './interfaces';\nexport * from './restorablepool';\nexport * from './statedb';\nexport * from './tokens';\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { IDisposable } from '@lumino/disposable';\nimport { ISignal, Signal } from '@lumino/signaling';\n\n/**\n * A class that monitors activity on a signal.\n */\nexport class ActivityMonitor<Sender, Args> implements IDisposable {\n  /**\n   * Construct a new activity monitor.\n   */\n  constructor(options: ActivityMonitor.IOptions<Sender, Args>) {\n    options.signal.connect(this._onSignalFired, this);\n    this._timeout = options.timeout || 1000;\n  }\n\n  /**\n   * A signal emitted when activity has ceased.\n   */\n  get activityStopped(): ISignal<\n    this,\n    ActivityMonitor.IArguments<Sender, Args>\n  > {\n    return this._activityStopped;\n  }\n\n  /**\n   * The timeout associated with the monitor, in milliseconds.\n   */\n  get timeout(): number {\n    return this._timeout;\n  }\n  set timeout(value: number) {\n    this._timeout = value;\n  }\n\n  /**\n   * Test whether the monitor has been disposed.\n   *\n   * #### Notes\n   * This is a read-only property.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * Dispose of the resources used by the activity monitor.\n   */\n  dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    Signal.clearData(this);\n  }\n\n  /**\n   * A signal handler for the monitored signal.\n   */\n  private _onSignalFired(sender: Sender, args: Args): void {\n    clearTimeout(this._timer);\n    this._sender = sender;\n    this._args = args;\n    this._timer = setTimeout(() => {\n      this._activityStopped.emit({\n        sender: this._sender,\n        args: this._args\n      });\n    }, this._timeout);\n  }\n\n  private _timer: any = -1;\n  private _timeout = -1;\n  private _sender: Sender;\n  private _args: Args;\n  private _isDisposed = false;\n  private _activityStopped = new Signal<\n    this,\n    ActivityMonitor.IArguments<Sender, Args>\n  >(this);\n}\n\n/**\n * The namespace for `ActivityMonitor` statics.\n */\nexport namespace ActivityMonitor {\n  /**\n   * The options used to construct a new `ActivityMonitor`.\n   */\n  export interface IOptions<Sender, Args> {\n    /**\n     * The signal to monitor.\n     */\n    signal: ISignal<Sender, Args>;\n\n    /**\n     * The activity timeout in milliseconds.\n     *\n     * The default is 1 second.\n     */\n    timeout?: number;\n  }\n\n  /**\n   * The argument object for an activity timeout.\n   *\n   */\n  export interface IArguments<Sender, Args> {\n    /**\n     * The most recent sender object.\n     */\n    sender: Sender;\n\n    /**\n     * The most recent argument object.\n     */\n    args: Args;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nconst DEFAULT_MAX_SIZE = 128;\n\n/** A least-recently-used cache. */\nexport class LruCache<T, U> {\n  protected _map = new Map<T, U>();\n  protected _maxSize: number;\n\n  constructor(options: LruCache.IOptions = {}) {\n    this._maxSize = options?.maxSize || DEFAULT_MAX_SIZE;\n  }\n\n  /**\n   * Return the current size of the cache.\n   */\n  get size() {\n    return this._map.size;\n  }\n\n  /**\n   * Clear the values in the cache.\n   */\n  clear() {\n    this._map.clear();\n  }\n\n  /**\n   * Get a value (or null) from the cache, pushing the item to the front of the cache.\n   */\n  get(key: T): U | null {\n    const item = this._map.get(key) || null;\n    if (item != null) {\n      this._map.delete(key);\n      this._map.set(key, item);\n    }\n    return item;\n  }\n\n  /**\n   * Set a value in the cache, potentially evicting an old item.\n   */\n  set(key: T, value: U): void {\n    if (this._map.size >= this._maxSize) {\n      this._map.delete(this._map.keys().next().value);\n    }\n    this._map.set(key, value);\n  }\n}\n\nexport namespace LruCache {\n  export interface IOptions {\n    maxSize?: number | null;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n/**\n * The namespace for code block functions which help\n * in extract code from markdown text\n */\nexport namespace MarkdownCodeBlocks {\n  export const CODE_BLOCK_MARKER = '```';\n  const markdownExtensions: string[] = [\n    '.markdown',\n    '.mdown',\n    '.mkdn',\n    '.md',\n    '.mkd',\n    '.mdwn',\n    '.mdtxt',\n    '.mdtext',\n    '.text',\n    '.txt',\n    '.Rmd'\n  ];\n\n  export class MarkdownCodeBlock {\n    startLine: number;\n    endLine: number;\n    code: string;\n    constructor(startLine: number) {\n      this.startLine = startLine;\n      this.code = '';\n      this.endLine = -1;\n    }\n  }\n\n  /**\n   * Check whether the given file extension is a markdown extension\n   * @param extension - A file extension\n   *\n   * @returns true/false depending on whether this is a supported markdown extension\n   */\n  export function isMarkdown(extension: string): boolean {\n    return markdownExtensions.indexOf(extension) > -1;\n  }\n\n  /**\n   * Construct all code snippets from current text\n   * (this could be potentially optimized if we can cache and detect differences)\n   * @param text - A string to parse codeblocks from\n   *\n   * @returns An array of MarkdownCodeBlocks.\n   */\n  export function findMarkdownCodeBlocks(text: string): MarkdownCodeBlock[] {\n    if (!text || text === '') {\n      return [];\n    }\n\n    const lines = text.split('\\n');\n    const codeBlocks: MarkdownCodeBlock[] = [];\n    let currentBlock = null;\n    for (let lineIndex = 0; lineIndex < lines.length; lineIndex++) {\n      const line = lines[lineIndex];\n      const lineContainsMarker = line.indexOf(CODE_BLOCK_MARKER) === 0;\n      const constructingBlock = currentBlock != null;\n      // Skip this line if it is not part of any code block and doesn't contain a marker.\n      if (!lineContainsMarker && !constructingBlock) {\n        continue;\n      }\n\n      // Check if we are already constructing a code block.\n      if (!constructingBlock) {\n        // Start constructing a new code block.\n        currentBlock = new MarkdownCodeBlock(lineIndex);\n\n        // Check whether this is a single line code block of the form ```a = 10```.\n        const firstIndex = line.indexOf(CODE_BLOCK_MARKER);\n        const lastIndex = line.lastIndexOf(CODE_BLOCK_MARKER);\n        const isSingleLine = firstIndex !== lastIndex;\n        if (isSingleLine) {\n          currentBlock.code = line.substring(\n            firstIndex + CODE_BLOCK_MARKER.length,\n            lastIndex\n          );\n          currentBlock.endLine = lineIndex;\n          codeBlocks.push(currentBlock);\n          currentBlock = null;\n        }\n      } else if (currentBlock) {\n        if (lineContainsMarker) {\n          // End of block, finish it up.\n          currentBlock.endLine = lineIndex - 1;\n          codeBlocks.push(currentBlock);\n          currentBlock = null;\n        } else {\n          // Append the current line.\n          currentBlock.code += line + '\\n';\n        }\n      }\n    }\n    return codeBlocks;\n  }\n}\n", "'use strict';\n\nfunction hasKey(obj, keys) {\n\tvar o = obj;\n\tkeys.slice(0, -1).forEach(function (key) {\n\t\to = o[key] || {};\n\t});\n\n\tvar key = keys[keys.length - 1];\n\treturn key in o;\n}\n\nfunction isNumber(x) {\n\tif (typeof x === 'number') { return true; }\n\tif ((/^0x[0-9a-f]+$/i).test(x)) { return true; }\n\treturn (/^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/).test(x);\n}\n\nfunction isConstructorOrProto(obj, key) {\n\treturn (key === 'constructor' && typeof obj[key] === 'function') || key === '__proto__';\n}\n\nmodule.exports = function (args, opts) {\n\tif (!opts) { opts = {}; }\n\n\tvar flags = {\n\t\tbools: {},\n\t\tstrings: {},\n\t\tunknownFn: null,\n\t};\n\n\tif (typeof opts.unknown === 'function') {\n\t\tflags.unknownFn = opts.unknown;\n\t}\n\n\tif (typeof opts.boolean === 'boolean' && opts.boolean) {\n\t\tflags.allBools = true;\n\t} else {\n\t\t[].concat(opts.boolean).filter(Boolean).forEach(function (key) {\n\t\t\tflags.bools[key] = true;\n\t\t});\n\t}\n\n\tvar aliases = {};\n\n\tfunction aliasIsBoolean(key) {\n\t\treturn aliases[key].some(function (x) {\n\t\t\treturn flags.bools[x];\n\t\t});\n\t}\n\n\tObject.keys(opts.alias || {}).forEach(function (key) {\n\t\taliases[key] = [].concat(opts.alias[key]);\n\t\taliases[key].forEach(function (x) {\n\t\t\taliases[x] = [key].concat(aliases[key].filter(function (y) {\n\t\t\t\treturn x !== y;\n\t\t\t}));\n\t\t});\n\t});\n\n\t[].concat(opts.string).filter(Boolean).forEach(function (key) {\n\t\tflags.strings[key] = true;\n\t\tif (aliases[key]) {\n\t\t\t[].concat(aliases[key]).forEach(function (k) {\n\t\t\t\tflags.strings[k] = true;\n\t\t\t});\n\t\t}\n\t});\n\n\tvar defaults = opts.default || {};\n\n\tvar argv = { _: [] };\n\n\tfunction argDefined(key, arg) {\n\t\treturn (flags.allBools && (/^--[^=]+$/).test(arg))\n\t\t\t|| flags.strings[key]\n\t\t\t|| flags.bools[key]\n\t\t\t|| aliases[key];\n\t}\n\n\tfunction setKey(obj, keys, value) {\n\t\tvar o = obj;\n\t\tfor (var i = 0; i < keys.length - 1; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (isConstructorOrProto(o, key)) { return; }\n\t\t\tif (o[key] === undefined) { o[key] = {}; }\n\t\t\tif (\n\t\t\t\to[key] === Object.prototype\n\t\t\t\t|| o[key] === Number.prototype\n\t\t\t\t|| o[key] === String.prototype\n\t\t\t) {\n\t\t\t\to[key] = {};\n\t\t\t}\n\t\t\tif (o[key] === Array.prototype) { o[key] = []; }\n\t\t\to = o[key];\n\t\t}\n\n\t\tvar lastKey = keys[keys.length - 1];\n\t\tif (isConstructorOrProto(o, lastKey)) { return; }\n\t\tif (\n\t\t\to === Object.prototype\n\t\t\t|| o === Number.prototype\n\t\t\t|| o === String.prototype\n\t\t) {\n\t\t\to = {};\n\t\t}\n\t\tif (o === Array.prototype) { o = []; }\n\t\tif (o[lastKey] === undefined || flags.bools[lastKey] || typeof o[lastKey] === 'boolean') {\n\t\t\to[lastKey] = value;\n\t\t} else if (Array.isArray(o[lastKey])) {\n\t\t\to[lastKey].push(value);\n\t\t} else {\n\t\t\to[lastKey] = [o[lastKey], value];\n\t\t}\n\t}\n\n\tfunction setArg(key, val, arg) {\n\t\tif (arg && flags.unknownFn && !argDefined(key, arg)) {\n\t\t\tif (flags.unknownFn(arg) === false) { return; }\n\t\t}\n\n\t\tvar value = !flags.strings[key] && isNumber(val)\n\t\t\t? Number(val)\n\t\t\t: val;\n\t\tsetKey(argv, key.split('.'), value);\n\n\t\t(aliases[key] || []).forEach(function (x) {\n\t\t\tsetKey(argv, x.split('.'), value);\n\t\t});\n\t}\n\n\tObject.keys(flags.bools).forEach(function (key) {\n\t\tsetArg(key, defaults[key] === undefined ? false : defaults[key]);\n\t});\n\n\tvar notFlags = [];\n\n\tif (args.indexOf('--') !== -1) {\n\t\tnotFlags = args.slice(args.indexOf('--') + 1);\n\t\targs = args.slice(0, args.indexOf('--'));\n\t}\n\n\tfor (var i = 0; i < args.length; i++) {\n\t\tvar arg = args[i];\n\t\tvar key;\n\t\tvar next;\n\n\t\tif ((/^--.+=/).test(arg)) {\n\t\t\t// Using [\\s\\S] instead of . because js doesn't support the\n\t\t\t// 'dotall' regex modifier. See:\n\t\t\t// http://stackoverflow.com/a/1068308/13216\n\t\t\tvar m = arg.match(/^--([^=]+)=([\\s\\S]*)$/);\n\t\t\tkey = m[1];\n\t\t\tvar value = m[2];\n\t\t\tif (flags.bools[key]) {\n\t\t\t\tvalue = value !== 'false';\n\t\t\t}\n\t\t\tsetArg(key, value, arg);\n\t\t} else if ((/^--no-.+/).test(arg)) {\n\t\t\tkey = arg.match(/^--no-(.+)/)[1];\n\t\t\tsetArg(key, false, arg);\n\t\t} else if ((/^--.+/).test(arg)) {\n\t\t\tkey = arg.match(/^--(.+)/)[1];\n\t\t\tnext = args[i + 1];\n\t\t\tif (\n\t\t\t\tnext !== undefined\n\t\t\t\t&& !(/^(-|--)[^-]/).test(next)\n\t\t\t\t&& !flags.bools[key]\n\t\t\t\t&& !flags.allBools\n\t\t\t\t&& (aliases[key] ? !aliasIsBoolean(key) : true)\n\t\t\t) {\n\t\t\t\tsetArg(key, next, arg);\n\t\t\t\ti += 1;\n\t\t\t} else if ((/^(true|false)$/).test(next)) {\n\t\t\t\tsetArg(key, next === 'true', arg);\n\t\t\t\ti += 1;\n\t\t\t} else {\n\t\t\t\tsetArg(key, flags.strings[key] ? '' : true, arg);\n\t\t\t}\n\t\t} else if ((/^-[^-]+/).test(arg)) {\n\t\t\tvar letters = arg.slice(1, -1).split('');\n\n\t\t\tvar broken = false;\n\t\t\tfor (var j = 0; j < letters.length; j++) {\n\t\t\t\tnext = arg.slice(j + 2);\n\n\t\t\t\tif (next === '-') {\n\t\t\t\t\tsetArg(letters[j], next, arg);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ((/[A-Za-z]/).test(letters[j]) && next[0] === '=') {\n\t\t\t\t\tsetArg(letters[j], next.slice(1), arg);\n\t\t\t\t\tbroken = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(/[A-Za-z]/).test(letters[j])\n\t\t\t\t\t&& (/-?\\d+(\\.\\d*)?(e-?\\d+)?$/).test(next)\n\t\t\t\t) {\n\t\t\t\t\tsetArg(letters[j], next, arg);\n\t\t\t\t\tbroken = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (letters[j + 1] && letters[j + 1].match(/\\W/)) {\n\t\t\t\t\tsetArg(letters[j], arg.slice(j + 2), arg);\n\t\t\t\t\tbroken = true;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tsetArg(letters[j], flags.strings[letters[j]] ? '' : true, arg);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tkey = arg.slice(-1)[0];\n\t\t\tif (!broken && key !== '-') {\n\t\t\t\tif (\n\t\t\t\t\targs[i + 1]\n\t\t\t\t\t&& !(/^(-|--)[^-]/).test(args[i + 1])\n\t\t\t\t\t&& !flags.bools[key]\n\t\t\t\t\t&& (aliases[key] ? !aliasIsBoolean(key) : true)\n\t\t\t\t) {\n\t\t\t\t\tsetArg(key, args[i + 1], arg);\n\t\t\t\t\ti += 1;\n\t\t\t\t} else if (args[i + 1] && (/^(true|false)$/).test(args[i + 1])) {\n\t\t\t\t\tsetArg(key, args[i + 1] === 'true', arg);\n\t\t\t\t\ti += 1;\n\t\t\t\t} else {\n\t\t\t\t\tsetArg(key, flags.strings[key] ? '' : true, arg);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!flags.unknownFn || flags.unknownFn(arg) !== false) {\n\t\t\t\targv._.push(flags.strings._ || !isNumber(arg) ? arg : Number(arg));\n\t\t\t}\n\t\t\tif (opts.stopEarly) {\n\t\t\t\targv._.push.apply(argv._, args.slice(i + 1));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tObject.keys(defaults).forEach(function (k) {\n\t\tif (!hasKey(argv, k.split('.'))) {\n\t\t\tsetKey(argv, k.split('.'), defaults[k]);\n\n\t\t\t(aliases[k] || []).forEach(function (x) {\n\t\t\t\tsetKey(argv, x.split('.'), defaults[k]);\n\t\t\t});\n\t\t}\n\t});\n\n\tif (opts['--']) {\n\t\targv['--'] = notFlags.slice();\n\t} else {\n\t\tnotFlags.forEach(function (k) {\n\t\t\targv._.push(k);\n\t\t});\n\t}\n\n\treturn argv;\n};\n", "'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?#&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encode(key);\n      value = encode(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n", "'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , controlOrWhitespace = /^[\\x00-\\x20\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+/\n  , CRHTLF = /[\\n\\r\\t]/g\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//\n  , port = /:\\d+$/\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\\\/]+)?([\\S\\s]*)/i\n  , windowsDriveLetter = /^[a-zA-Z]:/;\n\n/**\n * Remove control characters and whitespace from the beginning of a string.\n *\n * @param {Object|String} str String to trim.\n * @returns {String} A new string representing `str` stripped of control\n *     characters and whitespace from its beginning.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(controlOrWhitespace, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address, url) {     // Sanitize what is left of the address\n    return isSpecial(url.protocol) ? address.replace(/\\\\/g, '/') : address;\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d*)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * Check whether a protocol scheme is special.\n *\n * @param {String} The protocol scheme of the URL\n * @return {Boolean} `true` if the protocol scheme is special, else `false`\n * @private\n */\nfunction isSpecial(scheme) {\n  return (\n    scheme === 'file:' ||\n    scheme === 'ftp:' ||\n    scheme === 'http:' ||\n    scheme === 'https:' ||\n    scheme === 'ws:' ||\n    scheme === 'wss:'\n  );\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @param {Object} location\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address, location) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n  location = location || {};\n\n  var match = protocolre.exec(address);\n  var protocol = match[1] ? match[1].toLowerCase() : '';\n  var forwardSlashes = !!match[2];\n  var otherSlashes = !!match[3];\n  var slashesCount = 0;\n  var rest;\n\n  if (forwardSlashes) {\n    if (otherSlashes) {\n      rest = match[2] + match[3] + match[4];\n      slashesCount = match[2].length + match[3].length;\n    } else {\n      rest = match[2] + match[4];\n      slashesCount = match[2].length;\n    }\n  } else {\n    if (otherSlashes) {\n      rest = match[3] + match[4];\n      slashesCount = match[3].length;\n    } else {\n      rest = match[4]\n    }\n  }\n\n  if (protocol === 'file:') {\n    if (slashesCount >= 2) {\n      rest = rest.slice(2);\n    }\n  } else if (isSpecial(protocol)) {\n    rest = match[4];\n  } else if (protocol) {\n    if (forwardSlashes) {\n      rest = rest.slice(2);\n    }\n  } else if (slashesCount >= 2 && isSpecial(location.protocol)) {\n    rest = match[4];\n  }\n\n  return {\n    protocol: protocol,\n    slashes: forwardSlashes || isSpecial(protocol),\n    slashesCount: slashesCount,\n    rest: rest\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '', location);\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (\n    extracted.protocol === 'file:' && (\n      extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) ||\n    (!extracted.slashes &&\n      (extracted.protocol ||\n        extracted.slashesCount < 2 ||\n        !isSpecial(url.protocol)))\n  ) {\n    instructions[3] = [/(.*)/, 'pathname'];\n  }\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address, url);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      index = parse === '@'\n        ? address.lastIndexOf(parse)\n        : address.indexOf(parse);\n\n      if (~index) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // Default to a / for pathname if none exists. This normalizes the URL\n  // to always have a /\n  //\n  if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {\n    url.pathname = '/' + url.pathname;\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n\n  if (url.auth) {\n    index = url.auth.indexOf(':');\n\n    if (~index) {\n      url.username = url.auth.slice(0, index);\n      url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n      url.password = url.auth.slice(index + 1);\n      url.password = encodeURIComponent(decodeURIComponent(url.password))\n    } else {\n      url.username = encodeURIComponent(decodeURIComponent(url.auth));\n    }\n\n    url.auth = url.password ? url.username +':'+ url.password : url.username;\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (port.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    case 'username':\n    case 'password':\n      url[part] = encodeURIComponent(value);\n      break;\n\n    case 'auth':\n      var index = value.indexOf(':');\n\n      if (~index) {\n        url.username = value.slice(0, index);\n        url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n        url.password = value.slice(index + 1);\n        url.password = encodeURIComponent(decodeURIComponent(url.password));\n      } else {\n        url.username = encodeURIComponent(decodeURIComponent(value));\n      }\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.auth = url.password ? url.username +':'+ url.password : url.username;\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , host = url.host\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result =\n    protocol +\n    ((url.protocol && url.slashes) || isSpecial(url.protocol) ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  } else if (url.password) {\n    result += ':'+ url.password;\n    result += '@';\n  } else if (\n    url.protocol !== 'file:' &&\n    isSpecial(url.protocol) &&\n    !host &&\n    url.pathname !== '/'\n  ) {\n    //\n    // Add back the empty userinfo, otherwise the original invalid URL\n    // might be transformed into a valid one with `url.pathname` as host.\n    //\n    result += '@';\n  }\n\n  //\n  // Trailing colon is removed from `url.host` when it is parsed. If it still\n  // ends with a colon, then add back the trailing colon that was removed. This\n  // prevents an invalid URL from being transformed into a valid one.\n  //\n  if (host[host.length - 1] === ':' || (port.test(url.hostname) && !url.port)) {\n    host += ':';\n  }\n\n  result += host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\n\nmodule.exports = Url;\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { PartialJSONObject } from '@lumino/coreutils';\nimport { posix } from 'path';\nimport urlparse from 'url-parse';\n\n/**\n * The namespace for URL-related functions.\n */\nexport namespace URLExt {\n  /**\n   * Parse a url into a URL object.\n   *\n   * @param urlString - The URL string to parse.\n   *\n   * @returns A URL object.\n   */\n  export function parse(url: string): IUrl {\n    if (typeof document !== 'undefined' && document) {\n      const a = document.createElement('a');\n      a.href = url;\n      return a;\n    }\n    return urlparse(url);\n  }\n\n  /**\n   * Parse URL and retrieve hostname\n   *\n   * @param url - The URL string to parse\n   *\n   * @returns a hostname string value\n   */\n  export function getHostName(url: string): string {\n    return urlparse(url).hostname;\n  }\n  /**\n   * Normalize a url.\n   */\n  export function normalize(url: string): string;\n  export function normalize(url: undefined): undefined;\n  export function normalize(url: string | undefined): string | undefined;\n  export function normalize(url: string | undefined): string | undefined {\n    return url && parse(url).toString();\n  }\n\n  /**\n   * Join a sequence of url components and normalizes as in node `path.join`.\n   *\n   * @param parts - The url components.\n   *\n   * @returns the joined url.\n   */\n  export function join(...parts: string[]): string {\n    let u = urlparse(parts[0], {});\n    // Schema-less URL can be only parsed as relative to a base URL\n    // see https://github.com/unshiftio/url-parse/issues/219#issuecomment-1002219326\n    const isSchemaLess = u.protocol === '' && u.slashes;\n    if (isSchemaLess) {\n      u = urlparse(parts[0], 'https:' + parts[0]);\n    }\n    const prefix = `${isSchemaLess ? '' : u.protocol}${u.slashes ? '//' : ''}${\n      u.auth\n    }${u.auth ? '@' : ''}${u.host}`;\n    // If there was a prefix, then the first path must start at the root.\n    const path = posix.join(\n      `${!!prefix && u.pathname[0] !== '/' ? '/' : ''}${u.pathname}`,\n      ...parts.slice(1)\n    );\n    return `${prefix}${path === '.' ? '' : path}`;\n  }\n\n  /**\n   * Encode the components of a multi-segment url.\n   *\n   * @param url - The url to encode.\n   *\n   * @returns the encoded url.\n   *\n   * #### Notes\n   * Preserves the `'/'` separators.\n   * Should not include the base url, since all parts are escaped.\n   */\n  export function encodeParts(url: string): string {\n    return join(...url.split('/').map(encodeURIComponent));\n  }\n\n  /**\n   * Return a serialized object string suitable for a query.\n   *\n   * @param object - The source object.\n   *\n   * @returns an encoded url query.\n   *\n   * #### Notes\n   * Modified version of [stackoverflow](http://stackoverflow.com/a/30707423).\n   */\n  export function objectToQueryString(value: PartialJSONObject): string {\n    const keys = Object.keys(value).filter(key => key.length > 0);\n\n    if (!keys.length) {\n      return '';\n    }\n\n    return (\n      '?' +\n      keys\n        .map(key => {\n          const content = encodeURIComponent(String(value[key]));\n\n          return key + (content ? '=' + content : '');\n        })\n        .join('&')\n    );\n  }\n\n  /**\n   * Return a parsed object that represents the values in a query string.\n   */\n  export function queryStringToObject(value: string): {\n    [key: string]: string | undefined;\n  } {\n    return value\n      .replace(/^\\?/, '')\n      .split('&')\n      .reduce(\n        (acc, val) => {\n          const [key, value] = val.split('=');\n\n          if (key.length > 0) {\n            acc[key] = decodeURIComponent(value || '');\n          }\n\n          return acc;\n        },\n        {} as { [key: string]: string }\n      );\n  }\n\n  /**\n   * Test whether the url is a local url.\n   *\n   * @param allowRoot - Whether the paths starting at Unix-style filesystem root (`/`) are permitted.\n   *\n   * #### Notes\n   * This function returns `false` for any fully qualified url, including\n   * `data:`, `file:`, and `//` protocol URLs.\n   */\n  export function isLocal(url: string, allowRoot: boolean = false): boolean {\n    const { protocol } = parse(url);\n\n    return (\n      (!protocol || url.toLowerCase().indexOf(protocol) !== 0) &&\n      (allowRoot ? url.indexOf('//') !== 0 : url.indexOf('/') !== 0)\n    );\n  }\n\n  /**\n   * The interface for a URL object\n   */\n  export interface IUrl {\n    /**\n     * The full URL string that was parsed with both the protocol and host\n     * components converted to lower-case.\n     */\n    href: string;\n\n    /**\n     * Identifies the URL's lower-cased protocol scheme.\n     */\n    protocol: string;\n\n    /**\n     * The full lower-cased host portion of the URL, including the port if\n     * specified.\n     */\n    host: string;\n\n    /**\n     * The lower-cased host name portion of the host component without the\n     * port included.\n     */\n    hostname: string;\n\n    /**\n     * The numeric port portion of the host component.\n     */\n    port: string;\n\n    /**\n     * The entire path section of the URL.\n     */\n    pathname: string;\n\n    /**\n     * The \"fragment\" portion of the URL including the leading ASCII hash\n     * `(#)` character\n     */\n    hash: string;\n\n    /**\n     * The search element, including leading question mark (`'?'`), if any,\n     * of the URL.\n     */\n    search?: string;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { JSONExt } from '@lumino/coreutils';\nimport minimist from 'minimist';\nimport { URLExt } from './url';\n\n/**\n * Declare stubs for the node variables.\n */\ndeclare let process: any;\ndeclare let require: any;\n\n/**\n * The namespace for `PageConfig` functions.\n */\nexport namespace PageConfig {\n  /**\n   * Get global configuration data for the Jupyter application.\n   *\n   * @param name - The name of the configuration option.\n   *\n   * @returns The config value or an empty string if not found.\n   *\n   * #### Notes\n   * All values are treated as strings.\n   * For browser based applications, it is assumed that the page HTML\n   * includes a script tag with the id `jupyter-config-data` containing the\n   * configuration as valid JSON.  In order to support the classic Notebook,\n   * we fall back on checking for `body` data of the given `name`.\n   *\n   * For node applications, it is assumed that the process was launched\n   * with a `--jupyter-config-data` option pointing to a JSON settings\n   * file.\n   */\n  export function getOption(name: string): string {\n    if (configData) {\n      return configData[name] || getBodyData(name);\n    }\n    configData = Object.create(null);\n    let found = false;\n\n    // Use script tag if available.\n    if (typeof document !== 'undefined' && document) {\n      const el = document.getElementById('jupyter-config-data');\n\n      if (el) {\n        configData = JSON.parse(el.textContent || '') as {\n          [key: string]: string;\n        };\n        found = true;\n      }\n    }\n    // Otherwise use CLI if given.\n    if (!found && typeof process !== 'undefined' && process.argv) {\n      try {\n        const cli = minimist(process.argv.slice(2));\n        const path: any = require('path');\n        let fullPath = '';\n        if ('jupyter-config-data' in cli) {\n          fullPath = path.resolve(cli['jupyter-config-data']);\n        } else if ('JUPYTER_CONFIG_DATA' in process.env) {\n          fullPath = path.resolve(process.env['JUPYTER_CONFIG_DATA']);\n        }\n        if (fullPath) {\n          // Force Webpack to ignore this require.\n          // eslint-disable-next-line\n          configData = eval('require')(fullPath) as { [key: string]: string };\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    if (!JSONExt.isObject(configData)) {\n      configData = Object.create(null);\n    } else {\n      for (const key in configData) {\n        // PageConfig expects strings\n        if (typeof configData[key] !== 'string') {\n          configData[key] = JSON.stringify(configData[key]);\n        }\n      }\n    }\n    return configData![name] || getBodyData(name);\n  }\n\n  /**\n   * Set global configuration data for the Jupyter application.\n   *\n   * @param name - The name of the configuration option.\n   * @param value - The value to set the option to.\n   *\n   * @returns The last config value or an empty string if it doesn't exist.\n   */\n  export function setOption(name: string, value: string): string {\n    const last = getOption(name);\n\n    configData![name] = value;\n    return last;\n  }\n\n  /**\n   * Get the base url for a Jupyter application, or the base url of the page.\n   */\n  export function getBaseUrl(): string {\n    return URLExt.normalize(getOption('baseUrl') || '/');\n  }\n\n  /**\n   * Get the tree url for a JupyterLab application.\n   */\n  export function getTreeUrl(): string {\n    return URLExt.join(getBaseUrl(), getOption('treeUrl'));\n  }\n\n  /**\n   * Get the base url for sharing links (usually baseUrl)\n   */\n  export function getShareUrl(): string {\n    return URLExt.normalize(getOption('shareUrl') || getBaseUrl());\n  }\n\n  /**\n   * Get the tree url for shareable links.\n   * Usually the same as treeUrl,\n   * but overrideable e.g. when sharing with JupyterHub.\n   */\n  export function getTreeShareUrl(): string {\n    return URLExt.normalize(URLExt.join(getShareUrl(), getOption('treeUrl')));\n  }\n\n  /**\n   * Create a new URL given an optional mode and tree path.\n   *\n   * This is used to create URLS when the mode or tree path change as the user\n   * changes mode or the current document in the main area. If fields in\n   * options are omitted, the value in PageConfig will be used.\n   *\n   * @param options - IGetUrlOptions for the new path.\n   */\n  export function getUrl(options: IGetUrlOptions): string {\n    let path = options.toShare ? getShareUrl() : getBaseUrl();\n    const mode = options.mode ?? getOption('mode');\n    const workspace = options.workspace ?? getOption('workspace');\n    const labOrDoc = mode === 'single-document' ? 'doc' : 'lab';\n    path = URLExt.join(path, labOrDoc);\n    if (workspace !== defaultWorkspace) {\n      path = URLExt.join(\n        path,\n        'workspaces',\n        encodeURIComponent(getOption('workspace') ?? defaultWorkspace)\n      );\n    }\n    const treePath = options.treePath ?? getOption('treePath');\n    if (treePath) {\n      path = URLExt.join(path, 'tree', URLExt.encodeParts(treePath));\n    }\n    return path;\n  }\n\n  export const defaultWorkspace: string = 'default';\n\n  /**\n   * Options for getUrl\n   */\n\n  export interface IGetUrlOptions {\n    /**\n     * The optional mode as a string 'single-document' or 'multiple-document'. If\n     * the mode argument is missing, it will be provided from the PageConfig.\n     */\n    mode?: string;\n\n    /**\n     * The optional workspace as a string. If this argument is missing, the value will\n     * be pulled from PageConfig. To use the default workspace (no /workspaces/<name>\n     * URL segment will be included) pass the string PageConfig.defaultWorkspace.\n     */\n    workspace?: string;\n\n    /**\n     * Whether the url is meant to be shared or not; default false.\n     */\n    toShare?: boolean;\n\n    /**\n     * The optional tree path as as string. If treePath is not provided it will be\n     * provided from the PageConfig. If an empty string, the resulting path will not\n     * contain a tree portion.\n     */\n    treePath?: string;\n  }\n\n  /**\n   * Get the base websocket url for a Jupyter application, or an empty string.\n   */\n  export function getWsUrl(baseUrl?: string): string {\n    let wsUrl = getOption('wsUrl');\n    if (!wsUrl) {\n      baseUrl = baseUrl ? URLExt.normalize(baseUrl) : getBaseUrl();\n      if (baseUrl.indexOf('http') !== 0) {\n        return '';\n      }\n      wsUrl = 'ws' + baseUrl.slice(4);\n    }\n    return URLExt.normalize(wsUrl);\n  }\n\n  /**\n   * Returns the URL converting this notebook to a certain\n   * format with nbconvert.\n   */\n  export function getNBConvertURL({\n    path,\n    format,\n    download\n  }: {\n    path: string;\n    format: string;\n    download: boolean;\n  }): string {\n    const notebookPath = URLExt.encodeParts(path);\n    const url = URLExt.join(getBaseUrl(), 'nbconvert', format, notebookPath);\n    if (download) {\n      return url + '?download=true';\n    }\n    return url;\n  }\n\n  /**\n   * Get the authorization token for a Jupyter application.\n   */\n  export function getToken(): string {\n    return getOption('token') || getBodyData('jupyterApiToken');\n  }\n\n  /**\n   * Get the Notebook version info [major, minor, patch].\n   */\n  export function getNotebookVersion(): [number, number, number] {\n    const notebookVersion = getOption('notebookVersion');\n    if (notebookVersion === '') {\n      return [0, 0, 0];\n    }\n    return JSON.parse(notebookVersion);\n  }\n\n  /**\n   * Private page config data for the Jupyter application.\n   */\n  let configData: { [key: string]: string } | null = null;\n\n  /**\n   * Get a url-encoded item from `body.data` and decode it\n   * We should never have any encoded URLs anywhere else in code\n   * until we are building an actual request.\n   */\n  function getBodyData(key: string): string {\n    if (typeof document === 'undefined' || !document.body) {\n      return '';\n    }\n    const val = document.body.dataset[key];\n    if (typeof val === 'undefined') {\n      return '';\n    }\n    return decodeURIComponent(val);\n  }\n\n  /**\n   * The namespace for page config `Extension` functions.\n   */\n  export namespace Extension {\n    /**\n     * Populate an array from page config.\n     *\n     * @param key - The page config key (e.g., `deferredExtensions`).\n     *\n     * #### Notes\n     * This is intended for `deferredExtensions` and `disabledExtensions`.\n     */\n    function populate(key: string): string[] {\n      try {\n        const raw = getOption(key);\n        if (raw) {\n          return JSON.parse(raw);\n        }\n      } catch (error) {\n        console.warn(`Unable to parse ${key}.`, error);\n      }\n      return [];\n    }\n\n    /**\n     * The collection of deferred extensions in page config.\n     */\n    export const deferred = populate('deferredExtensions');\n\n    /**\n     * The collection of disabled extensions in page config.\n     */\n    export const disabled = populate('disabledExtensions');\n\n    /**\n     * Returns whether a plugin is deferred.\n     *\n     * @param id - The plugin ID.\n     */\n    export function isDeferred(id: string): boolean {\n      // Check for either a full plugin id match or an extension\n      // name match.\n      const separatorIndex = id.indexOf(':');\n      let extName = '';\n      if (separatorIndex !== -1) {\n        extName = id.slice(0, separatorIndex);\n      }\n      return deferred.some(val => val === id || (extName && val === extName));\n    }\n\n    /**\n     * Returns whether a plugin is disabled.\n     *\n     * @param id - The plugin ID.\n     */\n    export function isDisabled(id: string): boolean {\n      // Check for either a full plugin id match or an extension\n      // name match.\n      const separatorIndex = id.indexOf(':');\n      let extName = '';\n      if (separatorIndex !== -1) {\n        extName = id.slice(0, separatorIndex);\n      }\n      return disabled.some(val => val === id || (extName && val === extName));\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { posix } from 'path';\n\n/**\n * The namespace for path-related functions.\n *\n * Note that Jupyter server paths do not start with a leading slash.\n */\nexport namespace PathExt {\n  /**\n   * Join all arguments together and normalize the resulting path.\n   * Arguments must be strings. In v0.8, non-string arguments were silently ignored. In v0.10 and up, an exception is thrown.\n   *\n   * @param paths - The string paths to join.\n   */\n  export function join(...paths: string[]): string {\n    const path = posix.join(...paths);\n    return path === '.' ? '' : removeSlash(path);\n  }\n\n  /**\n   * Join all arguments together and normalize the resulting path and preserve the leading slash.\n   *\n   * @param paths - The string paths to join.\n   */\n  export function joinWithLeadingSlash(...paths: string[]): string {\n    const path = posix.join(...paths);\n    return path === '.' ? '' : path;\n  }\n\n  /**\n   * Return the last portion of a path. Similar to the Unix basename command.\n   * Often used to extract the file name from a fully qualified path.\n   *\n   * @param path - The path to evaluate.\n   *\n   * @param ext - An extension to remove from the result.\n   */\n  export function basename(path: string, ext?: string): string {\n    return posix.basename(path, ext);\n  }\n\n  /**\n   * Get the directory name of a path, similar to the Unix dirname command.\n   * When an empty path is given, returns the root path.\n   *\n   * @param path - The file path.\n   */\n  export function dirname(path: string): string {\n    const dir = removeSlash(posix.dirname(path));\n    return dir === '.' ? '' : dir;\n  }\n\n  /**\n   * Get the extension of the path.\n   *\n   * @param path - The file path.\n   *\n   * @returns the extension of the file.\n   *\n   * #### Notes\n   * The extension is the string from the last occurrence of the `.`\n   * character to end of string in the last portion of the path, inclusive.\n   * If there is no `.` in the last portion of the path, or if the first\n   * character of the basename of path [[basename]] is `.`, then an\n   * empty string is returned.\n   */\n  export function extname(path: string): string {\n    return posix.extname(path);\n  }\n\n  /**\n   * Normalize a string path, reducing '..' and '.' parts.\n   * When multiple slashes are found, they're replaced by a single one; when the path contains a trailing slash, it is preserved. On Windows backslashes are used.\n   * When an empty path is given, returns the root path.\n   *\n   * @param path - The string path to normalize.\n   */\n  export function normalize(path: string): string {\n    if (path === '') {\n      return '';\n    }\n    return removeSlash(posix.normalize(path));\n  }\n\n  /**\n   * Resolve a sequence of paths or path segments into an absolute path.\n   * The root path in the application has no leading slash, so it is removed.\n   *\n   * @param parts - The paths to join.\n   *\n   * #### Notes\n   * The right-most parameter is considered \\{to\\}.  Other parameters are considered an array of \\{from\\}.\n   *\n   * Starting from leftmost \\{from\\} parameter, resolves \\{to\\} to an absolute path.\n   *\n   * If \\{to\\} isn't already absolute, \\{from\\} arguments are prepended in right to left order, until an absolute path is found. If after using all \\{from\\} paths still no absolute path is found, the current working directory is used as well. The resulting path is normalized, and trailing slashes are removed unless the path gets resolved to the root directory.\n   */\n  export function resolve(...parts: string[]): string {\n    return removeSlash(posix.resolve(...parts));\n  }\n\n  /**\n   * Solve the relative path from \\{from\\} to \\{to\\}.\n   *\n   * @param from - The source path.\n   *\n   * @param to - The target path.\n   *\n   * #### Notes\n   * If from and to each resolve to the same path (after calling\n   * path.resolve() on each), a zero-length string is returned.\n   * If a zero-length string is passed as from or to, `/`\n   * will be used instead of the zero-length strings.\n   */\n  export function relative(from: string, to: string): string {\n    return removeSlash(posix.relative(from, to));\n  }\n\n  /**\n   * Normalize a file extension to be of the type `'.foo'`.\n   *\n   * @param extension - the file extension.\n   *\n   * #### Notes\n   * Adds a leading dot if not present and converts to lower case.\n   */\n  export function normalizeExtension(extension: string): string {\n    if (extension.length > 0 && extension.indexOf('.') !== 0) {\n      extension = `.${extension}`;\n    }\n    return extension;\n  }\n\n  /**\n   * Remove the leading slash from a path.\n   *\n   * @param path: the path from which to remove a leading slash.\n   */\n  export function removeSlash(path: string): string {\n    if (path.indexOf('/') === 0) {\n      path = path.slice(1);\n    }\n    return path;\n  }\n}\n", "/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n\nimport { PromiseDelegate } from '@lumino/coreutils';\nimport { ISignal } from '@lumino/signaling';\n\n/**\n * Convert a signal into a promise for the first emitted value.\n *\n * @param signal - The signal we are listening to.\n * @param timeout - Timeout to wait for signal in ms (not timeout if not defined or 0)\n *\n * @returns a Promise that resolves with a `(sender, args)` pair.\n */\nexport function signalToPromise<T, U>(\n  signal: ISignal<T, U>,\n  timeout?: number\n): Promise<[T, U]> {\n  const waitForSignal = new PromiseDelegate<[T, U]>();\n\n  function cleanup() {\n    signal.disconnect(slot);\n  }\n\n  function slot(sender: T, args: U) {\n    cleanup();\n    waitForSignal.resolve([sender, args]);\n  }\n  signal.connect(slot);\n\n  if ((timeout ?? 0) > 0) {\n    setTimeout(() => {\n      cleanup();\n      waitForSignal.reject(`Signal not emitted within ${timeout} ms.`);\n    }, timeout);\n  }\n  return waitForSignal.promise;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n/**\n * The namespace for text-related functions.\n */\nexport namespace Text {\n  // javascript stores text as utf16 and string indices use \"code units\",\n  // which stores high-codepoint characters as \"surrogate pairs\",\n  // which occupy two indices in the javascript string.\n  // We need to translate cursor_pos in the Jupyter protocol (in characters)\n  // to js offset (with surrogate pairs taking two spots).\n\n  const HAS_SURROGATES: boolean = '\uD835\uDC1A'.length > 1;\n\n  /**\n   * Convert a javascript string index into a unicode character offset\n   *\n   * @param jsIdx - The javascript string index (counting surrogate pairs)\n   *\n   * @param text - The text in which the offset is calculated\n   *\n   * @returns The unicode character offset\n   */\n  export function jsIndexToCharIndex(jsIdx: number, text: string): number {\n    if (HAS_SURROGATES) {\n      // not using surrogates, nothing to do\n      return jsIdx;\n    }\n    let charIdx = jsIdx;\n    for (let i = 0; i + 1 < text.length && i < jsIdx; i++) {\n      const charCode = text.charCodeAt(i);\n      // check for surrogate pair\n      if (charCode >= 0xd800 && charCode <= 0xdbff) {\n        const nextCharCode = text.charCodeAt(i + 1);\n        if (nextCharCode >= 0xdc00 && nextCharCode <= 0xdfff) {\n          charIdx--;\n          i++;\n        }\n      }\n    }\n    return charIdx;\n  }\n\n  /**\n   * Convert a unicode character offset to a javascript string index.\n   *\n   * @param charIdx - The index in unicode characters\n   *\n   * @param text - The text in which the offset is calculated\n   *\n   * @returns The js-native index\n   */\n  export function charIndexToJsIndex(charIdx: number, text: string): number {\n    if (HAS_SURROGATES) {\n      // not using surrogates, nothing to do\n      return charIdx;\n    }\n    let jsIdx = charIdx;\n    for (let i = 0; i + 1 < text.length && i < jsIdx; i++) {\n      const charCode = text.charCodeAt(i);\n      // check for surrogate pair\n      if (charCode >= 0xd800 && charCode <= 0xdbff) {\n        const nextCharCode = text.charCodeAt(i + 1);\n        if (nextCharCode >= 0xdc00 && nextCharCode <= 0xdfff) {\n          jsIdx++;\n          i++;\n        }\n      }\n    }\n    return jsIdx;\n  }\n\n  /**\n   * Given a 'snake-case', 'snake_case', 'snake:case', or\n   * 'snake case' string, will return the camel case version: 'snakeCase'.\n   *\n   * @param str: the snake-case input string.\n   *\n   * @param upper: default = false. If true, the first letter of the\n   * returned string will be capitalized.\n   *\n   * @returns the camel case version of the input string.\n   */\n  export function camelCase(str: string, upper: boolean = false): string {\n    return str.replace(/^(\\w)|[\\s-_:]+(\\w)/g, function (match, p1, p2) {\n      if (p2) {\n        return p2.toUpperCase();\n      } else {\n        return upper ? p1.toUpperCase() : p1.toLowerCase();\n      }\n    });\n  }\n\n  /**\n   * Given a string, title case the words in the string.\n   *\n   * @param str: the string to title case.\n   *\n   * @returns the same string, but with each word capitalized.\n   */\n  export function titleCase(str: string): string {\n    return (str || '')\n      .toLowerCase()\n      .split(' ')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n/**\n * A list of time units with their associated value in milliseconds.\n */\nconst UNITS: { name: Intl.RelativeTimeFormatUnit; milliseconds: number }[] = [\n  { name: 'years', milliseconds: 365 * 24 * 60 * 60 * 1000 },\n  { name: 'months', milliseconds: 30 * 24 * 60 * 60 * 1000 },\n  { name: 'days', milliseconds: 24 * 60 * 60 * 1000 },\n  { name: 'hours', milliseconds: 60 * 60 * 1000 },\n  { name: 'minutes', milliseconds: 60 * 1000 },\n  { name: 'seconds', milliseconds: 1000 }\n];\n\n/**\n * The namespace for date functions.\n */\nexport namespace Time {\n  /**\n   * Convert a timestring to a human readable string (e.g. 'two minutes ago').\n   *\n   * @param value - The date timestring or date object.\n   *\n   * @returns A formatted date.\n   */\n  export function formatHuman(value: string | Date): string {\n    const lang = document.documentElement.lang || 'en';\n    const formatter = new Intl.RelativeTimeFormat(lang, { numeric: 'auto' });\n    const delta = new Date(value).getTime() - Date.now();\n    for (let unit of UNITS) {\n      const amount = Math.ceil(delta / unit.milliseconds);\n      if (amount === 0) {\n        continue;\n      }\n      return formatter.format(amount, unit.name);\n    }\n    return formatter.format(0, 'seconds');\n  }\n\n  /**\n   * Convenient helper to convert a timestring to a date format.\n   *\n   * @param value - The date timestring or date object.\n   *\n   * @returns A formatted date.\n   */\n  export function format(value: string | Date): string {\n    const lang = document.documentElement.lang || 'en';\n    const formatter = new Intl.DateTimeFormat(lang, {\n      dateStyle: 'short',\n      timeStyle: 'short'\n    });\n    return formatter.format(new Date(value));\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module coreutils\n */\n\nexport * from './activitymonitor';\nexport * from './interfaces';\nexport * from './lru';\nexport * from './markdowncodeblocks';\nexport * from './pageconfig';\nexport * from './path';\nexport * from './signal';\nexport * from './text';\nexport * from './time';\nexport * from './url';\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { IDisposable } from '@lumino/disposable';\nimport { ISignal, Signal } from '@lumino/signaling';\n\n/**\n * A class that monitors activity on a signal.\n */\nexport class ActivityMonitor<Sender, Args> implements IDisposable {\n  /**\n   * Construct a new activity monitor.\n   */\n  constructor(options: ActivityMonitor.IOptions<Sender, Args>) {\n    options.signal.connect(this._onSignalFired, this);\n    this._timeout = options.timeout || 1000;\n  }\n\n  /**\n   * A signal emitted when activity has ceased.\n   */\n  get activityStopped(): ISignal<\n    this,\n    ActivityMonitor.IArguments<Sender, Args>\n  > {\n    return this._activityStopped;\n  }\n\n  /**\n   * The timeout associated with the monitor, in milliseconds.\n   */\n  get timeout(): number {\n    return this._timeout;\n  }\n  set timeout(value: number) {\n    this._timeout = value;\n  }\n\n  /**\n   * Test whether the monitor has been disposed.\n   *\n   * #### Notes\n   * This is a read-only property.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * Dispose of the resources used by the activity monitor.\n   */\n  dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    Signal.clearData(this);\n  }\n\n  /**\n   * A signal handler for the monitored signal.\n   */\n  private _onSignalFired(sender: Sender, args: Args): void {\n    clearTimeout(this._timer);\n    this._sender = sender;\n    this._args = args;\n    this._timer = setTimeout(() => {\n      this._activityStopped.emit({\n        sender: this._sender,\n        args: this._args\n      });\n    }, this._timeout);\n  }\n\n  private _timer: any = -1;\n  private _timeout = -1;\n  private _sender: Sender;\n  private _args: Args;\n  private _isDisposed = false;\n  private _activityStopped = new Signal<\n    this,\n    ActivityMonitor.IArguments<Sender, Args>\n  >(this);\n}\n\n/**\n * The namespace for `ActivityMonitor` statics.\n */\nexport namespace ActivityMonitor {\n  /**\n   * The options used to construct a new `ActivityMonitor`.\n   */\n  export interface IOptions<Sender, Args> {\n    /**\n     * The signal to monitor.\n     */\n    signal: ISignal<Sender, Args>;\n\n    /**\n     * The activity timeout in milliseconds.\n     *\n     * The default is 1 second.\n     */\n    timeout?: number;\n  }\n\n  /**\n   * The argument object for an activity timeout.\n   *\n   */\n  export interface IArguments<Sender, Args> {\n    /**\n     * The most recent sender object.\n     */\n    sender: Sender;\n\n    /**\n     * The most recent argument object.\n     */\n    args: Args;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nconst DEFAULT_MAX_SIZE = 128;\n\n/** A least-recently-used cache. */\nexport class LruCache<T, U> {\n  protected _map = new Map<T, U>();\n  protected _maxSize: number;\n\n  constructor(options: LruCache.IOptions = {}) {\n    this._maxSize = options?.maxSize || DEFAULT_MAX_SIZE;\n  }\n\n  /**\n   * Return the current size of the cache.\n   */\n  get size() {\n    return this._map.size;\n  }\n\n  /**\n   * Clear the values in the cache.\n   */\n  clear() {\n    this._map.clear();\n  }\n\n  /**\n   * Get a value (or null) from the cache, pushing the item to the front of the cache.\n   */\n  get(key: T): U | null {\n    const item = this._map.get(key) || null;\n    if (item != null) {\n      this._map.delete(key);\n      this._map.set(key, item);\n    }\n    return item;\n  }\n\n  /**\n   * Set a value in the cache, potentially evicting an old item.\n   */\n  set(key: T, value: U): void {\n    if (this._map.size >= this._maxSize) {\n      this._map.delete(this._map.keys().next().value);\n    }\n    this._map.set(key, value);\n  }\n}\n\nexport namespace LruCache {\n  export interface IOptions {\n    maxSize?: number | null;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n/**\n * The namespace for code block functions which help\n * in extract code from markdown text\n */\nexport namespace MarkdownCodeBlocks {\n  export const CODE_BLOCK_MARKER = '```';\n  const markdownExtensions: string[] = [\n    '.markdown',\n    '.mdown',\n    '.mkdn',\n    '.md',\n    '.mkd',\n    '.mdwn',\n    '.mdtxt',\n    '.mdtext',\n    '.text',\n    '.txt',\n    '.Rmd'\n  ];\n\n  export class MarkdownCodeBlock {\n    startLine: number;\n    endLine: number;\n    code: string;\n    constructor(startLine: number) {\n      this.startLine = startLine;\n      this.code = '';\n      this.endLine = -1;\n    }\n  }\n\n  /**\n   * Check whether the given file extension is a markdown extension\n   * @param extension - A file extension\n   *\n   * @returns true/false depending on whether this is a supported markdown extension\n   */\n  export function isMarkdown(extension: string): boolean {\n    return markdownExtensions.indexOf(extension) > -1;\n  }\n\n  /**\n   * Construct all code snippets from current text\n   * (this could be potentially optimized if we can cache and detect differences)\n   * @param text - A string to parse codeblocks from\n   *\n   * @returns An array of MarkdownCodeBlocks.\n   */\n  export function findMarkdownCodeBlocks(text: string): MarkdownCodeBlock[] {\n    if (!text || text === '') {\n      return [];\n    }\n\n    const lines = text.split('\\n');\n    const codeBlocks: MarkdownCodeBlock[] = [];\n    let currentBlock = null;\n    for (let lineIndex = 0; lineIndex < lines.length; lineIndex++) {\n      const line = lines[lineIndex];\n      const lineContainsMarker = line.indexOf(CODE_BLOCK_MARKER) === 0;\n      const constructingBlock = currentBlock != null;\n      // Skip this line if it is not part of any code block and doesn't contain a marker.\n      if (!lineContainsMarker && !constructingBlock) {\n        continue;\n      }\n\n      // Check if we are already constructing a code block.\n      if (!constructingBlock) {\n        // Start constructing a new code block.\n        currentBlock = new MarkdownCodeBlock(lineIndex);\n\n        // Check whether this is a single line code block of the form ```a = 10```.\n        const firstIndex = line.indexOf(CODE_BLOCK_MARKER);\n        const lastIndex = line.lastIndexOf(CODE_BLOCK_MARKER);\n        const isSingleLine = firstIndex !== lastIndex;\n        if (isSingleLine) {\n          currentBlock.code = line.substring(\n            firstIndex + CODE_BLOCK_MARKER.length,\n            lastIndex\n          );\n          currentBlock.endLine = lineIndex;\n          codeBlocks.push(currentBlock);\n          currentBlock = null;\n        }\n      } else if (currentBlock) {\n        if (lineContainsMarker) {\n          // End of block, finish it up.\n          currentBlock.endLine = lineIndex - 1;\n          codeBlocks.push(currentBlock);\n          currentBlock = null;\n        } else {\n          // Append the current line.\n          currentBlock.code += line + '\\n';\n        }\n      }\n    }\n    return codeBlocks;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { PartialJSONObject } from '@lumino/coreutils';\nimport { posix } from 'path';\nimport urlparse from 'url-parse';\n\n/**\n * The namespace for URL-related functions.\n */\nexport namespace URLExt {\n  /**\n   * Parse a url into a URL object.\n   *\n   * @param url - The URL string to parse.\n   *\n   * @returns A URL object.\n   */\n  export function parse(url: string): IUrl {\n    if (typeof document !== 'undefined' && document) {\n      const a = document.createElement('a');\n      a.href = url;\n      return a;\n    }\n    return urlparse(url);\n  }\n\n  /**\n   * Parse URL and retrieve hostname\n   *\n   * @param url - The URL string to parse\n   *\n   * @returns a hostname string value\n   */\n  export function getHostName(url: string): string {\n    return urlparse(url).hostname;\n  }\n  /**\n   * Normalize a url.\n   */\n  export function normalize(url: string): string;\n  export function normalize(url: undefined): undefined;\n  export function normalize(url: string | undefined): string | undefined;\n  export function normalize(url: string | undefined): string | undefined {\n    return url && parse(url).toString();\n  }\n\n  /**\n   * Join a sequence of url components and normalizes as in node `path.join`.\n   *\n   * @param parts - The url components.\n   *\n   * @returns the joined url.\n   */\n  export function join(...parts: string[]): string {\n    let u = urlparse(parts[0], {});\n    // Schema-less URL can be only parsed as relative to a base URL\n    // see https://github.com/unshiftio/url-parse/issues/219#issuecomment-1002219326\n    const isSchemaLess = u.protocol === '' && u.slashes;\n    if (isSchemaLess) {\n      u = urlparse(parts[0], 'https:' + parts[0]);\n    }\n    const prefix = `${isSchemaLess ? '' : u.protocol}${u.slashes ? '//' : ''}${\n      u.auth\n    }${u.auth ? '@' : ''}${u.host}`;\n    // If there was a prefix, then the first path must start at the root.\n    const path = posix.join(\n      `${!!prefix && u.pathname[0] !== '/' ? '/' : ''}${u.pathname}`,\n      ...parts.slice(1)\n    );\n    return `${prefix}${path === '.' ? '' : path}`;\n  }\n\n  /**\n   * Encode the components of a multi-segment url.\n   *\n   * @param url - The url to encode.\n   *\n   * @returns the encoded url.\n   *\n   * #### Notes\n   * Preserves the `'/'` separators.\n   * Should not include the base url, since all parts are escaped.\n   */\n  export function encodeParts(url: string): string {\n    return join(...url.split('/').map(encodeURIComponent));\n  }\n\n  /**\n   * Return a serialized object string suitable for a query.\n   *\n   * @param value The source object.\n   *\n   * @returns an encoded url query.\n   *\n   * #### Notes\n   * Modified version of [stackoverflow](http://stackoverflow.com/a/30707423).\n   */\n  export function objectToQueryString(value: PartialJSONObject): string {\n    const keys = Object.keys(value).filter(key => key.length > 0);\n\n    if (!keys.length) {\n      return '';\n    }\n\n    return (\n      '?' +\n      keys\n        .map(key => {\n          const content = encodeURIComponent(String(value[key]));\n\n          return key + (content ? '=' + content : '');\n        })\n        .join('&')\n    );\n  }\n\n  /**\n   * Return a parsed object that represents the values in a query string.\n   */\n  export function queryStringToObject(value: string): {\n    [key: string]: string | undefined;\n  } {\n    return value\n      .replace(/^\\?/, '')\n      .split('&')\n      .reduce(\n        (acc, val) => {\n          const [key, value] = val.split('=');\n\n          if (key.length > 0) {\n            acc[key] = decodeURIComponent(value || '');\n          }\n\n          return acc;\n        },\n        {} as { [key: string]: string }\n      );\n  }\n\n  /**\n   * Test whether the url is a local url.\n   *\n   * @param allowRoot - Whether the paths starting at Unix-style filesystem root (`/`) are permitted.\n   *\n   * #### Notes\n   * This function returns `false` for any fully qualified url, including\n   * `data:`, `file:`, and `//` protocol URLs.\n   */\n  export function isLocal(url: string, allowRoot: boolean = false): boolean {\n    const { protocol } = parse(url);\n\n    return (\n      (!protocol || url.toLowerCase().indexOf(protocol) !== 0) &&\n      (allowRoot ? url.indexOf('//') !== 0 : url.indexOf('/') !== 0)\n    );\n  }\n\n  /**\n   * The interface for a URL object\n   */\n  export interface IUrl {\n    /**\n     * The full URL string that was parsed with both the protocol and host\n     * components converted to lower-case.\n     */\n    href: string;\n\n    /**\n     * Identifies the URL's lower-cased protocol scheme.\n     */\n    protocol: string;\n\n    /**\n     * The full lower-cased host portion of the URL, including the port if\n     * specified.\n     */\n    host: string;\n\n    /**\n     * The lower-cased host name portion of the host component without the\n     * port included.\n     */\n    hostname: string;\n\n    /**\n     * The numeric port portion of the host component.\n     */\n    port: string;\n\n    /**\n     * The entire path section of the URL.\n     */\n    pathname: string;\n\n    /**\n     * The \"fragment\" portion of the URL including the leading ASCII hash\n     * `(#)` character\n     */\n    hash: string;\n\n    /**\n     * The search element, including leading question mark (`'?'`), if any,\n     * of the URL.\n     */\n    search?: string;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { JSONExt } from '@lumino/coreutils';\nimport minimist from 'minimist';\nimport { URLExt } from './url';\n\n/**\n * Declare stubs for the node variables.\n */\ndeclare let process: any;\ndeclare let require: any;\n\n/**\n * The namespace for `PageConfig` functions.\n */\nexport namespace PageConfig {\n  /**\n   * Get global configuration data for the Jupyter application.\n   *\n   * @param name - The name of the configuration option.\n   *\n   * @returns The config value or an empty string if not found.\n   *\n   * #### Notes\n   * All values are treated as strings.\n   * For browser based applications, it is assumed that the page HTML\n   * includes a script tag with the id `jupyter-config-data` containing the\n   * configuration as valid JSON.  In order to support the classic Notebook,\n   * we fall back on checking for `body` data of the given `name`.\n   *\n   * For node applications, it is assumed that the process was launched\n   * with a `--jupyter-config-data` option pointing to a JSON settings\n   * file.\n   */\n  export function getOption(name: string): string {\n    if (configData) {\n      return configData[name] || getBodyData(name);\n    }\n    configData = Object.create(null);\n    let found = false;\n\n    // Use script tag if available.\n    if (typeof document !== 'undefined' && document) {\n      const el = document.getElementById('jupyter-config-data');\n\n      if (el) {\n        configData = JSON.parse(el.textContent || '') as {\n          [key: string]: string;\n        };\n        found = true;\n      }\n    }\n    // Otherwise use CLI if given.\n    if (!found && typeof process !== 'undefined' && process.argv) {\n      try {\n        const cli = minimist(process.argv.slice(2));\n        const path: any = require('path');\n        let fullPath = '';\n        if ('jupyter-config-data' in cli) {\n          fullPath = path.resolve(cli['jupyter-config-data']);\n        } else if ('JUPYTER_CONFIG_DATA' in process.env) {\n          fullPath = path.resolve(process.env['JUPYTER_CONFIG_DATA']);\n        }\n        if (fullPath) {\n          // Force Webpack to ignore this require.\n          // eslint-disable-next-line\n          configData = eval('require')(fullPath) as { [key: string]: string };\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    if (!JSONExt.isObject(configData)) {\n      configData = Object.create(null);\n    } else {\n      for (const key in configData) {\n        // PageConfig expects strings\n        if (typeof configData[key] !== 'string') {\n          configData[key] = JSON.stringify(configData[key]);\n        }\n      }\n    }\n    return configData![name] || getBodyData(name);\n  }\n\n  /**\n   * Set global configuration data for the Jupyter application.\n   *\n   * @param name - The name of the configuration option.\n   * @param value - The value to set the option to.\n   *\n   * @returns The last config value or an empty string if it doesn't exist.\n   */\n  export function setOption(name: string, value: string): string {\n    const last = getOption(name);\n\n    configData![name] = value;\n    return last;\n  }\n\n  /**\n   * Get the base url for a Jupyter application, or the base url of the page.\n   */\n  export function getBaseUrl(): string {\n    return URLExt.normalize(getOption('baseUrl') || '/');\n  }\n\n  /**\n   * Get the tree url for a JupyterLab application.\n   */\n  export function getTreeUrl(): string {\n    return URLExt.join(getBaseUrl(), getOption('treeUrl'));\n  }\n\n  /**\n   * Get the base url for sharing links (usually baseUrl)\n   */\n  export function getShareUrl(): string {\n    return URLExt.normalize(getOption('shareUrl') || getBaseUrl());\n  }\n\n  /**\n   * Get the tree url for shareable links.\n   * Usually the same as treeUrl,\n   * but overrideable e.g. when sharing with JupyterHub.\n   */\n  export function getTreeShareUrl(): string {\n    return URLExt.normalize(URLExt.join(getShareUrl(), getOption('treeUrl')));\n  }\n\n  /**\n   * Create a new URL given an optional mode and tree path.\n   *\n   * This is used to create URLS when the mode or tree path change as the user\n   * changes mode or the current document in the main area. If fields in\n   * options are omitted, the value in PageConfig will be used.\n   *\n   * @param options - IGetUrlOptions for the new path.\n   */\n  export function getUrl(options: IGetUrlOptions): string {\n    let path = options.toShare ? getShareUrl() : getBaseUrl();\n    const mode = options.mode ?? getOption('mode');\n    const workspace = options.workspace ?? getOption('workspace');\n    const labOrDoc = mode === 'single-document' ? 'doc' : 'lab';\n    path = URLExt.join(path, labOrDoc);\n    if (workspace !== defaultWorkspace) {\n      path = URLExt.join(\n        path,\n        'workspaces',\n        encodeURIComponent(getOption('workspace') ?? defaultWorkspace)\n      );\n    }\n    const treePath = options.treePath ?? getOption('treePath');\n    if (treePath) {\n      path = URLExt.join(path, 'tree', URLExt.encodeParts(treePath));\n    }\n    return path;\n  }\n\n  export const defaultWorkspace: string = 'default';\n\n  /**\n   * Options for getUrl\n   */\n\n  export interface IGetUrlOptions {\n    /**\n     * The optional mode as a string 'single-document' or 'multiple-document'. If\n     * the mode argument is missing, it will be provided from the PageConfig.\n     */\n    mode?: string;\n\n    /**\n     * The optional workspace as a string. If this argument is missing, the value will\n     * be pulled from PageConfig. To use the default workspace (no /workspaces/<name>\n     * URL segment will be included) pass the string PageConfig.defaultWorkspace.\n     */\n    workspace?: string;\n\n    /**\n     * Whether the url is meant to be shared or not; default false.\n     */\n    toShare?: boolean;\n\n    /**\n     * The optional tree path as as string. If treePath is not provided it will be\n     * provided from the PageConfig. If an empty string, the resulting path will not\n     * contain a tree portion.\n     */\n    treePath?: string;\n  }\n\n  /**\n   * Get the base websocket url for a Jupyter application, or an empty string.\n   */\n  export function getWsUrl(baseUrl?: string): string {\n    let wsUrl = getOption('wsUrl');\n    if (!wsUrl) {\n      baseUrl = baseUrl ? URLExt.normalize(baseUrl) : getBaseUrl();\n      if (baseUrl.indexOf('http') !== 0) {\n        return '';\n      }\n      wsUrl = 'ws' + baseUrl.slice(4);\n    }\n    return URLExt.normalize(wsUrl);\n  }\n\n  /**\n   * Returns the URL converting this notebook to a certain\n   * format with nbconvert.\n   */\n  export function getNBConvertURL({\n    path,\n    format,\n    download\n  }: {\n    path: string;\n    format: string;\n    download: boolean;\n  }): string {\n    const notebookPath = URLExt.encodeParts(path);\n    const url = URLExt.join(getBaseUrl(), 'nbconvert', format, notebookPath);\n    if (download) {\n      return url + '?download=true';\n    }\n    return url;\n  }\n\n  /**\n   * Get the authorization token for a Jupyter application.\n   */\n  export function getToken(): string {\n    return getOption('token') || getBodyData('jupyterApiToken');\n  }\n\n  /**\n   * Get the Notebook version info [major, minor, patch].\n   */\n  export function getNotebookVersion(): [number, number, number] {\n    const notebookVersion = getOption('notebookVersion');\n    if (notebookVersion === '') {\n      return [0, 0, 0];\n    }\n    return JSON.parse(notebookVersion);\n  }\n\n  /**\n   * Private page config data for the Jupyter application.\n   */\n  let configData: { [key: string]: string } | null = null;\n\n  /**\n   * Get a url-encoded item from `body.data` and decode it\n   * We should never have any encoded URLs anywhere else in code\n   * until we are building an actual request.\n   */\n  function getBodyData(key: string): string {\n    if (typeof document === 'undefined' || !document.body) {\n      return '';\n    }\n    const val = document.body.dataset[key];\n    if (typeof val === 'undefined') {\n      return '';\n    }\n    return decodeURIComponent(val);\n  }\n\n  /**\n   * The namespace for page config `Extension` functions.\n   */\n  export namespace Extension {\n    /**\n     * Populate an array from page config.\n     *\n     * @param key - The page config key (e.g., `deferredExtensions`).\n     *\n     * #### Notes\n     * This is intended for `deferredExtensions` and `disabledExtensions`.\n     */\n    function populate(key: string): string[] {\n      try {\n        const raw = getOption(key);\n        if (raw) {\n          return JSON.parse(raw);\n        }\n      } catch (error) {\n        console.warn(`Unable to parse ${key}.`, error);\n      }\n      return [];\n    }\n\n    /**\n     * The collection of deferred extensions in page config.\n     */\n    export const deferred = populate('deferredExtensions');\n\n    /**\n     * The collection of disabled extensions in page config.\n     */\n    export const disabled = populate('disabledExtensions');\n\n    /**\n     * Returns whether a plugin is deferred.\n     *\n     * @param id - The plugin ID.\n     */\n    export function isDeferred(id: string): boolean {\n      // Check for either a full plugin id match or an extension\n      // name match.\n      const separatorIndex = id.indexOf(':');\n      let extName = '';\n      if (separatorIndex !== -1) {\n        extName = id.slice(0, separatorIndex);\n      }\n      return deferred.some(val => val === id || (extName && val === extName));\n    }\n\n    /**\n     * Returns whether a plugin is disabled.\n     *\n     * @param id - The plugin ID.\n     */\n    export function isDisabled(id: string): boolean {\n      // Check for either a full plugin id match or an extension\n      // name match.\n      const separatorIndex = id.indexOf(':');\n      let extName = '';\n      if (separatorIndex !== -1) {\n        extName = id.slice(0, separatorIndex);\n      }\n      return disabled.some(val => val === id || (extName && val === extName));\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { posix } from 'path';\n\n/**\n * The namespace for path-related functions.\n *\n * Note that Jupyter server paths do not start with a leading slash.\n */\nexport namespace PathExt {\n  /**\n   * Join all arguments together and normalize the resulting path.\n   * Arguments must be strings. In v0.8, non-string arguments were silently ignored. In v0.10 and up, an exception is thrown.\n   *\n   * @param paths - The string paths to join.\n   */\n  export function join(...paths: string[]): string {\n    const path = posix.join(...paths);\n    return path === '.' ? '' : removeSlash(path);\n  }\n\n  /**\n   * Join all arguments together and normalize the resulting path and preserve the leading slash.\n   *\n   * @param paths - The string paths to join.\n   */\n  export function joinWithLeadingSlash(...paths: string[]): string {\n    const path = posix.join(...paths);\n    return path === '.' ? '' : path;\n  }\n\n  /**\n   * Return the last portion of a path. Similar to the Unix basename command.\n   * Often used to extract the file name from a fully qualified path.\n   *\n   * @param path - The path to evaluate.\n   *\n   * @param ext - An extension to remove from the result.\n   */\n  export function basename(path: string, ext?: string): string {\n    return posix.basename(path, ext);\n  }\n\n  /**\n   * Get the directory name of a path, similar to the Unix dirname command.\n   * When an empty path is given, returns the root path.\n   *\n   * @param path - The file path.\n   */\n  export function dirname(path: string): string {\n    const dir = removeSlash(posix.dirname(path));\n    return dir === '.' ? '' : dir;\n  }\n\n  /**\n   * Get the extension of the path.\n   *\n   * @param path - The file path.\n   *\n   * @returns the extension of the file.\n   *\n   * #### Notes\n   * The extension is the string from the last occurrence of the `.`\n   * character to end of string in the last portion of the path, inclusive.\n   * If there is no `.` in the last portion of the path, or if the first\n   * character of the basename of path [[basename]] is `.`, then an\n   * empty string is returned.\n   */\n  export function extname(path: string): string {\n    return posix.extname(path);\n  }\n\n  /**\n   * Normalize a string path, reducing '..' and '.' parts.\n   * When multiple slashes are found, they're replaced by a single one; when the path contains a trailing slash, it is preserved. On Windows backslashes are used.\n   * When an empty path is given, returns the root path.\n   *\n   * @param path - The string path to normalize.\n   */\n  export function normalize(path: string): string {\n    if (path === '') {\n      return '';\n    }\n    return removeSlash(posix.normalize(path));\n  }\n\n  /**\n   * Resolve a sequence of paths or path segments into an absolute path.\n   * The root path in the application has no leading slash, so it is removed.\n   *\n   * @param parts - The paths to join.\n   *\n   * #### Notes\n   * The right-most parameter is considered \\{to\\}.  Other parameters are considered an array of \\{from\\}.\n   *\n   * Starting from leftmost \\{from\\} parameter, resolves \\{to\\} to an absolute path.\n   *\n   * If \\{to\\} isn't already absolute, \\{from\\} arguments are prepended in right to left order, until an absolute path is found. If after using all \\{from\\} paths still no absolute path is found, the current working directory is used as well. The resulting path is normalized, and trailing slashes are removed unless the path gets resolved to the root directory.\n   */\n  export function resolve(...parts: string[]): string {\n    return removeSlash(posix.resolve(...parts));\n  }\n\n  /**\n   * Solve the relative path from \\{from\\} to \\{to\\}.\n   *\n   * @param from - The source path.\n   *\n   * @param to - The target path.\n   *\n   * #### Notes\n   * If from and to each resolve to the same path (after calling\n   * path.resolve() on each), a zero-length string is returned.\n   * If a zero-length string is passed as from or to, `/`\n   * will be used instead of the zero-length strings.\n   */\n  export function relative(from: string, to: string): string {\n    return removeSlash(posix.relative(from, to));\n  }\n\n  /**\n   * Normalize a file extension to be of the type `'.foo'`.\n   *\n   * @param extension - the file extension.\n   *\n   * #### Notes\n   * Adds a leading dot if not present and converts to lower case.\n   */\n  export function normalizeExtension(extension: string): string {\n    if (extension.length > 0 && extension.indexOf('.') !== 0) {\n      extension = `.${extension}`;\n    }\n    return extension;\n  }\n\n  /**\n   * Remove the leading slash from a path.\n   *\n   * @param path the path from which to remove a leading slash.\n   */\n  export function removeSlash(path: string): string {\n    if (path.indexOf('/') === 0) {\n      path = path.slice(1);\n    }\n    return path;\n  }\n}\n", "/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n\nimport { PromiseDelegate } from '@lumino/coreutils';\nimport { ISignal } from '@lumino/signaling';\n\n/**\n * Convert a signal into a promise for the first emitted value.\n *\n * @param signal - The signal we are listening to.\n * @param timeout - Timeout to wait for signal in ms (not timeout if not defined or 0)\n *\n * @returns a Promise that resolves with a `(sender, args)` pair.\n */\nexport function signalToPromise<T, U>(\n  signal: ISignal<T, U>,\n  timeout?: number\n): Promise<[T, U]> {\n  const waitForSignal = new PromiseDelegate<[T, U]>();\n\n  function cleanup() {\n    signal.disconnect(slot);\n  }\n\n  function slot(sender: T, args: U) {\n    cleanup();\n    waitForSignal.resolve([sender, args]);\n  }\n  signal.connect(slot);\n\n  if ((timeout ?? 0) > 0) {\n    setTimeout(() => {\n      cleanup();\n      waitForSignal.reject(`Signal not emitted within ${timeout} ms.`);\n    }, timeout);\n  }\n  return waitForSignal.promise;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n/**\n * The namespace for text-related functions.\n */\nexport namespace Text {\n  // javascript stores text as utf16 and string indices use \"code units\",\n  // which stores high-codepoint characters as \"surrogate pairs\",\n  // which occupy two indices in the javascript string.\n  // We need to translate cursor_pos in the Jupyter protocol (in characters)\n  // to js offset (with surrogate pairs taking two spots).\n\n  const HAS_SURROGATES: boolean = '\uD835\uDC1A'.length > 1;\n\n  /**\n   * Convert a javascript string index into a unicode character offset\n   *\n   * @param jsIdx - The javascript string index (counting surrogate pairs)\n   *\n   * @param text - The text in which the offset is calculated\n   *\n   * @returns The unicode character offset\n   */\n  export function jsIndexToCharIndex(jsIdx: number, text: string): number {\n    if (HAS_SURROGATES) {\n      // not using surrogates, nothing to do\n      return jsIdx;\n    }\n    let charIdx = jsIdx;\n    for (let i = 0; i + 1 < text.length && i < jsIdx; i++) {\n      const charCode = text.charCodeAt(i);\n      // check for surrogate pair\n      if (charCode >= 0xd800 && charCode <= 0xdbff) {\n        const nextCharCode = text.charCodeAt(i + 1);\n        if (nextCharCode >= 0xdc00 && nextCharCode <= 0xdfff) {\n          charIdx--;\n          i++;\n        }\n      }\n    }\n    return charIdx;\n  }\n\n  /**\n   * Convert a unicode character offset to a javascript string index.\n   *\n   * @param charIdx - The index in unicode characters\n   *\n   * @param text - The text in which the offset is calculated\n   *\n   * @returns The js-native index\n   */\n  export function charIndexToJsIndex(charIdx: number, text: string): number {\n    if (HAS_SURROGATES) {\n      // not using surrogates, nothing to do\n      return charIdx;\n    }\n    let jsIdx = charIdx;\n    for (let i = 0; i + 1 < text.length && i < jsIdx; i++) {\n      const charCode = text.charCodeAt(i);\n      // check for surrogate pair\n      if (charCode >= 0xd800 && charCode <= 0xdbff) {\n        const nextCharCode = text.charCodeAt(i + 1);\n        if (nextCharCode >= 0xdc00 && nextCharCode <= 0xdfff) {\n          jsIdx++;\n          i++;\n        }\n      }\n    }\n    return jsIdx;\n  }\n\n  /**\n   * Given a 'snake-case', 'snake_case', 'snake:case', or\n   * 'snake case' string, will return the camel case version: 'snakeCase'.\n   *\n   * @param str the snake-case input string.\n   *\n   * @param upper default = false. If true, the first letter of the\n   * returned string will be capitalized.\n   *\n   * @returns the camel case version of the input string.\n   */\n  export function camelCase(str: string, upper: boolean = false): string {\n    return str.replace(/^(\\w)|[\\s-_:]+(\\w)/g, function (match, p1, p2) {\n      if (p2) {\n        return p2.toUpperCase();\n      } else {\n        return upper ? p1.toUpperCase() : p1.toLowerCase();\n      }\n    });\n  }\n\n  /**\n   * Given a string, title case the words in the string.\n   *\n   * @param str the string to title case.\n   *\n   * @returns the same string, but with each word capitalized.\n   */\n  export function titleCase(str: string): string {\n    return (str || '')\n      .toLowerCase()\n      .split(' ')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n/**\n * A list of time units with their associated value in milliseconds.\n */\nconst UNITS: { name: Intl.RelativeTimeFormatUnit; milliseconds: number }[] = [\n  { name: 'years', milliseconds: 365 * 24 * 60 * 60 * 1000 },\n  { name: 'months', milliseconds: 30 * 24 * 60 * 60 * 1000 },\n  { name: 'days', milliseconds: 24 * 60 * 60 * 1000 },\n  { name: 'hours', milliseconds: 60 * 60 * 1000 },\n  { name: 'minutes', milliseconds: 60 * 1000 },\n  { name: 'seconds', milliseconds: 1000 }\n];\n\n/**\n * The namespace for date functions.\n */\nexport namespace Time {\n  // Intl.RelativeTimeFormatStyle contains these, but it requires `ES2020.Intl`.\n  // We currently compile to an `ES2018` target.\n  export type HumanStyle = 'long' | 'short' | 'narrow';\n\n  /**\n   * Convert a timestring to a human readable string (e.g. 'two minutes ago').\n   *\n   * @param value - The date timestring or date object.\n   *\n   * @returns A formatted date.\n   */\n  export function formatHuman(\n    value: string | Date,\n    format: HumanStyle = 'long'\n  ): string {\n    const lang = document.documentElement.lang || 'en';\n    const formatter = new Intl.RelativeTimeFormat(lang, {\n      numeric: 'auto',\n      style: format\n    });\n    const delta = new Date(value).getTime() - Date.now();\n    for (let unit of UNITS) {\n      const amount = Math.ceil(delta / unit.milliseconds);\n      if (amount === 0) {\n        continue;\n      }\n      return formatter.format(amount, unit.name);\n    }\n    return formatter.format(0, 'seconds');\n  }\n\n  /**\n   * Convenient helper to convert a timestring to a date format.\n   *\n   * @param value - The date timestring or date object.\n   *\n   * @returns A formatted date.\n   */\n  export function format(value: string | Date): string {\n    const lang = document.documentElement.lang || 'en';\n    const formatter = new Intl.DateTimeFormat(lang, {\n      dateStyle: 'short',\n      timeStyle: 'short'\n    });\n    return formatter.format(new Date(value));\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module coreutils\n */\n\nexport * from './activitymonitor';\nexport * from './interfaces';\nexport * from './lru';\nexport * from './markdowncodeblocks';\nexport * from './pageconfig';\nexport * from './path';\nexport * from './signal';\nexport * from './text';\nexport * from './time';\nexport * from './url';\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport * as nbformat from '@jupyterlab/nbformat';\nimport { JSONObject, UUID } from '@lumino/coreutils';\n\nexport interface IOptions<T extends Message> {\n  session: string;\n  channel: T['channel'];\n  msgType: T['header']['msg_type'];\n  content: T['content'];\n  buffers?: (ArrayBuffer | ArrayBufferView)[];\n  metadata?: JSONObject;\n  msgId?: string;\n  username?: string;\n  parentHeader?: T['parent_header'];\n}\nexport function createMessage<T extends IClearOutputMsg>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends ICommCloseMsg<'iopub'>>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends ICommCloseMsg<'shell'>>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends ICommInfoReplyMsg>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends ICommInfoRequestMsg>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends ICommMsgMsg<'iopub'>>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends ICommMsgMsg<'shell'>>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends ICommOpenMsg<'iopub'>>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends ICommOpenMsg<'shell'>>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends ICompleteReplyMsg>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends ICompleteRequestMsg>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends IDisplayDataMsg>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends IErrorMsg>(options: IOptions<T>): T;\nexport function createMessage<T extends IExecuteInputMsg>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends IExecuteReplyMsg>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends IExecuteRequestMsg>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends IExecuteResultMsg>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends IHistoryReplyMsg>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends IHistoryRequestMsg>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends IInfoReplyMsg>(options: IOptions<T>): T;\nexport function createMessage<T extends IInfoRequestMsg>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends IInputReplyMsg>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends IInputRequestMsg>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends IInspectReplyMsg>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends IInspectRequestMsg>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends IIsCompleteReplyMsg>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends IIsCompleteRequestMsg>(\n  options: IOptions<T>\n): T;\nexport function createMessage<T extends IStatusMsg>(options: IOptions<T>): T;\nexport function createMessage<T extends IStreamMsg>(options: IOptions<T>): T;\nexport function createMessage<T extends IUpdateDisplayDataMsg>(\n  options: IOptions<T>\n): T;\n\n/**\n * @hidden\n * #### Notes\n * Debug messages are experimental messages that are not in the official\n * kernel message specification. As such, this function is *NOT* considered\n * part of the public API, and may change without notice.\n */\nexport function createMessage<T extends IDebugRequestMsg>(\n  options: IOptions<T>\n): T;\n\n/**\n * @hidden\n * #### Notes\n * Debug messages are experimental messages that are not in the official\n * kernel message specification. As such, this function is *NOT* considered\n * part of the public API, and may change without notice.\n */\nexport function createMessage<T extends IDebugReplyMsg>(\n  options: IOptions<T>\n): T;\n\n/**\n * @hidden\n * #### Notes\n * Debug messages are experimental messages that are not in the official\n * kernel message specification. As such, this function is *NOT* considered\n * part of the public API, and may change without notice.\n */\nexport function createMessage<T extends IDebugEventMsg>(\n  options: IOptions<T>\n): T;\n\nexport function createMessage<T extends Message>(options: IOptions<T>): T {\n  return {\n    buffers: options.buffers ?? [],\n    channel: options.channel,\n    content: options.content,\n    header: {\n      date: new Date().toISOString(),\n      msg_id: options.msgId ?? UUID.uuid4(),\n      msg_type: options.msgType,\n      session: options.session,\n      username: options.username ?? '',\n      version: '5.2'\n    },\n    metadata: options.metadata ?? {},\n    parent_header: options.parentHeader ?? {}\n  } as T;\n}\n\n/**\n * Shell message types.\n */\nexport type ShellMessageType =\n  | 'comm_close'\n  | 'comm_info_reply'\n  | 'comm_info_request'\n  | 'comm_msg'\n  | 'comm_open'\n  | 'complete_reply'\n  | 'complete_request'\n  | 'execute_reply'\n  | 'execute_request'\n  | 'history_reply'\n  | 'history_request'\n  | 'inspect_reply'\n  | 'inspect_request'\n  | 'interrupt_reply'\n  | 'interrupt_request'\n  | 'is_complete_reply'\n  | 'is_complete_request'\n  | 'kernel_info_reply'\n  | 'kernel_info_request'\n  | 'shutdown_reply'\n  | 'shutdown_request';\n\n/**\n * Control message types.\n *\n * #### Notes\n * Debug messages are experimental messages that are not in the official\n * kernel message specification. As such, debug message types are *NOT*\n * considered part of the public API, and may change without notice.\n */\nexport type ControlMessageType = 'debug_request' | 'debug_reply';\n\n/**\n * IOPub message types.\n *\n * #### Notes\n * Debug messages are experimental messages that are not in the official\n * kernel message specification. As such, debug message types are *NOT*\n * considered part of the public API, and may change without notice.\n */\nexport type IOPubMessageType =\n  | 'clear_output'\n  | 'comm_close'\n  | 'comm_msg'\n  | 'comm_open'\n  | 'display_data'\n  | 'error'\n  | 'execute_input'\n  | 'execute_result'\n  | 'shutdown_reply'\n  | 'status'\n  | 'stream'\n  | 'update_display_data'\n  | 'debug_event';\n\n/**\n * Stdin message types.\n */\nexport type StdinMessageType = 'input_request' | 'input_reply';\n\n/**\n * Jupyter message types.\n */\nexport type MessageType =\n  | IOPubMessageType\n  | ShellMessageType\n  | ControlMessageType\n  | StdinMessageType;\n\n/**\n * The valid Jupyter channel names in a message to a frontend.\n */\nexport type Channel = 'shell' | 'control' | 'iopub' | 'stdin';\n\n/**\n * Kernel message header content.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#general-message-format).\n *\n * **See also:** [[IMessage]]\n */\nexport interface IHeader<T extends MessageType = MessageType> {\n  /**\n   * ISO 8601 timestamp for when the message is created\n   */\n  date: string;\n\n  /**\n   * Message id, typically UUID, must be unique per message\n   */\n  msg_id: string;\n\n  /**\n   * Message type\n   */\n  msg_type: T;\n\n  /**\n   * Session id, typically UUID, should be unique per session.\n   */\n  session: string;\n\n  /**\n   * The user sending the message\n   */\n  username: string;\n\n  /**\n   * The message protocol version, should be 5.1, 5.2, 5.3, etc.\n   */\n  version: string;\n}\n\n/**\n * Kernel message specification.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#general-message-format).\n */\nexport interface IMessage<MSGTYPE extends MessageType = MessageType> {\n  /**\n   * An optional list of binary buffers.\n   */\n  buffers?: (ArrayBuffer | ArrayBufferView)[];\n\n  /**\n   * The channel on which the message is transmitted.\n   */\n  channel: Channel;\n\n  /**\n   * The content of the message.\n   */\n  content: Message['content'];\n\n  /**\n   * The message header.\n   */\n  header: IHeader<MSGTYPE>;\n\n  /**\n   * Metadata associated with the message.\n   */\n  metadata: JSONObject;\n\n  /**\n   * The parent message\n   */\n  parent_header: IHeader | Record<string, never>;\n}\n\n/**\n * A kernel message on the `'shell'` channel.\n */\nexport interface IShellMessage<T extends ShellMessageType = ShellMessageType>\n  extends IMessage<T> {\n  channel: 'shell';\n}\n\n/**\n * A kernel message on the `'control'` channel.\n */\nexport interface IControlMessage<\n  T extends ControlMessageType = ControlMessageType\n> extends IMessage<T> {\n  channel: 'control';\n}\n\n/**\n * A message type for shell or control messages.\n *\n * #### Notes\n * This convenience is so we can use it as a generic type constraint.\n */\nexport type IShellControlMessage = IShellMessage | IControlMessage;\n\n/**\n * A kernel message on the `'iopub'` channel.\n */\nexport interface IIOPubMessage<T extends IOPubMessageType = IOPubMessageType>\n  extends IMessage<T> {\n  channel: 'iopub';\n}\n\n/**\n * A kernel message on the `'stdin'` channel.\n */\nexport interface IStdinMessage<T extends StdinMessageType = StdinMessageType>\n  extends IMessage<T> {\n  channel: 'stdin';\n}\n\n/**\n * Message types.\n *\n * #### Notes\n * Debug messages are experimental messages that are not in the official\n * kernel message specification. As such, debug message types are *NOT*\n * considered part of the public API, and may change without notice.\n */\nexport type Message =\n  | IClearOutputMsg\n  | ICommCloseMsg<'iopub'>\n  | ICommCloseMsg<'shell'>\n  | ICommInfoReplyMsg\n  | ICommInfoRequestMsg\n  | ICommMsgMsg<'iopub'>\n  | ICommMsgMsg<'shell'>\n  | ICommOpenMsg<'iopub'>\n  | ICommOpenMsg<'shell'>\n  | ICompleteReplyMsg\n  | ICompleteRequestMsg\n  | IDisplayDataMsg\n  | IErrorMsg\n  | IExecuteInputMsg\n  | IExecuteReplyMsg\n  | IExecuteRequestMsg\n  | IExecuteResultMsg\n  | IHistoryReplyMsg\n  | IHistoryRequestMsg\n  | IInfoReplyMsg\n  | IInfoRequestMsg\n  | IInputReplyMsg\n  | IInputRequestMsg\n  | IInspectReplyMsg\n  | IInspectRequestMsg\n  | IIsCompleteReplyMsg\n  | IIsCompleteRequestMsg\n  | IStatusMsg\n  | IStreamMsg\n  | IUpdateDisplayDataMsg\n  | IDebugRequestMsg\n  | IDebugReplyMsg\n  | IDebugEventMsg;\n\n// ////////////////////////////////////////////////\n// IOPub Messages\n// ///////////////////////////////////////////////\n\n/**\n * A `'stream'` message on the `'iopub'` channel.\n *\n * See [Streams](https://jupyter-client.readthedocs.io/en/latest/messaging.html#streams-stdout-stderr-etc).\n */\nexport interface IStreamMsg extends IIOPubMessage<'stream'> {\n  content: {\n    name: 'stdout' | 'stderr';\n    text: string;\n  };\n}\n\n/**\n * Test whether a kernel message is a `'stream'` message.\n */\nexport function isStreamMsg(msg: IMessage): msg is IStreamMsg {\n  return msg.header.msg_type === 'stream';\n}\n\n/**\n * A `'display_data'` message on the `'iopub'` channel.\n *\n * See [Display data](https://jupyter-client.readthedocs.io/en/latest/messaging.html#display-data).\n */\nexport interface IDisplayDataMsg extends IIOPubMessage<'display_data'> {\n  content: {\n    data: nbformat.IMimeBundle;\n    metadata: nbformat.OutputMetadata;\n    transient?: { display_id?: string };\n  };\n}\n\n/**\n * Test whether a kernel message is an `'display_data'` message.\n */\nexport function isDisplayDataMsg(msg: IMessage): msg is IDisplayDataMsg {\n  return msg.header.msg_type === 'display_data';\n}\n\n/**\n * An `'update_display_data'` message on the `'iopub'` channel.\n *\n * See [Update Display data](https://jupyter-client.readthedocs.io/en/latest/messaging.html#update-display-data).\n */\nexport interface IUpdateDisplayDataMsg\n  extends IIOPubMessage<'update_display_data'> {\n  content: IDisplayDataMsg['content'] & {\n    // display_id is a required field in update_display_data\n    transient: { display_id: string };\n  };\n}\n\n/**\n * Test whether a kernel message is an `'update_display_data'` message.\n */\nexport function isUpdateDisplayDataMsg(\n  msg: IMessage\n): msg is IUpdateDisplayDataMsg {\n  return msg.header.msg_type === 'update_display_data';\n}\n\n/**\n * An `'execute_input'` message on the `'iopub'` channel.\n *\n * See [Code inputs](https://jupyter-client.readthedocs.io/en/latest/messaging.html#code-inputs).\n */\nexport interface IExecuteInputMsg extends IIOPubMessage<'execute_input'> {\n  content: {\n    code: string;\n    execution_count: nbformat.ExecutionCount;\n  };\n}\n\n/**\n * Test whether a kernel message is an `'execute_input'` message.\n */\nexport function isExecuteInputMsg(msg: IMessage): msg is IExecuteInputMsg {\n  return msg.header.msg_type === 'execute_input';\n}\n\n/**\n * An `'execute_result'` message on the `'iopub'` channel.\n *\n * See [Execution results](https://jupyter-client.readthedocs.io/en/latest/messaging.html#id4).\n */\nexport interface IExecuteResultMsg extends IIOPubMessage<'execute_result'> {\n  content: {\n    execution_count: nbformat.ExecutionCount;\n    data: nbformat.IMimeBundle;\n    metadata: nbformat.OutputMetadata;\n    transient?: { display_id?: string };\n  };\n}\n\n/**\n * Test whether a kernel message is an `'execute_result'` message.\n */\nexport function isExecuteResultMsg(msg: IMessage): msg is IExecuteResultMsg {\n  return msg.header.msg_type === 'execute_result';\n}\n\n/**\n * A `'error'` message on the `'iopub'` channel.\n *\n * See [Execution errors](https://jupyter-client.readthedocs.io/en/latest/messaging.html#execution-errors).\n */\nexport interface IErrorMsg extends IIOPubMessage<'error'> {\n  content: {\n    ename: string;\n    evalue: string;\n    traceback: string[];\n  };\n}\n\n/**\n * Test whether a kernel message is an `'error'` message.\n */\nexport function isErrorMsg(msg: IMessage): msg is IErrorMsg {\n  return msg.header.msg_type === 'error';\n}\n\n/**\n * The valid Kernel status states.\n *\n * #### Notes\n * The status states are:\n * * `unknown`: The kernel status is unknown, often because the connection\n *   is disconnected or connecting. This state is determined by the kernel\n *   connection status.\n * * `autorestarting`: The kernel is restarting, initiated by the server.\n *   This state is set by the services library, not explicitly sent from the\n *   kernel.\n * * `starting`: The kernel is starting\n * * `idle`: The kernel has finished processing messages.\n * * `busy`: The kernel is currently processing messages.\n * * `restarting`: The kernel is restarting. This state is sent by the\n *   Jupyter server.\n * * `dead`: The kernel is dead and will not be restarted. This state is set\n *   by the Jupyter server and is a final state.\n */\nexport type Status =\n  | 'unknown'\n  | 'starting'\n  | 'idle'\n  | 'busy'\n  | 'terminating'\n  | 'restarting'\n  | 'autorestarting'\n  | 'dead';\n\n/**\n * A `'status'` message on the `'iopub'` channel.\n *\n * See [Kernel status](https://jupyter-client.readthedocs.io/en/latest/messaging.html#kernel-status).\n */\nexport interface IStatusMsg extends IIOPubMessage<'status'> {\n  content: {\n    execution_state: Status;\n  };\n}\n\n/**\n * Test whether a kernel message is a `'status'` message.\n */\nexport function isStatusMsg(msg: IMessage): msg is IStatusMsg {\n  return msg.header.msg_type === 'status';\n}\n\n/**\n * A `'clear_output'` message on the `'iopub'` channel.\n *\n * See [Clear output](https://jupyter-client.readthedocs.io/en/latest/messaging.html#clear-output).\n */\nexport interface IClearOutputMsg extends IIOPubMessage<'clear_output'> {\n  content: {\n    wait: boolean;\n  };\n}\n\n/**\n * Test whether a kernel message is a `'clear_output'` message.\n */\nexport function isClearOutputMsg(msg: IMessage): msg is IClearOutputMsg {\n  return msg.header.msg_type === 'clear_output';\n}\n\n/**\n * An experimental `'debug_event'` message on the `'iopub'` channel\n *\n * @hidden\n *\n * #### Notes\n * Debug messages are experimental messages that are not in the official\n * kernel message specification. As such, this is *NOT* considered\n * part of the public API, and may change without notice.\n */\nexport interface IDebugEventMsg extends IIOPubMessage<'debug_event'> {\n  content: {\n    seq: number;\n    type: 'event';\n    event: string;\n    body?: any;\n  };\n}\n\n/**\n * Test whether a kernel message is an experimental `'debug_event'` message.\n *\n * @hidden\n *\n * #### Notes\n * Debug messages are experimental messages that are not in the official\n * kernel message specification. As such, this is *NOT* considered\n * part of the public API, and may change without notice.\n */\n\nexport function isDebugEventMsg(msg: IMessage): msg is IDebugEventMsg {\n  return msg.header.msg_type === 'debug_event';\n}\n\n// ////////////////////////////////////////////////\n// Comm Messages\n// ///////////////////////////////////////////////\n\n/**\n * A `'comm_open'` message on the `'iopub'` channel.\n *\n * See [Comm open](https://jupyter-client.readthedocs.io/en/latest/messaging.html#opening-a-comm).\n */\nexport interface ICommOpenMsg<T extends 'shell' | 'iopub' = 'iopub' | 'shell'>\n  extends IMessage<'comm_open'> {\n  channel: T;\n  content: {\n    comm_id: string;\n    target_name: string;\n    data: JSONObject;\n    target_module?: string;\n  };\n}\n\n/**\n * Test whether a kernel message is a `'comm_open'` message.\n */\nexport function isCommOpenMsg(msg: IMessage): msg is ICommOpenMsg {\n  return msg.header.msg_type === 'comm_open';\n}\n\n/**\n * A `'comm_close'` message on the `'iopub'` channel.\n *\n * See [Comm close](https://jupyter-client.readthedocs.io/en/latest/messaging.html#opening-a-comm).\n */\nexport interface ICommCloseMsg<T extends 'iopub' | 'shell' = 'iopub' | 'shell'>\n  extends IMessage<'comm_close'> {\n  channel: T;\n  content: {\n    comm_id: string;\n    data: JSONObject;\n  };\n}\n\n/**\n * Test whether a kernel message is a `'comm_close'` message.\n */\nexport function isCommCloseMsg(\n  msg: IMessage\n): msg is ICommCloseMsg<'iopub' | 'shell'> {\n  return msg.header.msg_type === 'comm_close';\n}\n\n/**\n * A `'comm_msg'` message on the `'iopub'` channel.\n *\n * See [Comm msg](https://jupyter-client.readthedocs.io/en/latest/messaging.html#opening-a-comm).\n */\nexport interface ICommMsgMsg<T extends 'iopub' | 'shell' = 'iopub' | 'shell'>\n  extends IMessage<'comm_msg'> {\n  channel: T;\n  content: {\n    comm_id: string;\n    data: JSONObject;\n  };\n}\n\n/**\n * Test whether a kernel message is a `'comm_msg'` message.\n */\nexport function isCommMsgMsg(msg: IMessage): msg is ICommMsgMsg {\n  return msg.header.msg_type === 'comm_msg';\n}\n\n// ////////////////////////////////////////////////\n// Shell Messages\n// ///////////////////////////////////////////////\n\n/**\n * Reply content indicating a successful request.\n */\nexport interface IReplyOkContent {\n  status: 'ok';\n}\n\n/**\n * Reply content indicating an error.\n *\n * See the [Message spec](https://jupyter-client.readthedocs.io/en/latest/messaging.html#request-reply) for details.\n */\nexport interface IReplyErrorContent {\n  status: 'error';\n\n  /**\n   * Exception name\n   */\n  ename: string;\n\n  /**\n   * Exception value\n   */\n  evalue: string;\n\n  /**\n   * Traceback\n   */\n  traceback: string[];\n}\n\n/**\n * Reply content indicating an aborted request.\n *\n * This is [deprecated](https://jupyter-client.readthedocs.io/en/latest/messaging.html#request-reply)\n * in message spec 5.1. Kernels should send an 'error' reply instead.\n */\nexport interface IReplyAbortContent {\n  status: 'abort';\n}\n\n/**\n * A convenience type for reply content.\n *\n * This automatically unions the necessary error and abort replies required in\n * the [message spec](https://jupyter-client.readthedocs.io/en/latest/messaging.html#request-reply).\n */\ntype ReplyContent<T> = T | IReplyErrorContent | IReplyAbortContent;\n\n/**\n * A `'kernel_info_request'` message on the `'shell'` channel.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#kernel-info).\n */\nexport interface IInfoRequestMsg extends IShellMessage<'kernel_info_request'> {\n  content: Record<string, never>;\n}\n\n/**\n * Test whether a kernel message is a `'kernel_info_request'` message.\n */\nexport function isInfoRequestMsg(msg: IMessage): msg is IInfoRequestMsg {\n  return msg.header.msg_type === 'kernel_info_request';\n}\n\n/**\n * A `'kernel_info_reply'` message content.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#kernel-info).\n */\nexport interface IInfoReply extends IReplyOkContent {\n  protocol_version: string;\n  implementation: string;\n  implementation_version: string;\n  language_info: ILanguageInfo;\n  banner: string;\n  help_links: { text: string; url: string }[];\n}\n\n/**\n * The kernel language information specification.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#kernel-info).\n */\nexport interface ILanguageInfo extends nbformat.ILanguageInfoMetadata {\n  version: string;\n  nbconverter_exporter?: string;\n}\n\n/**\n * A `'kernel_info_reply'` message on the `'shell'` channel.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#kernel-info).\n */\nexport interface IInfoReplyMsg extends IShellMessage<'kernel_info_reply'> {\n  parent_header: IHeader<'kernel_info_request'>;\n  content: ReplyContent<IInfoReply>;\n}\n\n/**\n * A  `'complete_request'` message.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#completion).\n *\n * **See also:** [[ICompleteReplyMsg]], [[IKernel.complete]]\n */\nexport interface ICompleteRequestMsg extends IShellMessage<'complete_request'> {\n  content: {\n    code: string;\n    cursor_pos: number;\n  };\n}\n\n/**\n * A `'complete_reply'` message content.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#completion).\n *\n * **See also:** [[ICompleteRequest]], [[IKernel.complete]]\n */\ninterface ICompleteReply extends IReplyOkContent {\n  matches: string[];\n  cursor_start: number;\n  cursor_end: number;\n  metadata: JSONObject;\n}\n\n/**\n * A `'complete_reply'` message on the `'shell'` channel.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#completion).\n *\n * **See also:** [[ICompleteRequest]], [[IKernel.complete]]\n */\nexport interface ICompleteReplyMsg extends IShellMessage<'complete_reply'> {\n  parent_header: IHeader<'complete_request'>;\n  content: ReplyContent<ICompleteReply>;\n}\n\n/**\n * An `'inspect_request'` message.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#introspection).\n *\n * **See also:** [[IInspectReplyMsg]], [[[IKernel.inspect]]]\n */\nexport interface IInspectRequestMsg extends IShellMessage<'inspect_request'> {\n  content: {\n    code: string;\n    cursor_pos: number;\n    detail_level: 0 | 1;\n  };\n}\n\n/**\n * A `'inspect_reply'` message content.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#introspection).\n *\n * **See also:** [[IInspectRequest]], [[IKernel.inspect]]\n */\n\nexport interface IInspectReply extends IReplyOkContent {\n  found: boolean;\n  data: JSONObject;\n  metadata: JSONObject;\n}\n\n/**\n * A `'inspect_reply'` message on the `'shell'` channel.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#introspection).\n *\n * **See also:** [[IInspectRequest]], [[IKernel.inspect]]\n */\nexport interface IInspectReplyMsg extends IShellMessage<'inspect_reply'> {\n  parent_header: IHeader<'inspect_request'>;\n  content: ReplyContent<IInspectReply>;\n}\n\n/**\n * A `'history_request'` message.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#history).\n *\n * **See also:** [[IHistoryReplyMsg]], [[[IKernel.history]]]\n */\nexport interface IHistoryRequestMsg extends IShellMessage<'history_request'> {\n  content: IHistoryRequestRange | IHistoryRequestSearch | IHistoryRequestTail;\n}\n\n/**\n * The content of a `'history_request'` range message.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#history).\n *\n * **See also:** [[IHistoryReply]], [[[IKernel.history]]]\n */\nexport interface IHistoryRequestRange {\n  output: boolean;\n  raw: boolean;\n  hist_access_type: 'range';\n  session: number;\n  start: number;\n  stop: number;\n}\n\n/**\n * The content of a `'history_request'` search message.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#history).\n *\n * **See also:** [[IHistoryReply]], [[[IKernel.history]]]\n */\nexport interface IHistoryRequestSearch {\n  output: boolean;\n  raw: boolean;\n  hist_access_type: 'search';\n  n: number;\n  pattern: string;\n  unique: boolean;\n}\n\n/**\n * The content of a `'history_request'` tail message.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#history).\n *\n * **See also:** [[IHistoryReply]], [[[IKernel.history]]]\n */\nexport interface IHistoryRequestTail {\n  output: boolean;\n  raw: boolean;\n  hist_access_type: 'tail';\n  n: number;\n}\n\n/**\n * A `'history_reply'` message content.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#history).\n *\n * **See also:** [[IHistoryRequest]], [[IKernel.history]]\n */\nexport interface IHistoryReply extends IReplyOkContent {\n  history: [number, number, string][] | [number, number, [string, string]][];\n}\n\n/**\n * A `'history_reply'` message on the `'shell'` channel.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#history).\n *\n * **See also:** [[IHistoryRequest]], [[IKernel.history]]\n */\nexport interface IHistoryReplyMsg extends IShellMessage<'history_reply'> {\n  parent_header: IHeader<'history_request'>;\n  content: ReplyContent<IHistoryReply>;\n}\n\n/**\n * An `'is_complete_request'` message.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#code-completeness).\n *\n * **See also:** [[IIsCompleteReplyMsg]], [[IKernel.isComplete]]\n */\nexport interface IIsCompleteRequestMsg\n  extends IShellMessage<'is_complete_request'> {\n  content: {\n    code: string;\n  };\n}\n\n/**\n * An `'is_complete_reply'` message on the `'stream'` channel.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#code-completeness).\n *\n * **See also:** [[IIsCompleteRequest]], [[IKernel.isComplete]]\n */\nexport interface IIsCompleteReplyMsg\n  extends IShellMessage<'is_complete_reply'> {\n  parent_header: IHeader<'is_complete_request'>;\n  content: ReplyContent<IIsCompleteReplyIncomplete | IIsCompleteReplyOther>;\n}\n\n/**\n * An 'incomplete' completion reply\n */\nexport interface IIsCompleteReplyIncomplete {\n  status: 'incomplete';\n  indent: string;\n}\n\n/**\n * A completion reply for completion or invalid states.\n */\nexport interface IIsCompleteReplyOther {\n  status: 'complete' | 'invalid' | 'unknown';\n}\n\n/**\n * An `execute_request` message on the `'shell'` channel.\n */\nexport interface IExecuteRequestMsg extends IShellMessage<'execute_request'> {\n  content: {\n    /**\n     * The code to execute.\n     */\n    code: string;\n\n    /**\n     * Whether to execute the code as quietly as possible.\n     * The default is `false`.\n     */\n    silent?: boolean;\n\n    /**\n     * Whether to store history of the execution.\n     * The default `true` if silent is False.\n     * It is forced to  `false ` if silent is `true`.\n     */\n    store_history?: boolean;\n\n    /**\n     * A mapping of names to expressions to be evaluated in the\n     * kernel's interactive namespace.\n     */\n    user_expressions?: JSONObject;\n\n    /**\n     * Whether to allow stdin requests.\n     * The default is `true`.\n     */\n    allow_stdin?: boolean;\n\n    /**\n     * Whether to the abort execution queue on an error.\n     * The default is `false`.\n     */\n    stop_on_error?: boolean;\n  };\n}\n\n/**\n * The content of an `execute-reply` message.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#execution-results).\n */\nexport interface IExecuteCount {\n  execution_count: nbformat.ExecutionCount;\n}\n\n/**\n * A convenience type for a base for an execute reply content.\n */\ntype IExecuteReplyBase = IExecuteCount & IReplyOkContent;\n\n/**\n * The `'execute_reply'` contents for an `'ok'` status.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#execution-results).\n */\nexport interface IExecuteReply extends IExecuteReplyBase {\n  /**\n   * A list of payload objects.\n   * Payloads are considered deprecated.\n   * The only requirement of each payload object is that it have a 'source'\n   * key, which is a string classifying the payload (e.g. 'page').\n   */\n  payload?: JSONObject[];\n\n  /**\n   * Results for the user_expressions.\n   */\n  user_expressions: JSONObject;\n}\n\n/**\n * An `'execute_reply'` message on the `'stream'` channel.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#execution-results).\n *\n * **See also:** [[IExecuteRequest]], [[IKernel.execute]]\n */\nexport interface IExecuteReplyMsg extends IShellMessage<'execute_reply'> {\n  parent_header: IHeader<'execute_request'>;\n  content: ReplyContent<IExecuteReply> & IExecuteCount;\n}\n\n/**\n * Test whether a kernel message is an `'execute_reply'` message.\n */\nexport function isExecuteReplyMsg(msg: IMessage): msg is IExecuteReplyMsg {\n  return msg.header.msg_type === 'execute_reply';\n}\n\n/**\n * A `'comm_info_request'` message on the `'shell'` channel.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#comm-info).\n *\n * **See also:** [[ICommInfoReplyMsg]], [[IKernel.commInfo]]\n */\nexport interface ICommInfoRequestMsg\n  extends IShellMessage<'comm_info_request'> {\n  content: {\n    /**\n     * The comm target name to filter returned comms\n     */\n    target_name?: string;\n  };\n}\n\n/**\n * A `'comm_info_reply'` message content.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#comm-info).\n *\n * **See also:** [[ICommInfoRequest]], [[IKernel.commInfo]]\n */\nexport interface ICommInfoReply extends IReplyOkContent {\n  /**\n   * Mapping of comm ids to target names.\n   */\n  comms: { [commId: string]: { target_name: string } };\n}\n\n/**\n * A `'comm_info_reply'` message on the `'shell'` channel.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#comm-info).\n *\n * **See also:** [[ICommInfoRequestMsg]], [[IKernel.commInfo]]\n */\nexport interface ICommInfoReplyMsg extends IShellMessage<'comm_info_reply'> {\n  parent_header: IHeader<'comm_info_request'>;\n  content: ReplyContent<ICommInfoReply>;\n}\n\n// ///////////////////////////////////////////////\n// Control Messages\n// ///////////////////////////////////////////////\n\n/**\n * An experimental `'debug_request'` message on the `'control'` channel.\n *\n * @hidden\n *\n * #### Notes\n * Debug messages are experimental messages that are not in the official\n * kernel message specification. As such, this function is *NOT* considered\n * part of the public API, and may change without notice.\n */\nexport interface IDebugRequestMsg extends IControlMessage<'debug_request'> {\n  content: {\n    seq: number;\n    type: 'request';\n    command: string;\n    arguments?: any;\n  };\n}\n\n/**\n * Test whether a kernel message is an experimental `'debug_request'` message.\n *\n * @hidden\n *\n * #### Notes\n * Debug messages are experimental messages that are not in the official\n * kernel message specification. As such, this is *NOT* considered\n * part of the public API, and may change without notice.\n */\nexport function isDebugRequestMsg(msg: IMessage): msg is IDebugRequestMsg {\n  return msg.header.msg_type === 'debug_request';\n}\n\n/**\n * An experimental `'debug_reply'` message on the `'control'` channel.\n *\n * @hidden\n *\n * #### Notes\n * Debug messages are experimental messages that are not in the official\n * kernel message specification. As such, this is *NOT* considered\n * part of the public API, and may change without notice.\n */\nexport interface IDebugReplyMsg extends IControlMessage<'debug_reply'> {\n  content: {\n    seq: number;\n    type: 'response';\n    request_seq: number;\n    success: boolean;\n    command: string;\n    message?: string;\n    body?: any;\n  };\n}\n\n/**\n * Test whether a kernel message is an experimental `'debug_reply'` message.\n *\n * @hidden\n *\n * #### Notes\n * Debug messages are experimental messages that are not in the official\n * kernel message specification. As such, this is *NOT* considered\n * part of the public API, and may change without notice.\n */\nexport function isDebugReplyMsg(msg: IMessage): msg is IDebugReplyMsg {\n  return msg.header.msg_type === 'debug_reply';\n}\n\n// ////////////////////////////////////////////////\n// Stdin Messages\n// ///////////////////////////////////////////////\n\n/**\n * An `'input_request'` message on the `'stdin'` channel.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#messages-on-the-stdin-router-dealer-sockets).\n */\nexport interface IInputRequestMsg extends IStdinMessage<'input_request'> {\n  content: {\n    /**\n     * The text to show at the prompt.\n     */\n    prompt: string;\n\n    /**\n     * Whether the request is for a password.\n     * If so, the frontend shouldn't echo input.\n     */\n    password: boolean;\n  };\n}\n\n/**\n * Test whether a kernel message is an `'input_request'` message.\n */\nexport function isInputRequestMsg(msg: IMessage): msg is IInputRequestMsg {\n  return msg.header.msg_type === 'input_request';\n}\n\n/**\n * An `'input_reply'` message content.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#messages-on-the-stdin-router-dealer-sockets).\n */\nexport interface IInputReply extends IReplyOkContent {\n  value: string;\n}\n\n/**\n * An `'input_reply'` message on the `'stdin'` channel.\n *\n * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#messages-on-the-stdin-router-dealer-sockets).\n */\nexport interface IInputReplyMsg extends IStdinMessage<'input_reply'> {\n  parent_header: IHeader<'input_request'>;\n  content: ReplyContent<IInputReply>;\n}\n\n/**\n * Test whether a kernel message is an `'input_reply'` message.\n */\nexport function isInputReplyMsg(msg: IMessage): msg is IInputReplyMsg {\n  return msg.header.msg_type === 'input_reply';\n}\n\n// ///////////////////////////////////////////////\n// Message (de)serialization\n// ///////////////////////////////////////////////\n\n/**\n * The list of supported kernel wire protocols over websocket.\n */\nexport enum supportedKernelWebSocketProtocols {\n  v1KernelWebsocketJupyterOrg = 'v1.kernel.websocket.jupyter.org'\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport * as KernelMessage from './messages';\n\n/**\n * Serialize a kernel message for transport.\n */\nexport function serialize(\n  msg: KernelMessage.IMessage,\n  protocol: string = ''\n): string | ArrayBuffer {\n  switch (protocol) {\n    case KernelMessage.supportedKernelWebSocketProtocols\n      .v1KernelWebsocketJupyterOrg:\n      return Private.serializeV1KernelWebsocketJupyterOrg(msg);\n    default:\n      return Private.serializeDefault(msg);\n  }\n}\n\n/**\n * Deserialize and return the unpacked message.\n */\nexport function deserialize(\n  data: ArrayBuffer,\n  protocol: string = ''\n): KernelMessage.IMessage {\n  switch (protocol) {\n    case KernelMessage.supportedKernelWebSocketProtocols\n      .v1KernelWebsocketJupyterOrg:\n      return Private.deserializeV1KernelWebsocketJupyterOrg(data);\n    default:\n      return Private.deserializeDefault(data);\n  }\n}\n\nnamespace Private {\n  /**\n   * Deserialize and return the unpacked message.\n   * Protocol `v1.kernel.websocket.jupyter.org`\n   */\n  export function deserializeV1KernelWebsocketJupyterOrg(\n    binMsg: ArrayBuffer\n  ): KernelMessage.IMessage {\n    let msg: KernelMessage.IMessage;\n    const data = new DataView(binMsg);\n    const offsetNumber: number = Number(\n      data.getBigUint64(0, true /* littleEndian */)\n    );\n    let offsets: number[] = [];\n    for (let i = 0; i < offsetNumber; i++) {\n      // WARNING: we cast our 64-bit unsigned int to a number!\n      // so offsets cannot index up to 2**64 bytes\n      offsets.push(\n        Number(data.getBigUint64(8 * (i + 1), true /* littleEndian */))\n      );\n    }\n    const decoder = new TextDecoder('utf8');\n    const channel = decoder.decode(\n      binMsg.slice(offsets[0], offsets[1])\n    ) as KernelMessage.Channel;\n    const header = JSON.parse(\n      decoder.decode(binMsg.slice(offsets[1], offsets[2]))\n    );\n    const parent_header = JSON.parse(\n      decoder.decode(binMsg.slice(offsets[2], offsets[3]))\n    );\n    const metadata = JSON.parse(\n      decoder.decode(binMsg.slice(offsets[3], offsets[4]))\n    );\n    const content = JSON.parse(\n      decoder.decode(binMsg.slice(offsets[4], offsets[5]))\n    );\n    let buffers = [];\n    for (let i = 5; i < offsets.length - 1; i++) {\n      buffers.push(new DataView(binMsg.slice(offsets[i], offsets[i + 1])));\n    }\n    msg = {\n      channel,\n      header,\n      parent_header,\n      metadata,\n      content,\n      buffers\n    };\n    return msg;\n  }\n\n  /**\n   * Serialize a kernel message for transport.\n   * Protocol `v1.kernel.websocket.jupyter.org`\n   */\n  export function serializeV1KernelWebsocketJupyterOrg(\n    msg: KernelMessage.IMessage\n  ): ArrayBuffer {\n    const header = JSON.stringify(msg.header);\n    const parentHeader =\n      msg.parent_header == null ? '{}' : JSON.stringify(msg.parent_header);\n    const metadata = JSON.stringify(msg.metadata);\n    const content = JSON.stringify(msg.content);\n    const buffers: (ArrayBuffer | ArrayBufferView)[] =\n      msg.buffers !== undefined ? msg.buffers : [];\n    const offsetNumber: number = 1 + 4 + buffers.length + 1;\n    let offsets: number[] = [];\n    offsets.push(8 * (1 + offsetNumber));\n    offsets.push(msg.channel.length + offsets[offsets.length - 1]);\n    const encoder = new TextEncoder();\n    const channelEncoded = encoder.encode(msg.channel);\n    const headerEncoded = encoder.encode(header);\n    const parentHeaderEncoded = encoder.encode(parentHeader);\n    const metadataEncoded = encoder.encode(metadata);\n    const contentEncoded = encoder.encode(content);\n    const binMsgNoBuff = new Uint8Array(\n      channelEncoded.length +\n        headerEncoded.length +\n        parentHeaderEncoded.length +\n        metadataEncoded.length +\n        contentEncoded.length\n    );\n    binMsgNoBuff.set(channelEncoded);\n    binMsgNoBuff.set(headerEncoded, channelEncoded.length);\n    binMsgNoBuff.set(\n      parentHeaderEncoded,\n      channelEncoded.length + headerEncoded.length\n    );\n    binMsgNoBuff.set(\n      metadataEncoded,\n      channelEncoded.length + headerEncoded.length + parentHeaderEncoded.length\n    );\n    binMsgNoBuff.set(\n      contentEncoded,\n      channelEncoded.length +\n        headerEncoded.length +\n        parentHeaderEncoded.length +\n        metadataEncoded.length\n    );\n    for (let length of [\n      headerEncoded.length,\n      parentHeaderEncoded.length,\n      metadataEncoded.length,\n      contentEncoded.length\n    ]) {\n      offsets.push(length + offsets[offsets.length - 1]);\n    }\n    let buffersByteLength = 0;\n    for (let buffer of buffers) {\n      let length = buffer.byteLength;\n      offsets.push(length + offsets[offsets.length - 1]);\n      buffersByteLength += length;\n    }\n    const binMsg = new Uint8Array(\n      8 * (1 + offsetNumber) + binMsgNoBuff.byteLength + buffersByteLength\n    );\n    const word = new ArrayBuffer(8);\n    const data = new DataView(word);\n    data.setBigUint64(0, BigInt(offsetNumber), true /* littleEndian */);\n    binMsg.set(new Uint8Array(word), 0);\n    for (let i = 0; i < offsets.length; i++) {\n      data.setBigUint64(0, BigInt(offsets[i]), true /* littleEndian */);\n      binMsg.set(new Uint8Array(word), 8 * (i + 1));\n    }\n    binMsg.set(binMsgNoBuff, offsets[0]);\n    for (let i = 0; i < buffers.length; i++) {\n      const buffer = buffers[i];\n      binMsg.set(\n        new Uint8Array(ArrayBuffer.isView(buffer) ? buffer.buffer : buffer),\n        offsets[5 + i]\n      );\n    }\n    return binMsg.buffer;\n  }\n\n  /**\n   * Deserialize and return the unpacked message.\n   * Default protocol\n   *\n   * #### Notes\n   * Handles JSON blob strings and binary messages.\n   */\n  export function deserializeDefault(\n    data: ArrayBuffer | string\n  ): KernelMessage.IMessage {\n    let value: KernelMessage.IMessage;\n    if (typeof data === 'string') {\n      value = JSON.parse(data);\n    } else {\n      value = deserializeBinary(data);\n    }\n    return value;\n  }\n\n  /**\n   * Serialize a kernel message for transport.\n   * Default protocol\n   *\n   * #### Notes\n   * If there is binary content, an `ArrayBuffer` is returned,\n   * otherwise the message is converted to a JSON string.\n   */\n  export function serializeDefault(\n    msg: KernelMessage.IMessage\n  ): string | ArrayBuffer {\n    let value: string | ArrayBuffer;\n    if (msg.buffers?.length) {\n      value = serializeBinary(msg);\n    } else {\n      value = JSON.stringify(msg);\n    }\n    return value;\n  }\n\n  /**\n   * Deserialize a binary message to a Kernel Message.\n   */\n  function deserializeBinary(buf: ArrayBuffer): KernelMessage.IMessage {\n    const data = new DataView(buf);\n    // read the header: 1 + nbufs 32b integers\n    const nbufs = data.getUint32(0);\n    const offsets: number[] = [];\n    if (nbufs < 2) {\n      throw new Error('Invalid incoming Kernel Message');\n    }\n    for (let i = 1; i <= nbufs; i++) {\n      offsets.push(data.getUint32(i * 4));\n    }\n    const jsonBytes = new Uint8Array(buf.slice(offsets[0], offsets[1]));\n    const msg = JSON.parse(new TextDecoder('utf8').decode(jsonBytes));\n    // the remaining chunks are stored as DataViews in msg.buffers\n    msg.buffers = [];\n    for (let i = 1; i < nbufs; i++) {\n      const start = offsets[i];\n      const stop = offsets[i + 1] || buf.byteLength;\n      msg.buffers.push(new DataView(buf.slice(start, stop)));\n    }\n    return msg;\n  }\n\n  /**\n   * Implement the binary serialization protocol.\n   *\n   * Serialize Kernel message to ArrayBuffer.\n   */\n  function serializeBinary(msg: KernelMessage.IMessage): ArrayBuffer {\n    const offsets: number[] = [];\n    const buffers: ArrayBuffer[] = [];\n    const encoder = new TextEncoder();\n    let origBuffers: (ArrayBuffer | ArrayBufferView)[] = [];\n    if (msg.buffers !== undefined) {\n      origBuffers = msg.buffers;\n      delete msg['buffers'];\n    }\n    const jsonUtf8 = encoder.encode(JSON.stringify(msg));\n    buffers.push(jsonUtf8.buffer);\n    for (let i = 0; i < origBuffers.length; i++) {\n      // msg.buffers elements could be either views or ArrayBuffers\n      // buffers elements are ArrayBuffers\n      const b: any = origBuffers[i];\n      buffers.push(ArrayBuffer.isView(b) ? b.buffer : b);\n    }\n    const nbufs = buffers.length;\n    offsets.push(4 * (nbufs + 1));\n    for (let i = 0; i + 1 < buffers.length; i++) {\n      offsets.push(offsets[offsets.length - 1] + buffers[i].byteLength);\n    }\n    const msgBuf = new Uint8Array(\n      offsets[offsets.length - 1] + buffers[buffers.length - 1].byteLength\n    );\n    // use DataView.setUint32 for network byte-order\n    const view = new DataView(msgBuf.buffer);\n    // write nbufs to first 4 bytes\n    view.setUint32(0, nbufs);\n    // write offsets to next 4 * nbufs bytes\n    for (let i = 0; i < offsets.length; i++) {\n      view.setUint32(4 * (i + 1), offsets[i]);\n    }\n    // write all the buffers at their respective offsets\n    for (let i = 0; i < buffers.length; i++) {\n      msgBuf.set(new Uint8Array(buffers[i]), offsets[i]);\n    }\n    return msgBuf.buffer;\n  }\n}\n", "/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n\nexport default WebSocket;\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { KernelMessage } from './kernel';\nimport { deserialize, serialize } from './kernel/serialize';\n\nlet WEBSOCKET: typeof WebSocket;\n\nif (typeof window === 'undefined') {\n  // Mangle the require statements so it does not get picked up in the\n  // browser assets.\n  WEBSOCKET = require('ws');\n} else {\n  WEBSOCKET = WebSocket;\n}\n\ninterface ISerializer {\n  /**\n   * Serialize a kernel message for transport.\n   */\n  serialize(\n    msg: KernelMessage.IMessage,\n    protocol?: string\n  ): string | ArrayBuffer;\n  /**\n   * Deserialize and return the unpacked message.\n   */\n  deserialize(data: ArrayBuffer, protocol?: string): KernelMessage.IMessage;\n}\n\n/**\n * The namespace for ServerConnection functions.\n *\n * #### Notes\n * This is only intended to manage communication with the Jupyter server.\n *\n * The default values can be used in a JupyterLab or Jupyter Notebook context.\n *\n * We use `token` authentication if available, falling back on an XSRF\n * cookie if one has been provided on the `document`.\n *\n * A content type of `'application/json'` is added when using authentication\n * and there is no body data to allow the server to prevent malicious forms.\n */\nexport namespace ServerConnection {\n  /**\n   * A Jupyter server settings object.\n   * Note that all of the settings are optional when passed to\n   * [[makeSettings]]. The default settings are given in [[defaultSettings]].\n   */\n  export interface ISettings {\n    /**\n     * The base url of the server.\n     */\n    readonly baseUrl: string;\n\n    /**\n     * The app url of the JupyterLab application.\n     */\n    readonly appUrl: string;\n\n    /**\n     * The base ws url of the server.\n     */\n    readonly wsUrl: string;\n\n    /**\n     * The default request init options.\n     */\n    readonly init: RequestInit;\n\n    /**\n     * The authentication token for requests.  Use an empty string to disable.\n     */\n    readonly token: string;\n\n    /**\n     * Whether to append a token to a Websocket url.  The default is `false` in the browser\n     * and `true` in node or jest.\n     */\n    readonly appendToken: boolean;\n\n    /**\n     * The `fetch` method to use.\n     */\n    readonly fetch: (\n      input: RequestInfo,\n      init?: RequestInit\n    ) => Promise<Response>;\n\n    /**\n     * The `Request` object constructor.\n     */\n    readonly Request: typeof Request;\n\n    /**\n     * The `Headers` object constructor.\n     */\n    readonly Headers: typeof Headers;\n\n    /**\n     * The `WebSocket` object constructor.\n     */\n    readonly WebSocket: typeof WebSocket;\n\n    /**\n     * Serializer used to serialize/deserialize kernel messages.\n     */\n    readonly serializer: ISerializer;\n  }\n\n  /**\n   * Create a settings object given a subset of options.\n   *\n   * @param options - An optional partial set of options.\n   *\n   * @returns The full settings object.\n   */\n  export function makeSettings(options?: Partial<ISettings>): ISettings {\n    return Private.makeSettings(options);\n  }\n\n  /**\n   * Make an request to the notebook server.\n   *\n   * @param url - The url for the request.\n   *\n   * @param init - The initialization options for the request.\n   *\n   * @param settings - The server settings to apply to the request.\n   *\n   * @returns a Promise that resolves with the response.\n   *\n   * @throws If the url of the request is not a notebook server url.\n   *\n   * #### Notes\n   * The `url` must start with `settings.baseUrl`.  The `init` settings are\n   * merged with `settings.init`, with `init` taking precedence.\n   * The headers in the two objects are not merged.\n   * If there is no body data, we set the content type to `application/json`\n   * because it is required by the Notebook server.\n   */\n  export function makeRequest(\n    url: string,\n    init: RequestInit,\n    settings: ISettings\n  ): Promise<Response> {\n    return Private.handleRequest(url, init, settings);\n  }\n\n  /**\n   * A wrapped error for a fetch response.\n   */\n  export class ResponseError extends Error {\n    /**\n     * Create a ResponseError from a response, handling the traceback and message\n     * as appropriate.\n     *\n     * @param response The response object.\n     *\n     * @returns A promise that resolves with a `ResponseError` object.\n     */\n    static async create(response: Response): Promise<ResponseError> {\n      try {\n        const data = await response.json();\n        const { message, traceback } = data;\n        if (traceback) {\n          console.error(traceback);\n        }\n        return new ResponseError(\n          response,\n          message ?? ResponseError._defaultMessage(response),\n          traceback ?? ''\n        );\n      } catch (e) {\n        console.debug(e);\n        return new ResponseError(response);\n      }\n    }\n\n    /**\n     * Create a new response error.\n     */\n    constructor(\n      response: Response,\n      message = ResponseError._defaultMessage(response),\n      traceback = ''\n    ) {\n      super(message);\n      this.response = response;\n      this.traceback = traceback;\n    }\n\n    /**\n     * The response associated with the error.\n     */\n    response: Response;\n\n    /**\n     * The traceback associated with the error.\n     */\n    traceback: string;\n\n    private static _defaultMessage(response: Response): string {\n      return `Invalid response: ${response.status} ${response.statusText}`;\n    }\n  }\n\n  /**\n   * A wrapped error for a network error.\n   */\n  export class NetworkError extends TypeError {\n    /**\n     * Create a new network error.\n     */\n    constructor(original: TypeError) {\n      super(original.message);\n      this.stack = original.stack;\n    }\n  }\n}\n\n/**\n * The namespace for module private data.\n */\nnamespace Private {\n  /**\n   * Handle the server connection settings, returning a new value.\n   */\n  export function makeSettings(\n    options: Partial<ServerConnection.ISettings> = {}\n  ): ServerConnection.ISettings {\n    const pageBaseUrl = PageConfig.getBaseUrl();\n    const pageWsUrl = PageConfig.getWsUrl();\n    const baseUrl = URLExt.normalize(options.baseUrl) || pageBaseUrl;\n    let wsUrl = options.wsUrl;\n    // Prefer the default wsUrl if we are using the default baseUrl.\n    if (!wsUrl && baseUrl === pageBaseUrl) {\n      wsUrl = pageWsUrl;\n    }\n    // Otherwise convert the baseUrl to a wsUrl if possible.\n    if (!wsUrl && baseUrl.indexOf('http') === 0) {\n      wsUrl = 'ws' + baseUrl.slice(4);\n    }\n    // Otherwise fall back on the default wsUrl.\n    wsUrl = wsUrl ?? pageWsUrl;\n\n    return {\n      init: { cache: 'no-store', credentials: 'same-origin' },\n      fetch,\n      Headers,\n      Request,\n      WebSocket: WEBSOCKET,\n      token: PageConfig.getToken(),\n      appUrl: PageConfig.getOption('appUrl'),\n      appendToken:\n        typeof window === 'undefined' ||\n        (typeof process !== 'undefined' &&\n          process?.env?.JEST_WORKER_ID !== undefined) ||\n        URLExt.getHostName(pageBaseUrl) !== URLExt.getHostName(wsUrl),\n      serializer: { serialize, deserialize },\n      ...options,\n      baseUrl,\n      wsUrl\n    };\n  }\n\n  /**\n   * Handle a request.\n   *\n   * @param url - The url for the request.\n   *\n   * @param init - The overrides for the request init.\n   *\n   * @param settings - The settings object for the request.\n   *\n   * #### Notes\n   * The `url` must start with `settings.baseUrl`.  The `init` settings\n   * take precedence over `settings.init`.\n   */\n  export function handleRequest(\n    url: string,\n    init: RequestInit,\n    settings: ServerConnection.ISettings\n  ): Promise<Response> {\n    // Handle notebook server requests.\n    if (url.indexOf(settings.baseUrl) !== 0) {\n      throw new Error('Can only be used for notebook server requests');\n    }\n\n    // Use explicit cache buster when `no-store` is set since\n    // not all browsers use it properly.\n    const cache = init.cache ?? settings.init.cache;\n    if (cache === 'no-store') {\n      // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n      url += (/\\?/.test(url) ? '&' : '?') + new Date().getTime();\n    }\n\n    const request = new settings.Request(url, { ...settings.init, ...init });\n\n    // Handle authentication. Authentication can be overdetermined by\n    // settings token and XSRF token.\n    let authenticated = false;\n    if (settings.token) {\n      authenticated = true;\n      request.headers.append('Authorization', `token ${settings.token}`);\n    }\n    if (typeof document !== 'undefined') {\n      const xsrfToken = getCookie('_xsrf');\n      if (xsrfToken !== undefined) {\n        authenticated = true;\n        request.headers.append('X-XSRFToken', xsrfToken);\n      }\n    }\n\n    // Set the content type if there is no given data and we are\n    // using an authenticated connection.\n    if (!request.headers.has('Content-Type') && authenticated) {\n      request.headers.set('Content-Type', 'application/json');\n    }\n\n    // Use `call` to avoid a `TypeError` in the browser.\n    return settings.fetch.call(null, request).catch((e: TypeError) => {\n      // Convert the TypeError into a more specific error.\n      throw new ServerConnection.NetworkError(e);\n    });\n    // TODO: *this* is probably where we need a system-wide connectionFailure\n    // signal we can hook into.\n  }\n\n  /**\n   * Get a cookie from the document.\n   */\n  function getCookie(name: string): string | undefined {\n    // From http://www.tornadoweb.org/en/stable/guide/security.html\n    let cookie = '';\n    try {\n      cookie = document.cookie;\n    } catch (e) {\n      // e.g. SecurityError in case of CSP Sandbox\n      return;\n    }\n    const matches = cookie.match('\\\\b' + name + '=([^;]*)\\\\b');\n    return matches?.[1];\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { IObservableDisposable } from '@lumino/disposable';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { ServerConnection } from './serverconnection';\n\n/**\n * Object which manages kernel instances for a given base url.\n *\n * #### Notes\n * The manager is responsible for maintaining the state of kernel specs.\n */\nexport interface IManager extends IObservableDisposable {\n  /**\n   * A signal emitted when there is a connection failure.\n   */\n  connectionFailure: ISignal<IManager, ServerConnection.NetworkError>;\n\n  /**\n   * The server settings for the manager.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n\n  /**\n   * Whether the manager is ready.\n   */\n  readonly isReady: boolean;\n\n  /**\n   * A promise that resolves when the manager is initially ready.\n   */\n  readonly ready: Promise<void>;\n\n  /**\n   * Whether the manager is active.\n   */\n  readonly isActive: boolean;\n}\n\nexport abstract class BaseManager implements IManager {\n  constructor(options: BaseManager.IOptions) {\n    this.serverSettings =\n      options.serverSettings ?? ServerConnection.makeSettings();\n  }\n  /**\n   * A signal emitted when the delegate is disposed.\n   */\n  get disposed(): ISignal<this, void> {\n    return this._disposed;\n  }\n\n  /**\n   * A signal emitted when there is a connection failure.\n   */\n  abstract connectionFailure: ISignal<this, Error>;\n\n  /**\n   * Test whether the delegate has been disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * Test whether the manager is ready.\n   */\n  abstract isReady: boolean;\n\n  /**\n   * A promise that fulfills when the manager is ready.\n   */\n  abstract ready: Promise<void>;\n\n  /**\n   * Whether the manager is active.\n   */\n  get isActive(): boolean {\n    return true;\n  }\n\n  /**\n   * Dispose of the delegate and invoke the callback function.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    this._disposed.emit(undefined);\n    Signal.clearData(this);\n  }\n\n  /**\n   * The server settings of the manager.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n\n  private _isDisposed = false;\n  private _disposed = new Signal<this, void>(this);\n}\n\n/**\n * The namespace for `BaseManager` class statics.\n */\nexport namespace BaseManager {\n  /**\n   * The options used to initialize a SessionManager.\n   */\n  export interface IOptions {\n    /**\n     * The server settings for the manager.\n     */\n    serverSettings?: ServerConnection.ISettings;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { URLExt } from '@jupyterlab/coreutils';\n\nimport { JSONObject, JSONValue } from '@lumino/coreutils';\n\nimport { ServerConnection } from '..';\n\n/**\n * The url for the config service.\n */\nconst SERVICE_CONFIG_URL = 'api/config';\n\n/**\n * A Configurable data section.\n */\nexport interface IConfigSection {\n  /**\n   * The data for this section.\n   */\n  readonly data: JSONObject;\n\n  /**\n   * Modify the stored config values.\n   *\n   * #### Notes\n   * Updates the local data immediately, sends the change to the server,\n   * and updates the local data with the response, and fulfils the promise\n   * with that data.\n   */\n  update(newdata: JSONObject): Promise<JSONObject>;\n\n  /**\n   * The server settings for the section.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n}\n\n/**\n * The namespace for ConfigSection statics.\n */\nexport namespace ConfigSection {\n  /**\n   * Create a config section.\n   *\n   * @returns A Promise that is fulfilled with the config section is loaded.\n   */\n  export function create(\n    options: ConfigSection.IOptions\n  ): Promise<IConfigSection> {\n    const section = new DefaultConfigSection(options);\n    return section.load().then(() => {\n      return section;\n    });\n  }\n\n  /**\n   * The options used to create a config section.\n   */\n  export interface IOptions {\n    /**\n     * The section name.\n     */\n    name: string;\n\n    /**\n     * The optional server settings.\n     */\n    serverSettings?: ServerConnection.ISettings;\n  }\n}\n\n/**\n * Implementation of the Configurable data section.\n */\nclass DefaultConfigSection implements IConfigSection {\n  /**\n   * Construct a new config section.\n   */\n  constructor(options: ConfigSection.IOptions) {\n    const settings = (this.serverSettings =\n      options.serverSettings ?? ServerConnection.makeSettings());\n    this._url = URLExt.join(\n      settings.baseUrl,\n      SERVICE_CONFIG_URL,\n      encodeURIComponent(options.name)\n    );\n  }\n\n  /**\n   * The server settings for the section.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n\n  /**\n   * Get the data for this section.\n   */\n  get data(): JSONObject {\n    return this._data;\n  }\n\n  /**\n   * Load the initial data for this section.\n   *\n   * #### Notes\n   * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/config).\n   *\n   * The promise is fulfilled on a valid response and rejected otherwise.\n   */\n  async load(): Promise<void> {\n    const response = await ServerConnection.makeRequest(\n      this._url,\n      {},\n      this.serverSettings\n    );\n    if (response.status !== 200) {\n      const err = await ServerConnection.ResponseError.create(response);\n      throw err;\n    }\n    this._data = await response.json();\n  }\n\n  /**\n   * Modify the stored config values.\n   *\n   * #### Notes\n   * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/config).\n   *\n   * The promise is fulfilled on a valid response and rejected otherwise.\n   *\n   * Updates the local data immediately, sends the change to the server,\n   * and updates the local data with the response, and fulfils the promise\n   * with that data.\n   */\n  async update(newdata: JSONObject): Promise<JSONObject> {\n    this._data = { ...this._data, ...newdata };\n    const init = {\n      method: 'PATCH',\n      body: JSON.stringify(newdata)\n    };\n    const response = await ServerConnection.makeRequest(\n      this._url,\n      init,\n      this.serverSettings\n    );\n    if (response.status !== 200) {\n      const err = await ServerConnection.ResponseError.create(response);\n      throw err;\n    }\n    this._data = await response.json();\n    return this._data;\n  }\n\n  private _url = 'unknown';\n  private _data: JSONObject;\n}\n\n/**\n * Configurable object with defaults.\n */\nexport class ConfigWithDefaults {\n  /**\n   * Create a new config with defaults.\n   */\n  constructor(options: ConfigWithDefaults.IOptions) {\n    this._section = options.section;\n    this._defaults = options.defaults ?? {};\n    this._className = options.className ?? '';\n  }\n\n  /**\n   * Get data from the config section or fall back to defaults.\n   */\n  get(key: string): JSONValue {\n    const data = this._classData();\n    return key in data ? data[key] : this._defaults[key];\n  }\n\n  /**\n   * Set a config value.\n   *\n   * #### Notes\n   * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/config).\n   *\n   * The promise is fulfilled on a valid response and rejected otherwise.\n   *\n   * Sends the update to the server, and changes our local copy of the data\n   * immediately.\n   */\n  set(key: string, value: JSONValue): Promise<JSONValue> {\n    const d: JSONObject = {};\n    d[key] = value;\n    if (this._className) {\n      const d2: JSONObject = {};\n      d2[this._className] = d;\n      return this._section.update(d2);\n    } else {\n      return this._section.update(d);\n    }\n  }\n\n  /**\n   * Get data from the Section with our classname, if available.\n   *\n   * #### Notes\n   * If we have no classname, get all of the data in the Section\n   */\n  private _classData(): JSONObject {\n    const data = this._section.data;\n    if (this._className && this._className in data) {\n      return data[this._className] as JSONObject;\n    }\n    return data;\n  }\n\n  private _section: IConfigSection;\n  private _defaults: JSONObject;\n  private _className = '';\n}\n\n/**\n * A namespace for ConfigWithDefaults statics.\n */\nexport namespace ConfigWithDefaults {\n  /**\n   * The options used to initialize a ConfigWithDefaults object.\n   */\n  export interface IOptions {\n    /**\n     * The configuration section.\n     */\n    section: IConfigSection;\n\n    /**\n     * The default values.\n     */\n    defaults?: JSONObject;\n\n    /**\n     * The optional classname namespace.\n     */\n    className?: string;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n/**\n * Validate a property as being on an object, and optionally\n * of a given type and among a given set of values.\n */\nexport function validateProperty(\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  object: any,\n  name: string,\n  typeName?: string,\n  values: any[] = []\n): void {\n  if (!object.hasOwnProperty(name)) {\n    throw Error(`Missing property '${name}'`);\n  }\n  const value = object[name];\n\n  if (typeName !== void 0) {\n    let valid = true;\n    switch (typeName) {\n      case 'array':\n        valid = Array.isArray(value);\n        break;\n      case 'object':\n        valid = typeof value !== 'undefined';\n        break;\n      default:\n        valid = typeof value === typeName;\n    }\n    if (!valid) {\n      throw new Error(`Property '${name}' is not of type '${typeName}'`);\n    }\n\n    if (values.length > 0) {\n      let valid = true;\n      switch (typeName) {\n        case 'string':\n        case 'number':\n        case 'boolean':\n          valid = values.includes(value);\n          break;\n        default:\n          valid = values.findIndex(v => v === value) >= 0;\n          break;\n      }\n      if (!valid) {\n        throw new Error(\n          `Property '${name}' is not one of the valid values ${JSON.stringify(\n            values\n          )}`\n        );\n      }\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { Contents } from './index';\nimport { validateProperty } from '../validate';\n\n/**\n * Validate an `Contents.IModel` object.\n */\nexport function validateContentsModel(\n  model: Contents.IModel\n): asserts model is Contents.IModel {\n  validateProperty(model, 'name', 'string');\n  validateProperty(model, 'path', 'string');\n  validateProperty(model, 'type', 'string');\n  validateProperty(model, 'created', 'string');\n  validateProperty(model, 'last_modified', 'string');\n  validateProperty(model, 'mimetype', 'object');\n  validateProperty(model, 'content', 'object');\n  validateProperty(model, 'format', 'object');\n}\n\n/**\n * Validate an `Contents.ICheckpointModel` object.\n */\nexport function validateCheckpointModel(\n  model: Contents.ICheckpointModel\n): asserts model is Contents.ICheckpointModel {\n  validateProperty(model, 'id', 'string');\n  validateProperty(model, 'last_modified', 'string');\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport type { ISharedDocument } from '@jupyter/ydoc';\n\nimport { PathExt, URLExt } from '@jupyterlab/coreutils';\n\nimport { PartialJSONObject } from '@lumino/coreutils';\n\nimport { IDisposable } from '@lumino/disposable';\n\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { ServerConnection } from '..';\n\nimport * as validate from './validate';\n\n/**\n * The url for the default drive service.\n */\nconst SERVICE_DRIVE_URL = 'api/contents';\n\n/**\n * The url for the file access.\n */\nconst FILES_URL = 'files';\n\n/**\n * A namespace for contents interfaces.\n */\nexport namespace Contents {\n  /**\n   * A contents model.\n   */\n  export interface IModel {\n    /**\n     * Name of the contents file.\n     *\n     * #### Notes\n     *  Equivalent to the last part of the `path` field.\n     */\n    readonly name: string;\n\n    /**\n     * The full file path.\n     *\n     * #### Notes\n     * It will *not* start with `/`, and it will be `/`-delimited.\n     */\n    readonly path: string;\n\n    /**\n     * The path as returned by the server contents API.\n     *\n     * #### Notes\n     * Differently to `path` it does not include IDrive API prefix.\n     */\n    readonly serverPath?: string;\n\n    /**\n     * The type of file.\n     */\n    readonly type: ContentType;\n\n    /**\n     * Whether the requester has permission to edit the file.\n     */\n    readonly writable: boolean;\n\n    /**\n     * File creation timestamp.\n     */\n    readonly created: string;\n\n    /**\n     * Last modified timestamp.\n     */\n    readonly last_modified: string;\n\n    /**\n     * Specify the mime-type of file contents.\n     *\n     * #### Notes\n     * Only non-`null` when `content` is present and `type` is `\"file\"`.\n     */\n    readonly mimetype: string;\n\n    /**\n     * The optional file content.\n     */\n    readonly content: any;\n\n    /**\n     * The chunk of the file upload.\n     */\n    readonly chunk?: number;\n\n    /**\n     * The format of the file `content`.\n     *\n     * #### Notes\n     * Only relevant for type: 'file'\n     */\n    readonly format: FileFormat;\n\n    /**\n     * The size of then file in bytes.\n     */\n    readonly size?: number;\n\n    /**\n     * The indices of the matched characters in the name.\n     */\n    indices?: ReadonlyArray<number> | null;\n\n    /**\n     * The hexdigest hash string of content, if requested (otherwise null).\n     * It cannot be null if hash_algorithm is defined.\n     */\n    readonly hash?: string;\n\n    /**\n     * The algorithm used to compute hash value. It cannot be null if hash is defined.\n     */\n    readonly hash_algorithm?: string;\n  }\n\n  /**\n   * Validates an IModel, throwing an error if it does not pass.\n   */\n  export function validateContentsModel(contents: IModel): void {\n    validate.validateContentsModel(contents);\n  }\n\n  /**\n   * A contents file type. It can be anything but `jupyter-server`\n   * has special treatment for `notebook` and `directory` types.\n   * Anything else is considered as `file` type.\n   */\n  export type ContentType = string;\n\n  /**\n   * A contents file format.\n   */\n  export type FileFormat = 'json' | 'text' | 'base64' | null;\n\n  /**\n   * The options used to fetch a file.\n   */\n  export interface IFetchOptions {\n    /**\n     * The override file type for the request.\n     */\n    type?: ContentType;\n\n    /**\n     * The override file format for the request.\n     */\n    format?: FileFormat;\n\n    /**\n     * Whether to include the file content.\n     *\n     * The default is `true`.\n     */\n    content?: boolean;\n\n    /**\n     * Whether to include a hash in the response.\n     *\n     * The default is `false`.\n     */\n    hash?: boolean;\n  }\n\n  /**\n   * The options used to create a file.\n   */\n  export interface ICreateOptions {\n    /**\n     * The directory in which to create the file.\n     */\n    path?: string;\n\n    /**\n     * The optional file extension for the new file (e.g. `\".txt\"`).\n     *\n     * #### Notes\n     * This ignored if `type` is `'notebook'`.\n     */\n    ext?: string;\n\n    /**\n     * The file type.\n     */\n    type?: ContentType;\n  }\n\n  /**\n   * Checkpoint model.\n   */\n  export interface ICheckpointModel {\n    /**\n     * The unique identifier for the checkpoint.\n     */\n    readonly id: string;\n\n    /**\n     * Last modified timestamp.\n     */\n    readonly last_modified: string;\n  }\n\n  /**\n   * Validates an ICheckpointModel, throwing an error if it does not pass.\n   */\n  export function validateCheckpointModel(checkpoint: ICheckpointModel): void {\n    validate.validateCheckpointModel(checkpoint);\n  }\n\n  /**\n   * The change args for a file change.\n   */\n  export interface IChangedArgs {\n    /**\n     * The type of change.\n     */\n    type: 'new' | 'delete' | 'rename' | 'save';\n\n    /**\n     * The new contents.\n     */\n    oldValue: Partial<IModel> | null;\n\n    /**\n     * The old contents.\n     */\n    newValue: Partial<IModel> | null;\n  }\n\n  /**\n   * A factory interface for creating `ISharedDocument` objects.\n   */\n  export interface ISharedFactory {\n    /**\n     * Whether the IDrive supports real-time collaboration or not.\n     * Note: If it is not provided, it is false by default.\n     */\n    readonly collaborative?: boolean;\n\n    /**\n     * Create a new `ISharedDocument` instance.\n     *\n     * It should return `undefined` if the factory is not able to create a `ISharedDocument`.\n     */\n    createNew(options: ISharedFactoryOptions): ISharedDocument | undefined;\n  }\n\n  /**\n   * The options used to instantiate a ISharedDocument\n   */\n  export interface ISharedFactoryOptions {\n    /**\n     * The path of the file.\n     */\n    path: string;\n    /**\n     * The format of the document. If null, the document won't be\n     * collaborative.\n     */\n    format: FileFormat;\n    /**\n     * The content type of the document.\n     */\n    contentType: ContentType;\n    /**\n     * Wether the document is collaborative or not.\n     *\n     * The default value is `true`.\n     */\n    collaborative?: boolean;\n  }\n\n  /**\n   * The interface for a contents manager.\n   */\n  export interface IManager extends IDisposable {\n    /**\n     * A signal emitted when a file operation takes place.\n     */\n    readonly fileChanged: ISignal<IManager, IChangedArgs>;\n\n    /**\n     * The server settings associated with the manager.\n     */\n    readonly serverSettings: ServerConnection.ISettings;\n\n    /**\n     * Add an `IDrive` to the manager.\n     */\n    addDrive(drive: IDrive): void;\n\n    /**\n     * Given a path of the form `drive:local/portion/of/it.txt`\n     * get the local part of it.\n     *\n     * @param path: the path.\n     *\n     * @returns The local part of the path.\n     */\n    localPath(path: string): string;\n\n    /**\n     * Normalize a global path. Reduces '..' and '.' parts, and removes\n     * leading slashes from the local part of the path, while retaining\n     * the drive name if it exists.\n     *\n     * @param path: the path.\n     *\n     * @returns The normalized path.\n     */\n    normalize(path: string): string;\n\n    /**\n     * Resolve a global path, starting from the root path. Behaves like\n     * posix-path.resolve, with 3 differences:\n     *  - will never prepend cwd\n     *  - if root has a drive name, the result is prefixed with \"<drive>:\"\n     *  - before adding drive name, leading slashes are removed\n     *\n     * @param path: the path.\n     *\n     * @returns The normalized path.\n     */\n    resolvePath(root: string, path: string): string;\n\n    /**\n     * Given a path of the form `drive:local/portion/of/it.txt`\n     * get the name of the drive. If the path is missing\n     * a drive portion, returns an empty string.\n     *\n     * @param path: the path.\n     *\n     * @returns The drive name for the path, or the empty string.\n     */\n    driveName(path: string): string;\n\n    /**\n     * Given a path, get a shared model IFactory from the\n     * relevant backend. Returns `null` if the backend\n     * does not provide one.\n     */\n    getSharedModelFactory(path: string): ISharedFactory | null;\n\n    /**\n     * Get a file or directory.\n     *\n     * @param path: The path to the file.\n     *\n     * @param options: The options used to fetch the file.\n     *\n     * @returns A promise which resolves with the file content.\n     */\n    get(path: string, options?: IFetchOptions): Promise<IModel>;\n\n    /**\n     * Get an encoded download url given a file path.\n     *\n     * @param A promise which resolves with the absolute POSIX\n     *   file path on the server.\n     *\n     * #### Notes\n     * The returned URL may include a query parameter.\n     */\n    getDownloadUrl(path: string): Promise<string>;\n\n    /**\n     * Create a new untitled file or directory in the specified directory path.\n     *\n     * @param options: The options used to create the file.\n     *\n     * @returns A promise which resolves with the created file content when the\n     *    file is created.\n     */\n    newUntitled(options?: ICreateOptions): Promise<IModel>;\n\n    /**\n     * Delete a file.\n     *\n     * @param path - The path to the file.\n     *\n     * @returns A promise which resolves when the file is deleted.\n     */\n    delete(path: string): Promise<void>;\n\n    /**\n     * Rename a file or directory.\n     *\n     * @param path - The original file path.\n     *\n     * @param newPath - The new file path.\n     *\n     * @returns A promise which resolves with the new file content model when the\n     *   file is renamed.\n     */\n    rename(path: string, newPath: string): Promise<IModel>;\n\n    /**\n     * Save a file.\n     *\n     * @param path - The desired file path.\n     *\n     * @param options - Optional overrides to the model.\n     *\n     * @returns A promise which resolves with the file content model when the\n     *   file is saved.\n     */\n    save(path: string, options?: Partial<IModel>): Promise<IModel>;\n\n    /**\n     * Copy a file into a given directory.\n     *\n     * @param path - The original file path.\n     *\n     * @param toDir - The destination directory path.\n     *\n     * @returns A promise which resolves with the new content model when the\n     *  file is copied.\n     */\n    copy(path: string, toDir: string): Promise<IModel>;\n\n    /**\n     * Create a checkpoint for a file.\n     *\n     * @param path - The path of the file.\n     *\n     * @returns A promise which resolves with the new checkpoint model when the\n     *   checkpoint is created.\n     */\n    createCheckpoint(path: string): Promise<ICheckpointModel>;\n\n    /**\n     * List available checkpoints for a file.\n     *\n     * @param path - The path of the file.\n     *\n     * @returns A promise which resolves with a list of checkpoint models for\n     *    the file.\n     */\n    listCheckpoints(path: string): Promise<ICheckpointModel[]>;\n\n    /**\n     * Restore a file to a known checkpoint state.\n     *\n     * @param path - The path of the file.\n     *\n     * @param checkpointID - The id of the checkpoint to restore.\n     *\n     * @returns A promise which resolves when the checkpoint is restored.\n     */\n    restoreCheckpoint(path: string, checkpointID: string): Promise<void>;\n\n    /**\n     * Delete a checkpoint for a file.\n     *\n     * @param path - The path of the file.\n     *\n     * @param checkpointID - The id of the checkpoint to delete.\n     *\n     * @returns A promise which resolves when the checkpoint is deleted.\n     */\n    deleteCheckpoint(path: string, checkpointID: string): Promise<void>;\n  }\n\n  /**\n   * The interface for a network drive that can be mounted\n   * in the contents manager.\n   */\n  export interface IDrive extends IDisposable {\n    /**\n     * The name of the drive, which is used at the leading\n     * component of file paths.\n     */\n    readonly name: string;\n\n    /**\n     * The server settings of the manager.\n     */\n    readonly serverSettings: ServerConnection.ISettings;\n\n    /**\n     * An optional shared model factory instance for the\n     * drive.\n     */\n    readonly sharedModelFactory?: ISharedFactory;\n\n    /**\n     * A signal emitted when a file operation takes place.\n     */\n    fileChanged: ISignal<IDrive, IChangedArgs>;\n\n    /**\n     * Get a file or directory.\n     *\n     * @param localPath: The path to the file.\n     *\n     * @param options: The options used to fetch the file.\n     *\n     * @returns A promise which resolves with the file content.\n     */\n    get(localPath: string, options?: IFetchOptions): Promise<IModel>;\n\n    /**\n     * Get an encoded download url given a file path.\n     *\n     * @returns A promise which resolves with the absolute POSIX\n     *   file path on the server.\n     *\n     * #### Notes\n     * The returned URL may include a query parameter.\n     */\n    getDownloadUrl(localPath: string): Promise<string>;\n\n    /**\n     * Create a new untitled file or directory in the specified directory path.\n     *\n     * @param options: The options used to create the file.\n     *\n     * @returns A promise which resolves with the created file content when the\n     *    file is created.\n     */\n    newUntitled(options?: ICreateOptions): Promise<IModel>;\n\n    /**\n     * Delete a file.\n     *\n     * @param localPath - The path to the file.\n     *\n     * @returns A promise which resolves when the file is deleted.\n     */\n    delete(localPath: string): Promise<void>;\n\n    /**\n     * Rename a file or directory.\n     *\n     * @param oldLocalPath - The original file path.\n     *\n     * @param newLocalPath - The new file path.\n     *\n     * @returns A promise which resolves with the new file content model when the\n     *   file is renamed.\n     */\n    rename(oldLocalPath: string, newLocalPath: string): Promise<IModel>;\n\n    /**\n     * Save a file.\n     *\n     * @param localPath - The desired file path.\n     *\n     * @param options - Optional overrides to the model.\n     *\n     * @returns A promise which resolves with the file content model when the\n     *   file is saved.\n     */\n    save(localPath: string, options?: Partial<IModel>): Promise<IModel>;\n\n    /**\n     * Copy a file into a given directory.\n     *\n     * @param localPath - The original file path.\n     *\n     * @param toLocalDir - The destination directory path.\n     *\n     * @returns A promise which resolves with the new content model when the\n     *  file is copied.\n     */\n    copy(localPath: string, toLocalDir: string): Promise<IModel>;\n\n    /**\n     * Create a checkpoint for a file.\n     *\n     * @param localPath - The path of the file.\n     *\n     * @returns A promise which resolves with the new checkpoint model when the\n     *   checkpoint is created.\n     */\n    createCheckpoint(localPath: string): Promise<ICheckpointModel>;\n\n    /**\n     * List available checkpoints for a file.\n     *\n     * @param localPath - The path of the file.\n     *\n     * @returns A promise which resolves with a list of checkpoint models for\n     *    the file.\n     */\n    listCheckpoints(localPath: string): Promise<ICheckpointModel[]>;\n\n    /**\n     * Restore a file to a known checkpoint state.\n     *\n     * @param localPath - The path of the file.\n     *\n     * @param checkpointID - The id of the checkpoint to restore.\n     *\n     * @returns A promise which resolves when the checkpoint is restored.\n     */\n    restoreCheckpoint(localPath: string, checkpointID: string): Promise<void>;\n\n    /**\n     * Delete a checkpoint for a file.\n     *\n     * @param localPath - The path of the file.\n     *\n     * @param checkpointID - The id of the checkpoint to delete.\n     *\n     * @returns A promise which resolves when the checkpoint is deleted.\n     */\n    deleteCheckpoint(localPath: string, checkpointID: string): Promise<void>;\n  }\n}\n\n/**\n * A contents manager that passes file operations to the server.\n * Multiple servers implementing the `IDrive` interface can be\n * attached to the contents manager, so that the same session can\n * perform file operations on multiple backends.\n *\n * This includes checkpointing with the normal file operations.\n */\nexport class ContentsManager implements Contents.IManager {\n  /**\n   * Construct a new contents manager object.\n   *\n   * @param options - The options used to initialize the object.\n   */\n  constructor(options: ContentsManager.IOptions = {}) {\n    const serverSettings = (this.serverSettings =\n      options.serverSettings ?? ServerConnection.makeSettings());\n    this._defaultDrive = options.defaultDrive ?? new Drive({ serverSettings });\n    this._defaultDrive.fileChanged.connect(this._onFileChanged, this);\n  }\n\n  /**\n   * The server settings associated with the manager.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n\n  /**\n   * A signal emitted when a file operation takes place.\n   */\n  get fileChanged(): ISignal<this, Contents.IChangedArgs> {\n    return this._fileChanged;\n  }\n\n  /**\n   * Test whether the manager has been disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * Dispose of the resources held by the manager.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    Signal.clearData(this);\n  }\n\n  /**\n   * Add an `IDrive` to the manager.\n   */\n  addDrive(drive: Contents.IDrive): void {\n    this._additionalDrives.set(drive.name, drive);\n    drive.fileChanged.connect(this._onFileChanged, this);\n  }\n\n  /**\n   * Given a path, get a shared model factory from the\n   * relevant backend. Returns `null` if the backend\n   * does not provide one.\n   */\n  getSharedModelFactory(path: string): Contents.ISharedFactory | null {\n    const [drive] = this._driveForPath(path);\n    return drive?.sharedModelFactory ?? null;\n  }\n\n  /**\n   * Given a path of the form `drive:local/portion/of/it.txt`\n   * get the local part of it.\n   *\n   * @param path: the path.\n   *\n   * @returns The local part of the path.\n   */\n  localPath(path: string): string {\n    const parts = path.split('/');\n    const firstParts = parts[0].split(':');\n    if (firstParts.length === 1 || !this._additionalDrives.has(firstParts[0])) {\n      return PathExt.removeSlash(path);\n    }\n    return PathExt.join(firstParts.slice(1).join(':'), ...parts.slice(1));\n  }\n\n  /**\n   * Normalize a global path. Reduces '..' and '.' parts, and removes\n   * leading slashes from the local part of the path, while retaining\n   * the drive name if it exists.\n   *\n   * @param path: the path.\n   *\n   * @returns The normalized path.\n   */\n  normalize(path: string): string {\n    const parts = path.split(':');\n    if (parts.length === 1) {\n      return PathExt.normalize(path);\n    }\n    return `${parts[0]}:${PathExt.normalize(parts.slice(1).join(':'))}`;\n  }\n\n  /**\n   * Resolve a global path, starting from the root path. Behaves like\n   * posix-path.resolve, with 3 differences:\n   *  - will never prepend cwd\n   *  - if root has a drive name, the result is prefixed with \"<drive>:\"\n   *  - before adding drive name, leading slashes are removed\n   *\n   * @param path: the path.\n   *\n   * @returns The normalized path.\n   */\n  resolvePath(root: string, path: string): string {\n    const driveName = this.driveName(root);\n    const localPath = this.localPath(root);\n    const resolved = PathExt.resolve('/', localPath, path);\n    return driveName ? `${driveName}:${resolved}` : resolved;\n  }\n\n  /**\n   * Given a path of the form `drive:local/portion/of/it.txt`\n   * get the name of the drive. If the path is missing\n   * a drive portion, returns an empty string.\n   *\n   * @param path: the path.\n   *\n   * @returns The drive name for the path, or the empty string.\n   */\n  driveName(path: string): string {\n    const parts = path.split('/');\n    const firstParts = parts[0].split(':');\n    if (firstParts.length === 1) {\n      return '';\n    }\n    if (this._additionalDrives.has(firstParts[0])) {\n      return firstParts[0];\n    }\n    return '';\n  }\n\n  /**\n   * Get a file or directory.\n   *\n   * @param path: The path to the file.\n   *\n   * @param options: The options used to fetch the file.\n   *\n   * @returns A promise which resolves with the file content.\n   */\n  get(\n    path: string,\n    options?: Contents.IFetchOptions\n  ): Promise<Contents.IModel> {\n    const [drive, localPath] = this._driveForPath(path);\n    return drive.get(localPath, options).then(contentsModel => {\n      const listing: Contents.IModel[] = [];\n      if (contentsModel.type === 'directory' && contentsModel.content) {\n        for (const item of contentsModel.content) {\n          listing.push({ ...item, path: this._toGlobalPath(drive, item.path) });\n        }\n        return {\n          ...contentsModel,\n          path: this._toGlobalPath(drive, localPath),\n          content: listing,\n          serverPath: contentsModel.path\n        } as Contents.IModel;\n      } else {\n        return {\n          ...contentsModel,\n          path: this._toGlobalPath(drive, localPath),\n          serverPath: contentsModel.path\n        } as Contents.IModel;\n      }\n    });\n  }\n\n  /**\n   * Get an encoded download url given a file path.\n   *\n   * @param path - An absolute POSIX file path on the server.\n   *\n   * #### Notes\n   * It is expected that the path contains no relative paths.\n   *\n   * The returned URL may include a query parameter.\n   */\n  getDownloadUrl(path: string): Promise<string> {\n    const [drive, localPath] = this._driveForPath(path);\n    return drive.getDownloadUrl(localPath);\n  }\n\n  /**\n   * Create a new untitled file or directory in the specified directory path.\n   *\n   * @param options: The options used to create the file.\n   *\n   * @returns A promise which resolves with the created file content when the\n   *    file is created.\n   */\n  newUntitled(options: Contents.ICreateOptions = {}): Promise<Contents.IModel> {\n    if (options.path) {\n      const globalPath = this.normalize(options.path);\n      const [drive, localPath] = this._driveForPath(globalPath);\n      return drive\n        .newUntitled({ ...options, path: localPath })\n        .then(contentsModel => {\n          return {\n            ...contentsModel,\n            path: PathExt.join(globalPath, contentsModel.name),\n            serverPath: contentsModel.path\n          } as Contents.IModel;\n        });\n    } else {\n      return this._defaultDrive.newUntitled(options);\n    }\n  }\n\n  /**\n   * Delete a file.\n   *\n   * @param path - The path to the file.\n   *\n   * @returns A promise which resolves when the file is deleted.\n   */\n  delete(path: string): Promise<void> {\n    const [drive, localPath] = this._driveForPath(path);\n    return drive.delete(localPath);\n  }\n\n  /**\n   * Rename a file or directory.\n   *\n   * @param path - The original file path.\n   *\n   * @param newPath - The new file path.\n   *\n   * @returns A promise which resolves with the new file contents model when\n   *   the file is renamed.\n   */\n  rename(path: string, newPath: string): Promise<Contents.IModel> {\n    const [drive1, path1] = this._driveForPath(path);\n    const [drive2, path2] = this._driveForPath(newPath);\n    if (drive1 !== drive2) {\n      throw Error('ContentsManager: renaming files must occur within a Drive');\n    }\n    return drive1.rename(path1, path2).then(contentsModel => {\n      return {\n        ...contentsModel,\n        path: this._toGlobalPath(drive1, path2),\n        serverPath: contentsModel.path\n      } as Contents.IModel;\n    });\n  }\n\n  /**\n   * Save a file.\n   *\n   * @param path - The desired file path.\n   *\n   * @param options - Optional overrides to the model.\n   *\n   * @returns A promise which resolves with the file content model when the\n   *   file is saved.\n   *\n   * #### Notes\n   * Ensure that `model.content` is populated for the file.\n   */\n  save(\n    path: string,\n    options: Partial<Contents.IModel> = {}\n  ): Promise<Contents.IModel> {\n    const globalPath = this.normalize(path);\n    const [drive, localPath] = this._driveForPath(path);\n    return drive\n      .save(localPath, { ...options, path: localPath })\n      .then(contentsModel => {\n        return {\n          ...contentsModel,\n          path: globalPath,\n          serverPath: contentsModel.path\n        } as Contents.IModel;\n      });\n  }\n\n  /**\n   * Copy a file into a given directory.\n   *\n   * @param path - The original file path.\n   *\n   * @param toDir - The destination directory path.\n   *\n   * @returns A promise which resolves with the new contents model when the\n   *  file is copied.\n   *\n   * #### Notes\n   * The server will select the name of the copied file.\n   */\n  copy(fromFile: string, toDir: string): Promise<Contents.IModel> {\n    const [drive1, path1] = this._driveForPath(fromFile);\n    const [drive2, path2] = this._driveForPath(toDir);\n    if (drive1 === drive2) {\n      return drive1.copy(path1, path2).then(contentsModel => {\n        return {\n          ...contentsModel,\n          path: this._toGlobalPath(drive1, contentsModel.path),\n          serverPath: contentsModel.path\n        } as Contents.IModel;\n      });\n    } else {\n      throw Error('Copying files between drives is not currently implemented');\n    }\n  }\n\n  /**\n   * Create a checkpoint for a file.\n   *\n   * @param path - The path of the file.\n   *\n   * @returns A promise which resolves with the new checkpoint model when the\n   *   checkpoint is created.\n   */\n  createCheckpoint(path: string): Promise<Contents.ICheckpointModel> {\n    const [drive, localPath] = this._driveForPath(path);\n    return drive.createCheckpoint(localPath);\n  }\n\n  /**\n   * List available checkpoints for a file.\n   *\n   * @param path - The path of the file.\n   *\n   * @returns A promise which resolves with a list of checkpoint models for\n   *    the file.\n   */\n  listCheckpoints(path: string): Promise<Contents.ICheckpointModel[]> {\n    const [drive, localPath] = this._driveForPath(path);\n    return drive.listCheckpoints(localPath);\n  }\n\n  /**\n   * Restore a file to a known checkpoint state.\n   *\n   * @param path - The path of the file.\n   *\n   * @param checkpointID - The id of the checkpoint to restore.\n   *\n   * @returns A promise which resolves when the checkpoint is restored.\n   */\n  restoreCheckpoint(path: string, checkpointID: string): Promise<void> {\n    const [drive, localPath] = this._driveForPath(path);\n    return drive.restoreCheckpoint(localPath, checkpointID);\n  }\n\n  /**\n   * Delete a checkpoint for a file.\n   *\n   * @param path - The path of the file.\n   *\n   * @param checkpointID - The id of the checkpoint to delete.\n   *\n   * @returns A promise which resolves when the checkpoint is deleted.\n   */\n  deleteCheckpoint(path: string, checkpointID: string): Promise<void> {\n    const [drive, localPath] = this._driveForPath(path);\n    return drive.deleteCheckpoint(localPath, checkpointID);\n  }\n\n  /**\n   * Given a drive and a local path, construct a fully qualified\n   * path. The inverse of `_driveForPath`.\n   *\n   * @param drive: an `IDrive`.\n   *\n   * @param localPath: the local path on the drive.\n   *\n   * @returns the fully qualified path.\n   */\n  private _toGlobalPath(drive: Contents.IDrive, localPath: string): string {\n    if (drive === this._defaultDrive) {\n      return PathExt.removeSlash(localPath);\n    } else {\n      return `${drive.name}:${PathExt.removeSlash(localPath)}`;\n    }\n  }\n\n  /**\n   * Given a path, get the `IDrive to which it refers,\n   * where the path satisfies the pattern\n   * `'driveName:path/to/file'`. If there is no `driveName`\n   * prepended to the path, it returns the default drive.\n   *\n   * @param path: a path to a file.\n   *\n   * @returns A tuple containing an `IDrive` object for the path,\n   * and a local path for that drive.\n   */\n  private _driveForPath(path: string): [Contents.IDrive, string] {\n    const driveName = this.driveName(path);\n    const localPath = this.localPath(path);\n    if (driveName) {\n      return [this._additionalDrives.get(driveName)!, localPath];\n    } else {\n      return [this._defaultDrive, localPath];\n    }\n  }\n\n  /**\n   * Respond to fileChanged signals from the drives attached to\n   * the manager. This prepends the drive name to the path if necessary,\n   * and then forwards the signal.\n   */\n  private _onFileChanged(sender: Contents.IDrive, args: Contents.IChangedArgs) {\n    if (sender === this._defaultDrive) {\n      this._fileChanged.emit(args);\n    } else {\n      let newValue: Partial<Contents.IModel> | null = null;\n      let oldValue: Partial<Contents.IModel> | null = null;\n      if (args.newValue?.path) {\n        newValue = {\n          ...args.newValue,\n          path: this._toGlobalPath(sender, args.newValue.path)\n        };\n      }\n      if (args.oldValue?.path) {\n        oldValue = {\n          ...args.oldValue,\n          path: this._toGlobalPath(sender, args.oldValue.path)\n        };\n      }\n      this._fileChanged.emit({\n        type: args.type,\n        newValue,\n        oldValue\n      });\n    }\n  }\n\n  private _isDisposed = false;\n  private _additionalDrives = new Map<string, Contents.IDrive>();\n  private _defaultDrive: Contents.IDrive;\n  private _fileChanged = new Signal<this, Contents.IChangedArgs>(this);\n}\n\n/**\n * A default implementation for an `IDrive`, talking to the\n * server using the Jupyter REST API.\n */\nexport class Drive implements Contents.IDrive {\n  /**\n   * Construct a new contents manager object.\n   *\n   * @param options - The options used to initialize the object.\n   */\n  constructor(options: Drive.IOptions = {}) {\n    this.name = options.name ?? 'Default';\n    this._apiEndpoint = options.apiEndpoint ?? SERVICE_DRIVE_URL;\n    this.serverSettings =\n      options.serverSettings ?? ServerConnection.makeSettings();\n  }\n\n  /**\n   * The name of the drive, which is used at the leading\n   * component of file paths.\n   */\n  readonly name: string;\n\n  /**\n   * A signal emitted when a file operation takes place.\n   */\n  get fileChanged(): ISignal<this, Contents.IChangedArgs> {\n    return this._fileChanged;\n  }\n\n  /**\n   * The server settings of the drive.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n\n  /**\n   * Test whether the manager has been disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * Dispose of the resources held by the manager.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    Signal.clearData(this);\n  }\n\n  /**\n   * Get a file or directory.\n   *\n   * @param localPath: The path to the file.\n   *\n   * @param options: The options used to fetch the file.\n   *\n   * @returns A promise which resolves with the file content.\n   *\n   * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/contents) and validates the response model.\n   */\n  async get(\n    localPath: string,\n    options?: Contents.IFetchOptions\n  ): Promise<Contents.IModel> {\n    let url = this._getUrl(localPath);\n    if (options) {\n      // The notebook type cannot take an format option.\n      if (options.type === 'notebook') {\n        delete options['format'];\n      }\n      const content = options.content ? '1' : '0';\n      const hash = options.hash ? '1' : '0';\n      const params: PartialJSONObject = { ...options, content, hash };\n      url += URLExt.objectToQueryString(params);\n    }\n\n    const settings = this.serverSettings;\n    const response = await ServerConnection.makeRequest(url, {}, settings);\n    if (response.status !== 200) {\n      const err = await ServerConnection.ResponseError.create(response);\n      throw err;\n    }\n    const data = await response.json();\n    validate.validateContentsModel(data);\n    return data;\n  }\n\n  /**\n   * Get an encoded download url given a file path.\n   *\n   * @param localPath - An absolute POSIX file path on the server.\n   *\n   * #### Notes\n   * It is expected that the path contains no relative paths.\n   *\n   * The returned URL may include a query parameter.\n   */\n  getDownloadUrl(localPath: string): Promise<string> {\n    const baseUrl = this.serverSettings.baseUrl;\n    let url = URLExt.join(baseUrl, FILES_URL, URLExt.encodeParts(localPath));\n    let cookie = '';\n    try {\n      cookie = document.cookie;\n    } catch (e) {\n      // e.g. SecurityError in case of CSP Sandbox\n    }\n    const xsrfTokenMatch = cookie.match('\\\\b_xsrf=([^;]*)\\\\b');\n    if (xsrfTokenMatch) {\n      const fullUrl = new URL(url);\n      fullUrl.searchParams.append('_xsrf', xsrfTokenMatch[1]);\n      url = fullUrl.toString();\n    }\n    return Promise.resolve(url);\n  }\n\n  /**\n   * Create a new untitled file or directory in the specified directory path.\n   *\n   * @param options: The options used to create the file.\n   *\n   * @returns A promise which resolves with the created file content when the\n   *    file is created.\n   *\n   * #### Notes\n   * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/contents) and validates the response model.\n   */\n  async newUntitled(\n    options: Contents.ICreateOptions = {}\n  ): Promise<Contents.IModel> {\n    let body = '{}';\n    if (options) {\n      if (options.ext) {\n        options.ext = Private.normalizeExtension(options.ext);\n      }\n      body = JSON.stringify(options);\n    }\n\n    const settings = this.serverSettings;\n    const url = this._getUrl(options.path ?? '');\n    const init = {\n      method: 'POST',\n      body\n    };\n    const response = await ServerConnection.makeRequest(url, init, settings);\n    if (response.status !== 201) {\n      const err = await ServerConnection.ResponseError.create(response);\n      throw err;\n    }\n    const data = await response.json();\n    validate.validateContentsModel(data);\n    this._fileChanged.emit({\n      type: 'new',\n      oldValue: null,\n      newValue: data\n    });\n    return data;\n  }\n\n  /**\n   * Delete a file.\n   *\n   * @param localPath - The path to the file.\n   *\n   * @returns A promise which resolves when the file is deleted.\n   *\n   * #### Notes\n   * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/contents).\n   */\n  async delete(localPath: string): Promise<void> {\n    const url = this._getUrl(localPath);\n    const settings = this.serverSettings;\n    const init = { method: 'DELETE' };\n    const response = await ServerConnection.makeRequest(url, init, settings);\n    // TODO: update IPEP27 to specify errors more precisely, so\n    // that error types can be detected here with certainty.\n    if (response.status !== 204) {\n      const err = await ServerConnection.ResponseError.create(response);\n      throw err;\n    }\n    this._fileChanged.emit({\n      type: 'delete',\n      oldValue: { path: localPath },\n      newValue: null\n    });\n  }\n\n  /**\n   * Rename a file or directory.\n   *\n   * @param oldLocalPath - The original file path.\n   *\n   * @param newLocalPath - The new file path.\n   *\n   * @returns A promise which resolves with the new file contents model when\n   *   the file is renamed.\n   *\n   * #### Notes\n   * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/contents) and validates the response model.\n   */\n  async rename(\n    oldLocalPath: string,\n    newLocalPath: string\n  ): Promise<Contents.IModel> {\n    const settings = this.serverSettings;\n    const url = this._getUrl(oldLocalPath);\n    const init = {\n      method: 'PATCH',\n      body: JSON.stringify({ path: newLocalPath })\n    };\n    const response = await ServerConnection.makeRequest(url, init, settings);\n    if (response.status !== 200) {\n      const err = await ServerConnection.ResponseError.create(response);\n      throw err;\n    }\n    const data = await response.json();\n    validate.validateContentsModel(data);\n    this._fileChanged.emit({\n      type: 'rename',\n      oldValue: { path: oldLocalPath },\n      newValue: data\n    });\n    return data;\n  }\n\n  /**\n   * Save a file.\n   *\n   * @param localPath - The desired file path.\n   *\n   * @param options - Optional overrides to the model.\n   *\n   * @returns A promise which resolves with the file content model when the\n   *   file is saved.\n   *\n   * #### Notes\n   * Ensure that `model.content` is populated for the file.\n   *\n   * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/contents) and validates the response model.\n   */\n  async save(\n    localPath: string,\n    options: Partial<Contents.IModel> = {}\n  ): Promise<Contents.IModel> {\n    const settings = this.serverSettings;\n    const url = this._getUrl(localPath);\n    const init = {\n      method: 'PUT',\n      body: JSON.stringify(options)\n    };\n    const response = await ServerConnection.makeRequest(url, init, settings);\n    // will return 200 for an existing file and 201 for a new file\n    if (response.status !== 200 && response.status !== 201) {\n      const err = await ServerConnection.ResponseError.create(response);\n      throw err;\n    }\n    const data = await response.json();\n    validate.validateContentsModel(data);\n    this._fileChanged.emit({\n      type: 'save',\n      oldValue: null,\n      newValue: data\n    });\n    return data;\n  }\n\n  /**\n   * Copy a file into a given directory.\n   *\n   * @param localPath - The original file path.\n   *\n   * @param toDir - The destination directory path.\n   *\n   * @returns A promise which resolves with the new contents model when the\n   *  file is copied.\n   *\n   * #### Notes\n   * The server will select the name of the copied file.\n   *\n   * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/contents) and validates the response model.\n   */\n  async copy(fromFile: string, toDir: string): Promise<Contents.IModel> {\n    const settings = this.serverSettings;\n    const url = this._getUrl(toDir);\n    const init = {\n      method: 'POST',\n      body: JSON.stringify({ copy_from: fromFile })\n    };\n    const response = await ServerConnection.makeRequest(url, init, settings);\n    if (response.status !== 201) {\n      const err = await ServerConnection.ResponseError.create(response);\n      throw err;\n    }\n    const data = await response.json();\n    validate.validateContentsModel(data);\n    this._fileChanged.emit({\n      type: 'new',\n      oldValue: null,\n      newValue: data\n    });\n    return data;\n  }\n\n  /**\n   * Create a checkpoint for a file.\n   *\n   * @param localPath - The path of the file.\n   *\n   * @returns A promise which resolves with the new checkpoint model when the\n   *   checkpoint is created.\n   *\n   * #### Notes\n   * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/contents) and validates the response model.\n   */\n  async createCheckpoint(\n    localPath: string\n  ): Promise<Contents.ICheckpointModel> {\n    const url = this._getUrl(localPath, 'checkpoints');\n    const init = { method: 'POST' };\n    const response = await ServerConnection.makeRequest(\n      url,\n      init,\n      this.serverSettings\n    );\n    if (response.status !== 201) {\n      const err = await ServerConnection.ResponseError.create(response);\n      throw err;\n    }\n    const data = await response.json();\n    validate.validateCheckpointModel(data);\n    return data;\n  }\n\n  /**\n   * List available checkpoints for a file.\n   *\n   * @param localPath - The path of the file.\n   *\n   * @returns A promise which resolves with a list of checkpoint models for\n   *    the file.\n   *\n   * #### Notes\n   * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/contents) and validates the response model.\n   */\n  async listCheckpoints(\n    localPath: string\n  ): Promise<Contents.ICheckpointModel[]> {\n    const url = this._getUrl(localPath, 'checkpoints');\n    const response = await ServerConnection.makeRequest(\n      url,\n      {},\n      this.serverSettings\n    );\n    if (response.status !== 200) {\n      const err = await ServerConnection.ResponseError.create(response);\n      throw err;\n    }\n    const data = await response.json();\n    if (!Array.isArray(data)) {\n      throw new Error('Invalid Checkpoint list');\n    }\n    for (let i = 0; i < data.length; i++) {\n      validate.validateCheckpointModel(data[i]);\n    }\n    return data;\n  }\n\n  /**\n   * Restore a file to a known checkpoint state.\n   *\n   * @param localPath - The path of the file.\n   *\n   * @param checkpointID - The id of the checkpoint to restore.\n   *\n   * @returns A promise which resolves when the checkpoint is restored.\n   *\n   * #### Notes\n   * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/contents).\n   */\n  async restoreCheckpoint(\n    localPath: string,\n    checkpointID: string\n  ): Promise<void> {\n    const url = this._getUrl(localPath, 'checkpoints', checkpointID);\n    const init = { method: 'POST' };\n    const response = await ServerConnection.makeRequest(\n      url,\n      init,\n      this.serverSettings\n    );\n    if (response.status !== 204) {\n      const err = await ServerConnection.ResponseError.create(response);\n      throw err;\n    }\n  }\n\n  /**\n   * Delete a checkpoint for a file.\n   *\n   * @param localPath - The path of the file.\n   *\n   * @param checkpointID - The id of the checkpoint to delete.\n   *\n   * @returns A promise which resolves when the checkpoint is deleted.\n   *\n   * #### Notes\n   * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/contents).\n   */\n  async deleteCheckpoint(\n    localPath: string,\n    checkpointID: string\n  ): Promise<void> {\n    const url = this._getUrl(localPath, 'checkpoints', checkpointID);\n    const init = { method: 'DELETE' };\n    const response = await ServerConnection.makeRequest(\n      url,\n      init,\n      this.serverSettings\n    );\n    if (response.status !== 204) {\n      const err = await ServerConnection.ResponseError.create(response);\n      throw err;\n    }\n  }\n\n  /**\n   * Get a REST url for a file given a path.\n   */\n  private _getUrl(...args: string[]): string {\n    const parts = args.map(path => URLExt.encodeParts(path));\n    const baseUrl = this.serverSettings.baseUrl;\n    return URLExt.join(baseUrl, this._apiEndpoint, ...parts);\n  }\n\n  private _apiEndpoint: string;\n  private _isDisposed = false;\n  private _fileChanged = new Signal<this, Contents.IChangedArgs>(this);\n}\n\n/**\n * A namespace for ContentsManager statics.\n */\nexport namespace ContentsManager {\n  /**\n   * The options used to initialize a contents manager.\n   */\n  export interface IOptions {\n    /**\n     * The default drive backend for the contents manager.\n     */\n    defaultDrive?: Contents.IDrive;\n\n    /**\n     * The server settings associated with the manager.\n     */\n    serverSettings?: ServerConnection.ISettings;\n  }\n}\n\n/**\n * A namespace for Drive statics.\n */\nexport namespace Drive {\n  /**\n   * The options used to initialize a `Drive`.\n   */\n  export interface IOptions {\n    /**\n     * The name for the `Drive`, which is used in file\n     * paths to disambiguate it from other drives.\n     */\n    name?: string;\n\n    /**\n     * The server settings for the server.\n     */\n    serverSettings?: ServerConnection.ISettings;\n\n    /**\n     * A REST endpoint for drive requests.\n     * If not given, defaults to the Jupyter\n     * REST API given by [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/contents).\n     */\n    apiEndpoint?: string;\n  }\n}\n\n/**\n * A namespace for module private data.\n */\nnamespace Private {\n  /**\n   * Normalize a file extension to be of the type `'.foo'`.\n   *\n   * Adds a leading dot if not present and converts to lower case.\n   */\n  export function normalizeExtension(extension: string): string {\n    if (extension.length > 0 && extension.indexOf('.') !== 0) {\n      extension = `.${extension}`;\n    }\n    return extension;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { JSONExt, PromiseDelegate } from '@lumino/coreutils';\n\nimport { IObservableDisposable } from '@lumino/disposable';\n\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { IPoll } from './index';\n\n/**\n * A class that wraps an asynchronous function to poll at a regular interval\n * with exponential increases to the interval length if the poll fails.\n *\n * @typeparam T - The resolved type of the factory's promises.\n * Defaults to `any`.\n *\n * @typeparam U - The rejected type of the factory's promises.\n * Defaults to `any`.\n *\n * @typeparam V - An optional type to extend the phases supported by a poll.\n * Defaults to `standby`, which already exists in the `Phase` type.\n */\nexport class Poll<T = any, U = any, V extends string = 'standby'>\n  implements IObservableDisposable, IPoll<T, U, V>\n{\n  /**\n   * Instantiate a new poll with exponential backoff in case of failure.\n   *\n   * @param options - The poll instantiation options.\n   */\n  constructor(options: Poll.IOptions<T, U, V>) {\n    this._factory = options.factory;\n    this._linger = options.linger ?? Private.DEFAULT_LINGER;\n    this._standby = options.standby || Private.DEFAULT_STANDBY;\n    this._state = { ...Private.DEFAULT_STATE, timestamp: new Date().getTime() };\n\n    // Normalize poll frequency `max` to be the greater of\n    // default `max`, `options.frequency.max`, or `options.frequency.interval`.\n    const frequency = options.frequency || {};\n    const max = Math.max(\n      frequency.interval || 0,\n      frequency.max || 0,\n      Private.DEFAULT_FREQUENCY.max\n    );\n    this.frequency = { ...Private.DEFAULT_FREQUENCY, ...frequency, ...{ max } };\n\n    this.name = options.name || Private.DEFAULT_NAME;\n\n    if ('auto' in options ? options.auto : true) {\n      setTimeout(() => this.start());\n    }\n  }\n\n  /**\n   * The name of the poll.\n   */\n  readonly name: string;\n\n  /**\n   * A signal emitted when the poll is disposed.\n   */\n  get disposed(): ISignal<this, void> {\n    return this._disposed;\n  }\n\n  /**\n   * The polling frequency parameters.\n   */\n  get frequency(): IPoll.Frequency {\n    return this._frequency;\n  }\n  set frequency(frequency: IPoll.Frequency) {\n    if (this.isDisposed || JSONExt.deepEqual(frequency, this.frequency || {})) {\n      return;\n    }\n\n    let { backoff, interval, max } = frequency;\n\n    interval = Math.round(interval);\n    max = Math.round(max);\n\n    if (typeof backoff === 'number' && backoff < 1) {\n      throw new Error('Poll backoff growth factor must be at least 1');\n    }\n\n    if ((interval < 0 || interval > max) && interval !== Poll.NEVER) {\n      throw new Error('Poll interval must be between 0 and max');\n    }\n\n    if (max > Poll.MAX_INTERVAL && max !== Poll.NEVER) {\n      throw new Error(`Max interval must be less than ${Poll.MAX_INTERVAL}`);\n    }\n\n    this._frequency = { backoff, interval, max };\n  }\n\n  /**\n   * Whether the poll is disposed.\n   */\n  get isDisposed(): boolean {\n    return this.state.phase === 'disposed';\n  }\n\n  /**\n   * Indicates when the poll switches to standby.\n   */\n  get standby(): Poll.Standby | (() => boolean | Poll.Standby) {\n    return this._standby;\n  }\n  set standby(standby: Poll.Standby | (() => boolean | Poll.Standby)) {\n    if (this.isDisposed || this.standby === standby) {\n      return;\n    }\n\n    this._standby = standby;\n  }\n\n  /**\n   * The poll state, which is the content of the current poll tick.\n   */\n  get state(): IPoll.State<T, U, V> {\n    return this._state;\n  }\n\n  /**\n   * A promise that resolves when the poll next ticks.\n   */\n  get tick(): Promise<this> {\n    return this._tick.promise;\n  }\n\n  /**\n   * A signal emitted when the poll ticks and fires off a new request.\n   */\n  get ticked(): ISignal<this, IPoll.State<T, U, V>> {\n    return this._ticked;\n  }\n\n  /**\n   * Return an async iterator that yields every tick.\n   */\n  async *[Symbol.asyncIterator](): AsyncIterableIterator<IPoll.State<T, U, V>> {\n    while (!this.isDisposed) {\n      yield this.state;\n      await this.tick.catch(() => undefined);\n    }\n  }\n\n  /**\n   * Dispose the poll.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n\n    this._state = {\n      ...Private.DISPOSED_STATE,\n      timestamp: new Date().getTime()\n    };\n    this._tick.promise.catch(_ => undefined);\n    this._tick.reject(new Error(`Poll (${this.name}) is disposed.`));\n    this._disposed.emit(undefined);\n    Signal.clearData(this);\n  }\n\n  /**\n   * Refreshes the poll. Schedules `refreshed` tick if necessary.\n   *\n   * @returns A promise that resolves after tick is scheduled and never rejects.\n   *\n   * #### Notes\n   * The returned promise resolves after the tick is scheduled, but before\n   * the polling action is run. To wait until after the poll action executes,\n   * await the `poll.tick` promise: `await poll.refresh(); await poll.tick;`\n   */\n  refresh(): Promise<void> {\n    return this.schedule({\n      cancel: ({ phase }) => phase === 'refreshed',\n      interval: Poll.IMMEDIATE,\n      phase: 'refreshed'\n    });\n  }\n\n  /**\n   * Schedule the next poll tick.\n   *\n   * @param next - The next poll state data to schedule. Defaults to standby.\n   *\n   * @param next.cancel - Cancels state transition if function returns `true`.\n   *\n   * @returns A promise that resolves when the next poll state is active.\n   *\n   * #### Notes\n   * This method is not meant to be invoked by user code typically. It is public\n   * to allow poll instances to be composed into classes that schedule ticks.\n   */\n  async schedule(\n    next: Partial<\n      IPoll.State<T, U, V> & { cancel: (last: IPoll.State<T, U, V>) => boolean }\n    > = {}\n  ): Promise<void> {\n    if (this.isDisposed) {\n      return;\n    }\n\n    // Check if the phase transition should be canceled.\n    if (next.cancel && next.cancel(this.state)) {\n      return;\n    }\n\n    // Update poll state.\n    const pending = this._tick;\n    const scheduled = new PromiseDelegate<this>();\n    const state = {\n      interval: this.frequency.interval,\n      payload: null,\n      phase: 'standby',\n      timestamp: new Date().getTime(),\n      ...next\n    } as IPoll.State<T, U, V>;\n    this._state = state;\n    this._tick = scheduled;\n\n    // Clear the schedule if possible.\n    clearTimeout(this._timeout);\n\n    // Emit ticked signal, resolve pending promise, and await its settlement.\n    this._ticked.emit(this.state);\n    pending.resolve(this);\n    await pending.promise;\n\n    if (state.interval === Poll.NEVER) {\n      this._timeout = undefined;\n      return;\n    }\n\n    // Schedule next execution and cache its timeout handle.\n    const execute = () => {\n      if (this.isDisposed || this.tick !== scheduled.promise) {\n        return;\n      }\n\n      this._execute();\n    };\n\n    // Cache the handle in case it needs to be unscheduled.\n    this._timeout = setTimeout(execute, state.interval);\n  }\n\n  /**\n   * Starts the poll. Schedules `started` tick if necessary.\n   *\n   * @returns A promise that resolves after tick is scheduled and never rejects.\n   */\n  start(): Promise<void> {\n    return this.schedule({\n      cancel: ({ phase }) =>\n        phase !== 'constructed' && phase !== 'standby' && phase !== 'stopped',\n      interval: Poll.IMMEDIATE,\n      phase: 'started'\n    });\n  }\n\n  /**\n   * Stops the poll. Schedules `stopped` tick if necessary.\n   *\n   * @returns A promise that resolves after tick is scheduled and never rejects.\n   */\n  stop(): Promise<void> {\n    return this.schedule({\n      cancel: ({ phase }) => phase === 'stopped',\n      interval: Poll.NEVER,\n      phase: 'stopped'\n    });\n  }\n\n  /**\n   * Whether the poll is hidden.\n   *\n   * #### Notes\n   * This property is only relevant in a browser context.\n   */\n  protected get hidden(): boolean {\n    return Private.hidden;\n  }\n\n  /**\n   * Execute a new poll factory promise or stand by if necessary.\n   */\n  private _execute(): void {\n    let standby =\n      typeof this.standby === 'function' ? this.standby() : this.standby;\n\n    // Check if execution should proceed, linger, or stand by.\n    if (standby === 'never') {\n      standby = false;\n    } else if (standby === 'when-hidden') {\n      if (this.hidden) {\n        standby = ++this._lingered > this._linger;\n      } else {\n        this._lingered = 0;\n        standby = false;\n      }\n    }\n\n    // If in standby mode schedule next tick without calling the factory.\n    if (standby) {\n      void this.schedule();\n      return;\n    }\n\n    const pending = this.tick;\n\n    this._factory(this.state)\n      .then((resolved: T) => {\n        if (this.isDisposed || this.tick !== pending) {\n          return;\n        }\n\n        void this.schedule({\n          payload: resolved,\n          phase: this.state.phase === 'rejected' ? 'reconnected' : 'resolved'\n        });\n      })\n      .catch((rejected: U) => {\n        if (this.isDisposed || this.tick !== pending) {\n          return;\n        }\n\n        void this.schedule({\n          interval: Private.sleep(this.frequency, this.state),\n          payload: rejected,\n          phase: 'rejected'\n        });\n      });\n  }\n\n  private _disposed = new Signal<this, void>(this);\n  private _factory: Poll.Factory<T, U, V>;\n  private _frequency: IPoll.Frequency;\n  private _linger: number;\n  private _lingered = 0;\n  private _standby: Poll.Standby | (() => boolean | Poll.Standby);\n  private _state: IPoll.State<T, U, V>;\n  private _tick = new PromiseDelegate<this>();\n  private _ticked = new Signal<this, IPoll.State<T, U, V>>(this);\n  private _timeout: ReturnType<typeof setTimeout> | undefined;\n}\n\n/**\n * A namespace for `Poll` types, interfaces, and statics.\n */\nexport namespace Poll {\n  /**\n   * A promise factory that returns an individual poll request.\n   *\n   * @typeparam T - The resolved type of the factory's promises.\n   *\n   * @typeparam U - The rejected type of the factory's promises.\n   *\n   * @typeparam V - The type to extend the phases supported by a poll.\n   */\n  export type Factory<T, U, V extends string> = (\n    state: IPoll.State<T, U, V>\n  ) => Promise<T>;\n\n  /**\n   * Indicates when the poll switches to standby.\n   */\n  export type Standby = 'never' | 'when-hidden';\n\n  /**\n   * Instantiation options for polls.\n   *\n   * @typeparam T - The resolved type of the factory's promises.\n   *\n   * @typeparam U - The rejected type of the factory's promises.\n   *\n   * @typeparam V - The type to extend the phases supported by a poll.\n   */\n  export interface IOptions<T, U, V extends string> {\n    /**\n     * Whether to begin polling automatically; defaults to `true`.\n     */\n    auto?: boolean;\n\n    /**\n     * A factory function that is passed a poll tick and returns a poll promise.\n     */\n    factory: Factory<T, U, V>;\n\n    /**\n     * The number of ticks to linger if poll switches to standby `when-hidden`.\n     * Defaults to `1`.\n     */\n    linger?: number;\n\n    /**\n     * The polling frequency parameters.\n     */\n    frequency?: Partial<IPoll.Frequency>;\n\n    /**\n     * The name of the poll.\n     * Defaults to `'unknown'`.\n     */\n    name?: string;\n\n    /**\n     * Indicates when the poll switches to standby or a function that returns\n     * a boolean or a `Poll.Standby` value to indicate whether to stand by.\n     * Defaults to `'when-hidden'`.\n     *\n     * #### Notes\n     * If a function is passed in, for any given context, it should be\n     * idempotent and safe to call multiple times. It will be called before each\n     * tick execution, but may be called by clients as well.\n     */\n    standby?: Standby | (() => boolean | Standby);\n  }\n  /**\n   * An interval value in ms that indicates the poll should tick immediately.\n   */\n  export const IMMEDIATE = 0;\n\n  /**\n   * Delays are 32-bit integers in many browsers so intervals need to be capped.\n   *\n   * #### Notes\n   * https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Maximum_delay_value\n   */\n  export const MAX_INTERVAL = 2147483647;\n\n  /**\n   * An interval value that indicates the poll should never tick.\n   */\n  export const NEVER = Infinity;\n}\n\n/**\n * A namespace for private module data.\n */\nnamespace Private {\n  /**\n   * The default backoff growth rate if `backoff` is `true`.\n   */\n  export const DEFAULT_BACKOFF = 3;\n\n  /**\n   * The default polling frequency.\n   */\n  export const DEFAULT_FREQUENCY: IPoll.Frequency = {\n    backoff: true,\n    interval: 1000,\n    max: 30 * 1000\n  };\n\n  /**\n   * The default number of times to `linger` when a poll is hidden.\n   */\n  export const DEFAULT_LINGER = 1;\n\n  /**\n   * The default poll name.\n   */\n  export const DEFAULT_NAME = 'unknown';\n\n  /**\n   * The default poll standby behavior.\n   */\n  export const DEFAULT_STANDBY: Poll.Standby = 'when-hidden';\n\n  /**\n   * The first poll tick state's default values superseded in constructor.\n   */\n  export const DEFAULT_STATE: IPoll.State<any, any, any> = {\n    interval: Poll.NEVER,\n    payload: null,\n    phase: 'constructed',\n    timestamp: new Date(0).getTime()\n  };\n\n  /**\n   * The disposed tick state values.\n   */\n  export const DISPOSED_STATE: IPoll.State<any, any, any> = {\n    interval: Poll.NEVER,\n    payload: null,\n    phase: 'disposed',\n    timestamp: new Date(0).getTime()\n  };\n\n  /**\n   * Returns the number of milliseconds to sleep before the next tick.\n   *\n   * @param frequency - The poll's base frequency.\n   * @param last - The poll's last tick.\n   */\n  export function sleep(\n    frequency: IPoll.Frequency,\n    last: IPoll.State<any, any, any>\n  ): number {\n    const { backoff, interval, max } = frequency;\n\n    if (interval === Poll.NEVER) {\n      return interval;\n    }\n\n    const growth =\n      backoff === true ? DEFAULT_BACKOFF : backoff === false ? 1 : backoff;\n    const random = getRandomIntInclusive(interval, last.interval * growth);\n\n    return Math.min(max, random);\n  }\n\n  /**\n   * Keep track of whether the document is hidden. This flag is only relevant in\n   * a browser context.\n   *\n   * Listen to `visibilitychange` event to set the `hidden` flag.\n   *\n   * Listening to `pagehide` is also necessary because Safari support for\n   * `visibilitychange` events is partial, cf.\n   * https://developer.mozilla.org/docs/Web/API/Document/visibilitychange_event\n   */\n  export let hidden = (() => {\n    if (typeof document === 'undefined') {\n      return false;\n    }\n    document.addEventListener('visibilitychange', () => {\n      hidden = document.visibilityState === 'hidden';\n    });\n    document.addEventListener('pagehide', () => {\n      hidden = document.visibilityState === 'hidden';\n    });\n    return document.visibilityState === 'hidden';\n  })();\n\n  /**\n   * Get a random integer between min and max, inclusive of both.\n   *\n   * #### Notes\n   * From\n   * https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Math/random#Getting_a_random_integer_between_two_values_inclusive\n   *\n   * From the MDN page: It might be tempting to use Math.round() to accomplish\n   * that, but doing so would cause your random numbers to follow a non-uniform\n   * distribution, which may not be acceptable for your needs.\n   */\n  function getRandomIntInclusive(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { PromiseDelegate } from '@lumino/coreutils';\n\nimport { IRateLimiter } from './index';\n\nimport { Poll } from './poll';\n\n/**\n * A base class to implement rate limiters with different invocation strategies.\n *\n * @typeparam T - The resolved type of the underlying function.\n *\n * @typeparam U - The rejected type of the underlying function.\n *\n * @typeparam V - Arguments for the underlying function.\n */\nexport abstract class RateLimiter<T, U, V extends any[]>\n  implements IRateLimiter<T, U, V>\n{\n  /**\n   * Instantiate a rate limiter.\n   *\n   * @param fn - The function to rate limit.\n   *\n   * @param limit - The rate limit; defaults to 500ms.\n   */\n  constructor(fn: (...args: V) => T | Promise<T>, limit = 500) {\n    this.limit = limit;\n    this.poll = new Poll({\n      auto: false,\n      factory: async () => {\n        const { args } = this;\n        this.args = undefined;\n        return fn(...args!);\n      },\n      frequency: { backoff: false, interval: Poll.NEVER, max: Poll.NEVER },\n      standby: 'never'\n    });\n    this.payload = new PromiseDelegate();\n    this.poll.ticked.connect((_, state) => {\n      const { payload } = this;\n\n      if (state.phase === 'resolved') {\n        this.payload = new PromiseDelegate();\n        payload!.resolve(state.payload as T);\n        return;\n      }\n\n      if (state.phase === 'rejected' || state.phase === 'stopped') {\n        this.payload = new PromiseDelegate();\n        payload!.promise.catch(_ => undefined);\n        payload!.reject(state.payload as U);\n        return;\n      }\n    }, this);\n  }\n\n  /**\n   * Whether the rate limiter is disposed.\n   */\n  get isDisposed(): boolean {\n    return this.payload === null;\n  }\n\n  /**\n   * Disposes the rate limiter.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.args = undefined;\n    this.payload = null;\n    this.poll.dispose();\n  }\n\n  /**\n   * The rate limit in milliseconds.\n   */\n  readonly limit: number;\n\n  /**\n   * Invoke the rate limited function.\n   */\n  abstract invoke(...args: V): Promise<T>;\n\n  /**\n   * Stop the function if it is mid-flight.\n   */\n  async stop(): Promise<void> {\n    return this.poll.stop();\n  }\n\n  /**\n   * Arguments for the underlying function.\n   */\n  protected args: V | undefined = undefined;\n\n  /**\n   * A promise that resolves on each successful invocation.\n   */\n  protected payload: PromiseDelegate<T> | null = null;\n\n  /**\n   * The underlying poll instance used by the rate limiter.\n   */\n  protected poll: Poll<T, U, 'invoked'>;\n}\n\n/**\n * Wraps and debounces a function that can be called multiple times and only\n * executes the underlying function one `interval` after the last invocation.\n *\n * @typeparam T - The resolved type of the underlying function. Defaults to any.\n *\n * @typeparam U - The rejected type of the underlying function. Defaults to any.\n *\n * @typeparam V - Arguments for the underlying function. Defaults to any[].\n */\nexport class Debouncer<\n  T = any,\n  U = any,\n  V extends any[] = any[]\n> extends RateLimiter<T, U, V> {\n  /**\n   * Invokes the function and only executes after rate limit has elapsed.\n   * Each invocation resets the timer.\n   */\n  invoke(...args: V): Promise<T> {\n    this.args = args;\n    void this.poll.schedule({ interval: this.limit, phase: 'invoked' });\n    return this.payload!.promise;\n  }\n}\n\n/**\n * Wraps and throttles a function that can be called multiple times and only\n * executes the underlying function once per `interval`.\n *\n * @typeparam T - The resolved type of the underlying function. Defaults to any.\n *\n * @typeparam U - The rejected type of the underlying function. Defaults to any.\n *\n * @typeparam V - Arguments for the underlying function. Defaults to any[].\n */\nexport class Throttler<\n  T = any,\n  U = any,\n  V extends any[] = any[]\n> extends RateLimiter<T, U, V> {\n  /**\n   * Instantiate a throttler.\n   *\n   * @param fn - The function being throttled.\n   *\n   * @param options - Throttling configuration or throttling limit in ms.\n   *\n   * #### Notes\n   * The `edge` defaults to `leading`; the `limit` defaults to `500`.\n   */\n  constructor(\n    fn: (...args: V) => T | Promise<T>,\n    options?: Throttler.IOptions | number\n  ) {\n    super(fn, typeof options === 'number' ? options : options && options.limit);\n    if (typeof options !== 'number' && options && options.edge === 'trailing') {\n      this._trailing = true;\n    }\n    this._interval = this._trailing ? this.limit : Poll.IMMEDIATE;\n  }\n\n  /**\n   * Throttles function invocations if one is currently in flight.\n   */\n  invoke(...args: V): Promise<T> {\n    const idle = this.poll.state.phase !== 'invoked';\n    if (idle || this._trailing) {\n      this.args = args;\n    }\n    if (idle) {\n      void this.poll.schedule({ interval: this._interval, phase: 'invoked' });\n    }\n    return this.payload!.promise;\n  }\n\n  private _interval: number;\n  private _trailing = false;\n}\n\n/**\n * A namespace for `Throttler` interfaces.\n */\nexport namespace Throttler {\n  /**\n   * Instantiation options for a `Throttler`.\n   */\n  export interface IOptions {\n    /**\n     * The throttling limit; defaults to 500ms.\n     */\n    limit?: number;\n\n    /**\n     * Whether to invoke at the leading or trailing edge of throttle cycle.\n     * Defaults to `leading`.\n     */\n    edge?: 'leading' | 'trailing';\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { JSONObject, ReadonlyJSONObject } from '@lumino/coreutils';\nimport { IDisposable } from '@lumino/disposable';\nimport { Poll } from '@lumino/polling';\nimport { IStream, Signal, Stream } from '@lumino/signaling';\nimport { ServerConnection } from '../serverconnection';\n\n/**\n * The url for the jupyter-server events service.\n */\nconst SERVICE_EVENTS_URL = 'api/events';\n\n/**\n * The events API service manager.\n */\nexport class EventManager implements Event.IManager {\n  /**\n   * Create a new event manager.\n   */\n  constructor(options: EventManager.IOptions = {}) {\n    this.serverSettings =\n      options.serverSettings ?? ServerConnection.makeSettings();\n\n    // If subscription fails, the poll attempts to reconnect and backs off.\n    this._poll = new Poll({ factory: () => this._subscribe() });\n    this._stream = new Stream(this);\n\n    // Subscribe to the events socket.\n    void this._poll.start();\n  }\n\n  /**\n   * The server settings used to make API requests.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n\n  /**\n   * Whether the event manager is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._poll.isDisposed;\n  }\n\n  /**\n   * An event stream that emits and yields each new event.\n   */\n  get stream(): Event.Stream {\n    return this._stream;\n  }\n\n  /**\n   * Dispose the event manager.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n\n    // Clean up poll.\n    this._poll.dispose();\n\n    // Clean up socket.\n    const socket = this._socket;\n    if (socket) {\n      this._socket = null;\n      socket.onopen = () => undefined;\n      socket.onerror = () => undefined;\n      socket.onmessage = () => undefined;\n      socket.onclose = () => undefined;\n      socket.close();\n    }\n\n    // Clean up stream.\n    Signal.clearData(this);\n    this._stream.stop();\n  }\n\n  /**\n   * Post an event request to be emitted by the event bus.\n   */\n  async emit(event: Event.Request): Promise<void> {\n    const { serverSettings } = this;\n    const { baseUrl, token } = serverSettings;\n    const { makeRequest, ResponseError } = ServerConnection;\n    const url =\n      URLExt.join(baseUrl, SERVICE_EVENTS_URL) +\n      (token ? `?token=${token}` : '');\n    const init = { body: JSON.stringify(event), method: 'POST' };\n    const response = await makeRequest(url, init, serverSettings);\n\n    if (response.status !== 204) {\n      throw new ResponseError(response);\n    }\n  }\n\n  /**\n   * Subscribe to event bus emissions.\n   */\n  private _subscribe(): Promise<void> {\n    return new Promise<void>((_, reject) => {\n      if (this.isDisposed) {\n        return;\n      }\n\n      const { token, WebSocket, wsUrl } = this.serverSettings;\n      const url =\n        URLExt.join(wsUrl, SERVICE_EVENTS_URL, 'subscribe') +\n        (token ? `?token=${encodeURIComponent(token)}` : '');\n      const socket = (this._socket = new WebSocket(url));\n      const stream = this._stream;\n\n      socket.onclose = () => reject(new Error('EventManager socket closed'));\n      socket.onmessage = msg => msg.data && stream.emit(JSON.parse(msg.data));\n    });\n  }\n\n  private _poll: Poll;\n  private _socket: WebSocket | null = null;\n  private _stream: Stream<this, Event.Emission>;\n}\n\n/**\n * A namespace for `EventManager` statics.\n */\nexport namespace EventManager {\n  /**\n   * The instantiation options for an event manager.\n   */\n  export interface IOptions {\n    /**\n     * The server settings used to make API requests.\n     */\n    serverSettings?: ServerConnection.ISettings;\n  }\n}\n\n/**\n * A namespace for event API interfaces.\n */\nexport namespace Event {\n  /**\n   * The event emission type.\n   */\n  export type Emission = ReadonlyJSONObject & {\n    schema_id: string;\n  };\n\n  /**\n   * The event request type.\n   */\n  export type Request = {\n    data: JSONObject;\n    schema_id: string;\n    version: string;\n  };\n\n  /**\n   * An event stream with the characteristics of a signal and an async iterator.\n   */\n  export type Stream = IStream<IManager, Emission>;\n\n  /**\n   * The interface for the event bus front-end.\n   */\n  export interface IManager extends IDisposable {\n    /**\n     * The server settings used to make API requests.\n     */\n    readonly serverSettings: ServerConnection.ISettings;\n    /**\n     * An event stream that emits and yields each new event.\n     */\n    readonly stream: Event.Stream;\n    /**\n     * Post an event request to be emitted by the event bus.\n     */\n    emit(event: Event.Request): Promise<void>;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport * as KernelMessage from './messages';\n\nimport { IModel } from './restapi';\n\nimport { validateProperty } from '../validate';\n\n/**\n * Required fields for `IKernelHeader`.\n */\nconst HEADER_FIELDS = ['username', 'version', 'session', 'msg_id', 'msg_type'];\n\n/**\n * Required fields and types for contents of various types of `kernel.IMessage`\n * messages on the iopub channel.\n */\nconst IOPUB_CONTENT_FIELDS: { [key: string]: any } = {\n  stream: { name: 'string', text: 'string' },\n  display_data: { data: 'object', metadata: 'object' },\n  execute_input: { code: 'string', execution_count: 'number' },\n  execute_result: {\n    execution_count: 'number',\n    data: 'object',\n    metadata: 'object'\n  },\n  error: { ename: 'string', evalue: 'string', traceback: 'object' },\n  status: {\n    execution_state: [\n      'string',\n      ['starting', 'idle', 'busy', 'restarting', 'dead']\n    ]\n  },\n  clear_output: { wait: 'boolean' },\n  comm_open: { comm_id: 'string', target_name: 'string', data: 'object' },\n  comm_msg: { comm_id: 'string', data: 'object' },\n  comm_close: { comm_id: 'string' },\n  shutdown_reply: { restart: 'boolean' } // Emitted by the IPython kernel.\n};\n\n/**\n * Validate the header of a kernel message.\n */\nfunction validateHeader(\n  header: KernelMessage.IHeader\n): asserts header is KernelMessage.IHeader {\n  for (let i = 0; i < HEADER_FIELDS.length; i++) {\n    validateProperty(header, HEADER_FIELDS[i], 'string');\n  }\n}\n\n/**\n * Validate a kernel message object.\n */\nexport function validateMessage(\n  msg: KernelMessage.IMessage\n): asserts msg is KernelMessage.IMessage {\n  validateProperty(msg, 'metadata', 'object');\n  validateProperty(msg, 'content', 'object');\n  validateProperty(msg, 'channel', 'string');\n  validateHeader(msg.header);\n  if (msg.channel === 'iopub') {\n    validateIOPubContent(msg as KernelMessage.IIOPubMessage);\n  }\n}\n\n/**\n * Validate content an kernel message on the iopub channel.\n */\nfunction validateIOPubContent(\n  msg: KernelMessage.IIOPubMessage\n): asserts msg is KernelMessage.IIOPubMessage {\n  if (msg.channel === 'iopub') {\n    const fields = IOPUB_CONTENT_FIELDS[msg.header.msg_type];\n    // Check for unknown message type.\n    if (fields === undefined) {\n      return;\n    }\n    const names = Object.keys(fields);\n    const content = msg.content;\n    for (let i = 0; i < names.length; i++) {\n      let args = fields[names[i]];\n      if (!Array.isArray(args)) {\n        args = [args];\n      }\n      validateProperty(content, names[i], ...args);\n    }\n  }\n}\n\n/**\n * Validate a `Kernel.IModel` object.\n */\nexport function validateModel(model: IModel): asserts model is IModel {\n  validateProperty(model, 'name', 'string');\n  validateProperty(model, 'id', 'string');\n}\n\n/**\n * Validate an array of `IModel` objects.\n */\nexport function validateModels(models: IModel[]): asserts models is IModel[] {\n  if (!Array.isArray(models)) {\n    throw new Error('Invalid kernel list');\n  }\n  models.forEach(d => validateModel(d));\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { ServerConnection } from '../serverconnection';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { validateModel, validateModels } from './validate';\n\n/**\n * The kernel model provided by the server.\n *\n * #### Notes\n * See the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/kernels).\n */\nexport interface IModel {\n  /**\n   * Unique identifier of the kernel on the server.\n   */\n  readonly id: string;\n\n  /**\n   * The name of the kernel.\n   */\n  readonly name: string;\n\n  /**\n   * The kernel execution state.\n   */\n  readonly execution_state?: string;\n\n  /**\n   * The timestamp of the last activity on the kernel.\n   */\n  // eslint-disable-next-line camelcase\n  readonly last_activity?: string;\n\n  /**\n   * The number of active connections to the kernel.\n   */\n  readonly connections?: number;\n\n  /**\n   * The reason the kernel died, if applicable.\n   */\n  readonly reason?: string;\n\n  /**\n   * The traceback for a dead kernel, if applicable.\n   */\n  readonly traceback?: string;\n}\n\n/**\n * The url for the kernel service.\n */\nexport const KERNEL_SERVICE_URL = 'api/kernels';\n\n/**\n * Fetch the running kernels.\n *\n * @param settings - The optional server settings.\n *\n * @returns A promise that resolves with the list of running kernels.\n *\n * #### Notes\n * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/kernels) and validates the response model.\n *\n * The promise is fulfilled on a valid response and rejected otherwise.\n */\nexport async function listRunning(\n  settings: ServerConnection.ISettings = ServerConnection.makeSettings()\n): Promise<IModel[]> {\n  const url = URLExt.join(settings.baseUrl, KERNEL_SERVICE_URL);\n  const response = await ServerConnection.makeRequest(url, {}, settings);\n  if (response.status !== 200) {\n    const err = await ServerConnection.ResponseError.create(response);\n    throw err;\n  }\n  const data = await response.json();\n  validateModels(data);\n  return data;\n}\n\n/**\n * Start a new kernel.\n *\n * @param options - The options used to create the kernel.\n *\n * @returns A promise that resolves with a kernel connection object.\n *\n * #### Notes\n * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/kernels) and validates the response model.\n *\n * The promise is fulfilled on a valid response and rejected otherwise.\n */\nexport async function startNew(\n  options: IKernelOptions = {},\n  settings: ServerConnection.ISettings = ServerConnection.makeSettings()\n): Promise<IModel> {\n  const url = URLExt.join(settings.baseUrl, KERNEL_SERVICE_URL);\n  const init = {\n    method: 'POST',\n    body: JSON.stringify(options)\n  };\n  const response = await ServerConnection.makeRequest(url, init, settings);\n  if (response.status !== 201) {\n    const err = await ServerConnection.ResponseError.create(response);\n    throw err;\n  }\n  const data = await response.json();\n  validateModel(data);\n  return data;\n}\n\n/**\n * The options object used to initialize a kernel.\n */\nexport type IKernelOptions = Partial<Pick<IModel, 'name'>>;\n\n/**\n * Restart a kernel.\n *\n * #### Notes\n * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/kernels) and validates the response model.\n *\n * The promise is fulfilled on a valid response (and thus after a restart) and rejected otherwise.\n */\nexport async function restartKernel(\n  id: string,\n  settings: ServerConnection.ISettings = ServerConnection.makeSettings()\n): Promise<void> {\n  const url = URLExt.join(\n    settings.baseUrl,\n    KERNEL_SERVICE_URL,\n    encodeURIComponent(id),\n    'restart'\n  );\n  const init = { method: 'POST' };\n\n  const response = await ServerConnection.makeRequest(url, init, settings);\n  if (response.status !== 200) {\n    const err = await ServerConnection.ResponseError.create(response);\n    throw err;\n  }\n  const data = await response.json();\n  validateModel(data);\n}\n\n/**\n * Interrupt a kernel.\n *\n * #### Notes\n * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/kernels) and validates the response model.\n *\n * The promise is fulfilled on a valid response and rejected otherwise.\n */\nexport async function interruptKernel(\n  id: string,\n  settings: ServerConnection.ISettings = ServerConnection.makeSettings()\n): Promise<void> {\n  const url = URLExt.join(\n    settings.baseUrl,\n    KERNEL_SERVICE_URL,\n    encodeURIComponent(id),\n    'interrupt'\n  );\n  const init = { method: 'POST' };\n  const response = await ServerConnection.makeRequest(url, init, settings);\n  if (response.status !== 204) {\n    const err = await ServerConnection.ResponseError.create(response);\n    throw err;\n  }\n}\n\n/**\n * Shut down a kernel.\n *\n * @param id - The id of the running kernel.\n *\n * @param settings - The server settings for the request.\n *\n * @returns A promise that resolves when the kernel is shut down.\n *\n *\n * #### Notes\n * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/kernels) and validates the response model.\n *\n * The promise is fulfilled on a valid response and rejected otherwise.\n */\nexport async function shutdownKernel(\n  id: string,\n  settings: ServerConnection.ISettings = ServerConnection.makeSettings()\n): Promise<void> {\n  const url = URLExt.join(\n    settings.baseUrl,\n    KERNEL_SERVICE_URL,\n    encodeURIComponent(id)\n  );\n  const init = { method: 'DELETE' };\n  const response = await ServerConnection.makeRequest(url, init, settings);\n  if (response.status === 404) {\n    const msg = `The kernel \"${id}\" does not exist on the server`;\n    console.warn(msg);\n  } else if (response.status !== 204) {\n    const err = await ServerConnection.ResponseError.create(response);\n    throw err;\n  }\n}\n\n/**\n * Get a full kernel model from the server by kernel id string.\n *\n * #### Notes\n * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/kernels) and validates the response model.\n *\n * The promise is fulfilled on a valid response and rejected otherwise.\n */\nexport async function getKernelModel(\n  id: string,\n  settings: ServerConnection.ISettings = ServerConnection.makeSettings()\n): Promise<IModel | undefined> {\n  const url = URLExt.join(\n    settings.baseUrl,\n    KERNEL_SERVICE_URL,\n    encodeURIComponent(id)\n  );\n\n  const response = await ServerConnection.makeRequest(url, {}, settings);\n  if (response.status === 404) {\n    return undefined;\n  } else if (response.status !== 200) {\n    const err = await ServerConnection.ResponseError.create(response);\n    throw err;\n  }\n  const data = await response.json();\n  validateModel(data);\n  return data;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * @packageDocumentation\n * @module disposable\n */\nimport { ISignal, Signal } from '@lumino/signaling';\n\n/**\n * An object which implements the disposable pattern.\n */\nexport interface IDisposable {\n  /**\n   * Test whether the object has been disposed.\n   *\n   * #### Notes\n   * This property is always safe to access.\n   */\n  readonly isDisposed: boolean;\n\n  /**\n   * Dispose of the resources held by the object.\n   *\n   * #### Notes\n   * If the object's `dispose` method is called more than once, all\n   * calls made after the first will be a no-op.\n   *\n   * #### Undefined Behavior\n   * It is undefined behavior to use any functionality of the object\n   * after it has been disposed unless otherwise explicitly noted.\n   */\n  dispose(): void;\n}\n\n/**\n * A disposable object with an observable `disposed` signal.\n */\nexport interface IObservableDisposable extends IDisposable {\n  /**\n   * A signal emitted when the object is disposed.\n   */\n  readonly disposed: ISignal<this, void>;\n}\n\n/**\n * A disposable object which delegates to a callback function.\n */\nexport class DisposableDelegate implements IDisposable {\n  /**\n   * Construct a new disposable delegate.\n   *\n   * @param fn - The callback function to invoke on dispose.\n   */\n  constructor(fn: () => void) {\n    this._fn = fn;\n  }\n\n  /**\n   * Test whether the delegate has been disposed.\n   */\n  get isDisposed(): boolean {\n    return !this._fn;\n  }\n\n  /**\n   * Dispose of the delegate and invoke the callback function.\n   */\n  dispose(): void {\n    if (!this._fn) {\n      return;\n    }\n    let fn = this._fn;\n    this._fn = null;\n    fn();\n  }\n\n  private _fn: (() => void) | null;\n}\n\n/**\n * An observable disposable object which delegates to a callback function.\n */\nexport class ObservableDisposableDelegate\n  extends DisposableDelegate\n  implements IObservableDisposable\n{\n  /**\n   * A signal emitted when the delegate is disposed.\n   */\n  get disposed(): ISignal<this, void> {\n    return this._disposed;\n  }\n\n  /**\n   * Dispose of the delegate and invoke the callback function.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._disposed.emit(undefined);\n    Signal.clearData(this);\n  }\n\n  private _disposed = new Signal<this, void>(this);\n}\n\n/**\n * An object which manages a collection of disposable items.\n */\nexport class DisposableSet implements IDisposable {\n  /**\n   * Test whether the set has been disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * Dispose of the set and the items it contains.\n   *\n   * #### Notes\n   * Items are disposed in the order they are added to the set.\n   */\n  dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    this._items.forEach(item => {\n      item.dispose();\n    });\n    this._items.clear();\n  }\n\n  /**\n   * Test whether the set contains a specific item.\n   *\n   * @param item - The item of interest.\n   *\n   * @returns `true` if the set contains the item, `false` otherwise.\n   */\n  contains(item: IDisposable): boolean {\n    return this._items.has(item);\n  }\n\n  /**\n   * Add a disposable item to the set.\n   *\n   * @param item - The item to add to the set.\n   *\n   * #### Notes\n   * If the item is already contained in the set, this is a no-op.\n   */\n  add(item: IDisposable): void {\n    this._items.add(item);\n  }\n\n  /**\n   * Remove a disposable item from the set.\n   *\n   * @param item - The item to remove from the set.\n   *\n   * #### Notes\n   * If the item is not contained in the set, this is a no-op.\n   */\n  remove(item: IDisposable): void {\n    this._items.delete(item);\n  }\n\n  /**\n   * Remove all items from the set.\n   */\n  clear(): void {\n    this._items.clear();\n  }\n\n  private _isDisposed = false;\n  private _items = new Set<IDisposable>();\n}\n\n/**\n * The namespace for the `DisposableSet` class statics.\n */\nexport namespace DisposableSet {\n  /**\n   * Create a disposable set from an iterable of items.\n   *\n   * @param items - The iterable object of interest.\n   *\n   * @returns A new disposable initialized with the given items.\n   */\n  export function from(items: Iterable<IDisposable>): DisposableSet {\n    let set = new DisposableSet();\n    for (const item of items) {\n      set.add(item);\n    }\n    return set;\n  }\n}\n\n/**\n * An observable object which manages a collection of disposable items.\n */\nexport class ObservableDisposableSet\n  extends DisposableSet\n  implements IObservableDisposable\n{\n  /**\n   * A signal emitted when the set is disposed.\n   */\n  get disposed(): ISignal<this, void> {\n    return this._disposed;\n  }\n\n  /**\n   * Dispose of the set and the items it contains.\n   *\n   * #### Notes\n   * Items are disposed in the order they are added to the set.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._disposed.emit(undefined);\n    Signal.clearData(this);\n  }\n\n  private _disposed = new Signal<this, void>(this);\n}\n\n/**\n * The namespace for the `ObservableDisposableSet` class statics.\n */\nexport namespace ObservableDisposableSet {\n  /**\n   * Create an observable disposable set from an iterable of items.\n   *\n   * @param items - The iterable object of interest.\n   *\n   * @returns A new disposable initialized with the given items.\n   */\n  export function from(items: Iterable<IDisposable>): ObservableDisposableSet {\n    let set = new ObservableDisposableSet();\n    for (const item of items) {\n      set.add(item);\n    }\n    return set;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { JSONObject } from '@lumino/coreutils';\n\nimport { DisposableDelegate } from '@lumino/disposable';\n\nimport * as Kernel from './kernel';\n\nimport * as KernelMessage from './messages';\n\n/**\n * Comm channel handler.\n */\nexport class CommHandler extends DisposableDelegate implements Kernel.IComm {\n  /**\n   * Construct a new comm channel.\n   */\n  constructor(\n    target: string,\n    id: string,\n    kernel: Kernel.IKernelConnection,\n    disposeCb: () => void\n  ) {\n    super(disposeCb);\n    this._id = id;\n    this._target = target;\n    this._kernel = kernel;\n  }\n\n  /**\n   * The unique id for the comm channel.\n   */\n  get commId(): string {\n    return this._id;\n  }\n\n  /**\n   * The target name for the comm channel.\n   */\n  get targetName(): string {\n    return this._target;\n  }\n\n  /**\n   * Get the callback for a comm close event.\n   *\n   * #### Notes\n   * This is called when the comm is closed from either the server or client.\n   *\n   * **See also:** [[ICommClose]], [[close]]\n   */\n  get onClose(): (\n    msg: KernelMessage.ICommCloseMsg\n  ) => void | PromiseLike<void> {\n    return this._onClose;\n  }\n\n  /**\n   * Set the callback for a comm close event.\n   *\n   * #### Notes\n   * This is called when the comm is closed from either the server or client. If\n   * the function returns a promise, and the kernel was closed from the server,\n   * kernel message processing will pause until the returned promise is\n   * fulfilled.\n   *\n   * **See also:** [[close]]\n   */\n  set onClose(\n    cb: (msg: KernelMessage.ICommCloseMsg) => void | PromiseLike<void>\n  ) {\n    this._onClose = cb;\n  }\n\n  /**\n   * Get the callback for a comm message received event.\n   */\n  get onMsg(): (msg: KernelMessage.ICommMsgMsg) => void | PromiseLike<void> {\n    return this._onMsg;\n  }\n\n  /**\n   * Set the callback for a comm message received event.\n   *\n   * #### Notes\n   * This is called when a comm message is received. If the function returns a\n   * promise, kernel message processing will pause until it is fulfilled.\n   */\n  set onMsg(cb: (msg: KernelMessage.ICommMsgMsg) => void | PromiseLike<void>) {\n    this._onMsg = cb;\n  }\n\n  /**\n   * Open a comm with optional data and metadata.\n   *\n   * #### Notes\n   * This sends a `comm_open` message to the server.\n   *\n   * **See also:** [[ICommOpen]]\n   */\n  open(\n    data?: JSONObject,\n    metadata?: JSONObject,\n    buffers: (ArrayBuffer | ArrayBufferView)[] = []\n  ): Kernel.IShellFuture {\n    if (this.isDisposed || this._kernel.isDisposed) {\n      throw new Error('Cannot open');\n    }\n    const msg = KernelMessage.createMessage({\n      msgType: 'comm_open',\n      channel: 'shell',\n      username: this._kernel.username,\n      session: this._kernel.clientId,\n      content: {\n        comm_id: this._id,\n        target_name: this._target,\n        data: data ?? {}\n      },\n      metadata,\n      buffers\n    });\n    return this._kernel.sendShellMessage(msg, false, true);\n  }\n\n  /**\n   * Send a `comm_msg` message to the kernel.\n   *\n   * #### Notes\n   * This is a no-op if the comm has been closed.\n   *\n   * **See also:** [[ICommMsg]]\n   */\n  send(\n    data: JSONObject,\n    metadata?: JSONObject,\n    buffers: (ArrayBuffer | ArrayBufferView)[] = [],\n    disposeOnDone: boolean = true\n  ): Kernel.IShellFuture {\n    if (this.isDisposed || this._kernel.isDisposed) {\n      throw new Error('Cannot send');\n    }\n    const msg = KernelMessage.createMessage({\n      msgType: 'comm_msg',\n      channel: 'shell',\n      username: this._kernel.username,\n      session: this._kernel.clientId,\n      content: {\n        comm_id: this._id,\n        data: data\n      },\n      metadata,\n      buffers\n    });\n    return this._kernel.sendShellMessage(msg, false, disposeOnDone);\n  }\n\n  /**\n   * Close the comm.\n   *\n   * #### Notes\n   * This will send a `comm_close` message to the kernel, and call the\n   * `onClose` callback if set.\n   *\n   * This is a no-op if the comm is already closed.\n   *\n   * **See also:** [[ICommClose]], [[onClose]]\n   */\n  close(\n    data?: JSONObject,\n    metadata?: JSONObject,\n    buffers: (ArrayBuffer | ArrayBufferView)[] = []\n  ): Kernel.IShellFuture {\n    if (this.isDisposed || this._kernel.isDisposed) {\n      throw new Error('Cannot close');\n    }\n    const msg = KernelMessage.createMessage({\n      msgType: 'comm_close',\n      channel: 'shell',\n      username: this._kernel.username,\n      session: this._kernel.clientId,\n      content: {\n        comm_id: this._id,\n        data: data ?? {}\n      },\n      metadata,\n      buffers\n    });\n    const future = this._kernel.sendShellMessage(msg, false, true);\n    const onClose = this._onClose;\n    if (onClose) {\n      const ioMsg = KernelMessage.createMessage({\n        msgType: 'comm_close',\n        channel: 'iopub',\n        username: this._kernel.username,\n        session: this._kernel.clientId,\n        content: {\n          comm_id: this._id,\n          data: data ?? {}\n        },\n        metadata,\n        buffers\n      });\n      // In the future, we may want to communicate back to the user the possible\n      // promise returned from onClose.\n      void onClose(ioMsg);\n    }\n    this.dispose();\n    return future;\n  }\n\n  private _target = '';\n  private _id = '';\n  private _kernel: Kernel.IKernelConnection;\n  private _onClose: (\n    msg: KernelMessage.ICommCloseMsg<'iopub'>\n  ) => void | PromiseLike<void>;\n  private _onMsg: (msg: KernelMessage.ICommMsgMsg) => void | PromiseLike<void>;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { PromiseDelegate } from '@lumino/coreutils';\nimport { DisposableDelegate } from '@lumino/disposable';\nimport * as Kernel from './kernel';\nimport * as KernelMessage from './messages';\n\ndeclare let setImmediate: any;\n\n/**\n * Implementation of a kernel future.\n *\n * If a reply is expected, the Future is considered done when both a `reply`\n * message and an `idle` iopub status message have been received.  Otherwise, it\n * is considered done when the `idle` status is received.\n *\n */\nexport abstract class KernelFutureHandler<\n    REQUEST extends KernelMessage.IShellControlMessage,\n    REPLY extends KernelMessage.IShellControlMessage\n  >\n  extends DisposableDelegate\n  implements Kernel.IFuture<REQUEST, REPLY>\n{\n  /**\n   * Construct a new KernelFutureHandler.\n   */\n  constructor(\n    cb: () => void,\n    msg: REQUEST,\n    expectReply: boolean,\n    disposeOnDone: boolean,\n    kernel: Kernel.IKernelConnection\n  ) {\n    super(cb);\n    this._msg = msg;\n    if (!expectReply) {\n      this._setFlag(Private.KernelFutureFlag.GotReply);\n    }\n    this._disposeOnDone = disposeOnDone;\n    this._kernel = kernel;\n  }\n\n  /**\n   * Get the original outgoing message.\n   */\n  get msg(): REQUEST {\n    return this._msg;\n  }\n\n  /**\n   * A promise that resolves when the future is done.\n   */\n  get done(): Promise<REPLY> {\n    return this._done.promise;\n  }\n\n  /**\n   * Get the reply handler.\n   */\n  get onReply(): (msg: REPLY) => void | PromiseLike<void> {\n    return this._reply;\n  }\n\n  /**\n   * Set the reply handler.\n   */\n  set onReply(cb: (msg: REPLY) => void | PromiseLike<void>) {\n    this._reply = cb;\n  }\n\n  /**\n   * Get the iopub handler.\n   */\n  get onIOPub(): (\n    msg: KernelMessage.IIOPubMessage\n  ) => void | PromiseLike<void> {\n    return this._iopub;\n  }\n\n  /**\n   * Set the iopub handler.\n   */\n  set onIOPub(\n    cb: (msg: KernelMessage.IIOPubMessage) => void | PromiseLike<void>\n  ) {\n    this._iopub = cb;\n  }\n\n  /**\n   * Get the stdin handler.\n   */\n  get onStdin(): (\n    msg: KernelMessage.IStdinMessage\n  ) => void | PromiseLike<void> {\n    return this._stdin;\n  }\n\n  /**\n   * Set the stdin handler.\n   */\n  set onStdin(\n    cb: (msg: KernelMessage.IStdinMessage) => void | PromiseLike<void>\n  ) {\n    this._stdin = cb;\n  }\n\n  /**\n   * Register hook for IOPub messages.\n   *\n   * @param hook - The callback invoked for an IOPub message.\n   *\n   * #### Notes\n   * The IOPub hook system allows you to preempt the handlers for IOPub\n   * messages handled by the future.\n   *\n   * The most recently registered hook is run first. A hook can return a\n   * boolean or a promise to a boolean, in which case all kernel message\n   * processing pauses until the promise is fulfilled. If a hook return value\n   * resolves to false, any later hooks will not run and the function will\n   * return a promise resolving to false. If a hook throws an error, the error\n   * is logged to the console and the next hook is run. If a hook is\n   * registered during the hook processing, it will not run until the next\n   * message. If a hook is removed during the hook processing, it will be\n   * deactivated immediately.\n   */\n  registerMessageHook(\n    hook: (msg: KernelMessage.IIOPubMessage) => boolean | PromiseLike<boolean>\n  ): void {\n    if (this.isDisposed) {\n      throw new Error('Kernel future is disposed');\n    }\n    this._hooks.add(hook);\n  }\n\n  /**\n   * Remove a hook for IOPub messages.\n   *\n   * @param hook - The hook to remove.\n   *\n   * #### Notes\n   * If a hook is removed during the hook processing, it will be deactivated immediately.\n   */\n  removeMessageHook(\n    hook: (msg: KernelMessage.IIOPubMessage) => boolean | PromiseLike<boolean>\n  ): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._hooks.remove(hook);\n  }\n\n  /**\n   * Send an `input_reply` message.\n   */\n  sendInputReply(\n    content: KernelMessage.IInputReplyMsg['content'],\n    parent_header: KernelMessage.IInputReplyMsg['parent_header']\n  ): void {\n    this._kernel.sendInputReply(content, parent_header);\n  }\n\n  /**\n   * Dispose and unregister the future.\n   */\n  dispose(): void {\n    this._stdin = Private.noOp;\n    this._iopub = Private.noOp;\n    this._reply = Private.noOp;\n    this._hooks = null!;\n    if (!this._testFlag(Private.KernelFutureFlag.IsDone)) {\n      // TODO: Uncomment the following logging code, and check for any tests that trigger it.\n      // let status = [];\n      // if (!this._testFlag(Private.KernelFutureFlag.GotIdle)) {\n      //   status.push('idle');\n      // }\n      // if (!this._testFlag(Private.KernelFutureFlag.GotReply)) {\n      //   status.push('reply');\n      // }\n      // console.warn(\n      //   `*************** DISPOSED BEFORE DONE: K${this._kernel.id.slice(\n      //     0,\n      //     6\n      //   )} M${this._msg.header.msg_id.slice(0, 6)} missing ${status.join(' ')}`\n      // );\n\n      // Reject the `done` promise, but catch its error here in case no one else\n      // is waiting for the promise to resolve. This prevents the error from\n      // being displayed in the console, but does not prevent it from being\n      // caught by a client who is waiting for it.\n      this._done.promise.catch(() => {\n        /* no-op */\n      });\n      this._done.reject(\n        new Error(\n          `Canceled future for ${this.msg.header.msg_type} message before replies were done`\n        )\n      );\n    }\n    super.dispose();\n  }\n\n  /**\n   * Handle an incoming kernel message.\n   */\n  async handleMsg(msg: KernelMessage.IMessage): Promise<void> {\n    switch (msg.channel) {\n      case 'control':\n      case 'shell':\n        if (\n          msg.channel === this.msg.channel &&\n          (\n            msg.parent_header as KernelMessage.IHeader<KernelMessage.MessageType>\n          ).msg_id === this.msg.header.msg_id\n        ) {\n          await this._handleReply(msg as REPLY);\n        }\n        break;\n      case 'stdin':\n        await this._handleStdin(msg as KernelMessage.IStdinMessage);\n        break;\n      case 'iopub':\n        await this._handleIOPub(msg as KernelMessage.IIOPubMessage);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async _handleReply(msg: REPLY): Promise<void> {\n    const reply = this._reply;\n    if (reply) {\n      // tslint:disable-next-line:await-promise\n      await reply(msg);\n    }\n    this._replyMsg = msg;\n    this._setFlag(Private.KernelFutureFlag.GotReply);\n    if (this._testFlag(Private.KernelFutureFlag.GotIdle)) {\n      this._handleDone();\n    }\n  }\n\n  private async _handleStdin(msg: KernelMessage.IStdinMessage): Promise<void> {\n    this._kernel.hasPendingInput = true;\n    const stdin = this._stdin;\n    if (stdin) {\n      // tslint:disable-next-line:await-promise\n      await stdin(msg);\n    }\n  }\n\n  private async _handleIOPub(msg: KernelMessage.IIOPubMessage): Promise<void> {\n    const process = await this._hooks.process(msg);\n    const iopub = this._iopub;\n    if (process && iopub) {\n      // tslint:disable-next-line:await-promise\n      await iopub(msg);\n    }\n    if (\n      KernelMessage.isStatusMsg(msg) &&\n      msg.content.execution_state === 'idle'\n    ) {\n      this._setFlag(Private.KernelFutureFlag.GotIdle);\n      if (this._testFlag(Private.KernelFutureFlag.GotReply)) {\n        this._handleDone();\n      }\n    }\n  }\n\n  private _handleDone(): void {\n    if (this._testFlag(Private.KernelFutureFlag.IsDone)) {\n      return;\n    }\n    this._setFlag(Private.KernelFutureFlag.IsDone);\n    this._done.resolve(this._replyMsg);\n    if (this._disposeOnDone) {\n      this.dispose();\n    }\n  }\n\n  /**\n   * Test whether the given future flag is set.\n   */\n  private _testFlag(flag: Private.KernelFutureFlag): boolean {\n    // tslint:disable-next-line\n    return (this._status & flag) !== 0;\n  }\n\n  /**\n   * Set the given future flag.\n   */\n  private _setFlag(flag: Private.KernelFutureFlag): void {\n    // tslint:disable-next-line\n    this._status |= flag;\n  }\n\n  private _msg: REQUEST;\n  private _status = 0;\n  private _stdin: (\n    msg: KernelMessage.IStdinMessage\n  ) => void | PromiseLike<void> = Private.noOp;\n  private _iopub: (\n    msg: KernelMessage.IIOPubMessage\n  ) => void | PromiseLike<void> = Private.noOp;\n  private _reply: (msg: REPLY) => void | PromiseLike<void> = Private.noOp;\n  private _done = new PromiseDelegate<REPLY>();\n  private _replyMsg: REPLY;\n  private _hooks = new Private.HookList<KernelMessage.IIOPubMessage>();\n  private _disposeOnDone = true;\n  private _kernel: Kernel.IKernelConnection;\n}\n\nexport class KernelControlFutureHandler<\n    REQUEST extends\n      KernelMessage.IControlMessage = KernelMessage.IControlMessage,\n    REPLY extends KernelMessage.IControlMessage = KernelMessage.IControlMessage\n  >\n  extends KernelFutureHandler<REQUEST, REPLY>\n  implements Kernel.IControlFuture<REQUEST, REPLY> {}\n\nexport class KernelShellFutureHandler<\n    REQUEST extends KernelMessage.IShellMessage = KernelMessage.IShellMessage,\n    REPLY extends KernelMessage.IShellMessage = KernelMessage.IShellMessage\n  >\n  extends KernelFutureHandler<REQUEST, REPLY>\n  implements Kernel.IShellFuture<REQUEST, REPLY> {}\n\nnamespace Private {\n  /**\n   * A no-op function.\n   */\n  export const noOp = (): void => {\n    /* no-op */\n  };\n\n  /**\n   * Defer a computation.\n   *\n   * #### NOTES\n   * We can't just use requestAnimationFrame since it is not available in node.\n   * This implementation is from Phosphor:\n   * https://github.com/phosphorjs/phosphor/blob/e88e4321289bb1198f3098e7bda40736501f2ed8/tests/test-messaging/src/index.spec.ts#L63\n   */\n  const defer = (() => {\n    const ok = typeof requestAnimationFrame === 'function';\n    return ok ? requestAnimationFrame : setImmediate;\n  })();\n\n  export class HookList<T> {\n    /**\n     * Register a hook.\n     *\n     * @param hook - The callback to register.\n     */\n    add(hook: (msg: T) => boolean | PromiseLike<boolean>): void {\n      this.remove(hook);\n      this._hooks.push(hook);\n    }\n\n    /**\n     * Remove a hook, if it exists in the hook list.\n     *\n     * @param hook - The callback to remove.\n     */\n    remove(hook: (msg: T) => boolean | PromiseLike<boolean>): void {\n      const index = this._hooks.indexOf(hook);\n      if (index >= 0) {\n        this._hooks[index] = null;\n        this._scheduleCompact();\n      }\n    }\n\n    /**\n     * Process a message through the hooks.\n     *\n     * @returns a promise resolving to false if any hook resolved as false,\n     * otherwise true\n     *\n     * #### Notes\n     * The most recently registered hook is run first. A hook can return a\n     * boolean or a promise to a boolean, in which case processing pauses until\n     * the promise is fulfilled. If a hook return value resolves to false, any\n     * later hooks will not run and the function will return a promise resolving\n     * to false. If a hook throws an error, the error is logged to the console\n     * and the next hook is run. If a hook is registered during the hook\n     * processing, it will not run until the next message. If a hook is removed\n     * during the hook processing, it will be deactivated immediately.\n     */\n    async process(msg: T): Promise<boolean> {\n      // Wait until we can start a new process run.\n      await this._processing;\n\n      // Start the next process run.\n      const processing = new PromiseDelegate<void>();\n      this._processing = processing.promise;\n\n      let continueHandling: boolean;\n\n      // Call the end hook (most recently-added) first. Starting at the end also\n      // guarantees that hooks added during the processing will not be run in\n      // this process run.\n      for (let i = this._hooks.length - 1; i >= 0; i--) {\n        const hook = this._hooks[i];\n\n        // If the hook has been removed, continue to the next one.\n        if (hook === null) {\n          continue;\n        }\n\n        // Execute the hook and log any errors.\n        try {\n          // tslint:disable-next-line:await-promise\n          continueHandling = await hook(msg);\n        } catch (err) {\n          continueHandling = true;\n          console.error(err);\n        }\n\n        // If the hook resolved to false, stop processing and return.\n        if (continueHandling === false) {\n          processing.resolve(undefined);\n          return false;\n        }\n      }\n\n      // All hooks returned true (or errored out), so return true.\n      processing.resolve(undefined);\n      return true;\n    }\n\n    /**\n     * Schedule a cleanup of the list, removing any hooks that have been nulled out.\n     */\n    private _scheduleCompact(): void {\n      if (!this._compactScheduled) {\n        this._compactScheduled = true;\n\n        // Schedule a compaction in between processing runs. We do the\n        // scheduling in an animation frame to rate-limit our compactions. If we\n        // need to compact more frequently, we can change this to directly\n        // schedule the compaction.\n        defer(() => {\n          this._processing = this._processing.then(() => {\n            this._compactScheduled = false;\n            this._compact();\n          });\n        });\n      }\n    }\n\n    /**\n     * Compact the list, removing any nulls.\n     */\n    private _compact(): void {\n      let numNulls = 0;\n      for (let i = 0, len = this._hooks.length; i < len; i++) {\n        const hook = this._hooks[i];\n        if (this._hooks[i] === null) {\n          numNulls++;\n        } else {\n          this._hooks[i - numNulls] = hook;\n        }\n      }\n      this._hooks.length -= numNulls;\n    }\n\n    private _hooks: (((msg: T) => boolean | PromiseLike<boolean>) | null)[] =\n      [];\n    private _compactScheduled: boolean;\n    private _processing: Promise<void>;\n  }\n\n  /**\n   * Bit flags for the kernel future state.\n   */\n  export enum KernelFutureFlag {\n    GotReply = 0x1,\n    GotIdle = 0x2,\n    IsDone = 0x4,\n    DisposeOnDone = 0x8\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { ISpecModel, ISpecModels } from './restapi';\nimport { validateProperty } from '../validate';\n\n/**\n * Validate a server kernelspec model to a client side model.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function validateSpecModel(data: any): ISpecModel {\n  const spec = data.spec;\n  if (!spec) {\n    throw new Error('Invalid kernel spec');\n  }\n  validateProperty(data, 'name', 'string');\n  validateProperty(data, 'resources', 'object');\n  validateProperty(spec, 'language', 'string');\n  validateProperty(spec, 'display_name', 'string');\n  validateProperty(spec, 'argv', 'array');\n\n  let metadata: any = null;\n  if (spec.hasOwnProperty('metadata')) {\n    validateProperty(spec, 'metadata', 'object');\n    metadata = spec.metadata;\n  }\n\n  let env: any = null;\n  if (spec.hasOwnProperty('env')) {\n    validateProperty(spec, 'env', 'object');\n    env = spec.env;\n  }\n  return {\n    name: data.name,\n    resources: data.resources,\n    language: spec.language,\n    display_name: spec.display_name,\n    argv: spec.argv,\n    metadata,\n    env\n  };\n}\n\n/**\n * Validate a `Kernel.ISpecModels` object.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function validateSpecModels(data: any): ISpecModels {\n  if (!data.hasOwnProperty('kernelspecs')) {\n    throw new Error('No kernelspecs found');\n  }\n  let keys = Object.keys(data.kernelspecs);\n  const kernelspecs: { [key: string]: ISpecModel } = Object.create(null);\n  let defaultSpec = data.default;\n\n  for (let i = 0; i < keys.length; i++) {\n    const ks = data.kernelspecs[keys[i]];\n    try {\n      kernelspecs[keys[i]] = validateSpecModel(ks);\n    } catch (err) {\n      // Remove the errant kernel spec.\n      console.warn(`Removing errant kernel spec: ${keys[i]}`);\n    }\n  }\n  keys = Object.keys(kernelspecs);\n  if (!keys.length) {\n    throw new Error('No valid kernelspecs found');\n  }\n  if (\n    !defaultSpec ||\n    typeof defaultSpec !== 'string' ||\n    !(defaultSpec in kernelspecs)\n  ) {\n    defaultSpec = keys[0];\n    console.warn(`Default kernel not found, using '${keys[0]}'`);\n  }\n  return {\n    default: defaultSpec,\n    kernelspecs\n  };\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { ServerConnection } from '../serverconnection';\nimport { validateSpecModels } from './validate';\n\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { PartialJSONObject } from '@lumino/coreutils';\n\n/**\n * The url for the kernelspec service.\n */\nconst KERNELSPEC_SERVICE_URL = 'api/kernelspecs';\n\n/**\n * Fetch all of the kernel specs.\n *\n * @param settings - The optional server settings.\n * @param useCache - Whether to use the cache. If false, always request.\n *\n * @returns A promise that resolves with the kernel specs.\n *\n * #### Notes\n * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/kernelspecs).\n */\nexport async function getSpecs(\n  settings: ServerConnection.ISettings = ServerConnection.makeSettings()\n): Promise<ISpecModels> {\n  const url = URLExt.join(settings.baseUrl, KERNELSPEC_SERVICE_URL);\n  const response = await ServerConnection.makeRequest(url, {}, settings);\n  if (response.status !== 200) {\n    const err = await ServerConnection.ResponseError.create(response);\n    throw err;\n  }\n  const data = await response.json();\n  return validateSpecModels(data);\n}\n\n/**\n * Kernel Spec interface.\n *\n * #### Notes\n * See [Kernel specs](https://jupyter-client.readthedocs.io/en/latest/kernels.html#kernelspecs).\n */\nexport interface ISpecModel extends PartialJSONObject {\n  /**\n   * The name of the kernel spec.\n   */\n  readonly name: string;\n\n  /**\n   * The name of the language of the kernel.\n   */\n  readonly language: string;\n\n  /**\n   * A list of command line arguments used to start the kernel.\n   */\n  readonly argv: string[];\n\n  /**\n   * The kernel\u2019s name as it should be displayed in the UI.\n   */\n  readonly display_name: string;\n\n  /**\n   * A dictionary of environment variables to set for the kernel.\n   */\n  readonly env?: PartialJSONObject;\n\n  /**\n   * A mapping of resource file name to download path.\n   */\n  readonly resources: { [key: string]: string };\n\n  /**\n   * A dictionary of additional attributes about this kernel; used by clients to aid in kernel selection.\n   */\n  readonly metadata?: PartialJSONObject;\n}\n\n/**\n * The available kernelSpec models.\n *\n * #### Notes\n * See the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/kernelspecs).\n */\nexport interface ISpecModels extends PartialJSONObject {\n  /**\n   * The name of the default kernel spec.\n   */\n  default: string;\n\n  /**\n   * A mapping of kernel spec name to spec.\n   */\n  readonly kernelspecs: { [key: string]: ISpecModel | undefined };\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { JSONExt } from '@lumino/coreutils';\nimport { Poll } from '@lumino/polling';\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { ServerConnection } from '../serverconnection';\nimport * as KernelSpec from './kernelspec';\nimport * as restapi from './restapi';\nimport { BaseManager } from '../basemanager';\n/**\n * An implementation of a kernel spec manager.\n */\nexport class KernelSpecManager\n  extends BaseManager\n  implements KernelSpec.IManager\n{\n  /**\n   * Construct a new kernel spec manager.\n   *\n   * @param options - The default options for kernel.\n   */\n  constructor(options: KernelSpecManager.IOptions = {}) {\n    super(options);\n\n    // Initialize internal data.\n    this._ready = Promise.all([this.requestSpecs()])\n      .then(_ => undefined)\n      .catch(_ => undefined)\n      .then(() => {\n        if (this.isDisposed) {\n          return;\n        }\n        this._isReady = true;\n      });\n\n    this._pollSpecs = new Poll({\n      auto: false,\n      factory: () => this.requestSpecs(),\n      frequency: {\n        interval: 61 * 1000,\n        backoff: true,\n        max: 300 * 1000\n      },\n      name: `@jupyterlab/services:KernelSpecManager#specs`,\n      standby: options.standby ?? 'when-hidden'\n    });\n    void this.ready.then(() => {\n      void this._pollSpecs.start();\n    });\n  }\n\n  /**\n   * The server settings for the manager.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n\n  /**\n   * Test whether the manager is ready.\n   */\n  get isReady(): boolean {\n    return this._isReady;\n  }\n\n  /**\n   * A promise that fulfills when the manager is ready.\n   */\n  get ready(): Promise<void> {\n    return this._ready;\n  }\n\n  /**\n   * Get the most recently fetched kernel specs.\n   */\n  get specs(): restapi.ISpecModels | null {\n    return this._specs;\n  }\n\n  /**\n   * A signal emitted when the specs change.\n   */\n  get specsChanged(): ISignal<this, restapi.ISpecModels> {\n    return this._specsChanged;\n  }\n\n  /**\n   * A signal emitted when there is a connection failure.\n   */\n  get connectionFailure(): ISignal<this, Error> {\n    return this._connectionFailure;\n  }\n\n  /**\n   * Dispose of the resources used by the manager.\n   */\n  dispose(): void {\n    this._pollSpecs.dispose();\n    super.dispose();\n  }\n\n  /**\n   * Force a refresh of the specs from the server.\n   *\n   * @returns A promise that resolves when the specs are fetched.\n   *\n   * #### Notes\n   * This is intended to be called only in response to a user action,\n   * since the manager maintains its internal state.\n   */\n  async refreshSpecs(): Promise<void> {\n    await this._pollSpecs.refresh();\n    await this._pollSpecs.tick;\n  }\n\n  /**\n   * Execute a request to the server to poll specs and update state.\n   */\n  protected async requestSpecs(): Promise<void> {\n    const specs = await restapi.getSpecs(this.serverSettings);\n    if (this.isDisposed) {\n      return;\n    }\n    if (!JSONExt.deepEqual(specs, this._specs)) {\n      this._specs = specs;\n      this._specsChanged.emit(specs);\n    }\n  }\n\n  private _isReady = false;\n  private _connectionFailure = new Signal<this, Error>(this);\n\n  private _pollSpecs: Poll;\n  private _ready: Promise<void>;\n\n  private _specs: restapi.ISpecModels | null = null;\n  private _specsChanged = new Signal<this, restapi.ISpecModels>(this);\n}\n\n/**\n * The namespace for `KernelManager` class statics.\n */\nexport namespace KernelSpecManager {\n  /**\n   * The options used to initialize a KernelManager.\n   */\n  export interface IOptions extends BaseManager.IOptions {\n    /**\n     * When the manager stops polling the API. Defaults to `when-hidden`.\n     */\n    standby?: Poll.Standby | (() => boolean | Poll.Standby);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport * as KernelSpec from './kernelspec';\nimport * as KernelSpecAPI from './restapi';\n\nexport * from './manager';\nexport { KernelSpec, KernelSpecAPI };\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { URLExt } from '@jupyterlab/coreutils';\n\nimport { JSONExt, JSONObject, PromiseDelegate, UUID } from '@lumino/coreutils';\n\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { ServerConnection } from '..';\n\nimport { CommHandler } from './comm';\n\nimport * as Kernel from './kernel';\n\nimport * as KernelMessage from './messages';\n\nimport {\n  KernelControlFutureHandler,\n  KernelFutureHandler,\n  KernelShellFutureHandler\n} from './future';\n\nimport * as validate from './validate';\nimport { KernelSpec, KernelSpecAPI } from '../kernelspec';\n\nimport * as restapi from './restapi';\n\n// Stub for requirejs.\ndeclare let requirejs: any;\n\nconst KERNEL_INFO_TIMEOUT = 3000;\nconst RESTARTING_KERNEL_SESSION = '_RESTARTING_';\nconst STARTING_KERNEL_SESSION = '';\n\n/**\n * Implementation of the Kernel object.\n *\n * #### Notes\n * Messages from the server are handled in the order they were received and\n * asynchronously. Any message handler can return a promise, and message\n * handling will pause until the promise is fulfilled.\n */\nexport class KernelConnection implements Kernel.IKernelConnection {\n  /**\n   * Construct a kernel object.\n   */\n  constructor(options: Kernel.IKernelConnection.IOptions) {\n    this._name = options.model.name;\n    this._id = options.model.id;\n    this.serverSettings =\n      options.serverSettings ?? ServerConnection.makeSettings();\n    this._clientId = options.clientId ?? UUID.uuid4();\n    this._username = options.username ?? '';\n    this.handleComms = options.handleComms ?? true;\n\n    this._createSocket();\n  }\n\n  get disposed(): ISignal<this, void> {\n    return this._disposed;\n  }\n\n  /**\n   * The server settings for the kernel.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n\n  /**\n   * Handle comm messages\n   *\n   * #### Notes\n   * The comm message protocol currently has implicit assumptions that only\n   * one kernel connection is handling comm messages. This option allows a\n   * kernel connection to opt out of handling comms.\n   *\n   * See https://github.com/jupyter/jupyter_client/issues/263\n   */\n  readonly handleComms: boolean;\n\n  /**\n   * A signal emitted when the kernel status changes.\n   */\n  get statusChanged(): ISignal<this, KernelMessage.Status> {\n    return this._statusChanged;\n  }\n\n  /**\n   * A signal emitted when the kernel status changes.\n   */\n  get connectionStatusChanged(): ISignal<this, Kernel.ConnectionStatus> {\n    return this._connectionStatusChanged;\n  }\n\n  /**\n   * A signal emitted for iopub kernel messages.\n   *\n   * #### Notes\n   * This signal is emitted after the iopub message is handled asynchronously.\n   */\n  get iopubMessage(): ISignal<this, KernelMessage.IIOPubMessage> {\n    return this._iopubMessage;\n  }\n\n  /**\n   * A signal emitted for unhandled kernel message.\n   *\n   * #### Notes\n   * This signal is emitted for a message that was not handled. It is emitted\n   * during the asynchronous message handling code.\n   */\n  get unhandledMessage(): ISignal<this, KernelMessage.IMessage> {\n    return this._unhandledMessage;\n  }\n\n  /**\n   * The kernel model\n   */\n  get model(): Kernel.IModel {\n    return (\n      this._model || {\n        id: this.id,\n        name: this.name,\n        reason: this._reason\n      }\n    );\n  }\n\n  /**\n   * A signal emitted for any kernel message.\n   *\n   * #### Notes\n   * This signal is emitted when a message is received, before it is handled\n   * asynchronously.\n   *\n   * This message is emitted when a message is queued for sending (either in\n   * the websocket buffer, or our own pending message buffer). The message may\n   * actually be sent across the wire at a later time.\n   *\n   * The message emitted in this signal should not be modified in any way.\n   */\n  get anyMessage(): ISignal<this, Kernel.IAnyMessageArgs> {\n    return this._anyMessage;\n  }\n\n  /**\n   * A signal emitted when a kernel has pending inputs from the user.\n   */\n  get pendingInput(): ISignal<this, boolean> {\n    return this._pendingInput;\n  }\n\n  /**\n   * The id of the server-side kernel.\n   */\n  get id(): string {\n    return this._id;\n  }\n\n  /**\n   * The name of the server-side kernel.\n   */\n  get name(): string {\n    return this._name;\n  }\n\n  /**\n   * The client username.\n   */\n  get username(): string {\n    return this._username;\n  }\n\n  /**\n   * The client unique id.\n   */\n  get clientId(): string {\n    return this._clientId;\n  }\n\n  /**\n   * The current status of the kernel.\n   */\n  get status(): KernelMessage.Status {\n    return this._status;\n  }\n\n  /**\n   * The current connection status of the kernel connection.\n   */\n  get connectionStatus(): Kernel.ConnectionStatus {\n    return this._connectionStatus;\n  }\n\n  /**\n   * Test whether the kernel has been disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * The cached kernel info.\n   *\n   * @returns A promise that resolves to the kernel info.\n   */\n  get info(): Promise<KernelMessage.IInfoReply> {\n    return this._info.promise;\n  }\n\n  /**\n   * The kernel spec.\n   *\n   * @returns A promise that resolves to the kernel spec.\n   */\n  get spec(): Promise<KernelSpec.ISpecModel | undefined> {\n    if (this._specPromise) {\n      return this._specPromise;\n    }\n    this._specPromise = KernelSpecAPI.getSpecs(this.serverSettings).then(\n      specs => {\n        return specs.kernelspecs[this._name];\n      }\n    );\n    return this._specPromise;\n  }\n\n  /**\n   * Clone the current kernel with a new clientId.\n   */\n  clone(\n    options: Pick<\n      Kernel.IKernelConnection.IOptions,\n      'clientId' | 'username' | 'handleComms'\n    > = {}\n  ): Kernel.IKernelConnection {\n    return new KernelConnection({\n      model: this.model,\n      username: this.username,\n      serverSettings: this.serverSettings,\n      // handleComms defaults to false since that is safer\n      handleComms: false,\n      ...options\n    });\n  }\n\n  /**\n   * Dispose of the resources held by the kernel.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    this._disposed.emit();\n\n    this._updateConnectionStatus('disconnected');\n    this._clearKernelState();\n    this._pendingMessages = [];\n    this._clearSocket();\n\n    // Clear Lumino signals\n    Signal.clearData(this);\n  }\n\n  /**\n   * Send a shell message to the kernel.\n   *\n   * #### Notes\n   * Send a message to the kernel's shell channel, yielding a future object\n   * for accepting replies.\n   *\n   * If `expectReply` is given and `true`, the future is disposed when both a\n   * shell reply and an idle status message are received. If `expectReply`\n   * is not given or is `false`, the future is resolved when an idle status\n   * message is received.\n   * If `disposeOnDone` is not given or is `true`, the Future is disposed at this point.\n   * If `disposeOnDone` is given and `false`, it is up to the caller to dispose of the Future.\n   *\n   * All replies are validated as valid kernel messages.\n   *\n   * If the kernel status is `dead`, this will throw an error.\n   */\n  sendShellMessage<T extends KernelMessage.ShellMessageType>(\n    msg: KernelMessage.IShellMessage<T>,\n    expectReply = false,\n    disposeOnDone = true\n  ): Kernel.IShellFuture<KernelMessage.IShellMessage<T>> {\n    return this._sendKernelShellControl(\n      KernelShellFutureHandler,\n      msg,\n      expectReply,\n      disposeOnDone\n    ) as Kernel.IShellFuture<KernelMessage.IShellMessage<T>>;\n  }\n\n  /**\n   * Send a control message to the kernel.\n   *\n   * #### Notes\n   * Send a message to the kernel's control channel, yielding a future object\n   * for accepting replies.\n   *\n   * If `expectReply` is given and `true`, the future is disposed when both a\n   * control reply and an idle status message are received. If `expectReply`\n   * is not given or is `false`, the future is resolved when an idle status\n   * message is received.\n   * If `disposeOnDone` is not given or is `true`, the Future is disposed at this point.\n   * If `disposeOnDone` is given and `false`, it is up to the caller to dispose of the Future.\n   *\n   * All replies are validated as valid kernel messages.\n   *\n   * If the kernel status is `dead`, this will throw an error.\n   */\n  sendControlMessage<T extends KernelMessage.ControlMessageType>(\n    msg: KernelMessage.IControlMessage<T>,\n    expectReply = false,\n    disposeOnDone = true\n  ): Kernel.IControlFuture<KernelMessage.IControlMessage<T>> {\n    return this._sendKernelShellControl(\n      KernelControlFutureHandler,\n      msg,\n      expectReply,\n      disposeOnDone\n    ) as Kernel.IControlFuture<KernelMessage.IControlMessage<T>>;\n  }\n\n  private _sendKernelShellControl<\n    REQUEST extends KernelMessage.IShellControlMessage,\n    REPLY extends KernelMessage.IShellControlMessage,\n    KFH extends new (...params: any[]) => KernelFutureHandler<REQUEST, REPLY>,\n    T extends KernelMessage.IMessage\n  >(\n    ctor: KFH,\n    msg: T,\n    expectReply = false,\n    disposeOnDone = true\n  ): Kernel.IFuture<\n    KernelMessage.IShellControlMessage,\n    KernelMessage.IShellControlMessage\n  > {\n    this._sendMessage(msg);\n    this._anyMessage.emit({ msg, direction: 'send' });\n\n    const future = new ctor(\n      () => {\n        const msgId = msg.header.msg_id;\n        this._futures.delete(msgId);\n        // Remove stored display id information.\n        const displayIds = this._msgIdToDisplayIds.get(msgId);\n        if (!displayIds) {\n          return;\n        }\n        displayIds.forEach(displayId => {\n          const msgIds = this._displayIdToParentIds.get(displayId);\n          if (msgIds) {\n            const idx = msgIds.indexOf(msgId);\n            if (idx === -1) {\n              return;\n            }\n            if (msgIds.length === 1) {\n              this._displayIdToParentIds.delete(displayId);\n            } else {\n              msgIds.splice(idx, 1);\n              this._displayIdToParentIds.set(displayId, msgIds);\n            }\n          }\n        });\n        this._msgIdToDisplayIds.delete(msgId);\n      },\n      msg,\n      expectReply,\n      disposeOnDone,\n      this\n    );\n    this._futures.set(msg.header.msg_id, future);\n    return future;\n  }\n\n  /**\n   * Send a message on the websocket.\n   *\n   * If queue is true, queue the message for later sending if we cannot send\n   * now. Otherwise throw an error.\n   *\n   * #### Notes\n   * As an exception to the queueing, if we are sending a kernel_info_request\n   * message while we think the kernel is restarting, we send the message\n   * immediately without queueing. This is so that we can trigger a message\n   * back, which will then clear the kernel restarting state.\n   */\n  private _sendMessage(msg: KernelMessage.IMessage, queue = true) {\n    if (this.status === 'dead') {\n      throw new Error('Kernel is dead');\n    }\n\n    // If we have a kernel_info_request and we are starting or restarting, send the\n    // kernel_info_request immediately if we can, and if not throw an error so\n    // we can retry later. On restarting we do this because we must get at least one message\n    // from the kernel to reset the kernel session (thus clearing the restart\n    // status sentinel).\n    if (\n      (this._kernelSession === STARTING_KERNEL_SESSION ||\n        this._kernelSession === RESTARTING_KERNEL_SESSION) &&\n      KernelMessage.isInfoRequestMsg(msg)\n    ) {\n      if (this.connectionStatus === 'connected') {\n        this._ws!.send(\n          this.serverSettings.serializer.serialize(msg, this._ws!.protocol)\n        );\n        return;\n      } else {\n        throw new Error('Could not send message: status is not connected');\n      }\n    }\n\n    // If there are pending messages, add to the queue so we keep messages in order\n    if (queue && this._pendingMessages.length > 0) {\n      this._pendingMessages.push(msg);\n      return;\n    }\n\n    // Send if the ws allows it, otherwise queue the message.\n    if (\n      this.connectionStatus === 'connected' &&\n      this._kernelSession !== RESTARTING_KERNEL_SESSION\n    ) {\n      this._ws!.send(\n        this.serverSettings.serializer.serialize(msg, this._ws!.protocol)\n      );\n    } else if (queue) {\n      this._pendingMessages.push(msg);\n    } else {\n      throw new Error('Could not send message');\n    }\n  }\n\n  /**\n   * Interrupt a kernel.\n   *\n   * #### Notes\n   * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/kernels).\n   *\n   * The promise is fulfilled on a valid response and rejected otherwise.\n   *\n   * It is assumed that the API call does not mutate the kernel id or name.\n   *\n   * The promise will be rejected if the kernel status is `Dead` or if the\n   * request fails or the response is invalid.\n   */\n  async interrupt(): Promise<void> {\n    this.hasPendingInput = false;\n    if (this.status === 'dead') {\n      throw new Error('Kernel is dead');\n    }\n    return restapi.interruptKernel(this.id, this.serverSettings);\n  }\n\n  /**\n   * Request a kernel restart.\n   *\n   * #### Notes\n   * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/kernels)\n   * and validates the response model.\n   *\n   * Any existing Future or Comm objects are cleared once the kernel has\n   * actually be restarted.\n   *\n   * The promise is fulfilled on a valid server response (after the kernel restarts)\n   * and rejected otherwise.\n   *\n   * It is assumed that the API call does not mutate the kernel id or name.\n   *\n   * The promise will be rejected if the request fails or the response is\n   * invalid.\n   */\n  async restart(): Promise<void> {\n    if (this.status === 'dead') {\n      throw new Error('Kernel is dead');\n    }\n    this._updateStatus('restarting');\n    this._clearKernelState();\n    this._kernelSession = RESTARTING_KERNEL_SESSION;\n    await restapi.restartKernel(this.id, this.serverSettings);\n    // Reconnect to the kernel to address cases where kernel ports\n    // have changed during the restart.\n    await this.reconnect();\n    this.hasPendingInput = false;\n  }\n\n  /**\n   * Reconnect to a kernel.\n   *\n   * #### Notes\n   * This may try multiple times to reconnect to a kernel, and will sever any\n   * existing connection.\n   */\n  reconnect(): Promise<void> {\n    this._errorIfDisposed();\n    const result = new PromiseDelegate<void>();\n\n    // Set up a listener for the connection status changing, which accepts or\n    // rejects after the retries are done.\n    const fulfill = (sender: this, status: Kernel.ConnectionStatus) => {\n      if (status === 'connected') {\n        result.resolve();\n        this.connectionStatusChanged.disconnect(fulfill, this);\n      } else if (status === 'disconnected') {\n        result.reject(new Error('Kernel connection disconnected'));\n        this.connectionStatusChanged.disconnect(fulfill, this);\n      }\n    };\n    this.connectionStatusChanged.connect(fulfill, this);\n\n    // Reset the reconnect limit so we start the connection attempts fresh\n    this._reconnectAttempt = 0;\n\n    // Start the reconnection process, which will also clear any existing\n    // connection.\n    this._reconnect();\n\n    // Return the promise that should resolve on connection or reject if the\n    // retries don't work.\n    return result.promise;\n  }\n\n  /**\n   * Shutdown a kernel.\n   *\n   * #### Notes\n   * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/kernels).\n   *\n   * The promise is fulfilled on a valid response and rejected otherwise.\n   *\n   * On a valid response, disposes this kernel connection.\n   *\n   * If the kernel is already `dead`, disposes this kernel connection without\n   * a server request.\n   */\n  async shutdown(): Promise<void> {\n    if (this.status !== 'dead') {\n      await restapi.shutdownKernel(this.id, this.serverSettings);\n    }\n    this.handleShutdown();\n  }\n\n  /**\n   * Handles a kernel shutdown.\n   *\n   * #### Notes\n   * This method should be called if we know from outside information that a\n   * kernel is dead (for example, we cannot find the kernel model on the\n   * server).\n   */\n  handleShutdown(): void {\n    this._updateStatus('dead');\n    this.dispose();\n  }\n\n  /**\n   * Send a `kernel_info_request` message.\n   *\n   * #### Notes\n   * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#kernel-info).\n   *\n   * Fulfills with the `kernel_info_response` content when the shell reply is\n   * received and validated.\n   */\n  async requestKernelInfo(): Promise<KernelMessage.IInfoReplyMsg | undefined> {\n    const msg = KernelMessage.createMessage({\n      msgType: 'kernel_info_request',\n      channel: 'shell',\n      username: this._username,\n      session: this._clientId,\n      content: {}\n    });\n    let reply: KernelMessage.IInfoReplyMsg | undefined;\n    try {\n      reply = (await Private.handleShellMessage(this, msg)) as\n        | KernelMessage.IInfoReplyMsg\n        | undefined;\n    } catch (e) {\n      // If we rejected because the future was disposed, ignore and return.\n      if (this.isDisposed) {\n        return;\n      } else {\n        throw e;\n      }\n    }\n    this._errorIfDisposed();\n\n    if (!reply) {\n      return;\n    }\n\n    // Kernels sometimes do not include a status field on kernel_info_reply\n    // messages, so set a default for now.\n    // See https://github.com/jupyterlab/jupyterlab/issues/6760\n    if (reply.content.status === undefined) {\n      (reply.content as any).status = 'ok';\n    }\n\n    if (reply.content.status !== 'ok') {\n      this._info.reject('Kernel info reply errored');\n      return reply;\n    }\n\n    this._info.resolve(reply.content);\n\n    this._kernelSession = reply.header.session;\n\n    return reply;\n  }\n\n  /**\n   * Send a `complete_request` message.\n   *\n   * #### Notes\n   * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#completion).\n   *\n   * Fulfills with the `complete_reply` content when the shell reply is\n   * received and validated.\n   */\n  requestComplete(\n    content: KernelMessage.ICompleteRequestMsg['content']\n  ): Promise<KernelMessage.ICompleteReplyMsg> {\n    const msg = KernelMessage.createMessage({\n      msgType: 'complete_request',\n      channel: 'shell',\n      username: this._username,\n      session: this._clientId,\n      content\n    });\n    return Private.handleShellMessage(\n      this,\n      msg\n    ) as Promise<KernelMessage.ICompleteReplyMsg>;\n  }\n\n  /**\n   * Send an `inspect_request` message.\n   *\n   * #### Notes\n   * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#introspection).\n   *\n   * Fulfills with the `inspect_reply` content when the shell reply is\n   * received and validated.\n   */\n  requestInspect(\n    content: KernelMessage.IInspectRequestMsg['content']\n  ): Promise<KernelMessage.IInspectReplyMsg> {\n    const msg = KernelMessage.createMessage({\n      msgType: 'inspect_request',\n      channel: 'shell',\n      username: this._username,\n      session: this._clientId,\n      content: content\n    });\n    return Private.handleShellMessage(\n      this,\n      msg\n    ) as Promise<KernelMessage.IInspectReplyMsg>;\n  }\n\n  /**\n   * Send a `history_request` message.\n   *\n   * #### Notes\n   * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#history).\n   *\n   * Fulfills with the `history_reply` content when the shell reply is\n   * received and validated.\n   */\n  requestHistory(\n    content: KernelMessage.IHistoryRequestMsg['content']\n  ): Promise<KernelMessage.IHistoryReplyMsg> {\n    const msg = KernelMessage.createMessage({\n      msgType: 'history_request',\n      channel: 'shell',\n      username: this._username,\n      session: this._clientId,\n      content\n    });\n    return Private.handleShellMessage(\n      this,\n      msg\n    ) as Promise<KernelMessage.IHistoryReplyMsg>;\n  }\n\n  /**\n   * Send an `execute_request` message.\n   *\n   * #### Notes\n   * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#execute).\n   *\n   * Future `onReply` is called with the `execute_reply` content when the\n   * shell reply is received and validated. The future will resolve when\n   * this message is received and the `idle` iopub status is received.\n   * The future will also be disposed at this point unless `disposeOnDone`\n   * is specified and `false`, in which case it is up to the caller to dispose\n   * of the future.\n   *\n   * **See also:** [[IExecuteReply]]\n   */\n  requestExecute(\n    content: KernelMessage.IExecuteRequestMsg['content'],\n    disposeOnDone: boolean = true,\n    metadata?: JSONObject\n  ): Kernel.IShellFuture<\n    KernelMessage.IExecuteRequestMsg,\n    KernelMessage.IExecuteReplyMsg\n  > {\n    const defaults: JSONObject = {\n      silent: false,\n      store_history: true,\n      user_expressions: {},\n      allow_stdin: true,\n      stop_on_error: false\n    };\n    const msg = KernelMessage.createMessage({\n      msgType: 'execute_request',\n      channel: 'shell',\n      username: this._username,\n      session: this._clientId,\n      content: { ...defaults, ...content },\n      metadata\n    });\n    return this.sendShellMessage(\n      msg,\n      true,\n      disposeOnDone\n    ) as Kernel.IShellFuture<\n      KernelMessage.IExecuteRequestMsg,\n      KernelMessage.IExecuteReplyMsg\n    >;\n  }\n\n  /**\n   * Send an experimental `debug_request` message.\n   *\n   * @hidden\n   *\n   * #### Notes\n   * Debug messages are experimental messages that are not in the official\n   * kernel message specification. As such, this function is *NOT* considered\n   * part of the public API, and may change without notice.\n   */\n  requestDebug(\n    content: KernelMessage.IDebugRequestMsg['content'],\n    disposeOnDone: boolean = true\n  ): Kernel.IControlFuture<\n    KernelMessage.IDebugRequestMsg,\n    KernelMessage.IDebugReplyMsg\n  > {\n    const msg = KernelMessage.createMessage({\n      msgType: 'debug_request',\n      channel: 'control',\n      username: this._username,\n      session: this._clientId,\n      content\n    });\n    return this.sendControlMessage(\n      msg,\n      true,\n      disposeOnDone\n    ) as Kernel.IControlFuture<\n      KernelMessage.IDebugRequestMsg,\n      KernelMessage.IDebugReplyMsg\n    >;\n  }\n\n  /**\n   * Send an `is_complete_request` message.\n   *\n   * #### Notes\n   * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#code-completeness).\n   *\n   * Fulfills with the `is_complete_response` content when the shell reply is\n   * received and validated.\n   */\n  requestIsComplete(\n    content: KernelMessage.IIsCompleteRequestMsg['content']\n  ): Promise<KernelMessage.IIsCompleteReplyMsg> {\n    const msg = KernelMessage.createMessage({\n      msgType: 'is_complete_request',\n      channel: 'shell',\n      username: this._username,\n      session: this._clientId,\n      content\n    });\n    return Private.handleShellMessage(\n      this,\n      msg\n    ) as Promise<KernelMessage.IIsCompleteReplyMsg>;\n  }\n\n  /**\n   * Send a `comm_info_request` message.\n   *\n   * #### Notes\n   * Fulfills with the `comm_info_reply` content when the shell reply is\n   * received and validated.\n   */\n  requestCommInfo(\n    content: KernelMessage.ICommInfoRequestMsg['content']\n  ): Promise<KernelMessage.ICommInfoReplyMsg> {\n    const msg = KernelMessage.createMessage({\n      msgType: 'comm_info_request',\n      channel: 'shell',\n      username: this._username,\n      session: this._clientId,\n      content\n    });\n    return Private.handleShellMessage(\n      this,\n      msg\n    ) as Promise<KernelMessage.ICommInfoReplyMsg>;\n  }\n\n  /**\n   * Send an `input_reply` message.\n   *\n   * #### Notes\n   * See [Messaging in Jupyter](https://jupyter-client.readthedocs.io/en/latest/messaging.html#messages-on-the-stdin-router-dealer-sockets).\n   */\n  sendInputReply(\n    content: KernelMessage.IInputReplyMsg['content'],\n    parent_header: KernelMessage.IInputReplyMsg['parent_header']\n  ): void {\n    const msg = KernelMessage.createMessage({\n      msgType: 'input_reply',\n      channel: 'stdin',\n      username: this._username,\n      session: this._clientId,\n      content\n    });\n    msg.parent_header = parent_header;\n\n    this._sendMessage(msg);\n    this._anyMessage.emit({ msg, direction: 'send' });\n\n    this.hasPendingInput = false;\n  }\n\n  /**\n   * Create a new comm.\n   *\n   * #### Notes\n   * If a client-side comm already exists with the given commId, an error is thrown.\n   * If the kernel does not handle comms, an error is thrown.\n   */\n  createComm(targetName: string, commId: string = UUID.uuid4()): Kernel.IComm {\n    if (!this.handleComms) {\n      throw new Error('Comms are disabled on this kernel connection');\n    }\n    if (this._comms.has(commId)) {\n      throw new Error('Comm is already created');\n    }\n\n    const comm = new CommHandler(targetName, commId, this, () => {\n      this._unregisterComm(commId);\n    });\n    this._comms.set(commId, comm);\n    return comm;\n  }\n\n  /**\n   * Check if a comm exists.\n   */\n  hasComm(commId: string): boolean {\n    return this._comms.has(commId);\n  }\n\n  /**\n   * Register a comm target handler.\n   *\n   * @param targetName - The name of the comm target.\n   *\n   * @param callback - The callback invoked for a comm open message.\n   *\n   * @returns A disposable used to unregister the comm target.\n   *\n   * #### Notes\n   * Only one comm target can be registered to a target name at a time, an\n   * existing callback for the same target name will be overridden.  A registered\n   * comm target handler will take precedence over a comm which specifies a\n   * `target_module`.\n   *\n   * If the callback returns a promise, kernel message processing will pause\n   * until the returned promise is fulfilled.\n   */\n  registerCommTarget(\n    targetName: string,\n    callback: (\n      comm: Kernel.IComm,\n      msg: KernelMessage.ICommOpenMsg\n    ) => void | PromiseLike<void>\n  ): void {\n    if (!this.handleComms) {\n      return;\n    }\n\n    this._targetRegistry[targetName] = callback;\n  }\n\n  /**\n   * Remove a comm target handler.\n   *\n   * @param targetName - The name of the comm target to remove.\n   *\n   * @param callback - The callback to remove.\n   *\n   * #### Notes\n   * The comm target is only removed if the callback argument matches.\n   */\n  removeCommTarget(\n    targetName: string,\n    callback: (\n      comm: Kernel.IComm,\n      msg: KernelMessage.ICommOpenMsg\n    ) => void | PromiseLike<void>\n  ): void {\n    if (!this.handleComms) {\n      return;\n    }\n\n    if (!this.isDisposed && this._targetRegistry[targetName] === callback) {\n      delete this._targetRegistry[targetName];\n    }\n  }\n\n  /**\n   * Register an IOPub message hook.\n   *\n   * @param msg_id - The parent_header message id the hook will intercept.\n   *\n   * @param hook - The callback invoked for the message.\n   *\n   * #### Notes\n   * The IOPub hook system allows you to preempt the handlers for IOPub\n   * messages that are responses to a given message id.\n   *\n   * The most recently registered hook is run first. A hook can return a\n   * boolean or a promise to a boolean, in which case all kernel message\n   * processing pauses until the promise is fulfilled. If a hook return value\n   * resolves to false, any later hooks will not run and the function will\n   * return a promise resolving to false. If a hook throws an error, the error\n   * is logged to the console and the next hook is run. If a hook is\n   * registered during the hook processing, it will not run until the next\n   * message. If a hook is removed during the hook processing, it will be\n   * deactivated immediately.\n   *\n   * See also [[IFuture.registerMessageHook]].\n   */\n  registerMessageHook(\n    msgId: string,\n    hook: (msg: KernelMessage.IIOPubMessage) => boolean | PromiseLike<boolean>\n  ): void {\n    const future = this._futures?.get(msgId);\n    if (future) {\n      future.registerMessageHook(hook);\n    }\n  }\n\n  /**\n   * Remove an IOPub message hook.\n   *\n   * @param msg_id - The parent_header message id the hook intercepted.\n   *\n   * @param hook - The callback invoked for the message.\n   *\n   */\n  removeMessageHook(\n    msgId: string,\n    hook: (msg: KernelMessage.IIOPubMessage) => boolean | PromiseLike<boolean>\n  ): void {\n    const future = this._futures?.get(msgId);\n    if (future) {\n      future.removeMessageHook(hook);\n    }\n  }\n\n  /**\n   * Remove the input guard, if any.\n   */\n  removeInputGuard() {\n    this.hasPendingInput = false;\n  }\n\n  /**\n   * Handle a message with a display id.\n   *\n   * @returns Whether the message was handled.\n   */\n  private async _handleDisplayId(\n    displayId: string,\n    msg: KernelMessage.IMessage\n  ): Promise<boolean> {\n    const msgId = (msg.parent_header as KernelMessage.IHeader).msg_id;\n    let parentIds = this._displayIdToParentIds.get(displayId);\n    if (parentIds) {\n      // We've seen it before, update existing outputs with same display_id\n      // by handling display_data as update_display_data.\n      const updateMsg: KernelMessage.IMessage = {\n        header: JSONExt.deepCopy(\n          msg.header as unknown as JSONObject\n        ) as unknown as KernelMessage.IHeader,\n        parent_header: JSONExt.deepCopy(\n          msg.parent_header as unknown as JSONObject\n        ) as unknown as KernelMessage.IHeader,\n        metadata: JSONExt.deepCopy(msg.metadata),\n        content: JSONExt.deepCopy(msg.content as JSONObject),\n        channel: msg.channel,\n        buffers: msg.buffers ? msg.buffers.slice() : []\n      };\n      (updateMsg.header as any).msg_type = 'update_display_data';\n\n      await Promise.all(\n        parentIds.map(async parentId => {\n          const future = this._futures && this._futures.get(parentId);\n          if (future) {\n            await future.handleMsg(updateMsg);\n          }\n        })\n      );\n    }\n\n    // We're done here if it's update_display.\n    if (msg.header.msg_type === 'update_display_data') {\n      // It's an update, don't proceed to the normal display.\n      return true;\n    }\n\n    // Regular display_data with id, record it for future updating\n    // in _displayIdToParentIds for future lookup.\n    parentIds = this._displayIdToParentIds.get(displayId) ?? [];\n    if (parentIds.indexOf(msgId) === -1) {\n      parentIds.push(msgId);\n    }\n    this._displayIdToParentIds.set(displayId, parentIds);\n\n    // Add to our map of display ids for this message.\n    const displayIds = this._msgIdToDisplayIds.get(msgId) ?? [];\n    if (displayIds.indexOf(msgId) === -1) {\n      displayIds.push(msgId);\n    }\n    this._msgIdToDisplayIds.set(msgId, displayIds);\n\n    // Let the message propagate to the intended recipient.\n    return false;\n  }\n\n  /**\n   * Forcefully clear the socket state.\n   *\n   * #### Notes\n   * This will clear all socket state without calling any handlers and will\n   * not update the connection status. If you call this method, you are\n   * responsible for updating the connection status as needed and recreating\n   * the socket if you plan to reconnect.\n   */\n  private _clearSocket(): void {\n    if (this._ws !== null) {\n      // Clear the websocket event handlers and the socket itself.\n      this._ws.onopen = this._noOp;\n      this._ws.onclose = this._noOp;\n      this._ws.onerror = this._noOp;\n      this._ws.onmessage = this._noOp;\n      this._ws.close();\n      this._ws = null;\n    }\n  }\n\n  /**\n   * Handle status iopub messages from the kernel.\n   */\n  private _updateStatus(status: KernelMessage.Status): void {\n    if (this._status === status || this._status === 'dead') {\n      return;\n    }\n\n    this._status = status;\n    Private.logKernelStatus(this);\n    this._statusChanged.emit(status);\n    if (status === 'dead') {\n      this.dispose();\n    }\n  }\n\n  /**\n   * Send pending messages to the kernel.\n   */\n  private _sendPending(): void {\n    // We check to make sure we are still connected each time. For\n    // example, if a websocket buffer overflows, it may close, so we should\n    // stop sending messages.\n    while (\n      this.connectionStatus === 'connected' &&\n      this._kernelSession !== RESTARTING_KERNEL_SESSION &&\n      this._pendingMessages.length > 0\n    ) {\n      this._sendMessage(this._pendingMessages[0], false);\n\n      // We shift the message off the queue after the message is sent so that\n      // if there is an exception, the message is still pending.\n      this._pendingMessages.shift();\n    }\n  }\n\n  /**\n   * Clear the internal state.\n   */\n  private _clearKernelState(): void {\n    this._kernelSession = '';\n    this._pendingMessages = [];\n    this._futures.forEach(future => {\n      future.dispose();\n    });\n    this._comms.forEach(comm => {\n      comm.dispose();\n    });\n    this._msgChain = Promise.resolve();\n    this._futures = new Map<\n      string,\n      KernelFutureHandler<\n        KernelMessage.IShellControlMessage,\n        KernelMessage.IShellControlMessage\n      >\n    >();\n    this._comms = new Map<string, Kernel.IComm>();\n    this._displayIdToParentIds.clear();\n    this._msgIdToDisplayIds.clear();\n  }\n\n  /**\n   * Check to make sure it is okay to proceed to handle a message.\n   *\n   * #### Notes\n   * Because we handle messages asynchronously, before a message is handled the\n   * kernel might be disposed or restarted (and have a different session id).\n   * This function throws an error in each of these cases. This is meant to be\n   * called at the start of an asynchronous message handler to cancel message\n   * processing if the message no longer is valid.\n   */\n  private _assertCurrentMessage(msg: KernelMessage.IMessage) {\n    this._errorIfDisposed();\n\n    if (msg.header.session !== this._kernelSession) {\n      throw new Error(\n        `Canceling handling of old message: ${msg.header.msg_type}`\n      );\n    }\n  }\n\n  /**\n   * Handle a `comm_open` kernel message.\n   */\n  private async _handleCommOpen(\n    msg: KernelMessage.ICommOpenMsg\n  ): Promise<void> {\n    this._assertCurrentMessage(msg);\n    const content = msg.content;\n    const comm = new CommHandler(\n      content.target_name,\n      content.comm_id,\n      this,\n      () => {\n        this._unregisterComm(content.comm_id);\n      }\n    );\n    this._comms.set(content.comm_id, comm);\n\n    try {\n      const target = await Private.loadObject(\n        content.target_name,\n        content.target_module,\n        this._targetRegistry\n      );\n      await target(comm, msg);\n    } catch (e) {\n      // Close the comm asynchronously. We cannot block message processing on\n      // kernel messages to wait for another kernel message.\n      comm.close();\n      console.error('Exception opening new comm');\n      throw e;\n    }\n  }\n\n  /**\n   * Handle 'comm_close' kernel message.\n   */\n  private async _handleCommClose(\n    msg: KernelMessage.ICommCloseMsg\n  ): Promise<void> {\n    this._assertCurrentMessage(msg);\n    const content = msg.content;\n    const comm = this._comms.get(content.comm_id);\n    if (!comm) {\n      console.error('Comm not found for comm id ' + content.comm_id);\n      return;\n    }\n    this._unregisterComm(comm.commId);\n    const onClose = comm.onClose;\n    if (onClose) {\n      // tslint:disable-next-line:await-promise\n      await onClose(msg);\n    }\n    (comm as CommHandler).dispose();\n  }\n\n  /**\n   * Handle a 'comm_msg' kernel message.\n   */\n  private async _handleCommMsg(msg: KernelMessage.ICommMsgMsg): Promise<void> {\n    this._assertCurrentMessage(msg);\n    const content = msg.content;\n    const comm = this._comms.get(content.comm_id);\n    if (!comm) {\n      return;\n    }\n    const onMsg = comm.onMsg;\n    if (onMsg) {\n      // tslint:disable-next-line:await-promise\n      await onMsg(msg);\n    }\n  }\n\n  /**\n   * Unregister a comm instance.\n   */\n  private _unregisterComm(commId: string) {\n    this._comms.delete(commId);\n  }\n\n  /**\n   * Create the kernel websocket connection and add socket status handlers.\n   */\n  private _createSocket = (useProtocols = true) => {\n    this._errorIfDisposed();\n\n    // Make sure the socket is clear\n    this._clearSocket();\n\n    // Update the connection status to reflect opening a new connection.\n    this._updateConnectionStatus('connecting');\n\n    const settings = this.serverSettings;\n    const partialUrl = URLExt.join(\n      settings.wsUrl,\n      restapi.KERNEL_SERVICE_URL,\n      encodeURIComponent(this._id)\n    );\n\n    // Strip any authentication from the display string.\n    const display = partialUrl.replace(/^((?:\\w+:)?\\/\\/)(?:[^@\\/]+@)/, '$1');\n    console.debug(`Starting WebSocket: ${display}`);\n\n    let url = URLExt.join(\n      partialUrl,\n      'channels?session_id=' + encodeURIComponent(this._clientId)\n    );\n\n    // If token authentication is in use.\n    const token = settings.token;\n    if (settings.appendToken && token !== '') {\n      url = url + `&token=${encodeURIComponent(token)}`;\n    }\n\n    // Try opening the websocket with our list of subprotocols.\n    // If the server doesn't handle subprotocols,\n    // the accepted protocol will be ''.\n    // But we cannot send '' as a subprotocol, so if connection fails,\n    // reconnect without subprotocols.\n    const supportedProtocols = useProtocols ? this._supportedProtocols : [];\n    this._ws = new settings.WebSocket(url, supportedProtocols);\n\n    // Ensure incoming binary messages are not Blobs\n    this._ws.binaryType = 'arraybuffer';\n\n    let alreadyCalledOnclose = false;\n\n    const getKernelModel = async (evt: Event) => {\n      if (this._isDisposed) {\n        return;\n      }\n      this._reason = '';\n      this._model = undefined;\n      try {\n        const model = await restapi.getKernelModel(this._id, settings);\n        this._model = model;\n        if (model?.execution_state === 'dead') {\n          this._updateStatus('dead');\n        } else {\n          this._onWSClose(evt);\n        }\n      } catch (err) {\n        // Try again, if there is a network failure\n        // Handle network errors, as well as cases where we are on a\n        // JupyterHub and the server is not running. JupyterHub returns a\n        // 503 (<2.0) or 424 (>2.0) in that case.\n        if (\n          err instanceof ServerConnection.NetworkError ||\n          err.response?.status === 503 ||\n          err.response?.status === 424\n        ) {\n          const timeout = Private.getRandomIntInclusive(10, 30) * 1e3;\n          setTimeout(getKernelModel, timeout, evt);\n        } else {\n          this._reason = 'Kernel died unexpectedly';\n          this._updateStatus('dead');\n        }\n      }\n      return;\n    };\n\n    const earlyClose = async (evt: Event) => {\n      // If the websocket was closed early, that could mean\n      // that the kernel is actually dead. Try getting\n      // information about the kernel from the API call,\n      // if that fails, then assume the kernel is dead,\n      // otherwise just follow the typical websocket closed\n      // protocol.\n      if (alreadyCalledOnclose) {\n        return;\n      }\n      alreadyCalledOnclose = true;\n      await getKernelModel(evt);\n\n      return;\n    };\n\n    this._ws.onmessage = this._onWSMessage;\n    this._ws.onopen = this._onWSOpen;\n    this._ws.onclose = earlyClose;\n    this._ws.onerror = earlyClose;\n  };\n\n  /**\n   * Handle connection status changes.\n   */\n  private _updateConnectionStatus(\n    connectionStatus: Kernel.ConnectionStatus\n  ): void {\n    if (this._connectionStatus === connectionStatus) {\n      return;\n    }\n\n    this._connectionStatus = connectionStatus;\n\n    // If we are not 'connecting', reset any reconnection attempts.\n    if (connectionStatus !== 'connecting') {\n      this._reconnectAttempt = 0;\n      clearTimeout(this._reconnectTimeout);\n    }\n\n    if (this.status !== 'dead') {\n      if (connectionStatus === 'connected') {\n        let restarting = this._kernelSession === RESTARTING_KERNEL_SESSION;\n\n        // Send a kernel info request to make sure we send at least one\n        // message to get kernel status back. Always request kernel info\n        // first, to get kernel status back and ensure iopub is fully\n        // established. If we are restarting, this message will skip the queue\n        // and be sent immediately.\n        let p = this.requestKernelInfo();\n\n        // Send any pending messages after the kernelInfo resolves, or after a\n        // timeout as a failsafe.\n\n        let sendPendingCalled = false;\n        let sendPendingOnce = () => {\n          if (sendPendingCalled) {\n            return;\n          }\n          sendPendingCalled = true;\n          if (restarting && this._kernelSession === RESTARTING_KERNEL_SESSION) {\n            // We were restarting and a message didn't arrive to set the\n            // session, but we just assume the restart succeeded and send any\n            // pending messages.\n\n            // FIXME: it would be better to retry the kernel_info_request here\n            this._kernelSession = '';\n          }\n          clearTimeout(timeoutHandle);\n          if (this._pendingMessages.length > 0) {\n            this._sendPending();\n          }\n        };\n        void p.then(sendPendingOnce);\n        // FIXME: if sent while zmq subscriptions are not established,\n        // kernelInfo may not resolve, so use a timeout to ensure we don't hang forever.\n        // It may be preferable to retry kernelInfo rather than give up after one timeout.\n        let timeoutHandle = setTimeout(sendPendingOnce, KERNEL_INFO_TIMEOUT);\n      } else {\n        // If the connection is down, then we do not know what is happening\n        // with the kernel, so set the status to unknown.\n        this._updateStatus('unknown');\n      }\n    }\n\n    // Notify others that the connection status changed.\n    this._connectionStatusChanged.emit(connectionStatus);\n  }\n\n  private async _handleMessage(msg: KernelMessage.IMessage): Promise<void> {\n    let handled = false;\n\n    // Check to see if we have a display_id we need to reroute.\n    if (\n      msg.parent_header &&\n      msg.channel === 'iopub' &&\n      (KernelMessage.isDisplayDataMsg(msg) ||\n        KernelMessage.isUpdateDisplayDataMsg(msg) ||\n        KernelMessage.isExecuteResultMsg(msg))\n    ) {\n      // display_data messages may re-route based on their display_id.\n      const transient = (msg.content.transient ?? {}) as JSONObject;\n      const displayId = transient['display_id'] as string;\n      if (displayId) {\n        handled = await this._handleDisplayId(displayId, msg);\n        // The await above may make this message out of date, so check again.\n        this._assertCurrentMessage(msg);\n      }\n    }\n\n    if (!handled && msg.parent_header) {\n      const parentHeader = msg.parent_header as KernelMessage.IHeader;\n      const future = this._futures?.get(parentHeader.msg_id);\n      if (future) {\n        await future.handleMsg(msg);\n        this._assertCurrentMessage(msg);\n      } else {\n        // If the message was sent by us and was not iopub, it is orphaned.\n        const owned = parentHeader.session === this.clientId;\n        if (msg.channel !== 'iopub' && owned) {\n          this._unhandledMessage.emit(msg);\n        }\n      }\n    }\n    if (msg.channel === 'iopub') {\n      switch (msg.header.msg_type) {\n        case 'status': {\n          // Updating the status is synchronous, and we call no async user code\n          const executionState = (msg as KernelMessage.IStatusMsg).content\n            .execution_state;\n          if (executionState === 'restarting') {\n            // The kernel has been auto-restarted by the server. After\n            // processing for this message is completely done, we want to\n            // handle this restart, so we don't await, but instead schedule\n            // the work as a microtask (i.e., in a promise resolution). We\n            // schedule this here so that it comes before any microtasks that\n            // might be scheduled in the status signal emission below.\n            void Promise.resolve().then(async () => {\n              this._updateStatus('autorestarting');\n              this._clearKernelState();\n\n              // We must reconnect since the kernel connection information may have\n              // changed, and the server only refreshes its zmq connection when a new\n              // websocket is opened.\n              await this.reconnect();\n            });\n          }\n          this._updateStatus(executionState);\n          break;\n        }\n        case 'comm_open':\n          if (this.handleComms) {\n            await this._handleCommOpen(msg as KernelMessage.ICommOpenMsg);\n          }\n          break;\n        case 'comm_msg':\n          if (this.handleComms) {\n            await this._handleCommMsg(msg as KernelMessage.ICommMsgMsg);\n          }\n          break;\n        case 'comm_close':\n          if (this.handleComms) {\n            await this._handleCommClose(msg as KernelMessage.ICommCloseMsg);\n          }\n          break;\n        default:\n          break;\n      }\n      // If the message was a status dead message, we might have disposed ourselves.\n      if (!this.isDisposed) {\n        this._assertCurrentMessage(msg);\n        // the message wouldn't be emitted if we were disposed anyway.\n        this._iopubMessage.emit(msg as KernelMessage.IIOPubMessage);\n      }\n    }\n  }\n\n  /**\n   * Attempt a connection if we have not exhausted connection attempts.\n   */\n  private _reconnect() {\n    this._errorIfDisposed();\n\n    // Clear any existing reconnection attempt\n    clearTimeout(this._reconnectTimeout);\n\n    // Update the connection status and schedule a possible reconnection.\n    if (this._reconnectAttempt < this._reconnectLimit) {\n      this._updateConnectionStatus('connecting');\n\n      // The first reconnect attempt should happen immediately, and subsequent\n      // attempts should pick a random number in a growing range so that we\n      // don't overload the server with synchronized reconnection attempts\n      // across multiple kernels.\n      const timeout = Private.getRandomIntInclusive(\n        0,\n        1e3 * (Math.pow(2, this._reconnectAttempt) - 1)\n      );\n      console.warn(\n        `Connection lost, reconnecting in ${Math.floor(\n          timeout / 1000\n        )} seconds.`\n      );\n      // Try reconnection with subprotocols if the server had supported them.\n      // Otherwise, try reconnection without subprotocols.\n      const useProtocols = this._selectedProtocol !== '' ? true : false;\n      this._reconnectTimeout = setTimeout(\n        this._createSocket,\n        timeout,\n        useProtocols\n      );\n      this._reconnectAttempt += 1;\n    } else {\n      this._updateConnectionStatus('disconnected');\n    }\n\n    // Clear the websocket event handlers and the socket itself.\n    this._clearSocket();\n  }\n\n  /**\n   * Utility function to throw an error if this instance is disposed.\n   */\n  private _errorIfDisposed() {\n    if (this.isDisposed) {\n      throw new Error('Kernel connection is disposed');\n    }\n  }\n\n  // Make websocket callbacks arrow functions so they bind `this`.\n\n  /**\n   * Handle a websocket open event.\n   */\n  private _onWSOpen = (evt: Event) => {\n    if (\n      this._ws!.protocol !== '' &&\n      !this._supportedProtocols.includes(this._ws!.protocol)\n    ) {\n      console.log(\n        'Server selected unknown kernel wire protocol:',\n        this._ws!.protocol\n      );\n      this._updateStatus('dead');\n      throw new Error(`Unknown kernel wire protocol:  ${this._ws!.protocol}`);\n    }\n    // Remember the kernel wire protocol selected by the server.\n    this._selectedProtocol = this._ws!.protocol;\n    this._ws!.onclose = this._onWSClose;\n    this._ws!.onerror = this._onWSClose;\n    this._updateConnectionStatus('connected');\n  };\n\n  /**\n   * Handle a websocket message, validating and routing appropriately.\n   */\n  private _onWSMessage = (evt: MessageEvent) => {\n    // Notify immediately if there is an error with the message.\n    let msg: KernelMessage.IMessage;\n    try {\n      msg = this.serverSettings.serializer.deserialize(\n        evt.data,\n        this._ws!.protocol\n      );\n      validate.validateMessage(msg);\n    } catch (error) {\n      error.message = `Kernel message validation error: ${error.message}`;\n      // We throw the error so that it bubbles up to the top, and displays the right stack.\n      throw error;\n    }\n\n    // Update the current kernel session id\n    this._kernelSession = msg.header.session;\n\n    // Handle the message asynchronously, in the order received.\n    this._msgChain = this._msgChain\n      .then(() => {\n        // Return so that any promises from handling a message are fulfilled\n        // before proceeding to the next message.\n        return this._handleMessage(msg);\n      })\n      .catch(error => {\n        // Log any errors in handling the message, thus resetting the _msgChain\n        // promise so we can process more messages.\n        // Ignore the \"Canceled\" errors that are thrown during kernel dispose.\n        if (error.message.startsWith('Canceled future for ')) {\n          console.error(error);\n        }\n      });\n\n    // Emit the message receive signal\n    this._anyMessage.emit({ msg, direction: 'recv' });\n  };\n\n  /**\n   * Handle a websocket close event.\n   */\n  private _onWSClose = (evt: Event) => {\n    if (!this.isDisposed) {\n      this._reconnect();\n    }\n  };\n\n  get hasPendingInput(): boolean {\n    return this._hasPendingInput;\n  }\n  set hasPendingInput(value: boolean) {\n    this._hasPendingInput = value;\n    this._pendingInput.emit(value);\n  }\n\n  private _id = '';\n  private _name = '';\n  private _model: Kernel.IModel | undefined;\n  private _status: KernelMessage.Status = 'unknown';\n  private _connectionStatus: Kernel.ConnectionStatus = 'connecting';\n  private _kernelSession = '';\n  private _clientId: string;\n  private _isDisposed = false;\n  /**\n   * Websocket to communicate with kernel.\n   */\n  private _ws: WebSocket | null = null;\n  private _username = '';\n  private _reconnectLimit = 7;\n  private _reconnectAttempt = 0;\n  private _reconnectTimeout: any = null;\n  private _supportedProtocols: string[] = Object.values(\n    KernelMessage.supportedKernelWebSocketProtocols\n  );\n  private _selectedProtocol: string = '';\n\n  private _futures = new Map<\n    string,\n    KernelFutureHandler<\n      KernelMessage.IShellControlMessage,\n      KernelMessage.IShellControlMessage\n    >\n  >();\n  private _comms = new Map<string, Kernel.IComm>();\n  private _targetRegistry: {\n    [key: string]: (\n      comm: Kernel.IComm,\n      msg: KernelMessage.ICommOpenMsg\n    ) => void;\n  } = Object.create(null);\n  private _info = new PromiseDelegate<KernelMessage.IInfoReply>();\n  private _pendingMessages: KernelMessage.IMessage[] = [];\n  private _specPromise: Promise<KernelSpec.ISpecModel | undefined>;\n  private _statusChanged = new Signal<this, KernelMessage.Status>(this);\n  private _connectionStatusChanged = new Signal<this, Kernel.ConnectionStatus>(\n    this\n  );\n  private _disposed = new Signal<this, void>(this);\n  private _iopubMessage = new Signal<this, KernelMessage.IIOPubMessage>(this);\n  private _anyMessage = new Signal<this, Kernel.IAnyMessageArgs>(this);\n  private _pendingInput = new Signal<this, boolean>(this);\n  private _unhandledMessage = new Signal<this, KernelMessage.IMessage>(this);\n  private _displayIdToParentIds = new Map<string, string[]>();\n  private _msgIdToDisplayIds = new Map<string, string[]>();\n  private _msgChain: Promise<void> = Promise.resolve();\n  private _hasPendingInput = false;\n  private _reason = '';\n  private _noOp = () => {\n    /* no-op */\n  };\n}\n\n/**\n * A private namespace for the Kernel.\n */\nnamespace Private {\n  /**\n   * Log the current kernel status.\n   */\n  export function logKernelStatus(kernel: Kernel.IKernelConnection): void {\n    switch (kernel.status) {\n      case 'idle':\n      case 'busy':\n      case 'unknown':\n        return;\n      default:\n        console.debug(`Kernel: ${kernel.status} (${kernel.id})`);\n        break;\n    }\n  }\n\n  /**\n   * Send a kernel message to the kernel and resolve the reply message.\n   */\n  export async function handleShellMessage<\n    T extends KernelMessage.ShellMessageType\n  >(\n    kernel: Kernel.IKernelConnection,\n    msg: KernelMessage.IShellMessage<T>\n  ): Promise<KernelMessage.IShellMessage<KernelMessage.ShellMessageType>> {\n    const future = kernel.sendShellMessage(msg, true);\n    return future.done;\n  }\n\n  /**\n   * Try to load an object from a module or a registry.\n   *\n   * Try to load an object from a module asynchronously if a module\n   * is specified, otherwise tries to load an object from the global\n   * registry, if the global registry is provided.\n   *\n   * #### Notes\n   * Loading a module uses requirejs.\n   */\n  export function loadObject(\n    name: string,\n    moduleName: string | undefined,\n    registry?: { [key: string]: any }\n  ): Promise<any> {\n    return new Promise((resolve, reject) => {\n      // Try loading the module using require.js\n      if (moduleName) {\n        if (typeof requirejs === 'undefined') {\n          throw new Error('requirejs not found');\n        }\n        requirejs(\n          [moduleName],\n          (mod: any) => {\n            if (mod[name] === void 0) {\n              const msg = `Object '${name}' not found in module '${moduleName}'`;\n              reject(new Error(msg));\n            } else {\n              resolve(mod[name]);\n            }\n          },\n          reject\n        );\n      } else {\n        if (registry?.[name]) {\n          resolve(registry[name]);\n        } else {\n          reject(new Error(`Object '${name}' not found in registry`));\n        }\n      }\n    });\n  }\n\n  /**\n   * Get a random integer between min and max, inclusive of both.\n   *\n   * #### Notes\n   * From\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random#Getting_a_random_integer_between_two_values_inclusive\n   *\n   * From the MDN page: It might be tempting to use Math.round() to accomplish\n   * that, but doing so would cause your random numbers to follow a non-uniform\n   * distribution, which may not be acceptable for your needs.\n   */\n  export function getRandomIntInclusive(min: number, max: number): number {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { Poll } from '@lumino/polling';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { ServerConnection } from '..';\nimport * as Kernel from './kernel';\nimport { BaseManager } from '../basemanager';\nimport {\n  IKernelOptions,\n  listRunning,\n  shutdownKernel,\n  startNew\n} from './restapi';\nimport { KernelConnection } from './default';\n\n/**\n * An implementation of a kernel manager.\n */\nexport class KernelManager extends BaseManager implements Kernel.IManager {\n  /**\n   * Construct a new kernel manager.\n   *\n   * @param options - The default options for kernel.\n   */\n  constructor(options: KernelManager.IOptions = {}) {\n    super(options);\n\n    // Start model and specs polling with exponential backoff.\n    this._pollModels = new Poll({\n      auto: false,\n      factory: () => this.requestRunning(),\n      frequency: {\n        interval: 10 * 1000,\n        backoff: true,\n        max: 300 * 1000\n      },\n      name: `@jupyterlab/services:KernelManager#models`,\n      standby: options.standby ?? 'when-hidden'\n    });\n\n    // Initialize internal data.\n    this._ready = (async () => {\n      await this._pollModels.start();\n      await this._pollModels.tick;\n      this._isReady = true;\n    })();\n  }\n\n  /**\n   * The server settings for the manager.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n\n  /**\n   * Test whether the manager is ready.\n   */\n  get isReady(): boolean {\n    return this._isReady;\n  }\n\n  /**\n   * A promise that fulfills when the manager is ready.\n   */\n  get ready(): Promise<void> {\n    return this._ready;\n  }\n\n  /**\n   * A signal emitted when the running kernels change.\n   */\n  get runningChanged(): ISignal<this, Kernel.IModel[]> {\n    return this._runningChanged;\n  }\n\n  /**\n   * A signal emitted when there is a connection failure.\n   */\n  get connectionFailure(): ISignal<this, Error> {\n    return this._connectionFailure;\n  }\n\n  /**\n   * Dispose of the resources used by the manager.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._models.clear();\n    this._kernelConnections.forEach(x => x.dispose());\n    this._pollModels.dispose();\n    super.dispose();\n  }\n\n  /**\n   * Connect to an existing kernel.\n   *\n   * @returns The new kernel connection.\n   *\n   * #### Notes\n   * This will use the manager's server settings and ignore any server\n   * settings passed in the options.\n   */\n  connectTo(\n    options: Omit<Kernel.IKernelConnection.IOptions, 'serverSettings'>\n  ): Kernel.IKernelConnection {\n    const { id } = options.model;\n\n    let handleComms = options.handleComms ?? true;\n    // By default, handle comms only if no other kernel connection is.\n    if (options.handleComms === undefined) {\n      for (const kc of this._kernelConnections) {\n        if (kc.id === id && kc.handleComms) {\n          handleComms = false;\n          break;\n        }\n      }\n    }\n    const kernelConnection = new KernelConnection({\n      handleComms,\n      ...options,\n      serverSettings: this.serverSettings\n    });\n    this._onStarted(kernelConnection);\n    if (!this._models.has(id)) {\n      // We trust the user to connect to an existing kernel, but we verify\n      // asynchronously.\n      void this.refreshRunning().catch(() => {\n        /* no-op */\n      });\n    }\n    return kernelConnection;\n  }\n\n  /**\n   * Create an iterator over the most recent running kernels.\n   *\n   * @returns A new iterator over the running kernels.\n   */\n  running(): IterableIterator<Kernel.IModel> {\n    return this._models.values();\n  }\n\n  /**\n   * Force a refresh of the running kernels.\n   *\n   * @returns A promise that resolves when the running list has been refreshed.\n   *\n   * #### Notes\n   * This is not typically meant to be called by the user, since the\n   * manager maintains its own internal state.\n   */\n  async refreshRunning(): Promise<void> {\n    await this._pollModels.refresh();\n    await this._pollModels.tick;\n  }\n\n  /**\n   * Start a new kernel.\n   *\n   * @param createOptions - The kernel creation options\n   *\n   * @param connectOptions - The kernel connection options\n   *\n   * @returns A promise that resolves with the kernel connection.\n   *\n   * #### Notes\n   * The manager `serverSettings` will be always be used.\n   */\n  async startNew(\n    createOptions: IKernelOptions = {},\n    connectOptions: Omit<\n      Kernel.IKernelConnection.IOptions,\n      'model' | 'serverSettings'\n    > = {}\n  ): Promise<Kernel.IKernelConnection> {\n    const model = await startNew(createOptions, this.serverSettings);\n    return this.connectTo({\n      ...connectOptions,\n      model\n    });\n  }\n\n  /**\n   * Shut down a kernel by id.\n   *\n   * @param id - The id of the target kernel.\n   *\n   * @returns A promise that resolves when the operation is complete.\n   */\n  async shutdown(id: string): Promise<void> {\n    await shutdownKernel(id, this.serverSettings);\n    await this.refreshRunning();\n  }\n\n  /**\n   * Shut down all kernels.\n   *\n   * @returns A promise that resolves when all of the kernels are shut down.\n   */\n  async shutdownAll(): Promise<void> {\n    // Update the list of models to make sure our list is current.\n    await this.refreshRunning();\n\n    // Shut down all models.\n    await Promise.all(\n      [...this._models.keys()].map(id =>\n        shutdownKernel(id, this.serverSettings)\n      )\n    );\n\n    // Update the list of models to clear out our state.\n    await this.refreshRunning();\n  }\n\n  /**\n   * Find a kernel by id.\n   *\n   * @param id - The id of the target kernel.\n   *\n   * @returns A promise that resolves with the kernel's model.\n   */\n  async findById(id: string): Promise<Kernel.IModel | undefined> {\n    if (this._models.has(id)) {\n      return this._models.get(id);\n    }\n    await this.refreshRunning();\n    return this._models.get(id);\n  }\n\n  /**\n   * Execute a request to the server to poll running kernels and update state.\n   */\n  protected async requestRunning(): Promise<void> {\n    let models: Kernel.IModel[];\n    try {\n      models = await listRunning(this.serverSettings);\n    } catch (err) {\n      // Handle network errors, as well as cases where we are on a\n      // JupyterHub and the server is not running. JupyterHub returns a\n      // 503 (<2.0) or 424 (>2.0) in that case.\n      if (\n        err instanceof ServerConnection.NetworkError ||\n        err.response?.status === 503 ||\n        err.response?.status === 424\n      ) {\n        this._connectionFailure.emit(err);\n      }\n      throw err;\n    }\n\n    if (this.isDisposed) {\n      return;\n    }\n\n    if (\n      this._models.size === models.length &&\n      models.every(model => {\n        const existing = this._models.get(model.id);\n        if (!existing) {\n          return false;\n        }\n        return (\n          existing.connections === model.connections &&\n          existing.execution_state === model.execution_state &&\n          existing.last_activity === model.last_activity &&\n          existing.name === model.name &&\n          existing.reason === model.reason &&\n          existing.traceback === model.traceback\n        );\n      })\n    ) {\n      // Identical models list (presuming models does not contain duplicate\n      // ids), so just return\n      return;\n    }\n\n    this._models = new Map(models.map(x => [x.id, x]));\n\n    // For any kernel connection to a kernel that doesn't exist, notify it of\n    // the shutdown.\n    this._kernelConnections.forEach(kc => {\n      if (!this._models.has(kc.id)) {\n        kc.handleShutdown();\n      }\n    });\n\n    this._runningChanged.emit(models);\n  }\n\n  /**\n   * Handle a kernel starting.\n   */\n  private _onStarted(kernelConnection: KernelConnection): void {\n    this._kernelConnections.add(kernelConnection);\n    kernelConnection.statusChanged.connect(this._onStatusChanged, this);\n    kernelConnection.disposed.connect(this._onDisposed, this);\n  }\n\n  private _onDisposed(kernelConnection: KernelConnection) {\n    this._kernelConnections.delete(kernelConnection);\n    // A dispose emission could mean the server session is deleted, or that\n    // the kernel JS object is disposed and the kernel still exists on the\n    // server, so we refresh from the server to make sure we reflect the\n    // server state.\n\n    void this.refreshRunning().catch(() => {\n      /* no-op */\n    });\n  }\n\n  private _onStatusChanged(\n    kernelConnection: KernelConnection,\n    status: Kernel.Status\n  ) {\n    if (status === 'dead') {\n      // We asynchronously update our list of kernels, which asynchronously\n      // will dispose them. We do not want to immediately dispose them because\n      // there may be other signal handlers that want to be called.\n      void this.refreshRunning().catch(() => {\n        /* no-op */\n      });\n    }\n  }\n\n  private _isReady = false;\n  private _ready: Promise<void>;\n  private _kernelConnections = new Set<KernelConnection>();\n  private _models = new Map<string, Kernel.IModel>();\n  private _pollModels: Poll;\n  private _runningChanged = new Signal<this, Kernel.IModel[]>(this);\n  private _connectionFailure = new Signal<this, Error>(this);\n}\n\n/**\n * The namespace for `KernelManager` class statics.\n */\nexport namespace KernelManager {\n  /**\n   * The options used to initialize a KernelManager.\n   */\n  export interface IOptions extends BaseManager.IOptions {\n    /**\n     * When the manager stops polling the API. Defaults to `when-hidden`.\n     */\n    standby?: Poll.Standby | (() => boolean | Poll.Standby);\n  }\n\n  /**\n   * A no-op kernel manager to be used when starting kernels.\n   */\n  export class NoopManager extends KernelManager {\n    /**\n     * Whether the manager is active.\n     */\n    get isActive(): boolean {\n      return false;\n    }\n\n    /**\n     * Used for testing.\n     */\n    get parentReady(): Promise<void> {\n      return super.ready;\n    }\n\n    /**\n     * Start a new kernel - throws an error since it is not supported.\n     */\n    async startNew(\n      createOptions: IKernelOptions = {},\n      connectOptions: Omit<\n        Kernel.IKernelConnection.IOptions,\n        'model' | 'serverSettings'\n      > = {}\n    ): Promise<Kernel.IKernelConnection> {\n      return Promise.reject(\n        new Error('Not implemented in no-op Kernel Manager')\n      );\n    }\n\n    /**\n     * Connect to an existing kernel - throws an error since it is not supported.\n     */\n    connectTo(\n      options: Omit<Kernel.IKernelConnection.IOptions, 'serverSettings'>\n    ): Kernel.IKernelConnection {\n      throw new Error('Not implemented in no-op Kernel Manager');\n    }\n\n    /**\n     * Shut down a kernel by id - throws an error since it is not supported.\n     */\n    async shutdown(id: string): Promise<void> {\n      return Promise.reject(\n        new Error('Not implemented in no-op Kernel Manager')\n      );\n    }\n\n    /**\n     * A promise that fulfills when the manager is ready (never).\n     */\n    get ready(): Promise<void> {\n      return this.parentReady.then(() => this._readyPromise);\n    }\n\n    /**\n     * Execute a request to the server to poll running kernels and update state.\n     */\n    protected async requestRunning(): Promise<void> {\n      return Promise.resolve();\n    }\n\n    private _readyPromise = new Promise<void>(() => {\n      /* no-op */\n    });\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n// Namespace some of our modules for convenience and backwards compatibility.\nimport * as Kernel from './kernel';\nimport * as KernelMessage from './messages';\nimport * as KernelAPI from './restapi';\nimport { KernelConnection } from './default';\n\nexport * from './manager';\nexport { Kernel, KernelMessage, KernelAPI, KernelConnection };\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\n\nimport { ServerConnection } from '../serverconnection';\n\n/**\n * The url for the lab build service.\n */\nconst BUILD_SETTINGS_URL = 'api/build';\n\n/**\n * The build API service manager.\n */\nexport class BuildManager {\n  /**\n   * Create a new setting manager.\n   */\n  constructor(options: BuildManager.IOptions = {}) {\n    this.serverSettings =\n      options.serverSettings ?? ServerConnection.makeSettings();\n    const { baseUrl, appUrl } = this.serverSettings;\n    this._url = URLExt.join(baseUrl, appUrl, BUILD_SETTINGS_URL);\n  }\n\n  /**\n   * The server settings used to make API requests.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n\n  /**\n   * Test whether the build service is available.\n   */\n  get isAvailable(): boolean {\n    return PageConfig.getOption('buildAvailable').toLowerCase() === 'true';\n  }\n\n  /**\n   * Test whether to check build status automatically.\n   */\n  get shouldCheck(): boolean {\n    return PageConfig.getOption('buildCheck').toLowerCase() === 'true';\n  }\n\n  /**\n   * Get whether the application should be built.\n   */\n  getStatus(): Promise<BuildManager.IStatus> {\n    const { _url, serverSettings } = this;\n    const promise = ServerConnection.makeRequest(_url, {}, serverSettings);\n\n    return promise\n      .then(response => {\n        if (response.status !== 200) {\n          throw new ServerConnection.ResponseError(response);\n        }\n\n        return response.json();\n      })\n      .then(data => {\n        if (typeof data.status !== 'string') {\n          throw new Error('Invalid data');\n        }\n        if (typeof data.message !== 'string') {\n          throw new Error('Invalid data');\n        }\n        return data;\n      });\n  }\n\n  /**\n   * Build the application.\n   */\n  build(): Promise<void> {\n    const { _url, serverSettings } = this;\n    const init = { method: 'POST' };\n    const promise = ServerConnection.makeRequest(_url, init, serverSettings);\n\n    return promise.then(response => {\n      if (response.status === 400) {\n        throw new ServerConnection.ResponseError(response, 'Build aborted');\n      }\n      if (response.status !== 200) {\n        const message = `Build failed with ${response.status}.\n\n        If you are experiencing the build failure after installing an extension (or trying to include previously installed extension after updating JupyterLab) please check the extension repository for new installation instructions as many extensions migrated to the prebuilt extensions system which no longer requires rebuilding JupyterLab (but uses a different installation procedure, typically involving a package manager such as 'pip' or 'conda').\n\n        If you specifically intended to install a source extension, please run 'jupyter lab build' on the server for full output.`;\n        throw new ServerConnection.ResponseError(response, message);\n      }\n    });\n  }\n\n  /**\n   * Cancel an active build.\n   */\n  cancel(): Promise<void> {\n    const { _url, serverSettings } = this;\n    const init = { method: 'DELETE' };\n    const promise = ServerConnection.makeRequest(_url, init, serverSettings);\n\n    return promise.then(response => {\n      if (response.status !== 204) {\n        throw new ServerConnection.ResponseError(response);\n      }\n    });\n  }\n\n  private _url = '';\n}\n\n/**\n * A namespace for `BuildManager` statics.\n */\nexport namespace BuildManager {\n  /**\n   * The instantiation options for a setting manager.\n   */\n  export interface IOptions {\n    /**\n     * The server settings used to make API requests.\n     */\n    serverSettings?: ServerConnection.ISettings;\n  }\n\n  /**\n   * The build status response from the server.\n   */\n  export interface IStatus {\n    /**\n     * Whether a build is needed.\n     */\n    readonly status: 'stable' | 'needed' | 'building';\n\n    /**\n     * The message associated with the build status.\n     */\n    readonly message: string;\n  }\n}\n\n/**\n * A namespace for builder API interfaces.\n */\nexport namespace Builder {\n  /**\n   * The interface for the build manager.\n   */\n  export interface IManager extends BuildManager {}\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { URLExt } from '@jupyterlab/coreutils';\n\nimport { ServerConnection } from '../serverconnection';\n\nimport { PromiseDelegate } from '@lumino/coreutils';\n\n/**\n * The url for the lab nbconvert service.\n */\nconst NBCONVERT_SETTINGS_URL = 'api/nbconvert';\n\n/**\n * The nbconvert API service manager.\n */\nexport class NbConvertManager {\n  /**\n   * Create a new nbconvert manager.\n   */\n  constructor(options: NbConvertManager.IOptions = {}) {\n    this.serverSettings =\n      options.serverSettings ?? ServerConnection.makeSettings();\n  }\n\n  /**\n   * The server settings used to make API requests.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n\n  /**\n   * Fetch and cache the export formats from the expensive nbconvert handler.\n   */\n  protected async fetchExportFormats(): Promise<NbConvertManager.IExportFormats> {\n    this._requestingFormats = new PromiseDelegate();\n    this._exportFormats = null;\n    const base = this.serverSettings.baseUrl;\n    const url = URLExt.join(base, NBCONVERT_SETTINGS_URL);\n    const { serverSettings } = this;\n    const response = await ServerConnection.makeRequest(\n      url,\n      {},\n      serverSettings\n    );\n    if (response.status !== 200) {\n      const err = await ServerConnection.ResponseError.create(response);\n      throw err;\n    }\n    const data = await response.json();\n    const exportList: NbConvertManager.IExportFormats = {};\n    const keys = Object.keys(data);\n    keys.forEach(function (key) {\n      const mimeType: string = data[key].output_mimetype;\n      exportList[key] = { output_mimetype: mimeType };\n    });\n    this._exportFormats = exportList;\n    this._requestingFormats.resolve(exportList);\n    return exportList;\n  }\n\n  /**\n   * Get the list of export formats, preferring pre-cached ones.\n   */\n  async getExportFormats(\n    force: boolean = true\n  ): Promise<NbConvertManager.IExportFormats> {\n    if (this._requestingFormats) {\n      return this._requestingFormats.promise;\n    }\n\n    if (force || !this._exportFormats) {\n      return await this.fetchExportFormats();\n    }\n\n    return this._exportFormats;\n  }\n\n  protected _requestingFormats: PromiseDelegate<NbConvertManager.IExportFormats> | null;\n  protected _exportFormats: NbConvertManager.IExportFormats | null = null;\n}\n\n/**\n * A namespace for `BuildManager` statics.\n */\nexport namespace NbConvertManager {\n  /**\n   * The instantiation options for a setting manager.\n   */\n  export interface IOptions {\n    /**\n     * The server settings used to make API requests.\n     */\n    serverSettings?: ServerConnection.ISettings;\n  }\n\n  /**\n   * A namespace for nbconvert API interfaces.\n   */\n  export interface IExportFormats {\n    /**\n     * The list of supported export formats.\n     */\n    [key: string]: { output_mimetype: string };\n  }\n}\n\n/**\n * A namespace for builder API interfaces.\n */\nexport namespace NbConvert {\n  /**\n   * The interface for the build manager.\n   */\n  export interface IManager extends NbConvertManager {}\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { validateModel as validateKernelModel } from '../kernel/validate';\n\nimport * as Session from './session';\n\nimport { validateProperty } from '../validate';\n\n/**\n * Validate an `Session.IModel` object.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function validateModel(data: any): asserts data is Session.IModel {\n  validateProperty(data, 'id', 'string');\n  validateProperty(data, 'type', 'string');\n  validateProperty(data, 'name', 'string');\n  validateProperty(data, 'path', 'string');\n  validateProperty(data, 'kernel', 'object');\n  validateKernelModel(data.kernel);\n}\n\n/**\n * Update model from legacy session data.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function updateLegacySessionModel(data: any): void {\n  if (data.path === undefined && data.notebook !== undefined) {\n    data.path = data.notebook.path;\n    data.type = 'notebook';\n    data.name = '';\n  }\n}\n\n/**\n * Validate an array of `Session.IModel` objects.\n */\nexport function validateModels(\n  models: Session.IModel[]\n): asserts models is Session.IModel[] {\n  if (!Array.isArray(models)) {\n    throw new Error('Invalid session list');\n  }\n  models.forEach(d => validateModel(d));\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { ServerConnection } from '../serverconnection';\nimport { Session } from '.';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { updateLegacySessionModel, validateModel } from './validate';\n\ntype DeepPartial<T> = {\n  [P in keyof T]?: DeepPartial<T[P]>;\n};\n\n/**\n * The url for the session service.\n */\nexport const SESSION_SERVICE_URL = 'api/sessions';\n\n/**\n * List the running sessions.\n */\nexport async function listRunning(\n  settings: ServerConnection.ISettings = ServerConnection.makeSettings()\n): Promise<Session.IModel[]> {\n  const url = URLExt.join(settings.baseUrl, SESSION_SERVICE_URL);\n  const response = await ServerConnection.makeRequest(url, {}, settings);\n  if (response.status !== 200) {\n    const err = await ServerConnection.ResponseError.create(response);\n    throw err;\n  }\n  const data = await response.json();\n  if (!Array.isArray(data)) {\n    throw new Error('Invalid Session list');\n  }\n  data.forEach(m => {\n    updateLegacySessionModel(m);\n    validateModel(m);\n  });\n  return data;\n}\n\n/**\n * Get a session url.\n */\nexport function getSessionUrl(baseUrl: string, id: string): string {\n  const servicesBase = URLExt.join(baseUrl, SESSION_SERVICE_URL);\n  const result = URLExt.join(servicesBase, id);\n  if (!result.startsWith(servicesBase)) {\n    throw new Error('Can only be used for services requests');\n  }\n  return result;\n}\n\n/**\n * Shut down a session by id.\n */\nexport async function shutdownSession(\n  id: string,\n  settings: ServerConnection.ISettings = ServerConnection.makeSettings()\n): Promise<void> {\n  const url = getSessionUrl(settings.baseUrl, id);\n  const init = { method: 'DELETE' };\n  const response = await ServerConnection.makeRequest(url, init, settings);\n\n  if (response.status === 404) {\n    const data = await response.json();\n    const msg =\n      data.message ?? `The session \"${id}\"\" does not exist on the server`;\n    console.warn(msg);\n  } else if (response.status === 410) {\n    throw new ServerConnection.ResponseError(\n      response,\n      'The kernel was deleted but the session was not'\n    );\n  } else if (response.status !== 204) {\n    const err = await ServerConnection.ResponseError.create(response);\n    throw err;\n  }\n}\n\n/**\n * Get a full session model from the server by session id string.\n */\nexport async function getSessionModel(\n  id: string,\n  settings: ServerConnection.ISettings = ServerConnection.makeSettings()\n): Promise<Session.IModel> {\n  const url = getSessionUrl(settings.baseUrl, id);\n  const response = await ServerConnection.makeRequest(url, {}, settings);\n  if (response.status !== 200) {\n    const err = await ServerConnection.ResponseError.create(response);\n    throw err;\n  }\n  const data = await response.json();\n  updateLegacySessionModel(data);\n  validateModel(data);\n  return data;\n}\n\n/**\n * Create a new session, or return an existing session if the session path\n * already exists.\n */\nexport async function startSession(\n  options: Session.ISessionOptions,\n  settings: ServerConnection.ISettings = ServerConnection.makeSettings()\n): Promise<Session.IModel> {\n  const url = URLExt.join(settings.baseUrl, SESSION_SERVICE_URL);\n  const init = {\n    method: 'POST',\n    body: JSON.stringify(options)\n  };\n  const response = await ServerConnection.makeRequest(url, init, settings);\n  if (response.status !== 201) {\n    const err = await ServerConnection.ResponseError.create(response);\n    throw err;\n  }\n  const data = await response.json();\n  updateLegacySessionModel(data);\n  validateModel(data);\n  return data;\n}\n\n/**\n * Send a PATCH to the server, updating the session path or the kernel.\n */\nexport async function updateSession(\n  model: Pick<Session.IModel, 'id'> & DeepPartial<Omit<Session.IModel, 'id'>>,\n  settings: ServerConnection.ISettings = ServerConnection.makeSettings()\n): Promise<Session.IModel> {\n  const url = getSessionUrl(settings.baseUrl, model.id);\n  const init = {\n    method: 'PATCH',\n    body: JSON.stringify(model)\n  };\n  const response = await ServerConnection.makeRequest(url, init, settings);\n  if (response.status !== 200) {\n    const err = await ServerConnection.ResponseError.create(response);\n    throw err;\n  }\n  const data = await response.json();\n  updateLegacySessionModel(data);\n  validateModel(data);\n  return data;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { Kernel, KernelMessage } from '../kernel';\n\nimport { ServerConnection } from '..';\n\nimport * as Session from './session';\n\nimport { shutdownSession, updateSession } from './restapi';\nimport { UUID } from '@lumino/coreutils';\n\ntype DeepPartial<T> = {\n  [P in keyof T]?: DeepPartial<T[P]>;\n};\n\n/**\n * Session object for accessing the session REST api. The session\n * should be used to start kernels and then shut them down -- for\n * all other kernel operations, the kernel object should be used.\n */\nexport class SessionConnection implements Session.ISessionConnection {\n  /**\n   * Construct a new session.\n   */\n  constructor(options: Session.ISessionConnection.IOptions) {\n    this._id = options.model.id;\n    this._name = options.model.name;\n    this._path = options.model.path;\n    this._type = options.model.type;\n    this._username = options.username ?? '';\n    this._clientId = options.clientId ?? UUID.uuid4();\n    this._connectToKernel = options.connectToKernel;\n    this._kernelConnectionOptions = options.kernelConnectionOptions ?? {};\n    this.serverSettings =\n      options.serverSettings ?? ServerConnection.makeSettings();\n    this.setupKernel(options.model.kernel);\n  }\n\n  /**\n   * A signal emitted when the session is disposed.\n   */\n  get disposed(): ISignal<this, void> {\n    return this._disposed;\n  }\n\n  /**\n   * A signal emitted when the kernel changes.\n   */\n  get kernelChanged(): ISignal<\n    this,\n    Session.ISessionConnection.IKernelChangedArgs\n  > {\n    return this._kernelChanged;\n  }\n\n  /**\n   * A signal proxied from the connection about the kernel status.\n   */\n  get statusChanged(): ISignal<this, Kernel.Status> {\n    return this._statusChanged;\n  }\n\n  /**\n   * A signal proxied from the kernel about the connection status.\n   */\n  get connectionStatusChanged(): ISignal<this, Kernel.ConnectionStatus> {\n    return this._connectionStatusChanged;\n  }\n\n  /**\n   * A signal proxied from the kernel pending input.\n   */\n  get pendingInput(): ISignal<this, boolean> {\n    return this._pendingInput;\n  }\n\n  /**\n   * A signal proxied from the kernel about iopub kernel messages.\n   */\n  get iopubMessage(): ISignal<this, KernelMessage.IIOPubMessage> {\n    return this._iopubMessage;\n  }\n\n  /**\n   * A signal proxied from the kernel for an unhandled kernel message.\n   */\n  get unhandledMessage(): ISignal<this, KernelMessage.IMessage> {\n    return this._unhandledMessage;\n  }\n\n  /**\n   * A signal proxied from the kernel emitted for any kernel message.\n   *\n   * #### Notes\n   * The behavior is undefined if the message is modified during message\n   * handling. As such, it should be treated as read-only.\n   */\n  get anyMessage(): ISignal<this, Kernel.IAnyMessageArgs> {\n    return this._anyMessage;\n  }\n\n  /**\n   * A signal emitted when a session property changes.\n   */\n  get propertyChanged(): ISignal<this, 'path' | 'name' | 'type'> {\n    return this._propertyChanged;\n  }\n\n  /**\n   * Get the session id.\n   */\n  get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Get the session kernel connection object.\n   *\n   * #### Notes\n   * This is a read-only property, and can be altered by [changeKernel].\n   */\n  get kernel(): Kernel.IKernelConnection | null {\n    return this._kernel;\n  }\n\n  /**\n   * Get the session path.\n   */\n  get path(): string {\n    return this._path;\n  }\n\n  /**\n   * Get the session type.\n   */\n  get type(): string {\n    return this._type;\n  }\n\n  /**\n   * Get the session name.\n   */\n  get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Get the model associated with the session.\n   */\n  get model(): Session.IModel {\n    return {\n      id: this.id,\n      kernel: this.kernel && { id: this.kernel.id, name: this.kernel.name },\n      path: this._path,\n      type: this._type,\n      name: this._name\n    };\n  }\n\n  /**\n   * The server settings of the session.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n\n  /**\n   * Test whether the session has been disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * Update the session based on a session model from the server.\n   *\n   * #### Notes\n   * This only updates this session connection instance. Use `setPath`,\n   * `setName`, `setType`, and `changeKernel` to change the session values on\n   * the server.\n   */\n  update(model: Session.IModel): void {\n    const oldModel = this.model;\n    this._path = model.path;\n    this._name = model.name;\n    this._type = model.type;\n\n    if (\n      (this._kernel === null && model.kernel !== null) ||\n      (this._kernel !== null && model.kernel === null) ||\n      (this._kernel !== null &&\n        model.kernel !== null &&\n        this._kernel.id !== model.kernel.id)\n    ) {\n      if (this._kernel !== null) {\n        this._kernel.dispose();\n      }\n      const oldValue = this._kernel || null;\n      this.setupKernel(model.kernel);\n      const newValue = this._kernel || null;\n      this._kernelChanged.emit({ name: 'kernel', oldValue, newValue });\n    }\n\n    this._handleModelChange(oldModel);\n  }\n\n  /**\n   * Dispose of the resources held by the session.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    this._disposed.emit();\n\n    if (this._kernel) {\n      this._kernel.dispose();\n      const oldValue = this._kernel;\n      this._kernel = null;\n      const newValue = this._kernel;\n      this._kernelChanged.emit({ name: 'kernel', oldValue, newValue });\n    }\n\n    Signal.clearData(this);\n  }\n\n  /**\n   * Change the session path.\n   *\n   * @param path - The new session path.\n   *\n   * @returns A promise that resolves when the session has renamed.\n   *\n   * #### Notes\n   * This uses the Jupyter REST API, and the response is validated.\n   * The promise is fulfilled on a valid response and rejected otherwise.\n   */\n  async setPath(path: string): Promise<void> {\n    if (this.isDisposed) {\n      throw new Error('Session is disposed');\n    }\n    await this._patch({ path });\n  }\n\n  /**\n   * Change the session name.\n   */\n  async setName(name: string): Promise<void> {\n    if (this.isDisposed) {\n      throw new Error('Session is disposed');\n    }\n    await this._patch({ name });\n  }\n\n  /**\n   * Change the session type.\n   */\n  async setType(type: string): Promise<void> {\n    if (this.isDisposed) {\n      throw new Error('Session is disposed');\n    }\n    await this._patch({ type });\n  }\n\n  /**\n   * Change the kernel.\n   *\n   * @param options - The name or id of the new kernel.\n   *\n   * #### Notes\n   * This shuts down the existing kernel and creates a new kernel,\n   * keeping the existing session ID and session path.\n   */\n  async changeKernel(\n    options: Partial<Kernel.IModel>\n  ): Promise<Kernel.IKernelConnection | null> {\n    if (this.isDisposed) {\n      throw new Error('Session is disposed');\n    }\n\n    await this._patch({ kernel: options });\n    return this.kernel;\n  }\n\n  /**\n   * Kill the kernel and shutdown the session.\n   *\n   * @returns - The promise fulfilled on a valid response from the server.\n   *\n   * #### Notes\n   * Uses the [Jupyter Server API](https://petstore.swagger.io/?url=https://raw.githubusercontent.com/jupyter-server/jupyter_server/main/jupyter_server/services/api/api.yaml#!/sessions), and validates the response.\n   * Disposes of the session and emits a [sessionDied] signal on success.\n   */\n  async shutdown(): Promise<void> {\n    if (this.isDisposed) {\n      throw new Error('Session is disposed');\n    }\n    await shutdownSession(this.id, this.serverSettings);\n    this.dispose();\n  }\n\n  /**\n   * Create a new kernel connection and connect to its signals.\n   *\n   * #### Notes\n   * This method is not meant to be subclassed.\n   */\n  protected setupKernel(model: Kernel.IModel | null): void {\n    if (model === null) {\n      this._kernel = null;\n      return;\n    }\n    const kc = this._connectToKernel({\n      ...this._kernelConnectionOptions,\n      model,\n      username: this._username,\n      clientId: this._clientId,\n      serverSettings: this.serverSettings\n    });\n    this._kernel = kc;\n    kc.statusChanged.connect(this.onKernelStatus, this);\n    kc.connectionStatusChanged.connect(this.onKernelConnectionStatus, this);\n    kc.pendingInput.connect(this.onPendingInput, this);\n    kc.unhandledMessage.connect(this.onUnhandledMessage, this);\n    kc.iopubMessage.connect(this.onIOPubMessage, this);\n    kc.anyMessage.connect(this.onAnyMessage, this);\n  }\n\n  /**\n   * Handle to changes in the Kernel status.\n   */\n  protected onKernelStatus(\n    sender: Kernel.IKernelConnection,\n    state: Kernel.Status\n  ): void {\n    this._statusChanged.emit(state);\n  }\n\n  /**\n   * Handle to changes in the Kernel status.\n   */\n  protected onKernelConnectionStatus(\n    sender: Kernel.IKernelConnection,\n    state: Kernel.ConnectionStatus\n  ): void {\n    this._connectionStatusChanged.emit(state);\n  }\n\n  /**\n   * Handle a change in the pendingInput.\n   */\n  protected onPendingInput(sender: Kernel.IKernelConnection, state: boolean) {\n    this._pendingInput.emit(state);\n  }\n\n  /**\n   * Handle iopub kernel messages.\n   */\n  protected onIOPubMessage(\n    sender: Kernel.IKernelConnection,\n    msg: KernelMessage.IIOPubMessage\n  ): void {\n    this._iopubMessage.emit(msg);\n  }\n\n  /**\n   * Handle unhandled kernel messages.\n   */\n  protected onUnhandledMessage(\n    sender: Kernel.IKernelConnection,\n    msg: KernelMessage.IMessage\n  ): void {\n    this._unhandledMessage.emit(msg);\n  }\n\n  /**\n   * Handle any kernel messages.\n   */\n  protected onAnyMessage(\n    sender: Kernel.IKernelConnection,\n    args: Kernel.IAnyMessageArgs\n  ): void {\n    this._anyMessage.emit(args);\n  }\n\n  /**\n   * Send a PATCH to the server, updating the session path or the kernel.\n   */\n  private async _patch(\n    body: DeepPartial<Session.IModel>\n  ): Promise<Session.IModel> {\n    const model = await updateSession(\n      { ...body, id: this._id },\n      this.serverSettings\n    );\n    this.update(model);\n    return model;\n  }\n\n  /**\n   * Handle a change to the model.\n   */\n  private _handleModelChange(oldModel: Session.IModel): void {\n    if (oldModel.name !== this._name) {\n      this._propertyChanged.emit('name');\n    }\n    if (oldModel.type !== this._type) {\n      this._propertyChanged.emit('type');\n    }\n    if (oldModel.path !== this._path) {\n      this._propertyChanged.emit('path');\n    }\n  }\n\n  private _id = '';\n  private _path = '';\n  private _name = '';\n  private _type = '';\n  private _username: string;\n  private _clientId: string;\n  private _kernel: Kernel.IKernelConnection | null = null;\n  private _isDisposed = false;\n  private _disposed = new Signal<this, void>(this);\n  private _kernelChanged = new Signal<\n    this,\n    Session.ISessionConnection.IKernelChangedArgs\n  >(this);\n  private _statusChanged = new Signal<this, Kernel.Status>(this);\n  private _connectionStatusChanged = new Signal<this, Kernel.ConnectionStatus>(\n    this\n  );\n  private _pendingInput = new Signal<this, boolean>(this);\n  private _iopubMessage = new Signal<this, KernelMessage.IIOPubMessage>(this);\n  private _unhandledMessage = new Signal<this, KernelMessage.IMessage>(this);\n  private _anyMessage = new Signal<this, Kernel.IAnyMessageArgs>(this);\n  private _propertyChanged = new Signal<this, 'path' | 'name' | 'type'>(this);\n  private _connectToKernel: (\n    options: Kernel.IKernelConnection.IOptions\n  ) => Kernel.IKernelConnection;\n  private _kernelConnectionOptions: Omit<\n    Kernel.IKernelConnection.IOptions,\n    'model' | 'username' | 'clientId' | 'serverSettings'\n  >;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { Poll } from '@lumino/polling';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { ServerConnection } from '../serverconnection';\nimport * as Session from './session';\nimport { BaseManager } from '../basemanager';\nimport { SessionConnection } from './default';\nimport { listRunning, shutdownSession, startSession } from './restapi';\nimport { Kernel } from '../kernel';\n\n/**\n * An implementation of a session manager.\n */\nexport class SessionManager extends BaseManager implements Session.IManager {\n  /**\n   * Construct a new session manager.\n   *\n   * @param options - The default options for each session.\n   */\n  constructor(options: SessionManager.IOptions) {\n    super(options);\n\n    this._kernelManager = options.kernelManager;\n\n    // Start model polling with exponential backoff.\n    this._pollModels = new Poll({\n      auto: false,\n      factory: () => this.requestRunning(),\n      frequency: {\n        interval: 10 * 1000,\n        backoff: true,\n        max: 300 * 1000\n      },\n      name: `@jupyterlab/services:SessionManager#models`,\n      standby: options.standby ?? 'when-hidden'\n    });\n\n    // Initialize internal data.\n    this._ready = (async () => {\n      await this._pollModels.start();\n      await this._pollModels.tick;\n      if (this._kernelManager.isActive) {\n        await this._kernelManager.ready;\n      }\n      this._isReady = true;\n    })();\n  }\n\n  /**\n   * The server settings for the manager.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n\n  /**\n   * Test whether the manager is ready.\n   */\n  get isReady(): boolean {\n    return this._isReady;\n  }\n\n  /**\n   * A promise that fulfills when the manager is ready.\n   */\n  get ready(): Promise<void> {\n    return this._ready;\n  }\n\n  /**\n   * A signal emitted when the running sessions change.\n   */\n  get runningChanged(): ISignal<this, Session.IModel[]> {\n    return this._runningChanged;\n  }\n\n  /**\n   * A signal emitted when there is a connection failure.\n   */\n  get connectionFailure(): ISignal<this, Error> {\n    return this._connectionFailure;\n  }\n\n  /**\n   * Dispose of the resources used by the manager.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._models.clear();\n    this._sessionConnections.forEach(x => x.dispose());\n    this._pollModels.dispose();\n    super.dispose();\n  }\n\n  /*\n   * Connect to a running session.  See also [[connectToSession]].\n   */\n  connectTo(\n    options: Omit<\n      Session.ISessionConnection.IOptions,\n      'connectToKernel' | 'serverSettings'\n    >\n  ): Session.ISessionConnection {\n    const sessionConnection = new SessionConnection({\n      ...options,\n      connectToKernel: this._connectToKernel,\n      serverSettings: this.serverSettings\n    });\n    this._onStarted(sessionConnection);\n    if (!this._models.has(options.model.id)) {\n      // We trust the user to connect to an existing session, but we verify\n      // asynchronously.\n      void this.refreshRunning().catch(() => {\n        /* no-op */\n      });\n    }\n\n    return sessionConnection;\n  }\n\n  /**\n   * Create an iterator over the most recent running sessions.\n   *\n   * @returns A new iterator over the running sessions.\n   */\n  running(): IterableIterator<Session.IModel> {\n    return this._models.values();\n  }\n\n  /**\n   * Force a refresh of the running sessions.\n   *\n   * @returns A promise that with the list of running sessions.\n   *\n   * #### Notes\n   * This is not typically meant to be called by the user, since the\n   * manager maintains its own internal state.\n   */\n  async refreshRunning(): Promise<void> {\n    await this._pollModels.refresh();\n    await this._pollModels.tick;\n  }\n\n  /**\n   * Start a new session.  See also [[startNewSession]].\n   *\n   * @param createOptions - Options for creating the session\n   *\n   * @param connectOptions - Options for connecting to the session\n   */\n  async startNew(\n    createOptions: Session.ISessionOptions,\n    connectOptions: Omit<\n      Session.ISessionConnection.IOptions,\n      'model' | 'connectToKernel' | 'serverSettings'\n    > = {}\n  ): Promise<Session.ISessionConnection> {\n    const model = await startSession(createOptions, this.serverSettings);\n    await this.refreshRunning();\n    return this.connectTo({ ...connectOptions, model });\n  }\n\n  /**\n   * Shut down a session by id.\n   */\n  async shutdown(id: string): Promise<void> {\n    await shutdownSession(id, this.serverSettings);\n    await this.refreshRunning();\n  }\n\n  /**\n   * Shut down all sessions.\n   *\n   * @returns A promise that resolves when all of the kernels are shut down.\n   */\n  async shutdownAll(): Promise<void> {\n    // Update the list of models to make sure our list is current.\n    await this.refreshRunning();\n\n    // Shut down all models.\n    await Promise.all(\n      [...this._models.keys()].map(id =>\n        shutdownSession(id, this.serverSettings)\n      )\n    );\n\n    // Update the list of models to clear out our state.\n    await this.refreshRunning();\n  }\n\n  /**\n   * Find a session associated with a path and stop it if it is the only session\n   * using that kernel.\n   *\n   * @param path - The path in question.\n   *\n   * @returns A promise that resolves when the relevant sessions are stopped.\n   */\n  async stopIfNeeded(path: string): Promise<void> {\n    try {\n      const sessions = await listRunning(this.serverSettings);\n      const matches = sessions.filter(value => value.path === path);\n      if (matches.length === 1) {\n        const id = matches[0].id;\n        await this.shutdown(id);\n      }\n    } catch (error) {\n      /* Always succeed. */\n    }\n  }\n\n  /**\n   * Find a session by id.\n   */\n  async findById(id: string): Promise<Session.IModel | undefined> {\n    if (this._models.has(id)) {\n      return this._models.get(id);\n    }\n    await this.refreshRunning();\n    return this._models.get(id);\n  }\n\n  /**\n   * Find a session by path.\n   */\n  async findByPath(path: string): Promise<Session.IModel | undefined> {\n    for (const m of this._models.values()) {\n      if (m.path === path) {\n        return m;\n      }\n    }\n    await this.refreshRunning();\n    for (const m of this._models.values()) {\n      if (m.path === path) {\n        return m;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Execute a request to the server to poll running kernels and update state.\n   */\n  protected async requestRunning(): Promise<void> {\n    let models: Session.IModel[];\n    try {\n      models = await listRunning(this.serverSettings);\n    } catch (err) {\n      // Handle network errors, as well as cases where we are on a\n      // JupyterHub and the server is not running. JupyterHub returns a\n      // 503 (<2.0) or 424 (>2.0) in that case.\n      if (\n        err instanceof ServerConnection.NetworkError ||\n        err.response?.status === 503 ||\n        err.response?.status === 424\n      ) {\n        this._connectionFailure.emit(err);\n      }\n      throw err;\n    }\n\n    if (this.isDisposed) {\n      return;\n    }\n\n    if (\n      this._models.size === models.length &&\n      models.every(model => {\n        const existing = this._models.get(model.id);\n        if (!existing) {\n          return false;\n        }\n        return (\n          existing.kernel?.id === model.kernel?.id &&\n          existing.kernel?.name === model.kernel?.name &&\n          existing.name === model.name &&\n          existing.path === model.path &&\n          existing.type === model.type\n        );\n      })\n    ) {\n      // Identical models list (presuming models does not contain duplicate\n      // ids), so just return\n      return;\n    }\n\n    this._models = new Map(models.map(x => [x.id, x]));\n\n    this._sessionConnections.forEach(sc => {\n      if (this._models.has(sc.id)) {\n        sc.update(this._models.get(sc.id)!);\n      } else {\n        sc.dispose();\n      }\n    });\n\n    this._runningChanged.emit(models);\n  }\n\n  /**\n   * Handle a session starting.\n   */\n  private _onStarted(sessionConnection: SessionConnection): void {\n    this._sessionConnections.add(sessionConnection);\n    sessionConnection.disposed.connect(this._onDisposed, this);\n    sessionConnection.propertyChanged.connect(this._onChanged, this);\n    sessionConnection.kernelChanged.connect(this._onChanged, this);\n  }\n\n  private _onDisposed(sessionConnection: SessionConnection) {\n    this._sessionConnections.delete(sessionConnection);\n    // A session termination emission could mean the server session is deleted,\n    // or that the session JS object is disposed and the session still exists on\n    // the server, so we refresh from the server to make sure we reflect the\n    // server state.\n\n    void this.refreshRunning().catch(() => {\n      /* no-op */\n    });\n  }\n\n  private _onChanged() {\n    void this.refreshRunning().catch(() => {\n      /* no-op */\n    });\n  }\n\n  private _isReady = false;\n  private _sessionConnections = new Set<SessionConnection>();\n  private _models = new Map<string, Session.IModel>();\n  private _pollModels: Poll;\n  private _ready: Promise<void>;\n  private _runningChanged = new Signal<this, Session.IModel[]>(this);\n  private _connectionFailure = new Signal<this, Error>(this);\n\n  // We define these here so they bind `this` correctly\n  private readonly _connectToKernel = (\n    options: Omit<Kernel.IKernelConnection.IOptions, 'serverSettings'>\n  ) => {\n    return this._kernelManager.connectTo(options);\n  };\n\n  private _kernelManager: Kernel.IManager;\n}\n\n/**\n * The namespace for `SessionManager` class statics.\n */\nexport namespace SessionManager {\n  /**\n   * The options used to initialize a SessionManager.\n   */\n  export interface IOptions extends BaseManager.IOptions {\n    /**\n     * When the manager stops polling the API. Defaults to `when-hidden`.\n     */\n    standby?: Poll.Standby | (() => boolean | Poll.Standby);\n\n    /**\n     * Kernel Manager\n     */\n    kernelManager: Kernel.IManager;\n  }\n\n  /**\n   * A no-op session manager to be used when starting sessions is not supported.\n   */\n  export class NoopManager extends SessionManager {\n    /**\n     * Whether the manager is active.\n     */\n    get isActive(): boolean {\n      return false;\n    }\n\n    /**\n     * Used for testing.\n     */\n    get parentReady(): Promise<void> {\n      return super.ready;\n    }\n\n    /**\n     * Start a new session - throw an error since it is not supported.\n     */\n    async startNew(\n      createOptions: Session.ISessionOptions,\n      connectOptions: Omit<\n        Session.ISessionConnection.IOptions,\n        'model' | 'connectToKernel' | 'serverSettings'\n      > = {}\n    ): Promise<Session.ISessionConnection> {\n      return Promise.reject(\n        new Error('Not implemented in no-op Session Manager')\n      );\n    }\n\n    /*\n     * Connect to a running session - throw an error since it is not supported.\n     */\n    connectTo(\n      options: Omit<\n        Session.ISessionConnection.IOptions,\n        'connectToKernel' | 'serverSettings'\n      >\n    ): Session.ISessionConnection {\n      throw Error('Not implemented in no-op Session Manager');\n    }\n\n    /**\n     * A promise that fulfills when the manager is ready (never).\n     */\n    get ready(): Promise<void> {\n      return this.parentReady.then(() => this._readyPromise);\n    }\n\n    /**\n     * Shut down a session by id - throw an error since it is not supported.\n     */\n    async shutdown(id: string): Promise<void> {\n      return Promise.reject(\n        new Error('Not implemented in no-op Session Manager')\n      );\n    }\n\n    /**\n     * Execute a request to the server to poll running sessions and update state.\n     */\n    protected async requestRunning(): Promise<void> {\n      return Promise.resolve();\n    }\n\n    private _readyPromise = new Promise<void>(() => {\n      /* no-op */\n    });\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport * as Session from './session';\nimport * as SessionAPI from './restapi';\n\nexport * from './manager';\nexport { Session, SessionAPI };\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { IDataConnector } from './interfaces';\n\n/**\n * An abstract class that adheres to the data connector interface.\n *\n * @typeparam T - The basic entity response type a service's connector.\n *\n * @typeparam U - The basic entity request type, which is conventionally the\n * same as the response type but may be different if a service's implementation\n * requires input data to be different from output responses. Defaults to `T`.\n *\n * @typeparam V - The basic token applied to a request, conventionally a string\n * ID or filter, but may be set to a different type when an implementation\n * requires it. Defaults to `string`.\n *\n * @typeparam W - The type of the optional `query` parameter of the `list`\n * method. Defaults to `string`.\n *\n * #### Notes\n * The only abstract method in this class is the `fetch` method, which must be\n * reimplemented by all subclasses. The `remove` and `save` methods have a\n * default implementation that returns a promise that will always reject. This\n * class is a convenience superclass for connectors that only need to `fetch`.\n */\nexport abstract class DataConnector<T, U = T, V = string, W = string>\n  implements IDataConnector<T, U, V, W>\n{\n  /**\n   * Retrieve an item from the data connector.\n   *\n   * @param id - The identifier used to retrieve an item.\n   *\n   * @returns A promise that resolves with a data payload if available.\n   *\n   * #### Notes\n   * The promise returned by this method may be rejected if an error occurs in\n   * retrieving the data. Nonexistence of an `id` will succeed with `undefined`.\n   */\n  abstract fetch(id: V): Promise<T | undefined>;\n\n  /**\n   * Retrieve the list of items available from the data connector.\n   *\n   * @param query - The optional query filter to apply to the connector request.\n   *\n   * @returns A promise that always rejects with an error.\n   *\n   * #### Notes\n   * Subclasses should reimplement if they support a back-end that can list.\n   */\n  async list(query?: W): Promise<{ ids: V[]; values: T[] }> {\n    throw new Error('DataConnector#list method has not been implemented.');\n  }\n\n  /**\n   * Remove a value using the data connector.\n   *\n   * @param id - The identifier for the data being removed.\n   *\n   * @returns A promise that always rejects with an error.\n   *\n   * #### Notes\n   * Subclasses should reimplement if they support a back-end that can remove.\n   */\n  async remove(id: V): Promise<any> {\n    throw new Error('DataConnector#remove method has not been implemented.');\n  }\n\n  /**\n   * Save a value using the data connector.\n   *\n   * @param id - The identifier for the data being saved.\n   *\n   * @param value - The data being saved.\n   *\n   * @returns A promise that always rejects with an error.\n   *\n   * #### Notes\n   * Subclasses should reimplement if they support a back-end that can save.\n   */\n  async save(id: V, value: U): Promise<any> {\n    throw new Error('DataConnector#save method has not been implemented.');\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * @packageDocumentation\n * @module properties\n */\n\n/**\n * A class which attaches a value to an external object.\n *\n * #### Notes\n * Attached properties are used to extend the state of an object with\n * semantic data from an unrelated class. They also encapsulate value\n * creation, coercion, and notification.\n *\n * Because attached property values are stored in a hash table, which\n * in turn is stored in a WeakMap keyed on the owner object, there is\n * non-trivial storage overhead involved in their use. The pattern is\n * therefore best used for the storage of rare data.\n */\nexport class AttachedProperty<T, U> {\n  /**\n   * Construct a new attached property.\n   *\n   * @param options - The options for initializing the property.\n   */\n  constructor(options: AttachedProperty.IOptions<T, U>) {\n    this.name = options.name;\n    this._create = options.create;\n    this._coerce = options.coerce || null;\n    this._compare = options.compare || null;\n    this._changed = options.changed || null;\n  }\n\n  /**\n   * The human readable name for the property.\n   */\n  readonly name: string;\n\n  /**\n   * Get the current value of the property for a given owner.\n   *\n   * @param owner - The property owner of interest.\n   *\n   * @returns The current value of the property.\n   *\n   * #### Notes\n   * If the value has not yet been set, the default value will be\n   * computed and assigned as the current value of the property.\n   */\n  get(owner: T): U {\n    let value: U;\n    let map = Private.ensureMap(owner);\n    if (this._pid in map) {\n      value = map[this._pid];\n    } else {\n      value = map[this._pid] = this._createValue(owner);\n    }\n    return value;\n  }\n\n  /**\n   * Set the current value of the property for a given owner.\n   *\n   * @param owner - The property owner of interest.\n   *\n   * @param value - The value for the property.\n   *\n   * #### Notes\n   * If the value has not yet been set, the default value will be\n   * computed and used as the previous value for the comparison.\n   */\n  set(owner: T, value: U): void {\n    let oldValue: U;\n    let map = Private.ensureMap(owner);\n    if (this._pid in map) {\n      oldValue = map[this._pid];\n    } else {\n      oldValue = map[this._pid] = this._createValue(owner);\n    }\n    let newValue = this._coerceValue(owner, value);\n    this._maybeNotify(owner, oldValue, (map[this._pid] = newValue));\n  }\n\n  /**\n   * Explicitly coerce the current property value for a given owner.\n   *\n   * @param owner - The property owner of interest.\n   *\n   * #### Notes\n   * If the value has not yet been set, the default value will be\n   * computed and used as the previous value for the comparison.\n   */\n  coerce(owner: T): void {\n    let oldValue: U;\n    let map = Private.ensureMap(owner);\n    if (this._pid in map) {\n      oldValue = map[this._pid];\n    } else {\n      oldValue = map[this._pid] = this._createValue(owner);\n    }\n    let newValue = this._coerceValue(owner, oldValue);\n    this._maybeNotify(owner, oldValue, (map[this._pid] = newValue));\n  }\n\n  /**\n   * Get or create the default value for the given owner.\n   */\n  private _createValue(owner: T): U {\n    let create = this._create;\n    return create(owner);\n  }\n\n  /**\n   * Coerce the value for the given owner.\n   */\n  private _coerceValue(owner: T, value: U): U {\n    let coerce = this._coerce;\n    return coerce ? coerce(owner, value) : value;\n  }\n\n  /**\n   * Compare the old value and new value for equality.\n   */\n  private _compareValue(oldValue: U, newValue: U): boolean {\n    let compare = this._compare;\n    return compare ? compare(oldValue, newValue) : oldValue === newValue;\n  }\n\n  /**\n   * Run the change notification if the given values are different.\n   */\n  private _maybeNotify(owner: T, oldValue: U, newValue: U): void {\n    let changed = this._changed;\n    if (changed && !this._compareValue(oldValue, newValue)) {\n      changed(owner, oldValue, newValue);\n    }\n  }\n\n  private _pid = Private.nextPID();\n  private _create: (owner: T) => U;\n  private _coerce: ((owner: T, value: U) => U) | null;\n  private _compare: ((oldValue: U, newValue: U) => boolean) | null;\n  private _changed: ((owner: T, oldValue: U, newValue: U) => void) | null;\n}\n\n/**\n * The namespace for the `AttachedProperty` class statics.\n */\nexport namespace AttachedProperty {\n  /**\n   * The options object used to initialize an attached property.\n   */\n  export interface IOptions<T, U> {\n    /**\n     * The human readable name for the property.\n     *\n     * #### Notes\n     * By convention, this should be the same as the name used to define\n     * the public accessor for the property value.\n     *\n     * This **does not** have an effect on the property lookup behavior.\n     * Multiple properties may share the same name without conflict.\n     */\n    name: string;\n\n    /**\n     * A factory function used to create the default property value.\n     *\n     * #### Notes\n     * This will be called whenever the property value is required,\n     * but has not yet been set for a given owner.\n     */\n    create: (owner: T) => U;\n\n    /**\n     * A function used to coerce a supplied value into the final value.\n     *\n     * #### Notes\n     * This will be called whenever the property value is changed, or\n     * when the property is explicitly coerced. The return value will\n     * be used as the final value of the property.\n     *\n     * This will **not** be called for the initial default value.\n     */\n    coerce?: (owner: T, value: U) => U;\n\n    /**\n     * A function used to compare two values for equality.\n     *\n     * #### Notes\n     * This is called to determine if the property value has changed.\n     * It should return `true` if the given values are equivalent, or\n     * `false` if they are different.\n     *\n     * If this is not provided, it defaults to the `===` operator.\n     */\n    compare?: (oldValue: U, newValue: U) => boolean;\n\n    /**\n     * A function called when the property value has changed.\n     *\n     * #### Notes\n     * This will be invoked when the property value is changed and the\n     * comparator indicates that the old value is not equal to the new\n     * value.\n     *\n     * This will **not** be called for the initial default value.\n     */\n    changed?: (owner: T, oldValue: U, newValue: U) => void;\n  }\n\n  /**\n   * Clear the stored property data for the given owner.\n   *\n   * @param owner - The property owner of interest.\n   *\n   * #### Notes\n   * This will clear all property values for the owner, but it will\n   * **not** run the change notification for any of the properties.\n   */\n  export function clearData(owner: unknown): void {\n    Private.ownerData.delete(owner);\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A typedef for a mapping of property id to property value.\n   */\n  export type PropertyMap = { [key: string]: any };\n\n  /**\n   * A weak mapping of property owner to property map.\n   */\n  export const ownerData = new WeakMap<any, PropertyMap>();\n\n  /**\n   * A function which computes successive unique property ids.\n   */\n  export const nextPID = (() => {\n    let id = 0;\n    return () => {\n      let rand = Math.random();\n      let stem = `${rand}`.slice(2);\n      return `pid-${stem}-${id++}`;\n    };\n  })();\n\n  /**\n   * Lookup the data map for the property owner.\n   *\n   * This will create the map if one does not already exist.\n   */\n  export function ensureMap(owner: unknown): PropertyMap {\n    let map = ownerData.get(owner);\n    if (map) {\n      return map;\n    }\n    map = Object.create(null) as PropertyMap;\n    ownerData.set(owner, map);\n    return map;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { PromiseDelegate } from '@lumino/coreutils';\nimport { IObservableDisposable } from '@lumino/disposable';\nimport { AttachedProperty } from '@lumino/properties';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { IObjectPool, IRestorable } from './interfaces';\n\n/**\n * An object pool that supports restoration.\n *\n * @typeparam T - The type of object being tracked.\n */\nexport class RestorablePool<\n    T extends IObservableDisposable = IObservableDisposable\n  >\n  implements IObjectPool<T>, IRestorable<T>\n{\n  /**\n   * Create a new restorable pool.\n   *\n   * @param options - The instantiation options for a restorable pool.\n   */\n  constructor(options: RestorablePool.IOptions) {\n    this.namespace = options.namespace;\n  }\n\n  /**\n   * A namespace for all tracked objects.\n   */\n  readonly namespace: string;\n\n  /**\n   * A signal emitted when an object object is added.\n   *\n   * #### Notes\n   * This signal will only fire when an object is added to the pool.\n   * It will not fire if an object injected into the pool.\n   */\n  get added(): ISignal<this, T> {\n    return this._added;\n  }\n\n  /**\n   * The current object.\n   *\n   * #### Notes\n   * The restorable pool does not set `current`. It is intended for client use.\n   *\n   * If `current` is set to an object that does not exist in the pool, it is a\n   * no-op.\n   */\n  get current(): T | null {\n    return this._current;\n  }\n  set current(obj: T | null) {\n    if (this._current === obj) {\n      return;\n    }\n    if (obj !== null && this._objects.has(obj)) {\n      this._current = obj;\n      this._currentChanged.emit(this._current);\n    }\n  }\n\n  /**\n   * A signal emitted when the current widget changes.\n   */\n  get currentChanged(): ISignal<this, T | null> {\n    return this._currentChanged;\n  }\n\n  /**\n   * Test whether the pool is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * A promise resolved when the restorable pool has been restored.\n   */\n  get restored(): Promise<void> {\n    return this._restored.promise;\n  }\n\n  /**\n   * The number of objects held by the pool.\n   */\n  get size(): number {\n    return this._objects.size;\n  }\n\n  /**\n   * A signal emitted when an object is updated.\n   */\n  get updated(): ISignal<this, T> {\n    return this._updated;\n  }\n\n  /**\n   * Add a new object to the pool.\n   *\n   * @param obj - The object object being added.\n   *\n   * #### Notes\n   * The object passed into the pool is added synchronously; its existence in\n   * the pool can be checked with the `has()` method. The promise this method\n   * returns resolves after the object has been added and saved to an underlying\n   * restoration connector, if one is available.\n   */\n  async add(obj: T): Promise<void> {\n    if (obj.isDisposed) {\n      const warning = 'A disposed object cannot be added.';\n      console.warn(warning, obj);\n      throw new Error(warning);\n    }\n\n    if (this._objects.has(obj)) {\n      const warning = 'This object already exists in the pool.';\n      console.warn(warning, obj);\n      throw new Error(warning);\n    }\n\n    this._objects.add(obj);\n    obj.disposed.connect(this._onInstanceDisposed, this);\n\n    if (Private.injectedProperty.get(obj)) {\n      return;\n    }\n\n    if (this._restore) {\n      const { connector } = this._restore;\n      const objName = this._restore.name(obj);\n\n      if (objName) {\n        const name = `${this.namespace}:${objName}`;\n        const data = this._restore.args?.(obj);\n\n        Private.nameProperty.set(obj, name);\n        await connector.save(name, { data });\n      }\n    }\n\n    // Emit the added signal.\n    this._added.emit(obj);\n  }\n\n  /**\n   * Dispose of the resources held by the pool.\n   *\n   * #### Notes\n   * Disposing a pool does not affect the underlying data in the data connector,\n   * it simply disposes the client-side pool without making any connector calls.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._current = null;\n    this._isDisposed = true;\n    this._objects.clear();\n    Signal.clearData(this);\n  }\n\n  /**\n   * Find the first object in the pool that satisfies a filter function.\n   *\n   * @param fn The filter function to call on each object.\n   */\n  find(fn: (obj: T) => boolean): T | undefined {\n    const values = this._objects.values();\n    for (const value of values) {\n      if (fn(value)) {\n        return value;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Iterate through each object in the pool.\n   *\n   * @param fn - The function to call on each object.\n   */\n  forEach(fn: (obj: T) => void): void {\n    this._objects.forEach(fn);\n  }\n\n  /**\n   * Filter the objects in the pool based on a predicate.\n   *\n   * @param fn - The function by which to filter.\n   */\n  filter(fn: (obj: T) => boolean): T[] {\n    const filtered: T[] = [];\n    this.forEach(obj => {\n      if (fn(obj)) {\n        filtered.push(obj);\n      }\n    });\n    return filtered;\n  }\n\n  /**\n   * Inject an object into the restorable pool without the pool handling its\n   * restoration lifecycle.\n   *\n   * @param obj - The object to inject into the pool.\n   */\n  inject(obj: T): Promise<void> {\n    Private.injectedProperty.set(obj, true);\n    return this.add(obj);\n  }\n\n  /**\n   * Check if this pool has the specified object.\n   *\n   * @param obj - The object whose existence is being checked.\n   */\n  has(obj: T): boolean {\n    return this._objects.has(obj);\n  }\n\n  /**\n   * Restore the objects in this pool's namespace.\n   *\n   * @param options - The configuration options that describe restoration.\n   *\n   * @returns A promise that resolves when restoration has completed.\n   *\n   * #### Notes\n   * This function should almost never be invoked by client code. Its primary\n   * use case is to be invoked by a layout restorer plugin that handles\n   * multiple restorable pools and, when ready, asks them each to restore their\n   * respective objects.\n   */\n  async restore(options: IRestorable.IOptions<T>): Promise<any> {\n    if (this._hasRestored) {\n      throw new Error('This pool has already been restored.');\n    }\n\n    this._hasRestored = true;\n\n    const { command, connector, registry, when } = options;\n    const namespace = this.namespace;\n    const promises = when\n      ? [connector.list(namespace)].concat(when)\n      : [connector.list(namespace)];\n\n    this._restore = options;\n\n    const [saved] = await Promise.all(promises);\n    const values = await Promise.all(\n      saved.ids.map(async (id, index) => {\n        const value = saved.values[index];\n        const args = value && (value as any).data;\n\n        if (args === undefined) {\n          return connector.remove(id);\n        }\n\n        // Execute the command and if it fails, delete the state restore data.\n        return registry\n          .execute(command, args)\n          .catch(() => connector.remove(id));\n      })\n    );\n    this._restored.resolve();\n    return values;\n  }\n\n  /**\n   * Save the restore data for a given object.\n   *\n   * @param obj - The object being saved.\n   */\n  async save(obj: T): Promise<void> {\n    const injected = Private.injectedProperty.get(obj);\n\n    if (!this._restore || !this.has(obj) || injected) {\n      return;\n    }\n\n    const { connector } = this._restore;\n    const objName = this._restore.name(obj);\n    const oldName = Private.nameProperty.get(obj);\n    const newName = objName ? `${this.namespace}:${objName}` : '';\n\n    if (oldName && oldName !== newName) {\n      await connector.remove(oldName);\n    }\n\n    // Set the name property irrespective of whether the new name is null.\n    Private.nameProperty.set(obj, newName);\n\n    if (newName) {\n      const data = this._restore.args?.(obj);\n      await connector.save(newName, { data });\n    }\n\n    if (oldName !== newName) {\n      this._updated.emit(obj);\n    }\n  }\n\n  /**\n   * Clean up after disposed objects.\n   */\n  private _onInstanceDisposed(obj: T): void {\n    this._objects.delete(obj);\n\n    if (obj === this._current) {\n      this._current = null;\n      this._currentChanged.emit(this._current);\n    }\n\n    if (Private.injectedProperty.get(obj)) {\n      return;\n    }\n\n    if (!this._restore) {\n      return;\n    }\n\n    const { connector } = this._restore;\n    const name = Private.nameProperty.get(obj);\n\n    if (name) {\n      void connector.remove(name);\n    }\n  }\n\n  private _added = new Signal<this, T>(this);\n  private _current: T | null = null;\n  private _currentChanged = new Signal<this, T | null>(this);\n  private _hasRestored = false;\n  private _isDisposed = false;\n  private _objects = new Set<T>();\n  private _restore: IRestorable.IOptions<T> | null = null;\n  private _restored = new PromiseDelegate<void>();\n  private _updated = new Signal<this, T>(this);\n}\n\n/**\n * A namespace for `RestorablePool` statics.\n */\nexport namespace RestorablePool {\n  /**\n   * The instantiation options for the restorable pool.\n   */\n  export interface IOptions {\n    /**\n     * A namespace designating objects from this pool.\n     */\n    namespace: string;\n  }\n}\n\n/*\n * A namespace for private data.\n */\nnamespace Private {\n  /**\n   * An attached property to indicate whether an object has been injected.\n   */\n  export const injectedProperty = new AttachedProperty<\n    IObservableDisposable,\n    boolean\n  >({\n    name: 'injected',\n    create: () => false\n  });\n\n  /**\n   * An attached property for an object's ID.\n   */\n  export const nameProperty = new AttachedProperty<\n    IObservableDisposable,\n    string\n  >({\n    name: 'name',\n    create: () => ''\n  });\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { ReadonlyPartialJSONValue } from '@lumino/coreutils';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { IDataConnector } from './interfaces';\nimport { IStateDB } from './tokens';\n\n/**\n * The default concrete implementation of a state database.\n */\nexport class StateDB<\n  T extends ReadonlyPartialJSONValue = ReadonlyPartialJSONValue\n> implements IStateDB<T>\n{\n  /**\n   * Create a new state database.\n   *\n   * @param options - The instantiation options for a state database.\n   */\n  constructor(options: StateDB.IOptions<T> = {}) {\n    const { connector, transform } = options;\n\n    this._connector = connector || new StateDB.Connector();\n    if (!transform) {\n      this._ready = Promise.resolve(undefined);\n    } else {\n      this._ready = transform.then(transformation => {\n        const { contents, type } = transformation;\n\n        switch (type) {\n          case 'cancel':\n            return;\n          case 'clear':\n            return this._clear();\n          case 'merge':\n            return this._merge(contents || {});\n          case 'overwrite':\n            return this._overwrite(contents || {});\n          default:\n            return;\n        }\n      });\n    }\n  }\n\n  /**\n   * A signal that emits the change type any time a value changes.\n   */\n  get changed(): ISignal<this, StateDB.Change> {\n    return this._changed;\n  }\n\n  /**\n   * Clear the entire database.\n   */\n  async clear(): Promise<void> {\n    await this._ready;\n    await this._clear();\n  }\n\n  /**\n   * Retrieve a saved bundle from the database.\n   *\n   * @param id - The identifier used to retrieve a data bundle.\n   *\n   * @returns A promise that bears a data payload if available.\n   *\n   * #### Notes\n   * The `id` values of stored items in the state database are formatted:\n   * `'namespace:identifier'`, which is the same convention that command\n   * identifiers in JupyterLab use as well. While this is not a technical\n   * requirement for `fetch()`, `remove()`, and `save()`, it *is* necessary for\n   * using the `list(namespace: string)` method.\n   *\n   * The promise returned by this method may be rejected if an error occurs in\n   * retrieving the data. Non-existence of an `id` will succeed with the `value`\n   * `undefined`.\n   */\n  async fetch(id: string): Promise<T | undefined> {\n    await this._ready;\n    return this._fetch(id);\n  }\n\n  /**\n   * Retrieve all the saved bundles for a namespace.\n   *\n   * @param namespace The namespace prefix to retrieve.\n   *\n   * @returns A promise that bears a collection of payloads for a namespace.\n   *\n   * #### Notes\n   * Namespaces are entirely conventional entities. The `id` values of stored\n   * items in the state database are formatted: `'namespace:identifier'`, which\n   * is the same convention that command identifiers in JupyterLab use as well.\n   *\n   * If there are any errors in retrieving the data, they will be logged to the\n   * console in order to optimistically return any extant data without failing.\n   * This promise will always succeed.\n   */\n  async list(namespace: string): Promise<{ ids: string[]; values: T[] }> {\n    await this._ready;\n    return this._list(namespace);\n  }\n\n  /**\n   * Remove a value from the database.\n   *\n   * @param id - The identifier for the data being removed.\n   *\n   * @returns A promise that is rejected if remove fails and succeeds otherwise.\n   */\n  async remove(id: string): Promise<void> {\n    await this._ready;\n    await this._remove(id);\n    this._changed.emit({ id, type: 'remove' });\n  }\n\n  /**\n   * Save a value in the database.\n   *\n   * @param id - The identifier for the data being saved.\n   *\n   * @param value - The data being saved.\n   *\n   * @returns A promise that is rejected if saving fails and succeeds otherwise.\n   *\n   * #### Notes\n   * The `id` values of stored items in the state database are formatted:\n   * `'namespace:identifier'`, which is the same convention that command\n   * identifiers in JupyterLab use as well. While this is not a technical\n   * requirement for `fetch()`, `remove()`, and `save()`, it *is* necessary for\n   * using the `list(namespace: string)` method.\n   */\n  async save(id: string, value: T): Promise<void> {\n    await this._ready;\n    await this._save(id, value);\n    this._changed.emit({ id, type: 'save' });\n  }\n\n  /**\n   * Return a serialized copy of the state database's entire contents.\n   *\n   * @returns A promise that resolves with the database contents as JSON.\n   */\n  async toJSON(): Promise<{ readonly [id: string]: T }> {\n    await this._ready;\n\n    const { ids, values } = await this._list();\n\n    return values.reduce(\n      (acc, val, idx) => {\n        acc[ids[idx]] = val;\n        return acc;\n      },\n      {} as { [id: string]: T }\n    );\n  }\n\n  /**\n   * Clear the entire database.\n   */\n  private async _clear(): Promise<void> {\n    await Promise.all((await this._list()).ids.map(id => this._remove(id)));\n  }\n\n  /**\n   * Fetch a value from the database.\n   */\n  private async _fetch(id: string): Promise<T | undefined> {\n    const value = await this._connector.fetch(id);\n\n    if (value) {\n      return (JSON.parse(value) as Private.Envelope).v as T;\n    }\n  }\n\n  /**\n   * Fetch a list from the database.\n   */\n  private async _list(namespace = ''): Promise<{ ids: string[]; values: T[] }> {\n    const { ids, values } = await this._connector.list(namespace);\n\n    return {\n      ids,\n      values: values.map(val => (JSON.parse(val) as Private.Envelope).v as T)\n    };\n  }\n\n  /**\n   * Merge data into the state database.\n   */\n  private async _merge(contents: StateDB.Content<T>): Promise<void> {\n    await Promise.all(\n      Object.keys(contents).map(\n        key => contents[key] && this._save(key, contents[key]!)\n      )\n    );\n  }\n\n  /**\n   * Overwrite the entire database with new contents.\n   */\n  private async _overwrite(contents: StateDB.Content<T>): Promise<void> {\n    await this._clear();\n    await this._merge(contents);\n  }\n\n  /**\n   * Remove a key in the database.\n   */\n  private async _remove(id: string): Promise<void> {\n    return this._connector.remove(id);\n  }\n\n  /**\n   * Save a key and its value in the database.\n   */\n  private async _save(id: string, value: T): Promise<void> {\n    return this._connector.save(id, JSON.stringify({ v: value }));\n  }\n\n  private _changed = new Signal<this, StateDB.Change>(this);\n  private _connector: IDataConnector<string>;\n  private _ready: Promise<void>;\n}\n\n/**\n * A namespace for StateDB statics.\n */\nexport namespace StateDB {\n  /**\n   * A state database change.\n   */\n  export type Change = {\n    /**\n     * The key of the database item that was changed.\n     *\n     * #### Notes\n     * This field is set to `null` for global changes (i.e. `clear`).\n     */\n    id: string | null;\n\n    /**\n     * The type of change.\n     */\n    type: 'clear' | 'remove' | 'save';\n  };\n\n  /**\n   * A data transformation that can be applied to a state database.\n   */\n  export type DataTransform<\n    T extends ReadonlyPartialJSONValue = ReadonlyPartialJSONValue\n  > = {\n    /*\n     * The change operation being applied.\n     */\n    type: 'cancel' | 'clear' | 'merge' | 'overwrite';\n\n    /**\n     * The contents of the change operation.\n     */\n    contents: Content<T> | null;\n  };\n\n  /**\n   * Database content map\n   */\n  export type Content<T> = { [id: string]: T | undefined };\n\n  /**\n   * The instantiation options for a state database.\n   */\n  export interface IOptions<\n    T extends ReadonlyPartialJSONValue = ReadonlyPartialJSONValue\n  > {\n    /**\n     * Optional string key/value connector. Defaults to in-memory connector.\n     */\n    connector?: IDataConnector<string>;\n\n    /**\n     * An optional promise that resolves with a data transformation that is\n     * applied to the database contents before the database begins resolving\n     * client requests.\n     */\n    transform?: Promise<DataTransform<T>>;\n  }\n\n  /**\n   * An in-memory string key/value data connector.\n   */\n  export class Connector implements IDataConnector<string> {\n    /**\n     * Retrieve an item from the data connector.\n     */\n    async fetch(id: string): Promise<string> {\n      return this._storage[id];\n    }\n\n    /**\n     * Retrieve the list of items available from the data connector.\n     *\n     * @param namespace - If not empty, only keys whose first token before `:`\n     * exactly match `namespace` will be returned, e.g. `foo` in `foo:bar`.\n     */\n    async list(namespace = ''): Promise<{ ids: string[]; values: string[] }> {\n      return Object.keys(this._storage).reduce(\n        (acc, val) => {\n          if (namespace === '' ? true : namespace === val.split(':')[0]) {\n            acc.ids.push(val);\n            acc.values.push(this._storage[val]);\n          }\n          return acc;\n        },\n        { ids: [] as string[], values: [] as string[] }\n      );\n    }\n\n    /**\n     * Remove a value using the data connector.\n     */\n    async remove(id: string): Promise<void> {\n      delete this._storage[id];\n    }\n\n    /**\n     * Save a value using the data connector.\n     */\n    async save(id: string, value: string): Promise<void> {\n      this._storage[id] = value;\n    }\n\n    private _storage: { [key: string]: string } = {};\n  }\n}\n\n/*\n * A namespace for private module data.\n */\nnamespace Private {\n  /**\n   * An envelope around a JSON value stored in the state database.\n   */\n  export type Envelope = { readonly v: ReadonlyPartialJSONValue };\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { ReadonlyPartialJSONValue, Token } from '@lumino/coreutils';\nimport { IDataConnector } from './interfaces';\n\n/**\n * The default state database token.\n */\nexport const IStateDB = new Token<IStateDB>(\n  '@jupyterlab/coreutils:IStateDB',\n  `A service for the JupyterLab state database.\n  Use this if you want to store data that will persist across page loads.\n  See \"state database\" for more information.`\n);\n\n/**\n * The description of a state database.\n */\nexport interface IStateDB<\n  T extends ReadonlyPartialJSONValue = ReadonlyPartialJSONValue\n> extends IDataConnector<T> {\n  /**\n   * Return a serialized copy of the state database's entire contents.\n   *\n   * @returns A promise that bears the database contents as JSON.\n   */\n  toJSON(): Promise<{ [id: string]: T }>;\n}\n", "/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n/**\n * @packageDocumentation\n * @module statedb\n */\n\nexport * from './dataconnector';\nexport * from './interfaces';\nexport * from './restorablepool';\nexport * from './statedb';\nexport * from './tokens';\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { URLExt } from '@jupyterlab/coreutils';\n\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\n\nimport { DataConnector } from '@jupyterlab/statedb';\n\nimport { ServerConnection } from '../serverconnection';\n\n/**\n * The url for the lab settings service.\n */\nconst SERVICE_SETTINGS_URL = 'api/settings';\n\n/**\n * The settings API service manager.\n */\nexport class SettingManager extends DataConnector<\n  ISettingRegistry.IPlugin,\n  string\n> {\n  /**\n   * Create a new setting manager.\n   */\n  constructor(options: SettingManager.IOptions = {}) {\n    super();\n    this.serverSettings =\n      options.serverSettings ?? ServerConnection.makeSettings();\n  }\n\n  /**\n   * The server settings used to make API requests.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n\n  /**\n   * Fetch a plugin's settings.\n   *\n   * @param id - The plugin's ID.\n   *\n   * @returns A promise that resolves if successful.\n   */\n  async fetch(id: string): Promise<ISettingRegistry.IPlugin> {\n    if (!id) {\n      throw new Error('Plugin `id` parameter is required for settings fetch.');\n    }\n\n    const { serverSettings } = this;\n    const { baseUrl, appUrl } = serverSettings;\n    const { makeRequest, ResponseError } = ServerConnection;\n    const base = baseUrl + appUrl;\n    const url = Private.url(base, id);\n    const response = await makeRequest(url, {}, serverSettings);\n\n    if (response.status !== 200) {\n      const err = await ResponseError.create(response);\n      throw err;\n    }\n\n    // Assert what type the server response is returning.\n    return response.json() as Promise<ISettingRegistry.IPlugin>;\n  }\n\n  /**\n   * Fetch the list of all plugin setting bundles.\n   *\n   * @returns A promise that resolves if successful.\n   */\n  async list(\n    query?: 'ids'\n  ): Promise<{ ids: string[]; values: ISettingRegistry.IPlugin[] }> {\n    const { serverSettings } = this;\n    const { baseUrl, appUrl } = serverSettings;\n    const { makeRequest, ResponseError } = ServerConnection;\n    const base = baseUrl + appUrl;\n    const url = Private.url(base, '', query === 'ids');\n    const response = await makeRequest(url, {}, serverSettings);\n\n    if (response.status !== 200) {\n      throw new ResponseError(response);\n    }\n\n    const json = await response.json();\n    const ids =\n      json?.['settings']?.map(\n        (plugin: ISettingRegistry.IPlugin) => plugin.id\n      ) ?? [];\n\n    let values: ISettingRegistry.IPlugin[] = [];\n    if (!query) {\n      values =\n        json?.['settings']?.map((plugin: ISettingRegistry.IPlugin) => {\n          plugin.data = { composite: {}, user: {} };\n          return plugin;\n        }) ?? [];\n    }\n\n    return { ids, values };\n  }\n\n  /**\n   * Save a plugin's settings.\n   *\n   * @param id - The plugin's ID.\n   *\n   * @param raw - The user setting values as a raw string of JSON with comments.\n   *\n   * @returns A promise that resolves if successful.\n   */\n  async save(id: string, raw: string): Promise<void> {\n    const { serverSettings } = this;\n    const { baseUrl, appUrl } = serverSettings;\n    const { makeRequest, ResponseError } = ServerConnection;\n    const base = baseUrl + appUrl;\n    const url = Private.url(base, id);\n    // NOTE: 'raw' is JSON5 (not valid JSON), so we encode it as a string in a valid JSON body\n    const init = { body: JSON.stringify({ raw }), method: 'PUT' };\n    const response = await makeRequest(url, init, serverSettings);\n\n    if (response.status !== 204) {\n      throw new ResponseError(response);\n    }\n  }\n}\n\n/**\n * A namespace for `SettingManager` statics.\n */\nexport namespace SettingManager {\n  /**\n   * The instantiation options for a setting manager.\n   */\n  export interface IOptions {\n    /**\n     * The server settings used to make API requests.\n     */\n    serverSettings?: ServerConnection.ISettings;\n  }\n}\n\n/**\n * A namespace for setting API interfaces.\n */\nexport namespace Setting {\n  /**\n   * The interface for the setting system manager.\n   */\n  export interface IManager extends SettingManager {}\n}\n\n/**\n * A namespace for private data.\n */\nnamespace Private {\n  /**\n   * Get the url for a plugin's settings.\n   */\n  export function url(base: string, id: string, idsOnly?: boolean): string {\n    const idsOnlyParam = idsOnly\n      ? URLExt.objectToQueryString({ ids_only: true })\n      : '';\n    const settingsBase = URLExt.join(base, SERVICE_SETTINGS_URL);\n    const result = URLExt.join(settingsBase, id);\n    if (!result.startsWith(settingsBase)) {\n      throw new Error('Can only be used for workspaces requests');\n    }\n    return `${result}${idsOnlyParam}`;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '../serverconnection';\n\n/**\n * The url for the terminal service.\n */\nexport const TERMINAL_SERVICE_URL = 'api/terminals';\n\n/**\n * Whether the terminal service is available.\n */\nexport function isAvailable(): boolean {\n  const available = String(PageConfig.getOption('terminalsAvailable'));\n  return available.toLowerCase() === 'true';\n}\n\n/**\n * The server model for a terminal session.\n */\nexport interface IModel {\n  /**\n   * The name of the terminal session.\n   */\n  readonly name: string;\n}\n\n/**\n * Start a new terminal session.\n *\n * @param settings - The server settings to use.\n *\n * @param name - The name of the target terminal.\n *\n * @param cwd - The path in which the terminal will start.\n *\n * @returns A promise that resolves with the session model.\n */\nexport async function startNew(\n  settings: ServerConnection.ISettings = ServerConnection.makeSettings(),\n  name?: string,\n  cwd?: string\n): Promise<IModel> {\n  Private.errorIfNotAvailable();\n  const url = URLExt.join(settings.baseUrl, TERMINAL_SERVICE_URL);\n  const init = {\n    method: 'POST',\n    body: JSON.stringify({ name, cwd })\n  };\n\n  const response = await ServerConnection.makeRequest(url, init, settings);\n  if (response.status !== 200) {\n    const err = await ServerConnection.ResponseError.create(response);\n    throw err;\n  }\n  const data = await response.json();\n  // TODO: Validate model\n  return data;\n}\n\n/**\n * List the running terminal sessions.\n *\n * @param settings - The server settings to use.\n *\n * @returns A promise that resolves with the list of running session models.\n */\nexport async function listRunning(\n  settings: ServerConnection.ISettings = ServerConnection.makeSettings()\n): Promise<IModel[]> {\n  Private.errorIfNotAvailable();\n  const url = URLExt.join(settings.baseUrl, TERMINAL_SERVICE_URL);\n  const response = await ServerConnection.makeRequest(url, {}, settings);\n  if (response.status !== 200) {\n    const err = await ServerConnection.ResponseError.create(response);\n    throw err;\n  }\n  const data = await response.json();\n\n  if (!Array.isArray(data)) {\n    throw new Error('Invalid terminal list');\n  }\n\n  // TODO: validate each model\n  return data;\n}\n\n/**\n * Shut down a terminal session by name.\n *\n * @param name - The name of the target session.\n *\n * @param settings - The server settings to use.\n *\n * @returns A promise that resolves when the session is shut down.\n */\nexport async function shutdownTerminal(\n  name: string,\n  settings: ServerConnection.ISettings = ServerConnection.makeSettings()\n): Promise<void> {\n  Private.errorIfNotAvailable();\n  const workspacesBase = URLExt.join(settings.baseUrl, TERMINAL_SERVICE_URL);\n  const url = URLExt.join(workspacesBase, name);\n  if (!url.startsWith(workspacesBase)) {\n    throw new Error('Can only be used for terminal requests');\n  }\n  const init = { method: 'DELETE' };\n  const response = await ServerConnection.makeRequest(url, init, settings);\n  if (response.status === 404) {\n    const data = await response.json();\n    const msg =\n      data.message ??\n      `The terminal session \"${name}\"\" does not exist on the server`;\n    console.warn(msg);\n  } else if (response.status !== 204) {\n    const err = await ServerConnection.ResponseError.create(response);\n    throw err;\n  }\n}\n\nnamespace Private {\n  /**\n   * Throw an error if terminals are not available.\n   */\n  export function errorIfNotAvailable(): void {\n    if (!isAvailable()) {\n      throw new Error('Terminals Unavailable');\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { JSONPrimitive } from '@lumino/coreutils';\n\nimport { IObservableDisposable } from '@lumino/disposable';\n\nimport { ISignal } from '@lumino/signaling';\n\nimport { ServerConnection } from '..';\n\nimport { IManager as IBaseManager } from '../basemanager';\n\nimport { IModel, isAvailable } from './restapi';\nexport { IModel, isAvailable };\n\nexport namespace ITerminal {\n  export interface IOptions {\n    /**\n     * The terminal name.\n     */\n    name?: string;\n    /**\n     *  The terminal current directory.\n     */\n    cwd?: string;\n  }\n}\n\n/**\n * An interface for a terminal session.\n */\nexport interface ITerminalConnection extends IObservableDisposable {\n  /**\n   * A signal emitted when a message is received from the server.\n   */\n  messageReceived: ISignal<ITerminalConnection, IMessage>;\n\n  /**\n   * Get the name of the terminal session.\n   */\n  readonly name: string;\n\n  /**\n   * The model associated with the session.\n   */\n  readonly model: IModel;\n\n  /**\n   * The server settings for the session.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n\n  /**\n   * The current connection status of the terminal.\n   */\n  readonly connectionStatus: ConnectionStatus;\n\n  /**\n   * A signal emitted when the terminal connection status changes.\n   */\n  connectionStatusChanged: ISignal<this, ConnectionStatus>;\n\n  /**\n   * Send a message to the terminal session.\n   */\n  send(message: IMessage): void;\n\n  /**\n   * Reconnect to the terminal.\n   *\n   * @returns A promise that resolves when the terminal has reconnected.\n   */\n  reconnect(): Promise<void>;\n\n  /**\n   * Shut down the terminal session.\n   */\n  shutdown(): Promise<void>;\n}\n\nexport namespace ITerminalConnection {\n  export interface IOptions {\n    /**\n     * Terminal model.\n     */\n    model: IModel;\n\n    /**\n     * The server settings.\n     */\n    serverSettings?: ServerConnection.ISettings;\n  }\n}\n\n/**\n * A message from the terminal session.\n */\nexport interface IMessage {\n  /**\n   * The type of the message.\n   */\n  readonly type: MessageType;\n\n  /**\n   * The content of the message.\n   */\n  readonly content?: JSONPrimitive[];\n}\n\n/**\n * Valid message types for the terminal.\n */\nexport type MessageType = 'stdout' | 'disconnect' | 'set_size' | 'stdin';\n\n/**\n * The interface for a terminal manager.\n *\n * #### Notes\n * The manager is responsible for maintaining the state of running\n * terminal sessions.\n */\nexport interface IManager extends IBaseManager {\n  /**\n   * A signal emitted when the running terminals change.\n   */\n  runningChanged: ISignal<IManager, IModel[]>;\n\n  /**\n   * A signal emitted when there is a connection failure.\n   */\n  connectionFailure: ISignal<IManager, ServerConnection.NetworkError>;\n\n  /**\n   * Test whether the manager is ready.\n   */\n  readonly isReady: boolean;\n\n  /**\n   * A promise that fulfills when the manager is ready.\n   */\n  readonly ready: Promise<void>;\n\n  /**\n   * Whether the terminal service is available.\n   */\n  isAvailable(): boolean;\n\n  /**\n   * Create an iterator over the known running terminals.\n   *\n   * @returns A new iterator over the running terminals.\n   */\n  running(): IterableIterator<IModel>;\n\n  /**\n   * Create a new terminal session.\n   *\n   * @param options - The options used to create the terminal.\n   *\n   * @returns A promise that resolves with the terminal connection instance.\n   *\n   * #### Notes\n   * The manager `serverSettings` will be always be used.\n   */\n  startNew(options?: ITerminal.IOptions): Promise<ITerminalConnection>;\n\n  /*\n   * Connect to a running session.\n   *\n   * @param options - The options used to connect to the terminal.\n   *\n   * @returns The new terminal connection instance.\n   */\n  connectTo(\n    options: Omit<ITerminalConnection.IOptions, 'serverSettings'>\n  ): ITerminalConnection;\n\n  /**\n   * Shut down a terminal session by name.\n   *\n   * @param name - The name of the terminal session.\n   *\n   * @returns A promise that resolves when the session is shut down.\n   */\n  shutdown(name: string): Promise<void>;\n\n  /**\n   * Shut down all terminal sessions.\n   *\n   * @returns A promise that resolves when all of the sessions are shut down.\n   */\n  shutdownAll(): Promise<void>;\n\n  /**\n   * Force a refresh of the running terminal sessions.\n   *\n   * @returns A promise that with the list of running sessions.\n   *\n   * #### Notes\n   * This is not typically meant to be called by the user, since the\n   * manager maintains its own internal state.\n   */\n  refreshRunning(): Promise<void>;\n}\n\n/**\n * The valid terminal connection states.\n *\n * #### Notes\n * The status states are:\n * * `connected`: The terminal connection is live.\n * * `connecting`: The terminal connection is not live, but we are attempting\n *   to reconnect to the terminal.\n * * `disconnected`: The terminal connection is down, we are not\n *   trying to reconnect.\n */\nexport type ConnectionStatus = 'connected' | 'connecting' | 'disconnected';\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { URLExt } from '@jupyterlab/coreutils';\n\nimport { JSONPrimitive, PromiseDelegate } from '@lumino/coreutils';\n\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { ServerConnection } from '..';\n\nimport * as Terminal from './terminal';\nimport { shutdownTerminal, TERMINAL_SERVICE_URL } from './restapi';\n\n/**\n * An implementation of a terminal interface.\n */\nexport class TerminalConnection implements Terminal.ITerminalConnection {\n  /**\n   * Construct a new terminal session.\n   */\n  constructor(options: Terminal.ITerminalConnection.IOptions) {\n    this._name = options.model.name;\n    this.serverSettings =\n      options.serverSettings ?? ServerConnection.makeSettings();\n    this._createSocket();\n  }\n\n  /**\n   * A signal emitted when the session is disposed.\n   */\n  get disposed(): ISignal<this, void> {\n    return this._disposed;\n  }\n\n  /**\n   * A signal emitted when a message is received from the server.\n   */\n  get messageReceived(): ISignal<this, Terminal.IMessage> {\n    return this._messageReceived;\n  }\n\n  /**\n   * Get the name of the terminal session.\n   */\n  get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Get the model for the terminal session.\n   */\n  get model(): Terminal.IModel {\n    return { name: this._name };\n  }\n\n  /**\n   * The server settings for the session.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n\n  /**\n   * Test whether the session is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * Dispose of the resources held by the session.\n   */\n  dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n\n    this._isDisposed = true;\n    this._disposed.emit();\n\n    this._updateConnectionStatus('disconnected');\n    this._clearSocket();\n\n    Signal.clearData(this);\n  }\n\n  /**\n   * Send a message to the terminal session.\n   *\n   * #### Notes\n   * If the connection is down, the message will be queued for sending when\n   * the connection comes back up.\n   */\n  send(message: Terminal.IMessage): void {\n    this._sendMessage(message);\n  }\n\n  /**\n   * Send a message on the websocket, or possibly queue for later sending.\n   *\n   * @param queue - whether to queue the message if it cannot be sent\n   */\n  _sendMessage(message: Terminal.IMessage, queue = true): void {\n    if (this._isDisposed || !message.content) {\n      return;\n    }\n    if (this.connectionStatus === 'connected' && this._ws) {\n      const msg = [message.type, ...message.content];\n      this._ws.send(JSON.stringify(msg));\n    } else if (queue) {\n      this._pendingMessages.push(message);\n    } else {\n      throw new Error(`Could not send message: ${JSON.stringify(message)}`);\n    }\n  }\n\n  /**\n   * Send pending messages to the kernel.\n   */\n  private _sendPending(): void {\n    // We check to make sure we are still connected each time. For\n    // example, if a websocket buffer overflows, it may close, so we should\n    // stop sending messages.\n    while (\n      this.connectionStatus === 'connected' &&\n      this._pendingMessages.length > 0\n    ) {\n      this._sendMessage(this._pendingMessages[0], false);\n\n      // We shift the message off the queue after the message is sent so that\n      // if there is an exception, the message is still pending.\n      this._pendingMessages.shift();\n    }\n  }\n\n  /**\n   * Reconnect to a terminal.\n   *\n   * #### Notes\n   * This may try multiple times to reconnect to a terminal, and will sever\n   * any existing connection.\n   */\n  reconnect(): Promise<void> {\n    this._errorIfDisposed();\n    const result = new PromiseDelegate<void>();\n\n    // Set up a listener for the connection status changing, which accepts or\n    // rejects after the retries are done.\n    const fulfill = (sender: this, status: Terminal.ConnectionStatus) => {\n      if (status === 'connected') {\n        result.resolve();\n        this.connectionStatusChanged.disconnect(fulfill, this);\n      } else if (status === 'disconnected') {\n        result.reject(new Error('Terminal connection disconnected'));\n        this.connectionStatusChanged.disconnect(fulfill, this);\n      }\n    };\n    this.connectionStatusChanged.connect(fulfill, this);\n\n    // Reset the reconnect limit so we start the connection attempts fresh\n    this._reconnectAttempt = 0;\n\n    // Start the reconnection process, which will also clear any existing\n    // connection.\n    this._reconnect();\n\n    // Return the promise that should resolve on connection or reject if the\n    // retries don't work.\n    return result.promise;\n  }\n\n  /**\n   * Attempt a connection if we have not exhausted connection attempts.\n   */\n  _reconnect(): void {\n    this._errorIfDisposed();\n\n    // Clear any existing reconnection attempt\n    clearTimeout(this._reconnectTimeout);\n\n    // Update the connection status and schedule a possible reconnection.\n    if (this._reconnectAttempt < this._reconnectLimit) {\n      this._updateConnectionStatus('connecting');\n\n      // The first reconnect attempt should happen immediately, and subsequent\n      // attempts should pick a random number in a growing range so that we\n      // don't overload the server with synchronized reconnection attempts\n      // across multiple kernels.\n      const timeout = Private.getRandomIntInclusive(\n        0,\n        1e3 * (Math.pow(2, this._reconnectAttempt) - 1)\n      );\n      console.error(\n        `Connection lost, reconnecting in ${Math.floor(\n          timeout / 1000\n        )} seconds.`\n      );\n      this._reconnectTimeout = setTimeout(this._createSocket, timeout);\n      this._reconnectAttempt += 1;\n    } else {\n      this._updateConnectionStatus('disconnected');\n    }\n\n    // Clear the websocket event handlers and the socket itself.\n    this._clearSocket();\n  }\n\n  /**\n   * Forcefully clear the socket state.\n   *\n   * #### Notes\n   * This will clear all socket state without calling any handlers and will\n   * not update the connection status. If you call this method, you are\n   * responsible for updating the connection status as needed and recreating\n   * the socket if you plan to reconnect.\n   */\n  private _clearSocket(): void {\n    if (this._ws !== null) {\n      // Clear the websocket event handlers and the socket itself.\n      this._ws.onopen = this._noOp;\n      this._ws.onclose = this._noOp;\n      this._ws.onerror = this._noOp;\n      this._ws.onmessage = this._noOp;\n      this._ws.close();\n      this._ws = null;\n    }\n  }\n\n  /**\n   * Shut down the terminal session.\n   */\n  async shutdown(): Promise<void> {\n    await shutdownTerminal(this.name, this.serverSettings);\n    this.dispose();\n  }\n\n  /**\n   * Clone the current terminal connection.\n   */\n  clone(): Terminal.ITerminalConnection {\n    return new TerminalConnection(this);\n  }\n\n  /**\n   * Create the terminal websocket connection and add socket status handlers.\n   *\n   * #### Notes\n   * You are responsible for updating the connection status as appropriate.\n   */\n  private _createSocket = () => {\n    this._errorIfDisposed();\n\n    // Make sure the socket is clear\n    this._clearSocket();\n\n    // Update the connection status to reflect opening a new connection.\n    this._updateConnectionStatus('connecting');\n\n    const name = this._name;\n    const settings = this.serverSettings;\n\n    let url = URLExt.join(\n      settings.wsUrl,\n      'terminals',\n      'websocket',\n      encodeURIComponent(name)\n    );\n\n    // If token authentication is in use.\n    const token = settings.token;\n    if (settings.appendToken && token !== '') {\n      url = url + `?token=${encodeURIComponent(token)}`;\n    }\n\n    this._ws = new settings.WebSocket(url);\n\n    this._ws.onmessage = this._onWSMessage;\n    this._ws.onclose = this._onWSClose;\n    this._ws.onerror = this._onWSClose;\n  };\n\n  // Websocket messages events are defined as variables to bind `this`\n  private _onWSMessage = (event: MessageEvent) => {\n    if (this._isDisposed) {\n      return;\n    }\n    const data = JSON.parse(event.data) as JSONPrimitive[];\n\n    // Handle a disconnect message.\n    if (data[0] === 'disconnect') {\n      this.dispose();\n    }\n\n    if (this._connectionStatus === 'connecting') {\n      // After reconnection, ignore all messages until a 'setup' message\n      // before we are truly connected. Setting the connection status to\n      // connected only then means that if we do not get a setup message\n      // before our retry timeout, we will delete the websocket and try again.\n      if (data[0] === 'setup') {\n        this._updateConnectionStatus('connected');\n      }\n      return;\n    }\n\n    this._messageReceived.emit({\n      type: data[0] as Terminal.MessageType,\n      content: data.slice(1)\n    });\n  };\n\n  private _onWSClose = (event: CloseEvent) => {\n    console.warn(`Terminal websocket closed: ${event.code}`);\n    if (!this.isDisposed) {\n      this._reconnect();\n    }\n  };\n\n  /**\n   * Handle connection status changes.\n   */\n  private _updateConnectionStatus(\n    connectionStatus: Terminal.ConnectionStatus\n  ): void {\n    if (this._connectionStatus === connectionStatus) {\n      return;\n    }\n\n    this._connectionStatus = connectionStatus;\n\n    // If we are not 'connecting', stop any reconnection attempts.\n    if (connectionStatus !== 'connecting') {\n      this._reconnectAttempt = 0;\n      clearTimeout(this._reconnectTimeout);\n    }\n\n    // Send the pending messages if we just connected.\n    if (connectionStatus === 'connected') {\n      this._sendPending();\n    }\n\n    // Notify others that the connection status changed.\n    this._connectionStatusChanged.emit(connectionStatus);\n  }\n\n  /**\n   * Utility function to throw an error if this instance is disposed.\n   */\n  private _errorIfDisposed() {\n    if (this.isDisposed) {\n      throw new Error('Terminal connection is disposed');\n    }\n  }\n\n  /**\n   * A signal emitted when the terminal connection status changes.\n   */\n  get connectionStatusChanged(): ISignal<this, Terminal.ConnectionStatus> {\n    return this._connectionStatusChanged;\n  }\n\n  /**\n   * The current connection status of the terminal connection.\n   */\n  get connectionStatus(): Terminal.ConnectionStatus {\n    return this._connectionStatus;\n  }\n\n  private _connectionStatus: Terminal.ConnectionStatus = 'connecting';\n  private _connectionStatusChanged = new Signal<\n    this,\n    Terminal.ConnectionStatus\n  >(this);\n  private _isDisposed = false;\n  private _disposed = new Signal<this, void>(this);\n  private _messageReceived = new Signal<this, Terminal.IMessage>(this);\n  private _name: string;\n  private _reconnectTimeout: any = null;\n  private _ws: WebSocket | null = null;\n  private _noOp = () => {\n    /* no-op */\n  };\n  private _reconnectLimit = 7;\n  private _reconnectAttempt = 0;\n  private _pendingMessages: Terminal.IMessage[] = [];\n}\n\nnamespace Private {\n  /**\n   * Get the url for a terminal.\n   */\n  export function getTermUrl(baseUrl: string, name: string): string {\n    return URLExt.join(baseUrl, TERMINAL_SERVICE_URL, encodeURIComponent(name));\n  }\n\n  /**\n   * Get a random integer between min and max, inclusive of both.\n   *\n   * #### Notes\n   * From\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random#Getting_a_random_integer_between_two_values_inclusive\n   *\n   * From the MDN page: It might be tempting to use Math.round() to accomplish\n   * that, but doing so would cause your random numbers to follow a non-uniform\n   * distribution, which may not be acceptable for your needs.\n   */\n  export function getRandomIntInclusive(min: number, max: number): number {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { Poll } from '@lumino/polling';\n\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { ServerConnection } from '..';\n\nimport * as Terminal from './terminal';\nimport { BaseManager } from '../basemanager';\nimport {\n  isAvailable,\n  listRunning,\n  shutdownTerminal,\n  startNew\n} from './restapi';\nimport { TerminalConnection } from './default';\n\n/**\n * A terminal session manager.\n */\nexport class TerminalManager extends BaseManager implements Terminal.IManager {\n  /**\n   * Construct a new terminal manager.\n   */\n  constructor(options: TerminalManager.IOptions = {}) {\n    super(options);\n\n    // Check if terminals are available\n    if (!this.isAvailable()) {\n      this._ready = Promise.reject('Terminals unavailable');\n      this._ready.catch(_ => undefined);\n      return;\n    }\n\n    // Start polling with exponential backoff.\n    this._pollModels = new Poll({\n      auto: false,\n      factory: () => this.requestRunning(),\n      frequency: {\n        interval: 10 * 1000,\n        backoff: true,\n        max: 300 * 1000\n      },\n      name: `@jupyterlab/services:TerminalManager#models`,\n      standby: options.standby ?? 'when-hidden'\n    });\n\n    // Initialize internal data.\n    this._ready = (async () => {\n      await this._pollModels.start();\n      await this._pollModels.tick;\n      this._isReady = true;\n    })();\n  }\n\n  /**\n   * The server settings of the manager.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n\n  /**\n   * Test whether the manager is ready.\n   */\n  get isReady(): boolean {\n    return this._isReady;\n  }\n\n  /**\n   * A promise that fulfills when the manager is ready.\n   */\n  get ready(): Promise<void> {\n    return this._ready;\n  }\n\n  /**\n   * A signal emitted when the running terminals change.\n   */\n  get runningChanged(): ISignal<this, Terminal.IModel[]> {\n    return this._runningChanged;\n  }\n\n  /**\n   * A signal emitted when there is a connection failure.\n   */\n  get connectionFailure(): ISignal<this, Error> {\n    return this._connectionFailure;\n  }\n\n  /**\n   * Dispose of the resources used by the manager.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._names.length = 0;\n    this._terminalConnections.forEach(x => x.dispose());\n    this._pollModels.dispose();\n    super.dispose();\n  }\n\n  /**\n   * Whether the terminal service is available.\n   */\n  isAvailable(): boolean {\n    return isAvailable();\n  }\n\n  /*\n   * Connect to a running terminal.\n   *\n   * @param options - The options used to connect to the terminal.\n   *\n   * @returns The new terminal connection instance.\n   *\n   * #### Notes\n   * The manager `serverSettings` will be used.\n   */\n  connectTo(\n    options: Omit<Terminal.ITerminalConnection.IOptions, 'serverSettings'>\n  ): Terminal.ITerminalConnection {\n    const terminalConnection = new TerminalConnection({\n      ...options,\n      serverSettings: this.serverSettings\n    });\n    this._onStarted(terminalConnection);\n    if (!this._names.includes(options.model.name)) {\n      // We trust the user to connect to an existing session, but we verify\n      // asynchronously.\n      void this.refreshRunning().catch(() => {\n        /* no-op */\n      });\n    }\n    return terminalConnection;\n  }\n\n  /**\n   * Create an iterator over the most recent running terminals.\n   *\n   * @returns A new iterator over the running terminals.\n   */\n  running(): IterableIterator<Terminal.IModel> {\n    return this._models[Symbol.iterator]();\n  }\n\n  /**\n   * Force a refresh of the running terminals.\n   *\n   * @returns A promise that with the list of running terminals.\n   *\n   * #### Notes\n   * This is intended to be called only in response to a user action,\n   * since the manager maintains its internal state.\n   */\n  async refreshRunning(): Promise<void> {\n    await this._pollModels.refresh();\n    await this._pollModels.tick;\n  }\n\n  /**\n   * Create a new terminal session.\n   *\n   * @param options - The options used to create the terminal.\n   *\n   * @returns A promise that resolves with the terminal connection instance.\n   *\n   * #### Notes\n   * The manager `serverSettings` will be used unless overridden in the\n   * options.\n   */\n  async startNew(\n    options?: Terminal.ITerminal.IOptions\n  ): Promise<Terminal.ITerminalConnection> {\n    const model = await startNew(\n      this.serverSettings,\n      options?.name,\n      options?.cwd\n    );\n    await this.refreshRunning();\n    return this.connectTo({ model });\n  }\n\n  /**\n   * Shut down a terminal session by name.\n   */\n  async shutdown(name: string): Promise<void> {\n    await shutdownTerminal(name, this.serverSettings);\n    await this.refreshRunning();\n  }\n\n  /**\n   * Shut down all terminal sessions.\n   *\n   * @returns A promise that resolves when all of the sessions are shut down.\n   */\n  async shutdownAll(): Promise<void> {\n    // Update the list of models to make sure our list is current.\n    await this.refreshRunning();\n\n    // Shut down all models.\n    await Promise.all(\n      this._names.map(name => shutdownTerminal(name, this.serverSettings))\n    );\n\n    // Update the list of models to clear out our state.\n    await this.refreshRunning();\n  }\n\n  /**\n   * Execute a request to the server to poll running terminals and update state.\n   */\n  protected async requestRunning(): Promise<void> {\n    let models: Terminal.IModel[];\n    try {\n      models = await listRunning(this.serverSettings);\n    } catch (err) {\n      // Handle network errors, as well as cases where we are on a\n      // JupyterHub and the server is not running. JupyterHub returns a\n      // 503 (<2.0) or 424 (>2.0) in that case.\n      if (\n        err instanceof ServerConnection.NetworkError ||\n        err.response?.status === 503 ||\n        err.response?.status === 424\n      ) {\n        this._connectionFailure.emit(err);\n      }\n      throw err;\n    }\n\n    if (this.isDisposed) {\n      return;\n    }\n\n    const names = models.map(({ name }) => name).sort();\n    if (names === this._names) {\n      // Identical models list, so just return\n      return;\n    }\n\n    this._names = names;\n    this._terminalConnections.forEach(tc => {\n      if (!names.includes(tc.name)) {\n        tc.dispose();\n      }\n    });\n    this._runningChanged.emit(this._models);\n  }\n\n  /**\n   * Handle a session starting.\n   */\n  private _onStarted(terminalConnection: Terminal.ITerminalConnection): void {\n    this._terminalConnections.add(terminalConnection);\n    terminalConnection.disposed.connect(this._onDisposed, this);\n  }\n\n  /**\n   * Handle a session terminating.\n   */\n  private _onDisposed(terminalConnection: Terminal.ITerminalConnection): void {\n    this._terminalConnections.delete(terminalConnection);\n    // Update the running models to make sure we reflect the server state\n    void this.refreshRunning().catch(() => {\n      /* no-op */\n    });\n  }\n\n  private _isReady = false;\n\n  // As an optimization, we unwrap the models to just store the names.\n  private _names: string[] = [];\n  private get _models(): Terminal.IModel[] {\n    return this._names.map(name => {\n      return { name };\n    });\n  }\n\n  private _pollModels: Poll;\n  private _terminalConnections = new Set<Terminal.ITerminalConnection>();\n  private _ready: Promise<void>;\n  private _runningChanged = new Signal<this, Terminal.IModel[]>(this);\n  private _connectionFailure = new Signal<this, Error>(this);\n}\n\n/**\n * The namespace for TerminalManager statics.\n */\nexport namespace TerminalManager {\n  /**\n   * The options used to initialize a terminal manager.\n   */\n  export interface IOptions extends BaseManager.IOptions {\n    /**\n     * When the manager stops polling the API. Defaults to `when-hidden`.\n     */\n    standby?: Poll.Standby | (() => boolean | Poll.Standby);\n  }\n\n  /**\n   * A no-op terminal manager to be used when starting terminals is not supported.\n   */\n  export class NoopManager extends TerminalManager {\n    /**\n     * Whether the manager is active.\n     */\n    get isActive(): boolean {\n      return false;\n    }\n\n    /**\n     * Used for testing.\n     */\n    get parentReady(): Promise<void> {\n      return super.ready;\n    }\n\n    /**\n     * A promise that fulfills when the manager is ready (never).\n     */\n    get ready(): Promise<void> {\n      return this.parentReady.then(() => this._readyPromise);\n    }\n\n    /**\n     * Create a new terminal session - throw an error since it is not supported.\n     *\n     */\n    async startNew(\n      options?: Terminal.ITerminal.IOptions\n    ): Promise<Terminal.ITerminalConnection> {\n      return Promise.reject(\n        new Error('Not implemented in no-op Terminal Manager')\n      );\n    }\n\n    /*\n     * Connect to a running terminal - throw an error since it is not supported.\n     */\n    connectTo(\n      options: Omit<Terminal.ITerminalConnection.IOptions, 'serverSettings'>\n    ): Terminal.ITerminalConnection {\n      throw Error('Not implemented in no-op Terminal Manager');\n    }\n\n    /**\n     * Shut down a session by id - throw an error since it is not supported.\n     */\n    async shutdown(id: string): Promise<void> {\n      return Promise.reject(\n        new Error('Not implemented in no-op Terminal Manager')\n      );\n    }\n\n    /**\n     * Execute a request to the server to poll running sessions and update state.\n     */\n    protected async requestRunning(): Promise<void> {\n      return Promise.resolve();\n    }\n\n    private _readyPromise = new Promise<void>(() => {\n      /* no-op */\n    });\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport * as Terminal from './terminal';\nimport * as TerminalAPI from './restapi';\n\nexport * from './manager';\nexport { Terminal, TerminalAPI };\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { URLExt } from '@jupyterlab/coreutils';\n\nimport {\n  JSONExt,\n  PartialJSONObject,\n  ReadonlyJSONObject\n} from '@lumino/coreutils';\n\nimport { Poll } from '@lumino/polling';\n\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { ServerConnection } from '../serverconnection';\n\nimport { BaseManager, IManager as IBaseManager } from '../basemanager';\n\n/**\n * The url for the lab workspaces service.\n */\nconst SERVICE_USER_URL = 'api/me';\n\n/**\n * The service's ID.\n * Used to uniquely identify the poll, and\n * the item in local storage.\n */\nconst SERVICE_ID = '@jupyterlab/services:UserManager#user';\n\n/**\n * The user API service manager.\n */\nexport class UserManager extends BaseManager implements User.IManager {\n  private _isReady = false;\n  private _ready: Promise<void>;\n  private _pollSpecs: Poll;\n\n  private _identity: User.IIdentity;\n  private _permissions: ReadonlyJSONObject;\n\n  private _userChanged = new Signal<this, User.IUser>(this);\n  private _connectionFailure = new Signal<this, Error>(this);\n\n  /**\n   * Create a new user manager.\n   */\n  constructor(options: UserManager.IOptions = {}) {\n    super(options);\n\n    // Initialize internal data.\n    this._ready = this.requestUser()\n      .then(() => {\n        if (this.isDisposed) {\n          return;\n        }\n        this._isReady = true;\n      })\n      .catch(\n        _ =>\n          // Return a promise that will never resolve, so user service is never ready\n          // This typically occurs when the backend has no user service\n          new Promise(() => {\n            // no-op\n          })\n      );\n\n    this._pollSpecs = new Poll({\n      auto: false,\n      factory: () => this.requestUser(),\n      frequency: {\n        interval: 61 * 1000,\n        backoff: true,\n        max: 300 * 1000\n      },\n      name: SERVICE_ID,\n      standby: options.standby ?? 'when-hidden'\n    });\n\n    void this.ready.then(() => {\n      void this._pollSpecs.start();\n    });\n  }\n\n  /**\n   * The server settings for the manager.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n\n  /**\n   * Test whether the manager is ready.\n   */\n  get isReady(): boolean {\n    return this._isReady;\n  }\n\n  /**\n   * A promise that fulfills when the manager is ready.\n   */\n  get ready(): Promise<void> {\n    return this._ready;\n  }\n\n  /**\n   * Get the most recently fetched identity.\n   */\n  get identity(): User.IIdentity | null {\n    return this._identity;\n  }\n\n  /**\n   * Get the most recently fetched permissions.\n   */\n  get permissions(): ReadonlyJSONObject | null {\n    return this._permissions;\n  }\n\n  /**\n   * A signal emitted when the user changes.\n   */\n  get userChanged(): ISignal<this, User.IUser> {\n    return this._userChanged;\n  }\n\n  /**\n   * A signal emitted when there is a connection failure.\n   */\n  get connectionFailure(): ISignal<this, Error> {\n    return this._connectionFailure;\n  }\n\n  /**\n   * Dispose of the resources used by the manager.\n   */\n  dispose(): void {\n    this._pollSpecs.dispose();\n    super.dispose();\n  }\n\n  /**\n   * Force a refresh of the specs from the server.\n   *\n   * @returns A promise that resolves when the specs are fetched.\n   *\n   * #### Notes\n   * This is intended to be called only in response to a user action,\n   * since the manager maintains its internal state.\n   */\n  async refreshUser(): Promise<void> {\n    await this._pollSpecs.refresh();\n    await this._pollSpecs.tick;\n  }\n\n  /**\n   * Execute a request to the server to poll the user and update state.\n   */\n  protected async requestUser(): Promise<void> {\n    if (this.isDisposed) {\n      return;\n    }\n\n    const { baseUrl } = this.serverSettings;\n    const { makeRequest, ResponseError } = ServerConnection;\n    const url = URLExt.join(baseUrl, SERVICE_USER_URL);\n    const response: Response = await makeRequest(url, {}, this.serverSettings);\n\n    if (response.status !== 200) {\n      const err = await ResponseError.create(response);\n      throw err;\n    }\n\n    const oldUser = {\n      identity: this._identity,\n      permissions: this._permissions\n    };\n    const newUser = await response.json();\n    const identity = newUser.identity;\n\n    // store the color and initials for the user\n    // this info is not provided by the server\n    const { localStorage } = window;\n    const data = localStorage.getItem(SERVICE_ID);\n\n    if (data && (!identity.initials || !identity.color)) {\n      const localUser = JSON.parse(data);\n      identity.initials =\n        identity.initials ||\n        localUser.initials ||\n        identity.name.substring(0, 1);\n      identity.color =\n        identity.color || localUser.color || Private.getRandomColor();\n    }\n\n    if (!JSONExt.deepEqual(newUser, oldUser)) {\n      this._identity = identity;\n      this._permissions = newUser.permissions;\n      localStorage.setItem(SERVICE_ID, JSON.stringify(identity));\n      this._userChanged.emit(newUser);\n    }\n  }\n}\n\n/**\n * A namespace for `UserManager` statics.\n */\nexport namespace UserManager {\n  /**\n   * The instantiation options for a user manager.\n   */\n  export interface IOptions extends BaseManager.IOptions {\n    /**\n     * When the manager stops polling the API. Defaults to `when-hidden`.\n     */\n    standby?: Poll.Standby | (() => boolean | Poll.Standby);\n  }\n}\n\n/**\n * A namespace for user API interfaces.\n */\nexport namespace User {\n  /**\n   * The interface describing a user identity.\n   */\n  export interface IUser {\n    readonly identity: IIdentity;\n\n    readonly permissions: PartialJSONObject;\n  }\n\n  /**\n   * The interface describing a user identity.\n   */\n  export interface IIdentity extends PartialJSONObject {\n    /**\n     * User's unique identifier.\n     */\n    readonly username: string;\n\n    /**\n     * User's full name.\n     */\n    readonly name: string;\n\n    /**\n     * Shorter version of the name for displaying it on the UI.\n     */\n    readonly display_name: string;\n\n    /**\n     * User's name initials.\n     */\n    readonly initials: string;\n\n    /**\n     * User's cursor color and icon color if avatar_url is undefined\n     * (there is no image).\n     */\n    readonly color: string;\n\n    /**\n     * User's avatar url.\n     * The url to the user's image for the icon.\n     */\n    readonly avatar_url?: string;\n  }\n\n  /**\n   * Object which manages user's identity.\n   *\n   * #### Notes\n   * The manager is responsible for maintaining the state of the user.\n   */\n  export interface IManager extends IBaseManager {\n    /**\n     * A signal emitted when the user changes.\n     */\n    userChanged: ISignal<this, User.IUser>;\n\n    /**\n     * User's identity.\n     *\n     * #### Notes\n     * The value will be null until the manager is ready.\n     */\n    readonly identity: User.IIdentity | null;\n\n    /**\n     * User's permissions.\n     *\n     * #### Notes\n     * The value will be null until the manager is ready.\n     */\n    readonly permissions: ReadonlyJSONObject | null;\n\n    /**\n     * Force a refresh of user's identity from the server.\n     *\n     * @returns A promise that resolves when the identity is fetched.\n     *\n     * #### Notes\n     * This is intended to be called only in response to a user action,\n     * since the manager maintains its internal state.\n     */\n    refreshUser(): Promise<void>;\n  }\n}\n\n/**\n * A namespace for module-private functionality.\n *\n * Note: We do not want to export this function\n * to move it to css variables in the Theme.\n */\nnamespace Private {\n  /**\n   * Predefined colors for users\n   */\n  const userColors = [\n    'var(--jp-collaborator-color1)',\n    'var(--jp-collaborator-color2)',\n    'var(--jp-collaborator-color3)',\n    'var(--jp-collaborator-color4)',\n    'var(--jp-collaborator-color5)',\n    'var(--jp-collaborator-color6)',\n    'var(--jp-collaborator-color7)'\n  ];\n\n  /**\n   * Get a random color from the list of colors.\n   */\n  export const getRandomColor = (): string =>\n    userColors[Math.floor(Math.random() * userColors.length)];\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { URLExt } from '@jupyterlab/coreutils';\n\nimport { DataConnector } from '@jupyterlab/statedb';\n\nimport { ReadonlyPartialJSONObject } from '@lumino/coreutils';\n\nimport { ServerConnection } from '../serverconnection';\n\n/**\n * The url for the lab workspaces service.\n */\nconst SERVICE_WORKSPACES_URL = 'api/workspaces';\n\n/**\n * The workspaces API service manager.\n */\nexport class WorkspaceManager extends DataConnector<Workspace.IWorkspace> {\n  /**\n   * Create a new workspace manager.\n   */\n  constructor(options: WorkspaceManager.IOptions = {}) {\n    super();\n    this.serverSettings =\n      options.serverSettings ?? ServerConnection.makeSettings();\n  }\n\n  /**\n   * The server settings used to make API requests.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n\n  /**\n   * Fetch a workspace.\n   *\n   * @param id - The workspace's ID.\n   *\n   * @returns A promise that resolves if successful.\n   */\n  async fetch(id: string): Promise<Workspace.IWorkspace> {\n    const { serverSettings } = this;\n    const { baseUrl, appUrl } = serverSettings;\n    const { makeRequest, ResponseError } = ServerConnection;\n    const base = baseUrl + appUrl;\n    const url = Private.url(base, id);\n    const response = await makeRequest(url, {}, serverSettings);\n\n    if (response.status !== 200) {\n      const err = await ResponseError.create(response);\n      throw err;\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Fetch the list of workspace IDs that exist on the server.\n   *\n   * @returns A promise that resolves if successful.\n   */\n  async list(): Promise<{ ids: string[]; values: Workspace.IWorkspace[] }> {\n    const { serverSettings } = this;\n    const { baseUrl, appUrl } = serverSettings;\n    const { makeRequest, ResponseError } = ServerConnection;\n    const base = baseUrl + appUrl;\n    const url = Private.url(base, '');\n    const response = await makeRequest(url, {}, serverSettings);\n\n    if (response.status !== 200) {\n      const err = await ResponseError.create(response);\n      throw err;\n    }\n\n    const result = await response.json();\n\n    return result.workspaces;\n  }\n\n  /**\n   * Remove a workspace from the server.\n   *\n   * @param id - The workspaces's ID.\n   *\n   * @returns A promise that resolves if successful.\n   */\n  async remove(id: string): Promise<void> {\n    const { serverSettings } = this;\n    const { baseUrl, appUrl } = serverSettings;\n    const { makeRequest, ResponseError } = ServerConnection;\n    const base = baseUrl + appUrl;\n    const url = Private.url(base, id);\n    const init = { method: 'DELETE' };\n    const response = await makeRequest(url, init, serverSettings);\n\n    if (response.status !== 204) {\n      const err = await ResponseError.create(response);\n      throw err;\n    }\n  }\n\n  /**\n   * Save a workspace.\n   *\n   * @param id - The workspace's ID.\n   *\n   * @param workspace - The workspace being saved.\n   *\n   * @returns A promise that resolves if successful.\n   */\n  async save(id: string, workspace: Workspace.IWorkspace): Promise<void> {\n    const { serverSettings } = this;\n    const { baseUrl, appUrl } = serverSettings;\n    const { makeRequest, ResponseError } = ServerConnection;\n    const base = baseUrl + appUrl;\n    const url = Private.url(base, id);\n    const init = { body: JSON.stringify(workspace), method: 'PUT' };\n    const response = await makeRequest(url, init, serverSettings);\n\n    if (response.status !== 204) {\n      const err = await ResponseError.create(response);\n      throw err;\n    }\n  }\n}\n\n/**\n * A namespace for `WorkspaceManager` statics.\n */\nexport namespace WorkspaceManager {\n  /**\n   * The instantiation options for a workspace manager.\n   */\n  export interface IOptions {\n    /**\n     * The server settings used to make API requests.\n     */\n    serverSettings?: ServerConnection.ISettings;\n  }\n}\n\n/**\n * A namespace for workspace API interfaces.\n */\nexport namespace Workspace {\n  /**\n   * The interface for the workspace API manager.\n   */\n  export interface IManager extends WorkspaceManager {}\n\n  /**\n   * The interface describing a workspace API response.\n   */\n  export interface IWorkspace {\n    /**\n     * The workspace data.\n     */\n    data: ReadonlyPartialJSONObject;\n\n    /**\n     * The metadata for a workspace.\n     */\n    metadata: {\n      /**\n       * The workspace ID.\n       */\n      id: string;\n    };\n  }\n}\n\n/**\n * A namespace for private data.\n */\nnamespace Private {\n  /**\n   * Get the url for a workspace.\n   */\n  export function url(base: string, id: string): string {\n    const workspacesBase = URLExt.join(base, SERVICE_WORKSPACES_URL);\n    const result = URLExt.join(workspacesBase, id);\n    if (!result.startsWith(workspacesBase)) {\n      throw new Error('Can only be used for workspaces requests');\n    }\n    return result;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { IDisposable } from '@lumino/disposable';\n\nimport { Poll } from '@lumino/polling';\n\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { Builder, BuildManager } from './builder';\n\nimport { Contents, ContentsManager } from './contents';\n\nimport { Event, EventManager } from './event';\n\nimport { Kernel, KernelManager } from './kernel';\n\nimport { KernelSpec, KernelSpecManager } from './kernelspec';\n\nimport { NbConvert, NbConvertManager } from './nbconvert';\n\nimport { ServerConnection } from './serverconnection';\n\nimport { Session, SessionManager } from './session';\n\nimport { Setting, SettingManager } from './setting';\n\nimport { Terminal, TerminalManager } from './terminal';\n\nimport { User, UserManager } from './user';\n\nimport { Workspace, WorkspaceManager } from './workspace';\n\n/**\n * A Jupyter services manager.\n */\nexport class ServiceManager implements ServiceManager.IManager {\n  /**\n   * Construct a new services provider.\n   */\n  constructor(options: Partial<ServiceManager.IOptions> = {}) {\n    const defaultDrive = options.defaultDrive;\n    const serverSettings =\n      options.serverSettings ?? ServerConnection.makeSettings();\n    const standby = options.standby ?? 'when-hidden';\n    const normalized = { defaultDrive, serverSettings, standby };\n\n    this.serverSettings = serverSettings;\n    this.contents = options.contents || new ContentsManager(normalized);\n    this.events = options.events || new EventManager(normalized);\n    this.kernels = options.kernels || new KernelManager(normalized);\n    this.sessions =\n      options.sessions ||\n      new SessionManager({\n        ...normalized,\n        kernelManager: this.kernels\n      });\n    this.settings = options.settings || new SettingManager(normalized);\n    this.terminals = options.terminals || new TerminalManager(normalized);\n    this.builder = options.builder || new BuildManager(normalized);\n    this.workspaces = options.workspaces || new WorkspaceManager(normalized);\n    this.nbconvert = options.nbconvert || new NbConvertManager(normalized);\n    this.kernelspecs = options.kernelspecs || new KernelSpecManager(normalized);\n    this.user = options.user || new UserManager(normalized);\n\n    // Proxy all connection failures from the individual service managers.\n    this.kernelspecs.connectionFailure.connect(this._onConnectionFailure, this);\n    this.sessions.connectionFailure.connect(this._onConnectionFailure, this);\n    this.terminals.connectionFailure.connect(this._onConnectionFailure, this);\n\n    // Define promises that need to be resolved before service manager is ready.\n    const readyList = [this.sessions.ready, this.kernelspecs.ready];\n    if (this.terminals.isAvailable()) {\n      readyList.push(this.terminals.ready);\n    }\n    this._readyPromise = Promise.all(readyList).then(() => {\n      this._isReady = true;\n    });\n  }\n\n  /**\n   * A signal emitted when there is a connection failure with the kernel.\n   */\n  get connectionFailure(): ISignal<this, Error> {\n    return this._connectionFailure;\n  }\n\n  /**\n   * Test whether the service manager is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * Dispose of the resources used by the manager.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n\n    this._isDisposed = true;\n    Signal.clearData(this);\n\n    this.contents.dispose();\n    this.events.dispose();\n    this.sessions.dispose();\n    this.terminals.dispose();\n  }\n\n  /**\n   * The server settings of the manager.\n   */\n  readonly serverSettings: ServerConnection.ISettings;\n\n  /**\n   * Get the session manager instance.\n   */\n  readonly sessions: Session.IManager;\n\n  /**\n   * Get the kernel manager instance.\n   */\n  readonly kernels: Kernel.IManager;\n\n  /**\n   * Get the kernelspec manager instance.\n   */\n  readonly kernelspecs: KernelSpec.IManager;\n\n  /**\n   * Get the setting manager instance.\n   */\n  readonly settings: Setting.IManager;\n\n  /**\n   * The builder for the manager.\n   */\n  readonly builder: Builder.IManager;\n\n  /**\n   * Get the contents manager instance.\n   */\n  readonly contents: Contents.IManager;\n\n  /**\n   * The event manager instance.\n   */\n  readonly events: Event.IManager;\n\n  /**\n   * Get the terminal manager instance.\n   */\n  readonly terminals: Terminal.IManager;\n\n  /**\n   * Get the user manager instance.\n   */\n  readonly user: User.IManager;\n\n  /**\n   * Get the workspace manager instance.\n   */\n  readonly workspaces: Workspace.IManager;\n\n  /**\n   * Get the nbconvert manager instance.\n   */\n  readonly nbconvert: NbConvert.IManager;\n\n  /**\n   * Test whether the manager is ready.\n   */\n  get isReady(): boolean {\n    return this._isReady;\n  }\n\n  /**\n   * A promise that fulfills when the manager is ready.\n   */\n  get ready(): Promise<void> {\n    return this._readyPromise;\n  }\n\n  private _onConnectionFailure(sender: any, err: Error): void {\n    this._connectionFailure.emit(err);\n  }\n\n  private _isDisposed = false;\n  private _readyPromise: Promise<void>;\n  private _connectionFailure = new Signal<this, Error>(this);\n  private _isReady = false;\n}\n\n/**\n * The namespace for `ServiceManager` statics.\n */\nexport namespace ServiceManager {\n  /**\n   * A service manager interface.\n   */\n  export interface IManager extends IDisposable, IManagers {\n    /**\n     * Test whether the manager is ready.\n     */\n    readonly isReady: boolean;\n\n    /**\n     * A promise that fulfills when the manager is initially ready.\n     */\n    readonly ready: Promise<void>;\n\n    /**\n     * A signal emitted when there is a connection failure with the server.\n     */\n    readonly connectionFailure: ISignal<IManager, Error>;\n  }\n\n  /**\n   * The options used to create a service manager.\n   */\n  export interface IOptions extends IManagers {\n    /**\n     * The default drive for the contents manager.\n     */\n    readonly defaultDrive: Contents.IDrive;\n\n    /**\n     * When the manager stops polling the API. Defaults to `when-hidden`.\n     */\n    standby: Poll.Standby | (() => boolean | Poll.Standby);\n  }\n\n  /**\n   * The managers provided by the service manager.\n   */\n  interface IManagers {\n    /**\n     * The builder for the manager.\n     *\n     * @deprecated will be removed in JupyterLab v5\n     */\n    readonly builder: Builder.IManager;\n\n    /**\n     * The contents manager for the manager.\n     */\n    readonly contents: Contents.IManager;\n\n    /**\n     * The events service manager.\n     */\n    readonly events: Event.IManager;\n\n    /**\n     * A promise that fulfills when the manager is initially ready.\n     */\n    readonly ready: Promise<void>;\n\n    /**\n     * The server settings of the manager.\n     */\n    readonly serverSettings: ServerConnection.ISettings;\n\n    /**\n     * The session manager for the manager.\n     */\n    readonly sessions: Session.IManager;\n\n    /**\n     * The kernel manager of the manager.\n     */\n    readonly kernels: Kernel.IManager;\n\n    /**\n     * The kernelspec manager for the manager.\n     */\n    readonly kernelspecs: KernelSpec.IManager;\n\n    /**\n     * The setting manager for the manager.\n     */\n    readonly settings: Setting.IManager;\n\n    /**\n     * The terminals manager for the manager.\n     */\n    readonly terminals: Terminal.IManager;\n\n    /**\n     * The user manager for the manager.\n     */\n    readonly user: User.IManager;\n\n    /**\n     * The workspace manager for the manager.\n     */\n    readonly workspaces: Workspace.IManager;\n\n    /**\n     * The nbconvert manager for the manager.\n     */\n    readonly nbconvert: NbConvert.IManager;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module services\n */\n\nexport * from './basemanager';\nexport * from './config';\nexport * from './contents';\nexport * from './event';\nexport * from './kernel';\nexport * from './kernelspec';\nexport * from './manager';\nexport * from './serverconnection';\nexport * from './session';\nexport * from './setting';\nexport * from './terminal';\nexport * from './user';\nexport * from './workspace';\nexport * from './nbconvert';\n\nexport { Builder } from './builder';\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { URLExt } from '@jupyterlab/coreutils';\n\nimport { ServerConnection } from '@jupyterlab/services';\n\n/**\n * The url for the translations service.\n */\nconst TRANSLATIONS_SETTINGS_URL = 'api/translations';\n\n/**\n * Call the API extension\n *\n * @param locale API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestTranslationsAPI<T>(\n  translationsUrl: string = '',\n  locale = '',\n  init: RequestInit = {},\n  serverSettings: ServerConnection.ISettings | undefined = undefined\n): Promise<T> {\n  // Make request to Jupyter API\n  const settings = serverSettings ?? ServerConnection.makeSettings();\n  translationsUrl =\n    translationsUrl || `${settings.appUrl}/${TRANSLATIONS_SETTINGS_URL}`;\n  const requestUrl = URLExt.join(settings.baseUrl, translationsUrl, locale);\n  let response: Response;\n  try {\n    response = await ServerConnection.makeRequest(requestUrl, init, settings);\n  } catch (error) {\n    throw new ServerConnection.NetworkError(error);\n  }\n\n  let data: any = await response.text();\n\n  if (data.length > 0) {\n    try {\n      data = JSON.parse(data);\n    } catch (error) {\n      console.error('Not a JSON response body.', response);\n    }\n  }\n\n  if (!response.ok) {\n    throw new ServerConnection.ResponseError(response, data.message || data);\n  }\n\n  return data;\n}\n", "/* ----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n\nimport type { IRenderMime } from '@jupyterlab/rendermime-interfaces';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { DataConnector, IDataConnector } from '@jupyterlab/statedb';\nimport { Token } from '@lumino/coreutils';\nimport { requestTranslationsAPI } from './server';\n\n/*\n * Translation\n */\nexport type Language = { [key: string]: string };\n\n/**\n * Translation connection interface.\n */\nexport interface ITranslatorConnector\n  extends IDataConnector<Language, Language, { language: string }> {}\n\n/**\n * A service to connect to the server translation endpoint\n */\nexport const ITranslatorConnector = new Token<ITranslatorConnector>(\n  '@jupyterlab/translation:ITranslatorConnector',\n  'A service to connect to the server translation endpoint.'\n);\n\nexport class TranslatorConnector\n  extends DataConnector<Language, Language, { language: string }>\n  implements ITranslatorConnector\n{\n  constructor(\n    translationsUrl: string = '',\n    serverSettings?: ServerConnection.ISettings\n  ) {\n    super();\n    this._translationsUrl = translationsUrl;\n    this._serverSettings = serverSettings;\n  }\n\n  async fetch(opts: { language: string }): Promise<Language> {\n    return requestTranslationsAPI(\n      this._translationsUrl,\n      opts.language,\n      {},\n      this._serverSettings\n    );\n  }\n\n  private _serverSettings: ServerConnection.ISettings | undefined;\n  private _translationsUrl: string;\n}\n\n/**\n * Bundle of gettext-based translation functions for a specific domain.\n */\nexport type TranslationBundle = IRenderMime.TranslationBundle;\n\n/**\n * Translation provider interface\n */\nexport interface ITranslator extends IRenderMime.ITranslator {}\n\n/**\n * Translation provider token\n */\nexport const ITranslator = new Token<ITranslator>(\n  '@jupyterlab/translation:ITranslator',\n  'A service to translate strings.'\n);\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { ServerConnection } from '@jupyterlab/services';\nimport { Gettext } from './gettext';\nimport { ITranslator, TranslationBundle, TranslatorConnector } from './tokens';\nimport { normalizeDomain } from './utils';\n\n/**\n * Translation Manager\n */\nexport class TranslationManager implements ITranslator {\n  constructor(\n    translationsUrl: string = '',\n    stringsPrefix?: string,\n    serverSettings?: ServerConnection.ISettings\n  ) {\n    this._connector = new TranslatorConnector(translationsUrl, serverSettings);\n    this._stringsPrefix = stringsPrefix || '';\n    this._englishBundle = new Gettext({ stringsPrefix: this._stringsPrefix });\n  }\n\n  get languageCode(): string {\n    return this._currentLocale;\n  }\n\n  /**\n   * Fetch the localization data from the server.\n   *\n   * @param locale The language locale to use for translations.\n   */\n  async fetch(locale: string): Promise<void> {\n    this._languageData = await this._connector.fetch({ language: locale });\n    if (this._languageData && locale === 'default') {\n      try {\n        for (const lang of Object.values(this._languageData.data ?? {})) {\n          this._currentLocale =\n            // If the language is provided by the system set up, we need to retrieve the final\n            // language. This is done through the `\"\"` entry in `_languageData` that contains\n            // language metadata.\n            ((lang as any)['']['language'] as string).replace('_', '-');\n          break;\n        }\n      } catch (reason) {\n        this._currentLocale = 'en';\n      }\n    } else {\n      this._currentLocale = locale;\n    }\n\n    this._domainData = this._languageData?.data ?? {};\n    const message: string = this._languageData?.message;\n    if (message && locale !== 'en') {\n      console.warn(message);\n    }\n  }\n\n  /**\n   * Load translation bundles for a given domain.\n   *\n   * @param domain The translation domain to use for translations.\n   */\n  load(domain: string): TranslationBundle {\n    if (this._domainData) {\n      if (this._currentLocale == 'en') {\n        return this._englishBundle;\n      } else {\n        domain = normalizeDomain(domain);\n        if (!(domain in this._translationBundles)) {\n          let translationBundle = new Gettext({\n            domain: domain,\n            locale: this._currentLocale,\n            stringsPrefix: this._stringsPrefix\n          });\n          if (domain in this._domainData) {\n            let metadata = this._domainData[domain][''];\n            if ('plural_forms' in metadata) {\n              metadata.pluralForms = metadata.plural_forms;\n              delete metadata.plural_forms;\n              this._domainData[domain][''] = metadata;\n            }\n            translationBundle.loadJSON(this._domainData[domain], domain);\n          }\n          this._translationBundles[domain] = translationBundle;\n        }\n        return this._translationBundles[domain];\n      }\n    } else {\n      return this._englishBundle;\n    }\n  }\n\n  private _connector: TranslatorConnector;\n  private _currentLocale: string;\n  private _domainData: any = {};\n  private _englishBundle: Gettext;\n  private _languageData: any;\n  private _stringsPrefix: string;\n  private _translationBundles: any = {};\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module translation\n */\n\n// Note: keep in alphabetical order...\nexport * from './base';\nexport * from './gettext';\nexport * from './manager';\nexport * from './server';\nexport * from './tokens';\n", "/**\n * The unique id is used for unique hashes.\n */\nlet uniqueId = 0;\n\n/**\n * Valid CSS property values.\n */\nexport type PropertyValue = number | boolean | string;\n\n/**\n * Input styles object.\n */\nexport interface Styles {\n  $unique?: boolean;\n  $displayName?: string;\n  [selector: string]:\n    | null\n    | undefined\n    | PropertyValue\n    | PropertyValue[]\n    | Styles;\n}\n\n/**\n * Hash algorithm interface.\n */\nexport type HashFunction = (str: string) => string;\n\n/**\n * Quick dictionary lookup for unit-less numbers.\n */\nconst CSS_NUMBER: Record<string, true> = Object.create(null);\n\n/**\n * CSS properties that are valid unit-less numbers.\n *\n * Ref: https://github.com/facebook/react/blob/master/packages/react-dom/src/shared/CSSProperty.js\n */\nconst CSS_NUMBER_KEYS = [\n  \"animation-iteration-count\",\n  \"border-image-outset\",\n  \"border-image-slice\",\n  \"border-image-width\",\n  \"box-flex\",\n  \"box-flex-group\",\n  \"box-ordinal-group\",\n  \"column-count\",\n  \"columns\",\n  \"counter-increment\",\n  \"counter-reset\",\n  \"flex\",\n  \"flex-grow\",\n  \"flex-positive\",\n  \"flex-shrink\",\n  \"flex-negative\",\n  \"flex-order\",\n  \"font-weight\",\n  \"grid-area\",\n  \"grid-column\",\n  \"grid-column-end\",\n  \"grid-column-span\",\n  \"grid-column-start\",\n  \"grid-row\",\n  \"grid-row-end\",\n  \"grid-row-span\",\n  \"grid-row-start\",\n  \"line-clamp\",\n  \"line-height\",\n  \"opacity\",\n  \"order\",\n  \"orphans\",\n  \"tab-size\",\n  \"widows\",\n  \"z-index\",\n  \"zoom\",\n  // SVG properties.\n  \"fill-opacity\",\n  \"flood-opacity\",\n  \"stop-opacity\",\n  \"stroke-dasharray\",\n  \"stroke-dashoffset\",\n  \"stroke-miterlimit\",\n  \"stroke-opacity\",\n  \"stroke-width\"\n];\n\n// Add vendor prefixes to all unit-less properties.\nfor (const property of CSS_NUMBER_KEYS) {\n  for (const prefix of [\"-webkit-\", \"-ms-\", \"-moz-\", \"-o-\", \"\"]) {\n    CSS_NUMBER[prefix + property] = true;\n  }\n}\n\n/**\n * Escape a CSS class name.\n */\nfunction escape(str: string) {\n  return str.replace(/[ !#$%&()*+,./;<=>?@[\\]^`{|}~\"'\\\\]/g, \"\\\\$&\");\n}\n\n/**\n * Transform a JavaScript property into a CSS property.\n */\nfunction hyphenate(propertyName: string): string {\n  return propertyName\n    .replace(/[A-Z]/g, (m: string) => `-${m.toLowerCase()}`)\n    .replace(/^ms-/, \"-ms-\"); // Internet Explorer vendor prefix.\n}\n\n/**\n * Generate a hash value from a string.\n */\nfunction stringHash(str: string): string {\n  let value = 5381;\n  let len = str.length;\n  while (len--) value = (value * 33) ^ str.charCodeAt(len);\n  return (value >>> 0).toString(36);\n}\n\n/**\n * Transform a style string to a CSS string.\n */\nfunction styleToString(key: string, value: PropertyValue) {\n  if (value && typeof value === \"number\" && !CSS_NUMBER[key]) {\n    return `${key}:${value}px`;\n  }\n\n  return `${key}:${value}`;\n}\n\n/**\n * Sort an array of tuples by first value.\n */\nfunction sortTuples<T extends any[]>(value: T[]): T[] {\n  return value.sort((a, b) => (a[0] > b[0] ? 1 : -1));\n}\n\n/**\n * Categorize user styles.\n */\nfunction parseStyles(styles: Styles, hasNestedStyles: boolean) {\n  const properties: Array<[string, PropertyValue | PropertyValue[]]> = [];\n  const nestedStyles: Array<[string, Styles]> = [];\n\n  // Sort keys before adding to styles.\n  for (const key of Object.keys(styles)) {\n    const name = key.trim();\n    const value = styles[key];\n\n    if (name.charCodeAt(0) !== 36 /* $ */ && value != null) {\n      if (typeof value === \"object\" && !Array.isArray(value)) {\n        nestedStyles.push([name, value]);\n      } else {\n        properties.push([hyphenate(name), value]);\n      }\n    }\n  }\n\n  return {\n    style: stringifyProperties(sortTuples(properties)),\n    nested: hasNestedStyles ? nestedStyles : sortTuples(nestedStyles),\n    isUnique: !!styles.$unique\n  };\n}\n\n/**\n * Stringify an array of property tuples.\n */\nfunction stringifyProperties(\n  properties: Array<[string, PropertyValue | PropertyValue[]]>\n) {\n  return properties\n    .map(([name, value]) => {\n      if (!Array.isArray(value)) return styleToString(name, value);\n\n      return value.map(x => styleToString(name, x)).join(\";\");\n    })\n    .join(\";\");\n}\n\n/**\n * Interpolate CSS selectors.\n */\nfunction interpolate(selector: string, parent: string) {\n  if (selector.indexOf(\"&\") === -1) return `${parent} ${selector}`;\n  return selector.replace(/&/g, parent);\n}\n\ntype StylizeStyle = { selector: string; style: string; isUnique: boolean };\n\ntype StylizeRule = {\n  selector: string;\n  style: string;\n  rules: StylizeRule[];\n  styles: StylizeStyle[];\n};\n\n/**\n * Recursive loop building styles with deferred selectors.\n */\nfunction stylize(\n  selector: string,\n  styles: Styles,\n  rulesList: StylizeRule[],\n  stylesList: StylizeStyle[],\n  parent?: string\n) {\n  const { style, nested, isUnique } = parseStyles(styles, selector !== \"\");\n  let pid = style;\n\n  if (selector.charCodeAt(0) === 64 /* @ */) {\n    const child: StylizeRule = {\n      selector,\n      styles: [],\n      rules: [],\n      style: parent ? \"\" : style\n    };\n    rulesList.push(child);\n\n    // Nested styles support (e.g. `.foo > @media > .bar`).\n    if (style && parent) {\n      child.styles.push({ selector: parent, style, isUnique });\n    }\n\n    for (const [name, value] of nested) {\n      pid += name + stylize(name, value, child.rules, child.styles, parent);\n    }\n  } else {\n    const key = parent ? interpolate(selector, parent) : selector;\n\n    if (style) stylesList.push({ selector: key, style, isUnique });\n\n    for (const [name, value] of nested) {\n      pid += name + stylize(name, value, rulesList, stylesList, key);\n    }\n  }\n\n  return pid;\n}\n\n/**\n * Transform `stylize` tree into style objects.\n */\nfunction composeStylize(\n  cache: Cache<Rule | Style>,\n  pid: string,\n  rulesList: StylizeRule[],\n  stylesList: StylizeStyle[],\n  className: string,\n  isStyle: boolean\n) {\n  for (const { selector, style, isUnique } of stylesList) {\n    const key = isStyle ? interpolate(selector, className) : selector;\n    const id = isUnique\n      ? `u\\0${(++uniqueId).toString(36)}`\n      : `s\\0${pid}\\0${style}`;\n    const item = new Style(style, id);\n    item.add(new Selector(key, `k\\0${pid}\\0${key}`));\n    cache.add(item);\n  }\n\n  for (const { selector, style, rules, styles } of rulesList) {\n    const item = new Rule(selector, style, `r\\0${pid}\\0${selector}\\0${style}`);\n    composeStylize(item, pid, rules, styles, className, isStyle);\n    cache.add(item);\n  }\n}\n\n/**\n * Cache to list to styles.\n */\nfunction join(arr: string[]): string {\n  let res = \"\";\n  for (let i = 0; i < arr.length; i++) res += arr[i];\n  return res;\n}\n\n/**\n * Propagate change events.\n */\nexport interface Changes {\n  add(style: Container<any>, index: number): void;\n  change(style: Container<any>, oldIndex: number, newIndex: number): void;\n  remove(style: Container<any>, index: number): void;\n}\n\n/**\n * Noop changes.\n */\nconst noopChanges: Changes = {\n  add: () => undefined,\n  change: () => undefined,\n  remove: () => undefined\n};\n\n/**\n * Cache-able interface.\n */\nexport interface Container<T> {\n  id: string;\n  clone(): T;\n  getStyles(): string;\n}\n\n/**\n * Implement a cache/event emitter.\n */\nexport class Cache<T extends Container<any>> {\n  sheet: string[] = [];\n  changeId = 0;\n\n  private _keys: string[] = [];\n  private _children: Record<string, T | undefined> = Object.create(null);\n  private _counters: Record<string, number | undefined> = Object.create(null);\n\n  constructor(public changes: Changes = noopChanges) {}\n\n  add(style: T): void {\n    const count = this._counters[style.id] || 0;\n    const item: T = this._children[style.id] || style.clone();\n\n    this._counters[style.id] = count + 1;\n\n    if (count === 0) {\n      this._children[item.id] = item;\n      this._keys.push(item.id);\n      this.sheet.push(item.getStyles());\n      this.changeId++;\n      this.changes.add(item, this._keys.length - 1);\n    } else if (item instanceof Cache && style instanceof Cache) {\n      const curIndex = this._keys.indexOf(style.id);\n      const prevItemChangeId = item.changeId;\n\n      item.merge(style);\n\n      if (item.changeId !== prevItemChangeId) {\n        this.sheet.splice(curIndex, 1, item.getStyles());\n        this.changeId++;\n        this.changes.change(item, curIndex, curIndex);\n      }\n    }\n  }\n\n  remove(style: T): void {\n    const count = this._counters[style.id];\n\n    if (count) {\n      this._counters[style.id] = count - 1;\n\n      const item = this._children[style.id]!;\n      const index = this._keys.indexOf(item.id);\n\n      if (count === 1) {\n        delete this._counters[style.id];\n        delete this._children[style.id];\n\n        this._keys.splice(index, 1);\n        this.sheet.splice(index, 1);\n        this.changeId++;\n        this.changes.remove(item, index);\n      } else if (item instanceof Cache && style instanceof Cache) {\n        const prevChangeId = item.changeId;\n\n        item.unmerge(style);\n\n        if (item.changeId !== prevChangeId) {\n          this.sheet.splice(index, 1, item.getStyles());\n          this.changeId++;\n          this.changes.change(item, index, index);\n        }\n      }\n    }\n  }\n\n  values(): T[] {\n    return this._keys.map(key => this._children[key]!);\n  }\n\n  merge(cache: Cache<any>) {\n    for (const item of cache.values()) this.add(item);\n    return this;\n  }\n\n  unmerge(cache: Cache<any>) {\n    for (const item of cache.values()) this.remove(item);\n    return this;\n  }\n\n  clone(): Cache<T> {\n    return new Cache<T>().merge(this);\n  }\n}\n\n/**\n * Selector is a dumb class made to represent nested CSS selectors.\n */\nexport class Selector implements Container<Selector> {\n  constructor(public selector: string, public id: string) {}\n\n  getStyles() {\n    return this.selector;\n  }\n\n  clone(): Selector {\n    return this;\n  }\n}\n\n/**\n * The style container registers a style string with selectors.\n */\nexport class Style extends Cache<Selector> implements Container<Style> {\n  constructor(public style: string, public id: string) {\n    super();\n  }\n\n  getStyles(): string {\n    return `${this.sheet.join(\",\")}{${this.style}}`;\n  }\n\n  clone(): Style {\n    return new Style(this.style, this.id).merge(this);\n  }\n}\n\n/**\n * Implement rule logic for style output.\n */\nexport class Rule extends Cache<Rule | Style> implements Container<Rule> {\n  constructor(public rule: string, public style: string, public id: string) {\n    super();\n  }\n\n  getStyles(): string {\n    return `${this.rule}{${this.style}${join(this.sheet)}}`;\n  }\n\n  clone(): Rule {\n    return new Rule(this.rule, this.style, this.id).merge(this);\n  }\n}\n\nfunction key(pid: string, styles: Styles): string {\n  const key = `f${stringHash(pid)}`;\n  if (process.env.NODE_ENV === \"production\" || !styles.$displayName) return key;\n  return `${styles.$displayName}_${key}`;\n}\n\n/**\n * The FreeStyle class implements the API for everything else.\n */\nexport class FreeStyle extends Cache<Rule | Style>\n  implements Container<FreeStyle> {\n  constructor(public id: string, changes?: Changes) {\n    super(changes);\n  }\n\n  registerStyle(styles: Styles) {\n    const rulesList: StylizeRule[] = [];\n    const stylesList: StylizeStyle[] = [];\n    const pid = stylize(\"&\", styles, rulesList, stylesList);\n    const id = key(pid, styles);\n    const selector = `.${\n      process.env.NODE_ENV === \"production\" ? id : escape(id)\n    }`;\n    composeStylize(this, pid, rulesList, stylesList, selector, true);\n    return id;\n  }\n\n  registerKeyframes(keyframes: Styles) {\n    return this.registerHashRule(\"@keyframes\", keyframes);\n  }\n\n  registerHashRule(prefix: string, styles: Styles) {\n    const rulesList: StylizeRule[] = [];\n    const stylesList: StylizeStyle[] = [];\n    const pid = stylize(\"\", styles, rulesList, stylesList);\n    const id = key(pid, styles);\n    const selector = `${prefix} ${\n      process.env.NODE_ENV === \"production\" ? id : escape(id)\n    }`;\n    const rule = new Rule(selector, \"\", `h\\0${pid}\\0${prefix}`);\n    composeStylize(rule, pid, rulesList, stylesList, \"\", false);\n    this.add(rule);\n    return id;\n  }\n\n  registerRule(rule: string, styles: Styles) {\n    const rulesList: StylizeRule[] = [];\n    const stylesList: StylizeStyle[] = [];\n    const pid = stylize(rule, styles, rulesList, stylesList);\n    composeStylize(this, pid, rulesList, stylesList, \"\", false);\n  }\n\n  registerCss(styles: Styles) {\n    return this.registerRule(\"\", styles);\n  }\n\n  getStyles(): string {\n    return join(this.sheet);\n  }\n\n  clone(): FreeStyle {\n    return new FreeStyle(this.id, this.changes).merge(this);\n  }\n}\n\n/**\n * Exports a simple function to create a new instance.\n */\nexport function create(changes?: Changes) {\n  return new FreeStyle(`f${(++uniqueId).toString(36)}`, changes);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * We need to do the following to *our* objects before passing to freestyle:\n * - For any `$nest` directive move up to FreeStyle style nesting\n * - For any `$unique` directive map to FreeStyle Unique\n * - For any `$debugName` directive return the debug name\n */\nfunction convertToStyles(object) {\n    /** The final result we will return */\n    var styles = {};\n    for (var key in object) {\n        /** Grab the value upfront */\n        var val = object[key];\n        /** TypeStyle configuration options */\n        if (key === '$nest') {\n            var nested = val;\n            for (var selector in nested) {\n                var subproperties = nested[selector];\n                styles[selector] = convertToStyles(subproperties);\n            }\n        }\n        else if (key === '$debugName') {\n            styles.$displayName = val;\n        }\n        else {\n            styles[key] = val;\n        }\n    }\n    return styles;\n}\nexports.convertToStyles = convertToStyles;\n// todo: better name here\nfunction convertToKeyframes(frames) {\n    var result = {};\n    for (var offset in frames) {\n        if (offset !== '$debugName') {\n            result[offset] = frames[offset];\n        }\n    }\n    if (frames.$debugName) {\n        result.$displayName = frames.$debugName;\n    }\n    return result;\n}\nexports.convertToKeyframes = convertToKeyframes;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** Raf for node + browser */\nexports.raf = typeof requestAnimationFrame === 'undefined'\n    /**\n     * Make sure setTimeout is always invoked with\n     * `this` set to `window` or `global` automatically\n     **/\n    ? function (cb) { return setTimeout(cb); }\n    /**\n     * Make sure window.requestAnimationFrame is always invoked with `this` window\n     * We might have raf without window in case of `raf/polyfill` (recommended by React)\n     **/\n    : typeof window === 'undefined'\n        ? requestAnimationFrame\n        : requestAnimationFrame.bind(window);\n/**\n * Utility to join classes conditionally\n */\nfunction classes() {\n    var classes = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        classes[_i] = arguments[_i];\n    }\n    return classes\n        .map(function (c) { return c && typeof c === 'object' ? Object.keys(c).map(function (key) { return !!c[key] && key; }) : [c]; })\n        .reduce(function (flattened, c) { return flattened.concat(c); }, [])\n        .filter(function (c) { return !!c; })\n        .join(' ');\n}\nexports.classes = classes;\n/**\n * Merges various styles into a single style object.\n * Note: if two objects have the same property the last one wins\n */\nfunction extend() {\n    var objects = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        objects[_i] = arguments[_i];\n    }\n    /** The final result we will return */\n    var result = {};\n    for (var _a = 0, objects_1 = objects; _a < objects_1.length; _a++) {\n        var object = objects_1[_a];\n        if (object == null || object === false) {\n            continue;\n        }\n        for (var key in object) {\n            /** Falsy values except a explicit 0 is ignored */\n            var val = object[key];\n            if (!val && val !== 0) {\n                continue;\n            }\n            /** if nested media or pseudo selector */\n            if (key === '$nest' && val) {\n                result[key] = result['$nest'] ? extend(result['$nest'], val) : val;\n            }\n            /** if freestyle sub key that needs merging. We come here due to our recursive calls */\n            else if ((key.indexOf('&') !== -1 || key.indexOf('@media') === 0)) {\n                result[key] = result[key] ? extend(result[key], val) : val;\n            }\n            else {\n                result[key] = val;\n            }\n        }\n    }\n    return result;\n}\nexports.extend = extend;\n/**\n * Utility to help customize styles with media queries. e.g.\n * ```\n * style(\n *  media({maxWidth:500}, {color:'red'})\n * )\n * ```\n */\nexports.media = function (mediaQuery) {\n    var _a;\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    var mediaQuerySections = [];\n    if (mediaQuery.type)\n        mediaQuerySections.push(mediaQuery.type);\n    if (mediaQuery.orientation)\n        mediaQuerySections.push(\"(orientation: \" + mediaQuery.orientation + \")\");\n    if (mediaQuery.minWidth)\n        mediaQuerySections.push(\"(min-width: \" + mediaLength(mediaQuery.minWidth) + \")\");\n    if (mediaQuery.maxWidth)\n        mediaQuerySections.push(\"(max-width: \" + mediaLength(mediaQuery.maxWidth) + \")\");\n    if (mediaQuery.minHeight)\n        mediaQuerySections.push(\"(min-height: \" + mediaLength(mediaQuery.minHeight) + \")\");\n    if (mediaQuery.maxHeight)\n        mediaQuerySections.push(\"(max-height: \" + mediaLength(mediaQuery.maxHeight) + \")\");\n    if (mediaQuery.prefersColorScheme)\n        mediaQuerySections.push(\"(prefers-color-scheme: \" + mediaQuery.prefersColorScheme + \")\");\n    var stringMediaQuery = \"@media \" + mediaQuerySections.join(' and ');\n    var object = {\n        $nest: (_a = {},\n            _a[stringMediaQuery] = extend.apply(void 0, objects),\n            _a)\n    };\n    return object;\n};\nvar mediaLength = function (value) {\n    return typeof value === 'string' ? value : value + \"px\";\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FreeStyle = require(\"free-style\");\nvar formatting_1 = require(\"./formatting\");\nvar utilities_1 = require(\"./utilities\");\n/**\n * Creates an instance of free style with our options\n */\nvar createFreeStyle = function () {return FreeStyle.create();};\n/**\n * Maintains a single stylesheet and keeps it in sync with requested styles\n */\nvar TypeStyle = /** @class */function () {\n  function TypeStyle(_a) {\n    var _this = this;\n    var autoGenerateTag = _a.autoGenerateTag;\n    /**\n     * Insert `raw` CSS as a string. This is useful for e.g.\n     * - third party CSS that you are customizing with template strings\n     * - generating raw CSS in JavaScript\n     * - reset libraries like normalize.css that you can use without loaders\n     */\n    this.cssRaw = function (mustBeValidCSS) {\n      if (!mustBeValidCSS) {\n        return;\n      }\n      _this._raw += mustBeValidCSS || '';\n      _this._pendingRawChange = true;\n      _this._styleUpdated();\n    };\n    /**\n     * Takes CSSProperties and registers it to a global selector (body, html, etc.)\n     */\n    this.cssRule = function (selector) {\n      var objects = [];\n      for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n      }\n      var styles = formatting_1.convertToStyles(utilities_1.extend.apply(void 0, objects));\n      _this._freeStyle.registerRule(selector, styles);\n      _this._styleUpdated();\n      return;\n    };\n    /**\n     * Renders styles to the singleton tag imediately\n     * NOTE: You should only call it on initial render to prevent any non CSS flash.\n     * After that it is kept sync using `requestAnimationFrame` and we haven't noticed any bad flashes.\n     **/\n    this.forceRenderStyles = function () {\n      var target = _this._getTag();\n      if (!target) {\n        return;\n      }\n      target.textContent = _this.getStyles();\n    };\n    /**\n     * Utility function to register an @font-face\n     */\n    this.fontFace = function () {\n      var fontFace = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        fontFace[_i] = arguments[_i];\n      }\n      var freeStyle = _this._freeStyle;\n      for (var _a = 0, _b = fontFace; _a < _b.length; _a++) {\n        var face = _b[_a];\n        freeStyle.registerRule('@font-face', face);\n      }\n      _this._styleUpdated();\n      return;\n    };\n    /**\n     * Allows use to use the stylesheet in a node.js environment\n     */\n    this.getStyles = function () {\n      return (_this._raw || '') + _this._freeStyle.getStyles();\n    };\n    /**\n     * Takes keyframes and returns a generated animationName\n     */\n    this.keyframes = function (frames) {\n      var keyframes = formatting_1.convertToKeyframes(frames);\n      // TODO: replace $debugName with display name\n      var animationName = _this._freeStyle.registerKeyframes(keyframes);\n      _this._styleUpdated();\n      return animationName;\n    };\n    /**\n     * Helps with testing. Reinitializes FreeStyle + raw\n     */\n    this.reinit = function () {\n      /** reinit freestyle */\n      var freeStyle = createFreeStyle();\n      _this._freeStyle = freeStyle;\n      _this._lastFreeStyleChangeId = freeStyle.changeId;\n      /** reinit raw */\n      _this._raw = '';\n      _this._pendingRawChange = false;\n      /** Clear any styles that were flushed */\n      var target = _this._getTag();\n      if (target) {\n        target.textContent = '';\n      }\n    };\n    /** Sets the target tag where we write the css on style updates */\n    this.setStylesTarget = function (tag) {\n      /** Clear any data in any previous tag */\n      if (_this._tag) {\n        _this._tag.textContent = '';\n      }\n      _this._tag = tag;\n      /** This special time buffer immediately */\n      _this.forceRenderStyles();\n    };\n    /**\n     * Takes an object where property names are ideal class names and property values are CSSProperties, and\n     * returns an object where property names are the same ideal class names and the property values are\n     * the actual generated class names using the ideal class name as the $debugName\n     */\n    this.stylesheet = function (classes) {\n      var classNames = Object.getOwnPropertyNames(classes);\n      var result = {};\n      for (var _i = 0, classNames_1 = classNames; _i < classNames_1.length; _i++) {\n        var className = classNames_1[_i];\n        var classDef = classes[className];\n        if (classDef) {\n          classDef.$debugName = className;\n          result[className] = _this.style(classDef);\n        }\n      }\n      return result;\n    };\n    var freeStyle = createFreeStyle();\n    this._autoGenerateTag = autoGenerateTag;\n    this._freeStyle = freeStyle;\n    this._lastFreeStyleChangeId = freeStyle.changeId;\n    this._pending = 0;\n    this._pendingRawChange = false;\n    this._raw = '';\n    this._tag = undefined;\n    // rebind prototype to TypeStyle.  It might be better to do a function() { return this.style.apply(this, arguments)}\n    this.style = this.style.bind(this);\n  }\n  /**\n   * Only calls cb all sync operations settle\n   */\n  TypeStyle.prototype._afterAllSync = function (cb) {\n    var _this = this;\n    this._pending++;\n    var pending = this._pending;\n    utilities_1.raf(function () {\n      if (pending !== _this._pending) {\n        return;\n      }\n      cb();\n    });\n  };\n  TypeStyle.prototype._getTag = function () {\n    if (this._tag) {\n      return this._tag;\n    }\n    if (this._autoGenerateTag) {\n      var tag = typeof window === 'undefined' ?\n      { textContent: '' } :\n      document.createElement('style');\n      if (typeof document !== 'undefined') {\n        document.head.appendChild(tag);\n      }\n      this._tag = tag;\n      return tag;\n    }\n    return undefined;\n  };\n  /** Checks if the style tag needs updating and if so queues up the change */\n  TypeStyle.prototype._styleUpdated = function () {\n    var _this = this;\n    var changeId = this._freeStyle.changeId;\n    var lastChangeId = this._lastFreeStyleChangeId;\n    if (!this._pendingRawChange && changeId === lastChangeId) {\n      return;\n    }\n    this._lastFreeStyleChangeId = changeId;\n    this._pendingRawChange = false;\n    this._afterAllSync(function () {return _this.forceRenderStyles();});\n  };\n  TypeStyle.prototype.style = function () {\n    var className = this._freeStyle.registerStyle(formatting_1.convertToStyles(utilities_1.extend.apply(undefined, arguments)));\n    this._styleUpdated();\n    return className;\n  };\n  return TypeStyle;\n}();\nexports.TypeStyle = TypeStyle;", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar typestyle_1 = require(\"./internal/typestyle\");\nexports.TypeStyle = typestyle_1.TypeStyle;\n/**\n * All the CSS types in the 'types' namespace\n */\nvar types = require(\"./types\");\nexports.types = types;\n/**\n * Export certain utilities\n */\nvar utilities_1 = require(\"./internal/utilities\");\nexports.extend = utilities_1.extend;\nexports.classes = utilities_1.classes;\nexports.media = utilities_1.media;\n/** Zero configuration, default instance of TypeStyle */\nvar ts = new typestyle_1.TypeStyle({ autoGenerateTag: true });\n/** Sets the target tag where we write the css on style updates */\nexports.setStylesTarget = ts.setStylesTarget;\n/**\n * Insert `raw` CSS as a string. This is useful for e.g.\n * - third party CSS that you are customizing with template strings\n * - generating raw CSS in JavaScript\n * - reset libraries like normalize.css that you can use without loaders\n */\nexports.cssRaw = ts.cssRaw;\n/**\n * Takes CSSProperties and registers it to a global selector (body, html, etc.)\n */\nexports.cssRule = ts.cssRule;\n/**\n * Renders styles to the singleton tag imediately\n * NOTE: You should only call it on initial render to prevent any non CSS flash.\n * After that it is kept sync using `requestAnimationFrame` and we haven't noticed any bad flashes.\n **/\nexports.forceRenderStyles = ts.forceRenderStyles;\n/**\n * Utility function to register an @font-face\n */\nexports.fontFace = ts.fontFace;\n/**\n * Allows use to use the stylesheet in a node.js environment\n */\nexports.getStyles = ts.getStyles;\n/**\n * Takes keyframes and returns a generated animationName\n */\nexports.keyframes = ts.keyframes;\n/**\n * Helps with testing. Reinitializes FreeStyle + raw\n */\nexports.reinit = ts.reinit;\n/**\n * Takes CSSProperties and return a generated className you can use on your component\n */\nexports.style = ts.style;\n/**\n * Takes an object where property names are ideal class names and property values are CSSProperties, and\n * returns an object where property names are the same ideal class names and the property values are\n * the actual generated class names using the ideal class name as the $debugName\n */\nexports.stylesheet = ts.stylesheet;\n/**\n * Creates a new instance of TypeStyle separate from the default instance.\n *\n * - Use this for creating a different typestyle instance for a shadow dom component.\n * - Use this if you don't want an auto tag generated and you just want to collect the CSS.\n *\n * NOTE: styles aren't shared between different instances.\n */\nfunction createTypeStyle(target) {\n  var instance = new typestyle_1.TypeStyle({ autoGenerateTag: false });\n  if (target) {\n    instance.setStylesTarget(target);\n  }\n  return instance;\n}\nexports.createTypeStyle = createTypeStyle;", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { style as typestyleClass } from 'typestyle/lib';\nimport { NestedCSSProperties } from 'typestyle/lib/types';\n\nexport namespace LabIconStyle {\n  /**\n   * - breadCrumb: The path icons above the filebrowser\n   * - commandPaletteHeader: The icon to the right of palette section headers\n   * - commandPaletteItem: The icon next to a palette item\n   * - launcherCard: The icons for the cards at the bottom of the launcher\n   * - launcherSection: The icons to left of the Launcher section headers\n   * - listing: The icons to the left of the filebrowser listing items\n   * - listingHeaderItem: Caret icons used to show sort order in listing column headers\n   * - mainAreaTab: The icons in the tabs above the main area/the tabManager in the sidebar\n   * - menuItem: The icon next to a menu item\n   * - runningItem: The icon next to an item in the Running sidebar\n   * - select: The caret icon on the left side of a dropdown select element\n   * - settingsEditor: The icons to the left of each section of the settings editor\n   * - sideBar: The icons for the sidebar (default to the left of the main window)\n   * - splash: The icon used for the splash screen\n   * - statusBar: The icons in the status bar\n   * - toolbarButton: The icon shown on a toolbar button\n   */\n  type IBuiltin =\n    | 'breadCrumb'\n    | 'commandPaletteHeader'\n    | 'commandPaletteItem'\n    | 'launcherCard'\n    | 'launcherSection'\n    | 'listing'\n    | 'listingHeaderItem'\n    | 'mainAreaTab'\n    | 'menuItem'\n    | 'runningItem'\n    | 'select'\n    | 'settingsEditor'\n    | 'sideBar'\n    | 'splash'\n    | 'statusBar'\n    | 'toolbarButton';\n\n  type IPosition =\n    | 'center'\n    | 'top'\n    | 'right'\n    | 'bottom'\n    | 'left'\n    | 'top right'\n    | 'bottom right'\n    | 'bottom left'\n    | 'top left';\n\n  type ISize = 'small' | 'normal' | 'large' | 'xlarge';\n\n  /**\n   * Options that function as a shorthand for compound CSS properties,\n   * such as the set of props required to center an svg inside\n   * of a parent node\n   */\n  interface ISheetOptions {\n    /**\n     * How to position the inner svg element,\n     * relative to the outer container\n     */\n    elementPosition?: IPosition;\n\n    /**\n     * the size of the inner svg element. Can be any of:\n     *   - 'small': 14px x 14px\n     *   - 'normal': 16px x 16px\n     *   - 'large': 20px x 20px\n     *   - 'xlarge': 24px x 24px\n     */\n    elementSize?: ISize;\n\n    /**\n     * FUTURE: how to position the label element (if any),\n     * relative to the outer container\n     */\n    // labelPosition?: IPosition;\n  }\n\n  /**\n   * Stylesheet with a collection of CSS props for each node\n   * in an icon, plus some custom options\n   */\n  interface ISheet {\n    /**\n     * CSS properties that will be applied to the outer container\n     * element via a typestyle class\n     */\n    container?: NestedCSSProperties;\n\n    /**\n     * CSS properties that will be applied to the inner svg\n     * element via a typestyle class\n     */\n    element?: NestedCSSProperties;\n\n    /**\n     * Options that function as modifiers for this style's\n     * CSS properties\n     */\n    options?: ISheetOptions;\n\n    /**\n     * FUTURE: CSS properties that will be applied to the label\n     * element, if any, via a typestyle class\n     */\n    // labelCSS?: NestedCSSProperties;\n  }\n\n  /**\n   * A stylesheet containing only collections of CSS style props that\n   * can be fed directly to typestyle's style() function. A standard\n   * ISheet can be resolved to a \"pure\" stylesheet by processing and\n   * removing any options\n   */\n  interface ISheetPure extends ISheet {\n    /**\n     * Options are disallowed\n     */\n    options?: undefined;\n  }\n\n  /**\n   * Type to help with resolving a stylesheet that might be a string\n   */\n  type ISheetResolvable = ISheet | IBuiltin;\n\n  export interface IProps extends NestedCSSProperties, ISheetOptions {\n    /**\n     * Specify the icon styling. Can be either a string naming one of\n     * the builtin icon stylesheets, a LabIconStyle.ISheet object, or an\n     * array containing any mixture of the two. If an array is provided,\n     * the actual style will be determined by merging the stylesheets in\n     * the array, giving precedence to the rightmost values.\n     */\n    stylesheet?: ISheetResolvable | ISheetResolvable[];\n  }\n\n  /**\n   * The builtin stylesheets\n   */\n  const builtinSheets: { [k in IBuiltin]: ISheet } = {\n    breadCrumb: {\n      container: {\n        $nest: {\n          // `&` will be substituted for the generated classname (interpolation)\n          '&:first-child svg': {\n            bottom: '1px',\n            marginLeft: '0px',\n            position: 'relative'\n          },\n          '&:hover': {\n            backgroundColor: 'var(--jp-layout-color2)'\n          },\n          ['.jp-mod-dropTarget&']: {\n            backgroundColor: 'var(--jp-brand-color2)',\n            opacity: 0.7\n          }\n        }\n      },\n      element: {\n        borderRadius: 'var(--jp-border-radius)',\n        cursor: 'pointer',\n        margin: '0px 2px',\n        padding: '0px 2px',\n        height: '16px',\n        width: '16px',\n        verticalAlign: 'middle'\n      }\n    },\n\n    commandPaletteHeader: {\n      container: {\n        height: '14px',\n        margin: '0 14px 0 auto'\n      },\n      element: {\n        height: '14px',\n        width: '14px'\n      },\n      options: {\n        elementPosition: 'center'\n      }\n    },\n\n    commandPaletteItem: {\n      element: {\n        height: '16px',\n        width: '16px'\n      },\n      options: {\n        elementPosition: 'center'\n      }\n    },\n\n    launcherCard: {\n      container: {\n        height: '52px',\n        width: '52px'\n      },\n      element: {\n        height: '52px',\n        width: '52px'\n      },\n      options: {\n        elementPosition: 'center'\n      }\n    },\n\n    launcherSection: {\n      container: {\n        boxSizing: 'border-box',\n        marginRight: '12px',\n        height: '32px',\n        width: '32px'\n      },\n      element: {\n        height: '32px',\n        width: '32px'\n      },\n      options: {\n        elementPosition: 'center'\n      }\n    },\n\n    listing: {\n      container: {\n        flex: '0 0 20px',\n        marginRight: '4px',\n        position: 'relative'\n      },\n      element: {\n        height: '16px',\n        width: '16px'\n      },\n      options: {\n        elementPosition: 'center'\n      }\n    },\n\n    listingHeaderItem: {\n      container: {\n        display: 'inline',\n        height: '16px',\n        width: '16px'\n      },\n      element: {\n        height: 'auto',\n        margin: '-2px 0 0 0',\n        width: '20px'\n      },\n      options: {\n        elementPosition: 'center'\n      }\n    },\n\n    mainAreaTab: {\n      container: {\n        $nest: {\n          '.lm-DockPanel-tabBar &': {\n            marginRight: '4px'\n          }\n        }\n      },\n      element: {\n        $nest: {\n          '.lm-DockPanel-tabBar &': {\n            height: '14px',\n            width: '14px'\n          }\n        }\n      },\n      options: {\n        elementPosition: 'center'\n      }\n    },\n\n    menuItem: {\n      container: {\n        display: 'inline-block',\n        verticalAlign: 'middle'\n      },\n      element: {\n        height: '16px',\n        width: '16px'\n      },\n      options: {\n        elementPosition: 'center'\n      }\n    },\n\n    runningItem: {\n      container: {\n        margin: '0px 4px 0px 4px'\n      },\n      element: {\n        height: '16px',\n        width: '16px'\n      },\n      options: {\n        elementPosition: 'center'\n      }\n    },\n\n    select: {\n      container: {\n        pointerEvents: 'none'\n      },\n      element: {\n        position: 'absolute',\n        height: 'auto',\n        width: '16px'\n      }\n    },\n\n    settingsEditor: {\n      container: {\n        display: 'flex',\n        flex: '0 0 20px',\n        margin: '0 3px 0 0',\n        position: 'relative',\n        height: '20px',\n        width: '20px'\n      },\n      element: {\n        height: '16px',\n        width: '16px'\n      },\n      options: {\n        elementPosition: 'center'\n      }\n    },\n\n    sideBar: {\n      element: {\n        height: 'auto',\n        width: '20px'\n      },\n      options: {\n        elementPosition: 'center'\n      }\n    },\n\n    splash: {\n      container: {\n        animation: '0.3s fade-in linear forwards',\n        height: '100%',\n        width: '100%',\n        zIndex: 1\n      },\n      element: {\n        // width no height\n        width: '100px'\n      },\n      options: {\n        elementPosition: 'center'\n      }\n    },\n\n    statusBar: {\n      element: {\n        left: '0px',\n        top: '0px',\n        height: '18px',\n        width: '20px',\n        position: 'relative'\n      }\n    },\n\n    toolbarButton: {\n      container: {\n        display: 'inline-block',\n        verticalAlign: 'middle'\n      },\n      element: {\n        height: '16px',\n        width: '16px'\n      },\n      options: {\n        elementPosition: 'center'\n      }\n    }\n  };\n\n  function _elementPositionFactory(extra: NestedCSSProperties): ISheet {\n    return {\n      container: {\n        alignItems: 'center',\n        display: 'flex'\n      },\n      element: {\n        display: 'block',\n        ...extra\n      }\n    };\n  }\n\n  /**\n   * Styles to help with positioning\n   */\n  const positionSheets: { [k in IPosition]: ISheet } = {\n    center: _elementPositionFactory({ margin: '0 auto', width: '100%' }),\n\n    top: _elementPositionFactory({ margin: '0 0 auto 0' }),\n    right: _elementPositionFactory({ margin: '0 0 0 auto' }),\n    bottom: _elementPositionFactory({ margin: 'auto 0 0 0' }),\n    left: _elementPositionFactory({ margin: '0 auto 0 0' }),\n\n    'top right': _elementPositionFactory({ margin: '0 0 auto auto' }),\n    'bottom right': _elementPositionFactory({ margin: 'auto 0 0 auto' }),\n    'bottom left': _elementPositionFactory({ margin: 'auto auto 0 0' }),\n    'top left': _elementPositionFactory({ margin: '0 auto 0 auto' })\n  };\n\n  function _elementSizeFactory(size: string): ISheet {\n    return {\n      element: {\n        height: size,\n        width: size\n      }\n    };\n  }\n\n  /**\n   * sheets that establish some default sizes\n   */\n  const sizeSheets: { [k in ISize]: ISheet } = {\n    small: _elementSizeFactory('14px'),\n    normal: _elementSizeFactory('16px'),\n    large: _elementSizeFactory('20px'),\n    xlarge: _elementSizeFactory('24px')\n  };\n\n  /**\n   * Merge two or more icon sheets into a single \"pure\"\n   * icon style (ie collections of CSS props only)\n   */\n  function mergeSheets(sheets: ISheet[]): ISheetPure {\n    return {\n      container: Object.assign({}, ...sheets.map(s => s.container)),\n      element: Object.assign({}, ...sheets.map(s => s.element))\n    };\n  }\n\n  /**\n   * Resolve one or more stylesheets that may just be a string naming\n   * one of the builtin stylesheets to an array of proper ISheet objects\n   */\n  function resolveSheet(\n    stylesheet: ISheetResolvable | ISheetResolvable[] | undefined\n  ): ISheet[] {\n    if (!stylesheet) {\n      return [];\n    }\n\n    if (!Array.isArray(stylesheet)) {\n      // wrap in array\n      stylesheet = [stylesheet];\n    }\n\n    return stylesheet.map(k => (typeof k === 'string' ? builtinSheets[k] : k));\n  }\n\n  /**\n   * Resolve and merge multiple icon stylesheets\n   */\n  function applySheetOptions(sheets: ISheet[]) {\n    const options: ISheetOptions = Object.assign(\n      {},\n      ...sheets.map(s => s.options)\n    );\n\n    if (options.elementPosition) {\n      sheets.unshift(positionSheets[options.elementPosition]);\n    }\n\n    if (options.elementSize) {\n      sheets.unshift(sizeSheets[options.elementSize]);\n    }\n\n    return mergeSheets(sheets);\n  }\n\n  /**\n   * Resolve a pure icon stylesheet into a typestyle class\n   */\n  function resolveStyleClass(stylesheet: ISheetPure): string {\n    return typestyleClass({\n      ...stylesheet.container,\n      $nest: {\n        ...stylesheet.container?.$nest,\n        ['svg']: stylesheet.element\n      }\n    });\n  }\n\n  // cache style classes for builtin stylesheets\n  const _styleClassCache = new Map<string, string>();\n\n  /**\n   * Get a typestyle class, given a set of icon styling props\n   */\n  export function styleClass(props?: IProps): string {\n    if (!props || Object.keys(props).length === 0) {\n      // props is empty\n      return '';\n    }\n\n    let { elementPosition, elementSize, stylesheet, ...elementCSS } = props;\n\n    // add option args with defined values to overrides\n    const options = {\n      ...(elementPosition && { elementPosition }),\n      ...(elementSize && { elementSize })\n    };\n\n    // try to look up the style class in the cache\n    const cacheable =\n      typeof stylesheet === 'string' && Object.keys(elementCSS).length === 0;\n    const cacheKey = cacheable\n      ? [stylesheet, elementPosition, elementSize].join(',')\n      : '';\n    if (cacheable && _styleClassCache.has(cacheKey)) {\n      return _styleClassCache.get(cacheKey)!;\n    }\n\n    // resolve kind to an array of sheets, then stick overrides on the end\n    const sheets = resolveSheet(stylesheet);\n    sheets.push({ element: elementCSS, options });\n\n    // apply style options/merge sheets, then convert to typestyle class\n    const cls = resolveStyleClass(applySheetOptions(sheets));\n\n    if (cacheable) {\n      // store in cache for later reuse\n      _styleClassCache.set(cacheKey, cls);\n    }\n\n    return cls;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nexport * from './icon';\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { Text } from '@jupyterlab/coreutils';\n\n/**\n * Inner works of class combining functions\n */\nfunction _classes(\n  classes: (string | false | undefined | null | { [className: string]: any })[]\n): string[] {\n  return classes\n    .map(c =>\n      c && typeof c === 'object'\n        ? Object.keys(c).map(key => !!c[key] && key)\n        : typeof c === 'string'\n        ? c.split(/\\s+/)\n        : []\n    )\n    .reduce((flattened, c) => flattened.concat(c), [] as string[])\n    .filter(c => !!c) as string[];\n}\n\n/**\n * Combines classNames.\n *\n * @param classes - A list of classNames\n *\n * @returns A single string with the combined className\n */\nexport function classes(\n  ...classes: (\n    | string\n    | false\n    | undefined\n    | null\n    | { [className: string]: any }\n  )[]\n): string {\n  return _classes(classes).join(' ');\n}\n\n/**\n * Combines classNames. Removes all duplicates\n *\n * @param classes - A list of classNames\n *\n * @returns A single string with the combined className\n */\nexport function classesDedupe(\n  ...classes: (\n    | string\n    | false\n    | undefined\n    | null\n    | { [className: string]: any }\n  )[]\n): string {\n  return [...new Set(_classes(classes))].join(' ');\n}\n\n/**\n * Translates the attributes of a DOM element into attributes that can\n * be understood by React. Currently not comprehensive, we will add special\n * cases as they become relevant.\n *\n * @param elem - A DOM element\n *\n * @param ignore - An optional list of attribute names to ignore\n *\n * @returns An object with key:value pairs that are the React-friendly\n * translation of elem's attributes\n */\nexport function getReactAttrs(\n  elem: Element,\n  { ignore = [] }: { ignore?: string[] } = {}\n): { [key: string]: string | null } {\n  return elem\n    .getAttributeNames()\n    .reduce<{ [key: string]: string | null }>((d, name) => {\n      if (name === 'style' || ignore.includes(name)) {\n        void 0;\n      } else if (name.startsWith('data')) {\n        d[name] = elem.getAttribute(name);\n      } else {\n        d[Text.camelCase(name)] = elem.getAttribute(name);\n      }\n      return d;\n    }, {});\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { IRenderMime } from '@jupyterlab/rendermime-interfaces';\nimport { UUID } from '@lumino/coreutils';\nimport { Signal } from '@lumino/signaling';\nimport { ElementAttrs, VirtualElement, VirtualNode } from '@lumino/virtualdom';\nimport React from 'react';\nimport { createRoot, Root } from 'react-dom/client';\nimport badSvgstr from '../../style/debug/bad.svg';\nimport blankSvgstr from '../../style/debug/blank.svg';\nimport refreshSvgstr from '../../style/icons/toolbar/refresh.svg';\nimport { LabIconStyle } from '../style';\nimport { classes, getReactAttrs } from '../utils';\n\nexport class LabIcon implements LabIcon.ILabIcon, VirtualElement.IRenderer {\n  /** *********\n   * statics *\n   ***********/\n\n  /**\n   * Remove any rendered icon from the element that contains it\n   *\n   * @param container - a DOM node into which an icon was\n   * previously rendered\n   *\n   * @returns the cleaned container\n   */\n  static remove(container: HTMLElement): HTMLElement {\n    // clean up all children\n    while (container.firstChild) {\n      container.firstChild.remove();\n    }\n\n    // remove all classes\n    container.className = '';\n\n    return container;\n  }\n\n  /**\n   * Resolve an icon name or a \\{name, svgstr\\} pair into an\n   * actual LabIcon.\n   *\n   * @param icon - either a string with the name of an existing icon\n   * or an object with \\{name: string, svgstr: string\\} fields.\n   *\n   * @returns a LabIcon instance\n   */\n  static resolve({ icon }: { icon: LabIcon.IResolvable }): LabIcon {\n    if (icon instanceof LabIcon) {\n      // icon already is a LabIcon; nothing to do here\n      return icon;\n    }\n\n    if (typeof icon === 'string') {\n      // do a dynamic lookup of existing icon by name\n      const resolved = LabIcon._instances.get(icon);\n      if (resolved) {\n        return resolved;\n      }\n\n      // lookup failed\n      if (LabIcon._debug) {\n        // fail noisily\n        console.warn(\n          `Lookup failed for icon, creating loading icon. icon: ${icon}`\n        );\n      }\n\n      // no matching icon currently registered, create a new loading icon\n      // TODO: find better icon (maybe animate?) for loading icon\n      return new LabIcon({ name: icon, svgstr: refreshSvgstr, _loading: true });\n    }\n\n    // icon was provided as a non-LabIcon \\{name, svgstr\\} pair, communicating\n    // an intention to create a new icon\n    return new LabIcon(icon);\n  }\n\n  /**\n   * Resolve an icon name or a \\{name, svgstr\\} pair into a DOM element.\n   * If icon arg is undefined, the function will fall back to trying to render\n   * the icon as a CSS background image, via the iconClass arg.\n   * If both icon and iconClass are undefined, this function will return\n   * an empty div.\n   *\n   * @param icon - optional, either a string with the name of an existing icon\n   * or an object with \\{name: string, svgstr: string\\} fields\n   *\n   * @param iconClass - optional, if the icon arg is not set, the iconClass arg\n   * should be a CSS class associated with an existing CSS background-image\n   *\n   * @param fallback - DEPRECATED, optional, a LabIcon instance that will\n   * be used if neither icon nor iconClass are defined\n   *\n   * @param props - any additional args are passed though to the element method\n   * of the resolved icon on render\n   *\n   * @returns a DOM node with the resolved icon rendered into it\n   */\n  static resolveElement({\n    icon,\n    iconClass,\n    fallback,\n    ...props\n  }: Partial<LabIcon.IResolverProps> & LabIcon.IProps): HTMLElement {\n    if (!Private.isResolvable(icon)) {\n      if (!iconClass && fallback) {\n        // if neither icon nor iconClass are defined/resolvable, use fallback\n        return fallback.element(props);\n      }\n\n      // set the icon's class to iconClass plus props.className\n      props.className = classes(iconClass, props.className);\n      // render icon as css background image, assuming one is set on iconClass\n      return Private.blankElement(props);\n    }\n\n    return LabIcon.resolve({ icon }).element(props);\n  }\n\n  /**\n   * Resolve an icon name or a \\{name, svgstr\\} pair into a React component.\n   * If icon arg is undefined, the function will fall back to trying to render\n   * the icon as a CSS background image, via the iconClass arg.\n   * If both icon and iconClass are undefined, the returned component\n   * will simply render an empty div.\n   *\n   * @param icon - optional, either a string with the name of an existing icon\n   * or an object with \\{name: string, svgstr: string\\} fields\n   *\n   * @param iconClass - optional, if the icon arg is not set, the iconClass arg\n   * should be a CSS class associated with an existing CSS background-image\n   *\n   * @param fallback - DEPRECATED, optional, a LabIcon instance that will\n   * be used if neither icon nor iconClass are defined\n   *\n   * @param props - any additional args are passed though to the React component\n   * of the resolved icon on render\n   *\n   * @returns a React component that will render the resolved icon\n   */\n  static resolveReact({\n    icon,\n    iconClass,\n    fallback,\n    ...props\n  }: Partial<LabIcon.IResolverProps> & LabIcon.IReactProps): JSX.Element {\n    if (!Private.isResolvable(icon)) {\n      if (!iconClass && fallback) {\n        // if neither icon nor iconClass are defined/resolvable, use fallback\n        return <fallback.react {...props} />;\n      }\n\n      // set the icon's class to iconClass plus props.className\n      props.className = classes(iconClass, props.className);\n      // render icon as css background image, assuming one is set on iconClass\n      return <Private.blankReact {...props} />;\n    }\n\n    const resolved = LabIcon.resolve({ icon });\n    return <resolved.react {...props} />;\n  }\n\n  /**\n   * Resolve a \\{name, svgstr\\} pair into an actual svg node.\n   */\n  static resolveSvg({ name, svgstr }: LabIcon.IIcon): HTMLElement | null {\n    const svgDoc = new DOMParser().parseFromString(\n      Private.svgstrShim(svgstr),\n      'image/svg+xml'\n    );\n\n    const svgError = svgDoc.querySelector('parsererror');\n\n    // structure of error element varies by browser, search at top level\n    if (svgError) {\n      // parse failed, svgElement will be an error box\n      const errmsg = `SVG HTML was malformed for LabIcon instance.\\nname: ${name}, svgstr: ${svgstr}`;\n      if (LabIcon._debug) {\n        // fail noisily, render the error box\n        console.error(errmsg);\n        return svgError as HTMLElement;\n      } else {\n        // bad svg is always a real error, fail silently but warn\n        console.warn(errmsg);\n        return null;\n      }\n    } else {\n      // parse succeeded\n      return svgDoc.documentElement;\n    }\n  }\n\n  /**\n   * Toggle icon debug from off-to-on, or vice-versa.\n   *\n   * @param debug - optional boolean to force debug on or off\n   */\n  static toggleDebug(debug?: boolean): void {\n    LabIcon._debug = debug ?? !LabIcon._debug;\n  }\n\n  private static _debug: boolean = false;\n  private static _instances = new Map<string, LabIcon>();\n\n  /** *********\n   * members *\n   ***********/\n\n  constructor({\n    name,\n    svgstr,\n    render,\n    unrender,\n    _loading = false\n  }: LabIcon.IOptions & { _loading?: boolean }) {\n    if (!(name && svgstr)) {\n      // sanity check failed\n      console.error(\n        `When defining a new LabIcon, name and svgstr must both be non-empty strings. name: ${name}, svgstr: ${svgstr}`\n      );\n      return badIcon;\n    }\n\n    // currently this needs to be set early, before checks for existing icons\n    this._loading = _loading;\n\n    // check to see if this is a redefinition of an existing icon\n    if (LabIcon._instances.has(name)) {\n      // fetch the existing icon, replace its svg, then return it\n      const icon = LabIcon._instances.get(name)!;\n      if (this._loading) {\n        // replace the placeholder svg in icon\n        icon.svgstr = svgstr;\n        this._loading = false;\n        return icon;\n      } else {\n        // already loaded icon svg exists; replace it and warn\n        if (LabIcon._debug) {\n          console.warn(\n            `Redefining previously loaded icon svgstr. name: ${name}, svgstrOld: ${icon.svgstr}, svgstr: ${svgstr}`\n          );\n        }\n        icon.svgstr = svgstr;\n        return icon;\n      }\n    }\n\n    this.name = name;\n    this.react = this._initReact(name);\n    this.svgstr = svgstr;\n\n    // setup custom render/unrender methods, if passed in\n    this._initRender({ render, unrender });\n\n    LabIcon._instances.set(this.name, this);\n  }\n\n  /**\n   * Get a view of this icon that is bound to the specified icon/style props\n   *\n   * @param optional icon/style props (same as args for .element\n   * and .react methods). These will be bound to the resulting view\n   *\n   * @returns a view of this LabIcon instance\n   */\n  bindprops(props?: LabIcon.IProps): LabIcon {\n    const view = Object.create(this);\n    view._props = props;\n    view.react = view._initReact(view.name + '_bind');\n    return view;\n  }\n\n  /**\n   * Create an icon as a DOM element\n   *\n   * @param className - a string that will be used as the class\n   * of the container element. Overrides any existing class\n   *\n   * @param container - a preexisting DOM element that\n   * will be used as the container for the svg element\n   *\n   * @param label - text that will be displayed adjacent\n   * to the icon\n   *\n   * @param title - a tooltip for the icon\n   *\n   * @param tag - if container is not explicitly\n   * provided, this tag will be used when creating the container\n   *\n   * @param stylesheet - optional string naming a builtin icon\n   * stylesheet, for example 'menuItem' or `statusBar`. Can also be an\n   * object defining a custom icon stylesheet, or a list of builtin\n   * stylesheet names and/or custom stylesheet objects. If array,\n   * the given stylesheets will be merged.\n   *\n   *   See @jupyterlab/ui-components/src/style/icon.ts for details\n   *\n   * @param elementPosition - optional position for the inner svg element\n   *\n   * @param elementSize - optional size for the inner svg element.\n   * Set to 'normal' to get a standard 16px x 16px icon\n   *\n   * @param ...elementCSS - all additional args are treated as\n   * overrides for the CSS props applied to the inner svg element\n   *\n   * @returns A DOM element that contains an (inline) svg element\n   * that displays an icon\n   */\n  element(props: LabIcon.IProps = {}): HTMLElement {\n    let {\n      className,\n      container,\n      label,\n      title,\n      tag = 'div',\n      ...styleProps\n    }: LabIcon.IProps = { ...this._props, ...props };\n\n    // check if icon element is already set\n    const maybeSvgElement = container?.firstChild as HTMLElement;\n    if (maybeSvgElement?.dataset?.iconId === this._uuid) {\n      // return the existing icon element\n      return maybeSvgElement;\n    }\n\n    // ensure that svg html is valid\n    if (!this.svgElement) {\n      // bail if failing silently, return blank element\n      return document.createElement('div');\n    }\n\n    let returnSvgElement = true;\n    if (container) {\n      // take ownership by removing any existing children\n      while (container.firstChild) {\n        container.firstChild.remove();\n      }\n    } else {\n      // create a container if needed\n      container = document.createElement(tag);\n\n      returnSvgElement = false;\n    }\n    if (label != null) {\n      container.textContent = label;\n    }\n    Private.initContainer({ container, className, styleProps, title });\n\n    // add the svg node to the container\n    const svgElement = this.svgElement.cloneNode(true) as HTMLElement;\n    container.appendChild(svgElement);\n\n    return returnSvgElement ? svgElement : container;\n  }\n\n  render(container: HTMLElement, options?: LabIcon.IRendererOptions): void {\n    let label = options?.children?.[0];\n    // narrow type of label\n    if (typeof label !== 'string') {\n      label = undefined;\n    }\n\n    this.element({\n      container,\n      label,\n      ...options?.props\n    });\n  }\n\n  protected get svgElement(): HTMLElement | null {\n    if (this._svgElement === undefined) {\n      this._svgElement = this._initSvg({ uuid: this._uuid });\n    }\n\n    return this._svgElement;\n  }\n\n  protected get svgInnerHTML(): string | null {\n    if (this._svgInnerHTML === undefined) {\n      if (this.svgElement === null) {\n        // the svg element resolved to null, mark this null too\n        this._svgInnerHTML = null;\n      } else {\n        this._svgInnerHTML = this.svgElement.innerHTML;\n      }\n    }\n\n    return this._svgInnerHTML;\n  }\n\n  protected get svgReactAttrs(): any | null {\n    if (this._svgReactAttrs === undefined) {\n      if (this.svgElement === null) {\n        // the svg element resolved to null, mark this null too\n        this._svgReactAttrs = null;\n      } else {\n        this._svgReactAttrs = getReactAttrs(this.svgElement, {\n          ignore: ['data-icon-id']\n        });\n      }\n    }\n\n    return this._svgReactAttrs;\n  }\n\n  get svgstr(): string {\n    return this._svgstr;\n  }\n\n  set svgstr(svgstr: string) {\n    this._svgstr = svgstr;\n\n    // associate a new unique id with this particular svgstr\n    const uuid = UUID.uuid4();\n    const uuidOld = this._uuid;\n    this._uuid = uuid;\n\n    // empty the svg parsing intermediates cache\n    this._svgElement = undefined;\n    this._svgInnerHTML = undefined;\n    this._svgReactAttrs = undefined;\n\n    // update icon elements created using .element method\n    document\n      .querySelectorAll(`[data-icon-id=\"${uuidOld}\"]`)\n      .forEach(oldSvgElement => {\n        if (this.svgElement) {\n          oldSvgElement.replaceWith(this.svgElement.cloneNode(true));\n        }\n      });\n\n    // trigger update of icon elements created using other methods\n    this._svgReplaced.emit();\n  }\n\n  unrender?(container: HTMLElement, options?: LabIcon.IRendererOptions): void;\n\n  protected _initReact(displayName: string) {\n    const component = React.forwardRef(\n      (props: LabIcon.IProps = {}, ref: LabIcon.IReactRef) => {\n        const {\n          className,\n          container,\n          label,\n          title,\n          tag = 'div',\n          ...styleProps\n        }: LabIcon.IProps = { ...this._props, ...props };\n\n        // set up component state via useState hook\n        const [, setId] = React.useState(this._uuid);\n\n        // subscribe to svg replacement via useEffect hook\n        React.useEffect(() => {\n          const onSvgReplaced = () => {\n            setId(this._uuid);\n          };\n\n          this._svgReplaced.connect(onSvgReplaced);\n\n          // specify cleanup callback as hook return\n          return () => {\n            this._svgReplaced.disconnect(onSvgReplaced);\n          };\n        });\n\n        // make it so that tag can be used as a jsx component\n        const Tag = tag;\n\n        // ensure that svg html is valid\n        if (!(this.svgInnerHTML && this.svgReactAttrs)) {\n          // bail if failing silently\n          return <></>;\n        }\n\n        const svgComponent = (\n          <svg\n            {...this.svgReactAttrs}\n            dangerouslySetInnerHTML={{ __html: this.svgInnerHTML }}\n            ref={ref}\n          />\n        );\n\n        if (container) {\n          Private.initContainer({ container, className, styleProps, title });\n\n          return (\n            <React.Fragment>\n              {svgComponent}\n              {label}\n            </React.Fragment>\n          );\n        } else {\n          return (\n            <Tag\n              className={\n                className || styleProps\n                  ? classes(className, LabIconStyle.styleClass(styleProps))\n                  : undefined\n              }\n              title={title}\n            >\n              {svgComponent}\n              {label}\n            </Tag>\n          );\n        }\n      }\n    );\n\n    component.displayName = `LabIcon_${displayName}`;\n    return component;\n  }\n\n  protected _initRender({\n    render,\n    unrender\n  }: Partial<VirtualElement.IRenderer>): void {\n    if (render) {\n      this.render = render;\n      if (unrender) {\n        this.unrender = unrender;\n      }\n    } else if (unrender) {\n      console.warn(\n        'In _initRender, ignoring unrender arg since render is undefined'\n      );\n    }\n  }\n\n  protected _initSvg({\n    title,\n    uuid\n  }: { title?: string; uuid?: string } = {}): HTMLElement | null {\n    const svgElement = LabIcon.resolveSvg(this);\n\n    if (!svgElement) {\n      // bail on null svg element\n      return svgElement;\n    }\n\n    if (svgElement.tagName !== 'parsererror') {\n      // svgElement is an actual svg node, augment it\n      svgElement.dataset.icon = this.name;\n\n      if (uuid) {\n        svgElement.dataset.iconId = uuid;\n      }\n\n      if (title) {\n        Private.setTitleSvg(svgElement, title);\n      }\n    }\n\n    return svgElement;\n  }\n\n  readonly name: string;\n\n  /**\n   * A React component that will create the icon.\n   *\n   * @param className - a string that will be used as the class\n   * of the container element. Overrides any existing class\n   *\n   * @param container - a preexisting DOM element that\n   * will be used as the container for the svg element\n   *\n   * @param label - text that will be displayed adjacent\n   * to the icon\n   *\n   * @param title - a tooltip for the icon\n   *\n   * @param tag - if container is not explicitly\n   * provided, this tag will be used when creating the container\n   *\n   * @param stylesheet - optional string naming a builtin icon\n   * stylesheet, for example 'menuItem' or `statusBar`. Can also be an\n   * object defining a custom icon stylesheet, or a list of builtin\n   * stylesheet names and/or custom stylesheet objects. If array,\n   * the given stylesheets will be merged.\n   *\n   *   See @jupyterlab/ui-components/src/style/icon.ts for details\n   *\n   * @param elementPosition - optional position for the inner svg element\n   *\n   * @param elementSize - optional size for the inner svg element.\n   * Set to 'normal' to get a standard 16px x 16px icon\n   *\n   * @param ...elementCSS - all additional args are treated as\n   * overrides for the CSS props applied to the inner svg element\n   *\n   * @param ref - forwarded to the ref prop of the icon's svg element\n   */\n  readonly react: LabIcon.IReact;\n\n  protected _className: string;\n  protected _loading: boolean;\n  protected _props: LabIcon.IProps = {};\n  protected _svgReplaced = new Signal<this, void>(this);\n  protected _svgstr: string;\n  protected _uuid: string;\n\n  /**\n   * Cache for svg parsing intermediates\n   *   - undefined: the cache has not yet been populated\n   *   - null: a valid, but empty, value\n   */\n  protected _svgElement: HTMLElement | null | undefined = undefined;\n  protected _svgInnerHTML: string | null | undefined = undefined;\n  protected _svgReactAttrs: any | null | undefined = undefined;\n}\n\n/**\n * A namespace for LabIcon statics.\n */\nexport namespace LabIcon {\n  /** ***********\n   * interfaces *\n   *************/\n\n  /**\n   * The simplest possible interface for defining a generic icon.\n   */\n  export interface IIcon extends IRenderMime.LabIcon.IIcon {}\n\n  export interface IRendererOptions {\n    attrs?: ElementAttrs;\n    children?: ReadonlyArray<VirtualNode>;\n    props?: IProps;\n  }\n\n  /**\n   * The ILabIcon interface. Outside of this interface the actual\n   * implementation of LabIcon may vary\n   */\n  export interface ILabIcon extends IIcon, VirtualElement.IRenderer {}\n\n  /**\n   * Interface defining the parameters to be passed to the LabIcon\n   * constructor\n   */\n  export interface IOptions extends IIcon, Partial<VirtualElement.IRenderer> {}\n\n  /**\n   * The input props for creating a new LabIcon\n   */\n  export interface IProps extends LabIconStyle.IProps {\n    /**\n     * Extra classNames. Used in addition to the typestyle className to\n     * set the className of the icon's outermost container node\n     */\n    className?: string;\n\n    /**\n     * The icon's outermost node, which acts as a container for the actual\n     * svg node. If container is not supplied, it will be created\n     */\n    container?: HTMLElement;\n\n    /**\n     * Optional text label that will be added as a sibling to the icon's\n     * svg node\n     */\n    label?: string;\n\n    /**\n     * HTML element tag used to create the icon's outermost container node,\n     * if no container is passed in\n     */\n    tag?: 'div' | 'span';\n\n    /**\n     * Optional title that will be set on the icon's outermost container node\n     */\n    title?: string;\n  }\n\n  export interface IResolverProps {\n    icon?: IMaybeResolvable;\n    iconClass?: string;\n    fallback?: LabIcon;\n  }\n\n  /** ******\n   * types *\n   *********/\n\n  /**\n   * A type that can be resolved to a LabIcon instance.\n   */\n  export type IResolvable = IRenderMime.LabIcon.IResolvable;\n\n  /**\n   * A type that maybe can be resolved to a LabIcon instance.\n   */\n  export type IMaybeResolvable =\n    | IResolvable\n    | VirtualElement.IRenderer\n    | undefined;\n\n  /**\n   * The type of the svg node ref that can be passed into icon React components\n   */\n  export type IReactRef = React.RefObject<SVGElement>;\n\n  /**\n   * The properties that can be passed into the React component stored in\n   * the .react field of a LabIcon.\n   */\n  export type IReactProps = IProps & React.RefAttributes<SVGElement>;\n\n  /**\n   * The complete type of the React component stored in the .react\n   * field of a LabIcon.\n   */\n  export type IReact = React.ForwardRefExoticComponent<IReactProps>;\n}\n\nnamespace Private {\n  export function blankElement({\n    className = '',\n    container,\n    label,\n    title,\n    tag = 'div',\n    ...styleProps\n  }: LabIcon.IProps): HTMLElement {\n    if (container?.className === className) {\n      // nothing needs doing, return the icon node\n      return container;\n    }\n\n    if (container) {\n      // take ownership by removing any existing children\n      while (container.firstChild) {\n        container.firstChild.remove();\n      }\n    } else {\n      // create a container if needed\n      container = document.createElement(tag);\n    }\n    if (label != null) {\n      container.textContent = label;\n    }\n    Private.initContainer({ container, className, styleProps, title });\n\n    return container;\n  }\n\n  export const blankReact = React.forwardRef(\n    (\n      {\n        className = '',\n        container,\n        label,\n        title,\n        tag = 'div',\n        ...styleProps\n      }: LabIcon.IProps,\n      ref: LabIcon.IReactRef\n    ) => {\n      // make it so that tag can be used as a jsx component\n      const Tag = tag;\n\n      if (container) {\n        initContainer({ container, className, styleProps, title });\n\n        return <></>;\n      } else {\n        // if ref is defined, we create a blank svg node and point ref to it\n        return (\n          <Tag\n            className={classes(className, LabIconStyle.styleClass(styleProps))}\n          >\n            {ref && blankIcon.react({ ref })}\n            {label}\n          </Tag>\n        );\n      }\n    }\n  );\n  blankReact.displayName = 'BlankReact';\n\n  export function initContainer({\n    container,\n\n    className,\n    styleProps,\n    title\n  }: {\n    container: HTMLElement;\n    className?: string;\n    styleProps?: LabIconStyle.IProps;\n    title?: string;\n  }): string {\n    if (title != null) {\n      container.title = title;\n    }\n    const styleClass = LabIconStyle.styleClass(styleProps);\n\n    if (className != null) {\n      // override the container class with explicitly passed-in class + style class\n      const classResolved = classes(className, styleClass);\n      container.className = classResolved;\n      return classResolved;\n    } else if (styleClass) {\n      // add the style class to the container class\n      container.classList.add(styleClass);\n      return styleClass;\n    } else {\n      return '';\n    }\n  }\n\n  export function isResolvable(\n    icon: LabIcon.IMaybeResolvable\n  ): icon is LabIcon.IResolvable {\n    return !!(\n      icon &&\n      (typeof icon === 'string' ||\n        ((icon as LabIcon.IIcon).name && (icon as LabIcon.IIcon).svgstr))\n    );\n  }\n\n  export function setTitleSvg(svgNode: HTMLElement, title: string): void {\n    // add a title node to the top level svg node\n    const titleNodes = svgNode.getElementsByTagName('title');\n    if (titleNodes.length) {\n      titleNodes[0].textContent = title;\n    } else {\n      const titleNode = document.createElement('title');\n      titleNode.textContent = title;\n      svgNode.appendChild(titleNode);\n    }\n  }\n\n  /**\n   * A shim for svgstrs loaded using any loader other than raw-loader.\n   * This function assumes that svgstr will look like one of:\n   *\n   * - the raw contents of an .svg file:\n   *   <svg...</svg>\n   *\n   * - a data URL:\n   *   data:[<mediatype>][;base64],<svg...</svg>\n   *\n   * See https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n   */\n  export function svgstrShim(svgstr: string, strict: boolean = true): string {\n    // decode any uri escaping, condense leading/lagging whitespace,\n    // then match to raw svg string\n    const [, base64, raw] = decodeURIComponent(svgstr)\n      .replace(/>\\s*\\n\\s*</g, '><')\n      .replace(/\\s*\\n\\s*/g, ' ')\n      .match(\n        strict\n          ? // match based on data url schema\n            /^(?:data:.*?(;base64)?,)?(.*)/\n          : // match based on open of svg tag\n            /(?:(base64).*)?(<svg.*)/\n      )!;\n\n    // decode from base64, if needed\n    return base64 ? atob(raw) : raw;\n  }\n\n  /**\n   * TODO: figure out story for independent Renderers.\n   * Base implementation of IRenderer.\n   */\n  export class Renderer implements VirtualElement.IRenderer {\n    constructor(\n      protected _icon: LabIcon,\n      protected _rendererOptions?: LabIcon.IRendererOptions\n    ) {}\n\n    // eslint-disable-next-line\n    render(container: HTMLElement, options?: LabIcon.IRendererOptions): void {}\n    unrender?(container: HTMLElement, options?: LabIcon.IRendererOptions): void;\n  }\n\n  /**\n   * TODO: figure out story for independent Renderers.\n   * Implementation of IRenderer that creates the icon svg node\n   * as a DOM element.\n   */\n  export class ElementRenderer extends Renderer {\n    render(container: HTMLElement, options?: LabIcon.IRendererOptions): void {\n      let label = options?.children?.[0];\n      // narrow type of label\n      if (typeof label !== 'string') {\n        label = undefined;\n      }\n\n      this._icon.element({\n        container,\n        label,\n        ...this._rendererOptions?.props,\n        ...options?.props\n      });\n    }\n  }\n\n  /**\n   * TODO: figure out story for independent Renderers.\n   * Implementation of IRenderer that creates the icon svg node\n   * as a React component.\n   */\n  export class ReactRenderer extends Renderer {\n    render(container: HTMLElement, options?: LabIcon.IRendererOptions): void {\n      let label = options?.children?.[0];\n      // narrow type of label\n      if (typeof label !== 'string') {\n        label = undefined;\n      }\n\n      const icon = this._icon;\n\n      if (this._rootDOM !== null) {\n        this._rootDOM.unmount();\n      }\n      this._rootDOM = createRoot(container);\n      this._rootDOM.render(\n        <icon.react\n          container={container}\n          label={label}\n          {...{ ...this._rendererOptions?.props, ...options?.props }}\n        />\n      );\n    }\n\n    unrender(container: HTMLElement): void {\n      if (this._rootDOM !== null) {\n        this._rootDOM.unmount();\n        this._rootDOM = null;\n      }\n    }\n\n    private _rootDOM: Root | null = null;\n  }\n}\n\n// need to be at the bottom since constructor depends on Private\nexport const badIcon = new LabIcon({\n  name: 'ui-components:bad',\n  svgstr: badSvgstr\n});\nexport const blankIcon = new LabIcon({\n  name: 'ui-components:blank',\n  svgstr: blankSvgstr\n});\n", "/*-----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n\n/* This file was auto-generated by ensureUiComponents() in @jupyterlab/buildutils */\n\nimport { LabIcon } from './labicon';\n\n// icon svg import statements\nimport addAboveSvgstr from '../../style/icons/toolbar/add-above.svg';\nimport addBelowSvgstr from '../../style/icons/toolbar/add-below.svg';\nimport addSvgstr from '../../style/icons/toolbar/add.svg';\nimport bellSvgstr from '../../style/icons/statusbar/bell.svg';\nimport bugDotSvgstr from '../../style/icons/toolbar/bug-dot.svg';\nimport bugSvgstr from '../../style/icons/toolbar/bug.svg';\nimport buildSvgstr from '../../style/icons/sidebar/build.svg';\nimport caretDownEmptySvgstr from '../../style/icons/arrow/caret-down-empty.svg';\nimport caretDownEmptyThinSvgstr from '../../style/icons/arrow/caret-down-empty-thin.svg';\nimport caretDownSvgstr from '../../style/icons/arrow/caret-down.svg';\nimport caretLeftSvgstr from '../../style/icons/arrow/caret-left.svg';\nimport caretRightSvgstr from '../../style/icons/arrow/caret-right.svg';\nimport caretUpEmptyThinSvgstr from '../../style/icons/arrow/caret-up-empty-thin.svg';\nimport caretUpSvgstr from '../../style/icons/arrow/caret-up.svg';\nimport caseSensitiveSvgstr from '../../style/icons/search/case-sensitive.svg';\nimport checkSvgstr from '../../style/icons/toolbar/check.svg';\nimport circleEmptySvgstr from '../../style/icons/toolbar/circle-empty.svg';\nimport circleSvgstr from '../../style/icons/toolbar/circle.svg';\nimport clearSvgstr from '../../style/icons/toolbar/clear.svg';\nimport closeSvgstr from '../../style/icons/toolbar/close.svg';\nimport codeCheckSvgstr from '../../style/icons/lsp/code-check.svg';\nimport codeSvgstr from '../../style/icons/toolbar/code.svg';\nimport collapseAllSvgstr from '../../style/icons/toolbar/collapse-all.svg';\nimport consoleSvgstr from '../../style/icons/filetype/console.svg';\nimport copySvgstr from '../../style/icons/toolbar/copy.svg';\nimport copyrightSvgstr from '../../style/icons/licenses/copyright.svg';\nimport cutSvgstr from '../../style/icons/toolbar/cut.svg';\nimport deleteSvgstr from '../../style/icons/toolbar/delete.svg';\nimport downloadSvgstr from '../../style/icons/toolbar/download.svg';\nimport duplicateSvgstr from '../../style/icons/toolbar/duplicate.svg';\nimport editSvgstr from '../../style/icons/toolbar/edit.svg';\nimport ellipsesSvgstr from '../../style/icons/toolbar/ellipses.svg';\nimport errorSvgstr from '../../style/icons/error.svg';\nimport expandAllSvgstr from '../../style/icons/toolbar/expand-all.svg';\nimport extensionSvgstr from '../../style/icons/sidebar/extension.svg';\nimport fastForwardSvgstr from '../../style/icons/toolbar/fast-forward.svg';\nimport fileSvgstr from '../../style/icons/filetype/file.svg';\nimport fileUploadSvgstr from '../../style/icons/toolbar/file-upload.svg';\nimport filterDotSvgstr from '../../style/icons/search/filter-dot.svg';\nimport filterListSvgstr from '../../style/icons/toolbar/filter-list.svg';\nimport filterSvgstr from '../../style/icons/search/filter.svg';\nimport folderFavoriteSvgstr from '../../style/icons/filetype/folder-favorite.svg';\nimport folderSvgstr from '../../style/icons/filetype/folder.svg';\nimport homeSvgstr from '../../style/icons/filetype/home.svg';\nimport html5Svgstr from '../../style/icons/filetype/html5.svg';\nimport imageSvgstr from '../../style/icons/filetype/image.svg';\nimport infoSvgstr from '../../style/icons/info.svg';\nimport inspectorSvgstr from '../../style/icons/filetype/inspector.svg';\nimport jsonSvgstr from '../../style/icons/filetype/json.svg';\nimport juliaSvgstr from '../../style/icons/filetype/julia.svg';\nimport jupyterFaviconSvgstr from '../../style/icons/jupyter/jupyter-favicon.svg';\nimport jupyterSvgstr from '../../style/icons/jupyter/jupyter.svg';\nimport jupyterlabWordmarkSvgstr from '../../style/icons/jupyter/jupyterlab-wordmark.svg';\nimport kernelSvgstr from '../../style/icons/statusbar/kernel.svg';\nimport keyboardSvgstr from '../../style/icons/filetype/keyboard.svg';\nimport launchSvgstr from '../../style/icons/toolbar/launch.svg';\nimport launcherSvgstr from '../../style/icons/filetype/launcher.svg';\nimport lineFormSvgstr from '../../style/icons/statusbar/line-form.svg';\nimport linkSvgstr from '../../style/icons/toolbar/link.svg';\nimport listSvgstr from '../../style/icons/statusbar/list.svg';\nimport markdownSvgstr from '../../style/icons/filetype/markdown.svg';\nimport moveDownSvgstr from '../../style/icons/toolbar/move-down.svg';\nimport moveUpSvgstr from '../../style/icons/toolbar/move-up.svg';\nimport newFolderSvgstr from '../../style/icons/toolbar/new-folder.svg';\nimport notTrustedSvgstr from '../../style/icons/statusbar/not-trusted.svg';\nimport notebookSvgstr from '../../style/icons/filetype/notebook.svg';\nimport numberingSvgstr from '../../style/icons/toolbar/numbering.svg';\nimport offlineBoltSvgstr from '../../style/icons/toolbar/offline-bolt.svg';\nimport paletteSvgstr from '../../style/icons/sidebar/palette.svg';\nimport pasteSvgstr from '../../style/icons/toolbar/paste.svg';\nimport pdfSvgstr from '../../style/icons/filetype/pdf.svg';\nimport pythonSvgstr from '../../style/icons/filetype/python.svg';\nimport rKernelSvgstr from '../../style/icons/filetype/r-kernel.svg';\nimport reactSvgstr from '../../style/icons/filetype/react.svg';\nimport redoSvgstr from '../../style/icons/toolbar/redo.svg';\nimport refreshSvgstr from '../../style/icons/toolbar/refresh.svg';\nimport regexSvgstr from '../../style/icons/search/regex.svg';\nimport runSvgstr from '../../style/icons/toolbar/run.svg';\nimport runningSvgstr from '../../style/icons/sidebar/running.svg';\nimport saveSvgstr from '../../style/icons/toolbar/save.svg';\nimport searchSvgstr from '../../style/icons/toolbar/search.svg';\nimport settingsSvgstr from '../../style/icons/filetype/settings.svg';\nimport shareSvgstr from '../../style/icons/sidebar/share.svg';\nimport spreadsheetSvgstr from '../../style/icons/filetype/spreadsheet.svg';\nimport stopSvgstr from '../../style/icons/toolbar/stop.svg';\nimport tabSvgstr from '../../style/icons/sidebar/tab.svg';\nimport tableRowsSvgstr from '../../style/icons/toolbar/table-rows.svg';\nimport tagSvgstr from '../../style/icons/toolbar/tag.svg';\nimport terminalSvgstr from '../../style/icons/statusbar/terminal.svg';\nimport textEditorSvgstr from '../../style/icons/filetype/text-editor.svg';\nimport tocSvgstr from '../../style/icons/sidebar/toc.svg';\nimport treeViewSvgstr from '../../style/icons/toolbar/tree-view.svg';\nimport trustedSvgstr from '../../style/icons/statusbar/trusted.svg';\nimport undoSvgstr from '../../style/icons/toolbar/undo.svg';\nimport userSvgstr from '../../style/icons/sidebar/user.svg';\nimport usersSvgstr from '../../style/icons/sidebar/users.svg';\nimport vegaSvgstr from '../../style/icons/filetype/vega.svg';\nimport wordSvgstr from '../../style/icons/search/word.svg';\nimport yamlSvgstr from '../../style/icons/filetype/yaml.svg';\n\n// LabIcon instance construction\nexport const addAboveIcon = new LabIcon({ name: 'ui-components:add-above', svgstr: addAboveSvgstr });\nexport const addBelowIcon = new LabIcon({ name: 'ui-components:add-below', svgstr: addBelowSvgstr });\nexport const addIcon = new LabIcon({ name: 'ui-components:add', svgstr: addSvgstr });\nexport const bellIcon = new LabIcon({ name: 'ui-components:bell', svgstr: bellSvgstr });\nexport const bugDotIcon = new LabIcon({ name: 'ui-components:bug-dot', svgstr: bugDotSvgstr });\nexport const bugIcon = new LabIcon({ name: 'ui-components:bug', svgstr: bugSvgstr });\nexport const buildIcon = new LabIcon({ name: 'ui-components:build', svgstr: buildSvgstr });\nexport const caretDownEmptyIcon = new LabIcon({ name: 'ui-components:caret-down-empty', svgstr: caretDownEmptySvgstr });\nexport const caretDownEmptyThinIcon = new LabIcon({ name: 'ui-components:caret-down-empty-thin', svgstr: caretDownEmptyThinSvgstr });\nexport const caretDownIcon = new LabIcon({ name: 'ui-components:caret-down', svgstr: caretDownSvgstr });\nexport const caretLeftIcon = new LabIcon({ name: 'ui-components:caret-left', svgstr: caretLeftSvgstr });\nexport const caretRightIcon = new LabIcon({ name: 'ui-components:caret-right', svgstr: caretRightSvgstr });\nexport const caretUpEmptyThinIcon = new LabIcon({ name: 'ui-components:caret-up-empty-thin', svgstr: caretUpEmptyThinSvgstr });\nexport const caretUpIcon = new LabIcon({ name: 'ui-components:caret-up', svgstr: caretUpSvgstr });\nexport const caseSensitiveIcon = new LabIcon({ name: 'ui-components:case-sensitive', svgstr: caseSensitiveSvgstr });\nexport const checkIcon = new LabIcon({ name: 'ui-components:check', svgstr: checkSvgstr });\nexport const circleEmptyIcon = new LabIcon({ name: 'ui-components:circle-empty', svgstr: circleEmptySvgstr });\nexport const circleIcon = new LabIcon({ name: 'ui-components:circle', svgstr: circleSvgstr });\nexport const clearIcon = new LabIcon({ name: 'ui-components:clear', svgstr: clearSvgstr });\nexport const closeIcon = new LabIcon({ name: 'ui-components:close', svgstr: closeSvgstr });\nexport const codeCheckIcon = new LabIcon({ name: 'ui-components:code-check', svgstr: codeCheckSvgstr });\nexport const codeIcon = new LabIcon({ name: 'ui-components:code', svgstr: codeSvgstr });\nexport const collapseAllIcon = new LabIcon({ name: 'ui-components:collapse-all', svgstr: collapseAllSvgstr });\nexport const consoleIcon = new LabIcon({ name: 'ui-components:console', svgstr: consoleSvgstr });\nexport const copyIcon = new LabIcon({ name: 'ui-components:copy', svgstr: copySvgstr });\nexport const copyrightIcon = new LabIcon({ name: 'ui-components:copyright', svgstr: copyrightSvgstr });\nexport const cutIcon = new LabIcon({ name: 'ui-components:cut', svgstr: cutSvgstr });\nexport const deleteIcon = new LabIcon({ name: 'ui-components:delete', svgstr: deleteSvgstr });\nexport const downloadIcon = new LabIcon({ name: 'ui-components:download', svgstr: downloadSvgstr });\nexport const duplicateIcon = new LabIcon({ name: 'ui-components:duplicate', svgstr: duplicateSvgstr });\nexport const editIcon = new LabIcon({ name: 'ui-components:edit', svgstr: editSvgstr });\nexport const ellipsesIcon = new LabIcon({ name: 'ui-components:ellipses', svgstr: ellipsesSvgstr });\nexport const errorIcon = new LabIcon({ name: 'ui-components:error', svgstr: errorSvgstr });\nexport const expandAllIcon = new LabIcon({ name: 'ui-components:expand-all', svgstr: expandAllSvgstr });\nexport const extensionIcon = new LabIcon({ name: 'ui-components:extension', svgstr: extensionSvgstr });\nexport const fastForwardIcon = new LabIcon({ name: 'ui-components:fast-forward', svgstr: fastForwardSvgstr });\nexport const fileIcon = new LabIcon({ name: 'ui-components:file', svgstr: fileSvgstr });\nexport const fileUploadIcon = new LabIcon({ name: 'ui-components:file-upload', svgstr: fileUploadSvgstr });\nexport const filterDotIcon = new LabIcon({ name: 'ui-components:filter-dot', svgstr: filterDotSvgstr });\nexport const filterIcon = new LabIcon({ name: 'ui-components:filter', svgstr: filterSvgstr });\nexport const filterListIcon = new LabIcon({ name: 'ui-components:filter-list', svgstr: filterListSvgstr });\nexport const folderFavoriteIcon = new LabIcon({ name: 'ui-components:folder-favorite', svgstr: folderFavoriteSvgstr });\nexport const folderIcon = new LabIcon({ name: 'ui-components:folder', svgstr: folderSvgstr });\nexport const homeIcon = new LabIcon({ name: 'ui-components:home', svgstr: homeSvgstr });\nexport const html5Icon = new LabIcon({ name: 'ui-components:html5', svgstr: html5Svgstr });\nexport const imageIcon = new LabIcon({ name: 'ui-components:image', svgstr: imageSvgstr });\nexport const infoIcon = new LabIcon({ name: 'ui-components:info', svgstr: infoSvgstr });\nexport const inspectorIcon = new LabIcon({ name: 'ui-components:inspector', svgstr: inspectorSvgstr });\nexport const jsonIcon = new LabIcon({ name: 'ui-components:json', svgstr: jsonSvgstr });\nexport const juliaIcon = new LabIcon({ name: 'ui-components:julia', svgstr: juliaSvgstr });\nexport const jupyterFaviconIcon = new LabIcon({ name: 'ui-components:jupyter-favicon', svgstr: jupyterFaviconSvgstr });\nexport const jupyterIcon = new LabIcon({ name: 'ui-components:jupyter', svgstr: jupyterSvgstr });\nexport const jupyterlabWordmarkIcon = new LabIcon({ name: 'ui-components:jupyterlab-wordmark', svgstr: jupyterlabWordmarkSvgstr });\nexport const kernelIcon = new LabIcon({ name: 'ui-components:kernel', svgstr: kernelSvgstr });\nexport const keyboardIcon = new LabIcon({ name: 'ui-components:keyboard', svgstr: keyboardSvgstr });\nexport const launchIcon = new LabIcon({ name: 'ui-components:launch', svgstr: launchSvgstr });\nexport const launcherIcon = new LabIcon({ name: 'ui-components:launcher', svgstr: launcherSvgstr });\nexport const lineFormIcon = new LabIcon({ name: 'ui-components:line-form', svgstr: lineFormSvgstr });\nexport const linkIcon = new LabIcon({ name: 'ui-components:link', svgstr: linkSvgstr });\nexport const listIcon = new LabIcon({ name: 'ui-components:list', svgstr: listSvgstr });\nexport const markdownIcon = new LabIcon({ name: 'ui-components:markdown', svgstr: markdownSvgstr });\nexport const moveDownIcon = new LabIcon({ name: 'ui-components:move-down', svgstr: moveDownSvgstr });\nexport const moveUpIcon = new LabIcon({ name: 'ui-components:move-up', svgstr: moveUpSvgstr });\nexport const newFolderIcon = new LabIcon({ name: 'ui-components:new-folder', svgstr: newFolderSvgstr });\nexport const notTrustedIcon = new LabIcon({ name: 'ui-components:not-trusted', svgstr: notTrustedSvgstr });\nexport const notebookIcon = new LabIcon({ name: 'ui-components:notebook', svgstr: notebookSvgstr });\nexport const numberingIcon = new LabIcon({ name: 'ui-components:numbering', svgstr: numberingSvgstr });\nexport const offlineBoltIcon = new LabIcon({ name: 'ui-components:offline-bolt', svgstr: offlineBoltSvgstr });\nexport const paletteIcon = new LabIcon({ name: 'ui-components:palette', svgstr: paletteSvgstr });\nexport const pasteIcon = new LabIcon({ name: 'ui-components:paste', svgstr: pasteSvgstr });\nexport const pdfIcon = new LabIcon({ name: 'ui-components:pdf', svgstr: pdfSvgstr });\nexport const pythonIcon = new LabIcon({ name: 'ui-components:python', svgstr: pythonSvgstr });\nexport const rKernelIcon = new LabIcon({ name: 'ui-components:r-kernel', svgstr: rKernelSvgstr });\nexport const reactIcon = new LabIcon({ name: 'ui-components:react', svgstr: reactSvgstr });\nexport const redoIcon = new LabIcon({ name: 'ui-components:redo', svgstr: redoSvgstr });\nexport const refreshIcon = new LabIcon({ name: 'ui-components:refresh', svgstr: refreshSvgstr });\nexport const regexIcon = new LabIcon({ name: 'ui-components:regex', svgstr: regexSvgstr });\nexport const runIcon = new LabIcon({ name: 'ui-components:run', svgstr: runSvgstr });\nexport const runningIcon = new LabIcon({ name: 'ui-components:running', svgstr: runningSvgstr });\nexport const saveIcon = new LabIcon({ name: 'ui-components:save', svgstr: saveSvgstr });\nexport const searchIcon = new LabIcon({ name: 'ui-components:search', svgstr: searchSvgstr });\nexport const settingsIcon = new LabIcon({ name: 'ui-components:settings', svgstr: settingsSvgstr });\nexport const shareIcon = new LabIcon({ name: 'ui-components:share', svgstr: shareSvgstr });\nexport const spreadsheetIcon = new LabIcon({ name: 'ui-components:spreadsheet', svgstr: spreadsheetSvgstr });\nexport const stopIcon = new LabIcon({ name: 'ui-components:stop', svgstr: stopSvgstr });\nexport const tabIcon = new LabIcon({ name: 'ui-components:tab', svgstr: tabSvgstr });\nexport const tableRowsIcon = new LabIcon({ name: 'ui-components:table-rows', svgstr: tableRowsSvgstr });\nexport const tagIcon = new LabIcon({ name: 'ui-components:tag', svgstr: tagSvgstr });\nexport const terminalIcon = new LabIcon({ name: 'ui-components:terminal', svgstr: terminalSvgstr });\nexport const textEditorIcon = new LabIcon({ name: 'ui-components:text-editor', svgstr: textEditorSvgstr });\nexport const tocIcon = new LabIcon({ name: 'ui-components:toc', svgstr: tocSvgstr });\nexport const treeViewIcon = new LabIcon({ name: 'ui-components:tree-view', svgstr: treeViewSvgstr });\nexport const trustedIcon = new LabIcon({ name: 'ui-components:trusted', svgstr: trustedSvgstr });\nexport const undoIcon = new LabIcon({ name: 'ui-components:undo', svgstr: undoSvgstr });\nexport const userIcon = new LabIcon({ name: 'ui-components:user', svgstr: userSvgstr });\nexport const usersIcon = new LabIcon({ name: 'ui-components:users', svgstr: usersSvgstr });\nexport const vegaIcon = new LabIcon({ name: 'ui-components:vega', svgstr: vegaSvgstr });\nexport const wordIcon = new LabIcon({ name: 'ui-components:word', svgstr: wordSvgstr });\nexport const yamlIcon = new LabIcon({ name: 'ui-components:yaml', svgstr: yamlSvgstr });\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for array-specific algorithms.\n */\nexport namespace ArrayExt {\n  /**\n   * Find the index of the first occurrence of a value in an array.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param value - The value to locate in the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first occurrence of the value, or `-1`\n   *   if the value is not found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four', 'one'];\n   * ArrayExt.firstIndexOf(data, 'red');        // -1\n   * ArrayExt.firstIndexOf(data, 'one');        // 0\n   * ArrayExt.firstIndexOf(data, 'one', 1);     // 4\n   * ArrayExt.firstIndexOf(data, 'two', 2);     // -1\n   * ArrayExt.firstIndexOf(data, 'two', 2, 1);  // 1\n   * ```\n   */\n  export function firstIndexOf<T>(\n    array: ArrayLike<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start + i) % n;\n      if (array[j] === value) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the last occurrence of a value in an array.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param value - The value to locate in the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the last occurrence of the value, or `-1`\n   *   if the value is not found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four', 'one'];\n   * ArrayExt.lastIndexOf(data, 'red');        // -1\n   * ArrayExt.lastIndexOf(data, 'one');        // 4\n   * ArrayExt.lastIndexOf(data, 'one', 1);     // 0\n   * ArrayExt.lastIndexOf(data, 'two', 0);     // -1\n   * ArrayExt.lastIndexOf(data, 'two', 0, 1);  // 1\n   * ```\n   */\n  export function lastIndexOf<T>(\n    array: ArrayLike<T>,\n    value: T,\n    start = -1,\n    stop = 0\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (start < stop) {\n      span = start + 1 + (n - stop);\n    } else {\n      span = start - stop + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start - i + n) % n;\n      if (array[j] === value) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the first value which matches a predicate.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first matching value, or `-1` if no\n   *   matching value is found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findFirstIndex(data, isEven);       // 1\n   * ArrayExt.findFirstIndex(data, isEven, 4);    // 5\n   * ArrayExt.findFirstIndex(data, isEven, 6);    // -1\n   * ArrayExt.findFirstIndex(data, isEven, 6, 5); // 1\n   * ```\n   */\n  export function findFirstIndex<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start + i) % n;\n      if (fn(array[j], j)) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the last value which matches a predicate.\n   *\n   * @param object - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the last matching value, or `-1` if no\n   *   matching value is found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findLastIndex(data, isEven);        // 5\n   * ArrayExt.findLastIndex(data, isEven, 4);     // 3\n   * ArrayExt.findLastIndex(data, isEven, 0);     // -1\n   * ArrayExt.findLastIndex(data, isEven, 0, 1);  // 5\n   * ```\n   */\n  export function findLastIndex<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let d: number;\n    if (start < stop) {\n      d = start + 1 + (n - stop);\n    } else {\n      d = start - stop + 1;\n    }\n    for (let i = 0; i < d; ++i) {\n      let j = (start - i + n) % n;\n      if (fn(array[j], j)) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the first value which matches a predicate.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The first matching value, or `undefined` if no matching\n   *   value is found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findFirstValue(data, isEven);       // 2\n   * ArrayExt.findFirstValue(data, isEven, 2);    // 4\n   * ArrayExt.findFirstValue(data, isEven, 6);    // undefined\n   * ArrayExt.findFirstValue(data, isEven, 6, 5); // 2\n   * ```\n   */\n  export function findFirstValue<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): T | undefined {\n    let index = findFirstIndex(array, fn, start, stop);\n    return index !== -1 ? array[index] : undefined;\n  }\n\n  /**\n   * Find the last value which matches a predicate.\n   *\n   * @param object - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The last matching value, or `undefined` if no matching\n   *   value is found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findLastValue(data, isEven);        // 2\n   * ArrayExt.findLastValue(data, isEven, 4);     // 4\n   * ArrayExt.findLastValue(data, isEven, 0);     // undefined\n   * ArrayExt.findLastValue(data, isEven, 0, 1);  // 2\n   * ```\n   */\n  export function findLastValue<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): T | undefined {\n    let index = findLastIndex(array, fn, start, stop);\n    return index !== -1 ? array[index] : undefined;\n  }\n\n  /**\n   * Find the index of the first element which compares `>=` to a value.\n   *\n   * @param array - The sorted array-like object to search.\n   *\n   * @param value - The value to locate in the array.\n   *\n   * @param fn - The 3-way comparison function to apply to the values.\n   *   It should return `< 0` if an element is less than a value, `0` if\n   *   an element is equal to a value, or `> 0` if an element is greater\n   *   than a value.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first element which compares `>=` to the\n   *   value, or `length` if there is no such element. If the computed\n   *   index for `stop` is less than `start`, then the computed index\n   *   for `start` is returned.\n   *\n   * #### Notes\n   * The array must already be sorted in ascending order according to\n   * the comparison function.\n   *\n   * #### Complexity\n   * Logarithmic.\n   *\n   * #### Undefined Behavior\n   * Searching a range which is not sorted in ascending order.\n   *\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function numberCmp(a: number, b: number): number {\n   *   return a - b;\n   * }\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.lowerBound(data, 0, numberCmp);   // 0\n   * ArrayExt.lowerBound(data, 6, numberCmp);   // 3\n   * ArrayExt.lowerBound(data, 7, numberCmp);   // 3\n   * ArrayExt.lowerBound(data, -1, numberCmp);  // 0\n   * ArrayExt.lowerBound(data, 10, numberCmp);  // 6\n   * ```\n   */\n  export function lowerBound<T, U>(\n    array: ArrayLike<T>,\n    value: U,\n    fn: (element: T, value: U) => number,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let begin = start;\n    let span = stop - start + 1;\n    while (span > 0) {\n      let half = span >> 1;\n      let middle = begin + half;\n      if (fn(array[middle], value) < 0) {\n        begin = middle + 1;\n        span -= half + 1;\n      } else {\n        span = half;\n      }\n    }\n    return begin;\n  }\n\n  /**\n   * Find the index of the first element which compares `>` than a value.\n   *\n   * @param array - The sorted array-like object to search.\n   *\n   * @param value - The value to locate in the array.\n   *\n   * @param fn - The 3-way comparison function to apply to the values.\n   *   It should return `< 0` if an element is less than a value, `0` if\n   *   an element is equal to a value, or `> 0` if an element is greater\n   *   than a value.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first element which compares `>` than the\n   *   value, or `length` if there is no such element. If the computed\n   *   index for `stop` is less than `start`, then the computed index\n   *   for `start` is returned.\n   *\n   * #### Notes\n   * The array must already be sorted in ascending order according to\n   * the comparison function.\n   *\n   * #### Complexity\n   * Logarithmic.\n   *\n   * #### Undefined Behavior\n   * Searching a range which is not sorted in ascending order.\n   *\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function numberCmp(a: number, b: number): number {\n   *   return a - b;\n   * }\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.upperBound(data, 0, numberCmp);   // 1\n   * ArrayExt.upperBound(data, 6, numberCmp);   // 3\n   * ArrayExt.upperBound(data, 7, numberCmp);   // 5\n   * ArrayExt.upperBound(data, -1, numberCmp);  // 0\n   * ArrayExt.upperBound(data, 10, numberCmp);  // 6\n   * ```\n   */\n  export function upperBound<T, U>(\n    array: ArrayLike<T>,\n    value: U,\n    fn: (element: T, value: U) => number,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let begin = start;\n    let span = stop - start + 1;\n    while (span > 0) {\n      let half = span >> 1;\n      let middle = begin + half;\n      if (fn(array[middle], value) > 0) {\n        span = half;\n      } else {\n        begin = middle + 1;\n        span -= half + 1;\n      }\n    }\n    return begin;\n  }\n\n  /**\n   * Test whether two arrays are shallowly equal.\n   *\n   * @param a - The first array-like object to compare.\n   *\n   * @param b - The second array-like object to compare.\n   *\n   * @param fn - The comparison function to apply to the elements. It\n   *   should return `true` if the elements are \"equal\". The default\n   *   compares elements using strict `===` equality.\n   *\n   * @returns Whether the two arrays are shallowly equal.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * Modifying the length of the arrays while comparing.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let d1 = [0, 3, 4, 7, 7, 9];\n   * let d2 = [0, 3, 4, 7, 7, 9];\n   * let d3 = [42];\n   * ArrayExt.shallowEqual(d1, d2);  // true\n   * ArrayExt.shallowEqual(d2, d3);  // false\n   * ```\n   */\n  export function shallowEqual<T>(\n    a: ArrayLike<T>,\n    b: ArrayLike<T>,\n    fn?: (a: T, b: T) => boolean\n  ): boolean {\n    // Check for object identity first.\n    if (a === b) {\n      return true;\n    }\n\n    // Bail early if the lengths are different.\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    // Compare each element for equality.\n    for (let i = 0, n = a.length; i < n; ++i) {\n      if (fn ? !fn(a[i], b[i]) : a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    // The array are shallowly equal.\n    return true;\n  }\n\n  /**\n   * Create a slice of an array subject to an optional step.\n   *\n   * @param array - The array-like object of interest.\n   *\n   * @param options - The options for configuring the slice.\n   *\n   * @returns A new array with the specified values.\n   *\n   * @throws An exception if the slice `step` is `0`.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start`, `stop`, or `step` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.slice(data);                         // [0, 3, 4, 7, 7, 9]\n   * ArrayExt.slice(data, { start: 2 });           // [4, 7, 7, 9]\n   * ArrayExt.slice(data, { start: 0, stop: 4 });  // [0, 3, 4, 7]\n   * ArrayExt.slice(data, { step: 2 });            // [0, 4, 7]\n   * ArrayExt.slice(data, { step: -1 });           // [9, 7, 7, 4, 3, 0]\n   * ```\n   */\n  export function slice<T>(\n    array: ArrayLike<T>,\n    options: slice.IOptions = {}\n  ): T[] {\n    // Extract the options.\n    let { start, stop, step } = options;\n\n    // Set up the `step` value.\n    if (step === undefined) {\n      step = 1;\n    }\n\n    // Validate the step size.\n    if (step === 0) {\n      throw new Error('Slice `step` cannot be zero.');\n    }\n\n    // Look up the length of the array.\n    let n = array.length;\n\n    // Set up the `start` value.\n    if (start === undefined) {\n      start = step < 0 ? n - 1 : 0;\n    } else if (start < 0) {\n      start = Math.max(start + n, step < 0 ? -1 : 0);\n    } else if (start >= n) {\n      start = step < 0 ? n - 1 : n;\n    }\n\n    // Set up the `stop` value.\n    if (stop === undefined) {\n      stop = step < 0 ? -1 : n;\n    } else if (stop < 0) {\n      stop = Math.max(stop + n, step < 0 ? -1 : 0);\n    } else if (stop >= n) {\n      stop = step < 0 ? n - 1 : n;\n    }\n\n    // Compute the slice length.\n    let length;\n    if ((step < 0 && stop >= start) || (step > 0 && start >= stop)) {\n      length = 0;\n    } else if (step < 0) {\n      length = Math.floor((stop - start + 1) / step + 1);\n    } else {\n      length = Math.floor((stop - start - 1) / step + 1);\n    }\n\n    // Compute the sliced result.\n    let result: T[] = [];\n    for (let i = 0; i < length; ++i) {\n      result[i] = array[start + i * step];\n    }\n\n    // Return the result.\n    return result;\n  }\n\n  /**\n   * The namespace for the `slice` function statics.\n   */\n  export namespace slice {\n    /**\n     * The options for the `slice` function.\n     */\n    export interface IOptions {\n      /**\n       * The starting index of the slice, inclusive.\n       *\n       * Negative values are taken as an offset from the end\n       * of the array.\n       *\n       * The default is `0` if `step > 0` else `n - 1`.\n       */\n      start?: number;\n\n      /**\n       * The stopping index of the slice, exclusive.\n       *\n       * Negative values are taken as an offset from the end\n       * of the array.\n       *\n       * The default is `n` if `step > 0` else `-n - 1`.\n       */\n      stop?: number;\n\n      /**\n       * The step value for the slice.\n       *\n       * This must not be `0`.\n       *\n       * The default is `1`.\n       */\n      step?: number;\n    }\n  }\n\n  /**\n   * An array-like object which supports item assignment.\n   */\n  export type MutableArrayLike<T> = {\n    readonly length: number;\n    [index: number]: T;\n  };\n\n  /**\n   * Move an element in an array from one index to another.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param fromIndex - The index of the element to move. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * @param toIndex - The target index of the element. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `fromIndex` or `toIndex` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.move(data, 1, 2);  // [0, 2, 1, 3, 4]\n   * ArrayExt.move(data, 4, 2);  // [0, 2, 4, 1, 3]\n   * ```\n   */\n  export function move<T>(\n    array: MutableArrayLike<T>,\n    fromIndex: number,\n    toIndex: number\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (fromIndex < 0) {\n      fromIndex = Math.max(0, fromIndex + n);\n    } else {\n      fromIndex = Math.min(fromIndex, n - 1);\n    }\n    if (toIndex < 0) {\n      toIndex = Math.max(0, toIndex + n);\n    } else {\n      toIndex = Math.min(toIndex, n - 1);\n    }\n    if (fromIndex === toIndex) {\n      return;\n    }\n    let value = array[fromIndex];\n    let d = fromIndex < toIndex ? 1 : -1;\n    for (let i = fromIndex; i !== toIndex; i += d) {\n      array[i] = array[i + d];\n    }\n    array[toIndex] = value;\n  }\n\n  /**\n   * Reverse an array in-place.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param start - The index of the first element in the range to be\n   *   reversed, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   reversed, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or  `stop` index which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.reverse(data, 1, 3);  // [0, 3, 2, 1, 4]\n   * ArrayExt.reverse(data, 3);     // [0, 3, 2, 4, 1]\n   * ArrayExt.reverse(data);        // [1, 4, 2, 3, 0]\n   * ```\n   */\n  export function reverse<T>(\n    array: MutableArrayLike<T>,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    while (start < stop) {\n      let a = array[start];\n      let b = array[stop];\n      array[start++] = b;\n      array[stop--] = a;\n    }\n  }\n\n  /**\n   * Rotate the elements of an array in-place.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param delta - The amount of rotation to apply to the elements. A\n   *   positive value will rotate the elements to the left. A negative\n   *   value will rotate the elements to the right.\n   *\n   * @param start - The index of the first element in the range to be\n   *   rotated, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   rotated, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `delta`, `start`, or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.rotate(data, 2);        // [2, 3, 4, 0, 1]\n   * ArrayExt.rotate(data, -2);       // [0, 1, 2, 3, 4]\n   * ArrayExt.rotate(data, 10);       // [0, 1, 2, 3, 4]\n   * ArrayExt.rotate(data, 9);        // [4, 0, 1, 2, 3]\n   * ArrayExt.rotate(data, 2, 1, 3);  // [4, 2, 0, 1, 3]\n   * ```\n   */\n  export function rotate<T>(\n    array: MutableArrayLike<T>,\n    delta: number,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    if (start >= stop) {\n      return;\n    }\n    let length = stop - start + 1;\n    if (delta > 0) {\n      delta = delta % length;\n    } else if (delta < 0) {\n      delta = ((delta % length) + length) % length;\n    }\n    if (delta === 0) {\n      return;\n    }\n    let pivot = start + delta;\n    reverse(array, start, pivot - 1);\n    reverse(array, pivot, stop);\n    reverse(array, start, stop);\n  }\n\n  /**\n   * Fill an array with a static value.\n   *\n   * @param array - The mutable array-like object to fill.\n   *\n   * @param value - The static value to use to fill the array.\n   *\n   * @param start - The index of the first element in the range to be\n   *   filled, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   filled, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Notes\n   * If `stop < start` the fill will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four'];\n   * ArrayExt.fill(data, 'r');        // ['r', 'r', 'r', 'r']\n   * ArrayExt.fill(data, 'g', 1);     // ['r', 'g', 'g', 'g']\n   * ArrayExt.fill(data, 'b', 2, 3);  // ['r', 'g', 'b', 'b']\n   * ArrayExt.fill(data, 'z', 3, 1);  // ['z', 'z', 'b', 'z']\n   * ```\n   */\n  export function fill<T>(\n    array: MutableArrayLike<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n === 0) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      array[(start + i) % n] = value;\n    }\n  }\n\n  /**\n   * Insert a value into an array at a specific index.\n   *\n   * @param array - The array of interest.\n   *\n   * @param index - The index at which to insert the value. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * @param value - The value to set at the specified index.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2];\n   * ArrayExt.insert(data, 0, -1);  // [-1, 0, 1, 2]\n   * ArrayExt.insert(data, 2, 12);  // [-1, 0, 12, 1, 2]\n   * ArrayExt.insert(data, -1, 7);  // [-1, 0, 12, 1, 7, 2]\n   * ArrayExt.insert(data, 6, 19);  // [-1, 0, 12, 1, 7, 2, 19]\n   * ```\n   */\n  export function insert<T>(array: Array<T>, index: number, value: T): void {\n    let n = array.length;\n    if (index < 0) {\n      index = Math.max(0, index + n);\n    } else {\n      index = Math.min(index, n);\n    }\n    for (let i = n; i > index; --i) {\n      array[i] = array[i - 1];\n    }\n    array[index] = value;\n  }\n\n  /**\n   * Remove and return a value at a specific index in an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param index - The index of the value to remove. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The value at the specified index, or `undefined` if the\n   *   index is out of range.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeAt(data, 2);   // 23\n   * ArrayExt.removeAt(data, -2);  // 12\n   * ArrayExt.removeAt(data, 10);  // undefined;\n   * ```\n   */\n  export function removeAt<T>(array: Array<T>, index: number): T | undefined {\n    let n = array.length;\n    if (index < 0) {\n      index += n;\n    }\n    if (index < 0 || index >= n) {\n      return undefined;\n    }\n    let value = array[index];\n    for (let i = index + 1; i < n; ++i) {\n      array[i - 1] = array[i];\n    }\n    array.length = n - 1;\n    return value;\n  }\n\n  /**\n   * Remove the first occurrence of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the removed value, or `-1` if the value\n   *   is not contained in the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeFirstOf(data, 12);        // 1\n   * ArrayExt.removeFirstOf(data, 17);        // -1\n   * ArrayExt.removeFirstOf(data, 39, 3);     // -1\n   * ArrayExt.removeFirstOf(data, 39, 3, 2);  // 2\n   * ```\n   */\n  export function removeFirstOf<T>(\n    array: Array<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let index = firstIndexOf(array, value, start, stop);\n    if (index !== -1) {\n      removeAt(array, index);\n    }\n    return index;\n  }\n\n  /**\n   * Remove the last occurrence of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the removed value, or `-1` if the value\n   *   is not contained in the array.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeLastOf(data, 12);        // 5\n   * ArrayExt.removeLastOf(data, 17);        // -1\n   * ArrayExt.removeLastOf(data, 39, 2);     // -1\n   * ArrayExt.removeLastOf(data, 39, 2, 3);  // 3\n   * ```\n   */\n  export function removeLastOf<T>(\n    array: Array<T>,\n    value: T,\n    start = -1,\n    stop = 0\n  ): number {\n    let index = lastIndexOf(array, value, start, stop);\n    if (index !== -1) {\n      removeAt(array, index);\n    }\n    return index;\n  }\n\n  /**\n   * Remove all occurrences of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The number of elements removed from the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will conceptually wrap at the end of\n   * the array, however the array will be traversed front-to-back.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [14, 12, 23, 39, 14, 12, 19, 14];\n   * ArrayExt.removeAllOf(data, 12);        // 2\n   * ArrayExt.removeAllOf(data, 17);        // 0\n   * ArrayExt.removeAllOf(data, 14, 1, 4);  // 1\n   * ```\n   */\n  export function removeAllOf<T>(\n    array: Array<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let count = 0;\n    for (let i = 0; i < n; ++i) {\n      if (start <= stop && i >= start && i <= stop && array[i] === value) {\n        count++;\n      } else if (\n        stop < start &&\n        (i <= stop || i >= start) &&\n        array[i] === value\n      ) {\n        count++;\n      } else if (count > 0) {\n        array[i - count] = array[i];\n      }\n    }\n    if (count > 0) {\n      array.length = n - count;\n    }\n    return count;\n  }\n\n  /**\n   * Remove the first occurrence of a value which matches a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The removed `{ index, value }`, which will be `-1` and\n   *   `undefined` if the value is not contained in the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeFirstWhere(data, isEven);     // { index: 0, value: 0 }\n   * ArrayExt.removeFirstWhere(data, isEven, 2);  // { index: 3, value: 14 }\n   * ArrayExt.removeFirstWhere(data, isEven, 4);  // { index: -1, value: undefined }\n   * ```\n   */\n  export function removeFirstWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): { index: number; value: T | undefined } {\n    let value: T | undefined;\n    let index = findFirstIndex(array, fn, start, stop);\n    if (index !== -1) {\n      value = removeAt(array, index);\n    }\n    return { index, value };\n  }\n\n  /**\n   * Remove the last occurrence of a value which matches a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The removed `{ index, value }`, which will be `-1` and\n   *   `undefined` if the value is not contained in the array.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeLastWhere(data, isEven);        // { index: 5, value: 12 }\n   * ArrayExt.removeLastWhere(data, isEven, 2);     // { index: 1, value: 12 }\n   * ArrayExt.removeLastWhere(data, isEven, 2, 1);  // { index: -1, value: undefined }\n   * ```\n   */\n  export function removeLastWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): { index: number; value: T | undefined } {\n    let value: T | undefined;\n    let index = findLastIndex(array, fn, start, stop);\n    if (index !== -1) {\n      value = removeAt(array, index);\n    }\n    return { index, value };\n  }\n\n  /**\n   * Remove all occurrences of values which match a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The number of elements removed from the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will conceptually wrap at the end of\n   * the array, however the array will be traversed front-to-back.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * function isNegative(value: number): boolean {\n   *   return value < 0;\n   * }\n   *\n   * let data = [0, 12, -13, -9, 23, 39, 14, -15, 12, 75];\n   * ArrayExt.removeAllWhere(data, isEven);            // 4\n   * ArrayExt.removeAllWhere(data, isNegative, 0, 3);  // 2\n   * ```\n   */\n  export function removeAllWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let count = 0;\n    for (let i = 0; i < n; ++i) {\n      if (start <= stop && i >= start && i <= stop && fn(array[i], i)) {\n        count++;\n      } else if (stop < start && (i <= stop || i >= start) && fn(array[i], i)) {\n        count++;\n      } else if (count > 0) {\n        array[i - count] = array[i];\n      }\n    }\n    if (count > 0) {\n      array.length = n - count;\n    }\n    return count;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Chain together several iterables.\n *\n * @deprecated\n *\n * @param objects - The iterable objects of interest.\n *\n * @returns An iterator which yields the values of the iterables\n *   in the order in which they are supplied.\n *\n * #### Example\n * ```typescript\n * import { chain } from '@lumino/algorithm';\n *\n * let data1 = [1, 2, 3];\n * let data2 = [4, 5, 6];\n *\n * let stream = chain(data1, data2);\n *\n * Array.from(stream);  // [1, 2, 3, 4, 5, 6]\n * ```\n */\nexport function* chain<T>(...objects: Iterable<T>[]): IterableIterator<T> {\n  for (const object of objects) {\n    yield* object;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an empty iterator.\n *\n * @returns A new iterator which yields nothing.\n *\n * #### Example\n * ```typescript\n * import { empty } from '@lumino/algorithm';\n *\n * let stream = empty<number>();\n *\n * Array.from(stream);  // []\n * ```\n */\n// eslint-disable-next-line require-yield\nexport function* empty<T>(): IterableIterator<T> {\n  return;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Enumerate an iterable object.\n *\n * @param object - The iterable object of interest.\n *\n * @param start - The starting enum value. The default is `0`.\n *\n * @returns An iterator which yields the enumerated values.\n *\n * #### Example\n * ```typescript\n * import { enumerate } from '@lumino/algorithm';\n *\n * let data = ['foo', 'bar', 'baz'];\n *\n * let stream = enumerate(data, 1);\n *\n * Array.from(stream);  // [[1, 'foo'], [2, 'bar'], [3, 'baz']]\n * ```\n */\nexport function* enumerate<T>(\n  object: Iterable<T>,\n  start = 0\n): IterableIterator<[number, T]> {\n  for (const value of object) {\n    yield [start++, value];\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Filter an iterable for values which pass a test.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns An iterator which yields the values which pass the test.\n *\n * #### Example\n * ```typescript\n * import { filter } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = filter(data, value => value % 2 === 0);\n *\n * Array.from(stream);  // [2, 4, 6]\n * ```\n */\nexport function* filter<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): IterableIterator<T> {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      yield value;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Find the first value in an iterable which matches a predicate.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The predicate function to apply to the values.\n *\n * @returns The first matching value, or `undefined` if no matching\n *   value is found.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { find } from '@lumino/algorithm';\n *\n * interface IAnimal { species: string, name: string };\n *\n * function isCat(value: IAnimal): boolean {\n *   return value.species === 'cat';\n * }\n *\n * let data: IAnimal[] = [\n *   { species: 'dog', name: 'spot' },\n *   { species: 'cat', name: 'fluffy' },\n *   { species: 'alligator', name: 'pocho' }\n * ];\n *\n * find(data, isCat).name;  // 'fluffy'\n * ```\n */\nexport function find<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): T | undefined {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return value;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Find the index of the first value which matches a predicate.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The predicate function to apply to the values.\n *\n * @returns The index of the first matching value, or `-1` if no\n *   matching value is found.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { findIndex } from '@lumino/algorithm';\n *\n * interface IAnimal { species: string, name: string };\n *\n * function isCat(value: IAnimal): boolean {\n *   return value.species === 'cat';\n * }\n *\n * let data: IAnimal[] = [\n *   { species: 'dog', name: 'spot' },\n *   { species: 'cat', name: 'fluffy' },\n *   { species: 'alligator', name: 'pocho' }\n * ];\n *\n * findIndex(data, isCat);  // 1\n * ```\n */\nexport function findIndex<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): number {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return index - 1;\n    }\n  }\n  return -1;\n}\n\n/**\n * Find the minimum value in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns The minimum value in the iterable. If multiple values are\n *   equivalent to the minimum, the left-most value is returned. If\n *   the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { min } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * min([7, 4, 0, 3, 9, 4], numberCmp);  // 0\n * ```\n */\nexport function min<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): T | undefined {\n  let result: T | undefined = undefined;\n  for (const value of object) {\n    if (result === undefined) {\n      result = value;\n      continue;\n    }\n    if (fn(value, result) < 0) {\n      result = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Find the maximum value in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns The maximum value in the iterable. If multiple values are\n *   equivalent to the maximum, the left-most value is returned. If\n *   the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { max } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * max([7, 4, 0, 3, 9, 4], numberCmp);  // 9\n * ```\n */\nexport function max<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): T | undefined {\n  let result: T | undefined = undefined;\n  for (const value of object) {\n    if (result === undefined) {\n      result = value;\n      continue;\n    }\n    if (fn(value, result) > 0) {\n      result = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Find the minimum and maximum values in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns A 2-tuple of the `[min, max]` values in the iterable. If\n *   multiple values are equivalent, the left-most values are returned.\n *   If the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { minmax } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * minmax([7, 4, 0, 3, 9, 4], numberCmp);  // [0, 9]\n * ```\n */\nexport function minmax<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): [T, T] | undefined {\n  let empty = true;\n  let vmin: T;\n  let vmax: T;\n  for (const value of object) {\n    if (empty) {\n      vmin = value;\n      vmax = value;\n      empty = false;\n    } else if (fn(value, vmin!) < 0) {\n      vmin = value;\n    } else if (fn(value, vmax!) > 0) {\n      vmax = value;\n    }\n  }\n  return empty ? undefined : [vmin!, vmax!];\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an array from an iterable of values.\n *\n * @deprecated\n *\n * @param object - The iterable object of interest.\n *\n * @returns A new array of values from the given object.\n *\n * #### Example\n * ```typescript\n * import { toArray } from '@lumino/algorithm';\n *\n * let stream = [1, 2, 3, 4, 5, 6][Symbol.iterator]();\n *\n * toArray(stream);  // [1, 2, 3, 4, 5, 6];\n * ```\n */\nexport function toArray<T>(object: Iterable<T>): T[] {\n  return Array.from(object);\n}\n\n/**\n * Create an object from an iterable of key/value pairs.\n *\n * @param object - The iterable object of interest.\n *\n * @returns A new object mapping keys to values.\n *\n * #### Example\n * ```typescript\n * import { toObject } from '@lumino/algorithm';\n *\n * let data: [string, number][] = [['one', 1], ['two', 2], ['three', 3]];\n *\n * toObject(data);  // { one: 1, two: 2, three: 3 }\n * ```\n */\nexport function toObject<T>(object: Iterable<[string, T]>): {\n  [key: string]: T;\n} {\n  const result: { [key: string]: T } = {};\n  for (const [key, value] of object) {\n    result[key] = value;\n  }\n  return result;\n}\n\n/**\n * Invoke a function for each value in an iterable.\n *\n * @deprecated\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The callback function to invoke for each value.\n *\n * #### Notes\n * Iteration can be terminated early by returning `false` from the\n * callback function.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { each } from '@lumino/algorithm';\n *\n * let data = [5, 7, 0, -2, 9];\n *\n * each(data, value => { console.log(value); });\n * ```\n */\nexport function each<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean | void\n): void {\n  let index = 0;\n  for (const value of object) {\n    if (false === fn(value, index++)) {\n      return;\n    }\n  }\n}\n\n/**\n * Test whether all values in an iterable satisfy a predicate.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns `true` if all values pass the test, `false` otherwise.\n *\n * #### Notes\n * Iteration terminates on the first `false` predicate result.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { every } from '@lumino/algorithm';\n *\n * let data = [5, 7, 1];\n *\n * every(data, value => value % 2 === 0);  // false\n * every(data, value => value % 2 === 1);  // true\n * ```\n */\nexport function every<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): boolean {\n  let index = 0;\n  for (const value of object) {\n    if (false === fn(value, index++)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Test whether any value in an iterable satisfies a predicate.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns `true` if any value passes the test, `false` otherwise.\n *\n * #### Notes\n * Iteration terminates on the first `true` predicate result.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { some } from '@lumino/algorithm';\n *\n * let data = [5, 7, 1];\n *\n * some(data, value => value === 7);  // true\n * some(data, value => value === 3);  // false\n * ```\n */\nexport function some<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): boolean {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return true;\n    }\n  }\n  return false;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Transform the values of an iterable with a mapping function.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The mapping function to invoke for each value.\n *\n * @returns An iterator which yields the transformed values.\n *\n * #### Example\n * ```typescript\n * import { map } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3];\n *\n * let stream = map(data, value => value * 2);\n *\n * Array.from(stream);  // [2, 4, 6]\n * ```\n */\nexport function* map<T, U>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => U\n): IterableIterator<U> {\n  let index = 0;\n  for (const value of object) {\n    yield fn(value, index++);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Create an iterator of evenly spaced values.\n *\n * @param start - The starting value for the range, inclusive.\n *\n * @param stop - The stopping value for the range, exclusive.\n *\n * @param step - The distance between each value.\n *\n * @returns An iterator which produces evenly spaced values.\n *\n * #### Notes\n * In the single argument form of `range(stop)`, `start` defaults to\n * `0` and `step` defaults to `1`.\n *\n * In the two argument form of `range(start, stop)`, `step` defaults\n * to `1`.\n *\n * #### Example\n * ```typescript\n * import { range } from '@lumino/algorithm';\n *\n * let stream = range(2, 4);\n *\n * Array.from(stream);  // [2, 3]\n * ```\n */\nexport function* range(\n  start: number,\n  stop?: number,\n  step?: number\n): IterableIterator<number> {\n  if (stop === undefined) {\n    stop = start;\n    start = 0;\n    step = 1;\n  } else if (step === undefined) {\n    step = 1;\n  }\n  const length = Private.rangeLength(start, stop, step);\n  for (let index = 0; index < length; index++) {\n    yield start + step * index;\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Compute the effective length of a range.\n   *\n   * @param start - The starting value for the range, inclusive.\n   *\n   * @param stop - The stopping value for the range, exclusive.\n   *\n   * @param step - The distance between each value.\n   *\n   * @returns The number of steps need to traverse the range.\n   */\n  export function rangeLength(\n    start: number,\n    stop: number,\n    step: number\n  ): number {\n    if (step === 0) {\n      return Infinity;\n    }\n    if (start > stop && step > 0) {\n      return 0;\n    }\n    if (start < stop && step < 0) {\n      return 0;\n    }\n    return Math.ceil((stop - start) / step);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Summarize all values in an iterable using a reducer function.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The reducer function to invoke for each value.\n *\n * @param initial - The initial value to start accumulation.\n *\n * @returns The final accumulated value.\n *\n * #### Notes\n * The `reduce` function follows the conventions of `Array#reduce`.\n *\n * If the iterator is empty, an initial value is required. That value\n * will be used as the return value. If no initial value is provided,\n * an error will be thrown.\n *\n * If the iterator contains a single item and no initial value is\n * provided, the single item is used as the return value.\n *\n * Otherwise, the reducer is invoked for each element in the iterable.\n * If an initial value is not provided, the first element will be used\n * as the initial accumulated value.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { reduce } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5];\n *\n * let sum = reduce(data, (a, value) => a + value);  // 15\n * ```\n */\nexport function reduce<T>(\n  object: Iterable<T>,\n  fn: (accumulator: T, value: T, index: number) => T\n): T;\nexport function reduce<T, U>(\n  object: Iterable<T>,\n  fn: (accumulator: U, value: T, index: number) => U,\n  initial: U\n): U;\nexport function reduce<T>(\n  object: Iterable<T>,\n  fn: (accumulator: any, value: T, index: number) => any,\n  initial?: unknown\n): any {\n  // Setup the iterator and fetch the first value.\n  const it = object[Symbol.iterator]();\n  let index = 0;\n  let first = it.next();\n\n  // An empty iterator and no initial value is an error.\n  if (first.done && initial === undefined) {\n    throw new TypeError('Reduce of empty iterable with no initial value.');\n  }\n\n  // If the iterator is empty, return the initial value.\n  if (first.done) {\n    return initial;\n  }\n\n  // If the iterator has a single item and no initial value, the\n  // reducer is not invoked and the first item is the return value.\n  let second = it.next();\n  if (second.done && initial === undefined) {\n    return first.value;\n  }\n\n  // If iterator has a single item and an initial value is provided,\n  // the reducer is invoked and that result is the return value.\n  if (second.done) {\n    return fn(initial, first.value, index++);\n  }\n\n  // Setup the initial accumlated value.\n  let accumulator: any;\n  if (initial === undefined) {\n    accumulator = fn(first.value, second.value, index++);\n  } else {\n    accumulator = fn(fn(initial, first.value, index++), second.value, index++);\n  }\n\n  // Iterate the rest of the values, updating the accumulator.\n  let next: IteratorResult<T>;\n  while (!(next = it.next()).done) {\n    accumulator = fn(accumulator, next.value, index++);\n  }\n\n  // Return the final accumulated value.\n  return accumulator;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an iterator which repeats a value a number of times.\n *\n * @deprecated\n *\n * @param value - The value to repeat.\n *\n * @param count - The number of times to repeat the value.\n *\n * @returns A new iterator which repeats the specified value.\n *\n * #### Example\n * ```typescript\n * import { repeat } from '@lumino/algorithm';\n *\n * let stream = repeat(7, 3);\n *\n * Array.from(stream);  // [7, 7, 7]\n * ```\n */\nexport function* repeat<T>(value: T, count: number): IterableIterator<T> {\n  while (0 < count--) {\n    yield value;\n  }\n}\n\n/**\n * Create an iterator which yields a value a single time.\n *\n * @deprecated\n *\n * @param value - The value to wrap in an iterator.\n *\n * @returns A new iterator which yields the value a single time.\n *\n * #### Example\n * ```typescript\n * import { once } from '@lumino/algorithm';\n *\n * let stream = once(7);\n *\n * Array.from(stream);  // [7]\n * ```\n */\nexport function* once<T>(value: T): IterableIterator<T> {\n  yield value;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * An object which can produce a reverse iterator over its values.\n */\nexport interface IRetroable<T> {\n  /**\n   * Get a reverse iterator over the object's values.\n   *\n   * @returns An iterator which yields the object's values in reverse.\n   */\n  retro(): IterableIterator<T>;\n}\n\n/**\n * Create an iterator for a retroable object.\n *\n * @param object - The retroable or array-like object of interest.\n *\n * @returns An iterator which traverses the object's values in reverse.\n *\n * #### Example\n * ```typescript\n * import { retro } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = retro(data);\n *\n * Array.from(stream);  // [6, 5, 4, 3, 2, 1]\n * ```\n */\nexport function* retro<T>(\n  object: IRetroable<T> | ArrayLike<T>\n): IterableIterator<T> {\n  if (typeof (object as IRetroable<T>).retro === 'function') {\n    yield* (object as IRetroable<T>).retro();\n  } else {\n    for (let index = (object as ArrayLike<T>).length - 1; index > -1; index--) {\n      yield (object as ArrayLike<T>)[index];\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Topologically sort an iterable of edges.\n *\n * @param edges - The iterable object of edges to sort.\n *   An edge is represented as a 2-tuple of `[fromNode, toNode]`.\n *\n * @returns The topologically sorted array of nodes.\n *\n * #### Notes\n * If a cycle is present in the graph, the cycle will be ignored and\n * the return value will be only approximately sorted.\n *\n * #### Example\n * ```typescript\n * import { topologicSort } from '@lumino/algorithm';\n *\n * let data = [\n *   ['d', 'e'],\n *   ['c', 'd'],\n *   ['a', 'b'],\n *   ['b', 'c']\n * ];\n *\n * topologicSort(data);  // ['a', 'b', 'c', 'd', 'e']\n * ```\n */\nexport function topologicSort<T>(edges: Iterable<[T, T]>): T[] {\n  // Setup the shared sorting state.\n  let sorted: T[] = [];\n  let visited = new Set<T>();\n  let graph = new Map<T, T[]>();\n\n  // Add the edges to the graph.\n  for (const edge of edges) {\n    addEdge(edge);\n  }\n\n  // Visit each node in the graph.\n  for (const [k] of graph) {\n    visit(k);\n  }\n\n  // Return the sorted results.\n  return sorted;\n\n  // Add an edge to the graph.\n  function addEdge(edge: [T, T]): void {\n    let [fromNode, toNode] = edge;\n    let children = graph.get(toNode);\n    if (children) {\n      children.push(fromNode);\n    } else {\n      graph.set(toNode, [fromNode]);\n    }\n  }\n\n  // Recursively visit the node.\n  function visit(node: T): void {\n    if (visited.has(node)) {\n      return;\n    }\n    visited.add(node);\n    let children = graph.get(node);\n    if (children) {\n      for (const child of children) {\n        visit(child);\n      }\n    }\n    sorted.push(node);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Iterate over an iterable using a stepped increment.\n *\n * @param object - The iterable object of interest.\n *\n * @param step - The distance to step on each iteration. A value\n *   of less than `1` will behave the same as a value of `1`.\n *\n * @returns An iterator which traverses the iterable step-wise.\n *\n * #### Example\n * ```typescript\n * import { stride } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = stride(data, 2);\n *\n * Array.from(stream);  // [1, 3, 5];\n * ```\n */\nexport function* stride<T>(\n  object: Iterable<T>,\n  step: number\n): IterableIterator<T> {\n  let count = 0;\n  for (const value of object) {\n    if (0 === count++ % step) {\n      yield value;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for string-specific algorithms.\n */\nexport namespace StringExt {\n  /**\n   * Find the indices of characters in a source text.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The matched indices, or `null` if there is no match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * In order for there to be a match, all of the characters in `query`\n   * **must** appear in `source` in the order given by `query`.\n   *\n   * Characters are matched using strict `===` equality.\n   */\n  export function findIndices(\n    source: string,\n    query: string,\n    start = 0\n  ): number[] | null {\n    let indices = new Array<number>(query.length);\n    for (let i = 0, j = start, n = query.length; i < n; ++i, ++j) {\n      j = source.indexOf(query[i], j);\n      if (j === -1) {\n        return null;\n      }\n      indices[i] = j;\n    }\n    return indices;\n  }\n\n  /**\n   * The result of a string match function.\n   */\n  export interface IMatchResult {\n    /**\n     * A score which indicates the strength of the match.\n     *\n     * The documentation of a given match function should specify\n     * whether a lower or higher score is a stronger match.\n     */\n    score: number;\n\n    /**\n     * The indices of the matched characters in the source text.\n     *\n     * The indices will appear in increasing order.\n     */\n    indices: number[];\n  }\n\n  /**\n   * A string matcher which uses a sum-of-squares algorithm.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The match result, or `null` if there is no match.\n   *   A lower `score` represents a stronger match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * This scoring algorithm uses a sum-of-squares approach to determine\n   * the score. In order for there to be a match, all of the characters\n   * in `query` **must** appear in `source` in order. The index of each\n   * matching character is squared and added to the score. This means\n   * that early and consecutive character matches are preferred, while\n   * late matches are heavily penalized.\n   */\n  export function matchSumOfSquares(\n    source: string,\n    query: string,\n    start = 0\n  ): IMatchResult | null {\n    let indices = findIndices(source, query, start);\n    if (!indices) {\n      return null;\n    }\n    let score = 0;\n    for (let i = 0, n = indices.length; i < n; ++i) {\n      let j = indices[i] - start;\n      score += j * j;\n    }\n    return { score, indices };\n  }\n\n  /**\n   * A string matcher which uses a sum-of-deltas algorithm.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The match result, or `null` if there is no match.\n   *   A lower `score` represents a stronger match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * This scoring algorithm uses a sum-of-deltas approach to determine\n   * the score. In order for there to be a match, all of the characters\n   * in `query` **must** appear in `source` in order. The delta between\n   * the indices are summed to create the score. This means that groups\n   * of matched characters are preferred, while fragmented matches are\n   * penalized.\n   */\n  export function matchSumOfDeltas(\n    source: string,\n    query: string,\n    start = 0\n  ): IMatchResult | null {\n    let indices = findIndices(source, query, start);\n    if (!indices) {\n      return null;\n    }\n    let score = 0;\n    let last = start - 1;\n    for (let i = 0, n = indices.length; i < n; ++i) {\n      let j = indices[i];\n      score += j - last - 1;\n      last = j;\n    }\n    return { score, indices };\n  }\n\n  /**\n   * Highlight the matched characters of a source text.\n   *\n   * @param source - The text which should be highlighted.\n   *\n   * @param indices - The indices of the matched characters. They must\n   *   appear in increasing order and must be in bounds of the source.\n   *\n   * @param fn - The function to apply to the matched chunks.\n   *\n   * @returns An array of unmatched and highlighted chunks.\n   */\n  export function highlight<T>(\n    source: string,\n    indices: ReadonlyArray<number>,\n    fn: (chunk: string) => T\n  ): Array<string | T> {\n    // Set up the result array.\n    let result: Array<string | T> = [];\n\n    // Set up the counter variables.\n    let k = 0;\n    let last = 0;\n    let n = indices.length;\n\n    // Iterator over each index.\n    while (k < n) {\n      // Set up the chunk indices.\n      let i = indices[k];\n      let j = indices[k];\n\n      // Advance the right chunk index until it's non-contiguous.\n      while (++k < n && indices[k] === j + 1) {\n        j++;\n      }\n\n      // Extract the unmatched text.\n      if (last < i) {\n        result.push(source.slice(last, i));\n      }\n\n      // Extract and highlight the matched text.\n      if (i < j + 1) {\n        result.push(fn(source.slice(i, j + 1)));\n      }\n\n      // Update the last visited index.\n      last = j + 1;\n    }\n\n    // Extract any remaining unmatched text.\n    if (last < source.length) {\n      result.push(source.slice(last));\n    }\n\n    // Return the highlighted result.\n    return result;\n  }\n\n  /**\n   * A 3-way string comparison function.\n   *\n   * @param a - The first string of interest.\n   *\n   * @param b - The second string of interest.\n   *\n   * @returns `-1` if `a < b`, else `1` if `a > b`, else `0`.\n   */\n  export function cmp(a: string, b: string): number {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Take a fixed number of items from an iterable.\n *\n * @param object - The iterable object of interest.\n *\n * @param count - The number of items to take from the iterable.\n *\n * @returns An iterator which yields the specified number of items\n *   from the source iterable.\n *\n * #### Notes\n * The returned iterator will exhaust early if the source iterable\n * contains an insufficient number of items.\n *\n * #### Example\n * ```typescript\n * import { take } from '@lumino/algorithm';\n *\n * let stream = take([5, 4, 3, 2, 1, 0, -1], 3);\n *\n * Array.from(stream);  // [5, 4, 3]\n * ```\n */\nexport function* take<T>(\n  object: Iterable<T>,\n  count: number\n): IterableIterator<T> {\n  if (count < 1) {\n    return;\n  }\n  const it = object[Symbol.iterator]();\n  let item: IteratorResult<T>;\n  while (0 < count-- && !(item = it.next()).done) {\n    yield item.value;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { every } from './iter';\n\n/**\n * Iterate several iterables in lockstep.\n *\n * @param objects - The iterable objects of interest.\n *\n * @returns An iterator which yields successive tuples of values where\n *   each value is taken in turn from the provided iterables. It will\n *   be as long as the shortest provided iterable.\n *\n * #### Example\n * ```typescript\n * import { zip } from '@lumino/algorithm';\n *\n * let data1 = [1, 2, 3];\n * let data2 = [4, 5, 6];\n *\n * let stream = zip(data1, data2);\n *\n * Array.from(stream);  // [[1, 4], [2, 5], [3, 6]]\n * ```\n */\nexport function* zip<T>(...objects: Iterable<T>[]): IterableIterator<T[]> {\n  const iters = objects.map(obj => obj[Symbol.iterator]());\n  let tuple = iters.map(it => it.next());\n  for (; every(tuple, item => !item.done); tuple = iters.map(it => it.next())) {\n    yield tuple.map(item => item.value);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * @packageDocumentation\n * @module virtualdom\n */\nimport { ArrayExt } from '@lumino/algorithm';\n\n/**\n * The names of the supported HTML5 DOM element attributes.\n *\n * This list is not all-encompassing, rather it attempts to define the\n * attribute names which are relevant for use in a virtual DOM context.\n * If a standardized or widely supported name is missing, please open\n * an issue to have it added.\n *\n * The attribute names were collected from the following sources:\n *   - https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\n *   - https://www.w3.org/TR/html5/index.html#attributes-1\n *   - https://html.spec.whatwg.org/multipage/indices.html#attributes-3\n */\nexport type ElementAttrNames =\n  | 'abbr'\n  | 'accept'\n  | 'accept-charset'\n  | 'accesskey'\n  | 'action'\n  | 'allowfullscreen'\n  | 'alt'\n  | 'autocomplete'\n  | 'autofocus'\n  | 'autoplay'\n  | 'autosave'\n  | 'checked'\n  | 'cite'\n  | 'cols'\n  | 'colspan'\n  | 'contenteditable'\n  | 'controls'\n  | 'coords'\n  | 'crossorigin'\n  | 'data'\n  | 'datetime'\n  | 'default'\n  | 'dir'\n  | 'dirname'\n  | 'disabled'\n  | 'download'\n  | 'draggable'\n  | 'dropzone'\n  | 'enctype'\n  | 'form'\n  | 'formaction'\n  | 'formenctype'\n  | 'formmethod'\n  | 'formnovalidate'\n  | 'formtarget'\n  | 'headers'\n  | 'height'\n  | 'hidden'\n  | 'high'\n  | 'href'\n  | 'hreflang'\n  | 'id'\n  | 'inputmode'\n  | 'integrity'\n  | 'ismap'\n  | 'kind'\n  | 'label'\n  | 'lang'\n  | 'list'\n  | 'loop'\n  | 'low'\n  | 'max'\n  | 'maxlength'\n  | 'media'\n  | 'mediagroup'\n  | 'method'\n  | 'min'\n  | 'minlength'\n  | 'multiple'\n  | 'muted'\n  | 'name'\n  | 'novalidate'\n  | 'optimum'\n  | 'pattern'\n  | 'placeholder'\n  | 'poster'\n  | 'preload'\n  | 'readonly'\n  | 'rel'\n  | 'required'\n  | 'reversed'\n  | 'rows'\n  | 'rowspan'\n  | 'sandbox'\n  | 'scope'\n  | 'selected'\n  | 'shape'\n  | 'size'\n  | 'sizes'\n  | 'span'\n  | 'spellcheck'\n  | 'src'\n  | 'srcdoc'\n  | 'srclang'\n  | 'srcset'\n  | 'start'\n  | 'step'\n  | 'tabindex'\n  | 'target'\n  | 'title'\n  | 'type'\n  | 'typemustmatch'\n  | 'usemap'\n  | 'value'\n  | 'width'\n  | 'wrap';\n\n/**\n * The names of ARIA attributes for HTML elements.\n *\n * The attribute names are collected from\n * https://www.w3.org/TR/html5/infrastructure.html#element-attrdef-aria-role\n */\nexport type ARIAAttrNames =\n  | 'aria-activedescendant'\n  | 'aria-atomic'\n  | 'aria-autocomplete'\n  | 'aria-busy'\n  | 'aria-checked'\n  | 'aria-colcount'\n  | 'aria-colindex'\n  | 'aria-colspan'\n  | 'aria-controls'\n  | 'aria-current'\n  | 'aria-describedby'\n  | 'aria-details'\n  | 'aria-dialog'\n  | 'aria-disabled'\n  | 'aria-dropeffect'\n  | 'aria-errormessage'\n  | 'aria-expanded'\n  | 'aria-flowto'\n  | 'aria-grabbed'\n  | 'aria-haspopup'\n  | 'aria-hidden'\n  | 'aria-invalid'\n  | 'aria-keyshortcuts'\n  | 'aria-label'\n  | 'aria-labelledby'\n  | 'aria-level'\n  | 'aria-live'\n  | 'aria-multiline'\n  | 'aria-multiselectable'\n  | 'aria-orientation'\n  | 'aria-owns'\n  | 'aria-placeholder'\n  | 'aria-posinset'\n  | 'aria-pressed'\n  | 'aria-readonly'\n  | 'aria-relevant'\n  | 'aria-required'\n  | 'aria-roledescription'\n  | 'aria-rowcount'\n  | 'aria-rowindex'\n  | 'aria-rowspan'\n  | 'aria-selected'\n  | 'aria-setsize'\n  | 'aria-sort'\n  | 'aria-valuemax'\n  | 'aria-valuemin'\n  | 'aria-valuenow'\n  | 'aria-valuetext'\n  | 'role';\n\n/**\n * The names of the supported HTML5 CSS property names.\n *\n * If a standardized or widely supported name is missing, please open\n * an issue to have it added.\n *\n * The property names were collected from the following sources:\n *   - TypeScript's `lib.dom.d.ts` file\n */\nexport type CSSPropertyNames =\n  | 'alignContent'\n  | 'alignItems'\n  | 'alignSelf'\n  | 'alignmentBaseline'\n  | 'animation'\n  | 'animationDelay'\n  | 'animationDirection'\n  | 'animationDuration'\n  | 'animationFillMode'\n  | 'animationIterationCount'\n  | 'animationName'\n  | 'animationPlayState'\n  | 'animationTimingFunction'\n  | 'backfaceVisibility'\n  | 'background'\n  | 'backgroundAttachment'\n  | 'backgroundClip'\n  | 'backgroundColor'\n  | 'backgroundImage'\n  | 'backgroundOrigin'\n  | 'backgroundPosition'\n  | 'backgroundPositionX'\n  | 'backgroundPositionY'\n  | 'backgroundRepeat'\n  | 'backgroundSize'\n  | 'baselineShift'\n  | 'border'\n  | 'borderBottom'\n  | 'borderBottomColor'\n  | 'borderBottomLeftRadius'\n  | 'borderBottomRightRadius'\n  | 'borderBottomStyle'\n  | 'borderBottomWidth'\n  | 'borderCollapse'\n  | 'borderColor'\n  | 'borderImage'\n  | 'borderImageOutset'\n  | 'borderImageRepeat'\n  | 'borderImageSlice'\n  | 'borderImageSource'\n  | 'borderImageWidth'\n  | 'borderLeft'\n  | 'borderLeftColor'\n  | 'borderLeftStyle'\n  | 'borderLeftWidth'\n  | 'borderRadius'\n  | 'borderRight'\n  | 'borderRightColor'\n  | 'borderRightStyle'\n  | 'borderRightWidth'\n  | 'borderSpacing'\n  | 'borderStyle'\n  | 'borderTop'\n  | 'borderTopColor'\n  | 'borderTopLeftRadius'\n  | 'borderTopRightRadius'\n  | 'borderTopStyle'\n  | 'borderTopWidth'\n  | 'borderWidth'\n  | 'bottom'\n  | 'boxShadow'\n  | 'boxSizing'\n  | 'breakAfter'\n  | 'breakBefore'\n  | 'breakInside'\n  | 'captionSide'\n  | 'clear'\n  | 'clip'\n  | 'clipPath'\n  | 'clipRule'\n  | 'color'\n  | 'colorInterpolationFilters'\n  | 'columnCount'\n  | 'columnFill'\n  | 'columnGap'\n  | 'columnRule'\n  | 'columnRuleColor'\n  | 'columnRuleStyle'\n  | 'columnRuleWidth'\n  | 'columnSpan'\n  | 'columnWidth'\n  | 'columns'\n  | 'content'\n  | 'counterIncrement'\n  | 'counterReset'\n  | 'cssFloat'\n  | 'cssText'\n  | 'cursor'\n  | 'direction'\n  | 'display'\n  | 'dominantBaseline'\n  | 'emptyCells'\n  | 'enableBackground'\n  | 'fill'\n  | 'fillOpacity'\n  | 'fillRule'\n  | 'filter'\n  | 'flex'\n  | 'flexBasis'\n  | 'flexDirection'\n  | 'flexFlow'\n  | 'flexGrow'\n  | 'flexShrink'\n  | 'flexWrap'\n  | 'floodColor'\n  | 'floodOpacity'\n  | 'font'\n  | 'fontFamily'\n  | 'fontFeatureSettings'\n  | 'fontSize'\n  | 'fontSizeAdjust'\n  | 'fontStretch'\n  | 'fontStyle'\n  | 'fontVariant'\n  | 'fontWeight'\n  | 'glyphOrientationHorizontal'\n  | 'glyphOrientationVertical'\n  | 'height'\n  | 'imeMode'\n  | 'justifyContent'\n  | 'kerning'\n  | 'left'\n  | 'letterSpacing'\n  | 'lightingColor'\n  | 'lineHeight'\n  | 'listStyle'\n  | 'listStyleImage'\n  | 'listStylePosition'\n  | 'listStyleType'\n  | 'margin'\n  | 'marginBottom'\n  | 'marginLeft'\n  | 'marginRight'\n  | 'marginTop'\n  | 'marker'\n  | 'markerEnd'\n  | 'markerMid'\n  | 'markerStart'\n  | 'mask'\n  | 'maxHeight'\n  | 'maxWidth'\n  | 'minHeight'\n  | 'minWidth'\n  | 'msContentZoomChaining'\n  | 'msContentZoomLimit'\n  | 'msContentZoomLimitMax'\n  | 'msContentZoomLimitMin'\n  | 'msContentZoomSnap'\n  | 'msContentZoomSnapPoints'\n  | 'msContentZoomSnapType'\n  | 'msContentZooming'\n  | 'msFlowFrom'\n  | 'msFlowInto'\n  | 'msFontFeatureSettings'\n  | 'msGridColumn'\n  | 'msGridColumnAlign'\n  | 'msGridColumnSpan'\n  | 'msGridColumns'\n  | 'msGridRow'\n  | 'msGridRowAlign'\n  | 'msGridRowSpan'\n  | 'msGridRows'\n  | 'msHighContrastAdjust'\n  | 'msHyphenateLimitChars'\n  | 'msHyphenateLimitLines'\n  | 'msHyphenateLimitZone'\n  | 'msHyphens'\n  | 'msImeAlign'\n  | 'msOverflowStyle'\n  | 'msScrollChaining'\n  | 'msScrollLimit'\n  | 'msScrollLimitXMax'\n  | 'msScrollLimitXMin'\n  | 'msScrollLimitYMax'\n  | 'msScrollLimitYMin'\n  | 'msScrollRails'\n  | 'msScrollSnapPointsX'\n  | 'msScrollSnapPointsY'\n  | 'msScrollSnapType'\n  | 'msScrollSnapX'\n  | 'msScrollSnapY'\n  | 'msScrollTranslation'\n  | 'msTextCombineHorizontal'\n  | 'msTextSizeAdjust'\n  | 'msTouchAction'\n  | 'msTouchSelect'\n  | 'msUserSelect'\n  | 'msWrapFlow'\n  | 'msWrapMargin'\n  | 'msWrapThrough'\n  | 'opacity'\n  | 'order'\n  | 'orphans'\n  | 'outline'\n  | 'outlineColor'\n  | 'outlineStyle'\n  | 'outlineWidth'\n  | 'overflow'\n  | 'overflowX'\n  | 'overflowY'\n  | 'padding'\n  | 'paddingBottom'\n  | 'paddingLeft'\n  | 'paddingRight'\n  | 'paddingTop'\n  | 'pageBreakAfter'\n  | 'pageBreakBefore'\n  | 'pageBreakInside'\n  | 'perspective'\n  | 'perspectiveOrigin'\n  | 'pointerEvents'\n  | 'position'\n  | 'quotes'\n  | 'resize'\n  | 'right'\n  | 'rubyAlign'\n  | 'rubyOverhang'\n  | 'rubyPosition'\n  | 'stopColor'\n  | 'stopOpacity'\n  | 'stroke'\n  | 'strokeDasharray'\n  | 'strokeDashoffset'\n  | 'strokeLinecap'\n  | 'strokeLinejoin'\n  | 'strokeMiterlimit'\n  | 'strokeOpacity'\n  | 'strokeWidth'\n  | 'tableLayout'\n  | 'textAlign'\n  | 'textAlignLast'\n  | 'textAnchor'\n  | 'textDecoration'\n  | 'textIndent'\n  | 'textJustify'\n  | 'textKashida'\n  | 'textKashidaSpace'\n  | 'textOverflow'\n  | 'textShadow'\n  | 'textTransform'\n  | 'textUnderlinePosition'\n  | 'top'\n  | 'touchAction'\n  | 'transform'\n  | 'transformOrigin'\n  | 'transformStyle'\n  | 'transition'\n  | 'transitionDelay'\n  | 'transitionDuration'\n  | 'transitionProperty'\n  | 'transitionTimingFunction'\n  | 'unicodeBidi'\n  | 'verticalAlign'\n  | 'visibility'\n  | 'webkitAlignContent'\n  | 'webkitAlignItems'\n  | 'webkitAlignSelf'\n  | 'webkitAnimation'\n  | 'webkitAnimationDelay'\n  | 'webkitAnimationDirection'\n  | 'webkitAnimationDuration'\n  | 'webkitAnimationFillMode'\n  | 'webkitAnimationIterationCount'\n  | 'webkitAnimationName'\n  | 'webkitAnimationPlayState'\n  | 'webkitAnimationTimingFunction'\n  | 'webkitAppearance'\n  | 'webkitBackfaceVisibility'\n  | 'webkitBackgroundClip'\n  | 'webkitBackgroundOrigin'\n  | 'webkitBackgroundSize'\n  | 'webkitBorderBottomLeftRadius'\n  | 'webkitBorderBottomRightRadius'\n  | 'webkitBorderImage'\n  | 'webkitBorderRadius'\n  | 'webkitBorderTopLeftRadius'\n  | 'webkitBorderTopRightRadius'\n  | 'webkitBoxAlign'\n  | 'webkitBoxDirection'\n  | 'webkitBoxFlex'\n  | 'webkitBoxOrdinalGroup'\n  | 'webkitBoxOrient'\n  | 'webkitBoxPack'\n  | 'webkitBoxSizing'\n  | 'webkitColumnBreakAfter'\n  | 'webkitColumnBreakBefore'\n  | 'webkitColumnBreakInside'\n  | 'webkitColumnCount'\n  | 'webkitColumnGap'\n  | 'webkitColumnRule'\n  | 'webkitColumnRuleColor'\n  | 'webkitColumnRuleStyle'\n  | 'webkitColumnRuleWidth'\n  | 'webkitColumnSpan'\n  | 'webkitColumnWidth'\n  | 'webkitColumns'\n  | 'webkitFilter'\n  | 'webkitFlex'\n  | 'webkitFlexBasis'\n  | 'webkitFlexDirection'\n  | 'webkitFlexFlow'\n  | 'webkitFlexGrow'\n  | 'webkitFlexShrink'\n  | 'webkitFlexWrap'\n  | 'webkitJustifyContent'\n  | 'webkitOrder'\n  | 'webkitPerspective'\n  | 'webkitPerspectiveOrigin'\n  | 'webkitTapHighlightColor'\n  | 'webkitTextFillColor'\n  | 'webkitTextSizeAdjust'\n  | 'webkitTransform'\n  | 'webkitTransformOrigin'\n  | 'webkitTransformStyle'\n  | 'webkitTransition'\n  | 'webkitTransitionDelay'\n  | 'webkitTransitionDuration'\n  | 'webkitTransitionProperty'\n  | 'webkitTransitionTimingFunction'\n  | 'webkitUserModify'\n  | 'webkitUserSelect'\n  | 'webkitWritingMode'\n  | 'whiteSpace'\n  | 'widows'\n  | 'width'\n  | 'wordBreak'\n  | 'wordSpacing'\n  | 'wordWrap'\n  | 'writingMode'\n  | 'zIndex'\n  | 'zoom';\n\n/**\n * A mapping of inline event name to event object type.\n *\n * This mapping is used to create the event listener properties for\n * the virtual DOM element attributes object. If a standardized or\n * widely supported name is missing, please open an issue to have it\n * added.\n *\n * The event names were collected from the following sources:\n *   - TypeScript's `lib.dom.d.ts` file\n *   - https://www.w3.org/TR/html5/index.html#attributes-1\n *   - https://html.spec.whatwg.org/multipage/webappapis.html#idl-definitions\n */\nexport type ElementEventMap = {\n  onabort: UIEvent;\n  onauxclick: MouseEvent;\n  onblur: FocusEvent;\n  oncanplay: Event;\n  oncanplaythrough: Event;\n  onchange: Event;\n  onclick: MouseEvent;\n  oncontextmenu: PointerEvent;\n  oncopy: ClipboardEvent;\n  oncuechange: Event;\n  oncut: ClipboardEvent;\n  ondblclick: MouseEvent;\n  ondrag: DragEvent;\n  ondragend: DragEvent;\n  ondragenter: DragEvent;\n  ondragexit: DragEvent;\n  ondragleave: DragEvent;\n  ondragover: DragEvent;\n  ondragstart: DragEvent;\n  ondrop: DragEvent;\n  ondurationchange: Event;\n  onemptied: Event;\n  onended: ErrorEvent;\n  onerror: ErrorEvent;\n  onfocus: FocusEvent;\n  oninput: Event;\n  oninvalid: Event;\n  onkeydown: KeyboardEvent;\n  onkeypress: KeyboardEvent;\n  onkeyup: KeyboardEvent;\n  onload: Event;\n  onloadeddata: Event;\n  onloadedmetadata: Event;\n  onloadend: Event;\n  onloadstart: Event;\n  onmousedown: MouseEvent;\n  onmouseenter: MouseEvent;\n  onmouseleave: MouseEvent;\n  onmousemove: MouseEvent;\n  onmouseout: MouseEvent;\n  onmouseover: MouseEvent;\n  onmouseup: MouseEvent;\n  onmousewheel: WheelEvent;\n  onpaste: ClipboardEvent;\n  onpause: Event;\n  onplay: Event;\n  onplaying: Event;\n  onpointercancel: PointerEvent;\n  onpointerdown: PointerEvent;\n  onpointerenter: PointerEvent;\n  onpointerleave: PointerEvent;\n  onpointermove: PointerEvent;\n  onpointerout: PointerEvent;\n  onpointerover: PointerEvent;\n  onpointerup: PointerEvent;\n  onprogress: ProgressEvent;\n  onratechange: Event;\n  onreset: Event;\n  onscroll: UIEvent;\n  onseeked: Event;\n  onseeking: Event;\n  onselect: UIEvent;\n  onselectstart: Event;\n  onstalled: Event;\n  onsubmit: Event;\n  onsuspend: Event;\n  ontimeupdate: Event;\n  onvolumechange: Event;\n  onwaiting: Event;\n};\n\n/**\n * An object which represents a dataset for a virtual DOM element.\n *\n * The names of the dataset properties will be automatically prefixed\n * with `data-` before being added to the node, e.g. `{ thing: '12' }`\n * will be rendered as `data-thing='12'` in the DOM element.\n *\n * Dataset property names should not contain spaces.\n */\nexport type ElementDataset = {\n  readonly [name: string]: string;\n};\n\n/**\n * The inline style for for a virtual DOM element.\n *\n * Style attributes use the JS camel-cased property names instead of\n * the CSS hyphenated names for performance and security.\n */\nexport type ElementInlineStyle = {\n  readonly [T in CSSPropertyNames]?: string;\n};\n\n/**\n * The ARIA attributes for a virtual element node.\n *\n * These are the attributes which are applied to a real DOM element via\n * `element.setAttribute()`. The supported attribute names are defined\n * by the `ARIAAttrNames` type.\n */\nexport type ElementARIAAttrs = {\n  readonly [T in ARIAAttrNames]?: string;\n};\n\n/**\n * The base attributes for a virtual element node.\n *\n * These are the attributes which are applied to a real DOM element via\n * `element.setAttribute()`. The supported attribute names are defined\n * by the `ElementAttrNames` type.\n *\n * Node attributes are specified using the lower-case HTML name instead\n * of the camel-case JS name due to browser inconsistencies in handling\n * the JS versions.\n */\nexport type ElementBaseAttrs = {\n  readonly [T in ElementAttrNames]?: string;\n};\n\n/**\n * The inline event listener attributes for a virtual element node.\n *\n * The supported listeners are defined by the `ElementEventMap` type.\n */\nexport type ElementEventAttrs = {\n  readonly [T in keyof ElementEventMap]?: (\n    this: HTMLElement,\n    event: ElementEventMap[T]\n  ) => any;\n};\n\n/**\n * The special-cased attributes for a virtual element node.\n */\nexport type ElementSpecialAttrs = {\n  /**\n   * The key id for the virtual element node.\n   *\n   * If a node is given a key id, the generated DOM node will not be\n   * recreated during a rendering update if it only moves among its\n   * siblings in the render tree.\n   *\n   * In general, reordering child nodes will cause the nodes to be\n   * completely re-rendered. Keys allow this to be optimized away.\n   *\n   * If a key is provided, it must be unique among sibling nodes.\n   */\n  readonly key?: string;\n\n  /**\n   * The JS-safe name for the HTML `class` attribute.\n   */\n  readonly className?: string;\n\n  /**\n   * The JS-safe name for the HTML `for` attribute.\n   */\n  readonly htmlFor?: string;\n\n  /**\n   * The dataset for the rendered DOM element.\n   */\n  readonly dataset?: ElementDataset;\n\n  /**\n   * The inline style for the rendered DOM element.\n   */\n  readonly style?: ElementInlineStyle;\n};\n\n/**\n * The full set of attributes supported by a virtual element node.\n *\n * This is the combination of the base element attributes, the the ARIA attributes,\n * the inline element event listeners, and the special element attributes.\n */\nexport type ElementAttrs = ElementBaseAttrs &\n  ElementARIAAttrs &\n  ElementEventAttrs &\n  ElementSpecialAttrs;\n\n/**\n * A virtual node which represents plain text content.\n *\n * #### Notes\n * User code will not typically create a `VirtualText` node directly.\n * Instead, the `h()` function will be used to create an element tree.\n */\nexport class VirtualText {\n  /**\n   * The text content for the node.\n   */\n  readonly content: string;\n\n  /**\n   * The type of the node.\n   *\n   * This value can be used as a type guard for discriminating the\n   * `VirtualNode` union type.\n   */\n  readonly type = 'text' as const;\n\n  /**\n   * Construct a new virtual text node.\n   *\n   * @param content - The text content for the node.\n   */\n  constructor(content: string) {\n    this.content = content;\n  }\n}\n\n/**\n * A virtual node which represents an HTML element.\n *\n * #### Notes\n * User code will not typically create a `VirtualElement` node directly.\n * Instead, the `h()` function will be used to create an element tree.\n */\nexport class VirtualElement {\n  /**\n   * The tag name for the element.\n   */\n  readonly tag: string;\n\n  /**\n   * The attributes for the element.\n   */\n  readonly attrs: ElementAttrs;\n\n  /**\n   * The children for the element.\n   */\n  readonly children: ReadonlyArray<VirtualNode>;\n\n  /**\n   * An optional custom renderer for the element's children. If set, on render\n   * this element's DOM node and it's attrs will be created/updated as normal.\n   * At that point the DOM node is handed off to the renderer.\n   */\n  readonly renderer: VirtualElement.IRenderer | undefined;\n\n  /**\n   * The type of the node.\n   *\n   * This value can be used as a type guard for discriminating the\n   * `VirtualNode` union type.\n   */\n  readonly type = 'element' as const;\n\n  /**\n   * Construct a new virtual element node.\n   *\n   * @param tag - The element tag name.\n   *\n   * @param attrs - The element attributes.\n   *\n   * @param children - The element children.\n   *\n   * @param renderer - An optional custom renderer for the element.\n   */\n  constructor(\n    tag: string,\n    attrs: ElementAttrs,\n    children: ReadonlyArray<VirtualNode>,\n    renderer?: VirtualElement.IRenderer\n  ) {\n    this.tag = tag;\n    this.attrs = attrs;\n    this.children = children;\n\n    this.renderer = renderer;\n  }\n}\n\nexport namespace VirtualElement {\n  /**\n   * A type describing a custom element renderer\n   */\n  export type IRenderer = {\n    /**\n     * Customize how a DOM node is rendered. If .renderer is set on a given\n     * instance of VirtualElement, this function will be called every time\n     * that VirtualElement is rendered.\n     *\n     * @param host - The actual DOM node created for a VirtualElement during\n     * rendering.\n     *\n     * On render, host is created and its attrs are set/updated via\n     * the standard routines in updateContent. host is then handed off to this\n     * function.\n     *\n     * The render function is free to modify host. The only restriction is\n     * is that render should not modify any attributes set by external\n     * routines (ie updateContent), as this may cause thrashing when the\n     * virtual element is next rendered.\n     *\n     * @param options - Will be populated with the .attrs and .children fields\n     * set on the VirtualElement being rendered.\n     */\n    render: (\n      host: HTMLElement,\n      options?: { attrs?: ElementAttrs; children?: ReadonlyArray<VirtualNode> }\n    ) => void;\n\n    /**\n     * Optional cleanup function for custom renderers. If the .renderer field\n     * of a VirtualELement is set, and if .renderer.unrender is defined, when\n     * the element is changed or removed its corresponding DOM element will be\n     * passed to this function immediately before it is removed from the DOM.\n     *\n     * unrender is not required for for simple renderers, such as those\n     * implemented using `document.createElement()`. However, for certain\n     * rendering techniques explicit cleanup is required in order to avoid\n     * resource leaks.\n     *\n     * For example, if render calls `ReactDOM.render(..., host)`, then\n     * there has to also be a corresponding implementation of unrender that\n     * calls `ReactDOM.unmountComponentAtNode(host)` in order to prevent\n     * a memory leak.\n     *\n     * @param host - the DOM element to be removed.\n     *\n     * @param options - Will be populated with the .attrs and .children fields\n     * set on the VirtualElement being unrendered.\n     */\n    unrender?: (\n      host: HTMLElement,\n      options?: { attrs?: ElementAttrs; children?: ReadonlyArray<VirtualNode> }\n    ) => void;\n  };\n}\n\n/**\n * DEPRECATED - use VirtualElement with a defined renderer param instead.\n * This class is provided as a backwards compatibility shim\n *\n * A \"pass thru\" virtual node whose children are managed by a render and an\n * unrender callback. The intent of this flavor of virtual node is to make\n * it easy to blend other kinds of virtualdom (eg React) into Phosphor's\n * virtualdom.\n *\n * #### Notes\n * User code will not typically create a `VirtualElementPass` node directly.\n * Instead, the `hpass()` function will be used to create an element tree.\n */\nexport class VirtualElementPass extends VirtualElement {\n  /**\n   * DEPRECATED - use VirtualElement with a defined renderer param instead\n   *\n   * Construct a new virtual element pass thru node.\n   *\n   * @param tag - the tag of the parent element of this node. Once the parent\n   * element is rendered, it will be passed as an argument to\n   * renderer.render\n   *\n   * @param attrs - attributes that will assigned to the\n   * parent element\n   *\n   * @param renderer - an object with render and unrender\n   * functions, each of which should take a single argument of type\n   * HTMLElement and return nothing. If null, the parent element\n   * will be rendered barren without any children.\n   */\n  constructor(\n    tag: string,\n    attrs: ElementAttrs,\n    renderer: VirtualElementPass.IRenderer | null\n  ) {\n    super(tag, attrs, [], renderer || undefined);\n  }\n}\n\nexport namespace VirtualElementPass {\n  /**\n   * DEPRECATED - use VirtualElement.IRenderer instead\n   *\n   * A type describing a custom element renderer\n   */\n  export type IRenderer = VirtualElement.IRenderer;\n}\n\n/**\n * A type alias for a general virtual node.\n */\nexport type VirtualNode = VirtualElement | VirtualText;\n\n/**\n * Create a new virtual element node.\n *\n * @param tag - The tag name for the element.\n *\n * @param attrs - The attributes for the element, if any.\n *\n * @param renderer - An optional custom renderer for the element.\n *\n * @param children - The children for the element, if any.\n *\n * @returns A new virtual element node for the given parameters.\n *\n * #### Notes\n * The children may be string literals, other virtual nodes, `null`, or\n * an array of those things. Strings are converted into text nodes, and\n * arrays are inlined as if the array contents were given as positional\n * arguments. This makes it simple to build up an array of children by\n * any desired means. `null` child values are simply ignored.\n *\n * A bound function for each HTML tag name is available as a static\n * function attached to the `h()` function. E.g. `h('div', ...)` is\n * equivalent to `h.div(...)`.\n */\nexport function h(tag: string, ...children: h.Child[]): VirtualElement;\nexport function h(\n  tag: string,\n  attrs: ElementAttrs,\n  ...children: h.Child[]\n): VirtualElement;\nexport function h(\n  tag: string,\n  renderer: VirtualElement.IRenderer,\n  ...children: h.Child[]\n): VirtualElement;\nexport function h(\n  tag: string,\n  attrs: ElementAttrs,\n  renderer: VirtualElement.IRenderer,\n  ...children: h.Child[]\n): VirtualElement;\nexport function h(tag: string): VirtualElement {\n  let attrs: ElementAttrs = {};\n  let renderer: VirtualElement.IRenderer | undefined;\n  let children: VirtualNode[] = [];\n  for (let i = 1, n = arguments.length; i < n; ++i) {\n    // eslint-disable-next-line prefer-rest-params\n    let arg = arguments[i];\n    if (typeof arg === 'string') {\n      children.push(new VirtualText(arg));\n    } else if (arg instanceof VirtualText) {\n      children.push(arg);\n    } else if (arg instanceof VirtualElement) {\n      children.push(arg);\n    } else if (arg instanceof Array) {\n      extend(children, arg);\n    } else if ((i === 1 || i === 2) && arg && typeof arg === 'object') {\n      if ('render' in arg) {\n        renderer = arg;\n      } else {\n        attrs = arg;\n      }\n    }\n  }\n  return new VirtualElement(tag, attrs, children, renderer);\n\n  function extend(array: VirtualNode[], values: h.Child[]): void {\n    for (let child of values) {\n      if (typeof child === 'string') {\n        array.push(new VirtualText(child));\n      } else if (child instanceof VirtualText) {\n        array.push(child);\n      } else if (child instanceof VirtualElement) {\n        array.push(child);\n      }\n    }\n  }\n}\n\n/**\n * The namespace for the `h` function statics.\n */\nexport namespace h {\n  /**\n   * A type alias for the supported child argument types.\n   */\n  export type Child =\n    | (string | VirtualNode | null)\n    | Array<string | VirtualNode | null>;\n\n  /**\n   * A bound factory function for a specific `h()` tag.\n   */\n  export interface IFactory {\n    (...children: Child[]): VirtualElement;\n    (attrs: ElementAttrs, ...children: Child[]): VirtualElement;\n    (\n      renderer: VirtualElement.IRenderer,\n      ...children: h.Child[]\n    ): VirtualElement;\n    (\n      attrs: ElementAttrs,\n      renderer: VirtualElement.IRenderer,\n      ...children: h.Child[]\n    ): VirtualElement;\n  }\n\n  export const a: IFactory = h.bind(undefined, 'a');\n  export const abbr: IFactory = h.bind(undefined, 'abbr');\n  export const address: IFactory = h.bind(undefined, 'address');\n  export const area: IFactory = h.bind(undefined, 'area');\n  export const article: IFactory = h.bind(undefined, 'article');\n  export const aside: IFactory = h.bind(undefined, 'aside');\n  export const audio: IFactory = h.bind(undefined, 'audio');\n  export const b: IFactory = h.bind(undefined, 'b');\n  export const bdi: IFactory = h.bind(undefined, 'bdi');\n  export const bdo: IFactory = h.bind(undefined, 'bdo');\n  export const blockquote: IFactory = h.bind(undefined, 'blockquote');\n  export const br: IFactory = h.bind(undefined, 'br');\n  export const button: IFactory = h.bind(undefined, 'button');\n  export const canvas: IFactory = h.bind(undefined, 'canvas');\n  export const caption: IFactory = h.bind(undefined, 'caption');\n  export const cite: IFactory = h.bind(undefined, 'cite');\n  export const code: IFactory = h.bind(undefined, 'code');\n  export const col: IFactory = h.bind(undefined, 'col');\n  export const colgroup: IFactory = h.bind(undefined, 'colgroup');\n  export const data: IFactory = h.bind(undefined, 'data');\n  export const datalist: IFactory = h.bind(undefined, 'datalist');\n  export const dd: IFactory = h.bind(undefined, 'dd');\n  export const del: IFactory = h.bind(undefined, 'del');\n  export const dfn: IFactory = h.bind(undefined, 'dfn');\n  export const div: IFactory = h.bind(undefined, 'div');\n  export const dl: IFactory = h.bind(undefined, 'dl');\n  export const dt: IFactory = h.bind(undefined, 'dt');\n  export const em: IFactory = h.bind(undefined, 'em');\n  export const embed: IFactory = h.bind(undefined, 'embed');\n  export const fieldset: IFactory = h.bind(undefined, 'fieldset');\n  export const figcaption: IFactory = h.bind(undefined, 'figcaption');\n  export const figure: IFactory = h.bind(undefined, 'figure');\n  export const footer: IFactory = h.bind(undefined, 'footer');\n  export const form: IFactory = h.bind(undefined, 'form');\n  export const h1: IFactory = h.bind(undefined, 'h1');\n  export const h2: IFactory = h.bind(undefined, 'h2');\n  export const h3: IFactory = h.bind(undefined, 'h3');\n  export const h4: IFactory = h.bind(undefined, 'h4');\n  export const h5: IFactory = h.bind(undefined, 'h5');\n  export const h6: IFactory = h.bind(undefined, 'h6');\n  export const header: IFactory = h.bind(undefined, 'header');\n  export const hr: IFactory = h.bind(undefined, 'hr');\n  export const i: IFactory = h.bind(undefined, 'i');\n  export const iframe: IFactory = h.bind(undefined, 'iframe');\n  export const img: IFactory = h.bind(undefined, 'img');\n  export const input: IFactory = h.bind(undefined, 'input');\n  export const ins: IFactory = h.bind(undefined, 'ins');\n  export const kbd: IFactory = h.bind(undefined, 'kbd');\n  export const label: IFactory = h.bind(undefined, 'label');\n  export const legend: IFactory = h.bind(undefined, 'legend');\n  export const li: IFactory = h.bind(undefined, 'li');\n  export const main: IFactory = h.bind(undefined, 'main');\n  export const map: IFactory = h.bind(undefined, 'map');\n  export const mark: IFactory = h.bind(undefined, 'mark');\n  export const meter: IFactory = h.bind(undefined, 'meter');\n  export const nav: IFactory = h.bind(undefined, 'nav');\n  export const noscript: IFactory = h.bind(undefined, 'noscript');\n  export const object: IFactory = h.bind(undefined, 'object');\n  export const ol: IFactory = h.bind(undefined, 'ol');\n  export const optgroup: IFactory = h.bind(undefined, 'optgroup');\n  export const option: IFactory = h.bind(undefined, 'option');\n  export const output: IFactory = h.bind(undefined, 'output');\n  export const p: IFactory = h.bind(undefined, 'p');\n  export const param: IFactory = h.bind(undefined, 'param');\n  export const pre: IFactory = h.bind(undefined, 'pre');\n  export const progress: IFactory = h.bind(undefined, 'progress');\n  export const q: IFactory = h.bind(undefined, 'q');\n  export const rp: IFactory = h.bind(undefined, 'rp');\n  export const rt: IFactory = h.bind(undefined, 'rt');\n  export const ruby: IFactory = h.bind(undefined, 'ruby');\n  export const s: IFactory = h.bind(undefined, 's');\n  export const samp: IFactory = h.bind(undefined, 'samp');\n  export const section: IFactory = h.bind(undefined, 'section');\n  export const select: IFactory = h.bind(undefined, 'select');\n  export const small: IFactory = h.bind(undefined, 'small');\n  export const source: IFactory = h.bind(undefined, 'source');\n  export const span: IFactory = h.bind(undefined, 'span');\n  export const strong: IFactory = h.bind(undefined, 'strong');\n  export const sub: IFactory = h.bind(undefined, 'sub');\n  export const summary: IFactory = h.bind(undefined, 'summary');\n  export const sup: IFactory = h.bind(undefined, 'sup');\n  export const table: IFactory = h.bind(undefined, 'table');\n  export const tbody: IFactory = h.bind(undefined, 'tbody');\n  export const td: IFactory = h.bind(undefined, 'td');\n  export const textarea: IFactory = h.bind(undefined, 'textarea');\n  export const tfoot: IFactory = h.bind(undefined, 'tfoot');\n  export const th: IFactory = h.bind(undefined, 'th');\n  export const thead: IFactory = h.bind(undefined, 'thead');\n  export const time: IFactory = h.bind(undefined, 'time');\n  export const title: IFactory = h.bind(undefined, 'title');\n  export const tr: IFactory = h.bind(undefined, 'tr');\n  export const track: IFactory = h.bind(undefined, 'track');\n  export const u: IFactory = h.bind(undefined, 'u');\n  export const ul: IFactory = h.bind(undefined, 'ul');\n  export const var_: IFactory = h.bind(undefined, 'var');\n  export const video: IFactory = h.bind(undefined, 'video');\n  export const wbr: IFactory = h.bind(undefined, 'wbr');\n}\n\n/**\n * DEPRECATED - pass the renderer arg to the h function instead\n *\n * Create a new \"pass thru\" virtual element node.\n *\n * @param tag - The tag name for the parent element.\n *\n * @param attrs - The attributes for the parent element, if any.\n *\n * @param renderer - an object with render and unrender functions, if any.\n *\n * @returns A new \"pass thru\" virtual element node for the given parameters.\n *\n */\nexport function hpass(\n  tag: string,\n  renderer?: VirtualElementPass.IRenderer\n): VirtualElementPass;\nexport function hpass(\n  tag: string,\n  attrs: ElementAttrs,\n  renderer?: VirtualElementPass.IRenderer\n): VirtualElementPass;\nexport function hpass(tag: string): VirtualElementPass {\n  let attrs: ElementAttrs = {};\n  let renderer: VirtualElementPass.IRenderer | null = null;\n\n  if (arguments.length === 2) {\n    // eslint-disable-next-line prefer-rest-params\n    const arg = arguments[1];\n\n    if ('render' in arg) {\n      renderer = arg;\n    } else {\n      attrs = arg;\n    }\n  } else if (arguments.length === 3) {\n    // eslint-disable-next-line prefer-rest-params\n    attrs = arguments[1];\n    // eslint-disable-next-line prefer-rest-params\n    renderer = arguments[2];\n  } else if (arguments.length > 3) {\n    throw new Error('hpass() should be called with 1, 2, or 3 arguments');\n  }\n\n  return new VirtualElementPass(tag, attrs, renderer);\n}\n\n/**\n * The namespace for the virtual DOM rendering functions.\n */\nexport namespace VirtualDOM {\n  /**\n   * Create a real DOM element from a virtual element node.\n   *\n   * @param node - The virtual element node to realize.\n   *\n   * @returns A new DOM element for the given virtual element node.\n   *\n   * #### Notes\n   * This creates a brand new *real* DOM element with a structure which\n   * matches the given virtual DOM node.\n   *\n   * If virtual diffing is desired, use the `render` function instead.\n   */\n  export function realize(node: VirtualText): Text;\n  export function realize(node: VirtualElement): HTMLElement;\n  export function realize(node: VirtualNode): HTMLElement | Text {\n    return Private.createDOMNode(node);\n  }\n\n  /**\n   * Render virtual DOM content into a host element.\n   *\n   * @param content - The virtual DOM content to render.\n   *\n   * @param host - The host element for the rendered content.\n   *\n   * #### Notes\n   * This renders the delta from the previous rendering. It assumes that\n   * the content of the host element is not manipulated by external code.\n   *\n   * Providing `null` content will clear the rendering.\n   *\n   * Externally modifying the provided content or the host element will\n   * result in undefined rendering behavior.\n   */\n  export function render(\n    content: VirtualNode | ReadonlyArray<VirtualNode> | null,\n    host: HTMLElement\n  ): void {\n    let oldContent = Private.hostMap.get(host) || [];\n    let newContent = Private.asContentArray(content);\n    Private.hostMap.set(host, newContent);\n    Private.updateContent(host, oldContent, newContent);\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A weak mapping of host element to virtual DOM content.\n   */\n  export const hostMap = new WeakMap<HTMLElement, ReadonlyArray<VirtualNode>>();\n\n  /**\n   * Cast a content value to a content array.\n   */\n  export function asContentArray(\n    value: VirtualNode | ReadonlyArray<VirtualNode> | null\n  ): ReadonlyArray<VirtualNode> {\n    if (!value) {\n      return [];\n    }\n    if (value instanceof Array) {\n      return value as ReadonlyArray<VirtualNode>;\n    }\n    return [value as VirtualNode];\n  }\n\n  /**\n   * Create a new DOM element for a virtual node.\n   */\n  export function createDOMNode(node: VirtualText): Text;\n  export function createDOMNode(node: VirtualElement): HTMLElement;\n  export function createDOMNode(node: VirtualNode): HTMLElement | Text;\n  export function createDOMNode(\n    node: VirtualNode,\n    host: HTMLElement | null\n  ): HTMLElement | Text;\n  export function createDOMNode(\n    node: VirtualNode,\n    host: HTMLElement | null,\n    before: Node | null\n  ): HTMLElement | Text;\n  export function createDOMNode(node: VirtualNode): HTMLElement | Text {\n    // eslint-disable-next-line prefer-rest-params\n    let host = arguments[1] || null;\n    // eslint-disable-next-line prefer-rest-params\n    const before = arguments[2] || null;\n\n    if (host) {\n      host.insertBefore(createDOMNode(node), before);\n    } else {\n      // Create a text node for a virtual text node.\n      if (node.type === 'text') {\n        return document.createTextNode(node.content);\n      }\n\n      // Create the HTML element with the specified tag.\n      host = document.createElement(node.tag);\n\n      // Add the attributes for the new element.\n      addAttrs(host, node.attrs);\n\n      if (node.renderer) {\n        node.renderer.render(host, {\n          attrs: node.attrs,\n          children: node.children\n        });\n        return host;\n      }\n\n      // Recursively populate the element with child content.\n      for (let i = 0, n = node.children.length; i < n; ++i) {\n        createDOMNode(node.children[i], host);\n      }\n    }\n\n    return host;\n  }\n\n  /**\n   * Update a host element with the delta of the virtual content.\n   *\n   * This is the core \"diff\" algorithm. There is no explicit \"patch\"\n   * phase. The host is patched at each step as the diff progresses.\n   */\n  export function updateContent(\n    host: HTMLElement,\n    oldContent: ReadonlyArray<VirtualNode>,\n    newContent: ReadonlyArray<VirtualNode>\n  ): void {\n    // Bail early if the content is identical.\n    if (oldContent === newContent) {\n      return;\n    }\n\n    // Collect the old keyed elems into a mapping.\n    let oldKeyed = collectKeys(host, oldContent);\n\n    // Create a copy of the old content which can be modified in-place.\n    let oldCopy = oldContent.slice();\n\n    // Update the host with the new content. The diff always proceeds\n    // forward and never modifies a previously visited index. The old\n    // copy array is modified in-place to reflect the changes made to\n    // the host children. This causes the stale nodes to be pushed to\n    // the end of the host node and removed at the end of the loop.\n    let currElem = host.firstChild;\n    let newCount = newContent.length;\n    for (let i = 0; i < newCount; ++i) {\n      // If the old content is exhausted, create a new node.\n      if (i >= oldCopy.length) {\n        createDOMNode(newContent[i], host);\n        continue;\n      }\n\n      // Lookup the old and new virtual nodes.\n      let oldVNode = oldCopy[i];\n      let newVNode = newContent[i];\n\n      // If both elements are identical, there is nothing to do.\n      if (oldVNode === newVNode) {\n        currElem = currElem!.nextSibling;\n        continue;\n      }\n\n      // Handle the simplest case of in-place text update first.\n      if (oldVNode.type === 'text' && newVNode.type === 'text') {\n        // Avoid spurious updates for performance.\n        if (currElem!.textContent !== newVNode.content) {\n          currElem!.textContent = newVNode.content;\n        }\n        currElem = currElem!.nextSibling;\n        continue;\n      }\n\n      // If the old or new node is a text node, the other node is now\n      // known to be an element node, so create and insert a new node.\n      if (oldVNode.type === 'text' || newVNode.type === 'text') {\n        ArrayExt.insert(oldCopy, i, newVNode);\n        createDOMNode(newVNode, host, currElem);\n        continue;\n      }\n\n      // If the old XOR new node has a custom renderer,\n      // create and insert a new node.\n      if (!oldVNode.renderer != !newVNode.renderer) {\n        ArrayExt.insert(oldCopy, i, newVNode);\n        createDOMNode(newVNode, host, currElem);\n        continue;\n      }\n\n      // At this point, both nodes are known to be element nodes.\n\n      // If the new elem is keyed, move an old keyed elem to the proper\n      // location before proceeding with the diff. The search can start\n      // at the current index, since the unmatched old keyed elems are\n      // pushed forward in the old copy array.\n      let newKey = newVNode.attrs.key;\n      if (newKey && newKey in oldKeyed) {\n        let pair = oldKeyed[newKey];\n        if (pair.vNode !== oldVNode) {\n          ArrayExt.move(oldCopy, oldCopy.indexOf(pair.vNode, i + 1), i);\n          host.insertBefore(pair.element, currElem);\n          oldVNode = pair.vNode;\n          currElem = pair.element;\n        }\n      }\n\n      // If both elements are identical, there is nothing to do.\n      if (oldVNode === newVNode) {\n        currElem = currElem!.nextSibling;\n        continue;\n      }\n\n      // If the old elem is keyed and does not match the new elem key,\n      // create a new node. This is necessary since the old keyed elem\n      // may be matched at a later point in the diff.\n      let oldKey = oldVNode.attrs.key;\n      if (oldKey && oldKey !== newKey) {\n        ArrayExt.insert(oldCopy, i, newVNode);\n        createDOMNode(newVNode, host, currElem);\n        continue;\n      }\n\n      // If the tags are different, create a new node.\n      if (oldVNode.tag !== newVNode.tag) {\n        ArrayExt.insert(oldCopy, i, newVNode);\n        createDOMNode(newVNode, host, currElem);\n        continue;\n      }\n\n      // At this point, the element can be updated in-place.\n\n      // Update the element attributes.\n      updateAttrs(currElem as HTMLElement, oldVNode.attrs, newVNode.attrs);\n\n      // Update the element content.\n      if (newVNode.renderer) {\n        newVNode.renderer.render(currElem as HTMLElement, {\n          attrs: newVNode.attrs,\n          children: newVNode.children\n        });\n      } else {\n        updateContent(\n          currElem as HTMLElement,\n          oldVNode.children,\n          newVNode.children\n        );\n      }\n\n      // Step to the next sibling element.\n      currElem = currElem!.nextSibling;\n    }\n\n    // Cleanup stale DOM\n    removeContent(host, oldCopy, newCount, true);\n  }\n\n  /**\n   * Handle cleanup of stale vdom and its associated DOM. The host node is\n   * traversed recursively (in depth-first order), and any explicit cleanup\n   * required by a child node is carried out when it is visited (eg if a node\n   * has a custom renderer, the renderer.unrender function will be called).\n   * Once the subtree beneath each child of host has been completely visited,\n   * that child will be removed via a call to host.removeChild.\n   */\n  function removeContent(\n    host: HTMLElement,\n    oldContent: ReadonlyArray<VirtualNode>,\n    newCount: number,\n    _sentinel: boolean\n  ) {\n    // Dispose of the old nodes pushed to the end of the host.\n    for (let i = oldContent.length - 1; i >= newCount; --i) {\n      const oldNode = oldContent[i];\n      const child = (\n        _sentinel ? host.lastChild : host.childNodes[i]\n      ) as HTMLElement;\n\n      // recursively clean up host children\n      if (oldNode.type === 'text') {\n        // pass\n      } else if (oldNode.renderer && oldNode.renderer.unrender) {\n        oldNode.renderer.unrender(child!, {\n          attrs: oldNode.attrs,\n          children: oldNode.children\n        });\n      } else {\n        removeContent(child!, oldNode.children, 0, false);\n      }\n\n      if (_sentinel) {\n        host.removeChild(child!);\n      }\n    }\n  }\n\n  /**\n   * A set of special-cased attribute names.\n   */\n  const specialAttrs = {\n    key: true,\n    className: true,\n    htmlFor: true,\n    dataset: true,\n    style: true\n  };\n\n  /**\n   * Add element attributes to a newly created HTML element.\n   */\n  function addAttrs(element: HTMLElement, attrs: ElementAttrs): void {\n    // Add the inline event listeners and node attributes.\n    for (let name in attrs) {\n      if (name in specialAttrs) {\n        continue;\n      }\n      if (name.substr(0, 2) === 'on') {\n        (element as any)[name] = (attrs as any)[name];\n      } else {\n        element.setAttribute(name, (attrs as any)[name]);\n      }\n    }\n\n    // Add the element `class` attribute.\n    if (attrs.className !== undefined) {\n      element.setAttribute('class', attrs.className);\n    }\n\n    // Add the element `for` attribute.\n    if (attrs.htmlFor !== undefined) {\n      element.setAttribute('for', attrs.htmlFor);\n    }\n\n    // Add the dataset values.\n    if (attrs.dataset) {\n      addDataset(element, attrs.dataset);\n    }\n\n    // Add the inline styles.\n    if (attrs.style) {\n      addStyle(element, attrs.style);\n    }\n  }\n\n  /**\n   * Update the element attributes of an HTML element.\n   */\n  function updateAttrs(\n    element: HTMLElement,\n    oldAttrs: ElementAttrs,\n    newAttrs: ElementAttrs\n  ): void {\n    // Do nothing if the attrs are the same object.\n    if (oldAttrs === newAttrs) {\n      return;\n    }\n\n    // Setup the strongly typed loop variable.\n    let name: keyof ElementAttrs;\n\n    // Remove attributes and listeners which no longer exist.\n    for (name in oldAttrs) {\n      if (name in specialAttrs || name in newAttrs) {\n        continue;\n      }\n      if (name.substr(0, 2) === 'on') {\n        (element as any)[name] = null;\n      } else {\n        element.removeAttribute(name);\n      }\n    }\n\n    // Add and update new and existing attributes and listeners.\n    for (name in newAttrs) {\n      if (name in specialAttrs || oldAttrs[name] === newAttrs[name]) {\n        continue;\n      }\n      if (name.substr(0, 2) === 'on') {\n        (element as any)[name] = (newAttrs as any)[name];\n      } else {\n        element.setAttribute(name, (newAttrs as any)[name]);\n      }\n    }\n\n    // Update the element `class` attribute.\n    if (oldAttrs.className !== newAttrs.className) {\n      if (newAttrs.className !== undefined) {\n        element.setAttribute('class', newAttrs.className);\n      } else {\n        element.removeAttribute('class');\n      }\n    }\n\n    // Add the element `for` attribute.\n    if (oldAttrs.htmlFor !== newAttrs.htmlFor) {\n      if (newAttrs.htmlFor !== undefined) {\n        element.setAttribute('for', newAttrs.htmlFor);\n      } else {\n        element.removeAttribute('for');\n      }\n    }\n\n    // Update the dataset values.\n    if (oldAttrs.dataset !== newAttrs.dataset) {\n      updateDataset(element, oldAttrs.dataset || {}, newAttrs.dataset || {});\n    }\n\n    // Update the inline styles.\n    if (oldAttrs.style !== newAttrs.style) {\n      updateStyle(element, oldAttrs.style || {}, newAttrs.style || {});\n    }\n  }\n\n  /**\n   * Add dataset values to a newly created HTML element.\n   */\n  function addDataset(element: HTMLElement, dataset: ElementDataset): void {\n    for (let name in dataset) {\n      element.setAttribute(`data-${name}`, dataset[name]);\n    }\n  }\n\n  /**\n   * Update the dataset values of an HTML element.\n   */\n  function updateDataset(\n    element: HTMLElement,\n    oldDataset: ElementDataset,\n    newDataset: ElementDataset\n  ): void {\n    for (let name in oldDataset) {\n      if (!(name in newDataset)) {\n        element.removeAttribute(`data-${name}`);\n      }\n    }\n    for (let name in newDataset) {\n      if (oldDataset[name] !== newDataset[name]) {\n        element.setAttribute(`data-${name}`, newDataset[name]);\n      }\n    }\n  }\n\n  /**\n   * Add inline style values to a newly created HTML element.\n   */\n  function addStyle(element: HTMLElement, style: ElementInlineStyle): void {\n    let elemStyle = element.style;\n    let name: keyof ElementInlineStyle;\n    for (name in style) {\n      (elemStyle as any)[name] = style[name];\n    }\n  }\n\n  /**\n   * Update the inline style values of an HTML element.\n   */\n  function updateStyle(\n    element: HTMLElement,\n    oldStyle: ElementInlineStyle,\n    newStyle: ElementInlineStyle\n  ): void {\n    let elemStyle = element.style;\n    let name: keyof ElementInlineStyle;\n    for (name in oldStyle) {\n      if (!(name in newStyle)) {\n        (elemStyle as any)[name] = '';\n      }\n    }\n    for (name in newStyle) {\n      if (oldStyle[name] !== newStyle[name]) {\n        (elemStyle as any)[name] = newStyle[name];\n      }\n    }\n  }\n\n  /**\n   * A mapping of string key to pair of element and rendered node.\n   */\n  type KeyMap = {\n    [key: string]: { vNode: VirtualElement; element: HTMLElement };\n  };\n\n  /**\n   * Collect a mapping of keyed elements for the host content.\n   */\n  function collectKeys(\n    host: HTMLElement,\n    content: ReadonlyArray<VirtualNode>\n  ): KeyMap {\n    let node = host.firstChild;\n    let keyMap: KeyMap = Object.create(null);\n    for (let vNode of content) {\n      if (vNode.type === 'element' && vNode.attrs.key) {\n        keyMap[vNode.attrs.key] = { vNode, element: node as HTMLElement };\n      }\n      node = node!.nextSibling;\n    }\n    return keyMap;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for array-specific algorithms.\n */\nexport namespace ArrayExt {\n  /**\n   * Find the index of the first occurrence of a value in an array.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param value - The value to locate in the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first occurrence of the value, or `-1`\n   *   if the value is not found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four', 'one'];\n   * ArrayExt.firstIndexOf(data, 'red');        // -1\n   * ArrayExt.firstIndexOf(data, 'one');        // 0\n   * ArrayExt.firstIndexOf(data, 'one', 1);     // 4\n   * ArrayExt.firstIndexOf(data, 'two', 2);     // -1\n   * ArrayExt.firstIndexOf(data, 'two', 2, 1);  // 1\n   * ```\n   */\n  export function firstIndexOf<T>(\n    array: ArrayLike<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start + i) % n;\n      if (array[j] === value) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the last occurrence of a value in an array.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param value - The value to locate in the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the last occurrence of the value, or `-1`\n   *   if the value is not found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four', 'one'];\n   * ArrayExt.lastIndexOf(data, 'red');        // -1\n   * ArrayExt.lastIndexOf(data, 'one');        // 4\n   * ArrayExt.lastIndexOf(data, 'one', 1);     // 0\n   * ArrayExt.lastIndexOf(data, 'two', 0);     // -1\n   * ArrayExt.lastIndexOf(data, 'two', 0, 1);  // 1\n   * ```\n   */\n  export function lastIndexOf<T>(\n    array: ArrayLike<T>,\n    value: T,\n    start = -1,\n    stop = 0\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (start < stop) {\n      span = start + 1 + (n - stop);\n    } else {\n      span = start - stop + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start - i + n) % n;\n      if (array[j] === value) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the first value which matches a predicate.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first matching value, or `-1` if no\n   *   matching value is found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findFirstIndex(data, isEven);       // 1\n   * ArrayExt.findFirstIndex(data, isEven, 4);    // 5\n   * ArrayExt.findFirstIndex(data, isEven, 6);    // -1\n   * ArrayExt.findFirstIndex(data, isEven, 6, 5); // 1\n   * ```\n   */\n  export function findFirstIndex<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start + i) % n;\n      if (fn(array[j], j)) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the last value which matches a predicate.\n   *\n   * @param object - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the last matching value, or `-1` if no\n   *   matching value is found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findLastIndex(data, isEven);        // 5\n   * ArrayExt.findLastIndex(data, isEven, 4);     // 3\n   * ArrayExt.findLastIndex(data, isEven, 0);     // -1\n   * ArrayExt.findLastIndex(data, isEven, 0, 1);  // 5\n   * ```\n   */\n  export function findLastIndex<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let d: number;\n    if (start < stop) {\n      d = start + 1 + (n - stop);\n    } else {\n      d = start - stop + 1;\n    }\n    for (let i = 0; i < d; ++i) {\n      let j = (start - i + n) % n;\n      if (fn(array[j], j)) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the first value which matches a predicate.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The first matching value, or `undefined` if no matching\n   *   value is found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findFirstValue(data, isEven);       // 2\n   * ArrayExt.findFirstValue(data, isEven, 2);    // 4\n   * ArrayExt.findFirstValue(data, isEven, 6);    // undefined\n   * ArrayExt.findFirstValue(data, isEven, 6, 5); // 2\n   * ```\n   */\n  export function findFirstValue<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): T | undefined {\n    let index = findFirstIndex(array, fn, start, stop);\n    return index !== -1 ? array[index] : undefined;\n  }\n\n  /**\n   * Find the last value which matches a predicate.\n   *\n   * @param object - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The last matching value, or `undefined` if no matching\n   *   value is found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findLastValue(data, isEven);        // 2\n   * ArrayExt.findLastValue(data, isEven, 4);     // 4\n   * ArrayExt.findLastValue(data, isEven, 0);     // undefined\n   * ArrayExt.findLastValue(data, isEven, 0, 1);  // 2\n   * ```\n   */\n  export function findLastValue<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): T | undefined {\n    let index = findLastIndex(array, fn, start, stop);\n    return index !== -1 ? array[index] : undefined;\n  }\n\n  /**\n   * Find the index of the first element which compares `>=` to a value.\n   *\n   * @param array - The sorted array-like object to search.\n   *\n   * @param value - The value to locate in the array.\n   *\n   * @param fn - The 3-way comparison function to apply to the values.\n   *   It should return `< 0` if an element is less than a value, `0` if\n   *   an element is equal to a value, or `> 0` if an element is greater\n   *   than a value.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first element which compares `>=` to the\n   *   value, or `length` if there is no such element. If the computed\n   *   index for `stop` is less than `start`, then the computed index\n   *   for `start` is returned.\n   *\n   * #### Notes\n   * The array must already be sorted in ascending order according to\n   * the comparison function.\n   *\n   * #### Complexity\n   * Logarithmic.\n   *\n   * #### Undefined Behavior\n   * Searching a range which is not sorted in ascending order.\n   *\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function numberCmp(a: number, b: number): number {\n   *   return a - b;\n   * }\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.lowerBound(data, 0, numberCmp);   // 0\n   * ArrayExt.lowerBound(data, 6, numberCmp);   // 3\n   * ArrayExt.lowerBound(data, 7, numberCmp);   // 3\n   * ArrayExt.lowerBound(data, -1, numberCmp);  // 0\n   * ArrayExt.lowerBound(data, 10, numberCmp);  // 6\n   * ```\n   */\n  export function lowerBound<T, U>(\n    array: ArrayLike<T>,\n    value: U,\n    fn: (element: T, value: U) => number,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let begin = start;\n    let span = stop - start + 1;\n    while (span > 0) {\n      let half = span >> 1;\n      let middle = begin + half;\n      if (fn(array[middle], value) < 0) {\n        begin = middle + 1;\n        span -= half + 1;\n      } else {\n        span = half;\n      }\n    }\n    return begin;\n  }\n\n  /**\n   * Find the index of the first element which compares `>` than a value.\n   *\n   * @param array - The sorted array-like object to search.\n   *\n   * @param value - The value to locate in the array.\n   *\n   * @param fn - The 3-way comparison function to apply to the values.\n   *   It should return `< 0` if an element is less than a value, `0` if\n   *   an element is equal to a value, or `> 0` if an element is greater\n   *   than a value.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first element which compares `>` than the\n   *   value, or `length` if there is no such element. If the computed\n   *   index for `stop` is less than `start`, then the computed index\n   *   for `start` is returned.\n   *\n   * #### Notes\n   * The array must already be sorted in ascending order according to\n   * the comparison function.\n   *\n   * #### Complexity\n   * Logarithmic.\n   *\n   * #### Undefined Behavior\n   * Searching a range which is not sorted in ascending order.\n   *\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function numberCmp(a: number, b: number): number {\n   *   return a - b;\n   * }\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.upperBound(data, 0, numberCmp);   // 1\n   * ArrayExt.upperBound(data, 6, numberCmp);   // 3\n   * ArrayExt.upperBound(data, 7, numberCmp);   // 5\n   * ArrayExt.upperBound(data, -1, numberCmp);  // 0\n   * ArrayExt.upperBound(data, 10, numberCmp);  // 6\n   * ```\n   */\n  export function upperBound<T, U>(\n    array: ArrayLike<T>,\n    value: U,\n    fn: (element: T, value: U) => number,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let begin = start;\n    let span = stop - start + 1;\n    while (span > 0) {\n      let half = span >> 1;\n      let middle = begin + half;\n      if (fn(array[middle], value) > 0) {\n        span = half;\n      } else {\n        begin = middle + 1;\n        span -= half + 1;\n      }\n    }\n    return begin;\n  }\n\n  /**\n   * Test whether two arrays are shallowly equal.\n   *\n   * @param a - The first array-like object to compare.\n   *\n   * @param b - The second array-like object to compare.\n   *\n   * @param fn - The comparison function to apply to the elements. It\n   *   should return `true` if the elements are \"equal\". The default\n   *   compares elements using strict `===` equality.\n   *\n   * @returns Whether the two arrays are shallowly equal.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * Modifying the length of the arrays while comparing.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let d1 = [0, 3, 4, 7, 7, 9];\n   * let d2 = [0, 3, 4, 7, 7, 9];\n   * let d3 = [42];\n   * ArrayExt.shallowEqual(d1, d2);  // true\n   * ArrayExt.shallowEqual(d2, d3);  // false\n   * ```\n   */\n  export function shallowEqual<T>(\n    a: ArrayLike<T>,\n    b: ArrayLike<T>,\n    fn?: (a: T, b: T) => boolean\n  ): boolean {\n    // Check for object identity first.\n    if (a === b) {\n      return true;\n    }\n\n    // Bail early if the lengths are different.\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    // Compare each element for equality.\n    for (let i = 0, n = a.length; i < n; ++i) {\n      if (fn ? !fn(a[i], b[i]) : a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    // The array are shallowly equal.\n    return true;\n  }\n\n  /**\n   * Create a slice of an array subject to an optional step.\n   *\n   * @param array - The array-like object of interest.\n   *\n   * @param options - The options for configuring the slice.\n   *\n   * @returns A new array with the specified values.\n   *\n   * @throws An exception if the slice `step` is `0`.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start`, `stop`, or `step` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.slice(data);                         // [0, 3, 4, 7, 7, 9]\n   * ArrayExt.slice(data, { start: 2 });           // [4, 7, 7, 9]\n   * ArrayExt.slice(data, { start: 0, stop: 4 });  // [0, 3, 4, 7]\n   * ArrayExt.slice(data, { step: 2 });            // [0, 4, 7]\n   * ArrayExt.slice(data, { step: -1 });           // [9, 7, 7, 4, 3, 0]\n   * ```\n   */\n  export function slice<T>(\n    array: ArrayLike<T>,\n    options: slice.IOptions = {}\n  ): T[] {\n    // Extract the options.\n    let { start, stop, step } = options;\n\n    // Set up the `step` value.\n    if (step === undefined) {\n      step = 1;\n    }\n\n    // Validate the step size.\n    if (step === 0) {\n      throw new Error('Slice `step` cannot be zero.');\n    }\n\n    // Look up the length of the array.\n    let n = array.length;\n\n    // Set up the `start` value.\n    if (start === undefined) {\n      start = step < 0 ? n - 1 : 0;\n    } else if (start < 0) {\n      start = Math.max(start + n, step < 0 ? -1 : 0);\n    } else if (start >= n) {\n      start = step < 0 ? n - 1 : n;\n    }\n\n    // Set up the `stop` value.\n    if (stop === undefined) {\n      stop = step < 0 ? -1 : n;\n    } else if (stop < 0) {\n      stop = Math.max(stop + n, step < 0 ? -1 : 0);\n    } else if (stop >= n) {\n      stop = step < 0 ? n - 1 : n;\n    }\n\n    // Compute the slice length.\n    let length;\n    if ((step < 0 && stop >= start) || (step > 0 && start >= stop)) {\n      length = 0;\n    } else if (step < 0) {\n      length = Math.floor((stop - start + 1) / step + 1);\n    } else {\n      length = Math.floor((stop - start - 1) / step + 1);\n    }\n\n    // Compute the sliced result.\n    let result: T[] = [];\n    for (let i = 0; i < length; ++i) {\n      result[i] = array[start + i * step];\n    }\n\n    // Return the result.\n    return result;\n  }\n\n  /**\n   * The namespace for the `slice` function statics.\n   */\n  export namespace slice {\n    /**\n     * The options for the `slice` function.\n     */\n    export interface IOptions {\n      /**\n       * The starting index of the slice, inclusive.\n       *\n       * Negative values are taken as an offset from the end\n       * of the array.\n       *\n       * The default is `0` if `step > 0` else `n - 1`.\n       */\n      start?: number;\n\n      /**\n       * The stopping index of the slice, exclusive.\n       *\n       * Negative values are taken as an offset from the end\n       * of the array.\n       *\n       * The default is `n` if `step > 0` else `-n - 1`.\n       */\n      stop?: number;\n\n      /**\n       * The step value for the slice.\n       *\n       * This must not be `0`.\n       *\n       * The default is `1`.\n       */\n      step?: number;\n    }\n  }\n\n  /**\n   * An array-like object which supports item assignment.\n   */\n  export type MutableArrayLike<T> = {\n    readonly length: number;\n    [index: number]: T;\n  };\n\n  /**\n   * Move an element in an array from one index to another.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param fromIndex - The index of the element to move. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * @param toIndex - The target index of the element. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `fromIndex` or `toIndex` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.move(data, 1, 2);  // [0, 2, 1, 3, 4]\n   * ArrayExt.move(data, 4, 2);  // [0, 2, 4, 1, 3]\n   * ```\n   */\n  export function move<T>(\n    array: MutableArrayLike<T>,\n    fromIndex: number,\n    toIndex: number\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (fromIndex < 0) {\n      fromIndex = Math.max(0, fromIndex + n);\n    } else {\n      fromIndex = Math.min(fromIndex, n - 1);\n    }\n    if (toIndex < 0) {\n      toIndex = Math.max(0, toIndex + n);\n    } else {\n      toIndex = Math.min(toIndex, n - 1);\n    }\n    if (fromIndex === toIndex) {\n      return;\n    }\n    let value = array[fromIndex];\n    let d = fromIndex < toIndex ? 1 : -1;\n    for (let i = fromIndex; i !== toIndex; i += d) {\n      array[i] = array[i + d];\n    }\n    array[toIndex] = value;\n  }\n\n  /**\n   * Reverse an array in-place.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param start - The index of the first element in the range to be\n   *   reversed, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   reversed, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or  `stop` index which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.reverse(data, 1, 3);  // [0, 3, 2, 1, 4]\n   * ArrayExt.reverse(data, 3);     // [0, 3, 2, 4, 1]\n   * ArrayExt.reverse(data);        // [1, 4, 2, 3, 0]\n   * ```\n   */\n  export function reverse<T>(\n    array: MutableArrayLike<T>,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    while (start < stop) {\n      let a = array[start];\n      let b = array[stop];\n      array[start++] = b;\n      array[stop--] = a;\n    }\n  }\n\n  /**\n   * Rotate the elements of an array in-place.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param delta - The amount of rotation to apply to the elements. A\n   *   positive value will rotate the elements to the left. A negative\n   *   value will rotate the elements to the right.\n   *\n   * @param start - The index of the first element in the range to be\n   *   rotated, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   rotated, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `delta`, `start`, or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.rotate(data, 2);        // [2, 3, 4, 0, 1]\n   * ArrayExt.rotate(data, -2);       // [0, 1, 2, 3, 4]\n   * ArrayExt.rotate(data, 10);       // [0, 1, 2, 3, 4]\n   * ArrayExt.rotate(data, 9);        // [4, 0, 1, 2, 3]\n   * ArrayExt.rotate(data, 2, 1, 3);  // [4, 2, 0, 1, 3]\n   * ```\n   */\n  export function rotate<T>(\n    array: MutableArrayLike<T>,\n    delta: number,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    if (start >= stop) {\n      return;\n    }\n    let length = stop - start + 1;\n    if (delta > 0) {\n      delta = delta % length;\n    } else if (delta < 0) {\n      delta = ((delta % length) + length) % length;\n    }\n    if (delta === 0) {\n      return;\n    }\n    let pivot = start + delta;\n    reverse(array, start, pivot - 1);\n    reverse(array, pivot, stop);\n    reverse(array, start, stop);\n  }\n\n  /**\n   * Fill an array with a static value.\n   *\n   * @param array - The mutable array-like object to fill.\n   *\n   * @param value - The static value to use to fill the array.\n   *\n   * @param start - The index of the first element in the range to be\n   *   filled, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   filled, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Notes\n   * If `stop < start` the fill will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four'];\n   * ArrayExt.fill(data, 'r');        // ['r', 'r', 'r', 'r']\n   * ArrayExt.fill(data, 'g', 1);     // ['r', 'g', 'g', 'g']\n   * ArrayExt.fill(data, 'b', 2, 3);  // ['r', 'g', 'b', 'b']\n   * ArrayExt.fill(data, 'z', 3, 1);  // ['z', 'z', 'b', 'z']\n   * ```\n   */\n  export function fill<T>(\n    array: MutableArrayLike<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n === 0) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      array[(start + i) % n] = value;\n    }\n  }\n\n  /**\n   * Insert a value into an array at a specific index.\n   *\n   * @param array - The array of interest.\n   *\n   * @param index - The index at which to insert the value. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * @param value - The value to set at the specified index.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2];\n   * ArrayExt.insert(data, 0, -1);  // [-1, 0, 1, 2]\n   * ArrayExt.insert(data, 2, 12);  // [-1, 0, 12, 1, 2]\n   * ArrayExt.insert(data, -1, 7);  // [-1, 0, 12, 1, 7, 2]\n   * ArrayExt.insert(data, 6, 19);  // [-1, 0, 12, 1, 7, 2, 19]\n   * ```\n   */\n  export function insert<T>(array: Array<T>, index: number, value: T): void {\n    let n = array.length;\n    if (index < 0) {\n      index = Math.max(0, index + n);\n    } else {\n      index = Math.min(index, n);\n    }\n    for (let i = n; i > index; --i) {\n      array[i] = array[i - 1];\n    }\n    array[index] = value;\n  }\n\n  /**\n   * Remove and return a value at a specific index in an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param index - The index of the value to remove. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The value at the specified index, or `undefined` if the\n   *   index is out of range.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeAt(data, 2);   // 23\n   * ArrayExt.removeAt(data, -2);  // 12\n   * ArrayExt.removeAt(data, 10);  // undefined;\n   * ```\n   */\n  export function removeAt<T>(array: Array<T>, index: number): T | undefined {\n    let n = array.length;\n    if (index < 0) {\n      index += n;\n    }\n    if (index < 0 || index >= n) {\n      return undefined;\n    }\n    let value = array[index];\n    for (let i = index + 1; i < n; ++i) {\n      array[i - 1] = array[i];\n    }\n    array.length = n - 1;\n    return value;\n  }\n\n  /**\n   * Remove the first occurrence of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the removed value, or `-1` if the value\n   *   is not contained in the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeFirstOf(data, 12);        // 1\n   * ArrayExt.removeFirstOf(data, 17);        // -1\n   * ArrayExt.removeFirstOf(data, 39, 3);     // -1\n   * ArrayExt.removeFirstOf(data, 39, 3, 2);  // 2\n   * ```\n   */\n  export function removeFirstOf<T>(\n    array: Array<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let index = firstIndexOf(array, value, start, stop);\n    if (index !== -1) {\n      removeAt(array, index);\n    }\n    return index;\n  }\n\n  /**\n   * Remove the last occurrence of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the removed value, or `-1` if the value\n   *   is not contained in the array.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeLastOf(data, 12);        // 5\n   * ArrayExt.removeLastOf(data, 17);        // -1\n   * ArrayExt.removeLastOf(data, 39, 2);     // -1\n   * ArrayExt.removeLastOf(data, 39, 2, 3);  // 3\n   * ```\n   */\n  export function removeLastOf<T>(\n    array: Array<T>,\n    value: T,\n    start = -1,\n    stop = 0\n  ): number {\n    let index = lastIndexOf(array, value, start, stop);\n    if (index !== -1) {\n      removeAt(array, index);\n    }\n    return index;\n  }\n\n  /**\n   * Remove all occurrences of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The number of elements removed from the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will conceptually wrap at the end of\n   * the array, however the array will be traversed front-to-back.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [14, 12, 23, 39, 14, 12, 19, 14];\n   * ArrayExt.removeAllOf(data, 12);        // 2\n   * ArrayExt.removeAllOf(data, 17);        // 0\n   * ArrayExt.removeAllOf(data, 14, 1, 4);  // 1\n   * ```\n   */\n  export function removeAllOf<T>(\n    array: Array<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let count = 0;\n    for (let i = 0; i < n; ++i) {\n      if (start <= stop && i >= start && i <= stop && array[i] === value) {\n        count++;\n      } else if (\n        stop < start &&\n        (i <= stop || i >= start) &&\n        array[i] === value\n      ) {\n        count++;\n      } else if (count > 0) {\n        array[i - count] = array[i];\n      }\n    }\n    if (count > 0) {\n      array.length = n - count;\n    }\n    return count;\n  }\n\n  /**\n   * Remove the first occurrence of a value which matches a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The removed `{ index, value }`, which will be `-1` and\n   *   `undefined` if the value is not contained in the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeFirstWhere(data, isEven);     // { index: 0, value: 0 }\n   * ArrayExt.removeFirstWhere(data, isEven, 2);  // { index: 3, value: 14 }\n   * ArrayExt.removeFirstWhere(data, isEven, 4);  // { index: -1, value: undefined }\n   * ```\n   */\n  export function removeFirstWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): { index: number; value: T | undefined } {\n    let value: T | undefined;\n    let index = findFirstIndex(array, fn, start, stop);\n    if (index !== -1) {\n      value = removeAt(array, index);\n    }\n    return { index, value };\n  }\n\n  /**\n   * Remove the last occurrence of a value which matches a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The removed `{ index, value }`, which will be `-1` and\n   *   `undefined` if the value is not contained in the array.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeLastWhere(data, isEven);        // { index: 5, value: 12 }\n   * ArrayExt.removeLastWhere(data, isEven, 2);     // { index: 1, value: 12 }\n   * ArrayExt.removeLastWhere(data, isEven, 2, 1);  // { index: -1, value: undefined }\n   * ```\n   */\n  export function removeLastWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): { index: number; value: T | undefined } {\n    let value: T | undefined;\n    let index = findLastIndex(array, fn, start, stop);\n    if (index !== -1) {\n      value = removeAt(array, index);\n    }\n    return { index, value };\n  }\n\n  /**\n   * Remove all occurrences of values which match a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The number of elements removed from the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will conceptually wrap at the end of\n   * the array, however the array will be traversed front-to-back.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * function isNegative(value: number): boolean {\n   *   return value < 0;\n   * }\n   *\n   * let data = [0, 12, -13, -9, 23, 39, 14, -15, 12, 75];\n   * ArrayExt.removeAllWhere(data, isEven);            // 4\n   * ArrayExt.removeAllWhere(data, isNegative, 0, 3);  // 2\n   * ```\n   */\n  export function removeAllWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let count = 0;\n    for (let i = 0; i < n; ++i) {\n      if (start <= stop && i >= start && i <= stop && fn(array[i], i)) {\n        count++;\n      } else if (stop < start && (i <= stop || i >= start) && fn(array[i], i)) {\n        count++;\n      } else if (count > 0) {\n        array[i - count] = array[i];\n      }\n    }\n    if (count > 0) {\n      array.length = n - count;\n    }\n    return count;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Chain together several iterables.\n *\n * @deprecated\n *\n * @param objects - The iterable objects of interest.\n *\n * @returns An iterator which yields the values of the iterables\n *   in the order in which they are supplied.\n *\n * #### Example\n * ```typescript\n * import { chain } from '@lumino/algorithm';\n *\n * let data1 = [1, 2, 3];\n * let data2 = [4, 5, 6];\n *\n * let stream = chain(data1, data2);\n *\n * Array.from(stream);  // [1, 2, 3, 4, 5, 6]\n * ```\n */\nexport function* chain<T>(...objects: Iterable<T>[]): IterableIterator<T> {\n  for (const object of objects) {\n    yield* object;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an empty iterator.\n *\n * @returns A new iterator which yields nothing.\n *\n * #### Example\n * ```typescript\n * import { empty } from '@lumino/algorithm';\n *\n * let stream = empty<number>();\n *\n * Array.from(stream);  // []\n * ```\n */\n// eslint-disable-next-line require-yield\nexport function* empty<T>(): IterableIterator<T> {\n  return;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Enumerate an iterable object.\n *\n * @param object - The iterable object of interest.\n *\n * @param start - The starting enum value. The default is `0`.\n *\n * @returns An iterator which yields the enumerated values.\n *\n * #### Example\n * ```typescript\n * import { enumerate } from '@lumino/algorithm';\n *\n * let data = ['foo', 'bar', 'baz'];\n *\n * let stream = enumerate(data, 1);\n *\n * Array.from(stream);  // [[1, 'foo'], [2, 'bar'], [3, 'baz']]\n * ```\n */\nexport function* enumerate<T>(\n  object: Iterable<T>,\n  start = 0\n): IterableIterator<[number, T]> {\n  for (const value of object) {\n    yield [start++, value];\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Filter an iterable for values which pass a test.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns An iterator which yields the values which pass the test.\n *\n * #### Example\n * ```typescript\n * import { filter } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = filter(data, value => value % 2 === 0);\n *\n * Array.from(stream);  // [2, 4, 6]\n * ```\n */\nexport function* filter<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): IterableIterator<T> {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      yield value;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Find the first value in an iterable which matches a predicate.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The predicate function to apply to the values.\n *\n * @returns The first matching value, or `undefined` if no matching\n *   value is found.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { find } from '@lumino/algorithm';\n *\n * interface IAnimal { species: string, name: string };\n *\n * function isCat(value: IAnimal): boolean {\n *   return value.species === 'cat';\n * }\n *\n * let data: IAnimal[] = [\n *   { species: 'dog', name: 'spot' },\n *   { species: 'cat', name: 'fluffy' },\n *   { species: 'alligator', name: 'pocho' }\n * ];\n *\n * find(data, isCat).name;  // 'fluffy'\n * ```\n */\nexport function find<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): T | undefined {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return value;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Find the index of the first value which matches a predicate.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The predicate function to apply to the values.\n *\n * @returns The index of the first matching value, or `-1` if no\n *   matching value is found.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { findIndex } from '@lumino/algorithm';\n *\n * interface IAnimal { species: string, name: string };\n *\n * function isCat(value: IAnimal): boolean {\n *   return value.species === 'cat';\n * }\n *\n * let data: IAnimal[] = [\n *   { species: 'dog', name: 'spot' },\n *   { species: 'cat', name: 'fluffy' },\n *   { species: 'alligator', name: 'pocho' }\n * ];\n *\n * findIndex(data, isCat);  // 1\n * ```\n */\nexport function findIndex<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): number {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return index - 1;\n    }\n  }\n  return -1;\n}\n\n/**\n * Find the minimum value in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns The minimum value in the iterable. If multiple values are\n *   equivalent to the minimum, the left-most value is returned. If\n *   the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { min } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * min([7, 4, 0, 3, 9, 4], numberCmp);  // 0\n * ```\n */\nexport function min<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): T | undefined {\n  let result: T | undefined = undefined;\n  for (const value of object) {\n    if (result === undefined) {\n      result = value;\n      continue;\n    }\n    if (fn(value, result) < 0) {\n      result = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Find the maximum value in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns The maximum value in the iterable. If multiple values are\n *   equivalent to the maximum, the left-most value is returned. If\n *   the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { max } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * max([7, 4, 0, 3, 9, 4], numberCmp);  // 9\n * ```\n */\nexport function max<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): T | undefined {\n  let result: T | undefined = undefined;\n  for (const value of object) {\n    if (result === undefined) {\n      result = value;\n      continue;\n    }\n    if (fn(value, result) > 0) {\n      result = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Find the minimum and maximum values in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns A 2-tuple of the `[min, max]` values in the iterable. If\n *   multiple values are equivalent, the left-most values are returned.\n *   If the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { minmax } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * minmax([7, 4, 0, 3, 9, 4], numberCmp);  // [0, 9]\n * ```\n */\nexport function minmax<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): [T, T] | undefined {\n  let empty = true;\n  let vmin: T;\n  let vmax: T;\n  for (const value of object) {\n    if (empty) {\n      vmin = value;\n      vmax = value;\n      empty = false;\n    } else if (fn(value, vmin!) < 0) {\n      vmin = value;\n    } else if (fn(value, vmax!) > 0) {\n      vmax = value;\n    }\n  }\n  return empty ? undefined : [vmin!, vmax!];\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an array from an iterable of values.\n *\n * @deprecated\n *\n * @param object - The iterable object of interest.\n *\n * @returns A new array of values from the given object.\n *\n * #### Example\n * ```typescript\n * import { toArray } from '@lumino/algorithm';\n *\n * let stream = [1, 2, 3, 4, 5, 6][Symbol.iterator]();\n *\n * toArray(stream);  // [1, 2, 3, 4, 5, 6];\n * ```\n */\nexport function toArray<T>(object: Iterable<T>): T[] {\n  return Array.from(object);\n}\n\n/**\n * Create an object from an iterable of key/value pairs.\n *\n * @param object - The iterable object of interest.\n *\n * @returns A new object mapping keys to values.\n *\n * #### Example\n * ```typescript\n * import { toObject } from '@lumino/algorithm';\n *\n * let data: [string, number][] = [['one', 1], ['two', 2], ['three', 3]];\n *\n * toObject(data);  // { one: 1, two: 2, three: 3 }\n * ```\n */\nexport function toObject<T>(object: Iterable<[string, T]>): {\n  [key: string]: T;\n} {\n  const result: { [key: string]: T } = {};\n  for (const [key, value] of object) {\n    result[key] = value;\n  }\n  return result;\n}\n\n/**\n * Invoke a function for each value in an iterable.\n *\n * @deprecated\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The callback function to invoke for each value.\n *\n * #### Notes\n * Iteration can be terminated early by returning `false` from the\n * callback function.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { each } from '@lumino/algorithm';\n *\n * let data = [5, 7, 0, -2, 9];\n *\n * each(data, value => { console.log(value); });\n * ```\n */\nexport function each<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean | void\n): void {\n  let index = 0;\n  for (const value of object) {\n    if (false === fn(value, index++)) {\n      return;\n    }\n  }\n}\n\n/**\n * Test whether all values in an iterable satisfy a predicate.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns `true` if all values pass the test, `false` otherwise.\n *\n * #### Notes\n * Iteration terminates on the first `false` predicate result.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { every } from '@lumino/algorithm';\n *\n * let data = [5, 7, 1];\n *\n * every(data, value => value % 2 === 0);  // false\n * every(data, value => value % 2 === 1);  // true\n * ```\n */\nexport function every<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): boolean {\n  let index = 0;\n  for (const value of object) {\n    if (false === fn(value, index++)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Test whether any value in an iterable satisfies a predicate.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns `true` if any value passes the test, `false` otherwise.\n *\n * #### Notes\n * Iteration terminates on the first `true` predicate result.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { some } from '@lumino/algorithm';\n *\n * let data = [5, 7, 1];\n *\n * some(data, value => value === 7);  // true\n * some(data, value => value === 3);  // false\n * ```\n */\nexport function some<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): boolean {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return true;\n    }\n  }\n  return false;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Transform the values of an iterable with a mapping function.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The mapping function to invoke for each value.\n *\n * @returns An iterator which yields the transformed values.\n *\n * #### Example\n * ```typescript\n * import { map } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3];\n *\n * let stream = map(data, value => value * 2);\n *\n * Array.from(stream);  // [2, 4, 6]\n * ```\n */\nexport function* map<T, U>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => U\n): IterableIterator<U> {\n  let index = 0;\n  for (const value of object) {\n    yield fn(value, index++);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Create an iterator of evenly spaced values.\n *\n * @param start - The starting value for the range, inclusive.\n *\n * @param stop - The stopping value for the range, exclusive.\n *\n * @param step - The distance between each value.\n *\n * @returns An iterator which produces evenly spaced values.\n *\n * #### Notes\n * In the single argument form of `range(stop)`, `start` defaults to\n * `0` and `step` defaults to `1`.\n *\n * In the two argument form of `range(start, stop)`, `step` defaults\n * to `1`.\n *\n * #### Example\n * ```typescript\n * import { range } from '@lumino/algorithm';\n *\n * let stream = range(2, 4);\n *\n * Array.from(stream);  // [2, 3]\n * ```\n */\nexport function* range(\n  start: number,\n  stop?: number,\n  step?: number\n): IterableIterator<number> {\n  if (stop === undefined) {\n    stop = start;\n    start = 0;\n    step = 1;\n  } else if (step === undefined) {\n    step = 1;\n  }\n  const length = Private.rangeLength(start, stop, step);\n  for (let index = 0; index < length; index++) {\n    yield start + step * index;\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Compute the effective length of a range.\n   *\n   * @param start - The starting value for the range, inclusive.\n   *\n   * @param stop - The stopping value for the range, exclusive.\n   *\n   * @param step - The distance between each value.\n   *\n   * @returns The number of steps need to traverse the range.\n   */\n  export function rangeLength(\n    start: number,\n    stop: number,\n    step: number\n  ): number {\n    if (step === 0) {\n      return Infinity;\n    }\n    if (start > stop && step > 0) {\n      return 0;\n    }\n    if (start < stop && step < 0) {\n      return 0;\n    }\n    return Math.ceil((stop - start) / step);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Summarize all values in an iterable using a reducer function.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The reducer function to invoke for each value.\n *\n * @param initial - The initial value to start accumulation.\n *\n * @returns The final accumulated value.\n *\n * #### Notes\n * The `reduce` function follows the conventions of `Array#reduce`.\n *\n * If the iterator is empty, an initial value is required. That value\n * will be used as the return value. If no initial value is provided,\n * an error will be thrown.\n *\n * If the iterator contains a single item and no initial value is\n * provided, the single item is used as the return value.\n *\n * Otherwise, the reducer is invoked for each element in the iterable.\n * If an initial value is not provided, the first element will be used\n * as the initial accumulated value.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { reduce } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5];\n *\n * let sum = reduce(data, (a, value) => a + value);  // 15\n * ```\n */\nexport function reduce<T>(\n  object: Iterable<T>,\n  fn: (accumulator: T, value: T, index: number) => T\n): T;\nexport function reduce<T, U>(\n  object: Iterable<T>,\n  fn: (accumulator: U, value: T, index: number) => U,\n  initial: U\n): U;\nexport function reduce<T>(\n  object: Iterable<T>,\n  fn: (accumulator: any, value: T, index: number) => any,\n  initial?: unknown\n): any {\n  // Setup the iterator and fetch the first value.\n  const it = object[Symbol.iterator]();\n  let index = 0;\n  let first = it.next();\n\n  // An empty iterator and no initial value is an error.\n  if (first.done && initial === undefined) {\n    throw new TypeError('Reduce of empty iterable with no initial value.');\n  }\n\n  // If the iterator is empty, return the initial value.\n  if (first.done) {\n    return initial;\n  }\n\n  // If the iterator has a single item and no initial value, the\n  // reducer is not invoked and the first item is the return value.\n  let second = it.next();\n  if (second.done && initial === undefined) {\n    return first.value;\n  }\n\n  // If iterator has a single item and an initial value is provided,\n  // the reducer is invoked and that result is the return value.\n  if (second.done) {\n    return fn(initial, first.value, index++);\n  }\n\n  // Setup the initial accumlated value.\n  let accumulator: any;\n  if (initial === undefined) {\n    accumulator = fn(first.value, second.value, index++);\n  } else {\n    accumulator = fn(fn(initial, first.value, index++), second.value, index++);\n  }\n\n  // Iterate the rest of the values, updating the accumulator.\n  let next: IteratorResult<T>;\n  while (!(next = it.next()).done) {\n    accumulator = fn(accumulator, next.value, index++);\n  }\n\n  // Return the final accumulated value.\n  return accumulator;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an iterator which repeats a value a number of times.\n *\n * @deprecated\n *\n * @param value - The value to repeat.\n *\n * @param count - The number of times to repeat the value.\n *\n * @returns A new iterator which repeats the specified value.\n *\n * #### Example\n * ```typescript\n * import { repeat } from '@lumino/algorithm';\n *\n * let stream = repeat(7, 3);\n *\n * Array.from(stream);  // [7, 7, 7]\n * ```\n */\nexport function* repeat<T>(value: T, count: number): IterableIterator<T> {\n  while (0 < count--) {\n    yield value;\n  }\n}\n\n/**\n * Create an iterator which yields a value a single time.\n *\n * @deprecated\n *\n * @param value - The value to wrap in an iterator.\n *\n * @returns A new iterator which yields the value a single time.\n *\n * #### Example\n * ```typescript\n * import { once } from '@lumino/algorithm';\n *\n * let stream = once(7);\n *\n * Array.from(stream);  // [7]\n * ```\n */\nexport function* once<T>(value: T): IterableIterator<T> {\n  yield value;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * An object which can produce a reverse iterator over its values.\n */\nexport interface IRetroable<T> {\n  /**\n   * Get a reverse iterator over the object's values.\n   *\n   * @returns An iterator which yields the object's values in reverse.\n   */\n  retro(): IterableIterator<T>;\n}\n\n/**\n * Create an iterator for a retroable object.\n *\n * @param object - The retroable or array-like object of interest.\n *\n * @returns An iterator which traverses the object's values in reverse.\n *\n * #### Example\n * ```typescript\n * import { retro } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = retro(data);\n *\n * Array.from(stream);  // [6, 5, 4, 3, 2, 1]\n * ```\n */\nexport function* retro<T>(\n  object: IRetroable<T> | ArrayLike<T>\n): IterableIterator<T> {\n  if (typeof (object as IRetroable<T>).retro === 'function') {\n    yield* (object as IRetroable<T>).retro();\n  } else {\n    for (let index = (object as ArrayLike<T>).length - 1; index > -1; index--) {\n      yield (object as ArrayLike<T>)[index];\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Topologically sort an iterable of edges.\n *\n * @param edges - The iterable object of edges to sort.\n *   An edge is represented as a 2-tuple of `[fromNode, toNode]`.\n *\n * @returns The topologically sorted array of nodes.\n *\n * #### Notes\n * If a cycle is present in the graph, the cycle will be ignored and\n * the return value will be only approximately sorted.\n *\n * #### Example\n * ```typescript\n * import { topologicSort } from '@lumino/algorithm';\n *\n * let data = [\n *   ['d', 'e'],\n *   ['c', 'd'],\n *   ['a', 'b'],\n *   ['b', 'c']\n * ];\n *\n * topologicSort(data);  // ['a', 'b', 'c', 'd', 'e']\n * ```\n */\nexport function topologicSort<T>(edges: Iterable<[T, T]>): T[] {\n  // Setup the shared sorting state.\n  let sorted: T[] = [];\n  let visited = new Set<T>();\n  let graph = new Map<T, T[]>();\n\n  // Add the edges to the graph.\n  for (const edge of edges) {\n    addEdge(edge);\n  }\n\n  // Visit each node in the graph.\n  for (const [k] of graph) {\n    visit(k);\n  }\n\n  // Return the sorted results.\n  return sorted;\n\n  // Add an edge to the graph.\n  function addEdge(edge: [T, T]): void {\n    let [fromNode, toNode] = edge;\n    let children = graph.get(toNode);\n    if (children) {\n      children.push(fromNode);\n    } else {\n      graph.set(toNode, [fromNode]);\n    }\n  }\n\n  // Recursively visit the node.\n  function visit(node: T): void {\n    if (visited.has(node)) {\n      return;\n    }\n    visited.add(node);\n    let children = graph.get(node);\n    if (children) {\n      for (const child of children) {\n        visit(child);\n      }\n    }\n    sorted.push(node);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Iterate over an iterable using a stepped increment.\n *\n * @param object - The iterable object of interest.\n *\n * @param step - The distance to step on each iteration. A value\n *   of less than `1` will behave the same as a value of `1`.\n *\n * @returns An iterator which traverses the iterable step-wise.\n *\n * #### Example\n * ```typescript\n * import { stride } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = stride(data, 2);\n *\n * Array.from(stream);  // [1, 3, 5];\n * ```\n */\nexport function* stride<T>(\n  object: Iterable<T>,\n  step: number\n): IterableIterator<T> {\n  let count = 0;\n  for (const value of object) {\n    if (0 === count++ % step) {\n      yield value;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for string-specific algorithms.\n */\nexport namespace StringExt {\n  /**\n   * Find the indices of characters in a source text.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The matched indices, or `null` if there is no match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * In order for there to be a match, all of the characters in `query`\n   * **must** appear in `source` in the order given by `query`.\n   *\n   * Characters are matched using strict `===` equality.\n   */\n  export function findIndices(\n    source: string,\n    query: string,\n    start = 0\n  ): number[] | null {\n    let indices = new Array<number>(query.length);\n    for (let i = 0, j = start, n = query.length; i < n; ++i, ++j) {\n      j = source.indexOf(query[i], j);\n      if (j === -1) {\n        return null;\n      }\n      indices[i] = j;\n    }\n    return indices;\n  }\n\n  /**\n   * The result of a string match function.\n   */\n  export interface IMatchResult {\n    /**\n     * A score which indicates the strength of the match.\n     *\n     * The documentation of a given match function should specify\n     * whether a lower or higher score is a stronger match.\n     */\n    score: number;\n\n    /**\n     * The indices of the matched characters in the source text.\n     *\n     * The indices will appear in increasing order.\n     */\n    indices: number[];\n  }\n\n  /**\n   * A string matcher which uses a sum-of-squares algorithm.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The match result, or `null` if there is no match.\n   *   A lower `score` represents a stronger match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * This scoring algorithm uses a sum-of-squares approach to determine\n   * the score. In order for there to be a match, all of the characters\n   * in `query` **must** appear in `source` in order. The index of each\n   * matching character is squared and added to the score. This means\n   * that early and consecutive character matches are preferred, while\n   * late matches are heavily penalized.\n   */\n  export function matchSumOfSquares(\n    source: string,\n    query: string,\n    start = 0\n  ): IMatchResult | null {\n    let indices = findIndices(source, query, start);\n    if (!indices) {\n      return null;\n    }\n    let score = 0;\n    for (let i = 0, n = indices.length; i < n; ++i) {\n      let j = indices[i] - start;\n      score += j * j;\n    }\n    return { score, indices };\n  }\n\n  /**\n   * A string matcher which uses a sum-of-deltas algorithm.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The match result, or `null` if there is no match.\n   *   A lower `score` represents a stronger match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * This scoring algorithm uses a sum-of-deltas approach to determine\n   * the score. In order for there to be a match, all of the characters\n   * in `query` **must** appear in `source` in order. The delta between\n   * the indices are summed to create the score. This means that groups\n   * of matched characters are preferred, while fragmented matches are\n   * penalized.\n   */\n  export function matchSumOfDeltas(\n    source: string,\n    query: string,\n    start = 0\n  ): IMatchResult | null {\n    let indices = findIndices(source, query, start);\n    if (!indices) {\n      return null;\n    }\n    let score = 0;\n    let last = start - 1;\n    for (let i = 0, n = indices.length; i < n; ++i) {\n      let j = indices[i];\n      score += j - last - 1;\n      last = j;\n    }\n    return { score, indices };\n  }\n\n  /**\n   * Highlight the matched characters of a source text.\n   *\n   * @param source - The text which should be highlighted.\n   *\n   * @param indices - The indices of the matched characters. They must\n   *   appear in increasing order and must be in bounds of the source.\n   *\n   * @param fn - The function to apply to the matched chunks.\n   *\n   * @returns An array of unmatched and highlighted chunks.\n   */\n  export function highlight<T>(\n    source: string,\n    indices: ReadonlyArray<number>,\n    fn: (chunk: string) => T\n  ): Array<string | T> {\n    // Set up the result array.\n    let result: Array<string | T> = [];\n\n    // Set up the counter variables.\n    let k = 0;\n    let last = 0;\n    let n = indices.length;\n\n    // Iterator over each index.\n    while (k < n) {\n      // Set up the chunk indices.\n      let i = indices[k];\n      let j = indices[k];\n\n      // Advance the right chunk index until it's non-contiguous.\n      while (++k < n && indices[k] === j + 1) {\n        j++;\n      }\n\n      // Extract the unmatched text.\n      if (last < i) {\n        result.push(source.slice(last, i));\n      }\n\n      // Extract and highlight the matched text.\n      if (i < j + 1) {\n        result.push(fn(source.slice(i, j + 1)));\n      }\n\n      // Update the last visited index.\n      last = j + 1;\n    }\n\n    // Extract any remaining unmatched text.\n    if (last < source.length) {\n      result.push(source.slice(last));\n    }\n\n    // Return the highlighted result.\n    return result;\n  }\n\n  /**\n   * A 3-way string comparison function.\n   *\n   * @param a - The first string of interest.\n   *\n   * @param b - The second string of interest.\n   *\n   * @returns `-1` if `a < b`, else `1` if `a > b`, else `0`.\n   */\n  export function cmp(a: string, b: string): number {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Take a fixed number of items from an iterable.\n *\n * @param object - The iterable object of interest.\n *\n * @param count - The number of items to take from the iterable.\n *\n * @returns An iterator which yields the specified number of items\n *   from the source iterable.\n *\n * #### Notes\n * The returned iterator will exhaust early if the source iterable\n * contains an insufficient number of items.\n *\n * #### Example\n * ```typescript\n * import { take } from '@lumino/algorithm';\n *\n * let stream = take([5, 4, 3, 2, 1, 0, -1], 3);\n *\n * Array.from(stream);  // [5, 4, 3]\n * ```\n */\nexport function* take<T>(\n  object: Iterable<T>,\n  count: number\n): IterableIterator<T> {\n  if (count < 1) {\n    return;\n  }\n  const it = object[Symbol.iterator]();\n  let item: IteratorResult<T>;\n  while (0 < count-- && !(item = it.next()).done) {\n    yield item.value;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { every } from './iter';\n\n/**\n * Iterate several iterables in lockstep.\n *\n * @param objects - The iterable objects of interest.\n *\n * @returns An iterator which yields successive tuples of values where\n *   each value is taken in turn from the provided iterables. It will\n *   be as long as the shortest provided iterable.\n *\n * #### Example\n * ```typescript\n * import { zip } from '@lumino/algorithm';\n *\n * let data1 = [1, 2, 3];\n * let data2 = [4, 5, 6];\n *\n * let stream = zip(data1, data2);\n *\n * Array.from(stream);  // [[1, 4], [2, 5], [3, 6]]\n * ```\n */\nexport function* zip<T>(...objects: Iterable<T>[]): IterableIterator<T[]> {\n  const iters = objects.map(obj => obj[Symbol.iterator]());\n  let tuple = iters.map(it => it.next());\n  for (; every(tuple, item => !item.done); tuple = iters.map(it => it.next())) {\n    yield tuple.map(item => item.value);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2019, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for clipboard related functionality.\n */\nexport namespace ClipboardExt {\n  /**\n   * Copy text to the system clipboard.\n   *\n   * @param text - The text to copy to the clipboard.\n   */\n  export function copyText(text: string): void {\n    // Fetch the document body.\n    const body = document.body;\n\n    // Set up the clipboard event listener.\n    const handler = (event: ClipboardEvent) => {\n      // Stop the event propagation.\n      event.preventDefault();\n      event.stopPropagation();\n\n      // Set the clipboard data.\n      event.clipboardData!.setData('text', text);\n\n      // Remove the event listener.\n      body.removeEventListener('copy', handler, true);\n    };\n\n    // Add the event listener.\n    body.addEventListener('copy', handler, true);\n\n    // Trigger the event.\n    document.execCommand('copy');\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for element related utilities.\n */\nexport namespace ElementExt {\n  /**\n   * An object which holds the border and padding data for an element.\n   */\n  export interface IBoxSizing {\n    /**\n     * The top border width, in pixels.\n     */\n    borderTop: number;\n\n    /**\n     * The left border width, in pixels.\n     */\n    borderLeft: number;\n\n    /**\n     * The right border width, in pixels.\n     */\n    borderRight: number;\n\n    /**\n     * The bottom border width, in pixels.\n     */\n    borderBottom: number;\n\n    /**\n     * The top padding width, in pixels.\n     */\n    paddingTop: number;\n\n    /**\n     * The left padding width, in pixels.\n     */\n    paddingLeft: number;\n\n    /**\n     * The right padding width, in pixels.\n     */\n    paddingRight: number;\n\n    /**\n     * The bottom padding width, in pixels.\n     */\n    paddingBottom: number;\n\n    /**\n     * The sum of horizontal border and padding.\n     */\n    horizontalSum: number;\n\n    /**\n     * The sum of vertical border and padding.\n     */\n    verticalSum: number;\n  }\n\n  /**\n   * Compute the box sizing for an element.\n   *\n   * @param element - The element of interest.\n   *\n   * @returns The box sizing data for the specified element.\n   */\n  export function boxSizing(element: Element): IBoxSizing {\n    let style = window.getComputedStyle(element);\n    let bt = parseFloat(style.borderTopWidth!) || 0;\n    let bl = parseFloat(style.borderLeftWidth!) || 0;\n    let br = parseFloat(style.borderRightWidth!) || 0;\n    let bb = parseFloat(style.borderBottomWidth!) || 0;\n    let pt = parseFloat(style.paddingTop!) || 0;\n    let pl = parseFloat(style.paddingLeft!) || 0;\n    let pr = parseFloat(style.paddingRight!) || 0;\n    let pb = parseFloat(style.paddingBottom!) || 0;\n    let hs = bl + pl + pr + br;\n    let vs = bt + pt + pb + bb;\n    return {\n      borderTop: bt,\n      borderLeft: bl,\n      borderRight: br,\n      borderBottom: bb,\n      paddingTop: pt,\n      paddingLeft: pl,\n      paddingRight: pr,\n      paddingBottom: pb,\n      horizontalSum: hs,\n      verticalSum: vs\n    };\n  }\n\n  /**\n   * An object which holds the min and max size data for an element.\n   */\n  export interface ISizeLimits {\n    /**\n     * The minimum width, in pixels.\n     */\n    minWidth: number;\n\n    /**\n     * The minimum height, in pixels.\n     */\n    minHeight: number;\n\n    /**\n     * The maximum width, in pixels.\n     */\n    maxWidth: number;\n\n    /**\n     * The maximum height, in pixels.\n     */\n    maxHeight: number;\n  }\n\n  /**\n   * Compute the size limits for an element.\n   *\n   * @param element - The element of interest.\n   *\n   * @returns The size limit data for the specified element.\n   */\n  export function sizeLimits(element: Element): ISizeLimits {\n    let style = window.getComputedStyle(element);\n    let minWidth = parseFloat(style.minWidth!) || 0;\n    let minHeight = parseFloat(style.minHeight!) || 0;\n    let maxWidth = parseFloat(style.maxWidth!) || Infinity;\n    let maxHeight = parseFloat(style.maxHeight!) || Infinity;\n    maxWidth = Math.max(minWidth, maxWidth);\n    maxHeight = Math.max(minHeight, maxHeight);\n    return { minWidth, minHeight, maxWidth, maxHeight };\n  }\n\n  /**\n   * Test whether a client position lies within an element.\n   *\n   * @param element - The DOM element of interest.\n   *\n   * @param clientX - The client X coordinate of interest.\n   *\n   * @param clientY - The client Y coordinate of interest.\n   *\n   * @returns Whether the point is within the given element.\n   */\n  export function hitTest(\n    element: Element,\n    clientX: number,\n    clientY: number\n  ): boolean {\n    let rect = element.getBoundingClientRect();\n    return (\n      clientX >= rect.left &&\n      clientX < rect.right &&\n      clientY >= rect.top &&\n      clientY < rect.bottom\n    );\n  }\n\n  /**\n   * Vertically scroll an element into view if needed.\n   *\n   * @param area - The scroll area element.\n   *\n   * @param element - The element of interest.\n   *\n   * #### Notes\n   * This follows the \"nearest\" behavior of the native `scrollIntoView`\n   * method, which is not supported by all browsers.\n   * https://drafts.csswg.org/cssom-view/#element-scrolling-members\n   *\n   * If the element fully covers the visible area or is fully contained\n   * within the visible area, no scrolling will take place. Otherwise,\n   * the nearest edges of the area and element are aligned.\n   */\n  export function scrollIntoViewIfNeeded(\n    area: Element,\n    element: Element\n  ): void {\n    let ar = area.getBoundingClientRect();\n    let er = element.getBoundingClientRect();\n    if (er.top <= ar.top && er.bottom >= ar.bottom) {\n      return;\n    }\n    if (er.top < ar.top && er.height <= ar.height) {\n      area.scrollTop -= ar.top - er.top;\n      return;\n    }\n    if (er.bottom > ar.bottom && er.height >= ar.height) {\n      area.scrollTop -= ar.top - er.top;\n      return;\n    }\n    if (er.top < ar.top && er.height > ar.height) {\n      area.scrollTop -= ar.bottom - er.bottom;\n      return;\n    }\n    if (er.bottom > ar.bottom && er.height < ar.height) {\n      area.scrollTop -= ar.bottom - er.bottom;\n      return;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for platform related utilities.\n */\nexport namespace Platform {\n  /**\n   * A flag indicating whether the platform is Mac.\n   */\n  export const IS_MAC = !!navigator.platform.match(/Mac/i);\n\n  /**\n   * A flag indicating whether the platform is Windows.\n   */\n  export const IS_WIN = !!navigator.platform.match(/Win/i);\n\n  /**\n   * A flag indicating whether the browser is IE.\n   */\n  export const IS_IE = /Trident/.test(navigator.userAgent);\n\n  /**\n   * A flag indicating whether the browser is Edge.\n   */\n  export const IS_EDGE = /Edge/.test(navigator.userAgent);\n\n  /**\n   * Test whether the `accel` key is pressed.\n   *\n   * @param event - The keyboard or mouse event of interest.\n   *\n   * @returns Whether the `accel` key is pressed.\n   *\n   * #### Notes\n   * On Mac the `accel` key is the command key. On all other\n   * platforms the `accel` key is the control key.\n   */\n  export function accelKey(event: KeyboardEvent | MouseEvent): boolean {\n    return IS_MAC ? event.metaKey : event.ctrlKey;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for selector related utilities.\n */\nexport namespace Selector {\n  /**\n   * Calculate the specificity of a single CSS selector.\n   *\n   * @param selector - The CSS selector of interest.\n   *\n   * @returns The specificity of the selector.\n   *\n   * #### Undefined Behavior\n   * The selector is invalid.\n   *\n   * #### Notes\n   * This is based on https://www.w3.org/TR/css3-selectors/#specificity\n   *\n   * A larger number represents a more specific selector.\n   *\n   * The smallest possible specificity is `0`.\n   *\n   * The result is represented as a hex number `0x<aa><bb><cc>` where\n   * each component is the count of the respective selector clause.\n   *\n   * If the selector contains commas, only the first clause is used.\n   *\n   * The computed result is cached, so subsequent calculations for the\n   * same selector are extremely fast.\n   */\n  export function calculateSpecificity(selector: string): number {\n    if (selector in Private.specificityCache) {\n      return Private.specificityCache[selector];\n    }\n    let result = Private.calculateSingle(selector);\n    return (Private.specificityCache[selector] = result);\n  }\n\n  /**\n   * Test whether a selector is a valid CSS selector.\n   *\n   * @param selector - The CSS selector of interest.\n   *\n   * @returns `true` if the selector is valid, `false` otherwise.\n   *\n   * #### Notes\n   * The computed result is cached, so subsequent tests for the same\n   * selector are extremely fast.\n   */\n  export function isValid(selector: string): boolean {\n    if (selector in Private.validityCache) {\n      return Private.validityCache[selector];\n    }\n    let result = true;\n    try {\n      Private.testElem.querySelector(selector);\n    } catch (err) {\n      result = false;\n    }\n    return (Private.validityCache[selector] = result);\n  }\n\n  /**\n   * Test whether an element matches a CSS selector.\n   *\n   * @param element - The element of interest.\n   *\n   * @param selector - The valid CSS selector of interest.\n   *\n   * @returns `true` if the element is a match, `false` otherwise.\n   *\n   * #### Notes\n   * This function uses the builtin browser capabilities when possible,\n   * falling back onto a document query otherwise.\n   */\n  export function matches(element: Element, selector: string): boolean {\n    return Private.protoMatchFunc.call(element, selector);\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A type alias for an object hash.\n   */\n  export type StringMap<T> = { [key: string]: T };\n\n  /**\n   * A cache of computed selector specificity values.\n   */\n  export const specificityCache: StringMap<number> = Object.create(null);\n\n  /**\n   * A cache of computed selector validity.\n   */\n  export const validityCache: StringMap<boolean> = Object.create(null);\n\n  /**\n   * An empty element for testing selector validity.\n   */\n  export const testElem = document.createElement('div');\n\n  /**\n   * A cross-browser CSS selector matching prototype function.\n   */\n  export const protoMatchFunc = (() => {\n    let proto = Element.prototype as any;\n    return (\n      proto.matches ||\n      proto.matchesSelector ||\n      proto.mozMatchesSelector ||\n      proto.msMatchesSelector ||\n      proto.oMatchesSelector ||\n      proto.webkitMatchesSelector ||\n      function (selector: string) {\n        let elem = this as Element;\n        let matches = elem.ownerDocument\n          ? elem.ownerDocument.querySelectorAll(selector)\n          : [];\n        return Array.prototype.indexOf.call(matches, elem) !== -1;\n      }\n    );\n  })();\n\n  /**\n   * Calculate the specificity of a single selector.\n   *\n   * The behavior is undefined if the selector is invalid.\n   */\n  export function calculateSingle(selector: string): number {\n    // Ignore anything after the first comma.\n    selector = selector.split(',', 1)[0];\n\n    // Setup the aggregate counters.\n    let a = 0;\n    let b = 0;\n    let c = 0;\n\n    // Apply a regex to the front of the selector. If it succeeds, that\n    // portion of the selector is removed. Returns a success/fail flag.\n    function match(re: RegExp): boolean {\n      let match = selector.match(re);\n      if (match === null) {\n        return false;\n      }\n      selector = selector.slice(match[0].length);\n      return true;\n    }\n\n    // Replace the negation pseudo-class (which is ignored),\n    // but keep its inner content (which is not ignored).\n    selector = selector.replace(NEGATION_RE, ' $1 ');\n\n    // Continue matching until the selector is consumed.\n    while (selector.length > 0) {\n      // Match an ID selector.\n      if (match(ID_RE)) {\n        a++;\n        continue;\n      }\n\n      // Match a class selector.\n      if (match(CLASS_RE)) {\n        b++;\n        continue;\n      }\n\n      // Match an attribute selector.\n      if (match(ATTR_RE)) {\n        b++;\n        continue;\n      }\n\n      // Match a pseudo-element selector. This is done before matching\n      // a pseudo-class since this regex overlaps with that regex.\n      if (match(PSEUDO_ELEM_RE)) {\n        c++;\n        continue;\n      }\n\n      // Match a pseudo-class selector.\n      if (match(PSEDUO_CLASS_RE)) {\n        b++;\n        continue;\n      }\n\n      // Match a plain type selector.\n      if (match(TYPE_RE)) {\n        c++;\n        continue;\n      }\n\n      // Finally, match any ignored characters.\n      if (match(IGNORE_RE)) {\n        continue;\n      }\n\n      // At this point, the selector is assumed to be invalid.\n      return 0;\n    }\n\n    // Clamp each component to a reasonable base.\n    a = Math.min(a, 0xff);\n    b = Math.min(b, 0xff);\n    c = Math.min(c, 0xff);\n\n    // Combine the components into a single result.\n    return (a << 16) | (b << 8) | c;\n  }\n\n  /**\n   * A regex which matches an ID selector at string start.\n   */\n  const ID_RE = /^#[^\\s\\+>~#\\.\\[:]+/;\n\n  /**\n   * A regex which matches a class selector at string start.\n   */\n  const CLASS_RE = /^\\.[^\\s\\+>~#\\.\\[:]+/;\n\n  /**\n   * A regex which matches an attribute selector at string start.\n   */\n  const ATTR_RE = /^\\[[^\\]]+\\]/;\n\n  /**\n   * A regex which matches a type selector at string start.\n   */\n  const TYPE_RE = /^[^\\s\\+>~#\\.\\[:]+/;\n\n  /**\n   * A regex which matches a pseudo-element selector at string start.\n   */\n  const PSEUDO_ELEM_RE =\n    /^(::[^\\s\\+>~#\\.\\[:]+|:first-line|:first-letter|:before|:after)/;\n\n  /**\n   * A regex which matches a pseudo-class selector at string start.\n   */\n  const PSEDUO_CLASS_RE = /^:[^\\s\\+>~#\\.\\[:]+/;\n\n  /**\n   * A regex which matches ignored characters at string start.\n   */\n  const IGNORE_RE = /^[\\s\\+>~\\*]+/;\n\n  /**\n   * A regex which matches the negation pseudo-class globally.\n   */\n  const NEGATION_RE = /:not\\(([^\\)]+)\\)/g;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { IRetroable } from '@lumino/algorithm';\n\n/**\n * A generic doubly-linked list.\n */\nexport class LinkedList<T> implements Iterable<T>, IRetroable<T> {\n  /**\n   * Whether the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  get isEmpty(): boolean {\n    return this._size === 0;\n  }\n\n  /**\n   * The size of the list.\n   *\n   * #### Complexity\n   * `O(1)`\n   *\n   * #### Notes\n   * This is equivalent to `length`.\n   */\n  get size(): number {\n    return this._size;\n  }\n\n  /**\n   * The length of the list.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Notes\n   * This is equivalent to `size`.\n   *\n   * This property is deprecated.\n   */\n  get length(): number {\n    return this._size;\n  }\n\n  /**\n   * The first value in the list.\n   *\n   * This is `undefined` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  get first(): T | undefined {\n    return this._first ? this._first.value : undefined;\n  }\n\n  /**\n   * The last value in the list.\n   *\n   * This is `undefined` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  get last(): T | undefined {\n    return this._last ? this._last.value : undefined;\n  }\n\n  /**\n   * The first node in the list.\n   *\n   * This is `null` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  get firstNode(): LinkedList.INode<T> | null {\n    return this._first;\n  }\n\n  /**\n   * The last node in the list.\n   *\n   * This is `null` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  get lastNode(): LinkedList.INode<T> | null {\n    return this._last;\n  }\n\n  /**\n   * Create an iterator over the values in the list.\n   *\n   * @returns A new iterator starting with the first value.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  *[Symbol.iterator](): IterableIterator<T> {\n    let node = this._first;\n    while (node) {\n      yield node.value;\n      node = node.next;\n    }\n  }\n\n  /**\n   * Create a reverse iterator over the values in the list.\n   *\n   * @returns A new iterator starting with the last value.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  *retro(): IterableIterator<T> {\n    let node = this._last;\n    while (node) {\n      yield node.value;\n      node = node.prev;\n    }\n  }\n\n  /**\n   * Create an iterator over the nodes in the list.\n   *\n   * @returns A new iterator starting with the first node.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  *nodes(): IterableIterator<LinkedList.INode<T>> {\n    let node = this._first;\n    while (node) {\n      yield node;\n      node = node.next;\n    }\n  }\n\n  /**\n   * Create a reverse iterator over the nodes in the list.\n   *\n   * @returns A new iterator starting with the last node.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  *retroNodes(): IterableIterator<LinkedList.INode<T>> {\n    let node = this._last;\n    while (node) {\n      yield node;\n      node = node.prev;\n    }\n  }\n\n  /**\n   * Assign new values to the list, replacing all current values.\n   *\n   * @param values - The values to assign to the list.\n   *\n   * #### Complexity\n   * Linear.\n   */\n  assign(values: Iterable<T>): void {\n    this.clear();\n    for (const value of values) {\n      this.addLast(value);\n    }\n  }\n\n  /**\n   * Add a value to the end of the list.\n   *\n   * @param value - The value to add to the end of the list.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Notes\n   * This is equivalent to `addLast`.\n   */\n  push(value: T): void {\n    this.addLast(value);\n  }\n\n  /**\n   * Remove and return the value at the end of the list.\n   *\n   * @returns The removed value, or `undefined` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Notes\n   * This is equivalent to `removeLast`.\n   */\n  pop(): T | undefined {\n    return this.removeLast();\n  }\n\n  /**\n   * Add a value to the beginning of the list.\n   *\n   * @param value - The value to add to the beginning of the list.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Notes\n   * This is equivalent to `addFirst`.\n   */\n  shift(value: T): void {\n    this.addFirst(value);\n  }\n\n  /**\n   * Remove and return the value at the beginning of the list.\n   *\n   * @returns The removed value, or `undefined` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Notes\n   * This is equivalent to `removeFirst`.\n   */\n  unshift(): T | undefined {\n    return this.removeFirst();\n  }\n\n  /**\n   * Add a value to the beginning of the list.\n   *\n   * @param value - The value to add to the beginning of the list.\n   *\n   * @returns The list node which holds the value.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  addFirst(value: T): LinkedList.INode<T> {\n    let node = new Private.LinkedListNode<T>(this, value);\n    if (!this._first) {\n      this._first = node;\n      this._last = node;\n    } else {\n      node.next = this._first;\n      this._first.prev = node;\n      this._first = node;\n    }\n    this._size++;\n    return node;\n  }\n\n  /**\n   * Add a value to the end of the list.\n   *\n   * @param value - The value to add to the end of the list.\n   *\n   * @returns The list node which holds the value.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  addLast(value: T): LinkedList.INode<T> {\n    let node = new Private.LinkedListNode<T>(this, value);\n    if (!this._last) {\n      this._first = node;\n      this._last = node;\n    } else {\n      node.prev = this._last;\n      this._last.next = node;\n      this._last = node;\n    }\n    this._size++;\n    return node;\n  }\n\n  /**\n   * Insert a value before a specific node in the list.\n   *\n   * @param value - The value to insert before the reference node.\n   *\n   * @param ref - The reference node of interest. If this is `null`,\n   *   the value will be added to the beginning of the list.\n   *\n   * @returns The list node which holds the value.\n   *\n   * #### Notes\n   * The reference node must be owned by the list.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  insertBefore(value: T, ref: LinkedList.INode<T> | null): LinkedList.INode<T> {\n    if (!ref || ref === this._first) {\n      return this.addFirst(value);\n    }\n    if (!(ref instanceof Private.LinkedListNode) || ref.list !== this) {\n      throw new Error('Reference node is not owned by the list.');\n    }\n    let node = new Private.LinkedListNode<T>(this, value);\n    let _ref = ref as Private.LinkedListNode<T>;\n    let prev = _ref.prev!;\n    node.next = _ref;\n    node.prev = prev;\n    _ref.prev = node;\n    prev.next = node;\n    this._size++;\n    return node;\n  }\n\n  /**\n   * Insert a value after a specific node in the list.\n   *\n   * @param value - The value to insert after the reference node.\n   *\n   * @param ref - The reference node of interest. If this is `null`,\n   *   the value will be added to the end of the list.\n   *\n   * @returns The list node which holds the value.\n   *\n   * #### Notes\n   * The reference node must be owned by the list.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  insertAfter(value: T, ref: LinkedList.INode<T> | null): LinkedList.INode<T> {\n    if (!ref || ref === this._last) {\n      return this.addLast(value);\n    }\n    if (!(ref instanceof Private.LinkedListNode) || ref.list !== this) {\n      throw new Error('Reference node is not owned by the list.');\n    }\n    let node = new Private.LinkedListNode<T>(this, value);\n    let _ref = ref as Private.LinkedListNode<T>;\n    let next = _ref.next!;\n    node.next = next;\n    node.prev = _ref;\n    _ref.next = node;\n    next.prev = node;\n    this._size++;\n    return node;\n  }\n\n  /**\n   * Remove and return the value at the beginning of the list.\n   *\n   * @returns The removed value, or `undefined` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  removeFirst(): T | undefined {\n    let node = this._first;\n    if (!node) {\n      return undefined;\n    }\n    if (node === this._last) {\n      this._first = null;\n      this._last = null;\n    } else {\n      this._first = node.next;\n      this._first!.prev = null;\n    }\n    node.list = null;\n    node.next = null;\n    node.prev = null;\n    this._size--;\n    return node.value;\n  }\n\n  /**\n   * Remove and return the value at the end of the list.\n   *\n   * @returns The removed value, or `undefined` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  removeLast(): T | undefined {\n    let node = this._last;\n    if (!node) {\n      return undefined;\n    }\n    if (node === this._first) {\n      this._first = null;\n      this._last = null;\n    } else {\n      this._last = node.prev;\n      this._last!.next = null;\n    }\n    node.list = null;\n    node.next = null;\n    node.prev = null;\n    this._size--;\n    return node.value;\n  }\n\n  /**\n   * Remove a specific node from the list.\n   *\n   * @param node - The node to remove from the list.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Notes\n   * The node must be owned by the list.\n   */\n  removeNode(node: LinkedList.INode<T>): void {\n    if (!(node instanceof Private.LinkedListNode) || node.list !== this) {\n      throw new Error('Node is not owned by the list.');\n    }\n    let _node = node as Private.LinkedListNode<T>;\n    if (_node === this._first && _node === this._last) {\n      this._first = null;\n      this._last = null;\n    } else if (_node === this._first) {\n      this._first = _node.next;\n      this._first!.prev = null;\n    } else if (_node === this._last) {\n      this._last = _node.prev;\n      this._last!.next = null;\n    } else {\n      _node.next!.prev = _node.prev;\n      _node.prev!.next = _node.next;\n    }\n    _node.list = null;\n    _node.next = null;\n    _node.prev = null;\n    this._size--;\n  }\n\n  /**\n   * Remove all values from the list.\n   *\n   * #### Complexity\n   * Linear.\n   */\n  clear(): void {\n    let node = this._first;\n    while (node) {\n      let next = node.next;\n      node.list = null;\n      node.prev = null;\n      node.next = null;\n      node = next;\n    }\n    this._first = null;\n    this._last = null;\n    this._size = 0;\n  }\n\n  private _first: Private.LinkedListNode<T> | null = null;\n  private _last: Private.LinkedListNode<T> | null = null;\n  private _size = 0;\n}\n\n/**\n * The namespace for the `LinkedList` class statics.\n */\nexport namespace LinkedList {\n  /**\n   * An object which represents a node in a linked list.\n   *\n   * #### Notes\n   * User code will not create linked list nodes directly. Nodes\n   * are created automatically when values are added to a list.\n   */\n  export interface INode<T> {\n    /**\n     * The linked list which created and owns the node.\n     *\n     * This will be `null` when the node is removed from the list.\n     */\n    readonly list: LinkedList<T> | null;\n\n    /**\n     * The next node in the list.\n     *\n     * This will be `null` when the node is the last node in the list\n     * or when the node is removed from the list.\n     */\n    readonly next: INode<T> | null;\n\n    /**\n     * The previous node in the list.\n     *\n     * This will be `null` when the node is the first node in the list\n     * or when the node is removed from the list.\n     */\n    readonly prev: INode<T> | null;\n\n    /**\n     * The user value stored in the node.\n     */\n    readonly value: T;\n  }\n\n  /**\n   * Create a linked list from an iterable of values.\n   *\n   * @param values - The iterable object of interest.\n   *\n   * @returns A new linked list initialized with the given values.\n   *\n   * #### Complexity\n   * Linear.\n   */\n  export function from<T>(values: Iterable<T>): LinkedList<T> {\n    let list = new LinkedList<T>();\n    list.assign(values);\n    return list;\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * The internal linked list node implementation.\n   */\n  export class LinkedListNode<T> {\n    /**\n     * The linked list which created and owns the node.\n     */\n    list: LinkedList<T> | null = null;\n\n    /**\n     * The next node in the list.\n     */\n    next: LinkedListNode<T> | null = null;\n\n    /**\n     * The previous node in the list.\n     */\n    prev: LinkedListNode<T> | null = null;\n\n    /**\n     * The user value stored in the node.\n     */\n    readonly value: T;\n\n    /**\n     * Construct a new linked list node.\n     *\n     * @param list - The list which owns the node.\n     *\n     * @param value - The value for the link.\n     */\n    constructor(list: LinkedList<T>, value: T) {\n      this.list = list;\n      this.value = value;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * @packageDocumentation\n * @module messaging\n */\nimport { ArrayExt, every, retro, some } from '@lumino/algorithm';\n\nimport { LinkedList } from '@lumino/collections';\n\n/**\n * A message which can be delivered to a message handler.\n *\n * #### Notes\n * This class may be subclassed to create complex message types.\n */\nexport class Message {\n  /**\n   * Construct a new message.\n   *\n   * @param type - The type of the message.\n   */\n  constructor(type: string) {\n    this.type = type;\n  }\n\n  /**\n   * The type of the message.\n   *\n   * #### Notes\n   * The `type` of a message should be related directly to its actual\n   * runtime type. This means that `type` can and will be used to cast\n   * the message to the relevant derived `Message` subtype.\n   */\n  readonly type: string;\n\n  /**\n   * Test whether the message is conflatable.\n   *\n   * #### Notes\n   * Message conflation is an advanced topic. Most message types will\n   * not make use of this feature.\n   *\n   * If a conflatable message is posted to a handler while another\n   * conflatable message of the same `type` has already been posted\n   * to the handler, the `conflate()` method of the existing message\n   * will be invoked. If that method returns `true`, the new message\n   * will not be enqueued. This allows messages to be compressed, so\n   * that only a single instance of the message type is processed per\n   * cycle, no matter how many times messages of that type are posted.\n   *\n   * Custom message types may reimplement this property.\n   *\n   * The default implementation is always `false`.\n   */\n  get isConflatable(): boolean {\n    return false;\n  }\n\n  /**\n   * Conflate this message with another message of the same `type`.\n   *\n   * @param other - A conflatable message of the same `type`.\n   *\n   * @returns `true` if the message was successfully conflated, or\n   *   `false` otherwise.\n   *\n   * #### Notes\n   * Message conflation is an advanced topic. Most message types will\n   * not make use of this feature.\n   *\n   * This method is called automatically by the message loop when the\n   * given message is posted to the handler paired with this message.\n   * This message will already be enqueued and conflatable, and the\n   * given message will have the same `type` and also be conflatable.\n   *\n   * This method should merge the state of the other message into this\n   * message as needed so that when this message is finally delivered\n   * to the handler, it receives the most up-to-date information.\n   *\n   * If this method returns `true`, it signals that the other message\n   * was successfully conflated and that message will not be enqueued.\n   *\n   * If this method returns `false`, the other message will be enqueued\n   * for normal delivery.\n   *\n   * Custom message types may reimplement this method.\n   *\n   * The default implementation always returns `false`.\n   */\n  conflate(other: Message): boolean {\n    return false;\n  }\n}\n\n/**\n * A convenience message class which conflates automatically.\n *\n * #### Notes\n * Message conflation is an advanced topic. Most user code will not\n * make use of this class.\n *\n * This message class is useful for creating message instances which\n * should be conflated, but which have no state other than `type`.\n *\n * If conflation of stateful messages is required, a custom `Message`\n * subclass should be created.\n */\nexport class ConflatableMessage extends Message {\n  /**\n   * Test whether the message is conflatable.\n   *\n   * #### Notes\n   * This property is always `true`.\n   */\n  get isConflatable(): boolean {\n    return true;\n  }\n\n  /**\n   * Conflate this message with another message of the same `type`.\n   *\n   * #### Notes\n   * This method always returns `true`.\n   */\n  conflate(other: ConflatableMessage): boolean {\n    return true;\n  }\n}\n\n/**\n * An object which handles messages.\n *\n * #### Notes\n * A message handler is a simple way of defining a type which can act\n * upon on a large variety of external input without requiring a large\n * abstract API surface. This is particularly useful in the context of\n * widget frameworks where the number of distinct message types can be\n * unbounded.\n */\nexport interface IMessageHandler {\n  /**\n   * Process a message sent to the handler.\n   *\n   * @param msg - The message to be processed.\n   */\n  processMessage(msg: Message): void;\n}\n\n/**\n * An object which intercepts messages sent to a message handler.\n *\n * #### Notes\n * A message hook is useful for intercepting or spying on messages\n * sent to message handlers which were either not created by the\n * consumer, or when subclassing the handler is not feasible.\n *\n * If `messageHook` returns `false`, no other message hooks will be\n * invoked and the message will not be delivered to the handler.\n *\n * If all installed message hooks return `true`, the message will\n * be delivered to the handler for processing.\n *\n * **See also:** {@link MessageLoop.installMessageHook} and {@link MessageLoop.removeMessageHook}\n */\nexport interface IMessageHook {\n  /**\n   * Intercept a message sent to a message handler.\n   *\n   * @param handler - The target handler of the message.\n   *\n   * @param msg - The message to be sent to the handler.\n   *\n   * @returns `true` if the message should continue to be processed\n   *   as normal, or `false` if processing should cease immediately.\n   */\n  messageHook(handler: IMessageHandler, msg: Message): boolean;\n}\n\n/**\n * A type alias for message hook object or function.\n *\n * #### Notes\n * The signature and semantics of a message hook function are the same\n * as the `messageHook` method of {@link IMessageHook}.\n */\nexport type MessageHook =\n  | IMessageHook\n  | ((handler: IMessageHandler, msg: Message) => boolean);\n\n/**\n * The namespace for the global singleton message loop.\n */\nexport namespace MessageLoop {\n  /**\n   * A function that cancels the pending loop task; `null` if unavailable.\n   */\n  let pending: (() => void) | null = null;\n\n  /**\n   * Schedules a function for invocation as soon as possible asynchronously.\n   *\n   * @param fn The function to invoke when called back.\n   *\n   * @returns An anonymous function that will unschedule invocation if possible.\n   */\n  const schedule = (\n    resolved =>\n    (fn: () => unknown): (() => void) => {\n      let rejected = false;\n      resolved.then(() => !rejected && fn());\n      return () => {\n        rejected = true;\n      };\n    }\n  )(Promise.resolve());\n\n  /**\n   * Send a message to a message handler to process immediately.\n   *\n   * @param handler - The handler which should process the message.\n   *\n   * @param msg - The message to deliver to the handler.\n   *\n   * #### Notes\n   * The message will first be sent through any installed message hooks\n   * for the handler. If the message passes all hooks, it will then be\n   * delivered to the `processMessage` method of the handler.\n   *\n   * The message will not be conflated with pending posted messages.\n   *\n   * Exceptions in hooks and handlers will be caught and logged.\n   */\n  export function sendMessage(handler: IMessageHandler, msg: Message): void {\n    // Lookup the message hooks for the handler.\n    let hooks = messageHooks.get(handler);\n\n    // Handle the common case of no installed hooks.\n    if (!hooks || hooks.length === 0) {\n      invokeHandler(handler, msg);\n      return;\n    }\n\n    // Invoke the message hooks starting with the newest first.\n    let passed = every(retro(hooks), hook => {\n      return hook ? invokeHook(hook, handler, msg) : true;\n    });\n\n    // Invoke the handler if the message passes all hooks.\n    if (passed) {\n      invokeHandler(handler, msg);\n    }\n  }\n\n  /**\n   * Post a message to a message handler to process in the future.\n   *\n   * @param handler - The handler which should process the message.\n   *\n   * @param msg - The message to post to the handler.\n   *\n   * #### Notes\n   * The message will be conflated with the pending posted messages for\n   * the handler, if possible. If the message is not conflated, it will\n   * be queued for normal delivery on the next cycle of the event loop.\n   *\n   * Exceptions in hooks and handlers will be caught and logged.\n   */\n  export function postMessage(handler: IMessageHandler, msg: Message): void {\n    // Handle the common case of a non-conflatable message.\n    if (!msg.isConflatable) {\n      enqueueMessage(handler, msg);\n      return;\n    }\n\n    // Conflate the message with an existing message if possible.\n    let conflated = some(messageQueue, posted => {\n      if (posted.handler !== handler) {\n        return false;\n      }\n      if (!posted.msg) {\n        return false;\n      }\n      if (posted.msg.type !== msg.type) {\n        return false;\n      }\n      if (!posted.msg.isConflatable) {\n        return false;\n      }\n      return posted.msg.conflate(msg);\n    });\n\n    // Enqueue the message if it was not conflated.\n    if (!conflated) {\n      enqueueMessage(handler, msg);\n    }\n  }\n\n  /**\n   * Install a message hook for a message handler.\n   *\n   * @param handler - The message handler of interest.\n   *\n   * @param hook - The message hook to install.\n   *\n   * #### Notes\n   * A message hook is invoked before a message is delivered to the\n   * handler. If the hook returns `false`, no other hooks will be\n   * invoked and the message will not be delivered to the handler.\n   *\n   * The most recently installed message hook is executed first.\n   *\n   * If the hook is already installed, this is a no-op.\n   */\n  export function installMessageHook(\n    handler: IMessageHandler,\n    hook: MessageHook\n  ): void {\n    // Look up the hooks for the handler.\n    let hooks = messageHooks.get(handler);\n\n    // Bail early if the hook is already installed.\n    if (hooks && hooks.indexOf(hook) !== -1) {\n      return;\n    }\n\n    // Add the hook to the end, so it will be the first to execute.\n    if (!hooks) {\n      messageHooks.set(handler, [hook]);\n    } else {\n      hooks.push(hook);\n    }\n  }\n\n  /**\n   * Remove an installed message hook for a message handler.\n   *\n   * @param handler - The message handler of interest.\n   *\n   * @param hook - The message hook to remove.\n   *\n   * #### Notes\n   * It is safe to call this function while the hook is executing.\n   *\n   * If the hook is not installed, this is a no-op.\n   */\n  export function removeMessageHook(\n    handler: IMessageHandler,\n    hook: MessageHook\n  ): void {\n    // Lookup the hooks for the handler.\n    let hooks = messageHooks.get(handler);\n\n    // Bail early if the hooks do not exist.\n    if (!hooks) {\n      return;\n    }\n\n    // Lookup the index of the hook and bail if not found.\n    let i = hooks.indexOf(hook);\n    if (i === -1) {\n      return;\n    }\n\n    // Clear the hook and schedule a cleanup of the array.\n    hooks[i] = null;\n    scheduleCleanup(hooks);\n  }\n\n  /**\n   * Clear all message data associated with a message handler.\n   *\n   * @param handler - The message handler of interest.\n   *\n   * #### Notes\n   * This will clear all posted messages and hooks for the handler.\n   */\n  export function clearData(handler: IMessageHandler): void {\n    // Lookup the hooks for the handler.\n    let hooks = messageHooks.get(handler);\n\n    // Clear all messsage hooks for the handler.\n    if (hooks && hooks.length > 0) {\n      ArrayExt.fill(hooks, null);\n      scheduleCleanup(hooks);\n    }\n\n    // Clear all posted messages for the handler.\n    for (const posted of messageQueue) {\n      if (posted.handler === handler) {\n        posted.handler = null;\n        posted.msg = null;\n      }\n    }\n  }\n\n  /**\n   * Process the pending posted messages in the queue immediately.\n   *\n   * #### Notes\n   * This function is useful when posted messages must be processed immediately.\n   *\n   * This function should normally not be needed, but it may be\n   * required to work around certain browser idiosyncrasies.\n   *\n   * Recursing into this function is a no-op.\n   */\n  export function flush(): void {\n    // Bail if recursion is detected or if there is no pending task.\n    if (flushGuard || pending === null) {\n      return;\n    }\n\n    // Unschedule the pending loop task.\n    pending();\n    pending = null;\n\n    // Run the message loop within the recursion guard.\n    flushGuard = true;\n    runMessageLoop();\n    flushGuard = false;\n  }\n\n  /**\n   * A type alias for the exception handler function.\n   */\n  export type ExceptionHandler = (err: Error) => void;\n\n  /**\n   * Get the message loop exception handler.\n   *\n   * @returns The current exception handler.\n   *\n   * #### Notes\n   * The default exception handler is `console.error`.\n   */\n  export function getExceptionHandler(): ExceptionHandler {\n    return exceptionHandler;\n  }\n\n  /**\n   * Set the message loop exception handler.\n   *\n   * @param handler - The function to use as the exception handler.\n   *\n   * @returns The old exception handler.\n   *\n   * #### Notes\n   * The exception handler is invoked when a message handler or a\n   * message hook throws an exception.\n   */\n  export function setExceptionHandler(\n    handler: ExceptionHandler\n  ): ExceptionHandler {\n    let old = exceptionHandler;\n    exceptionHandler = handler;\n    return old;\n  }\n\n  /**\n   * A type alias for a posted message pair.\n   */\n  type PostedMessage = { handler: IMessageHandler | null; msg: Message | null };\n\n  /**\n   * The queue of posted message pairs.\n   */\n  const messageQueue = new LinkedList<PostedMessage>();\n\n  /**\n   * A mapping of handler to array of installed message hooks.\n   */\n  const messageHooks = new WeakMap<\n    IMessageHandler,\n    Array<MessageHook | null>\n  >();\n\n  /**\n   * A set of message hook arrays which are pending cleanup.\n   */\n  const dirtySet = new Set<Array<MessageHook | null>>();\n\n  /**\n   * The message loop exception handler.\n   */\n  let exceptionHandler: ExceptionHandler = (err: Error) => {\n    console.error(err);\n  };\n\n  /**\n   * A guard flag to prevent flush recursion.\n   */\n  let flushGuard = false;\n\n  /**\n   * Invoke a message hook with the specified handler and message.\n   *\n   * Returns the result of the hook, or `true` if the hook throws.\n   *\n   * Exceptions in the hook will be caught and logged.\n   */\n  function invokeHook(\n    hook: MessageHook,\n    handler: IMessageHandler,\n    msg: Message\n  ): boolean {\n    let result = true;\n    try {\n      if (typeof hook === 'function') {\n        result = hook(handler, msg);\n      } else {\n        result = hook.messageHook(handler, msg);\n      }\n    } catch (err) {\n      exceptionHandler(err);\n    }\n    return result;\n  }\n\n  /**\n   * Invoke a message handler with the specified message.\n   *\n   * Exceptions in the handler will be caught and logged.\n   */\n  function invokeHandler(handler: IMessageHandler, msg: Message): void {\n    try {\n      handler.processMessage(msg);\n    } catch (err) {\n      exceptionHandler(err);\n    }\n  }\n\n  /**\n   * Add a message to the end of the message queue.\n   *\n   * This will automatically schedule a run of the message loop.\n   */\n  function enqueueMessage(handler: IMessageHandler, msg: Message): void {\n    // Add the posted message to the queue.\n    messageQueue.addLast({ handler, msg });\n\n    // Bail if a loop task is already pending.\n    if (pending !== null) {\n      return;\n    }\n\n    // Schedule a run of the message loop.\n    pending = schedule(runMessageLoop);\n  }\n\n  /**\n   * Run an iteration of the message loop.\n   *\n   * This will process all pending messages in the queue. If a message\n   * is added to the queue while the message loop is running, it will\n   * be processed on the next cycle of the loop.\n   */\n  function runMessageLoop(): void {\n    // Clear the task so the next loop can be scheduled.\n    pending = null;\n\n    // If the message queue is empty, there is nothing else to do.\n    if (messageQueue.isEmpty) {\n      return;\n    }\n\n    // Add a sentinel value to the end of the queue. The queue will\n    // only be processed up to the sentinel. Messages posted during\n    // this cycle will execute on the next cycle.\n    let sentinel: PostedMessage = { handler: null, msg: null };\n    messageQueue.addLast(sentinel);\n\n    // Enter the message loop.\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      // Remove the first posted message in the queue.\n      let posted = messageQueue.removeFirst()!;\n\n      // If the value is the sentinel, exit the loop.\n      if (posted === sentinel) {\n        return;\n      }\n\n      // Dispatch the message if it has not been cleared.\n      if (posted.handler && posted.msg) {\n        sendMessage(posted.handler, posted.msg);\n      }\n    }\n  }\n\n  /**\n   * Schedule a cleanup of a message hooks array.\n   *\n   * This will add the array to the dirty set and schedule a deferred\n   * cleanup of the array contents. On cleanup, any `null` hook will\n   * be removed from the array.\n   */\n  function scheduleCleanup(hooks: Array<MessageHook | null>): void {\n    if (dirtySet.size === 0) {\n      schedule(cleanupDirtySet);\n    }\n    dirtySet.add(hooks);\n  }\n\n  /**\n   * Cleanup the message hook arrays in the dirty set.\n   *\n   * This function should only be invoked asynchronously, when the\n   * stack frame is guaranteed to not be on the path of user code.\n   */\n  function cleanupDirtySet(): void {\n    dirtySet.forEach(cleanupHooks);\n    dirtySet.clear();\n  }\n\n  /**\n   * Cleanup the dirty hooks in a message hooks array.\n   *\n   * This will remove any `null` hook from the array.\n   *\n   * This function should only be invoked asynchronously, when the\n   * stack frame is guaranteed to not be on the path of user code.\n   */\n  function cleanupHooks(hooks: Array<MessageHook | null>): void {\n    ArrayExt.removeAllWhere(hooks, isNull);\n  }\n\n  /**\n   * Test whether a value is `null`.\n   */\n  function isNull<T>(value: T | null): boolean {\n    return value === null;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * @packageDocumentation\n * @module properties\n */\n\n/**\n * A class which attaches a value to an external object.\n *\n * #### Notes\n * Attached properties are used to extend the state of an object with\n * semantic data from an unrelated class. They also encapsulate value\n * creation, coercion, and notification.\n *\n * Because attached property values are stored in a hash table, which\n * in turn is stored in a WeakMap keyed on the owner object, there is\n * non-trivial storage overhead involved in their use. The pattern is\n * therefore best used for the storage of rare data.\n */\nexport class AttachedProperty<T, U> {\n  /**\n   * Construct a new attached property.\n   *\n   * @param options - The options for initializing the property.\n   */\n  constructor(options: AttachedProperty.IOptions<T, U>) {\n    this.name = options.name;\n    this._create = options.create;\n    this._coerce = options.coerce || null;\n    this._compare = options.compare || null;\n    this._changed = options.changed || null;\n  }\n\n  /**\n   * The human readable name for the property.\n   */\n  readonly name: string;\n\n  /**\n   * Get the current value of the property for a given owner.\n   *\n   * @param owner - The property owner of interest.\n   *\n   * @returns The current value of the property.\n   *\n   * #### Notes\n   * If the value has not yet been set, the default value will be\n   * computed and assigned as the current value of the property.\n   */\n  get(owner: T): U {\n    let value: U;\n    let map = Private.ensureMap(owner);\n    if (this._pid in map) {\n      value = map[this._pid];\n    } else {\n      value = map[this._pid] = this._createValue(owner);\n    }\n    return value;\n  }\n\n  /**\n   * Set the current value of the property for a given owner.\n   *\n   * @param owner - The property owner of interest.\n   *\n   * @param value - The value for the property.\n   *\n   * #### Notes\n   * If the value has not yet been set, the default value will be\n   * computed and used as the previous value for the comparison.\n   */\n  set(owner: T, value: U): void {\n    let oldValue: U;\n    let map = Private.ensureMap(owner);\n    if (this._pid in map) {\n      oldValue = map[this._pid];\n    } else {\n      oldValue = map[this._pid] = this._createValue(owner);\n    }\n    let newValue = this._coerceValue(owner, value);\n    this._maybeNotify(owner, oldValue, (map[this._pid] = newValue));\n  }\n\n  /**\n   * Explicitly coerce the current property value for a given owner.\n   *\n   * @param owner - The property owner of interest.\n   *\n   * #### Notes\n   * If the value has not yet been set, the default value will be\n   * computed and used as the previous value for the comparison.\n   */\n  coerce(owner: T): void {\n    let oldValue: U;\n    let map = Private.ensureMap(owner);\n    if (this._pid in map) {\n      oldValue = map[this._pid];\n    } else {\n      oldValue = map[this._pid] = this._createValue(owner);\n    }\n    let newValue = this._coerceValue(owner, oldValue);\n    this._maybeNotify(owner, oldValue, (map[this._pid] = newValue));\n  }\n\n  /**\n   * Get or create the default value for the given owner.\n   */\n  private _createValue(owner: T): U {\n    let create = this._create;\n    return create(owner);\n  }\n\n  /**\n   * Coerce the value for the given owner.\n   */\n  private _coerceValue(owner: T, value: U): U {\n    let coerce = this._coerce;\n    return coerce ? coerce(owner, value) : value;\n  }\n\n  /**\n   * Compare the old value and new value for equality.\n   */\n  private _compareValue(oldValue: U, newValue: U): boolean {\n    let compare = this._compare;\n    return compare ? compare(oldValue, newValue) : oldValue === newValue;\n  }\n\n  /**\n   * Run the change notification if the given values are different.\n   */\n  private _maybeNotify(owner: T, oldValue: U, newValue: U): void {\n    let changed = this._changed;\n    if (changed && !this._compareValue(oldValue, newValue)) {\n      changed(owner, oldValue, newValue);\n    }\n  }\n\n  private _pid = Private.nextPID();\n  private _create: (owner: T) => U;\n  private _coerce: ((owner: T, value: U) => U) | null;\n  private _compare: ((oldValue: U, newValue: U) => boolean) | null;\n  private _changed: ((owner: T, oldValue: U, newValue: U) => void) | null;\n}\n\n/**\n * The namespace for the `AttachedProperty` class statics.\n */\nexport namespace AttachedProperty {\n  /**\n   * The options object used to initialize an attached property.\n   */\n  export interface IOptions<T, U> {\n    /**\n     * The human readable name for the property.\n     *\n     * #### Notes\n     * By convention, this should be the same as the name used to define\n     * the public accessor for the property value.\n     *\n     * This **does not** have an effect on the property lookup behavior.\n     * Multiple properties may share the same name without conflict.\n     */\n    name: string;\n\n    /**\n     * A factory function used to create the default property value.\n     *\n     * #### Notes\n     * This will be called whenever the property value is required,\n     * but has not yet been set for a given owner.\n     */\n    create: (owner: T) => U;\n\n    /**\n     * A function used to coerce a supplied value into the final value.\n     *\n     * #### Notes\n     * This will be called whenever the property value is changed, or\n     * when the property is explicitly coerced. The return value will\n     * be used as the final value of the property.\n     *\n     * This will **not** be called for the initial default value.\n     */\n    coerce?: (owner: T, value: U) => U;\n\n    /**\n     * A function used to compare two values for equality.\n     *\n     * #### Notes\n     * This is called to determine if the property value has changed.\n     * It should return `true` if the given values are equivalent, or\n     * `false` if they are different.\n     *\n     * If this is not provided, it defaults to the `===` operator.\n     */\n    compare?: (oldValue: U, newValue: U) => boolean;\n\n    /**\n     * A function called when the property value has changed.\n     *\n     * #### Notes\n     * This will be invoked when the property value is changed and the\n     * comparator indicates that the old value is not equal to the new\n     * value.\n     *\n     * This will **not** be called for the initial default value.\n     */\n    changed?: (owner: T, oldValue: U, newValue: U) => void;\n  }\n\n  /**\n   * Clear the stored property data for the given owner.\n   *\n   * @param owner - The property owner of interest.\n   *\n   * #### Notes\n   * This will clear all property values for the owner, but it will\n   * **not** run the change notification for any of the properties.\n   */\n  export function clearData(owner: unknown): void {\n    Private.ownerData.delete(owner);\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A typedef for a mapping of property id to property value.\n   */\n  export type PropertyMap = { [key: string]: any };\n\n  /**\n   * A weak mapping of property owner to property map.\n   */\n  export const ownerData = new WeakMap<any, PropertyMap>();\n\n  /**\n   * A function which computes successive unique property ids.\n   */\n  export const nextPID = (() => {\n    let id = 0;\n    return () => {\n      let rand = Math.random();\n      let stem = `${rand}`.slice(2);\n      return `pid-${stem}-${id++}`;\n    };\n  })();\n\n  /**\n   * Lookup the data map for the property owner.\n   *\n   * This will create the map if one does not already exist.\n   */\n  export function ensureMap(owner: unknown): PropertyMap {\n    let map = ownerData.get(owner);\n    if (map) {\n      return map;\n    }\n    map = Object.create(null) as PropertyMap;\n    ownerData.set(owner, map);\n    return map;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * @packageDocumentation\n * @module dragdrop\n */\nimport { MimeData } from '@lumino/coreutils';\n\nimport { DisposableDelegate, IDisposable } from '@lumino/disposable';\n\n/**\n * @deprecated\n *\n * #### Notes\n * This interface is deprecated. Use Drag.Event instead.\n */\nexport interface IDragEvent extends Drag.Event {}\n\n/**\n * An object which manages a drag-drop operation.\n *\n * A drag object dispatches four different events to drop targets:\n *\n * - `'lm-dragenter'` - Dispatched when the mouse enters the target\n *   element. This event must be canceled in order to receive any\n *   of the other events.\n *\n * - `'lm-dragover'` - Dispatched when the mouse moves over the drop\n *   target. It must cancel the event and set the `dropAction` to one\n *   of the supported actions in order to receive drop events.\n *\n * - `'lm-dragleave'` - Dispatched when the mouse leaves the target\n *   element. This includes moving the mouse into child elements.\n *\n * - `'lm-drop'`- Dispatched when the mouse is released over the target\n *   element when the target indicates an appropriate drop action. If\n *   the event is canceled, the indicated drop action is returned to\n *   the initiator through the resolved promise.\n *\n * A drag operation can be terminated at any time by pressing `Escape`\n * or by disposing the drag object.\n *\n * A drag object has the ability to automatically scroll a scrollable\n * element when the mouse is hovered near one of its edges. To enable\n * this, add the `data-lm-dragscroll` attribute to any element which\n * the drag object should consider for scrolling.\n *\n * #### Notes\n * This class is designed to be used when dragging and dropping custom\n * data *within* a single application. It is *not* a replacement for\n * the native drag-drop API. Instead, it provides an API which allows\n * drag operations to be initiated programmatically and enables the\n * transfer of arbitrary non-string objects; features which are not\n * possible with the native drag-drop API.\n */\nexport class Drag implements IDisposable {\n  /**\n   * Construct a new drag object.\n   *\n   * @param options - The options for initializing the drag.\n   */\n  constructor(options: Drag.IOptions) {\n    this.document = options.document || document;\n    this.mimeData = options.mimeData;\n    this.dragImage = options.dragImage || null;\n    this.proposedAction = options.proposedAction || 'copy';\n    this.supportedActions = options.supportedActions || 'all';\n    this.source = options.source || null;\n  }\n\n  /**\n   * Dispose of the resources held by the drag object.\n   *\n   * #### Notes\n   * This will cancel the drag operation if it is active.\n   */\n  dispose(): void {\n    // Do nothing if the drag object is already disposed.\n    if (this._disposed) {\n      return;\n    }\n    this._disposed = true;\n\n    // If there is a current target, dispatch a drag leave event.\n    if (this._currentTarget) {\n      let event = new PointerEvent('pointerup', {\n        bubbles: true,\n        cancelable: true,\n        clientX: -1,\n        clientY: -1\n      });\n      Private.dispatchDragLeave(this, this._currentTarget, null, event);\n    }\n\n    // Finalize the drag object with `'none'`.\n    this._finalize('none');\n  }\n\n  /**\n   * The mime data for the drag object.\n   */\n  readonly mimeData: MimeData;\n\n  /**\n   * The target document for dragging events.\n   */\n  readonly document: Document | ShadowRoot;\n\n  /**\n   * The drag image element for the drag object.\n   */\n  readonly dragImage: HTMLElement | null;\n\n  /**\n   * The proposed drop action for the drag object.\n   */\n  readonly proposedAction: Drag.DropAction;\n\n  /**\n   * The supported drop actions for the drag object.\n   */\n  readonly supportedActions: Drag.SupportedActions;\n\n  /**\n   * Get the drag source for the drag object.\n   */\n  readonly source: any;\n\n  /**\n   * Test whether the drag object is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._disposed;\n  }\n\n  /**\n   * Start the drag operation at the specified client position.\n   *\n   * @param clientX - The client X position for the drag start.\n   *\n   * @param clientY - The client Y position for the drag start.\n   *\n   * @returns A promise which resolves to the result of the drag.\n   *\n   * #### Notes\n   * If the drag has already been started, the promise created by the\n   * first call to `start` is returned.\n   *\n   * If the drag operation has ended, or if the drag object has been\n   * disposed, the returned promise will resolve to `'none'`.\n   *\n   * The drag object will be automatically disposed when drag operation\n   * completes. This means `Drag` objects are for single-use only.\n   *\n   * This method assumes the left mouse button is already held down.\n   */\n  start(clientX: number, clientY: number): Promise<Drag.DropAction> {\n    // If the drag object is already disposed, resolve to `none`.\n    if (this._disposed) {\n      return Promise.resolve('none');\n    }\n\n    // If the drag has already been started, return the promise.\n    if (this._promise) {\n      return this._promise;\n    }\n\n    // Install the document listeners for the drag object.\n    this._addListeners();\n\n    // Attach the drag image at the specified client position.\n    this._attachDragImage(clientX, clientY);\n\n    // Create the promise which will be resolved on completion.\n    this._promise = new Promise<Drag.DropAction>(resolve => {\n      this._resolve = resolve;\n    });\n\n    // Trigger a fake move event to kick off the drag operation.\n    let event = new PointerEvent('pointermove', {\n      bubbles: true,\n      cancelable: true,\n      clientX,\n      clientY\n    });\n    document.dispatchEvent(event);\n\n    // Return the pending promise for the drag operation.\n    return this._promise;\n  }\n\n  /**\n   * Handle the DOM events for the drag operation.\n   *\n   * @param event - The DOM event sent to the drag object.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the document. It should not be\n   * called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'pointermove':\n        this._evtPointerMove(event as PointerEvent);\n        break;\n      case 'pointerup':\n        this._evtPointerUp(event as PointerEvent);\n        break;\n      case 'keydown':\n        this._evtKeyDown(event as KeyboardEvent);\n        break;\n      default:\n        // Stop all other events during drag-drop.\n        event.preventDefault();\n        event.stopPropagation();\n        break;\n    }\n  }\n\n  /**\n   * Move the drag image element to the specified location.\n   *\n   * This is a no-op if there is no drag image element.\n   */\n  protected moveDragImage(clientX: number, clientY: number): void {\n    if (!this.dragImage) {\n      return;\n    }\n    let style = this.dragImage.style;\n    style.transform = `translate(${clientX}px, ${clientY}px)`;\n  }\n\n  /**\n   * Handle the `'pointermove'` event for the drag object.\n   */\n  private _evtPointerMove(event: PointerEvent): void {\n    // Stop all input events during drag-drop.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Update the current target node and dispatch enter/leave events.\n    this._updateCurrentTarget(event);\n\n    // Update the drag scroll element.\n    this._updateDragScroll(event);\n\n    // Move the drag image to the specified client position. This is\n    // performed *after* dispatching to prevent unnecessary reflows.\n    this.moveDragImage(event.clientX, event.clientY);\n  }\n\n  /**\n   * Handle the `'pointerup'` event for the drag object.\n   */\n  private _evtPointerUp(event: PointerEvent): void {\n    // Stop all input events during drag-drop.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Do nothing if the left button is not released.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Update the current target node and dispatch enter/leave events.\n    // This prevents a subtle issue where the DOM mutates under the\n    // cursor after the last move event but before the drop event.\n    this._updateCurrentTarget(event);\n\n    // If there is no current target, finalize with `'none'`.\n    if (!this._currentTarget) {\n      this._finalize('none');\n      return;\n    }\n\n    // If the last drop action was `'none'`, dispatch a leave event\n    // to the current target and finalize the drag with `'none'`.\n    if (this._dropAction === 'none') {\n      Private.dispatchDragLeave(this, this._currentTarget, null, event);\n      this._finalize('none');\n      return;\n    }\n\n    // Dispatch the drop event at the current target and finalize\n    // with the resulting drop action.\n    let action = Private.dispatchDrop(this, this._currentTarget, event);\n    this._finalize(action);\n  }\n\n  /**\n   * Handle the `'keydown'` event for the drag object.\n   */\n  private _evtKeyDown(event: KeyboardEvent): void {\n    // Stop all input events during drag-drop.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Cancel the drag if `Escape` is pressed.\n    if (event.keyCode === 27) {\n      this.dispose();\n    }\n  }\n\n  /**\n   * Add the document event listeners for the drag object.\n   */\n  private _addListeners(): void {\n    document.addEventListener('pointerdown', this, true);\n    document.addEventListener('pointermove', this, true);\n    document.addEventListener('pointerup', this, true);\n    document.addEventListener('pointerenter', this, true);\n    document.addEventListener('pointerleave', this, true);\n    document.addEventListener('pointerover', this, true);\n    document.addEventListener('pointerout', this, true);\n    document.addEventListener('keydown', this, true);\n    document.addEventListener('keyup', this, true);\n    document.addEventListener('keypress', this, true);\n    document.addEventListener('contextmenu', this, true);\n  }\n\n  /**\n   * Remove the document event listeners for the drag object.\n   */\n  private _removeListeners(): void {\n    document.removeEventListener('pointerdown', this, true);\n    document.removeEventListener('pointermove', this, true);\n    document.removeEventListener('pointerup', this, true);\n    document.removeEventListener('pointerenter', this, true);\n    document.removeEventListener('pointerleave', this, true);\n    document.removeEventListener('pointerover', this, true);\n    document.removeEventListener('pointerout', this, true);\n    document.removeEventListener('keydown', this, true);\n    document.removeEventListener('keyup', this, true);\n    document.removeEventListener('keypress', this, true);\n    document.removeEventListener('contextmenu', this, true);\n  }\n\n  /**\n   * Update the drag scroll element under the mouse.\n   */\n  private _updateDragScroll(event: PointerEvent): void {\n    // Find the scroll target under the mouse.\n    let target = Private.findScrollTarget(event);\n\n    // Bail if there is nothing to scroll.\n    if (!this._scrollTarget && !target) {\n      return;\n    }\n\n    // Start the scroll loop if needed.\n    if (!this._scrollTarget) {\n      setTimeout(this._onScrollFrame, 500);\n    }\n\n    // Update the scroll target.\n    this._scrollTarget = target;\n  }\n\n  /**\n   * Update the current target node using the given mouse event.\n   */\n  private _updateCurrentTarget(event: PointerEvent): void {\n    // Fetch common local state.\n    let prevTarget = this._currentTarget;\n    let currTarget = this._currentTarget;\n    let prevElem = this._currentElement;\n\n    // Find the current indicated element at the given position.\n    let currElem = Private.findElementBehindBackdrop(event, this.document);\n\n    // Update the current element reference.\n    this._currentElement = currElem;\n\n    // If the indicated element changes from the previous iteration,\n    // and is different from the current target, dispatch the exit\n    // event to the target.\n    if (currElem !== prevElem && currElem !== currTarget) {\n      Private.dispatchDragExit(this, currTarget, currElem, event);\n    }\n\n    // If the indicated element changes from the previous iteration,\n    // and is different from the current target, dispatch the enter\n    // event and compute the new target element.\n    if (currElem !== prevElem && currElem !== currTarget) {\n      currTarget = Private.dispatchDragEnter(this, currElem, currTarget, event);\n    }\n\n    // If the current target element has changed, update the current\n    // target reference and dispatch the leave event to the old target.\n    if (currTarget !== prevTarget) {\n      this._currentTarget = currTarget;\n      Private.dispatchDragLeave(this, prevTarget, currTarget, event);\n    }\n\n    // Dispatch the drag over event and update the drop action.\n    let action = Private.dispatchDragOver(this, currTarget, event);\n    this._setDropAction(action);\n  }\n\n  /**\n   * Attach the drag image element at the specified location.\n   *\n   * This is a no-op if there is no drag image element.\n   */\n  private _attachDragImage(clientX: number, clientY: number): void {\n    if (!this.dragImage) {\n      return;\n    }\n    this.dragImage.classList.add('lm-mod-drag-image');\n    let style = this.dragImage.style;\n    style.pointerEvents = 'none';\n    style.position = 'fixed';\n    style.transform = `translate(${clientX}px, ${clientY}px)`;\n    const body =\n      this.document instanceof Document\n        ? this.document.body\n        : (this.document.firstElementChild as HTMLElement);\n    body.appendChild(this.dragImage);\n  }\n\n  /**\n   * Detach the drag image element from the DOM.\n   *\n   * This is a no-op if there is no drag image element.\n   */\n  private _detachDragImage(): void {\n    if (!this.dragImage) {\n      return;\n    }\n    let parent = this.dragImage.parentNode;\n    if (!parent) {\n      return;\n    }\n    parent.removeChild(this.dragImage);\n  }\n\n  /**\n   * Set the internal drop action state and update the drag cursor.\n   */\n  private _setDropAction(action: Drag.DropAction): void {\n    action = Private.validateAction(action, this.supportedActions);\n    if (this._override && this._dropAction === action) {\n      return;\n    }\n    switch (action) {\n      case 'none':\n        this._dropAction = action;\n        this._override = Drag.overrideCursor('no-drop', this.document);\n        break;\n      case 'copy':\n        this._dropAction = action;\n        this._override = Drag.overrideCursor('copy', this.document);\n        break;\n      case 'link':\n        this._dropAction = action;\n        this._override = Drag.overrideCursor('alias', this.document);\n        break;\n      case 'move':\n        this._dropAction = action;\n        this._override = Drag.overrideCursor('move', this.document);\n        break;\n    }\n  }\n\n  /**\n   * Finalize the drag operation and resolve the drag promise.\n   */\n  private _finalize(action: Drag.DropAction): void {\n    // Store the resolve function as a temp variable.\n    let resolve = this._resolve;\n\n    // Remove the document event listeners.\n    this._removeListeners();\n\n    // Detach the drag image.\n    this._detachDragImage();\n\n    // Dispose of the cursor override.\n    if (this._override) {\n      this._override.dispose();\n      this._override = null;\n    }\n\n    // Clear the mime data.\n    this.mimeData.clear();\n\n    // Clear the rest of the internal drag state.\n    this._disposed = true;\n    this._dropAction = 'none';\n    this._currentTarget = null;\n    this._currentElement = null;\n    this._scrollTarget = null;\n    this._promise = null;\n    this._resolve = null;\n\n    // Finally, resolve the promise to the given drop action.\n    if (resolve) {\n      resolve(action);\n    }\n  }\n\n  /**\n   * The scroll loop handler function.\n   */\n  private _onScrollFrame = () => {\n    // Bail early if there is no scroll target.\n    if (!this._scrollTarget) {\n      return;\n    }\n\n    // Unpack the scroll target.\n    let { element, edge, distance } = this._scrollTarget;\n\n    // Calculate the scroll delta using nonlinear acceleration.\n    let d = Private.SCROLL_EDGE_SIZE - distance;\n    let f = Math.pow(d / Private.SCROLL_EDGE_SIZE, 2);\n    let s = Math.max(1, Math.round(f * Private.SCROLL_EDGE_SIZE));\n\n    // Scroll the element in the specified direction.\n    switch (edge) {\n      case 'top':\n        element.scrollTop -= s;\n        break;\n      case 'left':\n        element.scrollLeft -= s;\n        break;\n      case 'right':\n        element.scrollLeft += s;\n        break;\n      case 'bottom':\n        element.scrollTop += s;\n        break;\n    }\n\n    // Request the next cycle of the scroll loop.\n    requestAnimationFrame(this._onScrollFrame);\n  };\n\n  private _disposed = false;\n  private _dropAction: Drag.DropAction = 'none';\n  private _override: IDisposable | null = null;\n  private _currentTarget: Element | null = null;\n  private _currentElement: Element | null = null;\n  private _promise: Promise<Drag.DropAction> | null = null;\n  private _scrollTarget: Private.IScrollTarget | null = null;\n  private _resolve: ((value: Drag.DropAction) => void) | null = null;\n}\n\n/**\n * The namespace for the `Drag` class statics.\n */\nexport namespace Drag {\n  /**\n   * A type alias which defines the possible independent drop actions.\n   */\n  export type DropAction = 'none' | 'copy' | 'link' | 'move';\n\n  /**\n   * A type alias which defines the possible supported drop actions.\n   */\n  export type SupportedActions =\n    | DropAction\n    | 'copy-link'\n    | 'copy-move'\n    | 'link-move'\n    | 'all';\n\n  /**\n   * An options object for initializing a `Drag` object.\n   */\n  export interface IOptions {\n    /**\n     * The root element for dragging DOM artifacts (defaults to document).\n     */\n    document?: Document | ShadowRoot;\n\n    /**\n     * The populated mime data for the drag operation.\n     */\n    mimeData: MimeData;\n\n    /**\n     * An optional drag image which follows the mouse cursor.\n     *\n     * #### Notes\n     * The drag image can be any DOM element. It is not limited to\n     * image or canvas elements as with the native drag-drop APIs.\n     *\n     * If provided, this will be positioned at the mouse cursor on each\n     * mouse move event. A CSS transform can be used to offset the node\n     * from its specified position.\n     *\n     * The drag image will automatically have the `lm-mod-drag-image`\n     * class name added.\n     *\n     * The default value is `null`.\n     */\n    dragImage?: HTMLElement;\n\n    /**\n     * The optional proposed drop action for the drag operation.\n     *\n     * #### Notes\n     * This can be provided as a hint to the drop targets as to which\n     * drop action is preferred.\n     *\n     * The default value is `'copy'`.\n     */\n    proposedAction?: DropAction;\n\n    /**\n     * The drop actions supported by the drag initiator.\n     *\n     * #### Notes\n     * A drop target must indicate that it intends to perform one of the\n     * supported actions in order to receive a drop event. However, it is\n     * not required to *actually* perform that action when handling the\n     * drop event. Therefore, the initiator must be prepared to handle\n     * any drop action performed by a drop target.\n     *\n     * The default value is `'all'`.\n     */\n    supportedActions?: SupportedActions;\n\n    /**\n     * An optional object which indicates the source of the drag.\n     *\n     * #### Notes\n     * For advanced applications, the drag initiator may wish to expose\n     * a source object to the drop targets. That object can be specified\n     * here and will be carried along with the drag events.\n     *\n     * The default value is `null`.\n     */\n    source?: any;\n  }\n\n  /**\n   * A custom event used for drag-drop operations.\n   *\n   * #### Notes\n   * In order to receive `'lm-dragover'`, `'lm-dragleave'`, or `'lm-drop'`\n   * events, a drop target must cancel the `'lm-dragenter'` event by\n   * calling the event's `preventDefault()` method.\n   */\n  export class Event extends DragEvent {\n    constructor(event: PointerEvent, options: Event.IOptions) {\n      super(options.type, {\n        bubbles: true,\n        cancelable: true,\n        altKey: event.altKey,\n        button: event.button,\n        clientX: event.clientX,\n        clientY: event.clientY,\n        ctrlKey: event.ctrlKey,\n        detail: 0,\n        metaKey: event.metaKey,\n        relatedTarget: options.related,\n        screenX: event.screenX,\n        screenY: event.screenY,\n        shiftKey: event.shiftKey,\n        view: window\n      });\n\n      const { drag } = options;\n      this.dropAction = 'none';\n      this.mimeData = drag.mimeData;\n      this.proposedAction = drag.proposedAction;\n      this.supportedActions = drag.supportedActions;\n      this.source = drag.source;\n    }\n\n    /**\n     * The drop action supported or taken by the drop target.\n     *\n     * #### Notes\n     * At the start of each event, this value will be `'none'`. During a\n     * `'lm-dragover'` event, the drop target must set this value to one\n     * of the supported actions, or the drop event will not occur.\n     *\n     * When handling the drop event, the drop target should set this\n     * to the action which was *actually* taken. This value will be\n     * reported back to the drag initiator.\n     */\n    dropAction: DropAction;\n\n    /**\n     * The drop action proposed by the drag initiator.\n     *\n     * #### Notes\n     * This is the action which is *preferred* by the drag initiator. The\n     * drop target is not required to perform this action, but should if\n     * it all possible.\n     */\n    readonly proposedAction: DropAction;\n\n    /**\n     * The drop actions supported by the drag initiator.\n     *\n     * #### Notes\n     * If the `dropAction` is not set to one of the supported actions\n     * during the `'lm-dragover'` event, the drop event will not occur.\n     */\n    readonly supportedActions: SupportedActions;\n\n    /**\n     * The mime data associated with the event.\n     *\n     * #### Notes\n     * This is mime data provided by the drag initiator. Drop targets\n     * should use this data to determine if they can handle the drop.\n     */\n    readonly mimeData: MimeData;\n\n    /**\n     * The source object of the drag, as provided by the drag initiator.\n     *\n     * #### Notes\n     * For advanced applications, the drag initiator may wish to expose\n     * a source object to the drop targets. That will be provided here\n     * if given by the drag initiator, otherwise it will be `null`.\n     */\n    readonly source: any;\n  }\n\n  /**\n   * The namespace for the `Event` class statics.\n   */\n  export namespace Event {\n    /**\n     * An options object for initializing a `Drag` object.\n     */\n    export interface IOptions {\n      /**\n       * The drag object to use for seeding the drag data.\n       */\n      drag: Drag;\n\n      /**\n       * The related target for the event, or `null`.\n       */\n      related: Element | null;\n\n      /**\n       * The drag event type.\n       */\n      type:\n        | 'lm-dragenter'\n        | 'lm-dragexit'\n        | 'lm-dragleave'\n        | 'lm-dragover'\n        | 'lm-drop';\n    }\n  }\n\n  /**\n   * Override the cursor icon for the entire document.\n   *\n   * @param cursor - The string representing the cursor style.\n   *\n   * @returns A disposable which will clear the override when disposed.\n   *\n   * #### Notes\n   * The most recent call to `overrideCursor` takes precedence.\n   * Disposing an old override has no effect on the current override.\n   *\n   * This utility function is used by the `Drag` class to override the\n   * mouse cursor during a drag-drop operation, but it can also be used\n   * by other classes to fix the cursor icon during normal mouse drags.\n   *\n   * #### Example\n   * ```typescript\n   * import { Drag } from '@lumino/dragdrop';\n   *\n   * // Force the cursor to be 'wait' for the entire document.\n   * let override = Drag.overrideCursor('wait');\n   *\n   * // Clear the override by disposing the return value.\n   * override.dispose();\n   * ```\n   */\n  export function overrideCursor(\n    cursor: string,\n    doc: Document | ShadowRoot = document\n  ): IDisposable {\n    return Private.overrideCursor(cursor, doc);\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * The size of a drag scroll edge, in pixels.\n   */\n  export const SCROLL_EDGE_SIZE = 20;\n\n  /**\n   * Validate the given action is one of the supported actions.\n   *\n   * Returns the given action or `'none'` if the action is unsupported.\n   */\n  export function validateAction(\n    action: Drag.DropAction,\n    supported: Drag.SupportedActions\n  ): Drag.DropAction {\n    return actionTable[action] & supportedTable[supported] ? action : 'none';\n  }\n\n  /**\n   * An object which holds the scroll target data.\n   */\n  export interface IScrollTarget {\n    /**\n     * The element to be scrolled.\n     */\n    element: Element;\n\n    /**\n     * The scroll edge underneath the mouse.\n     */\n    edge: 'top' | 'left' | 'right' | 'bottom';\n\n    /**\n     * The distance from the mouse to the scroll edge.\n     */\n    distance: number;\n  }\n\n  /**\n   * Find the event target using pointer position if given, or otherwise\n   * the central position of the backdrop.\n   */\n  export function findElementBehindBackdrop(\n    event?: PointerEvent,\n    root: Document | ShadowRoot = document\n  ) {\n    if (event) {\n      // Check if we already cached element for this event.\n      if (lastElementEventSearch && event == lastElementEventSearch.event) {\n        return lastElementEventSearch.element;\n      }\n      Private.cursorBackdrop.style.zIndex = '-1000';\n      const element: Element | null = root.elementFromPoint(\n        event.clientX,\n        event.clientY\n      );\n      Private.cursorBackdrop.style.zIndex = '';\n      lastElementEventSearch = { event, element };\n      return element;\n    } else {\n      const transform = cursorBackdrop.style.transform;\n      if (lastElementSearch && transform === lastElementSearch.transform) {\n        return lastElementSearch.element;\n      }\n      const bbox = Private.cursorBackdrop.getBoundingClientRect();\n      Private.cursorBackdrop.style.zIndex = '-1000';\n      const element = root.elementFromPoint(\n        bbox.left + bbox.width / 2,\n        bbox.top + bbox.height / 2\n      );\n      Private.cursorBackdrop.style.zIndex = '';\n      lastElementSearch = { transform, element };\n      return element;\n    }\n  }\n\n  let lastElementEventSearch: {\n    event: PointerEvent;\n    element: Element | null;\n  } | null = null;\n  let lastElementSearch: {\n    transform: string;\n    element: Element | null;\n  } | null = null;\n\n  /**\n   * Find the drag scroll target under the mouse, if any.\n   */\n  export function findScrollTarget(event: PointerEvent): IScrollTarget | null {\n    // Look up the client mouse position.\n    let x = event.clientX;\n    let y = event.clientY;\n\n    // Get the element under the mouse.\n    let element: Element | null = findElementBehindBackdrop(event);\n\n    // Search for a scrollable target based on the mouse position.\n    // The null assert in third clause of for-loop is required due to:\n    // https://github.com/Microsoft/TypeScript/issues/14143\n    for (; element; element = element!.parentElement) {\n      // Ignore elements which are not marked as scrollable.\n      if (!element.hasAttribute('data-lm-dragscroll')) {\n        continue;\n      }\n\n      // Set up the coordinate offsets for the element.\n      let offsetX = 0;\n      let offsetY = 0;\n      if (element === document.body) {\n        offsetX = window.pageXOffset;\n        offsetY = window.pageYOffset;\n      }\n\n      // Get the element bounds in viewport coordinates.\n      let r = element.getBoundingClientRect();\n      let top = r.top + offsetY;\n      let left = r.left + offsetX;\n      let right = left + r.width;\n      let bottom = top + r.height;\n\n      // Skip the element if it's not under the mouse.\n      if (x < left || x >= right || y < top || y >= bottom) {\n        continue;\n      }\n\n      // Compute the distance to each edge.\n      let dl = x - left + 1;\n      let dt = y - top + 1;\n      let dr = right - x;\n      let db = bottom - y;\n\n      // Find the smallest of the edge distances.\n      let distance = Math.min(dl, dt, dr, db);\n\n      // Skip the element if the mouse is not within a scroll edge.\n      if (distance > SCROLL_EDGE_SIZE) {\n        continue;\n      }\n\n      // Set up the edge result variable.\n      let edge: 'top' | 'left' | 'right' | 'bottom';\n\n      // Find the edge for the computed distance.\n      switch (distance) {\n        case db:\n          edge = 'bottom';\n          break;\n        case dt:\n          edge = 'top';\n          break;\n        case dr:\n          edge = 'right';\n          break;\n        case dl:\n          edge = 'left';\n          break;\n        default:\n          throw 'unreachable';\n      }\n\n      // Compute how much the element can scroll in width and height.\n      let dsw = element.scrollWidth - element.clientWidth;\n      let dsh = element.scrollHeight - element.clientHeight;\n\n      // Determine if the element should be scrolled for the edge.\n      let shouldScroll: boolean;\n      switch (edge) {\n        case 'top':\n          shouldScroll = dsh > 0 && element.scrollTop > 0;\n          break;\n        case 'left':\n          shouldScroll = dsw > 0 && element.scrollLeft > 0;\n          break;\n        case 'right':\n          shouldScroll = dsw > 0 && element.scrollLeft < dsw;\n          break;\n        case 'bottom':\n          shouldScroll = dsh > 0 && element.scrollTop < dsh;\n          break;\n        default:\n          throw 'unreachable';\n      }\n\n      // Skip the element if it should not be scrolled.\n      if (!shouldScroll) {\n        continue;\n      }\n\n      // Return the drag scroll target.\n      return { element, edge, distance };\n    }\n\n    // No drag scroll target was found.\n    return null;\n  }\n\n  /**\n   * Dispatch a drag enter event to the indicated element.\n   *\n   * @param drag - The drag object associated with the action.\n   *\n   * @param currElem - The currently indicated element, or `null`. This\n   *   is the \"immediate user selection\" from the whatwg spec.\n   *\n   * @param currTarget - The current drag target element, or `null`. This\n   *   is the \"current target element\" from the whatwg spec.\n   *\n   * @param event - The mouse event related to the action.\n   *\n   * @returns The element to use as the current drag target. This is the\n   *   \"current target element\" from the whatwg spec, and may be `null`.\n   *\n   * #### Notes\n   * This largely implements the drag enter portion of the whatwg spec:\n   * https://html.spec.whatwg.org/multipage/interaction.html#drag-and-drop-processing-model\n   */\n  export function dispatchDragEnter(\n    drag: Drag,\n    currElem: Element | null,\n    currTarget: Element | null,\n    event: PointerEvent\n  ): Element | null {\n    // If the current element is null, return null as the new target.\n    if (!currElem) {\n      return null;\n    }\n\n    // Dispatch a drag enter event to the current element.\n    let dragEvent = new Drag.Event(event, {\n      drag,\n      related: currTarget,\n      type: 'lm-dragenter'\n    });\n    let canceled = !currElem.dispatchEvent(dragEvent);\n\n    // If the event was canceled, use the current element as the new target.\n    if (canceled) {\n      return currElem;\n    }\n\n    // If the current element is the document body, keep the original target.\n    const body =\n      drag.document instanceof Document\n        ? drag.document.body\n        : (drag.document.firstElementChild as HTMLElement);\n\n    if (currElem === body) {\n      return currTarget;\n    }\n\n    // Dispatch a drag enter event on the document body.\n    dragEvent = new Drag.Event(event, {\n      drag,\n      related: currTarget,\n      type: 'lm-dragenter'\n    });\n    body.dispatchEvent(dragEvent);\n\n    // Ignore the event cancellation, and use the body as the new target.\n    return body;\n  }\n\n  /**\n   * Dispatch a drag exit event to the indicated element.\n   *\n   * @param drag - The drag object associated with the action.\n   *\n   * @param prevTarget - The previous target element, or `null`. This\n   *   is the previous \"current target element\" from the whatwg spec.\n   *\n   * @param currTarget - The current drag target element, or `null`. This\n   *   is the \"current target element\" from the whatwg spec.\n   *\n   * @param event - The mouse event related to the action.\n   *\n   * #### Notes\n   * This largely implements the drag exit portion of the whatwg spec:\n   * https://html.spec.whatwg.org/multipage/interaction.html#drag-and-drop-processing-model\n   */\n  export function dispatchDragExit(\n    drag: Drag,\n    prevTarget: Element | null,\n    currTarget: Element | null,\n    event: PointerEvent\n  ): void {\n    // If the previous target is null, do nothing.\n    if (!prevTarget) {\n      return;\n    }\n\n    // Dispatch the drag exit event to the previous target.\n    let dragEvent = new Drag.Event(event, {\n      drag,\n      related: currTarget,\n      type: 'lm-dragexit'\n    });\n    prevTarget.dispatchEvent(dragEvent);\n  }\n\n  /**\n   * Dispatch a drag leave event to the indicated element.\n   *\n   * @param drag - The drag object associated with the action.\n   *\n   * @param prevTarget - The previous target element, or `null`. This\n   *   is the previous \"current target element\" from the whatwg spec.\n   *\n   * @param currTarget - The current drag target element, or `null`. This\n   *   is the \"current target element\" from the whatwg spec.\n   *\n   * @param event - The mouse event related to the action.\n   *\n   * #### Notes\n   * This largely implements the drag leave portion of the whatwg spec:\n   * https://html.spec.whatwg.org/multipage/interaction.html#drag-and-drop-processing-model\n   */\n  export function dispatchDragLeave(\n    drag: Drag,\n    prevTarget: Element | null,\n    currTarget: Element | null,\n    event: PointerEvent\n  ): void {\n    // If the previous target is null, do nothing.\n    if (!prevTarget) {\n      return;\n    }\n\n    // Dispatch the drag leave event to the previous target.\n    let dragEvent = new Drag.Event(event, {\n      drag,\n      related: currTarget,\n      type: 'lm-dragleave'\n    });\n    prevTarget.dispatchEvent(dragEvent);\n  }\n\n  /**\n   * Dispatch a drag over event to the indicated element.\n   *\n   * @param drag - The drag object associated with the action.\n   *\n   * @param currTarget - The current drag target element, or `null`. This\n   *   is the \"current target element\" from the whatwg spec.\n   *\n   * @param event - The mouse event related to the action.\n   *\n   * @returns The `DropAction` result of the drag over event.\n   *\n   * #### Notes\n   * This largely implements the drag over portion of the whatwg spec:\n   * https://html.spec.whatwg.org/multipage/interaction.html#drag-and-drop-processing-model\n   */\n  export function dispatchDragOver(\n    drag: Drag,\n    currTarget: Element | null,\n    event: PointerEvent\n  ): Drag.DropAction {\n    // If there is no current target, the drop action is none.\n    if (!currTarget) {\n      return 'none';\n    }\n\n    // Dispatch the drag over event to the current target.\n    let dragEvent = new Drag.Event(event, {\n      drag,\n      related: null,\n      type: 'lm-dragover'\n    });\n    let canceled = !currTarget.dispatchEvent(dragEvent);\n\n    // If the event was canceled, return the drop action result.\n    if (canceled) {\n      return dragEvent.dropAction;\n    }\n\n    // Otherwise, the effective drop action is none.\n    return 'none';\n  }\n\n  /**\n   * Dispatch a drop event to the indicated element.\n   *\n   * @param drag - The drag object associated with the action.\n   *\n   * @param currTarget - The current drag target element, or `null`. This\n   *   is the \"current target element\" from the whatwg spec.\n   *\n   * @param event - The mouse event related to the action.\n   *\n   * @returns The `DropAction` result of the drop event.\n   *\n   * #### Notes\n   * This largely implements the drag over portion of the whatwg spec:\n   * https://html.spec.whatwg.org/multipage/interaction.html#drag-and-drop-processing-model\n   */\n  export function dispatchDrop(\n    drag: Drag,\n    currTarget: Element | null,\n    event: PointerEvent\n  ): Drag.DropAction {\n    // If there is no current target, the drop action is none.\n    if (!currTarget) {\n      return 'none';\n    }\n\n    // Dispatch the drop event to the current target.\n    let dragEvent = new Drag.Event(event, {\n      drag,\n      related: null,\n      type: 'lm-drop'\n    });\n    let canceled = !currTarget.dispatchEvent(dragEvent);\n\n    // If the event was canceled, return the drop action result.\n    if (canceled) {\n      return dragEvent.dropAction;\n    }\n\n    // Otherwise, the effective drop action is none.\n    return 'none';\n  }\n\n  /**\n   * A lookup table from drop action to bit value.\n   */\n  const actionTable: { [key: string]: number } = {\n    none: 0x0,\n    copy: 0x1,\n    link: 0x2,\n    move: 0x4\n  };\n\n  /**\n   * A lookup table from supported action to drop action bit mask.\n   */\n  const supportedTable: { [key: string]: number } = {\n    none: actionTable['none'],\n    copy: actionTable['copy'],\n    link: actionTable['link'],\n    move: actionTable['move'],\n    'copy-link': actionTable['copy'] | actionTable['link'],\n    'copy-move': actionTable['copy'] | actionTable['move'],\n    'link-move': actionTable['link'] | actionTable['move'],\n    all: actionTable['copy'] | actionTable['link'] | actionTable['move']\n  };\n\n  /**\n   * Implementation of `Drag.overrideCursor`.\n   */\n  export function overrideCursor(\n    cursor: string,\n    doc: Document | ShadowRoot = document\n  ): IDisposable {\n    let id = ++overrideCursorID;\n    const body =\n      doc instanceof Document\n        ? doc.body\n        : (doc.firstElementChild as HTMLElement);\n    if (!cursorBackdrop.isConnected) {\n      // Hide the backdrop until the pointer moves to avoid issues with\n      // native double click detection, used in e.g. datagrid editing.\n      cursorBackdrop.style.transform = 'scale(0)';\n      body.appendChild(cursorBackdrop);\n      resetBackdropScroll();\n      document.addEventListener('pointermove', alignBackdrop, {\n        capture: true,\n        passive: true\n      });\n      cursorBackdrop.addEventListener('scroll', propagateBackdropScroll, {\n        capture: true,\n        passive: true\n      });\n    }\n    cursorBackdrop.style.cursor = cursor;\n    return new DisposableDelegate(() => {\n      if (id === overrideCursorID && cursorBackdrop.isConnected) {\n        document.removeEventListener('pointermove', alignBackdrop, true);\n        cursorBackdrop.removeEventListener(\n          'scroll',\n          propagateBackdropScroll,\n          true\n        );\n        body.removeChild(cursorBackdrop);\n      }\n    });\n  }\n\n  /**\n   * Move cursor backdrop to match cursor position.\n   */\n  function alignBackdrop(event: PointerEvent) {\n    if (!cursorBackdrop) {\n      return;\n    }\n    cursorBackdrop.style.transform = `translate(${event.clientX}px, ${event.clientY}px)`;\n  }\n\n  /**\n   * Propagate the scroll event from the backdrop element to the scroll target.\n   * The scroll target is defined by presence of `data-lm-dragscroll` attribute.\n   */\n  function propagateBackdropScroll(_event: Event) {\n    if (!cursorBackdrop) {\n      return;\n    }\n    // Get the element under behind the centre of the cursor backdrop\n    // (essentially behind the cursor, but possibly a few pixels off).\n    let element: Element | null = findElementBehindBackdrop();\n    if (!element) {\n      return;\n    }\n    // Find scroll target.\n    const scrollTarget = element.closest('[data-lm-dragscroll]');\n    if (!scrollTarget) {\n      return;\n    }\n    // Apply the scroll delta to the correct target.\n    scrollTarget.scrollTop += cursorBackdrop.scrollTop - backdropScrollOrigin;\n    scrollTarget.scrollLeft += cursorBackdrop.scrollLeft - backdropScrollOrigin;\n\n    // Center the scroll position.\n    resetBackdropScroll();\n  }\n\n  /**\n   * Reset the backdrop scroll to allow further scrolling.\n   */\n  function resetBackdropScroll() {\n    cursorBackdrop.scrollTop = backdropScrollOrigin;\n    cursorBackdrop.scrollLeft = backdropScrollOrigin;\n  }\n\n  /**\n   * The center of the backdrop node scroll area.\n   */\n  const backdropScrollOrigin = 500;\n\n  /**\n   * Create cursor backdrop node.\n   */\n  function createCursorBackdrop(): HTMLElement {\n    const backdrop = document.createElement('div');\n    backdrop.classList.add('lm-cursor-backdrop');\n    return backdrop;\n  }\n\n  /**\n   * The internal id for the active cursor override.\n   */\n  let overrideCursorID = 0;\n\n  /**\n   * A backdrop node overriding pointer cursor.\n   *\n   * #### Notes\n   * We use a backdrop node rather than setting the cursor directly on the body\n   * because setting it on body requires more extensive style recalculation for\n   * reliable application of the cursor, this is the cursor not being overriden\n   * when over child elements with another style like `cursor: other!important`.\n   */\n  export const cursorBackdrop: HTMLElement = createCursorBackdrop();\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for array-specific algorithms.\n */\nexport namespace ArrayExt {\n  /**\n   * Find the index of the first occurrence of a value in an array.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param value - The value to locate in the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first occurrence of the value, or `-1`\n   *   if the value is not found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four', 'one'];\n   * ArrayExt.firstIndexOf(data, 'red');        // -1\n   * ArrayExt.firstIndexOf(data, 'one');        // 0\n   * ArrayExt.firstIndexOf(data, 'one', 1);     // 4\n   * ArrayExt.firstIndexOf(data, 'two', 2);     // -1\n   * ArrayExt.firstIndexOf(data, 'two', 2, 1);  // 1\n   * ```\n   */\n  export function firstIndexOf<T>(\n    array: ArrayLike<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start + i) % n;\n      if (array[j] === value) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the last occurrence of a value in an array.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param value - The value to locate in the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the last occurrence of the value, or `-1`\n   *   if the value is not found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four', 'one'];\n   * ArrayExt.lastIndexOf(data, 'red');        // -1\n   * ArrayExt.lastIndexOf(data, 'one');        // 4\n   * ArrayExt.lastIndexOf(data, 'one', 1);     // 0\n   * ArrayExt.lastIndexOf(data, 'two', 0);     // -1\n   * ArrayExt.lastIndexOf(data, 'two', 0, 1);  // 1\n   * ```\n   */\n  export function lastIndexOf<T>(\n    array: ArrayLike<T>,\n    value: T,\n    start = -1,\n    stop = 0\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (start < stop) {\n      span = start + 1 + (n - stop);\n    } else {\n      span = start - stop + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start - i + n) % n;\n      if (array[j] === value) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the first value which matches a predicate.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first matching value, or `-1` if no\n   *   matching value is found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findFirstIndex(data, isEven);       // 1\n   * ArrayExt.findFirstIndex(data, isEven, 4);    // 5\n   * ArrayExt.findFirstIndex(data, isEven, 6);    // -1\n   * ArrayExt.findFirstIndex(data, isEven, 6, 5); // 1\n   * ```\n   */\n  export function findFirstIndex<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start + i) % n;\n      if (fn(array[j], j)) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the last value which matches a predicate.\n   *\n   * @param object - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the last matching value, or `-1` if no\n   *   matching value is found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findLastIndex(data, isEven);        // 5\n   * ArrayExt.findLastIndex(data, isEven, 4);     // 3\n   * ArrayExt.findLastIndex(data, isEven, 0);     // -1\n   * ArrayExt.findLastIndex(data, isEven, 0, 1);  // 5\n   * ```\n   */\n  export function findLastIndex<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let d: number;\n    if (start < stop) {\n      d = start + 1 + (n - stop);\n    } else {\n      d = start - stop + 1;\n    }\n    for (let i = 0; i < d; ++i) {\n      let j = (start - i + n) % n;\n      if (fn(array[j], j)) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the first value which matches a predicate.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The first matching value, or `undefined` if no matching\n   *   value is found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findFirstValue(data, isEven);       // 2\n   * ArrayExt.findFirstValue(data, isEven, 2);    // 4\n   * ArrayExt.findFirstValue(data, isEven, 6);    // undefined\n   * ArrayExt.findFirstValue(data, isEven, 6, 5); // 2\n   * ```\n   */\n  export function findFirstValue<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): T | undefined {\n    let index = findFirstIndex(array, fn, start, stop);\n    return index !== -1 ? array[index] : undefined;\n  }\n\n  /**\n   * Find the last value which matches a predicate.\n   *\n   * @param object - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The last matching value, or `undefined` if no matching\n   *   value is found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findLastValue(data, isEven);        // 2\n   * ArrayExt.findLastValue(data, isEven, 4);     // 4\n   * ArrayExt.findLastValue(data, isEven, 0);     // undefined\n   * ArrayExt.findLastValue(data, isEven, 0, 1);  // 2\n   * ```\n   */\n  export function findLastValue<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): T | undefined {\n    let index = findLastIndex(array, fn, start, stop);\n    return index !== -1 ? array[index] : undefined;\n  }\n\n  /**\n   * Find the index of the first element which compares `>=` to a value.\n   *\n   * @param array - The sorted array-like object to search.\n   *\n   * @param value - The value to locate in the array.\n   *\n   * @param fn - The 3-way comparison function to apply to the values.\n   *   It should return `< 0` if an element is less than a value, `0` if\n   *   an element is equal to a value, or `> 0` if an element is greater\n   *   than a value.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first element which compares `>=` to the\n   *   value, or `length` if there is no such element. If the computed\n   *   index for `stop` is less than `start`, then the computed index\n   *   for `start` is returned.\n   *\n   * #### Notes\n   * The array must already be sorted in ascending order according to\n   * the comparison function.\n   *\n   * #### Complexity\n   * Logarithmic.\n   *\n   * #### Undefined Behavior\n   * Searching a range which is not sorted in ascending order.\n   *\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function numberCmp(a: number, b: number): number {\n   *   return a - b;\n   * }\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.lowerBound(data, 0, numberCmp);   // 0\n   * ArrayExt.lowerBound(data, 6, numberCmp);   // 3\n   * ArrayExt.lowerBound(data, 7, numberCmp);   // 3\n   * ArrayExt.lowerBound(data, -1, numberCmp);  // 0\n   * ArrayExt.lowerBound(data, 10, numberCmp);  // 6\n   * ```\n   */\n  export function lowerBound<T, U>(\n    array: ArrayLike<T>,\n    value: U,\n    fn: (element: T, value: U) => number,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let begin = start;\n    let span = stop - start + 1;\n    while (span > 0) {\n      let half = span >> 1;\n      let middle = begin + half;\n      if (fn(array[middle], value) < 0) {\n        begin = middle + 1;\n        span -= half + 1;\n      } else {\n        span = half;\n      }\n    }\n    return begin;\n  }\n\n  /**\n   * Find the index of the first element which compares `>` than a value.\n   *\n   * @param array - The sorted array-like object to search.\n   *\n   * @param value - The value to locate in the array.\n   *\n   * @param fn - The 3-way comparison function to apply to the values.\n   *   It should return `< 0` if an element is less than a value, `0` if\n   *   an element is equal to a value, or `> 0` if an element is greater\n   *   than a value.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first element which compares `>` than the\n   *   value, or `length` if there is no such element. If the computed\n   *   index for `stop` is less than `start`, then the computed index\n   *   for `start` is returned.\n   *\n   * #### Notes\n   * The array must already be sorted in ascending order according to\n   * the comparison function.\n   *\n   * #### Complexity\n   * Logarithmic.\n   *\n   * #### Undefined Behavior\n   * Searching a range which is not sorted in ascending order.\n   *\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function numberCmp(a: number, b: number): number {\n   *   return a - b;\n   * }\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.upperBound(data, 0, numberCmp);   // 1\n   * ArrayExt.upperBound(data, 6, numberCmp);   // 3\n   * ArrayExt.upperBound(data, 7, numberCmp);   // 5\n   * ArrayExt.upperBound(data, -1, numberCmp);  // 0\n   * ArrayExt.upperBound(data, 10, numberCmp);  // 6\n   * ```\n   */\n  export function upperBound<T, U>(\n    array: ArrayLike<T>,\n    value: U,\n    fn: (element: T, value: U) => number,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let begin = start;\n    let span = stop - start + 1;\n    while (span > 0) {\n      let half = span >> 1;\n      let middle = begin + half;\n      if (fn(array[middle], value) > 0) {\n        span = half;\n      } else {\n        begin = middle + 1;\n        span -= half + 1;\n      }\n    }\n    return begin;\n  }\n\n  /**\n   * Test whether two arrays are shallowly equal.\n   *\n   * @param a - The first array-like object to compare.\n   *\n   * @param b - The second array-like object to compare.\n   *\n   * @param fn - The comparison function to apply to the elements. It\n   *   should return `true` if the elements are \"equal\". The default\n   *   compares elements using strict `===` equality.\n   *\n   * @returns Whether the two arrays are shallowly equal.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * Modifying the length of the arrays while comparing.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let d1 = [0, 3, 4, 7, 7, 9];\n   * let d2 = [0, 3, 4, 7, 7, 9];\n   * let d3 = [42];\n   * ArrayExt.shallowEqual(d1, d2);  // true\n   * ArrayExt.shallowEqual(d2, d3);  // false\n   * ```\n   */\n  export function shallowEqual<T>(\n    a: ArrayLike<T>,\n    b: ArrayLike<T>,\n    fn?: (a: T, b: T) => boolean\n  ): boolean {\n    // Check for object identity first.\n    if (a === b) {\n      return true;\n    }\n\n    // Bail early if the lengths are different.\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    // Compare each element for equality.\n    for (let i = 0, n = a.length; i < n; ++i) {\n      if (fn ? !fn(a[i], b[i]) : a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    // The array are shallowly equal.\n    return true;\n  }\n\n  /**\n   * Create a slice of an array subject to an optional step.\n   *\n   * @param array - The array-like object of interest.\n   *\n   * @param options - The options for configuring the slice.\n   *\n   * @returns A new array with the specified values.\n   *\n   * @throws An exception if the slice `step` is `0`.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start`, `stop`, or `step` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.slice(data);                         // [0, 3, 4, 7, 7, 9]\n   * ArrayExt.slice(data, { start: 2 });           // [4, 7, 7, 9]\n   * ArrayExt.slice(data, { start: 0, stop: 4 });  // [0, 3, 4, 7]\n   * ArrayExt.slice(data, { step: 2 });            // [0, 4, 7]\n   * ArrayExt.slice(data, { step: -1 });           // [9, 7, 7, 4, 3, 0]\n   * ```\n   */\n  export function slice<T>(\n    array: ArrayLike<T>,\n    options: slice.IOptions = {}\n  ): T[] {\n    // Extract the options.\n    let { start, stop, step } = options;\n\n    // Set up the `step` value.\n    if (step === undefined) {\n      step = 1;\n    }\n\n    // Validate the step size.\n    if (step === 0) {\n      throw new Error('Slice `step` cannot be zero.');\n    }\n\n    // Look up the length of the array.\n    let n = array.length;\n\n    // Set up the `start` value.\n    if (start === undefined) {\n      start = step < 0 ? n - 1 : 0;\n    } else if (start < 0) {\n      start = Math.max(start + n, step < 0 ? -1 : 0);\n    } else if (start >= n) {\n      start = step < 0 ? n - 1 : n;\n    }\n\n    // Set up the `stop` value.\n    if (stop === undefined) {\n      stop = step < 0 ? -1 : n;\n    } else if (stop < 0) {\n      stop = Math.max(stop + n, step < 0 ? -1 : 0);\n    } else if (stop >= n) {\n      stop = step < 0 ? n - 1 : n;\n    }\n\n    // Compute the slice length.\n    let length;\n    if ((step < 0 && stop >= start) || (step > 0 && start >= stop)) {\n      length = 0;\n    } else if (step < 0) {\n      length = Math.floor((stop - start + 1) / step + 1);\n    } else {\n      length = Math.floor((stop - start - 1) / step + 1);\n    }\n\n    // Compute the sliced result.\n    let result: T[] = [];\n    for (let i = 0; i < length; ++i) {\n      result[i] = array[start + i * step];\n    }\n\n    // Return the result.\n    return result;\n  }\n\n  /**\n   * The namespace for the `slice` function statics.\n   */\n  export namespace slice {\n    /**\n     * The options for the `slice` function.\n     */\n    export interface IOptions {\n      /**\n       * The starting index of the slice, inclusive.\n       *\n       * Negative values are taken as an offset from the end\n       * of the array.\n       *\n       * The default is `0` if `step > 0` else `n - 1`.\n       */\n      start?: number;\n\n      /**\n       * The stopping index of the slice, exclusive.\n       *\n       * Negative values are taken as an offset from the end\n       * of the array.\n       *\n       * The default is `n` if `step > 0` else `-n - 1`.\n       */\n      stop?: number;\n\n      /**\n       * The step value for the slice.\n       *\n       * This must not be `0`.\n       *\n       * The default is `1`.\n       */\n      step?: number;\n    }\n  }\n\n  /**\n   * An array-like object which supports item assignment.\n   */\n  export type MutableArrayLike<T> = {\n    readonly length: number;\n    [index: number]: T;\n  };\n\n  /**\n   * Move an element in an array from one index to another.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param fromIndex - The index of the element to move. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * @param toIndex - The target index of the element. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `fromIndex` or `toIndex` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.move(data, 1, 2);  // [0, 2, 1, 3, 4]\n   * ArrayExt.move(data, 4, 2);  // [0, 2, 4, 1, 3]\n   * ```\n   */\n  export function move<T>(\n    array: MutableArrayLike<T>,\n    fromIndex: number,\n    toIndex: number\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (fromIndex < 0) {\n      fromIndex = Math.max(0, fromIndex + n);\n    } else {\n      fromIndex = Math.min(fromIndex, n - 1);\n    }\n    if (toIndex < 0) {\n      toIndex = Math.max(0, toIndex + n);\n    } else {\n      toIndex = Math.min(toIndex, n - 1);\n    }\n    if (fromIndex === toIndex) {\n      return;\n    }\n    let value = array[fromIndex];\n    let d = fromIndex < toIndex ? 1 : -1;\n    for (let i = fromIndex; i !== toIndex; i += d) {\n      array[i] = array[i + d];\n    }\n    array[toIndex] = value;\n  }\n\n  /**\n   * Reverse an array in-place.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param start - The index of the first element in the range to be\n   *   reversed, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   reversed, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or  `stop` index which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.reverse(data, 1, 3);  // [0, 3, 2, 1, 4]\n   * ArrayExt.reverse(data, 3);     // [0, 3, 2, 4, 1]\n   * ArrayExt.reverse(data);        // [1, 4, 2, 3, 0]\n   * ```\n   */\n  export function reverse<T>(\n    array: MutableArrayLike<T>,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    while (start < stop) {\n      let a = array[start];\n      let b = array[stop];\n      array[start++] = b;\n      array[stop--] = a;\n    }\n  }\n\n  /**\n   * Rotate the elements of an array in-place.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param delta - The amount of rotation to apply to the elements. A\n   *   positive value will rotate the elements to the left. A negative\n   *   value will rotate the elements to the right.\n   *\n   * @param start - The index of the first element in the range to be\n   *   rotated, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   rotated, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `delta`, `start`, or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.rotate(data, 2);        // [2, 3, 4, 0, 1]\n   * ArrayExt.rotate(data, -2);       // [0, 1, 2, 3, 4]\n   * ArrayExt.rotate(data, 10);       // [0, 1, 2, 3, 4]\n   * ArrayExt.rotate(data, 9);        // [4, 0, 1, 2, 3]\n   * ArrayExt.rotate(data, 2, 1, 3);  // [4, 2, 0, 1, 3]\n   * ```\n   */\n  export function rotate<T>(\n    array: MutableArrayLike<T>,\n    delta: number,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    if (start >= stop) {\n      return;\n    }\n    let length = stop - start + 1;\n    if (delta > 0) {\n      delta = delta % length;\n    } else if (delta < 0) {\n      delta = ((delta % length) + length) % length;\n    }\n    if (delta === 0) {\n      return;\n    }\n    let pivot = start + delta;\n    reverse(array, start, pivot - 1);\n    reverse(array, pivot, stop);\n    reverse(array, start, stop);\n  }\n\n  /**\n   * Fill an array with a static value.\n   *\n   * @param array - The mutable array-like object to fill.\n   *\n   * @param value - The static value to use to fill the array.\n   *\n   * @param start - The index of the first element in the range to be\n   *   filled, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   filled, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Notes\n   * If `stop < start` the fill will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four'];\n   * ArrayExt.fill(data, 'r');        // ['r', 'r', 'r', 'r']\n   * ArrayExt.fill(data, 'g', 1);     // ['r', 'g', 'g', 'g']\n   * ArrayExt.fill(data, 'b', 2, 3);  // ['r', 'g', 'b', 'b']\n   * ArrayExt.fill(data, 'z', 3, 1);  // ['z', 'z', 'b', 'z']\n   * ```\n   */\n  export function fill<T>(\n    array: MutableArrayLike<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n === 0) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      array[(start + i) % n] = value;\n    }\n  }\n\n  /**\n   * Insert a value into an array at a specific index.\n   *\n   * @param array - The array of interest.\n   *\n   * @param index - The index at which to insert the value. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * @param value - The value to set at the specified index.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2];\n   * ArrayExt.insert(data, 0, -1);  // [-1, 0, 1, 2]\n   * ArrayExt.insert(data, 2, 12);  // [-1, 0, 12, 1, 2]\n   * ArrayExt.insert(data, -1, 7);  // [-1, 0, 12, 1, 7, 2]\n   * ArrayExt.insert(data, 6, 19);  // [-1, 0, 12, 1, 7, 2, 19]\n   * ```\n   */\n  export function insert<T>(array: Array<T>, index: number, value: T): void {\n    let n = array.length;\n    if (index < 0) {\n      index = Math.max(0, index + n);\n    } else {\n      index = Math.min(index, n);\n    }\n    for (let i = n; i > index; --i) {\n      array[i] = array[i - 1];\n    }\n    array[index] = value;\n  }\n\n  /**\n   * Remove and return a value at a specific index in an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param index - The index of the value to remove. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The value at the specified index, or `undefined` if the\n   *   index is out of range.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeAt(data, 2);   // 23\n   * ArrayExt.removeAt(data, -2);  // 12\n   * ArrayExt.removeAt(data, 10);  // undefined;\n   * ```\n   */\n  export function removeAt<T>(array: Array<T>, index: number): T | undefined {\n    let n = array.length;\n    if (index < 0) {\n      index += n;\n    }\n    if (index < 0 || index >= n) {\n      return undefined;\n    }\n    let value = array[index];\n    for (let i = index + 1; i < n; ++i) {\n      array[i - 1] = array[i];\n    }\n    array.length = n - 1;\n    return value;\n  }\n\n  /**\n   * Remove the first occurrence of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the removed value, or `-1` if the value\n   *   is not contained in the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeFirstOf(data, 12);        // 1\n   * ArrayExt.removeFirstOf(data, 17);        // -1\n   * ArrayExt.removeFirstOf(data, 39, 3);     // -1\n   * ArrayExt.removeFirstOf(data, 39, 3, 2);  // 2\n   * ```\n   */\n  export function removeFirstOf<T>(\n    array: Array<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let index = firstIndexOf(array, value, start, stop);\n    if (index !== -1) {\n      removeAt(array, index);\n    }\n    return index;\n  }\n\n  /**\n   * Remove the last occurrence of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the removed value, or `-1` if the value\n   *   is not contained in the array.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeLastOf(data, 12);        // 5\n   * ArrayExt.removeLastOf(data, 17);        // -1\n   * ArrayExt.removeLastOf(data, 39, 2);     // -1\n   * ArrayExt.removeLastOf(data, 39, 2, 3);  // 3\n   * ```\n   */\n  export function removeLastOf<T>(\n    array: Array<T>,\n    value: T,\n    start = -1,\n    stop = 0\n  ): number {\n    let index = lastIndexOf(array, value, start, stop);\n    if (index !== -1) {\n      removeAt(array, index);\n    }\n    return index;\n  }\n\n  /**\n   * Remove all occurrences of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The number of elements removed from the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will conceptually wrap at the end of\n   * the array, however the array will be traversed front-to-back.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [14, 12, 23, 39, 14, 12, 19, 14];\n   * ArrayExt.removeAllOf(data, 12);        // 2\n   * ArrayExt.removeAllOf(data, 17);        // 0\n   * ArrayExt.removeAllOf(data, 14, 1, 4);  // 1\n   * ```\n   */\n  export function removeAllOf<T>(\n    array: Array<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let count = 0;\n    for (let i = 0; i < n; ++i) {\n      if (start <= stop && i >= start && i <= stop && array[i] === value) {\n        count++;\n      } else if (\n        stop < start &&\n        (i <= stop || i >= start) &&\n        array[i] === value\n      ) {\n        count++;\n      } else if (count > 0) {\n        array[i - count] = array[i];\n      }\n    }\n    if (count > 0) {\n      array.length = n - count;\n    }\n    return count;\n  }\n\n  /**\n   * Remove the first occurrence of a value which matches a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The removed `{ index, value }`, which will be `-1` and\n   *   `undefined` if the value is not contained in the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeFirstWhere(data, isEven);     // { index: 0, value: 0 }\n   * ArrayExt.removeFirstWhere(data, isEven, 2);  // { index: 3, value: 14 }\n   * ArrayExt.removeFirstWhere(data, isEven, 4);  // { index: -1, value: undefined }\n   * ```\n   */\n  export function removeFirstWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): { index: number; value: T | undefined } {\n    let value: T | undefined;\n    let index = findFirstIndex(array, fn, start, stop);\n    if (index !== -1) {\n      value = removeAt(array, index);\n    }\n    return { index, value };\n  }\n\n  /**\n   * Remove the last occurrence of a value which matches a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The removed `{ index, value }`, which will be `-1` and\n   *   `undefined` if the value is not contained in the array.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeLastWhere(data, isEven);        // { index: 5, value: 12 }\n   * ArrayExt.removeLastWhere(data, isEven, 2);     // { index: 1, value: 12 }\n   * ArrayExt.removeLastWhere(data, isEven, 2, 1);  // { index: -1, value: undefined }\n   * ```\n   */\n  export function removeLastWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): { index: number; value: T | undefined } {\n    let value: T | undefined;\n    let index = findLastIndex(array, fn, start, stop);\n    if (index !== -1) {\n      value = removeAt(array, index);\n    }\n    return { index, value };\n  }\n\n  /**\n   * Remove all occurrences of values which match a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The number of elements removed from the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will conceptually wrap at the end of\n   * the array, however the array will be traversed front-to-back.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * function isNegative(value: number): boolean {\n   *   return value < 0;\n   * }\n   *\n   * let data = [0, 12, -13, -9, 23, 39, 14, -15, 12, 75];\n   * ArrayExt.removeAllWhere(data, isEven);            // 4\n   * ArrayExt.removeAllWhere(data, isNegative, 0, 3);  // 2\n   * ```\n   */\n  export function removeAllWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let count = 0;\n    for (let i = 0; i < n; ++i) {\n      if (start <= stop && i >= start && i <= stop && fn(array[i], i)) {\n        count++;\n      } else if (stop < start && (i <= stop || i >= start) && fn(array[i], i)) {\n        count++;\n      } else if (count > 0) {\n        array[i - count] = array[i];\n      }\n    }\n    if (count > 0) {\n      array.length = n - count;\n    }\n    return count;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Chain together several iterables.\n *\n * @deprecated\n *\n * @param objects - The iterable objects of interest.\n *\n * @returns An iterator which yields the values of the iterables\n *   in the order in which they are supplied.\n *\n * #### Example\n * ```typescript\n * import { chain } from '@lumino/algorithm';\n *\n * let data1 = [1, 2, 3];\n * let data2 = [4, 5, 6];\n *\n * let stream = chain(data1, data2);\n *\n * Array.from(stream);  // [1, 2, 3, 4, 5, 6]\n * ```\n */\nexport function* chain<T>(...objects: Iterable<T>[]): IterableIterator<T> {\n  for (const object of objects) {\n    yield* object;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an empty iterator.\n *\n * @returns A new iterator which yields nothing.\n *\n * #### Example\n * ```typescript\n * import { empty } from '@lumino/algorithm';\n *\n * let stream = empty<number>();\n *\n * Array.from(stream);  // []\n * ```\n */\n// eslint-disable-next-line require-yield\nexport function* empty<T>(): IterableIterator<T> {\n  return;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Enumerate an iterable object.\n *\n * @param object - The iterable object of interest.\n *\n * @param start - The starting enum value. The default is `0`.\n *\n * @returns An iterator which yields the enumerated values.\n *\n * #### Example\n * ```typescript\n * import { enumerate } from '@lumino/algorithm';\n *\n * let data = ['foo', 'bar', 'baz'];\n *\n * let stream = enumerate(data, 1);\n *\n * Array.from(stream);  // [[1, 'foo'], [2, 'bar'], [3, 'baz']]\n * ```\n */\nexport function* enumerate<T>(\n  object: Iterable<T>,\n  start = 0\n): IterableIterator<[number, T]> {\n  for (const value of object) {\n    yield [start++, value];\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Filter an iterable for values which pass a test.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns An iterator which yields the values which pass the test.\n *\n * #### Example\n * ```typescript\n * import { filter } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = filter(data, value => value % 2 === 0);\n *\n * Array.from(stream);  // [2, 4, 6]\n * ```\n */\nexport function* filter<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): IterableIterator<T> {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      yield value;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Find the first value in an iterable which matches a predicate.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The predicate function to apply to the values.\n *\n * @returns The first matching value, or `undefined` if no matching\n *   value is found.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { find } from '@lumino/algorithm';\n *\n * interface IAnimal { species: string, name: string };\n *\n * function isCat(value: IAnimal): boolean {\n *   return value.species === 'cat';\n * }\n *\n * let data: IAnimal[] = [\n *   { species: 'dog', name: 'spot' },\n *   { species: 'cat', name: 'fluffy' },\n *   { species: 'alligator', name: 'pocho' }\n * ];\n *\n * find(data, isCat).name;  // 'fluffy'\n * ```\n */\nexport function find<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): T | undefined {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return value;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Find the index of the first value which matches a predicate.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The predicate function to apply to the values.\n *\n * @returns The index of the first matching value, or `-1` if no\n *   matching value is found.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { findIndex } from '@lumino/algorithm';\n *\n * interface IAnimal { species: string, name: string };\n *\n * function isCat(value: IAnimal): boolean {\n *   return value.species === 'cat';\n * }\n *\n * let data: IAnimal[] = [\n *   { species: 'dog', name: 'spot' },\n *   { species: 'cat', name: 'fluffy' },\n *   { species: 'alligator', name: 'pocho' }\n * ];\n *\n * findIndex(data, isCat);  // 1\n * ```\n */\nexport function findIndex<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): number {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return index - 1;\n    }\n  }\n  return -1;\n}\n\n/**\n * Find the minimum value in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns The minimum value in the iterable. If multiple values are\n *   equivalent to the minimum, the left-most value is returned. If\n *   the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { min } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * min([7, 4, 0, 3, 9, 4], numberCmp);  // 0\n * ```\n */\nexport function min<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): T | undefined {\n  let result: T | undefined = undefined;\n  for (const value of object) {\n    if (result === undefined) {\n      result = value;\n      continue;\n    }\n    if (fn(value, result) < 0) {\n      result = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Find the maximum value in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns The maximum value in the iterable. If multiple values are\n *   equivalent to the maximum, the left-most value is returned. If\n *   the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { max } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * max([7, 4, 0, 3, 9, 4], numberCmp);  // 9\n * ```\n */\nexport function max<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): T | undefined {\n  let result: T | undefined = undefined;\n  for (const value of object) {\n    if (result === undefined) {\n      result = value;\n      continue;\n    }\n    if (fn(value, result) > 0) {\n      result = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Find the minimum and maximum values in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns A 2-tuple of the `[min, max]` values in the iterable. If\n *   multiple values are equivalent, the left-most values are returned.\n *   If the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { minmax } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * minmax([7, 4, 0, 3, 9, 4], numberCmp);  // [0, 9]\n * ```\n */\nexport function minmax<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): [T, T] | undefined {\n  let empty = true;\n  let vmin: T;\n  let vmax: T;\n  for (const value of object) {\n    if (empty) {\n      vmin = value;\n      vmax = value;\n      empty = false;\n    } else if (fn(value, vmin!) < 0) {\n      vmin = value;\n    } else if (fn(value, vmax!) > 0) {\n      vmax = value;\n    }\n  }\n  return empty ? undefined : [vmin!, vmax!];\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an array from an iterable of values.\n *\n * @deprecated\n *\n * @param object - The iterable object of interest.\n *\n * @returns A new array of values from the given object.\n *\n * #### Example\n * ```typescript\n * import { toArray } from '@lumino/algorithm';\n *\n * let stream = [1, 2, 3, 4, 5, 6][Symbol.iterator]();\n *\n * toArray(stream);  // [1, 2, 3, 4, 5, 6];\n * ```\n */\nexport function toArray<T>(object: Iterable<T>): T[] {\n  return Array.from(object);\n}\n\n/**\n * Create an object from an iterable of key/value pairs.\n *\n * @param object - The iterable object of interest.\n *\n * @returns A new object mapping keys to values.\n *\n * #### Example\n * ```typescript\n * import { toObject } from '@lumino/algorithm';\n *\n * let data: [string, number][] = [['one', 1], ['two', 2], ['three', 3]];\n *\n * toObject(data);  // { one: 1, two: 2, three: 3 }\n * ```\n */\nexport function toObject<T>(object: Iterable<[string, T]>): {\n  [key: string]: T;\n} {\n  const result: { [key: string]: T } = {};\n  for (const [key, value] of object) {\n    result[key] = value;\n  }\n  return result;\n}\n\n/**\n * Invoke a function for each value in an iterable.\n *\n * @deprecated\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The callback function to invoke for each value.\n *\n * #### Notes\n * Iteration can be terminated early by returning `false` from the\n * callback function.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { each } from '@lumino/algorithm';\n *\n * let data = [5, 7, 0, -2, 9];\n *\n * each(data, value => { console.log(value); });\n * ```\n */\nexport function each<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean | void\n): void {\n  let index = 0;\n  for (const value of object) {\n    if (false === fn(value, index++)) {\n      return;\n    }\n  }\n}\n\n/**\n * Test whether all values in an iterable satisfy a predicate.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns `true` if all values pass the test, `false` otherwise.\n *\n * #### Notes\n * Iteration terminates on the first `false` predicate result.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { every } from '@lumino/algorithm';\n *\n * let data = [5, 7, 1];\n *\n * every(data, value => value % 2 === 0);  // false\n * every(data, value => value % 2 === 1);  // true\n * ```\n */\nexport function every<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): boolean {\n  let index = 0;\n  for (const value of object) {\n    if (false === fn(value, index++)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Test whether any value in an iterable satisfies a predicate.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns `true` if any value passes the test, `false` otherwise.\n *\n * #### Notes\n * Iteration terminates on the first `true` predicate result.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { some } from '@lumino/algorithm';\n *\n * let data = [5, 7, 1];\n *\n * some(data, value => value === 7);  // true\n * some(data, value => value === 3);  // false\n * ```\n */\nexport function some<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): boolean {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return true;\n    }\n  }\n  return false;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Transform the values of an iterable with a mapping function.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The mapping function to invoke for each value.\n *\n * @returns An iterator which yields the transformed values.\n *\n * #### Example\n * ```typescript\n * import { map } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3];\n *\n * let stream = map(data, value => value * 2);\n *\n * Array.from(stream);  // [2, 4, 6]\n * ```\n */\nexport function* map<T, U>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => U\n): IterableIterator<U> {\n  let index = 0;\n  for (const value of object) {\n    yield fn(value, index++);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Create an iterator of evenly spaced values.\n *\n * @param start - The starting value for the range, inclusive.\n *\n * @param stop - The stopping value for the range, exclusive.\n *\n * @param step - The distance between each value.\n *\n * @returns An iterator which produces evenly spaced values.\n *\n * #### Notes\n * In the single argument form of `range(stop)`, `start` defaults to\n * `0` and `step` defaults to `1`.\n *\n * In the two argument form of `range(start, stop)`, `step` defaults\n * to `1`.\n *\n * #### Example\n * ```typescript\n * import { range } from '@lumino/algorithm';\n *\n * let stream = range(2, 4);\n *\n * Array.from(stream);  // [2, 3]\n * ```\n */\nexport function* range(\n  start: number,\n  stop?: number,\n  step?: number\n): IterableIterator<number> {\n  if (stop === undefined) {\n    stop = start;\n    start = 0;\n    step = 1;\n  } else if (step === undefined) {\n    step = 1;\n  }\n  const length = Private.rangeLength(start, stop, step);\n  for (let index = 0; index < length; index++) {\n    yield start + step * index;\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Compute the effective length of a range.\n   *\n   * @param start - The starting value for the range, inclusive.\n   *\n   * @param stop - The stopping value for the range, exclusive.\n   *\n   * @param step - The distance between each value.\n   *\n   * @returns The number of steps need to traverse the range.\n   */\n  export function rangeLength(\n    start: number,\n    stop: number,\n    step: number\n  ): number {\n    if (step === 0) {\n      return Infinity;\n    }\n    if (start > stop && step > 0) {\n      return 0;\n    }\n    if (start < stop && step < 0) {\n      return 0;\n    }\n    return Math.ceil((stop - start) / step);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Summarize all values in an iterable using a reducer function.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The reducer function to invoke for each value.\n *\n * @param initial - The initial value to start accumulation.\n *\n * @returns The final accumulated value.\n *\n * #### Notes\n * The `reduce` function follows the conventions of `Array#reduce`.\n *\n * If the iterator is empty, an initial value is required. That value\n * will be used as the return value. If no initial value is provided,\n * an error will be thrown.\n *\n * If the iterator contains a single item and no initial value is\n * provided, the single item is used as the return value.\n *\n * Otherwise, the reducer is invoked for each element in the iterable.\n * If an initial value is not provided, the first element will be used\n * as the initial accumulated value.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { reduce } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5];\n *\n * let sum = reduce(data, (a, value) => a + value);  // 15\n * ```\n */\nexport function reduce<T>(\n  object: Iterable<T>,\n  fn: (accumulator: T, value: T, index: number) => T\n): T;\nexport function reduce<T, U>(\n  object: Iterable<T>,\n  fn: (accumulator: U, value: T, index: number) => U,\n  initial: U\n): U;\nexport function reduce<T>(\n  object: Iterable<T>,\n  fn: (accumulator: any, value: T, index: number) => any,\n  initial?: unknown\n): any {\n  // Setup the iterator and fetch the first value.\n  const it = object[Symbol.iterator]();\n  let index = 0;\n  let first = it.next();\n\n  // An empty iterator and no initial value is an error.\n  if (first.done && initial === undefined) {\n    throw new TypeError('Reduce of empty iterable with no initial value.');\n  }\n\n  // If the iterator is empty, return the initial value.\n  if (first.done) {\n    return initial;\n  }\n\n  // If the iterator has a single item and no initial value, the\n  // reducer is not invoked and the first item is the return value.\n  let second = it.next();\n  if (second.done && initial === undefined) {\n    return first.value;\n  }\n\n  // If iterator has a single item and an initial value is provided,\n  // the reducer is invoked and that result is the return value.\n  if (second.done) {\n    return fn(initial, first.value, index++);\n  }\n\n  // Setup the initial accumlated value.\n  let accumulator: any;\n  if (initial === undefined) {\n    accumulator = fn(first.value, second.value, index++);\n  } else {\n    accumulator = fn(fn(initial, first.value, index++), second.value, index++);\n  }\n\n  // Iterate the rest of the values, updating the accumulator.\n  let next: IteratorResult<T>;\n  while (!(next = it.next()).done) {\n    accumulator = fn(accumulator, next.value, index++);\n  }\n\n  // Return the final accumulated value.\n  return accumulator;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an iterator which repeats a value a number of times.\n *\n * @deprecated\n *\n * @param value - The value to repeat.\n *\n * @param count - The number of times to repeat the value.\n *\n * @returns A new iterator which repeats the specified value.\n *\n * #### Example\n * ```typescript\n * import { repeat } from '@lumino/algorithm';\n *\n * let stream = repeat(7, 3);\n *\n * Array.from(stream);  // [7, 7, 7]\n * ```\n */\nexport function* repeat<T>(value: T, count: number): IterableIterator<T> {\n  while (0 < count--) {\n    yield value;\n  }\n}\n\n/**\n * Create an iterator which yields a value a single time.\n *\n * @deprecated\n *\n * @param value - The value to wrap in an iterator.\n *\n * @returns A new iterator which yields the value a single time.\n *\n * #### Example\n * ```typescript\n * import { once } from '@lumino/algorithm';\n *\n * let stream = once(7);\n *\n * Array.from(stream);  // [7]\n * ```\n */\nexport function* once<T>(value: T): IterableIterator<T> {\n  yield value;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * An object which can produce a reverse iterator over its values.\n */\nexport interface IRetroable<T> {\n  /**\n   * Get a reverse iterator over the object's values.\n   *\n   * @returns An iterator which yields the object's values in reverse.\n   */\n  retro(): IterableIterator<T>;\n}\n\n/**\n * Create an iterator for a retroable object.\n *\n * @param object - The retroable or array-like object of interest.\n *\n * @returns An iterator which traverses the object's values in reverse.\n *\n * #### Example\n * ```typescript\n * import { retro } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = retro(data);\n *\n * Array.from(stream);  // [6, 5, 4, 3, 2, 1]\n * ```\n */\nexport function* retro<T>(\n  object: IRetroable<T> | ArrayLike<T>\n): IterableIterator<T> {\n  if (typeof (object as IRetroable<T>).retro === 'function') {\n    yield* (object as IRetroable<T>).retro();\n  } else {\n    for (let index = (object as ArrayLike<T>).length - 1; index > -1; index--) {\n      yield (object as ArrayLike<T>)[index];\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Topologically sort an iterable of edges.\n *\n * @param edges - The iterable object of edges to sort.\n *   An edge is represented as a 2-tuple of `[fromNode, toNode]`.\n *\n * @returns The topologically sorted array of nodes.\n *\n * #### Notes\n * If a cycle is present in the graph, the cycle will be ignored and\n * the return value will be only approximately sorted.\n *\n * #### Example\n * ```typescript\n * import { topologicSort } from '@lumino/algorithm';\n *\n * let data = [\n *   ['d', 'e'],\n *   ['c', 'd'],\n *   ['a', 'b'],\n *   ['b', 'c']\n * ];\n *\n * topologicSort(data);  // ['a', 'b', 'c', 'd', 'e']\n * ```\n */\nexport function topologicSort<T>(edges: Iterable<[T, T]>): T[] {\n  // Setup the shared sorting state.\n  let sorted: T[] = [];\n  let visited = new Set<T>();\n  let graph = new Map<T, T[]>();\n\n  // Add the edges to the graph.\n  for (const edge of edges) {\n    addEdge(edge);\n  }\n\n  // Visit each node in the graph.\n  for (const [k] of graph) {\n    visit(k);\n  }\n\n  // Return the sorted results.\n  return sorted;\n\n  // Add an edge to the graph.\n  function addEdge(edge: [T, T]): void {\n    let [fromNode, toNode] = edge;\n    let children = graph.get(toNode);\n    if (children) {\n      children.push(fromNode);\n    } else {\n      graph.set(toNode, [fromNode]);\n    }\n  }\n\n  // Recursively visit the node.\n  function visit(node: T): void {\n    if (visited.has(node)) {\n      return;\n    }\n    visited.add(node);\n    let children = graph.get(node);\n    if (children) {\n      for (const child of children) {\n        visit(child);\n      }\n    }\n    sorted.push(node);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Iterate over an iterable using a stepped increment.\n *\n * @param object - The iterable object of interest.\n *\n * @param step - The distance to step on each iteration. A value\n *   of less than `1` will behave the same as a value of `1`.\n *\n * @returns An iterator which traverses the iterable step-wise.\n *\n * #### Example\n * ```typescript\n * import { stride } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = stride(data, 2);\n *\n * Array.from(stream);  // [1, 3, 5];\n * ```\n */\nexport function* stride<T>(\n  object: Iterable<T>,\n  step: number\n): IterableIterator<T> {\n  let count = 0;\n  for (const value of object) {\n    if (0 === count++ % step) {\n      yield value;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for string-specific algorithms.\n */\nexport namespace StringExt {\n  /**\n   * Find the indices of characters in a source text.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The matched indices, or `null` if there is no match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * In order for there to be a match, all of the characters in `query`\n   * **must** appear in `source` in the order given by `query`.\n   *\n   * Characters are matched using strict `===` equality.\n   */\n  export function findIndices(\n    source: string,\n    query: string,\n    start = 0\n  ): number[] | null {\n    let indices = new Array<number>(query.length);\n    for (let i = 0, j = start, n = query.length; i < n; ++i, ++j) {\n      j = source.indexOf(query[i], j);\n      if (j === -1) {\n        return null;\n      }\n      indices[i] = j;\n    }\n    return indices;\n  }\n\n  /**\n   * The result of a string match function.\n   */\n  export interface IMatchResult {\n    /**\n     * A score which indicates the strength of the match.\n     *\n     * The documentation of a given match function should specify\n     * whether a lower or higher score is a stronger match.\n     */\n    score: number;\n\n    /**\n     * The indices of the matched characters in the source text.\n     *\n     * The indices will appear in increasing order.\n     */\n    indices: number[];\n  }\n\n  /**\n   * A string matcher which uses a sum-of-squares algorithm.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The match result, or `null` if there is no match.\n   *   A lower `score` represents a stronger match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * This scoring algorithm uses a sum-of-squares approach to determine\n   * the score. In order for there to be a match, all of the characters\n   * in `query` **must** appear in `source` in order. The index of each\n   * matching character is squared and added to the score. This means\n   * that early and consecutive character matches are preferred, while\n   * late matches are heavily penalized.\n   */\n  export function matchSumOfSquares(\n    source: string,\n    query: string,\n    start = 0\n  ): IMatchResult | null {\n    let indices = findIndices(source, query, start);\n    if (!indices) {\n      return null;\n    }\n    let score = 0;\n    for (let i = 0, n = indices.length; i < n; ++i) {\n      let j = indices[i] - start;\n      score += j * j;\n    }\n    return { score, indices };\n  }\n\n  /**\n   * A string matcher which uses a sum-of-deltas algorithm.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The match result, or `null` if there is no match.\n   *   A lower `score` represents a stronger match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * This scoring algorithm uses a sum-of-deltas approach to determine\n   * the score. In order for there to be a match, all of the characters\n   * in `query` **must** appear in `source` in order. The delta between\n   * the indices are summed to create the score. This means that groups\n   * of matched characters are preferred, while fragmented matches are\n   * penalized.\n   */\n  export function matchSumOfDeltas(\n    source: string,\n    query: string,\n    start = 0\n  ): IMatchResult | null {\n    let indices = findIndices(source, query, start);\n    if (!indices) {\n      return null;\n    }\n    let score = 0;\n    let last = start - 1;\n    for (let i = 0, n = indices.length; i < n; ++i) {\n      let j = indices[i];\n      score += j - last - 1;\n      last = j;\n    }\n    return { score, indices };\n  }\n\n  /**\n   * Highlight the matched characters of a source text.\n   *\n   * @param source - The text which should be highlighted.\n   *\n   * @param indices - The indices of the matched characters. They must\n   *   appear in increasing order and must be in bounds of the source.\n   *\n   * @param fn - The function to apply to the matched chunks.\n   *\n   * @returns An array of unmatched and highlighted chunks.\n   */\n  export function highlight<T>(\n    source: string,\n    indices: ReadonlyArray<number>,\n    fn: (chunk: string) => T\n  ): Array<string | T> {\n    // Set up the result array.\n    let result: Array<string | T> = [];\n\n    // Set up the counter variables.\n    let k = 0;\n    let last = 0;\n    let n = indices.length;\n\n    // Iterator over each index.\n    while (k < n) {\n      // Set up the chunk indices.\n      let i = indices[k];\n      let j = indices[k];\n\n      // Advance the right chunk index until it's non-contiguous.\n      while (++k < n && indices[k] === j + 1) {\n        j++;\n      }\n\n      // Extract the unmatched text.\n      if (last < i) {\n        result.push(source.slice(last, i));\n      }\n\n      // Extract and highlight the matched text.\n      if (i < j + 1) {\n        result.push(fn(source.slice(i, j + 1)));\n      }\n\n      // Update the last visited index.\n      last = j + 1;\n    }\n\n    // Extract any remaining unmatched text.\n    if (last < source.length) {\n      result.push(source.slice(last));\n    }\n\n    // Return the highlighted result.\n    return result;\n  }\n\n  /**\n   * A 3-way string comparison function.\n   *\n   * @param a - The first string of interest.\n   *\n   * @param b - The second string of interest.\n   *\n   * @returns `-1` if `a < b`, else `1` if `a > b`, else `0`.\n   */\n  export function cmp(a: string, b: string): number {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Take a fixed number of items from an iterable.\n *\n * @param object - The iterable object of interest.\n *\n * @param count - The number of items to take from the iterable.\n *\n * @returns An iterator which yields the specified number of items\n *   from the source iterable.\n *\n * #### Notes\n * The returned iterator will exhaust early if the source iterable\n * contains an insufficient number of items.\n *\n * #### Example\n * ```typescript\n * import { take } from '@lumino/algorithm';\n *\n * let stream = take([5, 4, 3, 2, 1, 0, -1], 3);\n *\n * Array.from(stream);  // [5, 4, 3]\n * ```\n */\nexport function* take<T>(\n  object: Iterable<T>,\n  count: number\n): IterableIterator<T> {\n  if (count < 1) {\n    return;\n  }\n  const it = object[Symbol.iterator]();\n  let item: IteratorResult<T>;\n  while (0 < count-- && !(item = it.next()).done) {\n    yield item.value;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { every } from './iter';\n\n/**\n * Iterate several iterables in lockstep.\n *\n * @param objects - The iterable objects of interest.\n *\n * @returns An iterator which yields successive tuples of values where\n *   each value is taken in turn from the provided iterables. It will\n *   be as long as the shortest provided iterable.\n *\n * #### Example\n * ```typescript\n * import { zip } from '@lumino/algorithm';\n *\n * let data1 = [1, 2, 3];\n * let data2 = [4, 5, 6];\n *\n * let stream = zip(data1, data2);\n *\n * Array.from(stream);  // [[1, 4], [2, 5], [3, 6]]\n * ```\n */\nexport function* zip<T>(...objects: Iterable<T>[]): IterableIterator<T[]> {\n  const iters = objects.map(obj => obj[Symbol.iterator]());\n  let tuple = iters.map(it => it.next());\n  for (; every(tuple, item => !item.done); tuple = iters.map(it => it.next())) {\n    yield tuple.map(item => item.value);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2019, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for clipboard related functionality.\n */\nexport namespace ClipboardExt {\n  /**\n   * Copy text to the system clipboard.\n   *\n   * @param text - The text to copy to the clipboard.\n   */\n  export function copyText(text: string): void {\n    // Fetch the document body.\n    const body = document.body;\n\n    // Set up the clipboard event listener.\n    const handler = (event: ClipboardEvent) => {\n      // Stop the event propagation.\n      event.preventDefault();\n      event.stopPropagation();\n\n      // Set the clipboard data.\n      event.clipboardData!.setData('text', text);\n\n      // Remove the event listener.\n      body.removeEventListener('copy', handler, true);\n    };\n\n    // Add the event listener.\n    body.addEventListener('copy', handler, true);\n\n    // Trigger the event.\n    document.execCommand('copy');\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for element related utilities.\n */\nexport namespace ElementExt {\n  /**\n   * An object which holds the border and padding data for an element.\n   */\n  export interface IBoxSizing {\n    /**\n     * The top border width, in pixels.\n     */\n    borderTop: number;\n\n    /**\n     * The left border width, in pixels.\n     */\n    borderLeft: number;\n\n    /**\n     * The right border width, in pixels.\n     */\n    borderRight: number;\n\n    /**\n     * The bottom border width, in pixels.\n     */\n    borderBottom: number;\n\n    /**\n     * The top padding width, in pixels.\n     */\n    paddingTop: number;\n\n    /**\n     * The left padding width, in pixels.\n     */\n    paddingLeft: number;\n\n    /**\n     * The right padding width, in pixels.\n     */\n    paddingRight: number;\n\n    /**\n     * The bottom padding width, in pixels.\n     */\n    paddingBottom: number;\n\n    /**\n     * The sum of horizontal border and padding.\n     */\n    horizontalSum: number;\n\n    /**\n     * The sum of vertical border and padding.\n     */\n    verticalSum: number;\n  }\n\n  /**\n   * Compute the box sizing for an element.\n   *\n   * @param element - The element of interest.\n   *\n   * @returns The box sizing data for the specified element.\n   */\n  export function boxSizing(element: Element): IBoxSizing {\n    let style = window.getComputedStyle(element);\n    let bt = parseFloat(style.borderTopWidth!) || 0;\n    let bl = parseFloat(style.borderLeftWidth!) || 0;\n    let br = parseFloat(style.borderRightWidth!) || 0;\n    let bb = parseFloat(style.borderBottomWidth!) || 0;\n    let pt = parseFloat(style.paddingTop!) || 0;\n    let pl = parseFloat(style.paddingLeft!) || 0;\n    let pr = parseFloat(style.paddingRight!) || 0;\n    let pb = parseFloat(style.paddingBottom!) || 0;\n    let hs = bl + pl + pr + br;\n    let vs = bt + pt + pb + bb;\n    return {\n      borderTop: bt,\n      borderLeft: bl,\n      borderRight: br,\n      borderBottom: bb,\n      paddingTop: pt,\n      paddingLeft: pl,\n      paddingRight: pr,\n      paddingBottom: pb,\n      horizontalSum: hs,\n      verticalSum: vs\n    };\n  }\n\n  /**\n   * An object which holds the min and max size data for an element.\n   */\n  export interface ISizeLimits {\n    /**\n     * The minimum width, in pixels.\n     */\n    minWidth: number;\n\n    /**\n     * The minimum height, in pixels.\n     */\n    minHeight: number;\n\n    /**\n     * The maximum width, in pixels.\n     */\n    maxWidth: number;\n\n    /**\n     * The maximum height, in pixels.\n     */\n    maxHeight: number;\n  }\n\n  /**\n   * Compute the size limits for an element.\n   *\n   * @param element - The element of interest.\n   *\n   * @returns The size limit data for the specified element.\n   */\n  export function sizeLimits(element: Element): ISizeLimits {\n    let style = window.getComputedStyle(element);\n    let minWidth = parseFloat(style.minWidth!) || 0;\n    let minHeight = parseFloat(style.minHeight!) || 0;\n    let maxWidth = parseFloat(style.maxWidth!) || Infinity;\n    let maxHeight = parseFloat(style.maxHeight!) || Infinity;\n    maxWidth = Math.max(minWidth, maxWidth);\n    maxHeight = Math.max(minHeight, maxHeight);\n    return { minWidth, minHeight, maxWidth, maxHeight };\n  }\n\n  /**\n   * Test whether a client position lies within an element.\n   *\n   * @param element - The DOM element of interest.\n   *\n   * @param clientX - The client X coordinate of interest.\n   *\n   * @param clientY - The client Y coordinate of interest.\n   *\n   * @returns Whether the point is within the given element.\n   */\n  export function hitTest(\n    element: Element,\n    clientX: number,\n    clientY: number\n  ): boolean {\n    let rect = element.getBoundingClientRect();\n    return (\n      clientX >= rect.left &&\n      clientX < rect.right &&\n      clientY >= rect.top &&\n      clientY < rect.bottom\n    );\n  }\n\n  /**\n   * Vertically scroll an element into view if needed.\n   *\n   * @param area - The scroll area element.\n   *\n   * @param element - The element of interest.\n   *\n   * #### Notes\n   * This follows the \"nearest\" behavior of the native `scrollIntoView`\n   * method, which is not supported by all browsers.\n   * https://drafts.csswg.org/cssom-view/#element-scrolling-members\n   *\n   * If the element fully covers the visible area or is fully contained\n   * within the visible area, no scrolling will take place. Otherwise,\n   * the nearest edges of the area and element are aligned.\n   */\n  export function scrollIntoViewIfNeeded(\n    area: Element,\n    element: Element\n  ): void {\n    let ar = area.getBoundingClientRect();\n    let er = element.getBoundingClientRect();\n    if (er.top <= ar.top && er.bottom >= ar.bottom) {\n      return;\n    }\n    if (er.top < ar.top && er.height <= ar.height) {\n      area.scrollTop -= ar.top - er.top;\n      return;\n    }\n    if (er.bottom > ar.bottom && er.height >= ar.height) {\n      area.scrollTop -= ar.top - er.top;\n      return;\n    }\n    if (er.top < ar.top && er.height > ar.height) {\n      area.scrollTop -= ar.bottom - er.bottom;\n      return;\n    }\n    if (er.bottom > ar.bottom && er.height < ar.height) {\n      area.scrollTop -= ar.bottom - er.bottom;\n      return;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for platform related utilities.\n */\nexport namespace Platform {\n  /**\n   * A flag indicating whether the platform is Mac.\n   */\n  export const IS_MAC = !!navigator.platform.match(/Mac/i);\n\n  /**\n   * A flag indicating whether the platform is Windows.\n   */\n  export const IS_WIN = !!navigator.platform.match(/Win/i);\n\n  /**\n   * A flag indicating whether the browser is IE.\n   */\n  export const IS_IE = /Trident/.test(navigator.userAgent);\n\n  /**\n   * A flag indicating whether the browser is Edge.\n   */\n  export const IS_EDGE = /Edge/.test(navigator.userAgent);\n\n  /**\n   * Test whether the `accel` key is pressed.\n   *\n   * @param event - The keyboard or mouse event of interest.\n   *\n   * @returns Whether the `accel` key is pressed.\n   *\n   * #### Notes\n   * On Mac the `accel` key is the command key. On all other\n   * platforms the `accel` key is the control key.\n   */\n  export function accelKey(event: KeyboardEvent | MouseEvent): boolean {\n    return IS_MAC ? event.metaKey : event.ctrlKey;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for selector related utilities.\n */\nexport namespace Selector {\n  /**\n   * Calculate the specificity of a single CSS selector.\n   *\n   * @param selector - The CSS selector of interest.\n   *\n   * @returns The specificity of the selector.\n   *\n   * #### Undefined Behavior\n   * The selector is invalid.\n   *\n   * #### Notes\n   * This is based on https://www.w3.org/TR/css3-selectors/#specificity\n   *\n   * A larger number represents a more specific selector.\n   *\n   * The smallest possible specificity is `0`.\n   *\n   * The result is represented as a hex number `0x<aa><bb><cc>` where\n   * each component is the count of the respective selector clause.\n   *\n   * If the selector contains commas, only the first clause is used.\n   *\n   * The computed result is cached, so subsequent calculations for the\n   * same selector are extremely fast.\n   */\n  export function calculateSpecificity(selector: string): number {\n    if (selector in Private.specificityCache) {\n      return Private.specificityCache[selector];\n    }\n    let result = Private.calculateSingle(selector);\n    return (Private.specificityCache[selector] = result);\n  }\n\n  /**\n   * Test whether a selector is a valid CSS selector.\n   *\n   * @param selector - The CSS selector of interest.\n   *\n   * @returns `true` if the selector is valid, `false` otherwise.\n   *\n   * #### Notes\n   * The computed result is cached, so subsequent tests for the same\n   * selector are extremely fast.\n   */\n  export function isValid(selector: string): boolean {\n    if (selector in Private.validityCache) {\n      return Private.validityCache[selector];\n    }\n    let result = true;\n    try {\n      Private.testElem.querySelector(selector);\n    } catch (err) {\n      result = false;\n    }\n    return (Private.validityCache[selector] = result);\n  }\n\n  /**\n   * Test whether an element matches a CSS selector.\n   *\n   * @param element - The element of interest.\n   *\n   * @param selector - The valid CSS selector of interest.\n   *\n   * @returns `true` if the element is a match, `false` otherwise.\n   *\n   * #### Notes\n   * This function uses the builtin browser capabilities when possible,\n   * falling back onto a document query otherwise.\n   */\n  export function matches(element: Element, selector: string): boolean {\n    return Private.protoMatchFunc.call(element, selector);\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A type alias for an object hash.\n   */\n  export type StringMap<T> = { [key: string]: T };\n\n  /**\n   * A cache of computed selector specificity values.\n   */\n  export const specificityCache: StringMap<number> = Object.create(null);\n\n  /**\n   * A cache of computed selector validity.\n   */\n  export const validityCache: StringMap<boolean> = Object.create(null);\n\n  /**\n   * An empty element for testing selector validity.\n   */\n  export const testElem = document.createElement('div');\n\n  /**\n   * A cross-browser CSS selector matching prototype function.\n   */\n  export const protoMatchFunc = (() => {\n    let proto = Element.prototype as any;\n    return (\n      proto.matches ||\n      proto.matchesSelector ||\n      proto.mozMatchesSelector ||\n      proto.msMatchesSelector ||\n      proto.oMatchesSelector ||\n      proto.webkitMatchesSelector ||\n      function (selector: string) {\n        let elem = this as Element;\n        let matches = elem.ownerDocument\n          ? elem.ownerDocument.querySelectorAll(selector)\n          : [];\n        return Array.prototype.indexOf.call(matches, elem) !== -1;\n      }\n    );\n  })();\n\n  /**\n   * Calculate the specificity of a single selector.\n   *\n   * The behavior is undefined if the selector is invalid.\n   */\n  export function calculateSingle(selector: string): number {\n    // Ignore anything after the first comma.\n    selector = selector.split(',', 1)[0];\n\n    // Setup the aggregate counters.\n    let a = 0;\n    let b = 0;\n    let c = 0;\n\n    // Apply a regex to the front of the selector. If it succeeds, that\n    // portion of the selector is removed. Returns a success/fail flag.\n    function match(re: RegExp): boolean {\n      let match = selector.match(re);\n      if (match === null) {\n        return false;\n      }\n      selector = selector.slice(match[0].length);\n      return true;\n    }\n\n    // Replace the negation pseudo-class (which is ignored),\n    // but keep its inner content (which is not ignored).\n    selector = selector.replace(NEGATION_RE, ' $1 ');\n\n    // Continue matching until the selector is consumed.\n    while (selector.length > 0) {\n      // Match an ID selector.\n      if (match(ID_RE)) {\n        a++;\n        continue;\n      }\n\n      // Match a class selector.\n      if (match(CLASS_RE)) {\n        b++;\n        continue;\n      }\n\n      // Match an attribute selector.\n      if (match(ATTR_RE)) {\n        b++;\n        continue;\n      }\n\n      // Match a pseudo-element selector. This is done before matching\n      // a pseudo-class since this regex overlaps with that regex.\n      if (match(PSEUDO_ELEM_RE)) {\n        c++;\n        continue;\n      }\n\n      // Match a pseudo-class selector.\n      if (match(PSEDUO_CLASS_RE)) {\n        b++;\n        continue;\n      }\n\n      // Match a plain type selector.\n      if (match(TYPE_RE)) {\n        c++;\n        continue;\n      }\n\n      // Finally, match any ignored characters.\n      if (match(IGNORE_RE)) {\n        continue;\n      }\n\n      // At this point, the selector is assumed to be invalid.\n      return 0;\n    }\n\n    // Clamp each component to a reasonable base.\n    a = Math.min(a, 0xff);\n    b = Math.min(b, 0xff);\n    c = Math.min(c, 0xff);\n\n    // Combine the components into a single result.\n    return (a << 16) | (b << 8) | c;\n  }\n\n  /**\n   * A regex which matches an ID selector at string start.\n   */\n  const ID_RE = /^#[^\\s\\+>~#\\.\\[:]+/;\n\n  /**\n   * A regex which matches a class selector at string start.\n   */\n  const CLASS_RE = /^\\.[^\\s\\+>~#\\.\\[:]+/;\n\n  /**\n   * A regex which matches an attribute selector at string start.\n   */\n  const ATTR_RE = /^\\[[^\\]]+\\]/;\n\n  /**\n   * A regex which matches a type selector at string start.\n   */\n  const TYPE_RE = /^[^\\s\\+>~#\\.\\[:]+/;\n\n  /**\n   * A regex which matches a pseudo-element selector at string start.\n   */\n  const PSEUDO_ELEM_RE =\n    /^(::[^\\s\\+>~#\\.\\[:]+|:first-line|:first-letter|:before|:after)/;\n\n  /**\n   * A regex which matches a pseudo-class selector at string start.\n   */\n  const PSEDUO_CLASS_RE = /^:[^\\s\\+>~#\\.\\[:]+/;\n\n  /**\n   * A regex which matches ignored characters at string start.\n   */\n  const IGNORE_RE = /^[\\s\\+>~\\*]+/;\n\n  /**\n   * A regex which matches the negation pseudo-class globally.\n   */\n  const NEGATION_RE = /:not\\(([^\\)]+)\\)/g;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * @packageDocumentation\n * @module keyboard\n */\n\n/**\n * An object which represents an abstract keyboard layout.\n */\nexport interface IKeyboardLayout {\n  /**\n   * The human readable name of the layout.\n   *\n   * This value is used primarily for display and debugging purposes.\n   */\n  readonly name: string;\n\n  /**\n   * Get an array of all key values supported by the layout.\n   *\n   * @returns A new array of the supported key values.\n   *\n   * #### Notes\n   * This can be useful for authoring tools and debugging, when it's\n   * necessary to know which keys are available for shortcut use.\n   */\n  keys(): string[];\n\n  /**\n   * Test whether the given key is a valid value for the layout.\n   *\n   * @param key - The user provided key to test for validity.\n   *\n   * @returns `true` if the key is valid, `false` otherwise.\n   */\n  isValidKey(key: string): boolean;\n\n  /**\n   * Test whether the given key is a modifier key.\n   *\n   * @param key - The user provided key.\n   *\n   * @returns `true` if the key is a modifier key, `false` otherwise.\n   *\n   * #### Notes\n   * This is necessary so that we don't process modifier keys pressed\n   * in the middle of the key sequence.\n   * E.g. \"Shift C Ctrl P\" is actually 4 keydown events:\n   *   \"Shift\", \"Shift P\", \"Ctrl\", \"Ctrl P\",\n   * and events for \"Shift\" and \"Ctrl\" should be ignored.\n   */\n  isModifierKey(key: string): boolean;\n\n  /**\n   * Get the key for a `'keydown'` event.\n   *\n   * @param event - The event object for a `'keydown'` event.\n   *\n   * @returns The associated key value, or an empty string if the event\n   *   does not represent a valid primary key.\n   */\n  keyForKeydownEvent(event: KeyboardEvent): string;\n}\n\n/**\n * Get the global application keyboard layout instance.\n *\n * @returns The keyboard layout for use by the application.\n *\n * #### Notes\n * The default keyboard layout is US-English.\n */\nexport function getKeyboardLayout(): IKeyboardLayout {\n  return Private.keyboardLayout;\n}\n\n/**\n * Set the global application keyboard layout instance.\n *\n * @param - The keyboard layout for use by the application.\n *\n * #### Notes\n * The keyboard layout should typically be set on application startup\n * to a layout which is appropriate for the user's system.\n */\nexport function setKeyboardLayout(layout: IKeyboardLayout): void {\n  Private.keyboardLayout = layout;\n}\n\n/**\n * A concrete implementation of {@link IKeyboardLayout} based on keycodes.\n *\n * The `keyCode` property of a `'keydown'` event is a browser and OS\n * specific representation of the physical key (not character) which\n * was pressed on a keyboard. While not the most convenient API, it\n * is currently the only one which works reliably on all browsers.\n *\n * This class accepts a user-defined mapping of keycode to key, which\n * allows for reliable shortcuts tailored to the user's system.\n */\nexport class KeycodeLayout implements IKeyboardLayout {\n  /**\n   * Construct a new keycode layout.\n   *\n   * @param name - The human readable name for the layout.\n   *\n   * @param codes - A mapping of keycode to key value.\n   *\n   * @param modifierKeys - Array of modifier key names\n   */\n  constructor(\n    name: string,\n    codes: KeycodeLayout.CodeMap,\n    modifierKeys: string[] = []\n  ) {\n    this.name = name;\n    this._codes = codes;\n    this._keys = KeycodeLayout.extractKeys(codes);\n    this._modifierKeys = KeycodeLayout.convertToKeySet(modifierKeys);\n  }\n\n  /**\n   * The human readable name of the layout.\n   */\n  readonly name: string;\n\n  /**\n   * Get an array of the key values supported by the layout.\n   *\n   * @returns A new array of the supported key values.\n   */\n  keys(): string[] {\n    return Object.keys(this._keys);\n  }\n\n  /**\n   * Test whether the given key is a valid value for the layout.\n   *\n   * @param key - The user provided key to test for validity.\n   *\n   * @returns `true` if the key is valid, `false` otherwise.\n   */\n  isValidKey(key: string): boolean {\n    return key in this._keys;\n  }\n\n  /**\n   * Test whether the given key is a modifier key.\n   *\n   * @param key - The user provided key.\n   *\n   * @returns `true` if the key is a modifier key, `false` otherwise.\n   */\n  isModifierKey(key: string): boolean {\n    return key in this._modifierKeys;\n  }\n\n  /**\n   * Get the key for a `'keydown'` event.\n   *\n   * @param event - The event object for a `'keydown'` event.\n   *\n   * @returns The associated key value, or an empty string if\n   *   the event does not represent a valid primary key.\n   */\n  keyForKeydownEvent(event: KeyboardEvent): string {\n    return this._codes[event.keyCode] || '';\n  }\n\n  private _keys: KeycodeLayout.KeySet;\n  private _codes: KeycodeLayout.CodeMap;\n  private _modifierKeys: KeycodeLayout.KeySet;\n}\n\n/**\n * The namespace for the `KeycodeLayout` class statics.\n */\nexport namespace KeycodeLayout {\n  /**\n   * A type alias for a keycode map.\n   */\n  export type CodeMap = { readonly [code: number]: string };\n\n  /**\n   * A type alias for a key set.\n   */\n  export type KeySet = { readonly [key: string]: boolean };\n\n  /**\n   * Extract the set of keys from a code map.\n   *\n   * @param code - The code map of interest.\n   *\n   * @returns A set of the keys in the code map.\n   */\n  export function extractKeys(codes: CodeMap): KeySet {\n    let keys: any = Object.create(null);\n    for (let c in codes) {\n      keys[codes[c]] = true;\n    }\n    return keys as KeySet;\n  }\n\n  /**\n   * Convert array of keys to a key set.\n   *\n   * @param keys - The array that needs to be converted\n   *\n   * @returns A set of the keys in the array.\n   */\n  export function convertToKeySet(keys: string[]): KeySet {\n    let keySet = Object(null);\n    for (let i = 0, n = keys.length; i < n; ++i) {\n      keySet[keys[i]] = true;\n    }\n    return keySet;\n  }\n}\n\n/**\n * A keycode-based keyboard layout for US English keyboards.\n *\n * This layout is valid for the following OS/Browser combinations.\n *\n * - Windows\n *   - Chrome\n *   - Firefox\n *   - IE\n *\n * - OSX\n *   - Chrome\n *   - Firefox\n *   - Safari\n *\n * - Linux\n *   - Chrome\n *   - Firefox\n *\n * Other combinations may also work, but are untested.\n */\nexport const EN_US: IKeyboardLayout = new KeycodeLayout(\n  'en-us',\n  {\n    8: 'Backspace',\n    9: 'Tab',\n    13: 'Enter',\n    16: 'Shift',\n    17: 'Ctrl',\n    18: 'Alt',\n    19: 'Pause',\n    27: 'Escape',\n    32: 'Space',\n    33: 'PageUp',\n    34: 'PageDown',\n    35: 'End',\n    36: 'Home',\n    37: 'ArrowLeft',\n    38: 'ArrowUp',\n    39: 'ArrowRight',\n    40: 'ArrowDown',\n    45: 'Insert',\n    46: 'Delete',\n    48: '0',\n    49: '1',\n    50: '2',\n    51: '3',\n    52: '4',\n    53: '5',\n    54: '6',\n    55: '7',\n    56: '8',\n    57: '9',\n    59: ';', // firefox\n    61: '=', // firefox\n    65: 'A',\n    66: 'B',\n    67: 'C',\n    68: 'D',\n    69: 'E',\n    70: 'F',\n    71: 'G',\n    72: 'H',\n    73: 'I',\n    74: 'J',\n    75: 'K',\n    76: 'L',\n    77: 'M',\n    78: 'N',\n    79: 'O',\n    80: 'P',\n    81: 'Q',\n    82: 'R',\n    83: 'S',\n    84: 'T',\n    85: 'U',\n    86: 'V',\n    87: 'W',\n    88: 'X',\n    89: 'Y',\n    90: 'Z',\n    91: 'Meta', // non-firefox\n    93: 'ContextMenu',\n    96: '0', // numpad\n    97: '1', // numpad\n    98: '2', // numpad\n    99: '3', // numpad\n    100: '4', // numpad\n    101: '5', // numpad\n    102: '6', // numpad\n    103: '7', // numpad\n    104: '8', // numpad\n    105: '9', // numpad\n    106: '*', // numpad\n    107: '+', // numpad\n    109: '-', // numpad\n    110: '.', // numpad\n    111: '/', // numpad\n    112: 'F1',\n    113: 'F2',\n    114: 'F3',\n    115: 'F4',\n    116: 'F5',\n    117: 'F6',\n    118: 'F7',\n    119: 'F8',\n    120: 'F9',\n    121: 'F10',\n    122: 'F11',\n    123: 'F12',\n    173: '-', // firefox\n    186: ';', // non-firefox\n    187: '=', // non-firefox\n    188: ',',\n    189: '-', // non-firefox\n    190: '.',\n    191: '/',\n    192: '`',\n    219: '[',\n    220: '\\\\',\n    221: ']',\n    222: \"'\",\n    224: 'Meta' // firefox\n  },\n  ['Shift', 'Ctrl', 'Alt', 'Meta'] // modifier keys\n);\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * The global keyboard layout instance.\n   */\n  export let keyboardLayout = EN_US;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * @packageDocumentation\n * @module commands\n */\nimport { ArrayExt } from '@lumino/algorithm';\n\nimport {\n  JSONExt,\n  ReadonlyJSONObject,\n  ReadonlyPartialJSONObject\n} from '@lumino/coreutils';\n\nimport { DisposableDelegate, IDisposable } from '@lumino/disposable';\n\nimport { Platform, Selector } from '@lumino/domutils';\n\nimport { getKeyboardLayout } from '@lumino/keyboard';\n\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { VirtualElement } from '@lumino/virtualdom';\n\n/**\n * An object which manages a collection of commands.\n *\n * #### Notes\n * A command registry can be used to populate a variety of action-based\n * widgets, such as command palettes, menus, and toolbars.\n */\nexport class CommandRegistry {\n  /**\n   * A signal emitted when a command has changed.\n   *\n   * #### Notes\n   * This signal is useful for visual representations of commands which\n   * need to refresh when the state of a relevant command has changed.\n   */\n  get commandChanged(): ISignal<this, CommandRegistry.ICommandChangedArgs> {\n    return this._commandChanged;\n  }\n\n  /**\n   * A signal emitted when a command has executed.\n   *\n   * #### Notes\n   * Care should be taken when consuming this signal. The command system is used\n   * by many components for many user actions. Handlers registered with this\n   * signal must return quickly to ensure the overall application remains responsive.\n   */\n  get commandExecuted(): ISignal<this, CommandRegistry.ICommandExecutedArgs> {\n    return this._commandExecuted;\n  }\n\n  /**\n   * A signal emitted when a key binding is changed.\n   */\n  get keyBindingChanged(): ISignal<\n    this,\n    CommandRegistry.IKeyBindingChangedArgs\n  > {\n    return this._keyBindingChanged;\n  }\n\n  /**\n   * A read-only array of the key bindings in the registry.\n   */\n  get keyBindings(): ReadonlyArray<CommandRegistry.IKeyBinding> {\n    return this._keyBindings;\n  }\n\n  /**\n   * List the ids of the registered commands.\n   *\n   * @returns A new array of the registered command ids.\n   */\n  listCommands(): string[] {\n    return Array.from(this._commands.keys());\n  }\n\n  /**\n   * Test whether a specific command is registered.\n   *\n   * @param id - The id of the command of interest.\n   *\n   * @returns `true` if the command is registered, `false` otherwise.\n   */\n  hasCommand(id: string): boolean {\n    return this._commands.has(id);\n  }\n\n  /**\n   * Add a command to the registry.\n   *\n   * @param id - The unique id of the command.\n   *\n   * @param options - The options for the command.\n   *\n   * @returns A disposable which will remove the command.\n   *\n   * @throws An error if the given `id` is already registered.\n   */\n  addCommand(\n    id: string,\n    options: CommandRegistry.ICommandOptions\n  ): IDisposable {\n    // Throw an error if the id is already registered.\n    if (this._commands.has(id)) {\n      throw new Error(`Command '${id}' already registered.`);\n    }\n\n    // Add the command to the registry.\n    this._commands.set(id, Private.createCommand(options));\n\n    // Emit the `commandChanged` signal.\n    this._commandChanged.emit({ id, type: 'added' });\n\n    // Return a disposable which will remove the command.\n    return new DisposableDelegate(() => {\n      // Remove the command from the registry.\n      this._commands.delete(id);\n\n      // Emit the `commandChanged` signal.\n      this._commandChanged.emit({ id, type: 'removed' });\n    });\n  }\n\n  /**\n   * Notify listeners that the state of a command has changed.\n   *\n   * @param id - The id of the command which has changed. If more than\n   *   one command has changed, this argument should be omitted.\n   *\n   * @throws An error if the given `id` is not registered.\n   *\n   * #### Notes\n   * This method should be called by the command author whenever the\n   * application state changes such that the results of the command\n   * metadata functions may have changed.\n   *\n   * This will cause the `commandChanged` signal to be emitted.\n   */\n  notifyCommandChanged(id?: string): void {\n    if (id !== undefined && !this._commands.has(id)) {\n      throw new Error(`Command '${id}' is not registered.`);\n    }\n    this._commandChanged.emit({ id, type: id ? 'changed' : 'many-changed' });\n  }\n\n  /**\n   * Get the description for a specific command.\n   *\n   * @param id - The id of the command of interest.\n   *\n   * @param args - The arguments for the command.\n   *\n   * @returns The description for the command.\n   */\n  describedBy(\n    id: string,\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\n  ): Promise<CommandRegistry.Description> {\n    let cmd = this._commands.get(id);\n    return Promise.resolve(\n      cmd?.describedBy.call(undefined, args) ?? { args: null }\n    );\n  }\n\n  /**\n   * Get the display label for a specific command.\n   *\n   * @param id - The id of the command of interest.\n   *\n   * @param args - The arguments for the command.\n   *\n   * @returns The display label for the command, or an empty string\n   *   if the command is not registered.\n   */\n  label(\n    id: string,\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\n  ): string {\n    let cmd = this._commands.get(id);\n    return cmd?.label.call(undefined, args) ?? '';\n  }\n\n  /**\n   * Get the mnemonic index for a specific command.\n   *\n   * @param id - The id of the command of interest.\n   *\n   * @param args - The arguments for the command.\n   *\n   * @returns The mnemonic index for the command, or `-1` if the\n   *   command is not registered.\n   */\n  mnemonic(\n    id: string,\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\n  ): number {\n    let cmd = this._commands.get(id);\n    return cmd ? cmd.mnemonic.call(undefined, args) : -1;\n  }\n\n  /**\n   * Get the icon renderer for a specific command.\n   *\n   * DEPRECATED: if set to a string value, the .icon field will\n   * function as an alias for the .iconClass field, for backwards\n   * compatibility. In the future when this is removed, the default\n   * return type will become undefined.\n   *\n   * @param id - The id of the command of interest.\n   *\n   * @param args - The arguments for the command.\n   *\n   * @returns The icon renderer for the command or `undefined`.\n   */\n  icon(\n    id: string,\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\n  ): VirtualElement.IRenderer | undefined {\n    return this._commands.get(id)?.icon.call(undefined, args);\n  }\n\n  /**\n   * Get the icon class for a specific command.\n   *\n   * @param id - The id of the command of interest.\n   *\n   * @param args - The arguments for the command.\n   *\n   * @returns The icon class for the command, or an empty string if\n   *   the command is not registered.\n   */\n  iconClass(\n    id: string,\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\n  ): string {\n    let cmd = this._commands.get(id);\n    return cmd ? cmd.iconClass.call(undefined, args) : '';\n  }\n\n  /**\n   * Get the icon label for a specific command.\n   *\n   * @param id - The id of the command of interest.\n   *\n   * @param args - The arguments for the command.\n   *\n   * @returns The icon label for the command, or an empty string if\n   *   the command is not registered.\n   */\n  iconLabel(\n    id: string,\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\n  ): string {\n    let cmd = this._commands.get(id);\n    return cmd ? cmd.iconLabel.call(undefined, args) : '';\n  }\n\n  /**\n   * Get the short form caption for a specific command.\n   *\n   * @param id - The id of the command of interest.\n   *\n   * @param args - The arguments for the command.\n   *\n   * @returns The caption for the command, or an empty string if the\n   *   command is not registered.\n   */\n  caption(\n    id: string,\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\n  ): string {\n    let cmd = this._commands.get(id);\n    return cmd ? cmd.caption.call(undefined, args) : '';\n  }\n\n  /**\n   * Get the usage help text for a specific command.\n   *\n   * @param id - The id of the command of interest.\n   *\n   * @param args - The arguments for the command.\n   *\n   * @returns The usage text for the command, or an empty string if\n   *   the command is not registered.\n   */\n  usage(\n    id: string,\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\n  ): string {\n    let cmd = this._commands.get(id);\n    return cmd ? cmd.usage.call(undefined, args) : '';\n  }\n\n  /**\n   * Get the extra class name for a specific command.\n   *\n   * @param id - The id of the command of interest.\n   *\n   * @param args - The arguments for the command.\n   *\n   * @returns The class name for the command, or an empty string if\n   *   the command is not registered.\n   */\n  className(\n    id: string,\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\n  ): string {\n    let cmd = this._commands.get(id);\n    return cmd ? cmd.className.call(undefined, args) : '';\n  }\n\n  /**\n   * Get the dataset for a specific command.\n   *\n   * @param id - The id of the command of interest.\n   *\n   * @param args - The arguments for the command.\n   *\n   * @returns The dataset for the command, or an empty dataset if\n   *   the command is not registered.\n   */\n  dataset(\n    id: string,\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\n  ): CommandRegistry.Dataset {\n    let cmd = this._commands.get(id);\n    return cmd ? cmd.dataset.call(undefined, args) : {};\n  }\n\n  /**\n   * Test whether a specific command is enabled.\n   *\n   * @param id - The id of the command of interest.\n   *\n   * @param args - The arguments for the command.\n   *\n   * @returns A boolean indicating whether the command is enabled,\n   *   or `false` if the command is not registered.\n   */\n  isEnabled(\n    id: string,\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\n  ): boolean {\n    let cmd = this._commands.get(id);\n    return cmd ? cmd.isEnabled.call(undefined, args) : false;\n  }\n\n  /**\n   * Test whether a specific command is toggled.\n   *\n   * @param id - The id of the command of interest.\n   *\n   * @param args - The arguments for the command.\n   *\n   * @returns A boolean indicating whether the command is toggled,\n   *   or `false` if the command is not registered.\n   */\n  isToggled(\n    id: string,\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\n  ): boolean {\n    let cmd = this._commands.get(id);\n    return cmd ? cmd.isToggled.call(undefined, args) : false;\n  }\n\n  /**\n   * Test whether a specific command is toggleable.\n   *\n   * @param id - The id of the command of interest.\n   *\n   * @param args - The arguments for the command.\n   *\n   * @returns A boolean indicating whether the command is toggleable,\n   *   or `false` if the command is not registered.\n   */\n  isToggleable(\n    id: string,\n    args: ReadonlyJSONObject = JSONExt.emptyObject\n  ): boolean {\n    let cmd = this._commands.get(id);\n    return cmd ? cmd.isToggleable : false;\n  }\n\n  /**\n   * Test whether a specific command is visible.\n   *\n   * @param id - The id of the command of interest.\n   *\n   * @param args - The arguments for the command.\n   *\n   * @returns A boolean indicating whether the command is visible,\n   *   or `false` if the command is not registered.\n   */\n  isVisible(\n    id: string,\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\n  ): boolean {\n    let cmd = this._commands.get(id);\n    return cmd ? cmd.isVisible.call(undefined, args) : false;\n  }\n\n  /**\n   * Execute a specific command.\n   *\n   * @param id - The id of the command of interest.\n   *\n   * @param args - The arguments for the command.\n   *\n   * @returns A promise which resolves with the result of the command.\n   *\n   * #### Notes\n   * The promise will reject if the command throws an exception,\n   * or if the command is not registered.\n   */\n  execute(\n    id: string,\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\n  ): Promise<any> {\n    // Reject if the command is not registered.\n    let cmd = this._commands.get(id);\n    if (!cmd) {\n      return Promise.reject(new Error(`Command '${id}' not registered.`));\n    }\n\n    // Execute the command and reject if an exception is thrown.\n    let value: any;\n    try {\n      value = cmd.execute.call(undefined, args);\n    } catch (err) {\n      value = Promise.reject(err);\n    }\n\n    // Create the return promise which resolves the result.\n    let result = Promise.resolve(value);\n\n    // Emit the command executed signal.\n    this._commandExecuted.emit({ id, args, result });\n\n    // Return the result promise to the caller.\n    return result;\n  }\n\n  /**\n   * Add a key binding to the registry.\n   *\n   * @param options - The options for creating the key binding.\n   *\n   * @returns A disposable which removes the added key binding.\n   *\n   * #### Notes\n   * If multiple key bindings are registered for the same sequence, the\n   * binding with the highest selector specificity is executed first. A\n   * tie is broken by using the most recently added key binding.\n   *\n   * Ambiguous key bindings are resolved with a timeout. As an example,\n   * suppose two key bindings are registered: one with the key sequence\n   * `['Ctrl D']`, and another with `['Ctrl D', 'Ctrl W']`. If the user\n   * presses `Ctrl D`, the first binding cannot be immediately executed\n   * since the user may intend to complete the chord with `Ctrl W`. For\n   * such cases, a timer is used to allow the chord to be completed. If\n   * the chord is not completed before the timeout, the first binding\n   * is executed.\n   */\n  addKeyBinding(options: CommandRegistry.IKeyBindingOptions): IDisposable {\n    // Create the binding for the given options.\n    let binding = Private.createKeyBinding(options);\n\n    // Add the key binding to the bindings array.\n    this._keyBindings.push(binding);\n\n    // Emit the `bindingChanged` signal.\n    this._keyBindingChanged.emit({ binding, type: 'added' });\n\n    // Return a disposable which will remove the binding.\n    return new DisposableDelegate(() => {\n      // Remove the binding from the array.\n      ArrayExt.removeFirstOf(this._keyBindings, binding);\n\n      // Emit the `bindingChanged` signal.\n      this._keyBindingChanged.emit({ binding, type: 'removed' });\n    });\n  }\n\n  /**\n   * Process a `'keydown'` event and invoke a matching key binding.\n   *\n   * @param event - The event object for a `'keydown'` event.\n   *\n   * #### Notes\n   * This should be called in response to a `'keydown'` event in order\n   * to invoke the command for the best matching key binding.\n   *\n   * The registry **does not** install its own listener for `'keydown'`\n   * events. This allows the application full control over the nodes\n   * and phase for which the registry processes `'keydown'` events.\n   *\n   * When the keydown event is processed, if the event target or any of its\n   * ancestor nodes has a `data-lm-suppress-shortcuts` attribute, its keydown\n   * events will not invoke commands.\n   */\n  processKeydownEvent(event: KeyboardEvent): void {\n    // Bail immediately if playing back keystrokes\n    // or if the event has been processed\n    if (\n      event.defaultPrevented ||\n      this._replaying ||\n      CommandRegistry.isModifierKeyPressed(event)\n    ) {\n      return;\n    }\n\n    // Get the normalized keystroke for the event.\n    const keystroke = CommandRegistry.keystrokeForKeydownEvent(event);\n\n    // If the keystroke is not valid for the keyboard layout, replay\n    // any suppressed events and clear the pending state.\n    if (!keystroke) {\n      this._replayKeydownEvents();\n      this._clearPendingState();\n      return;\n    }\n\n    // Add the keystroke to the current key sequence.\n    this._keystrokes.push(keystroke);\n\n    // Find the exact and partial matches for the key sequence.\n    const { exact, partial } = Private.matchKeyBinding(\n      this._keyBindings,\n      this._keystrokes,\n      event\n    );\n    // Whether there is any partial match.\n    const hasPartial = partial.length !== 0;\n\n    // If there is no exact match and no partial match, replay\n    // any suppressed events and clear the pending state.\n    if (!exact && !hasPartial) {\n      this._replayKeydownEvents();\n      this._clearPendingState();\n      return;\n    }\n\n    // Stop propagation of the event. If there is only a partial match,\n    // the event will be replayed if a final exact match never occurs.\n    if (exact?.preventDefault || partial.some(match => match.preventDefault)) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    // Store the event for possible playback in the future and for\n    // the use in execution hold check.\n    this._keydownEvents.push(event);\n\n    // If there is an exact match but no partial match, the exact match\n    // can be dispatched immediately. The pending state is cleared so\n    // the next key press starts from the default state.\n    if (exact && !hasPartial) {\n      this._executeKeyBinding(exact);\n      this._clearPendingState();\n      return;\n    }\n\n    // If there is both an exact match and a partial match, the exact\n    // match is stored for future dispatch in case the timer expires\n    // before a more specific match is triggered.\n    if (exact) {\n      this._exactKeyMatch = exact;\n    }\n\n    // (Re)start the timer to dispatch the most recent exact match\n    // in case the partial match fails to result in an exact match.\n    this._startTimer();\n  }\n\n  /**\n   * Delay the execution of any command matched against the given 'keydown' event\n   * until the `permission` to execute is granted.\n   *\n   * @param event - The event object for a `'keydown'` event.\n   * @param permission - The promise with value indicating whether to proceed with the execution.\n   *\n   * ### Note\n   * This enables the caller of `processKeydownEvent` to asynchronously prevent the\n   * execution of the command based on external events.\n   */\n  holdKeyBindingExecution(event: KeyboardEvent, permission: Promise<boolean>) {\n    this._holdKeyBindingPromises.set(event, permission);\n  }\n\n  /**\n   * Start or restart the pending timeout.\n   */\n  private _startTimer(): void {\n    this._clearTimer();\n    this._timerID = window.setTimeout(() => {\n      this._onPendingTimeout();\n    }, Private.CHORD_TIMEOUT);\n  }\n\n  /**\n   * Clear the pending timeout.\n   */\n  private _clearTimer(): void {\n    if (this._timerID !== 0) {\n      clearTimeout(this._timerID);\n      this._timerID = 0;\n    }\n  }\n\n  /**\n   * Replay the keydown events which were suppressed.\n   */\n  private _replayKeydownEvents(): void {\n    if (this._keydownEvents.length === 0) {\n      return;\n    }\n    this._replaying = true;\n    this._keydownEvents.forEach(Private.replayKeyEvent);\n    this._replaying = false;\n  }\n\n  /**\n   * Execute the command for the given key binding.\n   *\n   * If the command is missing or disabled, a warning will be logged.\n   *\n   * The execution will not proceed if any of the events leading to\n   * the keybinding matching were held with the permission resolving to false.\n   */\n  private async _executeKeyBinding(\n    binding: CommandRegistry.IKeyBinding\n  ): Promise<void> {\n    if (this._holdKeyBindingPromises.size !== 0) {\n      // Copy keydown events list to ensure it is available in async code.\n      const keydownEvents = [...this._keydownEvents];\n      // Wait until all hold requests on execution are lifted.\n      const executionAllowed = (\n        await Promise.race([\n          Promise.all(\n            keydownEvents.map(\n              async event =>\n                this._holdKeyBindingPromises.get(event) ?? Promise.resolve(true)\n            )\n          ),\n          new Promise<boolean[]>(resolve => {\n            setTimeout(() => resolve([false]), Private.KEYBINDING_HOLD_TIMEOUT);\n          })\n        ])\n      ).every(Boolean);\n      // Clear the hold requests.\n      this._holdKeyBindingPromises.clear();\n      // Do not proceed with the execution if any of the hold requests did not get the permission to proceed.\n      if (!executionAllowed) {\n        return;\n      }\n    }\n\n    let { command, args } = binding;\n    let newArgs: ReadonlyPartialJSONObject = {\n      _luminoEvent: { type: 'keybinding', keys: binding.keys },\n      ...args\n    };\n    if (!this.hasCommand(command) || !this.isEnabled(command, newArgs)) {\n      let word = this.hasCommand(command) ? 'enabled' : 'registered';\n      let keys = binding.keys.join(', ');\n      let msg1 = `Cannot execute key binding '${keys}':`;\n      let msg2 = `command '${command}' is not ${word}.`;\n      console.warn(`${msg1} ${msg2}`);\n      return;\n    }\n    await this.execute(command, newArgs);\n  }\n\n  /**\n   * Clear the internal pending state.\n   */\n  private _clearPendingState(): void {\n    this._clearTimer();\n    this._exactKeyMatch = null;\n    this._keystrokes.length = 0;\n    this._keydownEvents.length = 0;\n  }\n\n  /**\n   * Handle the partial match timeout.\n   */\n  private _onPendingTimeout(): void {\n    this._timerID = 0;\n    if (this._exactKeyMatch) {\n      this._executeKeyBinding(this._exactKeyMatch);\n    } else {\n      this._replayKeydownEvents();\n    }\n    this._clearPendingState();\n  }\n\n  private _timerID = 0;\n  private _replaying = false;\n  private _keystrokes: string[] = [];\n  private _keydownEvents: KeyboardEvent[] = [];\n  private _keyBindings: CommandRegistry.IKeyBinding[] = [];\n  private _exactKeyMatch: CommandRegistry.IKeyBinding | null = null;\n  private _commands = new Map<string, Private.ICommand>();\n  private _commandChanged = new Signal<\n    this,\n    CommandRegistry.ICommandChangedArgs\n  >(this);\n  private _commandExecuted = new Signal<\n    this,\n    CommandRegistry.ICommandExecutedArgs\n  >(this);\n  private _keyBindingChanged = new Signal<\n    this,\n    CommandRegistry.IKeyBindingChangedArgs\n  >(this);\n  private _holdKeyBindingPromises = new Map<KeyboardEvent, Promise<boolean>>();\n}\n\n/**\n * The namespace for the `CommandRegistry` class statics.\n */\nexport namespace CommandRegistry {\n  /**\n   * A type alias for a user-defined command function.\n   */\n  export type CommandFunc<T> = (args: ReadonlyPartialJSONObject) => T;\n\n  /**\n   * A type alias for a simple immutable string dataset.\n   */\n  export type Dataset = { readonly [key: string]: string };\n\n  /**\n   * Commands description.\n   */\n  export type Description = { args: ReadonlyJSONObject | null };\n\n  /**\n   * An options object for creating a command.\n   *\n   * #### Notes\n   * A command is an abstract representation of code to be executed along\n   * with metadata for describing how the command should be displayed in\n   * a visual representation.\n   *\n   * A command is a collection of functions, *not* methods. The command\n   * registry will always invoke the command functions with a `thisArg`\n   * which is `undefined`.\n   */\n  export interface ICommandOptions {\n    /**\n     * The function to invoke when the command is executed.\n     *\n     * #### Notes\n     * This should return the result of the command (if applicable) or\n     * a promise which yields the result. The result is resolved as a\n     * promise and that promise is returned to the code which executed\n     * the command.\n     *\n     * This may be invoked even when `isEnabled` returns `false`.\n     *\n     * If called via a keybinding the passed args will include a `_luminoEvent` that specify the event type and keys pressed for customization.\n     */\n    execute: CommandFunc<any | Promise<any>>;\n\n    /**\n     * JSON Schemas describing the command.\n     *\n     * #### Notes\n     * For now, the command arguments are the only one that can be\n     * described.\n     */\n    describedBy?:\n      | Partial<Description>\n      | CommandFunc<Partial<Description> | Promise<Partial<Description>>>;\n\n    /**\n     * The label for the command.\n     *\n     * #### Notes\n     * This can be a string literal, or a function which returns the\n     * label based on the provided command arguments.\n     *\n     * The label is often used as the primary text for the command.\n     *\n     * The default value is an empty string.\n     */\n    label?: string | CommandFunc<string>;\n\n    /**\n     * The index of the mnemonic character in the command's label.\n     *\n     * #### Notes\n     * This can be an index literal, or a function which returns the\n     * mnemonic index based on the provided command arguments.\n     *\n     * The mnemonic character is often used by menus to provide easy\n     * single-key keyboard access for triggering a menu item. It is\n     * typically rendered as an underlined character in the label.\n     *\n     * The default value is `-1`.\n     */\n    mnemonic?: number | CommandFunc<number>;\n\n    /**\n     * The icon renderer for the command.\n     *\n     * #### Notes\n     * This can be an IRenderer object, or a function which returns the\n     * renderer based on the provided command arguments.\n     *\n     * The default value is `undefined`.\n     */\n    icon?:\n      | VirtualElement.IRenderer\n      | undefined\n      | CommandFunc<VirtualElement.IRenderer | undefined>;\n\n    /**\n     * The icon class for the command.\n     *\n     * #### Notes\n     * This class name will be added to the icon node for the visual\n     * representation of the command.\n     *\n     * Multiple class names can be separated with white space.\n     *\n     * This can be a string literal, or a function which returns the\n     * icon based on the provided command arguments.\n     *\n     * The default value is an empty string.\n     */\n    iconClass?: string | CommandFunc<string>;\n\n    /**\n     * The icon label for the command.\n     *\n     * #### Notes\n     * This label will be added as text to the icon node for the visual\n     * representation of the command.\n     *\n     * This can be a string literal, or a function which returns the\n     * label based on the provided command arguments.\n     *\n     * The default value is an empty string.\n     */\n    iconLabel?: string | CommandFunc<string>;\n\n    /**\n     * The caption for the command.\n     *\n     * #### Notes\n     * This should be a simple one line description of the command. It\n     * is used by some visual representations to show quick info about\n     * the command.\n     *\n     * This can be a string literal, or a function which returns the\n     * caption based on the provided command arguments.\n     *\n     * The default value is an empty string.\n     */\n    caption?: string | CommandFunc<string>;\n\n    /**\n     * The usage text for the command.\n     *\n     * #### Notes\n     * This should be a full description of the command, which includes\n     * information about the structure of the arguments and the type of\n     * the return value. It is used by some visual representations when\n     * displaying complete help info about the command.\n     *\n     * This can be a string literal, or a function which returns the\n     * usage text based on the provided command arguments.\n     *\n     * The default value is an empty string.\n     */\n    usage?: string | CommandFunc<string>;\n\n    /**\n     * The general class name for the command.\n     *\n     * #### Notes\n     * This class name will be added to the primary node for the visual\n     * representation of the command.\n     *\n     * Multiple class names can be separated with white space.\n     *\n     * This can be a string literal, or a function which returns the\n     * class name based on the provided command arguments.\n     *\n     * The default value is an empty string.\n     */\n    className?: string | CommandFunc<string>;\n\n    /**\n     * The dataset for the command.\n     *\n     * #### Notes\n     * The dataset values will be added to the primary node for the\n     * visual representation of the command.\n     *\n     * This can be a dataset object, or a function which returns the\n     * dataset object based on the provided command arguments.\n     *\n     * The default value is an empty dataset.\n     */\n    dataset?: Dataset | CommandFunc<Dataset>;\n\n    /**\n     * A function which indicates whether the command is enabled.\n     *\n     * #### Notes\n     * Visual representations may use this value to display a disabled\n     * command as grayed-out or in some other non-interactive fashion.\n     *\n     * The default value is `() => true`.\n     *\n     * If called via a keybinding the passed args will include a `_luminoEvent` that specify the event type and keys pressed for customization\n     */\n    isEnabled?: CommandFunc<boolean>;\n\n    /**\n     * A function which indicates whether the command is toggled.\n     *\n     * #### Notes\n     * Visual representations may use this value to display a toggled\n     * command in a different form, such as a check mark icon for a\n     * menu item or a depressed state for a toggle button.\n     *\n     * The default value is `() => false`.\n     */\n    isToggled?: CommandFunc<boolean>;\n\n    /**\n     * A function which indicates whether the command is toggleable.\n     *\n     * #### Notes\n     * Visual representations may use this value to display a toggled command in\n     * a different form, such as a check box for a menu item or a depressed\n     * state for a toggle button. This attribute also allows for accessible\n     * interfaces to notify the user that the command corresponds to some state.\n     *\n     * The default value is `true` if an `isToggled` function is given, `false`\n     * otherwise.\n     */\n    isToggleable?: boolean;\n\n    /**\n     * A function which indicates whether the command is visible.\n     *\n     * #### Notes\n     * Visual representations may use this value to hide or otherwise\n     * not display a non-visible command.\n     *\n     * The default value is `() => true`.\n     */\n    isVisible?: CommandFunc<boolean>;\n  }\n\n  /**\n   * An arguments object for the `commandChanged` signal.\n   */\n  export interface ICommandChangedArgs {\n    /**\n     * The id of the associated command.\n     *\n     * This will be `undefined` when the type is `'many-changed'`.\n     */\n    readonly id: string | undefined;\n\n    /**\n     * Whether the command was added, removed, or changed.\n     */\n    readonly type: 'added' | 'removed' | 'changed' | 'many-changed';\n  }\n\n  /**\n   * An arguments object for the `commandExecuted` signal.\n   */\n  export interface ICommandExecutedArgs {\n    /**\n     * The id of the associated command.\n     */\n    readonly id: string;\n\n    /**\n     * The arguments object passed to the command.\n     */\n    readonly args: ReadonlyPartialJSONObject;\n\n    /**\n     * The promise which resolves with the result of the command.\n     */\n    readonly result: Promise<any>;\n  }\n\n  /**\n   * An options object for creating a key binding.\n   */\n  export interface IKeyBindingOptions {\n    /**\n     * The default key sequence for the key binding.\n     *\n     * A key sequence is composed of one or more keystrokes, where each\n     * keystroke is a combination of modifiers and a primary key.\n     *\n     * Most key sequences will contain a single keystroke. Key sequences\n     * with multiple keystrokes are called \"chords\", and are useful for\n     * implementing modal input (ala Vim).\n     *\n     * Each keystroke in the sequence should be of the form:\n     *   `[<modifier 1> [<modifier 2> [<modifier N> ]]]<primary key>`\n     *\n     * The supported modifiers are: `Accel`, `Alt`, `Cmd`, `Ctrl`, and\n     * `Shift`. The `Accel` modifier is translated to `Cmd` on Mac and\n     * `Ctrl` on all other platforms. The `Cmd` modifier is ignored on\n     * non-Mac platforms.\n     *\n     * Keystrokes are case sensitive.\n     *\n     * **Examples:** `['Accel C']`, `['Shift F11']`, `['D', 'D']`\n     */\n    keys: string[];\n\n    /**\n     * The CSS selector for the key binding.\n     *\n     * The key binding will only be invoked when the selector matches a\n     * node on the propagation path of the keydown event. This allows\n     * the key binding to be restricted to user-defined contexts.\n     *\n     * The selector must not contain commas.\n     */\n    selector: string;\n\n    /**\n     * The id of the command to execute when the binding is matched.\n     */\n    command: string;\n\n    /**\n     * The arguments for the command, if necessary.\n     *\n     * The default value is an empty object. If a command is activated by _executeKeyBinding, `args = {_luminoEvent: {type: <string>, keys: <string[]>}}`\n     */\n    args?: ReadonlyPartialJSONObject;\n\n    /**\n     * The key sequence to use when running on Windows.\n     *\n     * If provided, this will override `keys` on Windows platforms.\n     */\n    winKeys?: string[];\n\n    /**\n     * The key sequence to use when running on Mac.\n     *\n     * If provided, this will override `keys` on Mac platforms.\n     */\n    macKeys?: string[];\n\n    /**\n     * The key sequence to use when running on Linux.\n     *\n     * If provided, this will override `keys` on Linux platforms.\n     */\n    linuxKeys?: string[];\n\n    /**\n     * Whether to prevent default action of the keyboard events during sequence matching.\n     *\n     * The default value is `true`.\n     */\n    preventDefault?: boolean;\n  }\n\n  /**\n   * An object which represents a key binding.\n   *\n   * #### Notes\n   * A key binding is an immutable object created by a registry.\n   */\n  export interface IKeyBinding {\n    /**\n     * The key sequence for the binding.\n     */\n    readonly keys: ReadonlyArray<string>;\n\n    /**\n     * The CSS selector for the binding.\n     */\n    readonly selector: string;\n\n    /**\n     * The command executed when the binding is matched.\n     */\n    readonly command: string;\n\n    /**\n     * The arguments for the command.\n     */\n    readonly args: ReadonlyPartialJSONObject;\n\n    /**\n     * Whether to prevent default action of the keyboard events during sequence matching.\n     *\n     * The default value is `true`.\n     */\n    readonly preventDefault?: boolean;\n  }\n\n  /**\n   * An arguments object for the `keyBindingChanged` signal.\n   */\n  export interface IKeyBindingChangedArgs {\n    /**\n     * The key binding which was changed.\n     */\n    readonly binding: IKeyBinding;\n\n    /**\n     * Whether the key binding was added or removed.\n     */\n    readonly type: 'added' | 'removed';\n  }\n\n  /**\n   * An object which holds the results of parsing a keystroke.\n   */\n  export interface IKeystrokeParts {\n    /**\n     * Whether `'Cmd'` appears in the keystroke.\n     */\n    cmd: boolean;\n\n    /**\n     * Whether `'Ctrl'` appears in the keystroke.\n     */\n    ctrl: boolean;\n\n    /**\n     * Whether `'Alt'` appears in the keystroke.\n     */\n    alt: boolean;\n\n    /**\n     * Whether `'Shift'` appears in the keystroke.\n     */\n    shift: boolean;\n\n    /**\n     * The primary key for the keystroke.\n     */\n    key: string;\n  }\n\n  /**\n   * Parse a keystroke into its constituent components.\n   *\n   * @param keystroke - The keystroke of interest.\n   *\n   * @returns The parsed components of the keystroke.\n   *\n   * #### Notes\n   * The keystroke should be of the form:\n   *   `[<modifier 1> [<modifier 2> [<modifier N> ]]]<primary key>`\n   *\n   * The supported modifiers are: `Accel`, `Alt`, `Cmd`, `Ctrl`, and\n   * `Shift`. The `Accel` modifier is translated to `Cmd` on Mac and\n   * `Ctrl` on all other platforms.\n   *\n   * The parsing is tolerant and will not throw exceptions. Notably:\n   *   - Duplicate modifiers are ignored.\n   *   - Extra primary keys are ignored.\n   *   - The order of modifiers and primary key is irrelevant.\n   *   - The keystroke parts should be separated by whitespace.\n   *   - The keystroke is case sensitive.\n   */\n  export function parseKeystroke(keystroke: string): IKeystrokeParts {\n    let key = '';\n    let alt = false;\n    let cmd = false;\n    let ctrl = false;\n    let shift = false;\n    for (let token of keystroke.split(/\\s+/)) {\n      if (token === 'Accel') {\n        if (Platform.IS_MAC) {\n          cmd = true;\n        } else {\n          ctrl = true;\n        }\n      } else if (token === 'Alt') {\n        alt = true;\n      } else if (token === 'Cmd') {\n        cmd = true;\n      } else if (token === 'Ctrl') {\n        ctrl = true;\n      } else if (token === 'Shift') {\n        shift = true;\n      } else if (token.length > 0) {\n        key = token;\n      }\n    }\n    return { cmd, ctrl, alt, shift, key };\n  }\n\n  /**\n   * Normalize a keystroke into a canonical representation.\n   *\n   * @param keystroke - The keystroke of interest.\n   *\n   * @returns The normalized representation of the keystroke.\n   *\n   * #### Notes\n   * This normalizes the keystroke by removing duplicate modifiers and\n   * extra primary keys, and assembling the parts in a canonical order.\n   *\n   * The `Cmd` modifier is ignored on non-Mac platforms.\n   */\n  export function normalizeKeystroke(keystroke: string): string {\n    let mods = '';\n    let parts = parseKeystroke(keystroke);\n    if (parts.ctrl) {\n      mods += 'Ctrl ';\n    }\n    if (parts.alt) {\n      mods += 'Alt ';\n    }\n    if (parts.shift) {\n      mods += 'Shift ';\n    }\n    if (parts.cmd && Platform.IS_MAC) {\n      mods += 'Cmd ';\n    }\n    return mods + parts.key;\n  }\n\n  /**\n   * Get the platform-specific normalized keys for an options object.\n   *\n   * @param options - The options for the key binding.\n   *\n   * @returns Array of combined, normalized keys.\n   */\n  export function normalizeKeys(options: IKeyBindingOptions): string[] {\n    let keys: string[];\n    if (Platform.IS_WIN) {\n      keys = options.winKeys || options.keys;\n    } else if (Platform.IS_MAC) {\n      keys = options.macKeys || options.keys;\n    } else {\n      keys = options.linuxKeys || options.keys;\n    }\n    return keys.map(normalizeKeystroke);\n  }\n\n  /**\n   * Format keystrokes for display on the local system.\n   *\n   * If a list of keystrokes is provided, it will be displayed as\n   * a comma-separated string\n   *\n   * @param keystroke The keystrokes to format\n   * @returns The keystrokes representation\n   */\n  export function formatKeystroke(\n    keystroke: string | readonly string[]\n  ): string {\n    return typeof keystroke === 'string'\n      ? formatSingleKey(keystroke)\n      : keystroke.map(formatSingleKey).join(', ');\n\n    function formatSingleKey(key: string) {\n      let mods = [];\n      let separator = Platform.IS_MAC ? ' ' : '+';\n      let parts = parseKeystroke(key);\n      if (parts.ctrl) {\n        mods.push('Ctrl');\n      }\n      if (parts.alt) {\n        mods.push('Alt');\n      }\n      if (parts.shift) {\n        mods.push('Shift');\n      }\n      if (Platform.IS_MAC && parts.cmd) {\n        mods.push('Cmd');\n      }\n      mods.push(parts.key);\n      return mods.map(Private.formatKey).join(separator);\n    }\n  }\n\n  /**\n   * Check if `'keydown'` event is caused by pressing a modifier key that should be ignored.\n   *\n   * @param event - The event object for a `'keydown'` event.\n   *\n   * @returns `true` if modifier key was pressed, `false` otherwise.\n   */\n  export function isModifierKeyPressed(event: KeyboardEvent): boolean {\n    let layout = getKeyboardLayout();\n    let key = layout.keyForKeydownEvent(event);\n    return layout.isModifierKey(key);\n  }\n\n  /**\n   * Create a normalized keystroke for a `'keydown'` event.\n   *\n   * @param event - The event object for a `'keydown'` event.\n   *\n   * @returns A normalized keystroke, or an empty string if the event\n   *   does not represent a valid keystroke for the given layout.\n   */\n  export function keystrokeForKeydownEvent(event: KeyboardEvent): string {\n    let layout = getKeyboardLayout();\n    let key = layout.keyForKeydownEvent(event);\n    if (!key || layout.isModifierKey(key)) {\n      return '';\n    }\n    let mods = [];\n    if (event.ctrlKey) {\n      mods.push('Ctrl');\n    }\n    if (event.altKey) {\n      mods.push('Alt');\n    }\n    if (event.shiftKey) {\n      mods.push('Shift');\n    }\n    if (event.metaKey && Platform.IS_MAC) {\n      mods.push('Cmd');\n    }\n    mods.push(key);\n    return mods.join(' ');\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * The timeout in ms for triggering a key binding chord.\n   */\n  export const CHORD_TIMEOUT = 1000;\n\n  /**\n   * The timeout in ms for stopping the hold on keybinding execution.\n   */\n  export const KEYBINDING_HOLD_TIMEOUT = 1000;\n\n  /**\n   * A convenience type alias for a command func.\n   */\n  export type CommandFunc<T> = CommandRegistry.CommandFunc<T>;\n\n  /**\n   * A convenience type alias for a command dataset.\n   */\n  export type Dataset = CommandRegistry.Dataset;\n\n  /**\n   * A normalized command object.\n   */\n  export interface ICommand {\n    readonly execute: CommandFunc<any>;\n    readonly describedBy: CommandFunc<\n      CommandRegistry.Description | Promise<CommandRegistry.Description>\n    >;\n    readonly label: CommandFunc<string>;\n    readonly mnemonic: CommandFunc<number>;\n    readonly icon: CommandFunc<VirtualElement.IRenderer | undefined>;\n    readonly iconClass: CommandFunc<string>;\n    readonly iconLabel: CommandFunc<string>;\n    readonly caption: CommandFunc<string>;\n    readonly usage: CommandFunc<string>;\n    readonly className: CommandFunc<string>;\n    readonly dataset: CommandFunc<Dataset>;\n    readonly isEnabled: CommandFunc<boolean>;\n    readonly isToggled: CommandFunc<boolean>;\n    readonly isToggleable: boolean;\n    readonly isVisible: CommandFunc<boolean>;\n  }\n\n  /**\n   * Create a normalized command from an options object.\n   */\n  export function createCommand(\n    options: CommandRegistry.ICommandOptions\n  ): ICommand {\n    return {\n      execute: options.execute,\n      describedBy: asFunc<\n        CommandRegistry.Description | Promise<CommandRegistry.Description>\n      >(\n        typeof options.describedBy === 'function'\n          ? (options.describedBy as CommandFunc<\n              CommandRegistry.Description | Promise<CommandRegistry.Description>\n            >)\n          : { args: null, ...options.describedBy },\n        () => {\n          return { args: null };\n        }\n      ),\n      label: asFunc(options.label, emptyStringFunc),\n      mnemonic: asFunc(options.mnemonic, negativeOneFunc),\n      icon: asFunc(options.icon, undefinedFunc),\n      iconClass: asFunc(options.iconClass, emptyStringFunc),\n      iconLabel: asFunc(options.iconLabel, emptyStringFunc),\n      caption: asFunc(options.caption, emptyStringFunc),\n      usage: asFunc(options.usage, emptyStringFunc),\n      className: asFunc(options.className, emptyStringFunc),\n      dataset: asFunc(options.dataset, emptyDatasetFunc),\n      isEnabled: options.isEnabled || trueFunc,\n      isToggled: options.isToggled || falseFunc,\n      isToggleable: options.isToggleable || !!options.isToggled,\n      isVisible: options.isVisible || trueFunc\n    };\n  }\n\n  /**\n   * Create a key binding object from key binding options.\n   */\n  export function createKeyBinding(\n    options: CommandRegistry.IKeyBindingOptions\n  ): CommandRegistry.IKeyBinding {\n    return {\n      keys: CommandRegistry.normalizeKeys(options),\n      selector: validateSelector(options),\n      command: options.command,\n      args: options.args || JSONExt.emptyObject,\n      preventDefault: options.preventDefault ?? true\n    };\n  }\n\n  /**\n   * An object which holds the results of a key binding match.\n   */\n  export interface IMatchResult {\n    /**\n     * The best key binding which exactly matches the key sequence.\n     */\n    exact: CommandRegistry.IKeyBinding | null;\n\n    /**\n     * The key bindings which partially match the sequence.\n     */\n    partial: CommandRegistry.IKeyBinding[];\n  }\n\n  /**\n   * Find the key bindings which match a key sequence.\n   *\n   * This returns a match result which contains the best exact matching\n   * binding, and a flag which indicates if there are partial matches.\n   */\n  export function matchKeyBinding(\n    bindings: ReadonlyArray<CommandRegistry.IKeyBinding>,\n    keys: ReadonlyArray<string>,\n    event: KeyboardEvent\n  ): IMatchResult {\n    // The current best exact match.\n    let exact: CommandRegistry.IKeyBinding | null = null;\n\n    // Partial matches.\n    let partial = [];\n\n    // The match distance for the exact match.\n    let distance = Infinity;\n\n    // The specificity for the exact match.\n    let specificity = 0;\n\n    // Iterate over the bindings and search for the best match.\n    for (let i = 0, n = bindings.length; i < n; ++i) {\n      // Lookup the current binding.\n      let binding = bindings[i];\n\n      // Check whether the key binding sequence is a match.\n      let sqm = matchSequence(binding.keys, keys);\n\n      // If there is no match, the binding is ignored.\n      if (sqm === SequenceMatch.None) {\n        continue;\n      }\n\n      // If it is a partial match and no other partial match has been\n      // found, ensure the selector matches and set the partial flag.\n      if (sqm === SequenceMatch.Partial) {\n        if (targetDistance(binding.selector, event) !== -1) {\n          partial.push(binding);\n        }\n        continue;\n      }\n\n      // Ignore the match if the selector doesn't match, or if the\n      // matched node is farther away than the current best match.\n      let td = targetDistance(binding.selector, event);\n      if (td === -1 || td > distance) {\n        continue;\n      }\n\n      // Get the specificity for the selector.\n      let sp = Selector.calculateSpecificity(binding.selector);\n\n      // Update the best match if this match is stronger.\n      if (!exact || td < distance || sp >= specificity) {\n        exact = binding;\n        distance = td;\n        specificity = sp;\n      }\n    }\n\n    // Return the match result.\n    return { exact, partial };\n  }\n\n  /**\n   * Replay a keyboard event.\n   *\n   * This synthetically dispatches a clone of the keyboard event.\n   */\n  export function replayKeyEvent(event: KeyboardEvent): void {\n    event.target!.dispatchEvent(cloneKeyboardEvent(event));\n  }\n\n  export function formatKey(key: string): string {\n    if (Platform.IS_MAC) {\n      return MAC_DISPLAY.hasOwnProperty(key) ? MAC_DISPLAY[key] : key;\n    } else {\n      return WIN_DISPLAY.hasOwnProperty(key) ? WIN_DISPLAY[key] : key;\n    }\n  }\n\n  const MAC_DISPLAY: { [key: string]: string } = {\n    Backspace: '⌫',\n    Tab: '⇥',\n    Enter: '⏎',\n    Shift: '⇧',\n    Ctrl: '⌃',\n    Alt: '⌥',\n    Escape: '⎋',\n    PageUp: '⇞',\n    PageDown: '⇟',\n    End: '↘',\n    Home: '↖',\n    ArrowLeft: '←',\n    ArrowUp: '↑',\n    ArrowRight: '→',\n    ArrowDown: '↓',\n    Delete: '⌦',\n    Cmd: '⌘'\n  };\n\n  const WIN_DISPLAY: { [key: string]: string } = {\n    Escape: 'Esc',\n    PageUp: 'Page Up',\n    PageDown: 'Page Down',\n    ArrowLeft: 'Left',\n    ArrowUp: 'Up',\n    ArrowRight: 'Right',\n    ArrowDown: 'Down',\n    Delete: 'Del'\n  };\n\n  /**\n   * A singleton empty string function.\n   */\n  const emptyStringFunc = () => '';\n\n  /**\n   * A singleton `-1` number function\n   */\n  const negativeOneFunc = () => -1;\n\n  /**\n   * A singleton true boolean function.\n   */\n  const trueFunc = () => true;\n\n  /**\n   * A singleton false boolean function.\n   */\n  const falseFunc = () => false;\n\n  /**\n   * A singleton empty dataset function.\n   */\n  const emptyDatasetFunc = () => ({});\n\n  /**\n   * A singleton undefined function\n   */\n  const undefinedFunc = () => undefined;\n\n  /**\n   * Cast a value or command func to a command func.\n   */\n  function asFunc<T>(\n    value: undefined | T | CommandFunc<T>,\n    dfault: CommandFunc<T>\n  ): CommandFunc<T> {\n    if (value === undefined) {\n      return dfault;\n    }\n    if (typeof value === 'function') {\n      return value as CommandFunc<T>;\n    }\n    return () => value;\n  }\n\n  /**\n   * Validate the selector for an options object.\n   *\n   * This returns the validated selector, or throws if the selector is\n   * invalid or contains commas.\n   */\n  function validateSelector(\n    options: CommandRegistry.IKeyBindingOptions\n  ): string {\n    if (options.selector.indexOf(',') !== -1) {\n      throw new Error(`Selector cannot contain commas: ${options.selector}`);\n    }\n    if (!Selector.isValid(options.selector)) {\n      throw new Error(`Invalid selector: ${options.selector}`);\n    }\n    return options.selector;\n  }\n\n  /**\n   * An enum which describes the possible sequence matches.\n   */\n  const enum SequenceMatch {\n    None,\n    Exact,\n    Partial\n  }\n\n  /**\n   * Test whether a key binding sequence matches a key sequence.\n   *\n   * Returns a `SequenceMatch` value indicating the type of match.\n   */\n  function matchSequence(\n    bindKeys: ReadonlyArray<string>,\n    userKeys: ReadonlyArray<string>\n  ): SequenceMatch {\n    if (bindKeys.length < userKeys.length) {\n      return SequenceMatch.None;\n    }\n    for (let i = 0, n = userKeys.length; i < n; ++i) {\n      if (bindKeys[i] !== userKeys[i]) {\n        return SequenceMatch.None;\n      }\n    }\n    if (bindKeys.length > userKeys.length) {\n      return SequenceMatch.Partial;\n    }\n    return SequenceMatch.Exact;\n  }\n\n  /**\n   * Find the distance from the target node to the first matching node.\n   *\n   * This traverses the event path from `target` to `currentTarget` and\n   * computes the distance from `target` to the first node which matches\n   * the CSS selector. If no match is found, `-1` is returned.\n   */\n  function targetDistance(selector: string, event: KeyboardEvent): number {\n    let targ = event.target as Element | null;\n    let curr = event.currentTarget as Element | null;\n    for (let dist = 0; targ !== null; targ = targ.parentElement, ++dist) {\n      if (targ.hasAttribute('data-lm-suppress-shortcuts')) {\n        return -1;\n      }\n      if (Selector.matches(targ, selector)) {\n        return dist;\n      }\n      if (targ === curr) {\n        return -1;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Clone a keyboard event.\n   */\n  function cloneKeyboardEvent(event: KeyboardEvent): KeyboardEvent {\n    // A custom event is required because Chrome nulls out the\n    // `keyCode` field in user-generated `KeyboardEvent` types.\n    let clone = document.createEvent('Event') as any;\n    let bubbles = event.bubbles || true;\n    let cancelable = event.cancelable || true;\n    clone.initEvent(event.type || 'keydown', bubbles, cancelable);\n    clone.key = event.key || '';\n    clone.keyCode = event.keyCode || 0;\n    clone.which = event.keyCode || 0;\n    clone.ctrlKey = event.ctrlKey || false;\n    clone.altKey = event.altKey || false;\n    clone.shiftKey = event.shiftKey || false;\n    clone.metaKey = event.metaKey || false;\n    clone.view = event.view || window;\n    return clone as KeyboardEvent;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * A sizer object for use with the box engine layout functions.\n *\n * #### Notes\n * A box sizer holds the geometry information for an object along an\n * arbitrary layout orientation.\n *\n * For best performance, this class should be treated as a raw data\n * struct. It should not typically be subclassed.\n */\nexport class BoxSizer {\n  /**\n   * The preferred size for the sizer.\n   *\n   * #### Notes\n   * The sizer will be given this initial size subject to its size\n   * bounds. The sizer will not deviate from this size unless such\n   * deviation is required to fit into the available layout space.\n   *\n   * There is no limit to this value, but it will be clamped to the\n   * bounds defined by {@link minSize} and {@link maxSize}.\n   *\n   * The default value is `0`.\n   */\n  sizeHint = 0;\n\n  /**\n   * The minimum size of the sizer.\n   *\n   * #### Notes\n   * The sizer will never be sized less than this value, even if\n   * it means the sizer will overflow the available layout space.\n   *\n   * It is assumed that this value lies in the range `[0, Infinity)`\n   * and that it is `<=` to {@link maxSize}. Failure to adhere to this\n   * constraint will yield undefined results.\n   *\n   * The default value is `0`.\n   */\n  minSize = 0;\n\n  /**\n   * The maximum size of the sizer.\n   *\n   * #### Notes\n   * The sizer will never be sized greater than this value, even if\n   * it means the sizer will underflow the available layout space.\n   *\n   * It is assumed that this value lies in the range `[0, Infinity]`\n   * and that it is `>=` to {@link minSize}. Failure to adhere to this\n   * constraint will yield undefined results.\n   *\n   * The default value is `Infinity`.\n   */\n  maxSize = Infinity;\n\n  /**\n   * The stretch factor for the sizer.\n   *\n   * #### Notes\n   * This controls how much the sizer stretches relative to its sibling\n   * sizers when layout space is distributed. A stretch factor of zero\n   * is special and will cause the sizer to only be resized after all\n   * other sizers with a stretch factor greater than zero have been\n   * resized to their limits.\n   *\n   * It is assumed that this value is an integer that lies in the range\n   * `[0, Infinity)`. Failure to adhere to this constraint will yield\n   * undefined results.\n   *\n   * The default value is `1`.\n   */\n  stretch = 1;\n\n  /**\n   * The computed size of the sizer.\n   *\n   * #### Notes\n   * This value is the output of a call to {@link BoxEngine.calc}. It represents\n   * the computed size for the object along the layout orientation,\n   * and will always lie in the range `[minSize, maxSize]`.\n   *\n   * This value is output only.\n   *\n   * Changing this value will have no effect.\n   */\n  size = 0;\n\n  /**\n   * An internal storage property for the layout algorithm.\n   *\n   * #### Notes\n   * This value is used as temporary storage by the layout algorithm.\n   *\n   * Changing this value will have no effect.\n   */\n  done = false;\n}\n\n/**\n * The namespace for the box engine layout functions.\n */\nexport namespace BoxEngine {\n  /**\n   * Calculate the optimal layout sizes for a sequence of box sizers.\n   *\n   * This distributes the available layout space among the box sizers\n   * according to the following algorithm:\n   *\n   * 1. Initialize the sizers's size to its size hint and compute the\n   *    sums for each of size hint, min size, and max size.\n   *\n   * 2. If the total size hint equals the available space, return.\n   *\n   * 3. If the available space is less than the total min size, set all\n   *    sizers to their min size and return.\n   *\n   * 4. If the available space is greater than the total max size, set\n   *    all sizers to their max size and return.\n   *\n   * 5. If the layout space is less than the total size hint, distribute\n   *    the negative delta as follows:\n   *\n   *    a. Shrink each sizer with a stretch factor greater than zero by\n   *       an amount proportional to the negative space and the sum of\n   *       stretch factors. If the sizer reaches its min size, remove\n   *       it and its stretch factor from the computation.\n   *\n   *    b. If after adjusting all stretch sizers there remains negative\n   *       space, distribute the space equally among the sizers with a\n   *       stretch factor of zero. If a sizer reaches its min size,\n   *       remove it from the computation.\n   *\n   * 6. If the layout space is greater than the total size hint,\n   *    distribute the positive delta as follows:\n   *\n   *    a. Expand each sizer with a stretch factor greater than zero by\n   *       an amount proportional to the postive space and the sum of\n   *       stretch factors. If the sizer reaches its max size, remove\n   *       it and its stretch factor from the computation.\n   *\n   *    b. If after adjusting all stretch sizers there remains positive\n   *       space, distribute the space equally among the sizers with a\n   *       stretch factor of zero. If a sizer reaches its max size,\n   *       remove it from the computation.\n   *\n   * 7. return\n   *\n   * @param sizers - The sizers for a particular layout line.\n   *\n   * @param space - The available layout space for the sizers.\n   *\n   * @returns The delta between the provided available space and the\n   *   actual consumed space. This value will be zero if the sizers\n   *   can be adjusted to fit, negative if the available space is too\n   *   small, and positive if the available space is too large.\n   *\n   * #### Notes\n   * The {@link BoxSizer.size} of each sizer is updated with the computed size.\n   *\n   * This function can be called at any time to recompute the layout for\n   * an existing sequence of sizers. The previously computed results will\n   * have no effect on the new output. It is therefore not necessary to\n   * create new sizer objects on each resize event.\n   */\n  export function calc(sizers: ArrayLike<BoxSizer>, space: number): number {\n    // Bail early if there is nothing to do.\n    let count = sizers.length;\n    if (count === 0) {\n      return space;\n    }\n\n    // Setup the size and stretch counters.\n    let totalMin = 0;\n    let totalMax = 0;\n    let totalSize = 0;\n    let totalStretch = 0;\n    let stretchCount = 0;\n\n    // Setup the sizers and compute the totals.\n    for (let i = 0; i < count; ++i) {\n      let sizer = sizers[i];\n      let min = sizer.minSize;\n      let max = sizer.maxSize;\n      let hint = sizer.sizeHint;\n      sizer.done = false;\n      sizer.size = Math.max(min, Math.min(hint, max));\n      totalSize += sizer.size;\n      totalMin += min;\n      totalMax += max;\n      if (sizer.stretch > 0) {\n        totalStretch += sizer.stretch;\n        stretchCount++;\n      }\n    }\n\n    // If the space is equal to the total size, return early.\n    if (space === totalSize) {\n      return 0;\n    }\n\n    // If the space is less than the total min, minimize each sizer.\n    if (space <= totalMin) {\n      for (let i = 0; i < count; ++i) {\n        let sizer = sizers[i];\n        sizer.size = sizer.minSize;\n      }\n      return space - totalMin;\n    }\n\n    // If the space is greater than the total max, maximize each sizer.\n    if (space >= totalMax) {\n      for (let i = 0; i < count; ++i) {\n        let sizer = sizers[i];\n        sizer.size = sizer.maxSize;\n      }\n      return space - totalMax;\n    }\n\n    // The loops below perform sub-pixel precision sizing. A near zero\n    // value is used for compares instead of zero to ensure that the\n    // loop terminates when the subdivided space is reasonably small.\n    let nearZero = 0.01;\n\n    // A counter which is decremented each time a sizer is resized to\n    // its limit. This ensures the loops terminate even if there is\n    // space remaining to distribute.\n    let notDoneCount = count;\n\n    // Distribute negative delta space.\n    if (space < totalSize) {\n      // Shrink each stretchable sizer by an amount proportional to its\n      // stretch factor. If a sizer reaches its min size it's marked as\n      // done. The loop progresses in phases where each sizer is given\n      // a chance to consume its fair share for the pass, regardless of\n      // whether a sizer before it reached its limit. This continues\n      // until the stretchable sizers or the free space is exhausted.\n      let freeSpace = totalSize - space;\n      while (stretchCount > 0 && freeSpace > nearZero) {\n        let distSpace = freeSpace;\n        let distStretch = totalStretch;\n        for (let i = 0; i < count; ++i) {\n          let sizer = sizers[i];\n          if (sizer.done || sizer.stretch === 0) {\n            continue;\n          }\n          let amt = (sizer.stretch * distSpace) / distStretch;\n          if (sizer.size - amt <= sizer.minSize) {\n            freeSpace -= sizer.size - sizer.minSize;\n            totalStretch -= sizer.stretch;\n            sizer.size = sizer.minSize;\n            sizer.done = true;\n            notDoneCount--;\n            stretchCount--;\n          } else {\n            freeSpace -= amt;\n            sizer.size -= amt;\n          }\n        }\n      }\n      // Distribute any remaining space evenly among the non-stretchable\n      // sizers. This progresses in phases in the same manner as above.\n      while (notDoneCount > 0 && freeSpace > nearZero) {\n        let amt = freeSpace / notDoneCount;\n        for (let i = 0; i < count; ++i) {\n          let sizer = sizers[i];\n          if (sizer.done) {\n            continue;\n          }\n          if (sizer.size - amt <= sizer.minSize) {\n            freeSpace -= sizer.size - sizer.minSize;\n            sizer.size = sizer.minSize;\n            sizer.done = true;\n            notDoneCount--;\n          } else {\n            freeSpace -= amt;\n            sizer.size -= amt;\n          }\n        }\n      }\n    }\n    // Distribute positive delta space.\n    else {\n      // Expand each stretchable sizer by an amount proportional to its\n      // stretch factor. If a sizer reaches its max size it's marked as\n      // done. The loop progresses in phases where each sizer is given\n      // a chance to consume its fair share for the pass, regardless of\n      // whether a sizer before it reached its limit. This continues\n      // until the stretchable sizers or the free space is exhausted.\n      let freeSpace = space - totalSize;\n      while (stretchCount > 0 && freeSpace > nearZero) {\n        let distSpace = freeSpace;\n        let distStretch = totalStretch;\n        for (let i = 0; i < count; ++i) {\n          let sizer = sizers[i];\n          if (sizer.done || sizer.stretch === 0) {\n            continue;\n          }\n          let amt = (sizer.stretch * distSpace) / distStretch;\n          if (sizer.size + amt >= sizer.maxSize) {\n            freeSpace -= sizer.maxSize - sizer.size;\n            totalStretch -= sizer.stretch;\n            sizer.size = sizer.maxSize;\n            sizer.done = true;\n            notDoneCount--;\n            stretchCount--;\n          } else {\n            freeSpace -= amt;\n            sizer.size += amt;\n          }\n        }\n      }\n      // Distribute any remaining space evenly among the non-stretchable\n      // sizers. This progresses in phases in the same manner as above.\n      while (notDoneCount > 0 && freeSpace > nearZero) {\n        let amt = freeSpace / notDoneCount;\n        for (let i = 0; i < count; ++i) {\n          let sizer = sizers[i];\n          if (sizer.done) {\n            continue;\n          }\n          if (sizer.size + amt >= sizer.maxSize) {\n            freeSpace -= sizer.maxSize - sizer.size;\n            sizer.size = sizer.maxSize;\n            sizer.done = true;\n            notDoneCount--;\n          } else {\n            freeSpace -= amt;\n            sizer.size += amt;\n          }\n        }\n      }\n    }\n\n    // Indicate that the consumed space equals the available space.\n    return 0;\n  }\n\n  /**\n   * Adjust a sizer by a delta and update its neighbors accordingly.\n   *\n   * @param sizers - The sizers which should be adjusted.\n   *\n   * @param index - The index of the sizer to grow.\n   *\n   * @param delta - The amount to adjust the sizer, positive or negative.\n   *\n   * #### Notes\n   * This will adjust the indicated sizer by the specified amount, along\n   * with the sizes of the appropriate neighbors, subject to the limits\n   * specified by each of the sizers.\n   *\n   * This is useful when implementing box layouts where the boundaries\n   * between the sizers are interactively adjustable by the user.\n   */\n  export function adjust(\n    sizers: ArrayLike<BoxSizer>,\n    index: number,\n    delta: number\n  ): void {\n    // Bail early when there is nothing to do.\n    if (sizers.length === 0 || delta === 0) {\n      return;\n    }\n\n    // Dispatch to the proper implementation.\n    if (delta > 0) {\n      growSizer(sizers, index, delta);\n    } else {\n      shrinkSizer(sizers, index, -delta);\n    }\n  }\n\n  /**\n   * Grow a sizer by a positive delta and adjust neighbors.\n   */\n  function growSizer(\n    sizers: ArrayLike<BoxSizer>,\n    index: number,\n    delta: number\n  ): void {\n    // Compute how much the items to the left can expand.\n    let growLimit = 0;\n    for (let i = 0; i <= index; ++i) {\n      let sizer = sizers[i];\n      growLimit += sizer.maxSize - sizer.size;\n    }\n\n    // Compute how much the items to the right can shrink.\n    let shrinkLimit = 0;\n    for (let i = index + 1, n = sizers.length; i < n; ++i) {\n      let sizer = sizers[i];\n      shrinkLimit += sizer.size - sizer.minSize;\n    }\n\n    // Clamp the delta adjustment to the limits.\n    delta = Math.min(delta, growLimit, shrinkLimit);\n\n    // Grow the sizers to the left by the delta.\n    let grow = delta;\n    for (let i = index; i >= 0 && grow > 0; --i) {\n      let sizer = sizers[i];\n      let limit = sizer.maxSize - sizer.size;\n      if (limit >= grow) {\n        sizer.sizeHint = sizer.size + grow;\n        grow = 0;\n      } else {\n        sizer.sizeHint = sizer.size + limit;\n        grow -= limit;\n      }\n    }\n\n    // Shrink the sizers to the right by the delta.\n    let shrink = delta;\n    for (let i = index + 1, n = sizers.length; i < n && shrink > 0; ++i) {\n      let sizer = sizers[i];\n      let limit = sizer.size - sizer.minSize;\n      if (limit >= shrink) {\n        sizer.sizeHint = sizer.size - shrink;\n        shrink = 0;\n      } else {\n        sizer.sizeHint = sizer.size - limit;\n        shrink -= limit;\n      }\n    }\n  }\n\n  /**\n   * Shrink a sizer by a positive delta and adjust neighbors.\n   */\n  function shrinkSizer(\n    sizers: ArrayLike<BoxSizer>,\n    index: number,\n    delta: number\n  ): void {\n    // Compute how much the items to the right can expand.\n    let growLimit = 0;\n    for (let i = index + 1, n = sizers.length; i < n; ++i) {\n      let sizer = sizers[i];\n      growLimit += sizer.maxSize - sizer.size;\n    }\n\n    // Compute how much the items to the left can shrink.\n    let shrinkLimit = 0;\n    for (let i = 0; i <= index; ++i) {\n      let sizer = sizers[i];\n      shrinkLimit += sizer.size - sizer.minSize;\n    }\n\n    // Clamp the delta adjustment to the limits.\n    delta = Math.min(delta, growLimit, shrinkLimit);\n\n    // Grow the sizers to the right by the delta.\n    let grow = delta;\n    for (let i = index + 1, n = sizers.length; i < n && grow > 0; ++i) {\n      let sizer = sizers[i];\n      let limit = sizer.maxSize - sizer.size;\n      if (limit >= grow) {\n        sizer.sizeHint = sizer.size + grow;\n        grow = 0;\n      } else {\n        sizer.sizeHint = sizer.size + limit;\n        grow -= limit;\n      }\n    }\n\n    // Shrink the sizers to the left by the delta.\n    let shrink = delta;\n    for (let i = index; i >= 0 && shrink > 0; --i) {\n      let sizer = sizers[i];\n      let limit = sizer.size - sizer.minSize;\n      if (limit >= shrink) {\n        sizer.sizeHint = sizer.size - shrink;\n        shrink = 0;\n      } else {\n        sizer.sizeHint = sizer.size - limit;\n        shrink -= limit;\n      }\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { IDisposable } from '@lumino/disposable';\n\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { VirtualElement } from '@lumino/virtualdom';\n\n/**\n * An object which holds data related to an object's title.\n *\n * #### Notes\n * A title object is intended to hold the data necessary to display a\n * header for a particular object. A common example is the `TabPanel`,\n * which uses the widget title to populate the tab for a child widget.\n *\n * It is the responsibility of the owner to call the title disposal.\n */\nexport class Title<T> implements IDisposable {\n  /**\n   * Construct a new title.\n   *\n   * @param options - The options for initializing the title.\n   */\n  constructor(options: Title.IOptions<T>) {\n    this.owner = options.owner;\n    if (options.label !== undefined) {\n      this._label = options.label;\n    }\n    if (options.mnemonic !== undefined) {\n      this._mnemonic = options.mnemonic;\n    }\n    if (options.icon !== undefined) {\n      this._icon = options.icon;\n    }\n\n    if (options.iconClass !== undefined) {\n      this._iconClass = options.iconClass;\n    }\n    if (options.iconLabel !== undefined) {\n      this._iconLabel = options.iconLabel;\n    }\n    if (options.caption !== undefined) {\n      this._caption = options.caption;\n    }\n    if (options.className !== undefined) {\n      this._className = options.className;\n    }\n    if (options.closable !== undefined) {\n      this._closable = options.closable;\n    }\n    this._dataset = options.dataset || {};\n  }\n\n  /**\n   * A signal emitted when the state of the title changes.\n   */\n  get changed(): ISignal<this, void> {\n    return this._changed;\n  }\n\n  /**\n   * The object which owns the title.\n   */\n  readonly owner: T;\n\n  /**\n   * Get the label for the title.\n   *\n   * #### Notes\n   * The default value is an empty string.\n   */\n  get label(): string {\n    return this._label;\n  }\n\n  /**\n   * Set the label for the title.\n   */\n  set label(value: string) {\n    if (this._label === value) {\n      return;\n    }\n    this._label = value;\n    this._changed.emit(undefined);\n  }\n\n  /**\n   * Get the mnemonic index for the title.\n   *\n   * #### Notes\n   * The default value is `-1`.\n   */\n  get mnemonic(): number {\n    return this._mnemonic;\n  }\n\n  /**\n   * Set the mnemonic index for the title.\n   */\n  set mnemonic(value: number) {\n    if (this._mnemonic === value) {\n      return;\n    }\n    this._mnemonic = value;\n    this._changed.emit(undefined);\n  }\n\n  /**\n   * Get the icon renderer for the title.\n   *\n   * #### Notes\n   * The default value is undefined.\n   */\n  get icon(): VirtualElement.IRenderer | undefined {\n    return this._icon;\n  }\n\n  /**\n   * Set the icon renderer for the title.\n   *\n   * #### Notes\n   * A renderer is an object that supplies a render and unrender function.\n   */\n  set icon(value: VirtualElement.IRenderer | undefined) {\n    if (this._icon === value) {\n      return;\n    }\n    this._icon = value;\n    this._changed.emit(undefined);\n  }\n\n  /**\n   * Get the icon class name for the title.\n   *\n   * #### Notes\n   * The default value is an empty string.\n   */\n  get iconClass(): string {\n    return this._iconClass;\n  }\n\n  /**\n   * Set the icon class name for the title.\n   *\n   * #### Notes\n   * Multiple class names can be separated with whitespace.\n   */\n  set iconClass(value: string) {\n    if (this._iconClass === value) {\n      return;\n    }\n    this._iconClass = value;\n    this._changed.emit(undefined);\n  }\n\n  /**\n   * Get the icon label for the title.\n   *\n   * #### Notes\n   * The default value is an empty string.\n   */\n  get iconLabel(): string {\n    return this._iconLabel;\n  }\n\n  /**\n   * Set the icon label for the title.\n   *\n   * #### Notes\n   * Multiple class names can be separated with whitespace.\n   */\n  set iconLabel(value: string) {\n    if (this._iconLabel === value) {\n      return;\n    }\n    this._iconLabel = value;\n    this._changed.emit(undefined);\n  }\n\n  /**\n   * Get the caption for the title.\n   *\n   * #### Notes\n   * The default value is an empty string.\n   */\n  get caption(): string {\n    return this._caption;\n  }\n\n  /**\n   * Set the caption for the title.\n   */\n  set caption(value: string) {\n    if (this._caption === value) {\n      return;\n    }\n    this._caption = value;\n    this._changed.emit(undefined);\n  }\n\n  /**\n   * Get the extra class name for the title.\n   *\n   * #### Notes\n   * The default value is an empty string.\n   */\n  get className(): string {\n    return this._className;\n  }\n\n  /**\n   * Set the extra class name for the title.\n   *\n   * #### Notes\n   * Multiple class names can be separated with whitespace.\n   */\n  set className(value: string) {\n    if (this._className === value) {\n      return;\n    }\n    this._className = value;\n    this._changed.emit(undefined);\n  }\n\n  /**\n   * Get the closable state for the title.\n   *\n   * #### Notes\n   * The default value is `false`.\n   */\n  get closable(): boolean {\n    return this._closable;\n  }\n\n  /**\n   * Set the closable state for the title.\n   *\n   * #### Notes\n   * This controls the presence of a close icon when applicable.\n   */\n  set closable(value: boolean) {\n    if (this._closable === value) {\n      return;\n    }\n    this._closable = value;\n    this._changed.emit(undefined);\n  }\n\n  /**\n   * Get the dataset for the title.\n   *\n   * #### Notes\n   * The default value is an empty dataset.\n   */\n  get dataset(): Title.Dataset {\n    return this._dataset;\n  }\n\n  /**\n   * Set the dataset for the title.\n   *\n   * #### Notes\n   * This controls the data attributes when applicable.\n   */\n  set dataset(value: Title.Dataset) {\n    if (this._dataset === value) {\n      return;\n    }\n    this._dataset = value;\n    this._changed.emit(undefined);\n  }\n\n  /**\n   * Test whether the title has been disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * Dispose of the resources held by the title.\n   *\n   * #### Notes\n   * It is the responsibility of the owner to call the title disposal.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n\n    Signal.clearData(this);\n  }\n\n  private _label = '';\n  private _caption = '';\n  private _mnemonic = -1;\n  private _icon: VirtualElement.IRenderer | undefined = undefined;\n  private _iconClass = '';\n  private _iconLabel = '';\n  private _className = '';\n  private _closable = false;\n  private _dataset: Title.Dataset;\n  private _changed = new Signal<this, void>(this);\n  private _isDisposed = false;\n}\n\n/**\n * The namespace for the `Title` class statics.\n */\nexport namespace Title {\n  /**\n   * A type alias for a simple immutable string dataset.\n   */\n  export type Dataset = { readonly [key: string]: string };\n\n  /**\n   * An options object for initializing a title.\n   */\n  export interface IOptions<T> {\n    /**\n     * The object which owns the title.\n     */\n    owner: T;\n\n    /**\n     * The label for the title.\n     */\n    label?: string;\n\n    /**\n     * The mnemonic index for the title.\n     */\n    mnemonic?: number;\n\n    /**\n     * The icon renderer for the title.\n     */\n    icon?: VirtualElement.IRenderer;\n\n    /**\n     * The icon class name for the title.\n     */\n    iconClass?: string;\n\n    /**\n     * The icon label for the title.\n     */\n    iconLabel?: string;\n\n    /**\n     * The caption for the title.\n     */\n    caption?: string;\n\n    /**\n     * The extra class name for the title.\n     */\n    className?: string;\n\n    /**\n     * The closable state for the title.\n     */\n    closable?: boolean;\n\n    /**\n     * The dataset for the title.\n     */\n    dataset?: Dataset;\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-empty-function */\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { IObservableDisposable } from '@lumino/disposable';\n\nimport {\n  ConflatableMessage,\n  IMessageHandler,\n  Message,\n  MessageLoop\n} from '@lumino/messaging';\n\nimport { AttachedProperty } from '@lumino/properties';\n\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { Layout } from './layout';\n\nimport { Title } from './title';\n\n/**\n * The base class of the lumino widget hierarchy.\n *\n * #### Notes\n * This class will typically be subclassed in order to create a useful\n * widget. However, it can be used directly to host externally created\n * content.\n */\nexport class Widget implements IMessageHandler, IObservableDisposable {\n  /**\n   * Construct a new widget.\n   *\n   * @param options - The options for initializing the widget.\n   */\n  constructor(options: Widget.IOptions = {}) {\n    this.node = Private.createNode(options);\n    this.addClass('lm-Widget');\n  }\n\n  /**\n   * Dispose of the widget and its descendant widgets.\n   *\n   * #### Notes\n   * It is unsafe to use the widget after it has been disposed.\n   *\n   * All calls made to this method after the first are a no-op.\n   */\n  dispose(): void {\n    // Do nothing if the widget is already disposed.\n    if (this.isDisposed) {\n      return;\n    }\n\n    // Set the disposed flag and emit the disposed signal.\n    this.setFlag(Widget.Flag.IsDisposed);\n    this._disposed.emit(undefined);\n\n    // Remove or detach the widget if necessary.\n    if (this.parent) {\n      this.parent = null;\n    } else if (this.isAttached) {\n      Widget.detach(this);\n    }\n\n    // Dispose of the widget layout.\n    if (this._layout) {\n      this._layout.dispose();\n      this._layout = null;\n    }\n\n    // Dispose the title\n    this.title.dispose();\n\n    // Clear the extra data associated with the widget.\n    Signal.clearData(this);\n    MessageLoop.clearData(this);\n    AttachedProperty.clearData(this);\n  }\n\n  /**\n   * A signal emitted when the widget is disposed.\n   */\n  get disposed(): ISignal<this, void> {\n    return this._disposed;\n  }\n\n  /**\n   * Get the DOM node owned by the widget.\n   */\n  readonly node: HTMLElement;\n\n  /**\n   * Test whether the widget has been disposed.\n   */\n  get isDisposed(): boolean {\n    return this.testFlag(Widget.Flag.IsDisposed);\n  }\n\n  /**\n   * Test whether the widget's node is attached to the DOM.\n   */\n  get isAttached(): boolean {\n    return this.testFlag(Widget.Flag.IsAttached);\n  }\n\n  /**\n   * Test whether the widget is explicitly hidden.\n   */\n  get isHidden(): boolean {\n    return this.testFlag(Widget.Flag.IsHidden);\n  }\n\n  /**\n   * Test whether the widget is visible.\n   *\n   * #### Notes\n   * A widget is visible when it is attached to the DOM, is not\n   * explicitly hidden, and has no explicitly hidden ancestors.\n   */\n  get isVisible(): boolean {\n    return this.testFlag(Widget.Flag.IsVisible);\n  }\n\n  /**\n   * The title object for the widget.\n   *\n   * #### Notes\n   * The title object is used by some container widgets when displaying\n   * the widget alongside some title, such as a tab panel or side bar.\n   *\n   * Since not all widgets will use the title, it is created on demand.\n   *\n   * The `owner` property of the title is set to this widget.\n   */\n  get title(): Title<Widget> {\n    return Private.titleProperty.get(this);\n  }\n\n  /**\n   * Get the id of the widget's DOM node.\n   */\n  get id(): string {\n    return this.node.id;\n  }\n\n  /**\n   * Set the id of the widget's DOM node.\n   */\n  set id(value: string) {\n    this.node.id = value;\n  }\n\n  /**\n   * The dataset for the widget's DOM node.\n   */\n  get dataset(): DOMStringMap {\n    return this.node.dataset;\n  }\n\n  /**\n   * Get the method for hiding the widget.\n   */\n  get hiddenMode(): Widget.HiddenMode {\n    return this._hiddenMode;\n  }\n\n  /**\n   * Set the method for hiding the widget.\n   */\n  set hiddenMode(value: Widget.HiddenMode) {\n    if (this._hiddenMode === value) {\n      return;\n    }\n\n    if (this.isHidden) {\n      // Reset styles set by previous mode.\n      this._toggleHidden(false);\n    }\n\n    if (value == Widget.HiddenMode.Scale) {\n      this.node.style.willChange = 'transform';\n    } else {\n      this.node.style.willChange = 'auto';\n    }\n\n    this._hiddenMode = value;\n\n    if (this.isHidden) {\n      // Set styles for new mode.\n      this._toggleHidden(true);\n    }\n  }\n\n  /**\n   * Get the parent of the widget.\n   */\n  get parent(): Widget | null {\n    return this._parent;\n  }\n\n  /**\n   * Set the parent of the widget.\n   *\n   * #### Notes\n   * Children are typically added to a widget by using a layout, which\n   * means user code will not normally set the parent widget directly.\n   *\n   * The widget will be automatically removed from its old parent.\n   *\n   * This is a no-op if there is no effective parent change.\n   */\n  set parent(value: Widget | null) {\n    if (this._parent === value) {\n      return;\n    }\n    if (value && this.contains(value)) {\n      throw new Error('Invalid parent widget.');\n    }\n    if (this._parent && !this._parent.isDisposed) {\n      let msg = new Widget.ChildMessage('child-removed', this);\n      MessageLoop.sendMessage(this._parent, msg);\n    }\n    this._parent = value;\n    if (this._parent && !this._parent.isDisposed) {\n      let msg = new Widget.ChildMessage('child-added', this);\n      MessageLoop.sendMessage(this._parent, msg);\n    }\n    if (!this.isDisposed) {\n      MessageLoop.sendMessage(this, Widget.Msg.ParentChanged);\n    }\n  }\n\n  /**\n   * Get the layout for the widget.\n   */\n  get layout(): Layout | null {\n    return this._layout;\n  }\n\n  /**\n   * Set the layout for the widget.\n   *\n   * #### Notes\n   * The layout is single-use only. It cannot be changed after the\n   * first assignment.\n   *\n   * The layout is disposed automatically when the widget is disposed.\n   */\n  set layout(value: Layout | null) {\n    if (this._layout === value) {\n      return;\n    }\n    if (this.testFlag(Widget.Flag.DisallowLayout)) {\n      throw new Error('Cannot set widget layout.');\n    }\n    if (this._layout) {\n      throw new Error('Cannot change widget layout.');\n    }\n    if (value!.parent) {\n      throw new Error('Cannot change layout parent.');\n    }\n    this._layout = value;\n    value!.parent = this;\n  }\n\n  /**\n   * Create an iterator over the widget's children.\n   *\n   * @returns A new iterator over the children of the widget.\n   *\n   * #### Notes\n   * The widget must have a populated layout in order to have children.\n   *\n   * If a layout is not installed, the returned iterator will be empty.\n   */\n  *children(): IterableIterator<Widget> {\n    if (this._layout) {\n      yield* this._layout;\n    }\n  }\n\n  /**\n   * Test whether a widget is a descendant of this widget.\n   *\n   * @param widget - The descendant widget of interest.\n   *\n   * @returns `true` if the widget is a descendant, `false` otherwise.\n   */\n  contains(widget: Widget): boolean {\n    for (let value: Widget | null = widget; value; value = value._parent) {\n      if (value === this) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Test whether the widget's DOM node has the given class name.\n   *\n   * @param name - The class name of interest.\n   *\n   * @returns `true` if the node has the class, `false` otherwise.\n   */\n  hasClass(name: string): boolean {\n    return this.node.classList.contains(name);\n  }\n\n  /**\n   * Add a class name to the widget's DOM node.\n   *\n   * @param name - The class name to add to the node.\n   *\n   * #### Notes\n   * If the class name is already added to the node, this is a no-op.\n   *\n   * The class name must not contain whitespace.\n   */\n  addClass(name: string): void {\n    this.node.classList.add(name);\n  }\n\n  /**\n   * Remove a class name from the widget's DOM node.\n   *\n   * @param name - The class name to remove from the node.\n   *\n   * #### Notes\n   * If the class name is not yet added to the node, this is a no-op.\n   *\n   * The class name must not contain whitespace.\n   */\n  removeClass(name: string): void {\n    this.node.classList.remove(name);\n  }\n\n  /**\n   * Toggle a class name on the widget's DOM node.\n   *\n   * @param name - The class name to toggle on the node.\n   *\n   * @param force - Whether to force add the class (`true`) or force\n   *   remove the class (`false`). If not provided, the presence of\n   *   the class will be toggled from its current state.\n   *\n   * @returns `true` if the class is now present, `false` otherwise.\n   *\n   * #### Notes\n   * The class name must not contain whitespace.\n   */\n  toggleClass(name: string, force?: boolean): boolean {\n    if (force === true) {\n      this.node.classList.add(name);\n      return true;\n    }\n    if (force === false) {\n      this.node.classList.remove(name);\n      return false;\n    }\n    return this.node.classList.toggle(name);\n  }\n\n  /**\n   * Post an `'update-request'` message to the widget.\n   *\n   * #### Notes\n   * This is a simple convenience method for posting the message.\n   */\n  update(): void {\n    MessageLoop.postMessage(this, Widget.Msg.UpdateRequest);\n  }\n\n  /**\n   * Post a `'fit-request'` message to the widget.\n   *\n   * #### Notes\n   * This is a simple convenience method for posting the message.\n   */\n  fit(): void {\n    MessageLoop.postMessage(this, Widget.Msg.FitRequest);\n  }\n\n  /**\n   * Post an `'activate-request'` message to the widget.\n   *\n   * #### Notes\n   * This is a simple convenience method for posting the message.\n   */\n  activate(): void {\n    MessageLoop.postMessage(this, Widget.Msg.ActivateRequest);\n  }\n\n  /**\n   * Send a `'close-request'` message to the widget.\n   *\n   * #### Notes\n   * This is a simple convenience method for sending the message.\n   */\n  close(): void {\n    MessageLoop.sendMessage(this, Widget.Msg.CloseRequest);\n  }\n\n  /**\n   * Show the widget and make it visible to its parent widget.\n   *\n   * #### Notes\n   * This causes the {@link isHidden} property to be `false`.\n   *\n   * If the widget is not explicitly hidden, this is a no-op.\n   */\n  show(): void {\n    if (!this.testFlag(Widget.Flag.IsHidden)) {\n      return;\n    }\n    if (this.isAttached && (!this.parent || this.parent.isVisible)) {\n      MessageLoop.sendMessage(this, Widget.Msg.BeforeShow);\n    }\n    this.clearFlag(Widget.Flag.IsHidden);\n    this._toggleHidden(false);\n\n    if (this.isAttached && (!this.parent || this.parent.isVisible)) {\n      MessageLoop.sendMessage(this, Widget.Msg.AfterShow);\n    }\n    if (this.parent) {\n      let msg = new Widget.ChildMessage('child-shown', this);\n      MessageLoop.sendMessage(this.parent, msg);\n    }\n  }\n\n  /**\n   * Hide the widget and make it hidden to its parent widget.\n   *\n   * #### Notes\n   * This causes the {@link isHidden} property to be `true`.\n   *\n   * If the widget is explicitly hidden, this is a no-op.\n   */\n  hide(): void {\n    if (this.testFlag(Widget.Flag.IsHidden)) {\n      return;\n    }\n    if (this.isAttached && (!this.parent || this.parent.isVisible)) {\n      MessageLoop.sendMessage(this, Widget.Msg.BeforeHide);\n    }\n    this.setFlag(Widget.Flag.IsHidden);\n    this._toggleHidden(true);\n\n    if (this.isAttached && (!this.parent || this.parent.isVisible)) {\n      MessageLoop.sendMessage(this, Widget.Msg.AfterHide);\n    }\n    if (this.parent) {\n      let msg = new Widget.ChildMessage('child-hidden', this);\n      MessageLoop.sendMessage(this.parent, msg);\n    }\n  }\n\n  /**\n   * Show or hide the widget according to a boolean value.\n   *\n   * @param hidden - `true` to hide the widget, or `false` to show it.\n   *\n   * #### Notes\n   * This is a convenience method for `hide()` and `show()`.\n   */\n  setHidden(hidden: boolean): void {\n    if (hidden) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * Test whether the given widget flag is set.\n   *\n   * #### Notes\n   * This will not typically be called directly by user code.\n   */\n  testFlag(flag: Widget.Flag): boolean {\n    return (this._flags & flag) !== 0;\n  }\n\n  /**\n   * Set the given widget flag.\n   *\n   * #### Notes\n   * This will not typically be called directly by user code.\n   */\n  setFlag(flag: Widget.Flag): void {\n    this._flags |= flag;\n  }\n\n  /**\n   * Clear the given widget flag.\n   *\n   * #### Notes\n   * This will not typically be called directly by user code.\n   */\n  clearFlag(flag: Widget.Flag): void {\n    this._flags &= ~flag;\n  }\n\n  /**\n   * Process a message sent to the widget.\n   *\n   * @param msg - The message sent to the widget.\n   *\n   * #### Notes\n   * Subclasses may reimplement this method as needed.\n   */\n  processMessage(msg: Message): void {\n    switch (msg.type) {\n      case 'resize':\n        this.notifyLayout(msg);\n        this.onResize(msg as Widget.ResizeMessage);\n        break;\n      case 'update-request':\n        this.notifyLayout(msg);\n        this.onUpdateRequest(msg);\n        break;\n      case 'fit-request':\n        this.notifyLayout(msg);\n        this.onFitRequest(msg);\n        break;\n      case 'before-show':\n        this.notifyLayout(msg);\n        this.onBeforeShow(msg);\n        break;\n      case 'after-show':\n        this.setFlag(Widget.Flag.IsVisible);\n        this.notifyLayout(msg);\n        this.onAfterShow(msg);\n        break;\n      case 'before-hide':\n        this.notifyLayout(msg);\n        this.onBeforeHide(msg);\n        break;\n      case 'after-hide':\n        this.clearFlag(Widget.Flag.IsVisible);\n        this.notifyLayout(msg);\n        this.onAfterHide(msg);\n        break;\n      case 'before-attach':\n        this.notifyLayout(msg);\n        this.onBeforeAttach(msg);\n        break;\n      case 'after-attach':\n        if (!this.isHidden && (!this.parent || this.parent.isVisible)) {\n          this.setFlag(Widget.Flag.IsVisible);\n        }\n        this.setFlag(Widget.Flag.IsAttached);\n        this.notifyLayout(msg);\n        this.onAfterAttach(msg);\n        break;\n      case 'before-detach':\n        this.notifyLayout(msg);\n        this.onBeforeDetach(msg);\n        break;\n      case 'after-detach':\n        this.clearFlag(Widget.Flag.IsVisible);\n        this.clearFlag(Widget.Flag.IsAttached);\n        this.notifyLayout(msg);\n        this.onAfterDetach(msg);\n        break;\n      case 'activate-request':\n        this.notifyLayout(msg);\n        this.onActivateRequest(msg);\n        break;\n      case 'close-request':\n        this.notifyLayout(msg);\n        this.onCloseRequest(msg);\n        break;\n      case 'child-added':\n        this.notifyLayout(msg);\n        this.onChildAdded(msg as Widget.ChildMessage);\n        break;\n      case 'child-removed':\n        this.notifyLayout(msg);\n        this.onChildRemoved(msg as Widget.ChildMessage);\n        break;\n      default:\n        this.notifyLayout(msg);\n        break;\n    }\n  }\n\n  /**\n   * Invoke the message processing routine of the widget's layout.\n   *\n   * @param msg - The message to dispatch to the layout.\n   *\n   * #### Notes\n   * This is a no-op if the widget does not have a layout.\n   *\n   * This will not typically be called directly by user code.\n   */\n  protected notifyLayout(msg: Message): void {\n    if (this._layout) {\n      this._layout.processParentMessage(msg);\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'close-request'` message.\n   *\n   * #### Notes\n   * The default implementation unparents or detaches the widget.\n   */\n  protected onCloseRequest(msg: Message): void {\n    if (this.parent) {\n      this.parent = null;\n    } else if (this.isAttached) {\n      Widget.detach(this);\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'resize'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onResize(msg: Widget.ResizeMessage): void {}\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onUpdateRequest(msg: Message): void {}\n\n  /**\n   * A message handler invoked on a `'fit-request'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onFitRequest(msg: Message): void {}\n\n  /**\n   * A message handler invoked on an `'activate-request'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onActivateRequest(msg: Message): void {}\n\n  /**\n   * A message handler invoked on a `'before-show'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onBeforeShow(msg: Message): void {}\n\n  /**\n   * A message handler invoked on an `'after-show'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onAfterShow(msg: Message): void {}\n\n  /**\n   * A message handler invoked on a `'before-hide'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onBeforeHide(msg: Message): void {}\n\n  /**\n   * A message handler invoked on an `'after-hide'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onAfterHide(msg: Message): void {}\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onBeforeAttach(msg: Message): void {}\n\n  /**\n   * A message handler invoked on an `'after-attach'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onAfterAttach(msg: Message): void {}\n\n  /**\n   * A message handler invoked on a `'before-detach'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onBeforeDetach(msg: Message): void {}\n\n  /**\n   * A message handler invoked on an `'after-detach'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onAfterDetach(msg: Message): void {}\n\n  /**\n   * A message handler invoked on a `'child-added'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onChildAdded(msg: Widget.ChildMessage): void {}\n\n  /**\n   * A message handler invoked on a `'child-removed'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onChildRemoved(msg: Widget.ChildMessage): void {}\n\n  private _toggleHidden(hidden: boolean) {\n    if (hidden) {\n      switch (this._hiddenMode) {\n        case Widget.HiddenMode.Display:\n          this.addClass('lm-mod-hidden');\n          break;\n        case Widget.HiddenMode.Scale:\n          this.node.style.transform = 'scale(0)';\n          this.node.setAttribute('aria-hidden', 'true');\n          break;\n        case Widget.HiddenMode.ContentVisibility:\n          // @ts-expect-error content-visibility unknown by DOM lib types\n          this.node.style.contentVisibility = 'hidden';\n          this.node.style.zIndex = '-1';\n          break;\n      }\n    } else {\n      switch (this._hiddenMode) {\n        case Widget.HiddenMode.Display:\n          this.removeClass('lm-mod-hidden');\n          break;\n        case Widget.HiddenMode.Scale:\n          this.node.style.transform = '';\n          this.node.removeAttribute('aria-hidden');\n          break;\n        case Widget.HiddenMode.ContentVisibility:\n          // @ts-expect-error content-visibility unknown by DOM lib types\n          this.node.style.contentVisibility = '';\n          this.node.style.zIndex = '';\n          break;\n      }\n    }\n  }\n\n  private _flags = 0;\n  private _layout: Layout | null = null;\n  private _parent: Widget | null = null;\n  private _disposed = new Signal<this, void>(this);\n  private _hiddenMode: Widget.HiddenMode = Widget.HiddenMode.Display;\n}\n\n/**\n * The namespace for the `Widget` class statics.\n */\nexport namespace Widget {\n  /**\n   * An options object for initializing a widget.\n   */\n  export interface IOptions {\n    /**\n     * The optional node to use for the widget.\n     *\n     * If a node is provided, the widget will assume full ownership\n     * and control of the node, as if it had created the node itself.\n     *\n     * The default is a new `<div>`.\n     */\n    node?: HTMLElement;\n\n    /**\n     * The optional element tag, used for constructing the widget's node.\n     *\n     * If a pre-constructed node is provided via the `node` arg, this\n     * value is ignored.\n     */\n    tag?: keyof HTMLElementTagNameMap;\n  }\n\n  /**\n   * The method for hiding the widget.\n   *\n   * The default is Display.\n   *\n   * Using `Scale` will often increase performance as most browsers will not\n   * trigger style computation for the `transform` action. This should be used\n   * sparingly and tested, since increasing the number of composition layers\n   * may slow things down.\n   *\n   * To ensure the transformation does not trigger style recomputation, you\n   * may need to set the widget CSS style `will-change: transform`. This\n   * should be used only when needed as it may overwhelm the browser with a\n   * high number of layers. See\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/will-change\n   */\n  export enum HiddenMode {\n    /**\n     * Set a `lm-mod-hidden` CSS class to hide the widget using `display:none`\n     * CSS from the standard Lumino CSS.\n     */\n    Display = 0,\n\n    /**\n     * Hide the widget by setting the `transform` to `'scale(0)'`.\n     */\n    Scale,\n\n    /**\n     *Hide the widget by setting the `content-visibility` to `'hidden'`.\n     */\n    ContentVisibility\n  }\n\n  /**\n   * An enum of widget bit flags.\n   */\n  export enum Flag {\n    /**\n     * The widget has been disposed.\n     */\n    IsDisposed = 0x1,\n\n    /**\n     * The widget is attached to the DOM.\n     */\n    IsAttached = 0x2,\n\n    /**\n     * The widget is hidden.\n     */\n    IsHidden = 0x4,\n\n    /**\n     * The widget is visible.\n     */\n    IsVisible = 0x8,\n\n    /**\n     * A layout cannot be set on the widget.\n     */\n    DisallowLayout = 0x10\n  }\n\n  /**\n   * A collection of stateless messages related to widgets.\n   */\n  export namespace Msg {\n    /**\n     * A singleton `'before-show'` message.\n     *\n     * #### Notes\n     * This message is sent to a widget before it becomes visible.\n     *\n     * This message is **not** sent when the widget is being attached.\n     */\n    export const BeforeShow = new Message('before-show');\n\n    /**\n     * A singleton `'after-show'` message.\n     *\n     * #### Notes\n     * This message is sent to a widget after it becomes visible.\n     *\n     * This message is **not** sent when the widget is being attached.\n     */\n    export const AfterShow = new Message('after-show');\n\n    /**\n     * A singleton `'before-hide'` message.\n     *\n     * #### Notes\n     * This message is sent to a widget before it becomes not-visible.\n     *\n     * This message is **not** sent when the widget is being detached.\n     */\n    export const BeforeHide = new Message('before-hide');\n\n    /**\n     * A singleton `'after-hide'` message.\n     *\n     * #### Notes\n     * This message is sent to a widget after it becomes not-visible.\n     *\n     * This message is **not** sent when the widget is being detached.\n     */\n    export const AfterHide = new Message('after-hide');\n\n    /**\n     * A singleton `'before-attach'` message.\n     *\n     * #### Notes\n     * This message is sent to a widget before it is attached.\n     */\n    export const BeforeAttach = new Message('before-attach');\n\n    /**\n     * A singleton `'after-attach'` message.\n     *\n     * #### Notes\n     * This message is sent to a widget after it is attached.\n     */\n    export const AfterAttach = new Message('after-attach');\n\n    /**\n     * A singleton `'before-detach'` message.\n     *\n     * #### Notes\n     * This message is sent to a widget before it is detached.\n     */\n    export const BeforeDetach = new Message('before-detach');\n\n    /**\n     * A singleton `'after-detach'` message.\n     *\n     * #### Notes\n     * This message is sent to a widget after it is detached.\n     */\n    export const AfterDetach = new Message('after-detach');\n\n    /**\n     * A singleton `'parent-changed'` message.\n     *\n     * #### Notes\n     * This message is sent to a widget when its parent has changed.\n     */\n    export const ParentChanged = new Message('parent-changed');\n\n    /**\n     * A singleton conflatable `'update-request'` message.\n     *\n     * #### Notes\n     * This message can be dispatched to supporting widgets in order to\n     * update their content based on the current widget state. Not all\n     * widgets will respond to messages of this type.\n     *\n     * For widgets with a layout, this message will inform the layout to\n     * update the position and size of its child widgets.\n     */\n    export const UpdateRequest = new ConflatableMessage('update-request');\n\n    /**\n     * A singleton conflatable `'fit-request'` message.\n     *\n     * #### Notes\n     * For widgets with a layout, this message will inform the layout to\n     * recalculate its size constraints to fit the space requirements of\n     * its child widgets, and to update their position and size. Not all\n     * layouts will respond to messages of this type.\n     */\n    export const FitRequest = new ConflatableMessage('fit-request');\n\n    /**\n     * A singleton conflatable `'activate-request'` message.\n     *\n     * #### Notes\n     * This message should be dispatched to a widget when it should\n     * perform the actions necessary to activate the widget, which\n     * may include focusing its node or descendant node.\n     */\n    export const ActivateRequest = new ConflatableMessage('activate-request');\n\n    /**\n     * A singleton conflatable `'close-request'` message.\n     *\n     * #### Notes\n     * This message should be dispatched to a widget when it should close\n     * and remove itself from the widget hierarchy.\n     */\n    export const CloseRequest = new ConflatableMessage('close-request');\n  }\n\n  /**\n   * A message class for child related messages.\n   */\n  export class ChildMessage extends Message {\n    /**\n     * Construct a new child message.\n     *\n     * @param type - The message type.\n     *\n     * @param child - The child widget for the message.\n     */\n    constructor(type: string, child: Widget) {\n      super(type);\n      this.child = child;\n    }\n\n    /**\n     * The child widget for the message.\n     */\n    readonly child: Widget;\n  }\n\n  /**\n   * A message class for `'resize'` messages.\n   */\n  export class ResizeMessage extends Message {\n    /**\n     * Construct a new resize message.\n     *\n     * @param width - The **offset width** of the widget, or `-1` if\n     *   the width is not known.\n     *\n     * @param height - The **offset height** of the widget, or `-1` if\n     *   the height is not known.\n     */\n    constructor(width: number, height: number) {\n      super('resize');\n      this.width = width;\n      this.height = height;\n    }\n\n    /**\n     * The offset width of the widget.\n     *\n     * #### Notes\n     * This will be `-1` if the width is unknown.\n     */\n    readonly width: number;\n\n    /**\n     * The offset height of the widget.\n     *\n     * #### Notes\n     * This will be `-1` if the height is unknown.\n     */\n    readonly height: number;\n  }\n\n  /**\n   * The namespace for the `ResizeMessage` class statics.\n   */\n  export namespace ResizeMessage {\n    /**\n     * A singleton `'resize'` message with an unknown size.\n     */\n    export const UnknownSize = new ResizeMessage(-1, -1);\n  }\n\n  /**\n   * Attach a widget to a host DOM node.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param host - The DOM node to use as the widget's host.\n   *\n   * @param ref - The child of `host` to use as the reference element.\n   *   If this is provided, the widget will be inserted before this\n   *   node in the host. The default is `null`, which will cause the\n   *   widget to be added as the last child of the host.\n   *\n   * #### Notes\n   * This will throw an error if the widget is not a root widget, if\n   * the widget is already attached, or if the host is not attached\n   * to the DOM.\n   */\n  export function attach(\n    widget: Widget,\n    host: HTMLElement,\n    ref: HTMLElement | null = null\n  ): void {\n    if (widget.parent) {\n      throw new Error('Cannot attach a child widget.');\n    }\n    if (widget.isAttached || widget.node.isConnected) {\n      throw new Error('Widget is already attached.');\n    }\n    if (!host.isConnected) {\n      throw new Error('Host is not attached.');\n    }\n    MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\n    host.insertBefore(widget.node, ref);\n    MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\n  }\n\n  /**\n   * Detach the widget from its host DOM node.\n   *\n   * @param widget - The widget of interest.\n   *\n   * #### Notes\n   * This will throw an error if the widget is not a root widget,\n   * or if the widget is not attached to the DOM.\n   */\n  export function detach(widget: Widget): void {\n    if (widget.parent) {\n      throw new Error('Cannot detach a child widget.');\n    }\n    if (!widget.isAttached || !widget.node.isConnected) {\n      throw new Error('Widget is not attached.');\n    }\n    MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\n    widget.node.parentNode!.removeChild(widget.node);\n    MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * An attached property for the widget title object.\n   */\n  export const titleProperty = new AttachedProperty<Widget, Title<Widget>>({\n    name: 'title',\n    create: owner => new Title<Widget>({ owner })\n  });\n\n  /**\n   * Create a DOM node for the given widget options.\n   */\n  export function createNode(options: Widget.IOptions): HTMLElement {\n    return options.node || document.createElement(options.tag || 'div');\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-empty-function */\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { IDisposable } from '@lumino/disposable';\n\nimport { ElementExt } from '@lumino/domutils';\n\nimport { Message, MessageLoop } from '@lumino/messaging';\n\nimport { AttachedProperty } from '@lumino/properties';\n\nimport { Signal } from '@lumino/signaling';\n\nimport { Widget } from './widget';\n\n/**\n * An abstract base class for creating lumino layouts.\n *\n * #### Notes\n * A layout is used to add widgets to a parent and to arrange those\n * widgets within the parent's DOM node.\n *\n * This class implements the base functionality which is required of\n * nearly all layouts. It must be subclassed in order to be useful.\n *\n * Notably, this class does not define a uniform interface for adding\n * widgets to the layout. A subclass should define that API in a way\n * which is meaningful for its intended use.\n */\nexport abstract class Layout implements Iterable<Widget>, IDisposable {\n  /**\n   * Construct a new layout.\n   *\n   * @param options - The options for initializing the layout.\n   */\n  constructor(options: Layout.IOptions = {}) {\n    this._fitPolicy = options.fitPolicy || 'set-min-size';\n  }\n\n  /**\n   * Dispose of the resources held by the layout.\n   *\n   * #### Notes\n   * This should be reimplemented to clear and dispose of the widgets.\n   *\n   * All reimplementations should call the superclass method.\n   *\n   * This method is called automatically when the parent is disposed.\n   */\n  dispose(): void {\n    this._parent = null;\n    this._disposed = true;\n    Signal.clearData(this);\n    AttachedProperty.clearData(this);\n  }\n\n  /**\n   * Test whether the layout is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._disposed;\n  }\n\n  /**\n   * Get the parent widget of the layout.\n   */\n  get parent(): Widget | null {\n    return this._parent;\n  }\n\n  /**\n   * Set the parent widget of the layout.\n   *\n   * #### Notes\n   * This is set automatically when installing the layout on the parent\n   * widget. The parent widget should not be set directly by user code.\n   */\n  set parent(value: Widget | null) {\n    if (this._parent === value) {\n      return;\n    }\n    if (this._parent) {\n      throw new Error('Cannot change parent widget.');\n    }\n    if (value!.layout !== this) {\n      throw new Error('Invalid parent widget.');\n    }\n    this._parent = value;\n    this.init();\n  }\n\n  /**\n   * Get the fit policy for the layout.\n   *\n   * #### Notes\n   * The fit policy controls the computed size constraints which are\n   * applied to the parent widget by the layout.\n   *\n   * Some layout implementations may ignore the fit policy.\n   */\n  get fitPolicy(): Layout.FitPolicy {\n    return this._fitPolicy;\n  }\n\n  /**\n   * Set the fit policy for the layout.\n   *\n   * #### Notes\n   * The fit policy controls the computed size constraints which are\n   * applied to the parent widget by the layout.\n   *\n   * Some layout implementations may ignore the fit policy.\n   *\n   * Changing the fit policy will clear the current size constraint\n   * for the parent widget and then re-fit the parent.\n   */\n  set fitPolicy(value: Layout.FitPolicy) {\n    // Bail if the policy does not change\n    if (this._fitPolicy === value) {\n      return;\n    }\n\n    // Update the internal policy.\n    this._fitPolicy = value;\n\n    // Clear the size constraints and schedule a fit of the parent.\n    if (this._parent) {\n      let style = this._parent.node.style;\n      style.minWidth = '';\n      style.minHeight = '';\n      style.maxWidth = '';\n      style.maxHeight = '';\n      this._parent.fit();\n    }\n  }\n\n  /**\n   * Create an iterator over the widgets in the layout.\n   *\n   * @returns A new iterator over the widgets in the layout.\n   *\n   * #### Notes\n   * This abstract method must be implemented by a subclass.\n   */\n  abstract [Symbol.iterator](): IterableIterator<Widget>;\n\n  /**\n   * Remove a widget from the layout.\n   *\n   * @param widget - The widget to remove from the layout.\n   *\n   * #### Notes\n   * A widget is automatically removed from the layout when its `parent`\n   * is set to `null`. This method should only be invoked directly when\n   * removing a widget from a layout which has yet to be installed on a\n   * parent widget.\n   *\n   * This method should *not* modify the widget's `parent`.\n   */\n  abstract removeWidget(widget: Widget): void;\n\n  /**\n   * Process a message sent to the parent widget.\n   *\n   * @param msg - The message sent to the parent widget.\n   *\n   * #### Notes\n   * This method is called by the parent widget to process a message.\n   *\n   * Subclasses may reimplement this method as needed.\n   */\n  processParentMessage(msg: Message): void {\n    switch (msg.type) {\n      case 'resize':\n        this.onResize(msg as Widget.ResizeMessage);\n        break;\n      case 'update-request':\n        this.onUpdateRequest(msg);\n        break;\n      case 'fit-request':\n        this.onFitRequest(msg);\n        break;\n      case 'before-show':\n        this.onBeforeShow(msg);\n        break;\n      case 'after-show':\n        this.onAfterShow(msg);\n        break;\n      case 'before-hide':\n        this.onBeforeHide(msg);\n        break;\n      case 'after-hide':\n        this.onAfterHide(msg);\n        break;\n      case 'before-attach':\n        this.onBeforeAttach(msg);\n        break;\n      case 'after-attach':\n        this.onAfterAttach(msg);\n        break;\n      case 'before-detach':\n        this.onBeforeDetach(msg);\n        break;\n      case 'after-detach':\n        this.onAfterDetach(msg);\n        break;\n      case 'child-removed':\n        this.onChildRemoved(msg as Widget.ChildMessage);\n        break;\n      case 'child-shown':\n        this.onChildShown(msg as Widget.ChildMessage);\n        break;\n      case 'child-hidden':\n        this.onChildHidden(msg as Widget.ChildMessage);\n        break;\n    }\n  }\n\n  /**\n   * Perform layout initialization which requires the parent widget.\n   *\n   * #### Notes\n   * This method is invoked immediately after the layout is installed\n   * on the parent widget.\n   *\n   * The default implementation reparents all of the widgets to the\n   * layout parent widget.\n   *\n   * Subclasses should reimplement this method and attach the child\n   * widget nodes to the parent widget's node.\n   */\n  protected init(): void {\n    for (const widget of this) {\n      widget.parent = this.parent;\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'resize'` message.\n   *\n   * #### Notes\n   * The layout should ensure that its widgets are resized according\n   * to the specified layout space, and that they are sent a `'resize'`\n   * message if appropriate.\n   *\n   * The default implementation of this method sends an `UnknownSize`\n   * resize message to all widgets.\n   *\n   * This may be reimplemented by subclasses as needed.\n   */\n  protected onResize(msg: Widget.ResizeMessage): void {\n    for (const widget of this) {\n      MessageLoop.sendMessage(widget, Widget.ResizeMessage.UnknownSize);\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   *\n   * #### Notes\n   * The layout should ensure that its widgets are resized according\n   * to the available layout space, and that they are sent a `'resize'`\n   * message if appropriate.\n   *\n   * The default implementation of this method sends an `UnknownSize`\n   * resize message to all widgets.\n   *\n   * This may be reimplemented by subclasses as needed.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    for (const widget of this) {\n      MessageLoop.sendMessage(widget, Widget.ResizeMessage.UnknownSize);\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   *\n   * #### Notes\n   * The default implementation of this method forwards the message\n   * to all widgets. It assumes all widget nodes are attached to the\n   * parent widget node.\n   *\n   * This may be reimplemented by subclasses as needed.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    for (const widget of this) {\n      MessageLoop.sendMessage(widget, msg);\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'after-attach'` message.\n   *\n   * #### Notes\n   * The default implementation of this method forwards the message\n   * to all widgets. It assumes all widget nodes are attached to the\n   * parent widget node.\n   *\n   * This may be reimplemented by subclasses as needed.\n   */\n  protected onAfterAttach(msg: Message): void {\n    for (const widget of this) {\n      MessageLoop.sendMessage(widget, msg);\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-detach'` message.\n   *\n   * #### Notes\n   * The default implementation of this method forwards the message\n   * to all widgets. It assumes all widget nodes are attached to the\n   * parent widget node.\n   *\n   * This may be reimplemented by subclasses as needed.\n   */\n  protected onBeforeDetach(msg: Message): void {\n    for (const widget of this) {\n      MessageLoop.sendMessage(widget, msg);\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'after-detach'` message.\n   *\n   * #### Notes\n   * The default implementation of this method forwards the message\n   * to all widgets. It assumes all widget nodes are attached to the\n   * parent widget node.\n   *\n   * This may be reimplemented by subclasses as needed.\n   */\n  protected onAfterDetach(msg: Message): void {\n    for (const widget of this) {\n      MessageLoop.sendMessage(widget, msg);\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-show'` message.\n   *\n   * #### Notes\n   * The default implementation of this method forwards the message to\n   * all non-hidden widgets. It assumes all widget nodes are attached\n   * to the parent widget node.\n   *\n   * This may be reimplemented by subclasses as needed.\n   */\n  protected onBeforeShow(msg: Message): void {\n    for (const widget of this) {\n      if (!widget.isHidden) {\n        MessageLoop.sendMessage(widget, msg);\n      }\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'after-show'` message.\n   *\n   * #### Notes\n   * The default implementation of this method forwards the message to\n   * all non-hidden widgets. It assumes all widget nodes are attached\n   * to the parent widget node.\n   *\n   * This may be reimplemented by subclasses as needed.\n   */\n  protected onAfterShow(msg: Message): void {\n    for (const widget of this) {\n      if (!widget.isHidden) {\n        MessageLoop.sendMessage(widget, msg);\n      }\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-hide'` message.\n   *\n   * #### Notes\n   * The default implementation of this method forwards the message to\n   * all non-hidden widgets. It assumes all widget nodes are attached\n   * to the parent widget node.\n   *\n   * This may be reimplemented by subclasses as needed.\n   */\n  protected onBeforeHide(msg: Message): void {\n    for (const widget of this) {\n      if (!widget.isHidden) {\n        MessageLoop.sendMessage(widget, msg);\n      }\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'after-hide'` message.\n   *\n   * #### Notes\n   * The default implementation of this method forwards the message to\n   * all non-hidden widgets. It assumes all widget nodes are attached\n   * to the parent widget node.\n   *\n   * This may be reimplemented by subclasses as needed.\n   */\n  protected onAfterHide(msg: Message): void {\n    for (const widget of this) {\n      if (!widget.isHidden) {\n        MessageLoop.sendMessage(widget, msg);\n      }\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'child-removed'` message.\n   *\n   * #### Notes\n   * This will remove the child widget from the layout.\n   *\n   * Subclasses should **not** typically reimplement this method.\n   */\n  protected onChildRemoved(msg: Widget.ChildMessage): void {\n    this.removeWidget(msg.child);\n  }\n\n  /**\n   * A message handler invoked on a `'fit-request'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onFitRequest(msg: Message): void {}\n\n  /**\n   * A message handler invoked on a `'child-shown'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onChildShown(msg: Widget.ChildMessage): void {}\n\n  /**\n   * A message handler invoked on a `'child-hidden'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onChildHidden(msg: Widget.ChildMessage): void {}\n\n  private _disposed = false;\n  private _fitPolicy: Layout.FitPolicy;\n  private _parent: Widget | null = null;\n}\n\n/**\n * The namespace for the `Layout` class statics.\n */\nexport namespace Layout {\n  /**\n   * A type alias for the layout fit policy.\n   *\n   * #### Notes\n   * The fit policy controls the computed size constraints which are\n   * applied to the parent widget by the layout.\n   *\n   * Some layout implementations may ignore the fit policy.\n   */\n  export type FitPolicy =\n    | /**\n     * No size constraint will be applied to the parent widget.\n     */\n    'set-no-constraint'\n\n    /**\n     * The computed min size will be applied to the parent widget.\n     */\n    | 'set-min-size';\n\n  /**\n   * An options object for initializing a layout.\n   */\n  export interface IOptions {\n    /**\n     * The fit policy for the layout.\n     *\n     * The default is `'set-min-size'`.\n     */\n    fitPolicy?: FitPolicy;\n  }\n\n  /**\n   * A type alias for the horizontal alignment of a widget.\n   */\n  export type HorizontalAlignment = 'left' | 'center' | 'right';\n\n  /**\n   * A type alias for the vertical alignment of a widget.\n   */\n  export type VerticalAlignment = 'top' | 'center' | 'bottom';\n\n  /**\n   * Get the horizontal alignment for a widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The horizontal alignment for the widget.\n   *\n   * #### Notes\n   * If the layout width allocated to a widget is larger than its max\n   * width, the horizontal alignment controls how the widget is placed\n   * within the extra horizontal space.\n   *\n   * If the allocated width is less than the widget's max width, the\n   * horizontal alignment has no effect.\n   *\n   * Some layout implementations may ignore horizontal alignment.\n   */\n  export function getHorizontalAlignment(widget: Widget): HorizontalAlignment {\n    return Private.horizontalAlignmentProperty.get(widget);\n  }\n\n  /**\n   * Set the horizontal alignment for a widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the horizontal alignment.\n   *\n   * #### Notes\n   * If the layout width allocated to a widget is larger than its max\n   * width, the horizontal alignment controls how the widget is placed\n   * within the extra horizontal space.\n   *\n   * If the allocated width is less than the widget's max width, the\n   * horizontal alignment has no effect.\n   *\n   * Some layout implementations may ignore horizontal alignment.\n   *\n   * Changing the horizontal alignment will post an `update-request`\n   * message to widget's parent, provided the parent has a layout\n   * installed.\n   */\n  export function setHorizontalAlignment(\n    widget: Widget,\n    value: HorizontalAlignment\n  ): void {\n    Private.horizontalAlignmentProperty.set(widget, value);\n  }\n\n  /**\n   * Get the vertical alignment for a widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The vertical alignment for the widget.\n   *\n   * #### Notes\n   * If the layout height allocated to a widget is larger than its max\n   * height, the vertical alignment controls how the widget is placed\n   * within the extra vertical space.\n   *\n   * If the allocated height is less than the widget's max height, the\n   * vertical alignment has no effect.\n   *\n   * Some layout implementations may ignore vertical alignment.\n   */\n  export function getVerticalAlignment(widget: Widget): VerticalAlignment {\n    return Private.verticalAlignmentProperty.get(widget);\n  }\n\n  /**\n   * Set the vertical alignment for a widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the vertical alignment.\n   *\n   * #### Notes\n   * If the layout height allocated to a widget is larger than its max\n   * height, the vertical alignment controls how the widget is placed\n   * within the extra vertical space.\n   *\n   * If the allocated height is less than the widget's max height, the\n   * vertical alignment has no effect.\n   *\n   * Some layout implementations may ignore vertical alignment.\n   *\n   * Changing the horizontal alignment will post an `update-request`\n   * message to widget's parent, provided the parent has a layout\n   * installed.\n   */\n  export function setVerticalAlignment(\n    widget: Widget,\n    value: VerticalAlignment\n  ): void {\n    Private.verticalAlignmentProperty.set(widget, value);\n  }\n}\n\n/**\n * An object which assists in the absolute layout of widgets.\n *\n * #### Notes\n * This class is useful when implementing a layout which arranges its\n * widgets using absolute positioning.\n *\n * This class is used by nearly all of the built-in lumino layouts.\n */\nexport class LayoutItem implements IDisposable {\n  /**\n   * Construct a new layout item.\n   *\n   * @param widget - The widget to be managed by the item.\n   *\n   * #### Notes\n   * The widget will be set to absolute positioning.\n   * The widget will use strict CSS containment.\n   */\n  constructor(widget: Widget) {\n    this.widget = widget;\n    this.widget.node.style.position = 'absolute';\n    this.widget.node.style.contain = 'strict';\n  }\n\n  /**\n   * Dispose of the the layout item.\n   *\n   * #### Notes\n   * This will reset the positioning of the widget.\n   */\n  dispose(): void {\n    // Do nothing if the item is already disposed.\n    if (this._disposed) {\n      return;\n    }\n\n    // Mark the item as disposed.\n    this._disposed = true;\n\n    // Reset the widget style.\n    let style = this.widget.node.style;\n    style.position = '';\n    style.top = '';\n    style.left = '';\n    style.width = '';\n    style.height = '';\n    style.contain = '';\n  }\n\n  /**\n   * The widget managed by the layout item.\n   */\n  readonly widget: Widget;\n\n  /**\n   * The computed minimum width of the widget.\n   *\n   * #### Notes\n   * This value can be updated by calling the `fit` method.\n   */\n  get minWidth(): number {\n    return this._minWidth;\n  }\n\n  /**\n   * The computed minimum height of the widget.\n   *\n   * #### Notes\n   * This value can be updated by calling the `fit` method.\n   */\n  get minHeight(): number {\n    return this._minHeight;\n  }\n\n  /**\n   * The computed maximum width of the widget.\n   *\n   * #### Notes\n   * This value can be updated by calling the `fit` method.\n   */\n  get maxWidth(): number {\n    return this._maxWidth;\n  }\n\n  /**\n   * The computed maximum height of the widget.\n   *\n   * #### Notes\n   * This value can be updated by calling the `fit` method.\n   */\n  get maxHeight(): number {\n    return this._maxHeight;\n  }\n\n  /**\n   * Whether the layout item is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._disposed;\n  }\n\n  /**\n   * Whether the managed widget is hidden.\n   */\n  get isHidden(): boolean {\n    return this.widget.isHidden;\n  }\n\n  /**\n   * Whether the managed widget is visible.\n   */\n  get isVisible(): boolean {\n    return this.widget.isVisible;\n  }\n\n  /**\n   * Whether the managed widget is attached.\n   */\n  get isAttached(): boolean {\n    return this.widget.isAttached;\n  }\n\n  /**\n   * Update the computed size limits of the managed widget.\n   */\n  fit(): void {\n    let limits = ElementExt.sizeLimits(this.widget.node);\n    this._minWidth = limits.minWidth;\n    this._minHeight = limits.minHeight;\n    this._maxWidth = limits.maxWidth;\n    this._maxHeight = limits.maxHeight;\n  }\n\n  /**\n   * Update the position and size of the managed widget.\n   *\n   * @param left - The left edge position of the layout box.\n   *\n   * @param top - The top edge position of the layout box.\n   *\n   * @param width - The width of the layout box.\n   *\n   * @param height - The height of the layout box.\n   */\n  update(left: number, top: number, width: number, height: number): void {\n    // Clamp the size to the computed size limits.\n    let clampW = Math.max(this._minWidth, Math.min(width, this._maxWidth));\n    let clampH = Math.max(this._minHeight, Math.min(height, this._maxHeight));\n\n    // Adjust the left edge for the horizontal alignment, if needed.\n    if (clampW < width) {\n      switch (Layout.getHorizontalAlignment(this.widget)) {\n        case 'left':\n          break;\n        case 'center':\n          left += (width - clampW) / 2;\n          break;\n        case 'right':\n          left += width - clampW;\n          break;\n        default:\n          throw 'unreachable';\n      }\n    }\n\n    // Adjust the top edge for the vertical alignment, if needed.\n    if (clampH < height) {\n      switch (Layout.getVerticalAlignment(this.widget)) {\n        case 'top':\n          break;\n        case 'center':\n          top += (height - clampH) / 2;\n          break;\n        case 'bottom':\n          top += height - clampH;\n          break;\n        default:\n          throw 'unreachable';\n      }\n    }\n\n    // Set up the resize variables.\n    let resized = false;\n    let style = this.widget.node.style;\n\n    // Update the top edge of the widget if needed.\n    if (this._top !== top) {\n      this._top = top;\n      style.top = `${top}px`;\n    }\n\n    // Update the left edge of the widget if needed.\n    if (this._left !== left) {\n      this._left = left;\n      style.left = `${left}px`;\n    }\n\n    // Update the width of the widget if needed.\n    if (this._width !== clampW) {\n      resized = true;\n      this._width = clampW;\n      style.width = `${clampW}px`;\n    }\n\n    // Update the height of the widget if needed.\n    if (this._height !== clampH) {\n      resized = true;\n      this._height = clampH;\n      style.height = `${clampH}px`;\n    }\n\n    // Send a resize message to the widget if needed.\n    if (resized) {\n      let msg = new Widget.ResizeMessage(clampW, clampH);\n      MessageLoop.sendMessage(this.widget, msg);\n    }\n  }\n\n  private _top = NaN;\n  private _left = NaN;\n  private _width = NaN;\n  private _height = NaN;\n  private _minWidth = 0;\n  private _minHeight = 0;\n  private _maxWidth = Infinity;\n  private _maxHeight = Infinity;\n  private _disposed = false;\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * The attached property for a widget horizontal alignment.\n   */\n  export const horizontalAlignmentProperty = new AttachedProperty<\n    Widget,\n    Layout.HorizontalAlignment\n  >({\n    name: 'horizontalAlignment',\n    create: () => 'center',\n    changed: onAlignmentChanged\n  });\n\n  /**\n   * The attached property for a widget vertical alignment.\n   */\n  export const verticalAlignmentProperty = new AttachedProperty<\n    Widget,\n    Layout.VerticalAlignment\n  >({\n    name: 'verticalAlignment',\n    create: () => 'top',\n    changed: onAlignmentChanged\n  });\n\n  /**\n   * The change handler for the attached alignment properties.\n   */\n  function onAlignmentChanged(child: Widget): void {\n    if (child.parent && child.parent.layout) {\n      child.parent.update();\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { ArrayExt } from '@lumino/algorithm';\n\nimport { MessageLoop } from '@lumino/messaging';\n\nimport { Layout } from './layout';\n\nimport { Widget } from './widget';\n\n/**\n * A concrete layout implementation suitable for many use cases.\n *\n * #### Notes\n * This class is suitable as a base class for implementing a variety of\n * layouts, but can also be used directly with standard CSS to layout a\n * collection of widgets.\n */\nexport class PanelLayout extends Layout {\n  /**\n   * Dispose of the resources held by the layout.\n   *\n   * #### Notes\n   * This will clear and dispose all widgets in the layout.\n   *\n   * All reimplementations should call the superclass method.\n   *\n   * This method is called automatically when the parent is disposed.\n   */\n  dispose(): void {\n    while (this._widgets.length > 0) {\n      this._widgets.pop()!.dispose();\n    }\n    super.dispose();\n  }\n\n  /**\n   * A read-only array of the widgets in the layout.\n   */\n  get widgets(): ReadonlyArray<Widget> {\n    return this._widgets;\n  }\n\n  /**\n   * Create an iterator over the widgets in the layout.\n   *\n   * @returns A new iterator over the widgets in the layout.\n   */\n  *[Symbol.iterator](): IterableIterator<Widget> {\n    yield* this._widgets;\n  }\n\n  /**\n   * Add a widget to the end of the layout.\n   *\n   * @param widget - The widget to add to the layout.\n   *\n   * #### Notes\n   * If the widget is already contained in the layout, it will be moved.\n   */\n  addWidget(widget: Widget): void {\n    this.insertWidget(this._widgets.length, widget);\n  }\n\n  /**\n   * Insert a widget into the layout at the specified index.\n   *\n   * @param index - The index at which to insert the widget.\n   *\n   * @param widget - The widget to insert into the layout.\n   *\n   * #### Notes\n   * The index will be clamped to the bounds of the widgets.\n   *\n   * If the widget is already added to the layout, it will be moved.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   */\n  insertWidget(index: number, widget: Widget): void {\n    // Remove the widget from its current parent. This is a no-op\n    // if the widget's parent is already the layout parent widget.\n    widget.parent = this.parent;\n\n    // Look up the current index of the widget.\n    let i = this._widgets.indexOf(widget);\n\n    // Clamp the insert index to the array bounds.\n    let j = Math.max(0, Math.min(index, this._widgets.length));\n\n    // If the widget is not in the array, insert it.\n    if (i === -1) {\n      // Insert the widget into the array.\n      ArrayExt.insert(this._widgets, j, widget);\n\n      // If the layout is parented, attach the widget to the DOM.\n      if (this.parent) {\n        this.attachWidget(j, widget);\n      }\n\n      // There is nothing more to do.\n      return;\n    }\n\n    // Otherwise, the widget exists in the array and should be moved.\n\n    // Adjust the index if the location is at the end of the array.\n    if (j === this._widgets.length) {\n      j--;\n    }\n\n    // Bail if there is no effective move.\n    if (i === j) {\n      return;\n    }\n\n    // Move the widget to the new location.\n    ArrayExt.move(this._widgets, i, j);\n\n    // If the layout is parented, move the widget in the DOM.\n    if (this.parent) {\n      this.moveWidget(i, j, widget);\n    }\n  }\n\n  /**\n   * Remove a widget from the layout.\n   *\n   * @param widget - The widget to remove from the layout.\n   *\n   * #### Notes\n   * A widget is automatically removed from the layout when its `parent`\n   * is set to `null`. This method should only be invoked directly when\n   * removing a widget from a layout which has yet to be installed on a\n   * parent widget.\n   *\n   * This method does *not* modify the widget's `parent`.\n   */\n  removeWidget(widget: Widget): void {\n    this.removeWidgetAt(this._widgets.indexOf(widget));\n  }\n\n  /**\n   * Remove the widget at a given index from the layout.\n   *\n   * @param index - The index of the widget to remove.\n   *\n   * #### Notes\n   * A widget is automatically removed from the layout when its `parent`\n   * is set to `null`. This method should only be invoked directly when\n   * removing a widget from a layout which has yet to be installed on a\n   * parent widget.\n   *\n   * This method does *not* modify the widget's `parent`.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   */\n  removeWidgetAt(index: number): void {\n    // Remove the widget from the array.\n    let widget = ArrayExt.removeAt(this._widgets, index);\n\n    // If the layout is parented, detach the widget from the DOM.\n    if (widget && this.parent) {\n      this.detachWidget(index, widget);\n    }\n  }\n\n  /**\n   * Perform layout initialization which requires the parent widget.\n   */\n  protected init(): void {\n    super.init();\n    let index = 0;\n    for (const widget of this) {\n      this.attachWidget(index++, widget);\n    }\n  }\n\n  /**\n   * Attach a widget to the parent's DOM node.\n   *\n   * @param index - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to attach to the parent.\n   *\n   * #### Notes\n   * This method is called automatically by the panel layout at the\n   * appropriate time. It should not be called directly by user code.\n   *\n   * The default implementation adds the widgets's node to the parent's\n   * node at the proper location, and sends the appropriate attach\n   * messages to the widget if the parent is attached to the DOM.\n   *\n   * Subclasses may reimplement this method to control how the widget's\n   * node is added to the parent's node.\n   */\n  protected attachWidget(index: number, widget: Widget): void {\n    // Look up the next sibling reference node.\n    let ref = this.parent!.node.children[index];\n\n    // Send a `'before-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\n    }\n\n    // Insert the widget's node before the sibling.\n    this.parent!.node.insertBefore(widget.node, ref);\n\n    // Send an `'after-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\n    }\n  }\n\n  /**\n   * Move a widget in the parent's DOM node.\n   *\n   * @param fromIndex - The previous index of the widget in the layout.\n   *\n   * @param toIndex - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to move in the parent.\n   *\n   * #### Notes\n   * This method is called automatically by the panel layout at the\n   * appropriate time. It should not be called directly by user code.\n   *\n   * The default implementation moves the widget's node to the proper\n   * location in the parent's node and sends the appropriate attach and\n   * detach messages to the widget if the parent is attached to the DOM.\n   *\n   * Subclasses may reimplement this method to control how the widget's\n   * node is moved in the parent's node.\n   */\n  protected moveWidget(\n    fromIndex: number,\n    toIndex: number,\n    widget: Widget\n  ): void {\n    // Send a `'before-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\n    }\n\n    // Remove the widget's node from the parent.\n    this.parent!.node.removeChild(widget.node);\n\n    // Send an `'after-detach'` and  message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\n    }\n\n    // Look up the next sibling reference node.\n    let ref = this.parent!.node.children[toIndex];\n\n    // Send a `'before-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\n    }\n\n    // Insert the widget's node before the sibling.\n    this.parent!.node.insertBefore(widget.node, ref);\n\n    // Send an `'after-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\n    }\n  }\n\n  /**\n   * Detach a widget from the parent's DOM node.\n   *\n   * @param index - The previous index of the widget in the layout.\n   *\n   * @param widget - The widget to detach from the parent.\n   *\n   * #### Notes\n   * This method is called automatically by the panel layout at the\n   * appropriate time. It should not be called directly by user code.\n   *\n   * The default implementation removes the widget's node from the\n   * parent's node, and sends the appropriate detach messages to the\n   * widget if the parent is attached to the DOM.\n   *\n   * Subclasses may reimplement this method to control how the widget's\n   * node is removed from the parent's node.\n   */\n  protected detachWidget(index: number, widget: Widget): void {\n    // Send a `'before-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\n    }\n\n    // Remove the widget's node from the parent.\n    this.parent!.node.removeChild(widget.node);\n\n    // Send an `'after-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\n    }\n  }\n\n  private _widgets: Widget[] = [];\n}\n", "/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n\nexport namespace Utils {\n  /**\n   * Clamp a dimension value to an integer >= 0.\n   */\n  export function clampDimension(value: number): number {\n    return Math.max(0, Math.floor(value));\n  }\n}\n\nexport default Utils;\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { ArrayExt } from '@lumino/algorithm';\n\nimport { ElementExt } from '@lumino/domutils';\n\nimport { Message, MessageLoop } from '@lumino/messaging';\n\nimport { AttachedProperty } from '@lumino/properties';\n\nimport { BoxEngine, BoxSizer } from './boxengine';\n\nimport { LayoutItem } from './layout';\n\nimport { PanelLayout } from './panellayout';\n\nimport { Utils } from './utils';\n\nimport { Widget } from './widget';\n\n/**\n * A layout which arranges its widgets into resizable sections.\n */\nexport class SplitLayout extends PanelLayout {\n  /**\n   * Construct a new split layout.\n   *\n   * @param options - The options for initializing the layout.\n   */\n  constructor(options: SplitLayout.IOptions) {\n    super();\n    this.renderer = options.renderer;\n    if (options.orientation !== undefined) {\n      this._orientation = options.orientation;\n    }\n    if (options.alignment !== undefined) {\n      this._alignment = options.alignment;\n    }\n    if (options.spacing !== undefined) {\n      this._spacing = Utils.clampDimension(options.spacing);\n    }\n  }\n\n  /**\n   * Dispose of the resources held by the layout.\n   */\n  dispose(): void {\n    // Dispose of the layout items.\n    for (const item of this._items) {\n      item.dispose();\n    }\n\n    // Clear the layout state.\n    this._box = null;\n    this._items.length = 0;\n    this._sizers.length = 0;\n    this._handles.length = 0;\n\n    // Dispose of the rest of the layout.\n    super.dispose();\n  }\n\n  /**\n   * The renderer used by the split layout.\n   */\n  readonly renderer: SplitLayout.IRenderer;\n\n  /**\n   * Get the layout orientation for the split layout.\n   */\n  get orientation(): SplitLayout.Orientation {\n    return this._orientation;\n  }\n\n  /**\n   * Set the layout orientation for the split layout.\n   */\n  set orientation(value: SplitLayout.Orientation) {\n    if (this._orientation === value) {\n      return;\n    }\n    this._orientation = value;\n    if (!this.parent) {\n      return;\n    }\n    this.parent.dataset['orientation'] = value;\n    this.parent.fit();\n  }\n\n  /**\n   * Get the content alignment for the split layout.\n   *\n   * #### Notes\n   * This is the alignment of the widgets in the layout direction.\n   *\n   * The alignment has no effect if the widgets can expand  to fill the\n   * entire split layout.\n   */\n  get alignment(): SplitLayout.Alignment {\n    return this._alignment;\n  }\n\n  /**\n   * Set the content alignment for the split layout.\n   *\n   * #### Notes\n   * This is the alignment of the widgets in the layout direction.\n   *\n   * The alignment has no effect if the widgets can expand  to fill the\n   * entire split layout.\n   */\n  set alignment(value: SplitLayout.Alignment) {\n    if (this._alignment === value) {\n      return;\n    }\n    this._alignment = value;\n    if (!this.parent) {\n      return;\n    }\n    this.parent.dataset['alignment'] = value;\n    this.parent.update();\n  }\n\n  /**\n   * Get the inter-element spacing for the split layout.\n   */\n  get spacing(): number {\n    return this._spacing;\n  }\n\n  /**\n   * Set the inter-element spacing for the split layout.\n   */\n  set spacing(value: number) {\n    value = Utils.clampDimension(value);\n    if (this._spacing === value) {\n      return;\n    }\n    this._spacing = value;\n    if (!this.parent) {\n      return;\n    }\n    this.parent.fit();\n  }\n\n  /**\n   * A read-only array of the split handles in the layout.\n   */\n  get handles(): ReadonlyArray<HTMLDivElement> {\n    return this._handles;\n  }\n\n  /**\n   * Get the absolute sizes of the widgets in the layout.\n   *\n   * @returns A new array of the absolute sizes of the widgets.\n   *\n   * This method **does not** measure the DOM nodes.\n   */\n  absoluteSizes(): number[] {\n    return this._sizers.map(sizer => sizer.size);\n  }\n\n  /**\n   * Get the relative sizes of the widgets in the layout.\n   *\n   * @returns A new array of the relative sizes of the widgets.\n   *\n   * #### Notes\n   * The returned sizes reflect the sizes of the widgets normalized\n   * relative to their siblings.\n   *\n   * This method **does not** measure the DOM nodes.\n   */\n  relativeSizes(): number[] {\n    return Private.normalize(this._sizers.map(sizer => sizer.size));\n  }\n\n  /**\n   * Set the relative sizes for the widgets in the layout.\n   *\n   * @param sizes - The relative sizes for the widgets in the panel.\n   * @param update - Update the layout after setting relative sizes.\n   * Default is True.\n   *\n   * #### Notes\n   * Extra values are ignored, too few will yield an undefined layout.\n   *\n   * The actual geometry of the DOM nodes is updated asynchronously.\n   */\n  setRelativeSizes(sizes: number[], update = true): void {\n    // Copy the sizes and pad with zeros as needed.\n    let n = this._sizers.length;\n    let temp = sizes.slice(0, n);\n    while (temp.length < n) {\n      temp.push(0);\n    }\n\n    // Normalize the padded sizes.\n    let normed = Private.normalize(temp);\n\n    // Apply the normalized sizes to the sizers.\n    for (let i = 0; i < n; ++i) {\n      let sizer = this._sizers[i];\n      sizer.sizeHint = normed[i];\n      sizer.size = normed[i];\n    }\n\n    // Set the flag indicating the sizes are normalized.\n    this._hasNormedSizes = true;\n\n    // Trigger an update of the parent widget.\n    if (update && this.parent) {\n      this.parent.update();\n    }\n  }\n\n  /**\n   * Move the offset position of a split handle.\n   *\n   * @param index - The index of the handle of the interest.\n   *\n   * @param position - The desired offset position of the handle.\n   *\n   * #### Notes\n   * The position is relative to the offset parent.\n   *\n   * This will move the handle as close as possible to the desired\n   * position. The sibling widgets will be adjusted as necessary.\n   */\n  moveHandle(index: number, position: number): void {\n    // Bail if the index is invalid or the handle is hidden.\n    let handle = this._handles[index];\n    if (!handle || handle.classList.contains('lm-mod-hidden')) {\n      return;\n    }\n\n    // Compute the desired delta movement for the handle.\n    let delta: number;\n    if (this._orientation === 'horizontal') {\n      delta = position - handle.offsetLeft;\n    } else {\n      delta = position - handle.offsetTop;\n    }\n\n    // Bail if there is no handle movement.\n    if (delta === 0) {\n      return;\n    }\n\n    // Prevent widget resizing unless needed.\n    for (let sizer of this._sizers) {\n      if (sizer.size > 0) {\n        sizer.sizeHint = sizer.size;\n      }\n    }\n\n    // Adjust the sizers to reflect the handle movement.\n    BoxEngine.adjust(this._sizers, index, delta);\n\n    // Update the layout of the widgets.\n    if (this.parent) {\n      this.parent.update();\n    }\n  }\n\n  /**\n   * Perform layout initialization which requires the parent widget.\n   */\n  protected init(): void {\n    this.parent!.dataset['orientation'] = this.orientation;\n    this.parent!.dataset['alignment'] = this.alignment;\n    super.init();\n  }\n\n  /**\n   * Attach a widget to the parent's DOM node.\n   *\n   * @param index - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to attach to the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected attachWidget(index: number, widget: Widget): void {\n    // Create the item, handle, and sizer for the new widget.\n    let item = new LayoutItem(widget);\n    let handle = Private.createHandle(this.renderer);\n    let average = Private.averageSize(this._sizers);\n    let sizer = Private.createSizer(average);\n\n    // Insert the item, handle, and sizer into the internal arrays.\n    ArrayExt.insert(this._items, index, item);\n    ArrayExt.insert(this._sizers, index, sizer);\n    ArrayExt.insert(this._handles, index, handle);\n\n    // Send a `'before-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\n    }\n\n    // Add the widget and handle nodes to the parent.\n    this.parent!.node.appendChild(widget.node);\n    this.parent!.node.appendChild(handle);\n\n    // Send an `'after-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\n    }\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * Move a widget in the parent's DOM node.\n   *\n   * @param fromIndex - The previous index of the widget in the layout.\n   *\n   * @param toIndex - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to move in the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected moveWidget(\n    fromIndex: number,\n    toIndex: number,\n    widget: Widget\n  ): void {\n    // Move the item, sizer, and handle for the widget.\n    ArrayExt.move(this._items, fromIndex, toIndex);\n    ArrayExt.move(this._sizers, fromIndex, toIndex);\n    ArrayExt.move(this._handles, fromIndex, toIndex);\n\n    // Post a fit request to the parent to show/hide last handle.\n    this.parent!.fit();\n  }\n\n  /**\n   * Detach a widget from the parent's DOM node.\n   *\n   * @param index - The previous index of the widget in the layout.\n   *\n   * @param widget - The widget to detach from the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected detachWidget(index: number, widget: Widget): void {\n    // Remove the item, handle, and sizer for the widget.\n    let item = ArrayExt.removeAt(this._items, index);\n    let handle = ArrayExt.removeAt(this._handles, index);\n    ArrayExt.removeAt(this._sizers, index);\n\n    // Send a `'before-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\n    }\n\n    // Remove the widget and handle nodes from the parent.\n    this.parent!.node.removeChild(widget.node);\n    this.parent!.node.removeChild(handle!);\n\n    // Send an `'after-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\n    }\n\n    // Dispose of the layout item.\n    item!.dispose();\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'before-show'` message.\n   */\n  protected onBeforeShow(msg: Message): void {\n    super.onBeforeShow(msg);\n    this.parent!.update();\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    super.onBeforeAttach(msg);\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-shown'` message.\n   */\n  protected onChildShown(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-hidden'` message.\n   */\n  protected onChildHidden(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'resize'` message.\n   */\n  protected onResize(msg: Widget.ResizeMessage): void {\n    if (this.parent!.isVisible) {\n      this._update(msg.width, msg.height);\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    if (this.parent!.isVisible) {\n      this._update(-1, -1);\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'fit-request'` message.\n   */\n  protected onFitRequest(msg: Message): void {\n    if (this.parent!.isAttached) {\n      this._fit();\n    }\n  }\n\n  /**\n   * Update the item position.\n   *\n   * @param i Item index\n   * @param isHorizontal Whether the layout is horizontal or not\n   * @param left Left position in pixels\n   * @param top Top position in pixels\n   * @param height Item height\n   * @param width Item width\n   * @param size Item size\n   */\n  protected updateItemPosition(\n    i: number,\n    isHorizontal: boolean,\n    left: number,\n    top: number,\n    height: number,\n    width: number,\n    size: number\n  ): void {\n    const item = this._items[i];\n    if (item.isHidden) {\n      return;\n    }\n\n    // Fetch the style for the handle.\n    let handleStyle = this._handles[i].style;\n\n    // Update the widget and handle, and advance the relevant edge.\n    if (isHorizontal) {\n      left += this.widgetOffset;\n      item.update(left, top, size, height);\n      left += size;\n      handleStyle.top = `${top}px`;\n      handleStyle.left = `${left}px`;\n      handleStyle.width = `${this._spacing}px`;\n      handleStyle.height = `${height}px`;\n    } else {\n      top += this.widgetOffset;\n      item.update(left, top, width, size);\n      top += size;\n      handleStyle.top = `${top}px`;\n      handleStyle.left = `${left}px`;\n      handleStyle.width = `${width}px`;\n      handleStyle.height = `${this._spacing}px`;\n    }\n  }\n\n  /**\n   * Fit the layout to the total size required by the widgets.\n   */\n  private _fit(): void {\n    // Update the handles and track the visible widget count.\n    let nVisible = 0;\n    let lastHandleIndex = -1;\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      if (this._items[i].isHidden) {\n        this._handles[i].classList.add('lm-mod-hidden');\n      } else {\n        this._handles[i].classList.remove('lm-mod-hidden');\n        lastHandleIndex = i;\n        nVisible++;\n      }\n    }\n\n    // Hide the handle for the last visible widget.\n    if (lastHandleIndex !== -1) {\n      this._handles[lastHandleIndex].classList.add('lm-mod-hidden');\n    }\n\n    // Update the fixed space for the visible items.\n    this._fixed =\n      this._spacing * Math.max(0, nVisible - 1) +\n      this.widgetOffset * this._items.length;\n\n    // Setup the computed minimum size.\n    let horz = this._orientation === 'horizontal';\n    let minW = horz ? this._fixed : 0;\n    let minH = horz ? 0 : this._fixed;\n\n    // Update the sizers and computed size limits.\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      // Fetch the item and corresponding box sizer.\n      let item = this._items[i];\n      let sizer = this._sizers[i];\n\n      // Prevent resizing unless necessary.\n      if (sizer.size > 0) {\n        sizer.sizeHint = sizer.size;\n      }\n\n      // If the item is hidden, it should consume zero size.\n      if (item.isHidden) {\n        sizer.minSize = 0;\n        sizer.maxSize = 0;\n        continue;\n      }\n\n      // Update the size limits for the item.\n      item.fit();\n\n      // Update the stretch factor.\n      sizer.stretch = SplitLayout.getStretch(item.widget);\n\n      // Update the sizer limits and computed min size.\n      if (horz) {\n        sizer.minSize = item.minWidth;\n        sizer.maxSize = item.maxWidth;\n        minW += item.minWidth;\n        minH = Math.max(minH, item.minHeight);\n      } else {\n        sizer.minSize = item.minHeight;\n        sizer.maxSize = item.maxHeight;\n        minH += item.minHeight;\n        minW = Math.max(minW, item.minWidth);\n      }\n    }\n\n    // Update the box sizing and add it to the computed min size.\n    let box = (this._box = ElementExt.boxSizing(this.parent!.node));\n    minW += box.horizontalSum;\n    minH += box.verticalSum;\n\n    // Update the parent's min size constraints.\n    let style = this.parent!.node.style;\n    style.minWidth = `${minW}px`;\n    style.minHeight = `${minH}px`;\n\n    // Set the dirty flag to ensure only a single update occurs.\n    this._dirty = true;\n\n    // Notify the ancestor that it should fit immediately. This may\n    // cause a resize of the parent, fulfilling the required update.\n    if (this.parent!.parent) {\n      MessageLoop.sendMessage(this.parent!.parent!, Widget.Msg.FitRequest);\n    }\n\n    // If the dirty flag is still set, the parent was not resized.\n    // Trigger the required update on the parent widget immediately.\n    if (this._dirty) {\n      MessageLoop.sendMessage(this.parent!, Widget.Msg.UpdateRequest);\n    }\n  }\n\n  /**\n   * Update the layout position and size of the widgets.\n   *\n   * The parent offset dimensions should be `-1` if unknown.\n   */\n  private _update(offsetWidth: number, offsetHeight: number): void {\n    // Clear the dirty flag to indicate the update occurred.\n    this._dirty = false;\n\n    // Compute the visible item count.\n    let nVisible = 0;\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      nVisible += +!this._items[i].isHidden;\n    }\n\n    // Bail early if there are no visible items to layout.\n    if (nVisible === 0 && this.widgetOffset === 0) {\n      return;\n    }\n\n    // Measure the parent if the offset dimensions are unknown.\n    if (offsetWidth < 0) {\n      offsetWidth = this.parent!.node.offsetWidth;\n    }\n    if (offsetHeight < 0) {\n      offsetHeight = this.parent!.node.offsetHeight;\n    }\n\n    // Ensure the parent box sizing data is computed.\n    if (!this._box) {\n      this._box = ElementExt.boxSizing(this.parent!.node);\n    }\n\n    // Compute the actual layout bounds adjusted for border and padding.\n    let top = this._box.paddingTop;\n    let left = this._box.paddingLeft;\n    let width = offsetWidth - this._box.horizontalSum;\n    let height = offsetHeight - this._box.verticalSum;\n\n    // Set up the variables for justification and alignment offset.\n    let extra = 0;\n    let offset = 0;\n    let horz = this._orientation === 'horizontal';\n\n    if (nVisible > 0) {\n      // Compute the adjusted layout space.\n      let space: number;\n      if (horz) {\n        // left += this.widgetOffset;\n        space = Math.max(0, width - this._fixed);\n      } else {\n        // top += this.widgetOffset;\n        space = Math.max(0, height - this._fixed);\n      }\n\n      // Scale the size hints if they are normalized.\n      if (this._hasNormedSizes) {\n        for (let sizer of this._sizers) {\n          sizer.sizeHint *= space;\n        }\n        this._hasNormedSizes = false;\n      }\n\n      // Distribute the layout space to the box sizers.\n      let delta = BoxEngine.calc(this._sizers, space);\n\n      // Account for alignment if there is extra layout space.\n      if (delta > 0) {\n        switch (this._alignment) {\n          case 'start':\n            break;\n          case 'center':\n            extra = 0;\n            offset = delta / 2;\n            break;\n          case 'end':\n            extra = 0;\n            offset = delta;\n            break;\n          case 'justify':\n            extra = delta / nVisible;\n            offset = 0;\n            break;\n          default:\n            throw 'unreachable';\n        }\n      }\n    }\n\n    // Layout the items using the computed box sizes.\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      // Fetch the item.\n      const item = this._items[i];\n\n      // Fetch the computed size for the widget.\n      const size = item.isHidden ? 0 : this._sizers[i].size + extra;\n\n      this.updateItemPosition(\n        i,\n        horz,\n        horz ? left + offset : left,\n        horz ? top : top + offset,\n        height,\n        width,\n        size\n      );\n\n      const fullOffset =\n        this.widgetOffset +\n        (this._handles[i].classList.contains('lm-mod-hidden')\n          ? 0\n          : this._spacing);\n\n      if (horz) {\n        left += size + fullOffset;\n      } else {\n        top += size + fullOffset;\n      }\n    }\n  }\n\n  protected widgetOffset = 0;\n  private _fixed = 0;\n  private _spacing = 4;\n  private _dirty = false;\n  private _hasNormedSizes = false;\n  private _sizers: BoxSizer[] = [];\n  private _items: LayoutItem[] = [];\n  private _handles: HTMLDivElement[] = [];\n  private _box: ElementExt.IBoxSizing | null = null;\n  private _alignment: SplitLayout.Alignment = 'start';\n  private _orientation: SplitLayout.Orientation = 'horizontal';\n}\n\n/**\n * The namespace for the `SplitLayout` class statics.\n */\nexport namespace SplitLayout {\n  /**\n   * A type alias for a split layout orientation.\n   */\n  export type Orientation = 'horizontal' | 'vertical';\n\n  /**\n   * A type alias for a split layout alignment.\n   */\n  export type Alignment = 'start' | 'center' | 'end' | 'justify';\n\n  /**\n   * An options object for initializing a split layout.\n   */\n  export interface IOptions {\n    /**\n     * The renderer to use for the split layout.\n     */\n    renderer: IRenderer;\n\n    /**\n     * The orientation of the layout.\n     *\n     * The default is `'horizontal'`.\n     */\n    orientation?: Orientation;\n\n    /**\n     * The content alignment of the layout.\n     *\n     * The default is `'start'`.\n     */\n    alignment?: Alignment;\n\n    /**\n     * The spacing between items in the layout.\n     *\n     * The default is `4`.\n     */\n    spacing?: number;\n  }\n\n  /**\n   * A renderer for use with a split layout.\n   */\n  export interface IRenderer {\n    /**\n     * Create a new handle for use with a split layout.\n     *\n     * @returns A new handle element.\n     */\n    createHandle(): HTMLDivElement;\n  }\n\n  /**\n   * Get the split layout stretch factor for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The split layout stretch factor for the widget.\n   */\n  export function getStretch(widget: Widget): number {\n    return Private.stretchProperty.get(widget);\n  }\n\n  /**\n   * Set the split layout stretch factor for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the stretch factor.\n   */\n  export function setStretch(widget: Widget, value: number): void {\n    Private.stretchProperty.set(widget, value);\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * The property descriptor for a widget stretch factor.\n   */\n  export const stretchProperty = new AttachedProperty<Widget, number>({\n    name: 'stretch',\n    create: () => 0,\n    coerce: (owner, value) => Math.max(0, Math.floor(value)),\n    changed: onChildSizingChanged\n  });\n\n  /**\n   * Create a new box sizer with the given size hint.\n   */\n  export function createSizer(size: number): BoxSizer {\n    let sizer = new BoxSizer();\n    sizer.sizeHint = Math.floor(size);\n    return sizer;\n  }\n\n  /**\n   * Create a new split handle node using the given renderer.\n   */\n  export function createHandle(\n    renderer: SplitLayout.IRenderer\n  ): HTMLDivElement {\n    let handle = renderer.createHandle();\n    handle.style.position = 'absolute';\n    // Do not use size containment to allow the handle to fill the available space\n    handle.style.contain = 'style';\n    return handle;\n  }\n\n  /**\n   * Compute the average size of an array of box sizers.\n   */\n  export function averageSize(sizers: BoxSizer[]): number {\n    return sizers.reduce((v, s) => v + s.size, 0) / sizers.length || 0;\n  }\n\n  /**\n   * Normalize an array of values.\n   */\n  export function normalize(values: number[]): number[] {\n    let n = values.length;\n    if (n === 0) {\n      return [];\n    }\n    let sum = values.reduce((a, b) => a + Math.abs(b), 0);\n    return sum === 0 ? values.map(v => 1 / n) : values.map(v => v / sum);\n  }\n\n  /**\n   * The change handler for the attached sizing properties.\n   */\n  function onChildSizingChanged(child: Widget): void {\n    if (child.parent && child.parent.layout instanceof SplitLayout) {\n      child.parent.fit();\n    }\n  }\n}\n", "/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n\nimport { ArrayExt } from '@lumino/algorithm';\nimport { UUID } from '@lumino/coreutils';\nimport { SplitLayout } from './splitlayout';\nimport { Title } from './title';\nimport Utils from './utils';\nimport { Widget } from './widget';\n\n/**\n * A layout which arranges its widgets into collapsible resizable sections.\n */\nexport class AccordionLayout extends SplitLayout {\n  /**\n   * Construct a new accordion layout.\n   *\n   * @param options - The options for initializing the layout.\n   *\n   * #### Notes\n   * The default orientation will be vertical.\n   *\n   * Titles must be rotated for horizontal accordion panel using CSS: see accordionpanel.css\n   */\n  constructor(options: AccordionLayout.IOptions) {\n    super({ ...options, orientation: options.orientation || 'vertical' });\n    this.titleSpace = options.titleSpace || 22;\n  }\n\n  /**\n   * The section title height or width depending on the orientation.\n   */\n  get titleSpace(): number {\n    return this.widgetOffset;\n  }\n  set titleSpace(value: number) {\n    value = Utils.clampDimension(value);\n    if (this.widgetOffset === value) {\n      return;\n    }\n    this.widgetOffset = value;\n    if (!this.parent) {\n      return;\n    }\n    this.parent.fit();\n  }\n\n  /**\n   * A read-only array of the section titles in the panel.\n   */\n  get titles(): ReadonlyArray<HTMLElement> {\n    return this._titles;\n  }\n\n  /**\n   * Dispose of the resources held by the layout.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n\n    // Clear the layout state.\n    this._titles.length = 0;\n\n    // Dispose of the rest of the layout.\n    super.dispose();\n  }\n\n  /**\n   * The renderer used by the accordion layout.\n   */\n  readonly renderer: AccordionLayout.IRenderer;\n\n  public updateTitle(index: number, widget: Widget): void {\n    const oldTitle = this._titles[index];\n    const expanded = oldTitle.classList.contains('lm-mod-expanded');\n    const newTitle = Private.createTitle(this.renderer, widget.title, expanded);\n    this._titles[index] = newTitle;\n\n    // Add the title node to the parent before the widget.\n    this.parent!.node.replaceChild(newTitle, oldTitle);\n  }\n\n  /**\n   * Insert a widget into the layout at the specified index.\n   *\n   * @param index - The index at which to insert the widget.\n   *\n   * @param widget - The widget to insert into the layout.\n   *\n   * #### Notes\n   * The index will be clamped to the bounds of the widgets.\n   *\n   * If the widget is already added to the layout, it will be moved.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   */\n  insertWidget(index: number, widget: Widget): void {\n    if (!widget.id) {\n      widget.id = `id-${UUID.uuid4()}`;\n    }\n    super.insertWidget(index, widget);\n  }\n\n  /**\n   * Attach a widget to the parent's DOM node.\n   *\n   * @param index - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to attach to the parent.\n   */\n  protected attachWidget(index: number, widget: Widget): void {\n    const title = Private.createTitle(this.renderer, widget.title);\n\n    ArrayExt.insert(this._titles, index, title);\n\n    // Add the title node to the parent before the widget.\n    this.parent!.node.appendChild(title);\n\n    widget.node.setAttribute('role', 'region');\n    widget.node.setAttribute('aria-labelledby', title.id);\n\n    super.attachWidget(index, widget);\n  }\n\n  /**\n   * Move a widget in the parent's DOM node.\n   *\n   * @param fromIndex - The previous index of the widget in the layout.\n   *\n   * @param toIndex - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to move in the parent.\n   */\n  protected moveWidget(\n    fromIndex: number,\n    toIndex: number,\n    widget: Widget\n  ): void {\n    ArrayExt.move(this._titles, fromIndex, toIndex);\n    super.moveWidget(fromIndex, toIndex, widget);\n  }\n\n  /**\n   * Detach a widget from the parent's DOM node.\n   *\n   * @param index - The previous index of the widget in the layout.\n   *\n   * @param widget - The widget to detach from the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected detachWidget(index: number, widget: Widget): void {\n    const title = ArrayExt.removeAt(this._titles, index);\n\n    this.parent!.node.removeChild(title!);\n\n    super.detachWidget(index, widget);\n  }\n\n  /**\n   * Update the item position.\n   *\n   * @param i Item index\n   * @param isHorizontal Whether the layout is horizontal or not\n   * @param left Left position in pixels\n   * @param top Top position in pixels\n   * @param height Item height\n   * @param width Item width\n   * @param size Item size\n   */\n  protected updateItemPosition(\n    i: number,\n    isHorizontal: boolean,\n    left: number,\n    top: number,\n    height: number,\n    width: number,\n    size: number\n  ): void {\n    const titleStyle = this._titles[i].style;\n\n    // Titles must be rotated for horizontal accordion panel using CSS: see accordionpanel.css\n    titleStyle.top = `${top}px`;\n    titleStyle.left = `${left}px`;\n    titleStyle.height = `${this.widgetOffset}px`;\n    if (isHorizontal) {\n      titleStyle.width = `${height}px`;\n    } else {\n      titleStyle.width = `${width}px`;\n    }\n\n    super.updateItemPosition(i, isHorizontal, left, top, height, width, size);\n  }\n\n  private _titles: HTMLElement[] = [];\n}\n\nexport namespace AccordionLayout {\n  /**\n   * A type alias for a accordion layout orientation.\n   */\n  export type Orientation = SplitLayout.Orientation;\n\n  /**\n   * A type alias for a accordion layout alignment.\n   */\n  export type Alignment = SplitLayout.Alignment;\n\n  /**\n   * An options object for initializing a accordion layout.\n   */\n  export interface IOptions extends SplitLayout.IOptions {\n    /**\n     * The renderer to use for the accordion layout.\n     */\n    renderer: IRenderer;\n\n    /**\n     * The section title height or width depending on the orientation.\n     *\n     * The default is `22`.\n     */\n    titleSpace?: number;\n  }\n\n  /**\n   * A renderer for use with an accordion layout.\n   */\n  export interface IRenderer extends SplitLayout.IRenderer {\n    /**\n     * Common class name for all accordion titles.\n     */\n    readonly titleClassName: string;\n\n    /**\n     * Render the element for a section title.\n     *\n     * @param data - The data to use for rendering the section title.\n     *\n     * @returns A element representing the section title.\n     */\n    createSectionTitle(title: Title<Widget>): HTMLElement;\n  }\n}\n\nnamespace Private {\n  /**\n   * Create the title HTML element.\n   *\n   * @param renderer Accordion renderer\n   * @param data Widget title\n   * @returns Title HTML element\n   */\n  export function createTitle(\n    renderer: AccordionLayout.IRenderer,\n    data: Title<Widget>,\n    expanded: boolean = true\n  ): HTMLElement {\n    const title = renderer.createSectionTitle(data);\n    title.style.position = 'absolute';\n    title.style.contain = 'strict';\n    title.setAttribute('aria-label', `${data.label} Section`);\n    title.setAttribute('aria-expanded', expanded ? 'true' : 'false');\n    title.setAttribute('aria-controls', data.owner.id);\n    if (expanded) {\n      title.classList.add('lm-mod-expanded');\n    }\n    return title;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { PanelLayout } from './panellayout';\n\nimport { Widget } from './widget';\n\n/**\n * A simple and convenient panel widget class.\n *\n * #### Notes\n * This class is suitable as a base class for implementing a variety of\n * convenience panel widgets, but can also be used directly with CSS to\n * arrange a collection of widgets.\n *\n * This class provides a convenience wrapper around a {@link PanelLayout}.\n */\nexport class Panel extends Widget {\n  /**\n   * Construct a new panel.\n   *\n   * @param options - The options for initializing the panel.\n   */\n  constructor(options: Panel.IOptions = {}) {\n    super();\n    this.addClass('lm-Panel');\n    this.layout = Private.createLayout(options);\n  }\n\n  /**\n   * A read-only array of the widgets in the panel.\n   */\n  get widgets(): ReadonlyArray<Widget> {\n    return (this.layout as PanelLayout).widgets;\n  }\n\n  /**\n   * Add a widget to the end of the panel.\n   *\n   * @param widget - The widget to add to the panel.\n   *\n   * #### Notes\n   * If the widget is already contained in the panel, it will be moved.\n   */\n  addWidget(widget: Widget): void {\n    (this.layout as PanelLayout).addWidget(widget);\n  }\n\n  /**\n   * Insert a widget at the specified index.\n   *\n   * @param index - The index at which to insert the widget.\n   *\n   * @param widget - The widget to insert into to the panel.\n   *\n   * #### Notes\n   * If the widget is already contained in the panel, it will be moved.\n   */\n  insertWidget(index: number, widget: Widget): void {\n    (this.layout as PanelLayout).insertWidget(index, widget);\n  }\n}\n\n/**\n * The namespace for the `Panel` class statics.\n */\nexport namespace Panel {\n  /**\n   * An options object for creating a panel.\n   */\n  export interface IOptions {\n    /**\n     * The panel layout to use for the panel.\n     *\n     * The default is a new `PanelLayout`.\n     */\n    layout?: PanelLayout;\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Create a panel layout for the given panel options.\n   */\n  export function createLayout(options: Panel.IOptions): PanelLayout {\n    return options.layout || new PanelLayout();\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { ArrayExt } from '@lumino/algorithm';\n\nimport { IDisposable } from '@lumino/disposable';\n\nimport { Drag } from '@lumino/dragdrop';\n\nimport { Message } from '@lumino/messaging';\n\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { Panel } from './panel';\n\nimport { SplitLayout } from './splitlayout';\n\nimport { Widget } from './widget';\n\n/**\n * A panel which arranges its widgets into resizable sections.\n *\n * #### Notes\n * This class provides a convenience wrapper around a {@link SplitLayout}.\n */\nexport class SplitPanel extends Panel {\n  /**\n   * Construct a new split panel.\n   *\n   * @param options - The options for initializing the split panel.\n   */\n  constructor(options: SplitPanel.IOptions = {}) {\n    super({ layout: Private.createLayout(options) });\n    this.addClass('lm-SplitPanel');\n  }\n\n  /**\n   * Dispose of the resources held by the panel.\n   */\n  dispose(): void {\n    this._releaseMouse();\n    super.dispose();\n  }\n\n  /**\n   * Get the layout orientation for the split panel.\n   */\n  get orientation(): SplitPanel.Orientation {\n    return (this.layout as SplitLayout).orientation;\n  }\n\n  /**\n   * Set the layout orientation for the split panel.\n   */\n  set orientation(value: SplitPanel.Orientation) {\n    (this.layout as SplitLayout).orientation = value;\n  }\n\n  /**\n   * Get the content alignment for the split panel.\n   *\n   * #### Notes\n   * This is the alignment of the widgets in the layout direction.\n   *\n   * The alignment has no effect if the widgets can expand to fill the\n   * entire split panel.\n   */\n  get alignment(): SplitPanel.Alignment {\n    return (this.layout as SplitLayout).alignment;\n  }\n\n  /**\n   * Set the content alignment for the split panel.\n   *\n   * #### Notes\n   * This is the alignment of the widgets in the layout direction.\n   *\n   * The alignment has no effect if the widgets can expand to fill the\n   * entire split panel.\n   */\n  set alignment(value: SplitPanel.Alignment) {\n    (this.layout as SplitLayout).alignment = value;\n  }\n\n  /**\n   * Get the inter-element spacing for the split panel.\n   */\n  get spacing(): number {\n    return (this.layout as SplitLayout).spacing;\n  }\n\n  /**\n   * Set the inter-element spacing for the split panel.\n   */\n  set spacing(value: number) {\n    (this.layout as SplitLayout).spacing = value;\n  }\n\n  /**\n   * The renderer used by the split panel.\n   */\n  get renderer(): SplitPanel.IRenderer {\n    return (this.layout as SplitLayout).renderer;\n  }\n\n  /**\n   * A signal emitted when a split handle has moved.\n   */\n  get handleMoved(): ISignal<this, void> {\n    return this._handleMoved;\n  }\n\n  /**\n   * A read-only array of the split handles in the panel.\n   */\n  get handles(): ReadonlyArray<HTMLDivElement> {\n    return (this.layout as SplitLayout).handles;\n  }\n\n  /**\n   * Get the relative sizes of the widgets in the panel.\n   *\n   * @returns A new array of the relative sizes of the widgets.\n   *\n   * #### Notes\n   * The returned sizes reflect the sizes of the widgets normalized\n   * relative to their siblings.\n   *\n   * This method **does not** measure the DOM nodes.\n   */\n  relativeSizes(): number[] {\n    return (this.layout as SplitLayout).relativeSizes();\n  }\n\n  /**\n   * Set the relative sizes for the widgets in the panel.\n   *\n   * @param sizes - The relative sizes for the widgets in the panel.\n   * @param update - Update the layout after setting relative sizes.\n   * Default is True.\n   *\n   * #### Notes\n   * Extra values are ignored, too few will yield an undefined layout.\n   *\n   * The actual geometry of the DOM nodes is updated asynchronously.\n   */\n  setRelativeSizes(sizes: number[], update = true): void {\n    (this.layout as SplitLayout).setRelativeSizes(sizes, update);\n  }\n\n  /**\n   * Handle the DOM events for the split panel.\n   *\n   * @param event - The DOM event sent to the panel.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the panel's DOM node. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'pointerdown':\n        this._evtPointerDown(event as PointerEvent);\n        break;\n      case 'pointermove':\n        this._evtPointerMove(event as PointerEvent);\n        break;\n      case 'pointerup':\n        this._evtPointerUp(event as PointerEvent);\n        break;\n      case 'keydown':\n        this._evtKeyDown(event as KeyboardEvent);\n        break;\n      case 'contextmenu':\n        event.preventDefault();\n        event.stopPropagation();\n        break;\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    this.node.addEventListener('pointerdown', this);\n  }\n\n  /**\n   * A message handler invoked on an `'after-detach'` message.\n   */\n  protected onAfterDetach(msg: Message): void {\n    this.node.removeEventListener('pointerdown', this);\n    this._releaseMouse();\n  }\n\n  /**\n   * A message handler invoked on a `'child-added'` message.\n   */\n  protected onChildAdded(msg: Widget.ChildMessage): void {\n    msg.child.addClass('lm-SplitPanel-child');\n    this._releaseMouse();\n  }\n\n  /**\n   * A message handler invoked on a `'child-removed'` message.\n   */\n  protected onChildRemoved(msg: Widget.ChildMessage): void {\n    msg.child.removeClass('lm-SplitPanel-child');\n    this._releaseMouse();\n  }\n\n  /**\n   * Handle the `'keydown'` event for the split panel.\n   */\n  private _evtKeyDown(event: KeyboardEvent): void {\n    // Stop input events during drag.\n    if (this._pressData) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    // Release the mouse if `Escape` is pressed.\n    if (event.keyCode === 27) {\n      this._releaseMouse();\n    }\n  }\n\n  /**\n   * Handle the `'pointerdown'` event for the split panel.\n   */\n  private _evtPointerDown(event: PointerEvent): void {\n    // Do nothing if the primary button is not pressed.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Find the handle which contains the target, if any.\n    let layout = this.layout as SplitLayout;\n    let index = ArrayExt.findFirstIndex(layout.handles, handle => {\n      return handle.contains(event.target as HTMLElement);\n    });\n\n    // Bail early if the mouse press was not on a handle.\n    if (index === -1) {\n      return;\n    }\n\n    // Stop the event when a split handle is pressed.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Add the extra document listeners.\n    document.addEventListener('pointerup', this, true);\n    document.addEventListener('pointermove', this, true);\n    document.addEventListener('keydown', this, true);\n    document.addEventListener('contextmenu', this, true);\n\n    // Compute the offset delta for the handle press.\n    let delta: number;\n    let handle = layout.handles[index];\n    let rect = handle.getBoundingClientRect();\n    if (layout.orientation === 'horizontal') {\n      delta = event.clientX - rect.left;\n    } else {\n      delta = event.clientY - rect.top;\n    }\n\n    // Override the cursor and store the press data.\n    let style = window.getComputedStyle(handle);\n    let override = Drag.overrideCursor(style.cursor!);\n    this._pressData = { index, delta, override };\n  }\n\n  /**\n   * Handle the `'pointermove'` event for the split panel.\n   */\n  private _evtPointerMove(event: PointerEvent): void {\n    // Stop the event when dragging a split handle.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Compute the desired offset position for the handle.\n    let pos: number;\n    let layout = this.layout as SplitLayout;\n    let rect = this.node.getBoundingClientRect();\n    if (layout.orientation === 'horizontal') {\n      pos = event.clientX - rect.left - this._pressData!.delta;\n    } else {\n      pos = event.clientY - rect.top - this._pressData!.delta;\n    }\n\n    // Move the handle as close to the desired position as possible.\n    layout.moveHandle(this._pressData!.index, pos);\n  }\n\n  /**\n   * Handle the `'pointerup'` event for the split panel.\n   */\n  private _evtPointerUp(event: PointerEvent): void {\n    // Do nothing if the primary button is not released.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Stop the event when releasing a handle.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Finalize the mouse release.\n    this._releaseMouse();\n  }\n\n  /**\n   * Release the mouse grab for the split panel.\n   */\n  private _releaseMouse(): void {\n    // Bail early if no drag is in progress.\n    if (!this._pressData) {\n      return;\n    }\n\n    // Clear the override cursor.\n    this._pressData.override.dispose();\n    this._pressData = null;\n\n    // Emit the handle moved signal.\n    this._handleMoved.emit();\n\n    // Remove the extra document listeners.\n    document.removeEventListener('keydown', this, true);\n    document.removeEventListener('pointerup', this, true);\n    document.removeEventListener('pointermove', this, true);\n    document.removeEventListener('contextmenu', this, true);\n  }\n\n  private _handleMoved = new Signal<any, void>(this);\n  private _pressData: Private.IPressData | null = null;\n}\n\n/**\n * The namespace for the `SplitPanel` class statics.\n */\nexport namespace SplitPanel {\n  /**\n   * A type alias for a split panel orientation.\n   */\n  export type Orientation = SplitLayout.Orientation;\n\n  /**\n   * A type alias for a split panel alignment.\n   */\n  export type Alignment = SplitLayout.Alignment;\n\n  /**\n   * A type alias for a split panel renderer.\n   */\n  export type IRenderer = SplitLayout.IRenderer;\n\n  /**\n   * An options object for initializing a split panel.\n   */\n  export interface IOptions {\n    /**\n     * The renderer to use for the split panel.\n     *\n     * The default is a shared renderer instance.\n     */\n    renderer?: IRenderer;\n\n    /**\n     * The layout orientation of the panel.\n     *\n     * The default is `'horizontal'`.\n     */\n    orientation?: Orientation;\n\n    /**\n     * The content alignment of the panel.\n     *\n     * The default is `'start'`.\n     */\n    alignment?: Alignment;\n\n    /**\n     * The spacing between items in the panel.\n     *\n     * The default is `4`.\n     */\n    spacing?: number;\n\n    /**\n     * The split layout to use for the split panel.\n     *\n     * If this is provided, the other options are ignored.\n     *\n     * The default is a new `SplitLayout`.\n     */\n    layout?: SplitLayout;\n  }\n\n  /**\n   * The default implementation of `IRenderer`.\n   */\n  export class Renderer implements IRenderer {\n    /**\n     * Create a new handle for use with a split panel.\n     *\n     * @returns A new handle element for a split panel.\n     */\n    createHandle(): HTMLDivElement {\n      let handle = document.createElement('div');\n      handle.className = 'lm-SplitPanel-handle';\n      return handle;\n    }\n  }\n\n  /**\n   * The default `Renderer` instance.\n   */\n  export const defaultRenderer = new Renderer();\n\n  /**\n   * Get the split panel stretch factor for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The split panel stretch factor for the widget.\n   */\n  export function getStretch(widget: Widget): number {\n    return SplitLayout.getStretch(widget);\n  }\n\n  /**\n   * Set the split panel stretch factor for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the stretch factor.\n   */\n  export function setStretch(widget: Widget, value: number): void {\n    SplitLayout.setStretch(widget, value);\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * An object which holds mouse press data.\n   */\n  export interface IPressData {\n    /**\n     * The index of the pressed handle.\n     */\n    index: number;\n\n    /**\n     * The offset of the press in handle coordinates.\n     */\n    delta: number;\n\n    /**\n     * The disposable which will clear the override cursor.\n     */\n    override: IDisposable;\n  }\n\n  /**\n   * Create a split layout for the given panel options.\n   */\n  export function createLayout(options: SplitPanel.IOptions): SplitLayout {\n    return (\n      options.layout ||\n      new SplitLayout({\n        renderer: options.renderer || SplitPanel.defaultRenderer,\n        orientation: options.orientation,\n        alignment: options.alignment,\n        spacing: options.spacing\n      })\n    );\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { ArrayExt } from '@lumino/algorithm';\nimport { Message } from '@lumino/messaging';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { AccordionLayout } from './accordionlayout';\nimport { SplitLayout } from './splitlayout';\nimport { SplitPanel } from './splitpanel';\nimport { Title } from './title';\nimport { Widget } from './widget';\n\n/**\n * A panel which arranges its widgets into resizable sections separated by a title widget.\n *\n * #### Notes\n * This class provides a convenience wrapper around {@link AccordionLayout}.\n */\nexport class AccordionPanel extends SplitPanel {\n  /**\n   * Construct a new accordion panel.\n   *\n   * @param options - The options for initializing the accordion panel.\n   */\n  constructor(options: AccordionPanel.IOptions = {}) {\n    super({ ...options, layout: Private.createLayout(options) });\n    this.addClass('lm-AccordionPanel');\n  }\n\n  /**\n   * The renderer used by the accordion panel.\n   */\n  get renderer(): AccordionPanel.IRenderer {\n    return (this.layout as AccordionLayout).renderer;\n  }\n\n  /**\n   * The section title space.\n   *\n   * This is the height if the panel is vertical and the width if it is\n   * horizontal.\n   */\n  get titleSpace(): number {\n    return (this.layout as AccordionLayout).titleSpace;\n  }\n  set titleSpace(value: number) {\n    (this.layout as AccordionLayout).titleSpace = value;\n  }\n\n  /**\n   * A read-only array of the section titles in the panel.\n   */\n  get titles(): ReadonlyArray<HTMLElement> {\n    return (this.layout as AccordionLayout).titles;\n  }\n\n  /**\n   * A signal emitted when a widget of the AccordionPanel is collapsed or expanded.\n   */\n  get expansionToggled(): ISignal<this, number> {\n    return this._expansionToggled;\n  }\n\n  /**\n   * Add a widget to the end of the panel.\n   *\n   * @param widget - The widget to add to the panel.\n   *\n   * #### Notes\n   * If the widget is already contained in the panel, it will be moved.\n   */\n  addWidget(widget: Widget): void {\n    super.addWidget(widget);\n    widget.title.changed.connect(this._onTitleChanged, this);\n  }\n\n  /**\n   * Collapse the widget at position `index`.\n   *\n   * #### Notes\n   * If no widget is found for `index`, this will bail.\n   *\n   * @param index Widget index\n   */\n  collapse(index: number): void {\n    const widget = (this.layout as AccordionLayout).widgets[index];\n\n    if (widget && !widget.isHidden) {\n      this._toggleExpansion(index);\n    }\n  }\n\n  /**\n   * Expand the widget at position `index`.\n   *\n   * #### Notes\n   * If no widget is found for `index`, this will bail.\n   *\n   * @param index Widget index\n   */\n  expand(index: number): void {\n    const widget = (this.layout as AccordionLayout).widgets[index];\n\n    if (widget && widget.isHidden) {\n      this._toggleExpansion(index);\n    }\n  }\n\n  /**\n   * Insert a widget at the specified index.\n   *\n   * @param index - The index at which to insert the widget.\n   *\n   * @param widget - The widget to insert into to the panel.\n   *\n   * #### Notes\n   * If the widget is already contained in the panel, it will be moved.\n   */\n  insertWidget(index: number, widget: Widget): void {\n    super.insertWidget(index, widget);\n    widget.title.changed.connect(this._onTitleChanged, this);\n  }\n\n  /**\n   * Handle the DOM events for the accordion panel.\n   *\n   * @param event - The DOM event sent to the panel.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the panel's DOM node. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    super.handleEvent(event);\n    switch (event.type) {\n      case 'click':\n        this._evtClick(event as MouseEvent);\n        break;\n      case 'keydown':\n        this._eventKeyDown(event as KeyboardEvent);\n        break;\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    this.node.addEventListener('click', this);\n    this.node.addEventListener('keydown', this);\n    super.onBeforeAttach(msg);\n  }\n\n  /**\n   * A message handler invoked on an `'after-detach'` message.\n   */\n  protected onAfterDetach(msg: Message): void {\n    super.onAfterDetach(msg);\n    this.node.removeEventListener('click', this);\n    this.node.removeEventListener('keydown', this);\n  }\n\n  /**\n   * Handle the `changed` signal of a title object.\n   */\n  private _onTitleChanged(sender: Title<Widget>): void {\n    const index = ArrayExt.findFirstIndex(this.widgets, widget => {\n      return widget.contains(sender.owner);\n    });\n\n    if (index >= 0) {\n      (this.layout as AccordionLayout).updateTitle(index, sender.owner);\n      this.update();\n    }\n  }\n\n  /**\n   * Compute the size of widgets in this panel on the title click event.\n   * On closing, the size of the widget is cached and we will try to expand\n   * the last opened widget.\n   * On opening, we will use the cached size if it is available to restore the\n   * widget.\n   * In both cases, if we can not compute the size of widgets, we will let\n   * `SplitLayout` decide.\n   *\n   * @param index - The index of widget to be opened of closed\n   *\n   * @returns Relative size of widgets in this panel, if this size can\n   * not be computed, return `undefined`\n   */\n  private _computeWidgetSize(index: number): number[] | undefined {\n    const layout = this.layout as AccordionLayout;\n\n    const widget = layout.widgets[index];\n    if (!widget) {\n      return undefined;\n    }\n    const isHidden = widget.isHidden;\n    const widgetSizes = layout.absoluteSizes();\n    const delta = (isHidden ? -1 : 1) * this.spacing;\n    const totalSize = widgetSizes.reduce(\n      (prev: number, curr: number) => prev + curr\n    );\n\n    let newSize = [...widgetSizes];\n\n    if (!isHidden) {\n      // Hide the widget\n      const currentSize = widgetSizes[index];\n\n      this._widgetSizesCache.set(widget, currentSize);\n      newSize[index] = 0;\n\n      const widgetToCollapse = newSize.map(sz => sz > 0).lastIndexOf(true);\n      if (widgetToCollapse === -1) {\n        // All widget are closed, let the `SplitLayout` compute widget sizes.\n        return undefined;\n      }\n\n      newSize[widgetToCollapse] =\n        widgetSizes[widgetToCollapse] + currentSize + delta;\n    } else {\n      // Show the widget\n      const previousSize = this._widgetSizesCache.get(widget);\n      if (!previousSize) {\n        // Previous size is unavailable, let the `SplitLayout` compute widget sizes.\n        return undefined;\n      }\n      newSize[index] += previousSize;\n\n      const widgetToCollapse = newSize\n        .map(sz => sz - previousSize > 0)\n        .lastIndexOf(true);\n      if (widgetToCollapse === -1) {\n        // Can not reduce the size of one widget, reduce all opened widgets\n        // proportionally with its size.\n        newSize.forEach((_, idx) => {\n          if (idx !== index) {\n            newSize[idx] -=\n              (widgetSizes[idx] / totalSize) * (previousSize - delta);\n          }\n        });\n      } else {\n        newSize[widgetToCollapse] -= previousSize - delta;\n      }\n    }\n    return newSize.map(sz => sz / (totalSize + delta));\n  }\n  /**\n   * Handle the `'click'` event for the accordion panel\n   */\n  private _evtClick(event: MouseEvent): void {\n    const target = event.target as HTMLElement | null;\n\n    if (target) {\n      const index = ArrayExt.findFirstIndex(this.titles, title => {\n        return title.contains(target);\n      });\n\n      if (index >= 0) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._toggleExpansion(index);\n      }\n    }\n  }\n\n  /**\n   * Handle the `'keydown'` event for the accordion panel.\n   */\n  private _eventKeyDown(event: KeyboardEvent): void {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const target = event.target as HTMLElement | null;\n    let handled = false;\n    if (target) {\n      const index = ArrayExt.findFirstIndex(this.titles, title => {\n        return title.contains(target);\n      });\n\n      if (index >= 0) {\n        const keyCode = event.keyCode.toString();\n\n        // If Space or Enter is pressed on title, emulate click event\n        if (event.key.match(/Space|Enter/) || keyCode.match(/13|32/)) {\n          target.click();\n          handled = true;\n        } else if (\n          this.orientation === 'horizontal'\n            ? event.key.match(/ArrowLeft|ArrowRight/) || keyCode.match(/37|39/)\n            : event.key.match(/ArrowUp|ArrowDown/) || keyCode.match(/38|40/)\n        ) {\n          // If Up or Down (for vertical) / Left or Right (for horizontal) is pressed on title, loop on titles\n          const direction =\n            event.key.match(/ArrowLeft|ArrowUp/) || keyCode.match(/37|38/)\n              ? -1\n              : 1;\n          const length = this.titles.length;\n          const newIndex = (index + length + direction) % length;\n\n          this.titles[newIndex].focus();\n          handled = true;\n        } else if (event.key === 'End' || keyCode === '35') {\n          // If End is pressed on title, focus on the last title\n          this.titles[this.titles.length - 1].focus();\n          handled = true;\n        } else if (event.key === 'Home' || keyCode === '36') {\n          // If Home is pressed on title, focus on the first title\n          this.titles[0].focus();\n          handled = true;\n        }\n      }\n\n      if (handled) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  private _toggleExpansion(index: number) {\n    const title = this.titles[index];\n    const widget = (this.layout as AccordionLayout).widgets[index];\n\n    const newSize = this._computeWidgetSize(index);\n    if (newSize) {\n      this.setRelativeSizes(newSize, false);\n    }\n\n    if (widget.isHidden) {\n      title.classList.add('lm-mod-expanded');\n      title.setAttribute('aria-expanded', 'true');\n      widget.show();\n    } else {\n      title.classList.remove('lm-mod-expanded');\n      title.setAttribute('aria-expanded', 'false');\n      widget.hide();\n    }\n\n    // Emit the expansion state signal.\n    this._expansionToggled.emit(index);\n  }\n\n  private _widgetSizesCache: WeakMap<Widget, number> = new WeakMap();\n  private _expansionToggled = new Signal<this, number>(this);\n}\n\n/**\n * The namespace for the `AccordionPanel` class statics.\n */\nexport namespace AccordionPanel {\n  /**\n   * A type alias for a accordion panel orientation.\n   */\n  export type Orientation = SplitLayout.Orientation;\n\n  /**\n   * A type alias for a accordion panel alignment.\n   */\n  export type Alignment = SplitLayout.Alignment;\n\n  /**\n   * A type alias for a accordion panel renderer.\n   */\n  export type IRenderer = AccordionLayout.IRenderer;\n\n  /**\n   * An options object for initializing a accordion panel.\n   */\n  export interface IOptions extends Partial<AccordionLayout.IOptions> {\n    /**\n     * The accordion layout to use for the accordion panel.\n     *\n     * If this is provided, the other options are ignored.\n     *\n     * The default is a new `AccordionLayout`.\n     */\n    layout?: AccordionLayout;\n  }\n\n  /**\n   * The default implementation of `IRenderer`.\n   */\n  export class Renderer extends SplitPanel.Renderer implements IRenderer {\n    constructor() {\n      super();\n      this._uuid = ++Renderer._nInstance;\n    }\n    /**\n     * A selector which matches any title node in the accordion.\n     */\n    readonly titleClassName = 'lm-AccordionPanel-title';\n\n    /**\n     * Render the collapse indicator for a section title.\n     *\n     * @param data - The data to use for rendering the section title.\n     *\n     * @returns A element representing the collapse indicator.\n     */\n    createCollapseIcon(data: Title<Widget>): HTMLElement {\n      return document.createElement('span');\n    }\n\n    /**\n     * Render the element for a section title.\n     *\n     * @param data - The data to use for rendering the section title.\n     *\n     * @returns A element representing the section title.\n     */\n    createSectionTitle(data: Title<Widget>): HTMLElement {\n      const handle = document.createElement('h3');\n      handle.setAttribute('tabindex', '0');\n      handle.id = this.createTitleKey(data);\n      handle.className = this.titleClassName;\n      for (const aData in data.dataset) {\n        handle.dataset[aData] = data.dataset[aData];\n      }\n\n      const collapser = handle.appendChild(this.createCollapseIcon(data));\n      collapser.className = 'lm-AccordionPanel-titleCollapser';\n\n      const label = handle.appendChild(document.createElement('span'));\n      label.className = 'lm-AccordionPanel-titleLabel';\n      label.textContent = data.label;\n      label.title = data.caption || data.label;\n\n      return handle;\n    }\n\n    /**\n     * Create a unique render key for the title.\n     *\n     * @param data - The data to use for the title.\n     *\n     * @returns The unique render key for the title.\n     *\n     * #### Notes\n     * This method caches the key against the section title the first time\n     * the key is generated.\n     */\n    createTitleKey(data: Title<Widget>): string {\n      let key = this._titleKeys.get(data);\n      if (key === undefined) {\n        key = `title-key-${this._uuid}-${this._titleID++}`;\n        this._titleKeys.set(data, key);\n      }\n      return key;\n    }\n\n    private static _nInstance = 0;\n    private readonly _uuid: number;\n    private _titleID = 0;\n    private _titleKeys = new WeakMap<Title<Widget>, string>();\n  }\n\n  /**\n   * The default `Renderer` instance.\n   */\n  export const defaultRenderer = new Renderer();\n}\n\nnamespace Private {\n  /**\n   * Create an accordion layout for the given panel options.\n   *\n   * @param options Panel options\n   * @returns Panel layout\n   */\n  export function createLayout(\n    options: AccordionPanel.IOptions\n  ): AccordionLayout {\n    return (\n      options.layout ||\n      new AccordionLayout({\n        renderer: options.renderer || AccordionPanel.defaultRenderer,\n        orientation: options.orientation,\n        alignment: options.alignment,\n        spacing: options.spacing,\n        titleSpace: options.titleSpace\n      })\n    );\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { ArrayExt } from '@lumino/algorithm';\n\nimport { ElementExt } from '@lumino/domutils';\n\nimport { Message, MessageLoop } from '@lumino/messaging';\n\nimport { AttachedProperty } from '@lumino/properties';\n\nimport { BoxEngine, BoxSizer } from './boxengine';\n\nimport { LayoutItem } from './layout';\n\nimport { PanelLayout } from './panellayout';\n\nimport Utils from './utils';\n\nimport { Widget } from './widget';\n\n/**\n * A layout which arranges its widgets in a single row or column.\n */\nexport class BoxLayout extends PanelLayout {\n  /**\n   * Construct a new box layout.\n   *\n   * @param options - The options for initializing the layout.\n   */\n  constructor(options: BoxLayout.IOptions = {}) {\n    super();\n    if (options.direction !== undefined) {\n      this._direction = options.direction;\n    }\n    if (options.alignment !== undefined) {\n      this._alignment = options.alignment;\n    }\n    if (options.spacing !== undefined) {\n      this._spacing = Utils.clampDimension(options.spacing);\n    }\n  }\n\n  /**\n   * Dispose of the resources held by the layout.\n   */\n  dispose(): void {\n    // Dispose of the layout items.\n    for (const item of this._items) {\n      item.dispose();\n    }\n\n    // Clear the layout state.\n    this._box = null;\n    this._items.length = 0;\n    this._sizers.length = 0;\n\n    // Dispose of the rest of the layout.\n    super.dispose();\n  }\n\n  /**\n   * Get the layout direction for the box layout.\n   */\n  get direction(): BoxLayout.Direction {\n    return this._direction;\n  }\n\n  /**\n   * Set the layout direction for the box layout.\n   */\n  set direction(value: BoxLayout.Direction) {\n    if (this._direction === value) {\n      return;\n    }\n    this._direction = value;\n    if (!this.parent) {\n      return;\n    }\n    this.parent.dataset['direction'] = value;\n    this.parent.fit();\n  }\n\n  /**\n   * Get the content alignment for the box layout.\n   *\n   * #### Notes\n   * This is the alignment of the widgets in the layout direction.\n   *\n   * The alignment has no effect if the widgets can expand to fill the\n   * entire box layout.\n   */\n  get alignment(): BoxLayout.Alignment {\n    return this._alignment;\n  }\n\n  /**\n   * Set the content alignment for the box layout.\n   *\n   * #### Notes\n   * This is the alignment of the widgets in the layout direction.\n   *\n   * The alignment has no effect if the widgets can expand to fill the\n   * entire box layout.\n   */\n  set alignment(value: BoxLayout.Alignment) {\n    if (this._alignment === value) {\n      return;\n    }\n    this._alignment = value;\n    if (!this.parent) {\n      return;\n    }\n    this.parent.dataset['alignment'] = value;\n    this.parent.update();\n  }\n\n  /**\n   * Get the inter-element spacing for the box layout.\n   */\n  get spacing(): number {\n    return this._spacing;\n  }\n\n  /**\n   * Set the inter-element spacing for the box layout.\n   */\n  set spacing(value: number) {\n    value = Utils.clampDimension(value);\n    if (this._spacing === value) {\n      return;\n    }\n    this._spacing = value;\n    if (!this.parent) {\n      return;\n    }\n    this.parent.fit();\n  }\n\n  /**\n   * Perform layout initialization which requires the parent widget.\n   */\n  protected init(): void {\n    this.parent!.dataset['direction'] = this.direction;\n    this.parent!.dataset['alignment'] = this.alignment;\n    super.init();\n  }\n\n  /**\n   * Attach a widget to the parent's DOM node.\n   *\n   * @param index - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to attach to the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected attachWidget(index: number, widget: Widget): void {\n    // Create and add a new layout item for the widget.\n    ArrayExt.insert(this._items, index, new LayoutItem(widget));\n\n    // Create and add a new sizer for the widget.\n    ArrayExt.insert(this._sizers, index, new BoxSizer());\n\n    // Send a `'before-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\n    }\n\n    // Add the widget's node to the parent.\n    this.parent!.node.appendChild(widget.node);\n\n    // Send an `'after-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\n    }\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * Move a widget in the parent's DOM node.\n   *\n   * @param fromIndex - The previous index of the widget in the layout.\n   *\n   * @param toIndex - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to move in the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected moveWidget(\n    fromIndex: number,\n    toIndex: number,\n    widget: Widget\n  ): void {\n    // Move the layout item for the widget.\n    ArrayExt.move(this._items, fromIndex, toIndex);\n\n    // Move the sizer for the widget.\n    ArrayExt.move(this._sizers, fromIndex, toIndex);\n\n    // Post an update request for the parent widget.\n    this.parent!.update();\n  }\n\n  /**\n   * Detach a widget from the parent's DOM node.\n   *\n   * @param index - The previous index of the widget in the layout.\n   *\n   * @param widget - The widget to detach from the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected detachWidget(index: number, widget: Widget): void {\n    // Remove the layout item for the widget.\n    let item = ArrayExt.removeAt(this._items, index);\n\n    // Remove the sizer for the widget.\n    ArrayExt.removeAt(this._sizers, index);\n\n    // Send a `'before-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\n    }\n\n    // Remove the widget's node from the parent.\n    this.parent!.node.removeChild(widget.node);\n\n    // Send an `'after-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\n    }\n\n    // Dispose of the layout item.\n    item!.dispose();\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'before-show'` message.\n   */\n  protected onBeforeShow(msg: Message): void {\n    super.onBeforeShow(msg);\n    this.parent!.update();\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    super.onBeforeAttach(msg);\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-shown'` message.\n   */\n  protected onChildShown(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-hidden'` message.\n   */\n  protected onChildHidden(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'resize'` message.\n   */\n  protected onResize(msg: Widget.ResizeMessage): void {\n    if (this.parent!.isVisible) {\n      this._update(msg.width, msg.height);\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    if (this.parent!.isVisible) {\n      this._update(-1, -1);\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'fit-request'` message.\n   */\n  protected onFitRequest(msg: Message): void {\n    if (this.parent!.isAttached) {\n      this._fit();\n    }\n  }\n\n  /**\n   * Fit the layout to the total size required by the widgets.\n   */\n  private _fit(): void {\n    // Compute the visible item count.\n    let nVisible = 0;\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      nVisible += +!this._items[i].isHidden;\n    }\n\n    // Update the fixed space for the visible items.\n    this._fixed = this._spacing * Math.max(0, nVisible - 1);\n\n    // Setup the computed minimum size.\n    let horz = Private.isHorizontal(this._direction);\n    let minW = horz ? this._fixed : 0;\n    let minH = horz ? 0 : this._fixed;\n\n    // Update the sizers and computed minimum size.\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      // Fetch the item and corresponding box sizer.\n      let item = this._items[i];\n      let sizer = this._sizers[i];\n\n      // If the item is hidden, it should consume zero size.\n      if (item.isHidden) {\n        sizer.minSize = 0;\n        sizer.maxSize = 0;\n        continue;\n      }\n\n      // Update the size limits for the item.\n      item.fit();\n\n      // Update the size basis and stretch factor.\n      sizer.sizeHint = BoxLayout.getSizeBasis(item.widget);\n      sizer.stretch = BoxLayout.getStretch(item.widget);\n\n      // Update the sizer limits and computed min size.\n      if (horz) {\n        sizer.minSize = item.minWidth;\n        sizer.maxSize = item.maxWidth;\n        minW += item.minWidth;\n        minH = Math.max(minH, item.minHeight);\n      } else {\n        sizer.minSize = item.minHeight;\n        sizer.maxSize = item.maxHeight;\n        minH += item.minHeight;\n        minW = Math.max(minW, item.minWidth);\n      }\n    }\n\n    // Update the box sizing and add it to the computed min size.\n    let box = (this._box = ElementExt.boxSizing(this.parent!.node));\n    minW += box.horizontalSum;\n    minH += box.verticalSum;\n\n    // Update the parent's min size constraints.\n    let style = this.parent!.node.style;\n    style.minWidth = `${minW}px`;\n    style.minHeight = `${minH}px`;\n\n    // Set the dirty flag to ensure only a single update occurs.\n    this._dirty = true;\n\n    // Notify the ancestor that it should fit immediately. This may\n    // cause a resize of the parent, fulfilling the required update.\n    if (this.parent!.parent) {\n      MessageLoop.sendMessage(this.parent!.parent!, Widget.Msg.FitRequest);\n    }\n\n    // If the dirty flag is still set, the parent was not resized.\n    // Trigger the required update on the parent widget immediately.\n    if (this._dirty) {\n      MessageLoop.sendMessage(this.parent!, Widget.Msg.UpdateRequest);\n    }\n  }\n\n  /**\n   * Update the layout position and size of the widgets.\n   *\n   * The parent offset dimensions should be `-1` if unknown.\n   */\n  private _update(offsetWidth: number, offsetHeight: number): void {\n    // Clear the dirty flag to indicate the update occurred.\n    this._dirty = false;\n\n    // Compute the visible item count.\n    let nVisible = 0;\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      nVisible += +!this._items[i].isHidden;\n    }\n\n    // Bail early if there are no visible items to layout.\n    if (nVisible === 0) {\n      return;\n    }\n\n    // Measure the parent if the offset dimensions are unknown.\n    if (offsetWidth < 0) {\n      offsetWidth = this.parent!.node.offsetWidth;\n    }\n    if (offsetHeight < 0) {\n      offsetHeight = this.parent!.node.offsetHeight;\n    }\n\n    // Ensure the parent box sizing data is computed.\n    if (!this._box) {\n      this._box = ElementExt.boxSizing(this.parent!.node);\n    }\n\n    // Compute the layout area adjusted for border and padding.\n    let top = this._box.paddingTop;\n    let left = this._box.paddingLeft;\n    let width = offsetWidth - this._box.horizontalSum;\n    let height = offsetHeight - this._box.verticalSum;\n\n    // Distribute the layout space and adjust the start position.\n    let delta: number;\n    switch (this._direction) {\n      case 'left-to-right':\n        delta = BoxEngine.calc(this._sizers, Math.max(0, width - this._fixed));\n        break;\n      case 'top-to-bottom':\n        delta = BoxEngine.calc(this._sizers, Math.max(0, height - this._fixed));\n        break;\n      case 'right-to-left':\n        delta = BoxEngine.calc(this._sizers, Math.max(0, width - this._fixed));\n        left += width;\n        break;\n      case 'bottom-to-top':\n        delta = BoxEngine.calc(this._sizers, Math.max(0, height - this._fixed));\n        top += height;\n        break;\n      default:\n        throw 'unreachable';\n    }\n\n    // Setup the variables for justification and alignment offset.\n    let extra = 0;\n    let offset = 0;\n\n    // Account for alignment if there is extra layout space.\n    if (delta > 0) {\n      switch (this._alignment) {\n        case 'start':\n          break;\n        case 'center':\n          extra = 0;\n          offset = delta / 2;\n          break;\n        case 'end':\n          extra = 0;\n          offset = delta;\n          break;\n        case 'justify':\n          extra = delta / nVisible;\n          offset = 0;\n          break;\n        default:\n          throw 'unreachable';\n      }\n    }\n\n    // Layout the items using the computed box sizes.\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      // Fetch the item.\n      let item = this._items[i];\n\n      // Ignore hidden items.\n      if (item.isHidden) {\n        continue;\n      }\n\n      // Fetch the computed size for the widget.\n      let size = this._sizers[i].size;\n\n      // Update the widget geometry and advance the relevant edge.\n      switch (this._direction) {\n        case 'left-to-right':\n          item.update(left + offset, top, size + extra, height);\n          left += size + extra + this._spacing;\n          break;\n        case 'top-to-bottom':\n          item.update(left, top + offset, width, size + extra);\n          top += size + extra + this._spacing;\n          break;\n        case 'right-to-left':\n          item.update(left - offset - size - extra, top, size + extra, height);\n          left -= size + extra + this._spacing;\n          break;\n        case 'bottom-to-top':\n          item.update(left, top - offset - size - extra, width, size + extra);\n          top -= size + extra + this._spacing;\n          break;\n        default:\n          throw 'unreachable';\n      }\n    }\n  }\n\n  private _fixed = 0;\n  private _spacing = 4;\n  private _dirty = false;\n  private _sizers: BoxSizer[] = [];\n  private _items: LayoutItem[] = [];\n  private _box: ElementExt.IBoxSizing | null = null;\n  private _alignment: BoxLayout.Alignment = 'start';\n  private _direction: BoxLayout.Direction = 'top-to-bottom';\n}\n\n/**\n * The namespace for the `BoxLayout` class statics.\n */\nexport namespace BoxLayout {\n  /**\n   * A type alias for a box layout direction.\n   */\n  export type Direction =\n    | 'left-to-right'\n    | 'right-to-left'\n    | 'top-to-bottom'\n    | 'bottom-to-top';\n\n  /**\n   * A type alias for a box layout alignment.\n   */\n  export type Alignment = 'start' | 'center' | 'end' | 'justify';\n\n  /**\n   * An options object for initializing a box layout.\n   */\n  export interface IOptions {\n    /**\n     * The direction of the layout.\n     *\n     * The default is `'top-to-bottom'`.\n     */\n    direction?: Direction;\n\n    /**\n     * The content alignment of the layout.\n     *\n     * The default is `'start'`.\n     */\n    alignment?: Alignment;\n\n    /**\n     * The spacing between items in the layout.\n     *\n     * The default is `4`.\n     */\n    spacing?: number;\n  }\n\n  /**\n   * Get the box layout stretch factor for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The box layout stretch factor for the widget.\n   */\n  export function getStretch(widget: Widget): number {\n    return Private.stretchProperty.get(widget);\n  }\n\n  /**\n   * Set the box layout stretch factor for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the stretch factor.\n   */\n  export function setStretch(widget: Widget, value: number): void {\n    Private.stretchProperty.set(widget, value);\n  }\n\n  /**\n   * Get the box layout size basis for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The box layout size basis for the widget.\n   */\n  export function getSizeBasis(widget: Widget): number {\n    return Private.sizeBasisProperty.get(widget);\n  }\n\n  /**\n   * Set the box layout size basis for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the size basis.\n   */\n  export function setSizeBasis(widget: Widget, value: number): void {\n    Private.sizeBasisProperty.set(widget, value);\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * The property descriptor for a widget stretch factor.\n   */\n  export const stretchProperty = new AttachedProperty<Widget, number>({\n    name: 'stretch',\n    create: () => 0,\n    coerce: (owner, value) => Math.max(0, Math.floor(value)),\n    changed: onChildSizingChanged\n  });\n\n  /**\n   * The property descriptor for a widget size basis.\n   */\n  export const sizeBasisProperty = new AttachedProperty<Widget, number>({\n    name: 'sizeBasis',\n    create: () => 0,\n    coerce: (owner, value) => Math.max(0, Math.floor(value)),\n    changed: onChildSizingChanged\n  });\n\n  /**\n   * Test whether a direction has horizontal orientation.\n   */\n  export function isHorizontal(dir: BoxLayout.Direction): boolean {\n    return dir === 'left-to-right' || dir === 'right-to-left';\n  }\n\n  /**\n   * Clamp a spacing value to an integer >= 0.\n   */\n  export function clampSpacing(value: number): number {\n    return Math.max(0, Math.floor(value));\n  }\n\n  /**\n   * The change handler for the attached sizing properties.\n   */\n  function onChildSizingChanged(child: Widget): void {\n    if (child.parent && child.parent.layout instanceof BoxLayout) {\n      child.parent.fit();\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { BoxLayout } from './boxlayout';\n\nimport { Panel } from './panel';\n\nimport { Widget } from './widget';\n\n/**\n * A panel which arranges its widgets in a single row or column.\n *\n * #### Notes\n * This class provides a convenience wrapper around a {@link BoxLayout}.\n */\nexport class BoxPanel extends Panel {\n  /**\n   * Construct a new box panel.\n   *\n   * @param options - The options for initializing the box panel.\n   */\n  constructor(options: BoxPanel.IOptions = {}) {\n    super({ layout: Private.createLayout(options) });\n    this.addClass('lm-BoxPanel');\n  }\n\n  /**\n   * Get the layout direction for the box panel.\n   */\n  get direction(): BoxPanel.Direction {\n    return (this.layout as BoxLayout).direction;\n  }\n\n  /**\n   * Set the layout direction for the box panel.\n   */\n  set direction(value: BoxPanel.Direction) {\n    (this.layout as BoxLayout).direction = value;\n  }\n\n  /**\n   * Get the content alignment for the box panel.\n   *\n   * #### Notes\n   * This is the alignment of the widgets in the layout direction.\n   *\n   * The alignment has no effect if the widgets can expand to fill the\n   * entire box layout.\n   */\n  get alignment(): BoxPanel.Alignment {\n    return (this.layout as BoxLayout).alignment;\n  }\n\n  /**\n   * Set the content alignment for the box panel.\n   *\n   * #### Notes\n   * This is the alignment of the widgets in the layout direction.\n   *\n   * The alignment has no effect if the widgets can expand to fill the\n   * entire box layout.\n   */\n  set alignment(value: BoxPanel.Alignment) {\n    (this.layout as BoxLayout).alignment = value;\n  }\n\n  /**\n   * Get the inter-element spacing for the box panel.\n   */\n  get spacing(): number {\n    return (this.layout as BoxLayout).spacing;\n  }\n\n  /**\n   * Set the inter-element spacing for the box panel.\n   */\n  set spacing(value: number) {\n    (this.layout as BoxLayout).spacing = value;\n  }\n\n  /**\n   * A message handler invoked on a `'child-added'` message.\n   */\n  protected onChildAdded(msg: Widget.ChildMessage): void {\n    msg.child.addClass('lm-BoxPanel-child');\n  }\n\n  /**\n   * A message handler invoked on a `'child-removed'` message.\n   */\n  protected onChildRemoved(msg: Widget.ChildMessage): void {\n    msg.child.removeClass('lm-BoxPanel-child');\n  }\n}\n\n/**\n * The namespace for the `BoxPanel` class statics.\n */\nexport namespace BoxPanel {\n  /**\n   * A type alias for a box panel direction.\n   */\n  export type Direction = BoxLayout.Direction;\n\n  /**\n   * A type alias for a box panel alignment.\n   */\n  export type Alignment = BoxLayout.Alignment;\n\n  /**\n   * An options object for initializing a box panel.\n   */\n  export interface IOptions {\n    /**\n     * The layout direction of the panel.\n     *\n     * The default is `'top-to-bottom'`.\n     */\n    direction?: Direction;\n\n    /**\n     * The content alignment of the panel.\n     *\n     * The default is `'start'`.\n     */\n    alignment?: Alignment;\n\n    /**\n     * The spacing between items in the panel.\n     *\n     * The default is `4`.\n     */\n    spacing?: number;\n\n    /**\n     * The box layout to use for the box panel.\n     *\n     * If this is provided, the other options are ignored.\n     *\n     * The default is a new `BoxLayout`.\n     */\n    layout?: BoxLayout;\n  }\n\n  /**\n   * Get the box panel stretch factor for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The box panel stretch factor for the widget.\n   */\n  export function getStretch(widget: Widget): number {\n    return BoxLayout.getStretch(widget);\n  }\n\n  /**\n   * Set the box panel stretch factor for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the stretch factor.\n   */\n  export function setStretch(widget: Widget, value: number): void {\n    BoxLayout.setStretch(widget, value);\n  }\n\n  /**\n   * Get the box panel size basis for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The box panel size basis for the widget.\n   */\n  export function getSizeBasis(widget: Widget): number {\n    return BoxLayout.getSizeBasis(widget);\n  }\n\n  /**\n   * Set the box panel size basis for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the size basis.\n   */\n  export function setSizeBasis(widget: Widget, value: number): void {\n    BoxLayout.setSizeBasis(widget, value);\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Create a box layout for the given panel options.\n   */\n  export function createLayout(options: BoxPanel.IOptions): BoxLayout {\n    return options.layout || new BoxLayout(options);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { ArrayExt, StringExt } from '@lumino/algorithm';\n\nimport { JSONExt, ReadonlyJSONObject } from '@lumino/coreutils';\n\nimport { CommandRegistry } from '@lumino/commands';\n\nimport { ElementExt } from '@lumino/domutils';\n\nimport { Message } from '@lumino/messaging';\n\nimport {\n  ElementDataset,\n  h,\n  VirtualDOM,\n  VirtualElement\n} from '@lumino/virtualdom';\n\nimport { Widget } from './widget';\n\n/**\n * A widget which displays command items as a searchable palette.\n */\nexport class CommandPalette extends Widget {\n  /**\n   * Construct a new command palette.\n   *\n   * @param options - The options for initializing the palette.\n   */\n  constructor(options: CommandPalette.IOptions) {\n    super({ node: Private.createNode() });\n    this.addClass('lm-CommandPalette');\n    this.setFlag(Widget.Flag.DisallowLayout);\n    this.commands = options.commands;\n    this.renderer = options.renderer || CommandPalette.defaultRenderer;\n    this.commands.commandChanged.connect(this._onGenericChange, this);\n    this.commands.keyBindingChanged.connect(this._onGenericChange, this);\n  }\n\n  /**\n   * Dispose of the resources held by the widget.\n   */\n  dispose(): void {\n    this._items.length = 0;\n    this._results = null;\n    super.dispose();\n  }\n\n  /**\n   * The command registry used by the command palette.\n   */\n  readonly commands: CommandRegistry;\n\n  /**\n   * The renderer used by the command palette.\n   */\n  readonly renderer: CommandPalette.IRenderer;\n\n  /**\n   * The command palette search node.\n   *\n   * #### Notes\n   * This is the node which contains the search-related elements.\n   */\n  get searchNode(): HTMLDivElement {\n    return this.node.getElementsByClassName(\n      'lm-CommandPalette-search'\n    )[0] as HTMLDivElement;\n  }\n\n  /**\n   * The command palette input node.\n   *\n   * #### Notes\n   * This is the actual input node for the search area.\n   */\n  get inputNode(): HTMLInputElement {\n    return this.node.getElementsByClassName(\n      'lm-CommandPalette-input'\n    )[0] as HTMLInputElement;\n  }\n\n  /**\n   * The command palette content node.\n   *\n   * #### Notes\n   * This is the node which holds the command item nodes.\n   *\n   * Modifying this node directly can lead to undefined behavior.\n   */\n  get contentNode(): HTMLUListElement {\n    return this.node.getElementsByClassName(\n      'lm-CommandPalette-content'\n    )[0] as HTMLUListElement;\n  }\n\n  /**\n   * A read-only array of the command items in the palette.\n   */\n  get items(): ReadonlyArray<CommandPalette.IItem> {\n    return this._items;\n  }\n\n  /**\n   * Add a command item to the command palette.\n   *\n   * @param options - The options for creating the command item.\n   *\n   * @returns The command item added to the palette.\n   */\n  addItem(options: CommandPalette.IItemOptions): CommandPalette.IItem {\n    // Create a new command item for the options.\n    let item = Private.createItem(this.commands, options);\n\n    // Add the item to the array.\n    this._items.push(item);\n\n    // Refresh the search results.\n    this.refresh();\n\n    // Return the item added to the palette.\n    return item;\n  }\n\n  /**\n   * Adds command items to the command palette.\n   *\n   * @param items - An array of options for creating each command item.\n   *\n   * @returns The command items added to the palette.\n   */\n  addItems(items: CommandPalette.IItemOptions[]): CommandPalette.IItem[] {\n    const newItems = items.map(item => Private.createItem(this.commands, item));\n    newItems.forEach(item => this._items.push(item));\n    this.refresh();\n    return newItems;\n  }\n\n  /**\n   * Remove an item from the command palette.\n   *\n   * @param item - The item to remove from the palette.\n   *\n   * #### Notes\n   * This is a no-op if the item is not in the palette.\n   */\n  removeItem(item: CommandPalette.IItem): void {\n    this.removeItemAt(this._items.indexOf(item));\n  }\n\n  /**\n   * Remove the item at a given index from the command palette.\n   *\n   * @param index - The index of the item to remove.\n   *\n   * #### Notes\n   * This is a no-op if the index is out of range.\n   */\n  removeItemAt(index: number): void {\n    // Remove the item from the array.\n    let item = ArrayExt.removeAt(this._items, index);\n\n    // Bail if the index is out of range.\n    if (!item) {\n      return;\n    }\n\n    // Refresh the search results.\n    this.refresh();\n  }\n\n  /**\n   * Remove all items from the command palette.\n   */\n  clearItems(): void {\n    // Bail if there is nothing to remove.\n    if (this._items.length === 0) {\n      return;\n    }\n\n    // Clear the array of items.\n    this._items.length = 0;\n\n    // Refresh the search results.\n    this.refresh();\n  }\n\n  /**\n   * Clear the search results and schedule an update.\n   *\n   * #### Notes\n   * This should be called whenever the search results of the palette\n   * should be updated.\n   *\n   * This is typically called automatically by the palette as needed,\n   * but can be called manually if the input text is programatically\n   * changed.\n   *\n   * The rendered results are updated asynchronously.\n   */\n  refresh(): void {\n    this._results = null;\n    if (this.inputNode.value !== '') {\n      let clear = this.node.getElementsByClassName(\n        'lm-close-icon'\n      )[0] as HTMLInputElement;\n      clear.style.display = 'inherit';\n    } else {\n      let clear = this.node.getElementsByClassName(\n        'lm-close-icon'\n      )[0] as HTMLInputElement;\n      clear.style.display = 'none';\n    }\n    this.update();\n  }\n\n  /**\n   * Handle the DOM events for the command palette.\n   *\n   * @param event - The DOM event sent to the command palette.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the command palette's DOM node.\n   * It should not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'click':\n        this._evtClick(event as MouseEvent);\n        break;\n      case 'keydown':\n        this._evtKeyDown(event as KeyboardEvent);\n        break;\n      case 'input':\n        this.refresh();\n        break;\n      case 'focus':\n      case 'blur':\n        this._toggleFocused();\n        break;\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    this.node.addEventListener('click', this);\n    this.node.addEventListener('keydown', this);\n    this.node.addEventListener('input', this);\n    this.node.addEventListener('focus', this, true);\n    this.node.addEventListener('blur', this, true);\n  }\n\n  /**\n   * A message handler invoked on an `'after-detach'` message.\n   */\n  protected onAfterDetach(msg: Message): void {\n    this.node.removeEventListener('click', this);\n    this.node.removeEventListener('keydown', this);\n    this.node.removeEventListener('input', this);\n    this.node.removeEventListener('focus', this, true);\n    this.node.removeEventListener('blur', this, true);\n  }\n\n  /**\n   * A message handler invoked on an `'after-show'` message.\n   */\n  protected onAfterShow(msg: Message): void {\n    this.update();\n    super.onAfterShow(msg);\n  }\n\n  /**\n   * A message handler invoked on an `'activate-request'` message.\n   */\n  protected onActivateRequest(msg: Message): void {\n    if (this.isAttached) {\n      let input = this.inputNode;\n      input.focus();\n      input.select();\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    if (this.isHidden) {\n      return;\n    }\n\n    // Fetch the current query text and content node.\n    let query = this.inputNode.value;\n    let contentNode = this.contentNode;\n\n    // Ensure the search results are generated.\n    let results = this._results;\n    if (!results) {\n      // Generate and store the new search results.\n      results = this._results = Private.search(this._items, query);\n\n      // Reset the active index.\n      this._activeIndex = query\n        ? ArrayExt.findFirstIndex(results, Private.canActivate)\n        : -1;\n    }\n\n    // If there is no query and no results, clear the content.\n    if (!query && results.length === 0) {\n      VirtualDOM.render(null, contentNode);\n      return;\n    }\n\n    // If the is a query but no results, render the empty message.\n    if (query && results.length === 0) {\n      let content = this.renderer.renderEmptyMessage({ query });\n      VirtualDOM.render(content, contentNode);\n      return;\n    }\n\n    // Create the render content for the search results.\n    let renderer = this.renderer;\n    let activeIndex = this._activeIndex;\n    let content = new Array<VirtualElement>(results.length);\n    for (let i = 0, n = results.length; i < n; ++i) {\n      let result = results[i];\n      if (result.type === 'header') {\n        let indices = result.indices;\n        let category = result.category;\n        content[i] = renderer.renderHeader({ category, indices });\n      } else {\n        let item = result.item;\n        let indices = result.indices;\n        let active = i === activeIndex;\n        content[i] = renderer.renderItem({ item, indices, active });\n      }\n    }\n\n    // Render the search result content.\n    VirtualDOM.render(content, contentNode);\n\n    // Adjust the scroll position as needed.\n    if (activeIndex < 0 || activeIndex >= results.length) {\n      contentNode.scrollTop = 0;\n    } else {\n      let element = contentNode.children[activeIndex];\n      ElementExt.scrollIntoViewIfNeeded(contentNode, element);\n    }\n  }\n\n  /**\n   * Handle the `'click'` event for the command palette.\n   */\n  private _evtClick(event: MouseEvent): void {\n    // Bail if the click is not the left button.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Clear input if the target is clear button\n    if ((event.target as HTMLElement).classList.contains('lm-close-icon')) {\n      this.inputNode.value = '';\n      this.refresh();\n      return;\n    }\n\n    // Find the index of the item which was clicked.\n    let index = ArrayExt.findFirstIndex(this.contentNode.children, node => {\n      return node.contains(event.target as HTMLElement);\n    });\n\n    // Bail if the click was not on an item.\n    if (index === -1) {\n      return;\n    }\n\n    // Kill the event when a content item is clicked.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Execute the item if possible.\n    this._execute(index);\n  }\n\n  /**\n   * Handle the `'keydown'` event for the command palette.\n   */\n  private _evtKeyDown(event: KeyboardEvent): void {\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n    switch (event.keyCode) {\n      case 13: // Enter\n        event.preventDefault();\n        event.stopPropagation();\n        this._execute(this._activeIndex);\n        break;\n      case 38: // Up Arrow\n        event.preventDefault();\n        event.stopPropagation();\n        this._activatePreviousItem();\n        break;\n      case 40: // Down Arrow\n        event.preventDefault();\n        event.stopPropagation();\n        this._activateNextItem();\n        break;\n    }\n  }\n\n  /**\n   * Activate the next enabled command item.\n   */\n  private _activateNextItem(): void {\n    // Bail if there are no search results.\n    if (!this._results || this._results.length === 0) {\n      return;\n    }\n\n    // Find the next enabled item index.\n    let ai = this._activeIndex;\n    let n = this._results.length;\n    let start = ai < n - 1 ? ai + 1 : 0;\n    let stop = start === 0 ? n - 1 : start - 1;\n    this._activeIndex = ArrayExt.findFirstIndex(\n      this._results,\n      Private.canActivate,\n      start,\n      stop\n    );\n\n    // Schedule an update of the items.\n    this.update();\n  }\n\n  /**\n   * Activate the previous enabled command item.\n   */\n  private _activatePreviousItem(): void {\n    // Bail if there are no search results.\n    if (!this._results || this._results.length === 0) {\n      return;\n    }\n\n    // Find the previous enabled item index.\n    let ai = this._activeIndex;\n    let n = this._results.length;\n    let start = ai <= 0 ? n - 1 : ai - 1;\n    let stop = start === n - 1 ? 0 : start + 1;\n    this._activeIndex = ArrayExt.findLastIndex(\n      this._results,\n      Private.canActivate,\n      start,\n      stop\n    );\n\n    // Schedule an update of the items.\n    this.update();\n  }\n\n  /**\n   * Execute the command item at the given index, if possible.\n   */\n  private _execute(index: number): void {\n    // Bail if there are no search results.\n    if (!this._results) {\n      return;\n    }\n\n    // Bail if the index is out of range.\n    let part = this._results[index];\n    if (!part) {\n      return;\n    }\n\n    // Update the search text if the item is a header.\n    if (part.type === 'header') {\n      let input = this.inputNode;\n      input.value = `${part.category.toLowerCase()} `;\n      input.focus();\n      this.refresh();\n      return;\n    }\n\n    // Bail if item is not enabled.\n    if (!part.item.isEnabled) {\n      return;\n    }\n\n    // Execute the item.\n    this.commands.execute(part.item.command, part.item.args);\n\n    // Clear the query text.\n    this.inputNode.value = '';\n\n    // Refresh the search results.\n    this.refresh();\n  }\n\n  /**\n   * Toggle the focused modifier based on the input node focus state.\n   */\n  private _toggleFocused(): void {\n    let focused = document.activeElement === this.inputNode;\n    this.toggleClass('lm-mod-focused', focused);\n  }\n\n  /**\n   * A signal handler for generic command changes.\n   */\n  private _onGenericChange(): void {\n    this.refresh();\n  }\n\n  private _activeIndex = -1;\n  private _items: CommandPalette.IItem[] = [];\n  private _results: Private.SearchResult[] | null = null;\n}\n\n/**\n * The namespace for the `CommandPalette` class statics.\n */\nexport namespace CommandPalette {\n  /**\n   * An options object for creating a command palette.\n   */\n  export interface IOptions {\n    /**\n     * The command registry for use with the command palette.\n     */\n    commands: CommandRegistry;\n\n    /**\n     * A custom renderer for use with the command palette.\n     *\n     * The default is a shared renderer instance.\n     */\n    renderer?: IRenderer;\n  }\n\n  /**\n   * An options object for creating a command item.\n   */\n  export interface IItemOptions {\n    /**\n     * The category for the item.\n     */\n    category: string;\n\n    /**\n     * The command to execute when the item is triggered.\n     */\n    command: string;\n\n    /**\n     * The arguments for the command.\n     *\n     * The default value is an empty object.\n     */\n    args?: ReadonlyJSONObject;\n\n    /**\n     * The rank for the command item.\n     *\n     * The rank is used as a tie-breaker when ordering command items\n     * for display. Items are sorted in the following order:\n     *   1. Text match (lower is better)\n     *   2. Category (locale order)\n     *   3. Rank (lower is better)\n     *   4. Label (locale order)\n     *\n     * The default rank is `Infinity`.\n     */\n    rank?: number;\n  }\n\n  /**\n   * An object which represents an item in a command palette.\n   *\n   * #### Notes\n   * Item objects are created automatically by a command palette.\n   */\n  export interface IItem {\n    /**\n     * The command to execute when the item is triggered.\n     */\n    readonly command: string;\n\n    /**\n     * The arguments for the command.\n     */\n    readonly args: ReadonlyJSONObject;\n\n    /**\n     * The category for the command item.\n     */\n    readonly category: string;\n\n    /**\n     * The rank for the command item.\n     */\n    readonly rank: number;\n\n    /**\n     * The display label for the command item.\n     */\n    readonly label: string;\n\n    /**\n     * The display caption for the command item.\n     */\n    readonly caption: string;\n\n    /**\n     * The icon renderer for the command item.\n     */\n    readonly icon: VirtualElement.IRenderer | undefined;\n\n    /**\n     * The icon class for the command item.\n     */\n    readonly iconClass: string;\n\n    /**\n     * The icon label for the command item.\n     */\n    readonly iconLabel: string;\n\n    /**\n     * The extra class name for the command item.\n     */\n    readonly className: string;\n\n    /**\n     * The dataset for the command item.\n     */\n    readonly dataset: CommandRegistry.Dataset;\n\n    /**\n     * Whether the command item is enabled.\n     */\n    readonly isEnabled: boolean;\n\n    /**\n     * Whether the command item is toggled.\n     */\n    readonly isToggled: boolean;\n\n    /**\n     * Whether the command item is toggleable.\n     */\n    readonly isToggleable: boolean;\n\n    /**\n     * Whether the command item is visible.\n     */\n    readonly isVisible: boolean;\n\n    /**\n     * The key binding for the command item.\n     */\n    readonly keyBinding: CommandRegistry.IKeyBinding | null;\n  }\n\n  /**\n   * The render data for a command palette header.\n   */\n  export interface IHeaderRenderData {\n    /**\n     * The category of the header.\n     */\n    readonly category: string;\n\n    /**\n     * The indices of the matched characters in the category.\n     */\n    readonly indices: ReadonlyArray<number> | null;\n  }\n\n  /**\n   * The render data for a command palette item.\n   */\n  export interface IItemRenderData {\n    /**\n     * The command palette item to render.\n     */\n    readonly item: IItem;\n\n    /**\n     * The indices of the matched characters in the label.\n     */\n    readonly indices: ReadonlyArray<number> | null;\n\n    /**\n     * Whether the item is the active item.\n     */\n    readonly active: boolean;\n  }\n\n  /**\n   * The render data for a command palette empty message.\n   */\n  export interface IEmptyMessageRenderData {\n    /**\n     * The query which failed to match any commands.\n     */\n    query: string;\n  }\n\n  /**\n   * A renderer for use with a command palette.\n   */\n  export interface IRenderer {\n    /**\n     * Render the virtual element for a command palette header.\n     *\n     * @param data - The data to use for rendering the header.\n     *\n     * @returns A virtual element representing the header.\n     */\n    renderHeader(data: IHeaderRenderData): VirtualElement;\n\n    /**\n     * Render the virtual element for a command palette item.\n     *\n     * @param data - The data to use for rendering the item.\n     *\n     * @returns A virtual element representing the item.\n     *\n     * #### Notes\n     * The command palette will not render invisible items.\n     */\n    renderItem(data: IItemRenderData): VirtualElement;\n\n    /**\n     * Render the empty results message for a command palette.\n     *\n     * @param data - The data to use for rendering the message.\n     *\n     * @returns A virtual element representing the message.\n     */\n    renderEmptyMessage(data: IEmptyMessageRenderData): VirtualElement;\n  }\n\n  /**\n   * The default implementation of `IRenderer`.\n   */\n  export class Renderer implements IRenderer {\n    /**\n     * Render the virtual element for a command palette header.\n     *\n     * @param data - The data to use for rendering the header.\n     *\n     * @returns A virtual element representing the header.\n     */\n    renderHeader(data: IHeaderRenderData): VirtualElement {\n      let content = this.formatHeader(data);\n      return h.li({ className: 'lm-CommandPalette-header' }, content);\n    }\n\n    /**\n     * Render the virtual element for a command palette item.\n     *\n     * @param data - The data to use for rendering the item.\n     *\n     * @returns A virtual element representing the item.\n     */\n    renderItem(data: IItemRenderData): VirtualElement {\n      let className = this.createItemClass(data);\n      let dataset = this.createItemDataset(data);\n      if (data.item.isToggleable) {\n        return h.li(\n          {\n            className,\n            dataset,\n            role: 'menuitemcheckbox',\n            'aria-checked': `${data.item.isToggled}`\n          },\n          this.renderItemIcon(data),\n          this.renderItemContent(data),\n          this.renderItemShortcut(data)\n        );\n      }\n      return h.li(\n        {\n          className,\n          dataset,\n          role: 'menuitem'\n        },\n        this.renderItemIcon(data),\n        this.renderItemContent(data),\n        this.renderItemShortcut(data)\n      );\n    }\n\n    /**\n     * Render the empty results message for a command palette.\n     *\n     * @param data - The data to use for rendering the message.\n     *\n     * @returns A virtual element representing the message.\n     */\n    renderEmptyMessage(data: IEmptyMessageRenderData): VirtualElement {\n      let content = this.formatEmptyMessage(data);\n      return h.li({ className: 'lm-CommandPalette-emptyMessage' }, content);\n    }\n\n    /**\n     * Render the icon for a command palette item.\n     *\n     * @param data - The data to use for rendering the icon.\n     *\n     * @returns A virtual element representing the icon.\n     */\n    renderItemIcon(data: IItemRenderData): VirtualElement {\n      let className = this.createIconClass(data);\n\n      // If data.item.icon is undefined, it will be ignored.\n      return h.div({ className }, data.item.icon!, data.item.iconLabel);\n    }\n\n    /**\n     * Render the content for a command palette item.\n     *\n     * @param data - The data to use for rendering the content.\n     *\n     * @returns A virtual element representing the content.\n     */\n    renderItemContent(data: IItemRenderData): VirtualElement {\n      return h.div(\n        { className: 'lm-CommandPalette-itemContent' },\n        this.renderItemLabel(data),\n        this.renderItemCaption(data)\n      );\n    }\n\n    /**\n     * Render the label for a command palette item.\n     *\n     * @param data - The data to use for rendering the label.\n     *\n     * @returns A virtual element representing the label.\n     */\n    renderItemLabel(data: IItemRenderData): VirtualElement {\n      let content = this.formatItemLabel(data);\n      return h.div({ className: 'lm-CommandPalette-itemLabel' }, content);\n    }\n\n    /**\n     * Render the caption for a command palette item.\n     *\n     * @param data - The data to use for rendering the caption.\n     *\n     * @returns A virtual element representing the caption.\n     */\n    renderItemCaption(data: IItemRenderData): VirtualElement {\n      let content = this.formatItemCaption(data);\n      return h.div({ className: 'lm-CommandPalette-itemCaption' }, content);\n    }\n\n    /**\n     * Render the shortcut for a command palette item.\n     *\n     * @param data - The data to use for rendering the shortcut.\n     *\n     * @returns A virtual element representing the shortcut.\n     */\n    renderItemShortcut(data: IItemRenderData): VirtualElement {\n      let content = this.formatItemShortcut(data);\n      return h.div({ className: 'lm-CommandPalette-itemShortcut' }, content);\n    }\n\n    /**\n     * Create the class name for the command palette item.\n     *\n     * @param data - The data to use for the class name.\n     *\n     * @returns The full class name for the command palette item.\n     */\n    createItemClass(data: IItemRenderData): string {\n      // Set up the initial class name.\n      let name = 'lm-CommandPalette-item';\n\n      // Add the boolean state classes.\n      if (!data.item.isEnabled) {\n        name += ' lm-mod-disabled';\n      }\n      if (data.item.isToggled) {\n        name += ' lm-mod-toggled';\n      }\n      if (data.active) {\n        name += ' lm-mod-active';\n      }\n\n      // Add the extra class.\n      let extra = data.item.className;\n      if (extra) {\n        name += ` ${extra}`;\n      }\n\n      // Return the complete class name.\n      return name;\n    }\n\n    /**\n     * Create the dataset for the command palette item.\n     *\n     * @param data - The data to use for creating the dataset.\n     *\n     * @returns The dataset for the command palette item.\n     */\n    createItemDataset(data: IItemRenderData): ElementDataset {\n      return { ...data.item.dataset, command: data.item.command };\n    }\n\n    /**\n     * Create the class name for the command item icon.\n     *\n     * @param data - The data to use for the class name.\n     *\n     * @returns The full class name for the item icon.\n     */\n    createIconClass(data: IItemRenderData): string {\n      let name = 'lm-CommandPalette-itemIcon';\n      let extra = data.item.iconClass;\n      return extra ? `${name} ${extra}` : name;\n    }\n\n    /**\n     * Create the render content for the header node.\n     *\n     * @param data - The data to use for the header content.\n     *\n     * @returns The content to add to the header node.\n     */\n    formatHeader(data: IHeaderRenderData): h.Child {\n      if (!data.indices || data.indices.length === 0) {\n        return data.category;\n      }\n      return StringExt.highlight(data.category, data.indices, h.mark);\n    }\n\n    /**\n     * Create the render content for the empty message node.\n     *\n     * @param data - The data to use for the empty message content.\n     *\n     * @returns The content to add to the empty message node.\n     */\n    formatEmptyMessage(data: IEmptyMessageRenderData): h.Child {\n      return `No commands found that match '${data.query}'`;\n    }\n\n    /**\n     * Create the render content for the item shortcut node.\n     *\n     * @param data - The data to use for the shortcut content.\n     *\n     * @returns The content to add to the shortcut node.\n     */\n    formatItemShortcut(data: IItemRenderData): h.Child {\n      let kb = data.item.keyBinding;\n      return kb ? CommandRegistry.formatKeystroke(kb.keys) : null;\n    }\n\n    /**\n     * Create the render content for the item label node.\n     *\n     * @param data - The data to use for the label content.\n     *\n     * @returns The content to add to the label node.\n     */\n    formatItemLabel(data: IItemRenderData): h.Child {\n      if (!data.indices || data.indices.length === 0) {\n        return data.item.label;\n      }\n      return StringExt.highlight(data.item.label, data.indices, h.mark);\n    }\n\n    /**\n     * Create the render content for the item caption node.\n     *\n     * @param data - The data to use for the caption content.\n     *\n     * @returns The content to add to the caption node.\n     */\n    formatItemCaption(data: IItemRenderData): h.Child {\n      return data.item.caption;\n    }\n  }\n\n  /**\n   * The default `Renderer` instance.\n   */\n  export const defaultRenderer = new Renderer();\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Create the DOM node for a command palette.\n   */\n  export function createNode(): HTMLDivElement {\n    let node = document.createElement('div');\n    let search = document.createElement('div');\n    let wrapper = document.createElement('div');\n    let input = document.createElement('input');\n    let content = document.createElement('ul');\n    let clear = document.createElement('button');\n    search.className = 'lm-CommandPalette-search';\n    wrapper.className = 'lm-CommandPalette-wrapper';\n    input.className = 'lm-CommandPalette-input';\n    clear.className = 'lm-close-icon';\n\n    content.className = 'lm-CommandPalette-content';\n    content.setAttribute('role', 'menu');\n    input.spellcheck = false;\n    wrapper.appendChild(input);\n    wrapper.appendChild(clear);\n    search.appendChild(wrapper);\n    node.appendChild(search);\n    node.appendChild(content);\n    return node;\n  }\n\n  /**\n   * Create a new command item from a command registry and options.\n   */\n  export function createItem(\n    commands: CommandRegistry,\n    options: CommandPalette.IItemOptions\n  ): CommandPalette.IItem {\n    return new CommandItem(commands, options);\n  }\n\n  /**\n   * A search result object for a header label.\n   */\n  export interface IHeaderResult {\n    /**\n     * The discriminated type of the object.\n     */\n    readonly type: 'header';\n\n    /**\n     * The category for the header.\n     */\n    readonly category: string;\n\n    /**\n     * The indices of the matched category characters.\n     */\n    readonly indices: ReadonlyArray<number> | null;\n  }\n\n  /**\n   * A search result object for a command item.\n   */\n  export interface IItemResult {\n    /**\n     * The discriminated type of the object.\n     */\n    readonly type: 'item';\n\n    /**\n     * The command item which was matched.\n     */\n    readonly item: CommandPalette.IItem;\n\n    /**\n     * The indices of the matched label characters.\n     */\n    readonly indices: ReadonlyArray<number> | null;\n  }\n\n  /**\n   * A type alias for a search result item.\n   */\n  export type SearchResult = IHeaderResult | IItemResult;\n\n  /**\n   * Search an array of command items for fuzzy matches.\n   */\n  export function search(\n    items: CommandPalette.IItem[],\n    query: string\n  ): SearchResult[] {\n    // Fuzzy match the items for the query.\n    let scores = matchItems(items, query);\n\n    // Sort the items based on their score.\n    scores.sort(scoreCmp);\n\n    // Create the results for the search.\n    return createResults(scores);\n  }\n\n  /**\n   * Test whether a result item can be activated.\n   */\n  export function canActivate(result: SearchResult): boolean {\n    return result.type === 'item' && result.item.isEnabled;\n  }\n\n  /**\n   * Normalize a category for a command item.\n   */\n  function normalizeCategory(category: string): string {\n    return category.trim().replace(/\\s+/g, ' ');\n  }\n\n  /**\n   * Normalize the query text for a fuzzy search.\n   */\n  function normalizeQuery(text: string): string {\n    return text.replace(/\\s+/g, '').toLowerCase();\n  }\n\n  /**\n   * An enum of the supported match types.\n   */\n  const enum MatchType {\n    Label,\n    Category,\n    Split,\n    Default\n  }\n\n  /**\n   * A text match score with associated command item.\n   */\n  interface IScore {\n    /**\n     * The numerical type for the text match.\n     */\n    matchType: MatchType;\n\n    /**\n     * The numerical score for the text match.\n     */\n    score: number;\n\n    /**\n     * The indices of the matched category characters.\n     */\n    categoryIndices: number[] | null;\n\n    /**\n     * The indices of the matched label characters.\n     */\n    labelIndices: number[] | null;\n\n    /**\n     * The command item associated with the match.\n     */\n    item: CommandPalette.IItem;\n  }\n\n  /**\n   * Perform a fuzzy match on an array of command items.\n   */\n  function matchItems(items: CommandPalette.IItem[], query: string): IScore[] {\n    // Normalize the query text to lower case with no whitespace.\n    query = normalizeQuery(query);\n\n    // Create the array to hold the scores.\n    let scores: IScore[] = [];\n\n    // Iterate over the items and match against the query.\n    for (let i = 0, n = items.length; i < n; ++i) {\n      // Ignore items which are not visible.\n      let item = items[i];\n      if (!item.isVisible) {\n        continue;\n      }\n\n      // If the query is empty, all items are matched by default.\n      if (!query) {\n        scores.push({\n          matchType: MatchType.Default,\n          categoryIndices: null,\n          labelIndices: null,\n          score: 0,\n          item\n        });\n        continue;\n      }\n\n      // Run the fuzzy search for the item and query.\n      let score = fuzzySearch(item, query);\n\n      // Ignore the item if it is not a match.\n      if (!score) {\n        continue;\n      }\n\n      // Penalize disabled items.\n      // TODO - push disabled items all the way down in sort cmp?\n      if (!item.isEnabled) {\n        score.score += 1000;\n      }\n\n      // Add the score to the results.\n      scores.push(score);\n    }\n\n    // Return the final array of scores.\n    return scores;\n  }\n\n  /**\n   * Perform a fuzzy search on a single command item.\n   */\n  function fuzzySearch(\n    item: CommandPalette.IItem,\n    query: string\n  ): IScore | null {\n    // Create the source text to be searched.\n    let category = item.category.toLowerCase();\n    let label = item.label.toLowerCase();\n    let source = `${category} ${label}`;\n\n    // Set up the match score and indices array.\n    let score = Infinity;\n    let indices: number[] | null = null;\n\n    // The regex for search word boundaries\n    let rgx = /\\b\\w/g;\n\n    // Search the source by word boundary.\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      // Find the next word boundary in the source.\n      let rgxMatch = rgx.exec(source);\n\n      // Break if there is no more source context.\n      if (!rgxMatch) {\n        break;\n      }\n\n      // Run the string match on the relevant substring.\n      let match = StringExt.matchSumOfDeltas(source, query, rgxMatch.index);\n\n      // Break if there is no match.\n      if (!match) {\n        break;\n      }\n\n      // Update the match if the score is better.\n      if (match.score <= score) {\n        score = match.score;\n        indices = match.indices;\n      }\n    }\n\n    // Bail if there was no match.\n    if (!indices || score === Infinity) {\n      return null;\n    }\n\n    // Compute the pivot index between category and label text.\n    let pivot = category.length + 1;\n\n    // Find the slice index to separate matched indices.\n    let j = ArrayExt.lowerBound(indices, pivot, (a, b) => a - b);\n\n    // Extract the matched category and label indices.\n    let categoryIndices = indices.slice(0, j);\n    let labelIndices = indices.slice(j);\n\n    // Adjust the label indices for the pivot offset.\n    for (let i = 0, n = labelIndices.length; i < n; ++i) {\n      labelIndices[i] -= pivot;\n    }\n\n    // Handle a pure label match.\n    if (categoryIndices.length === 0) {\n      return {\n        matchType: MatchType.Label,\n        categoryIndices: null,\n        labelIndices,\n        score,\n        item\n      };\n    }\n\n    // Handle a pure category match.\n    if (labelIndices.length === 0) {\n      return {\n        matchType: MatchType.Category,\n        categoryIndices,\n        labelIndices: null,\n        score,\n        item\n      };\n    }\n\n    // Handle a split match.\n    return {\n      matchType: MatchType.Split,\n      categoryIndices,\n      labelIndices,\n      score,\n      item\n    };\n  }\n\n  /**\n   * A sort comparison function for a match score.\n   */\n  function scoreCmp(a: IScore, b: IScore): number {\n    // First compare based on the match type\n    let m1 = a.matchType - b.matchType;\n    if (m1 !== 0) {\n      return m1;\n    }\n\n    // Otherwise, compare based on the match score.\n    let d1 = a.score - b.score;\n    if (d1 !== 0) {\n      return d1;\n    }\n\n    // Find the match index based on the match type.\n    let i1 = 0;\n    let i2 = 0;\n    switch (a.matchType) {\n      case MatchType.Label:\n        i1 = a.labelIndices![0];\n        i2 = b.labelIndices![0];\n        break;\n      case MatchType.Category:\n      case MatchType.Split:\n        i1 = a.categoryIndices![0];\n        i2 = b.categoryIndices![0];\n        break;\n    }\n\n    // Compare based on the match index.\n    if (i1 !== i2) {\n      return i1 - i2;\n    }\n\n    // Otherwise, compare by category.\n    let d2 = a.item.category.localeCompare(b.item.category);\n    if (d2 !== 0) {\n      return d2;\n    }\n\n    // Otherwise, compare by rank.\n    let r1 = a.item.rank;\n    let r2 = b.item.rank;\n    if (r1 !== r2) {\n      return r1 < r2 ? -1 : 1; // Infinity safe\n    }\n\n    // Finally, compare by label.\n    return a.item.label.localeCompare(b.item.label);\n  }\n\n  /**\n   * Create the results from an array of sorted scores.\n   */\n  function createResults(scores: IScore[]): SearchResult[] {\n    // Set up an array to track which scores have been visited.\n    let visited = new Array(scores.length);\n    ArrayExt.fill(visited, false);\n\n    // Set up the search results array.\n    let results: SearchResult[] = [];\n\n    // Iterate over each score in the array.\n    for (let i = 0, n = scores.length; i < n; ++i) {\n      // Ignore a score which has already been processed.\n      if (visited[i]) {\n        continue;\n      }\n\n      // Extract the current item and indices.\n      let { item, categoryIndices } = scores[i];\n\n      // Extract the category for the current item.\n      let category = item.category;\n\n      // Add the header result for the category.\n      results.push({ type: 'header', category, indices: categoryIndices });\n\n      // Find the rest of the scores with the same category.\n      for (let j = i; j < n; ++j) {\n        // Ignore a score which has already been processed.\n        if (visited[j]) {\n          continue;\n        }\n\n        // Extract the data for the current score.\n        let { item, labelIndices } = scores[j];\n\n        // Ignore an item with a different category.\n        if (item.category !== category) {\n          continue;\n        }\n\n        // Create the item result for the score.\n        results.push({ type: 'item', item, indices: labelIndices });\n\n        // Mark the score as processed.\n        visited[j] = true;\n      }\n    }\n\n    // Return the final results.\n    return results;\n  }\n\n  /**\n   * A concrete implementation of `CommandPalette.IItem`.\n   */\n  class CommandItem implements CommandPalette.IItem {\n    /**\n     * Construct a new command item.\n     */\n    constructor(\n      commands: CommandRegistry,\n      options: CommandPalette.IItemOptions\n    ) {\n      this._commands = commands;\n      this.category = normalizeCategory(options.category);\n      this.command = options.command;\n      this.args = options.args || JSONExt.emptyObject;\n      this.rank = options.rank !== undefined ? options.rank : Infinity;\n    }\n\n    /**\n     * The category for the command item.\n     */\n    readonly category: string;\n\n    /**\n     * The command to execute when the item is triggered.\n     */\n    readonly command: string;\n\n    /**\n     * The arguments for the command.\n     */\n    readonly args: ReadonlyJSONObject;\n\n    /**\n     * The rank for the command item.\n     */\n    readonly rank: number;\n\n    /**\n     * The display label for the command item.\n     */\n    get label(): string {\n      return this._commands.label(this.command, this.args);\n    }\n\n    /**\n     * The icon renderer for the command item.\n     */\n    get icon(): VirtualElement.IRenderer | undefined {\n      return this._commands.icon(this.command, this.args);\n    }\n\n    /**\n     * The icon class for the command item.\n     */\n    get iconClass(): string {\n      return this._commands.iconClass(this.command, this.args);\n    }\n\n    /**\n     * The icon label for the command item.\n     */\n    get iconLabel(): string {\n      return this._commands.iconLabel(this.command, this.args);\n    }\n\n    /**\n     * The display caption for the command item.\n     */\n    get caption(): string {\n      return this._commands.caption(this.command, this.args);\n    }\n\n    /**\n     * The extra class name for the command item.\n     */\n    get className(): string {\n      return this._commands.className(this.command, this.args);\n    }\n\n    /**\n     * The dataset for the command item.\n     */\n    get dataset(): CommandRegistry.Dataset {\n      return this._commands.dataset(this.command, this.args);\n    }\n\n    /**\n     * Whether the command item is enabled.\n     */\n    get isEnabled(): boolean {\n      return this._commands.isEnabled(this.command, this.args);\n    }\n\n    /**\n     * Whether the command item is toggled.\n     */\n    get isToggled(): boolean {\n      return this._commands.isToggled(this.command, this.args);\n    }\n\n    /**\n     * Whether the command item is toggleable.\n     */\n    get isToggleable(): boolean {\n      return this._commands.isToggleable(this.command, this.args);\n    }\n\n    /**\n     * Whether the command item is visible.\n     */\n    get isVisible(): boolean {\n      return this._commands.isVisible(this.command, this.args);\n    }\n\n    /**\n     * The key binding for the command item.\n     */\n    get keyBinding(): CommandRegistry.IKeyBinding | null {\n      let { command, args } = this;\n      return (\n        ArrayExt.findLastValue(this._commands.keyBindings, kb => {\n          return kb.command === command && JSONExt.deepEqual(kb.args, args);\n        }) || null\n      );\n    }\n\n    private _commands: CommandRegistry;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { ArrayExt } from '@lumino/algorithm';\n\nimport { CommandRegistry } from '@lumino/commands';\n\nimport { JSONExt, ReadonlyJSONObject } from '@lumino/coreutils';\n\nimport { ElementExt } from '@lumino/domutils';\n\nimport { getKeyboardLayout } from '@lumino/keyboard';\n\nimport { Message, MessageLoop } from '@lumino/messaging';\n\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport {\n  ARIAAttrNames,\n  ElementARIAAttrs,\n  ElementDataset,\n  h,\n  VirtualDOM,\n  VirtualElement\n} from '@lumino/virtualdom';\n\nimport { Widget } from './widget';\n\ninterface IWindowData {\n  pageXOffset: number;\n  pageYOffset: number;\n  clientWidth: number;\n  clientHeight: number;\n}\n\n/**\n * A widget which displays items as a canonical menu.\n */\nexport class Menu extends Widget {\n  /**\n   * Construct a new menu.\n   *\n   * @param options - The options for initializing the menu.\n   */\n  constructor(options: Menu.IOptions) {\n    super({ node: Private.createNode() });\n    this.addClass('lm-Menu');\n    this.setFlag(Widget.Flag.DisallowLayout);\n    this.commands = options.commands;\n    this.renderer = options.renderer || Menu.defaultRenderer;\n  }\n\n  /**\n   * Dispose of the resources held by the menu.\n   */\n  dispose(): void {\n    this.close();\n    this._items.length = 0;\n    super.dispose();\n  }\n\n  /**\n   * A signal emitted just before the menu is closed.\n   *\n   * #### Notes\n   * This signal is emitted when the menu receives a `'close-request'`\n   * message, just before it removes itself from the DOM.\n   *\n   * This signal is not emitted if the menu is already detached from\n   * the DOM when it receives the `'close-request'` message.\n   */\n  get aboutToClose(): ISignal<this, void> {\n    return this._aboutToClose;\n  }\n\n  /**\n   * A signal emitted when a new menu is requested by the user.\n   *\n   * #### Notes\n   * This signal is emitted whenever the user presses the right or left\n   * arrow keys, and a submenu cannot be opened or closed in response.\n   *\n   * This signal is useful when implementing menu bars in order to open\n   * the next or previous menu in response to a user key press.\n   *\n   * This signal is only emitted for the root menu in a hierarchy.\n   */\n  get menuRequested(): ISignal<this, 'next' | 'previous'> {\n    return this._menuRequested;\n  }\n\n  /**\n   * The command registry used by the menu.\n   */\n  readonly commands: CommandRegistry;\n\n  /**\n   * The renderer used by the menu.\n   */\n  readonly renderer: Menu.IRenderer;\n\n  /**\n   * The parent menu of the menu.\n   *\n   * #### Notes\n   * This is `null` unless the menu is an open submenu.\n   */\n  get parentMenu(): Menu | null {\n    return this._parentMenu;\n  }\n\n  /**\n   * The child menu of the menu.\n   *\n   * #### Notes\n   * This is `null` unless the menu has an open submenu.\n   */\n  get childMenu(): Menu | null {\n    return this._childMenu;\n  }\n\n  /**\n   * The root menu of the menu hierarchy.\n   */\n  get rootMenu(): Menu {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let menu: Menu = this;\n    while (menu._parentMenu) {\n      menu = menu._parentMenu;\n    }\n    return menu;\n  }\n\n  /**\n   * The leaf menu of the menu hierarchy.\n   */\n  get leafMenu(): Menu {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let menu: Menu = this;\n    while (menu._childMenu) {\n      menu = menu._childMenu;\n    }\n    return menu;\n  }\n\n  /**\n   * The menu content node.\n   *\n   * #### Notes\n   * This is the node which holds the menu item nodes.\n   *\n   * Modifying this node directly can lead to undefined behavior.\n   */\n  get contentNode(): HTMLUListElement {\n    return this.node.getElementsByClassName(\n      'lm-Menu-content'\n    )[0] as HTMLUListElement;\n  }\n\n  /**\n   * Get the currently active menu item.\n   */\n  get activeItem(): Menu.IItem | null {\n    return this._items[this._activeIndex] || null;\n  }\n\n  /**\n   * Set the currently active menu item.\n   *\n   * #### Notes\n   * If the item cannot be activated, the item will be set to `null`.\n   */\n  set activeItem(value: Menu.IItem | null) {\n    this.activeIndex = value ? this._items.indexOf(value) : -1;\n  }\n\n  /**\n   * Get the index of the currently active menu item.\n   *\n   * #### Notes\n   * This will be `-1` if no menu item is active.\n   */\n  get activeIndex(): number {\n    return this._activeIndex;\n  }\n\n  /**\n   * Set the index of the currently active menu item.\n   *\n   * #### Notes\n   * If the item cannot be activated, the index will be set to `-1`.\n   */\n  set activeIndex(value: number) {\n    // Adjust the value for an out of range index.\n    if (value < 0 || value >= this._items.length) {\n      value = -1;\n    }\n\n    // Ensure the item can be activated.\n    if (value !== -1 && !Private.canActivate(this._items[value])) {\n      value = -1;\n    }\n\n    // Bail if the index will not change.\n    if (this._activeIndex === value) {\n      return;\n    }\n\n    // Update the active index.\n    this._activeIndex = value;\n\n    // Make active element in focus\n    if (\n      this._activeIndex >= 0 &&\n      this.contentNode.childNodes[this._activeIndex]\n    ) {\n      (this.contentNode.childNodes[this._activeIndex] as HTMLElement).focus();\n    }\n\n    // schedule an update of the items.\n    this.update();\n  }\n\n  /**\n   * A read-only array of the menu items in the menu.\n   */\n  get items(): ReadonlyArray<Menu.IItem> {\n    return this._items;\n  }\n\n  /**\n   * Activate the next selectable item in the menu.\n   *\n   * #### Notes\n   * If no item is selectable, the index will be set to `-1`.\n   */\n  activateNextItem(): void {\n    let n = this._items.length;\n    let ai = this._activeIndex;\n    let start = ai < n - 1 ? ai + 1 : 0;\n    let stop = start === 0 ? n - 1 : start - 1;\n    this.activeIndex = ArrayExt.findFirstIndex(\n      this._items,\n      Private.canActivate,\n      start,\n      stop\n    );\n  }\n\n  /**\n   * Activate the previous selectable item in the menu.\n   *\n   * #### Notes\n   * If no item is selectable, the index will be set to `-1`.\n   */\n  activatePreviousItem(): void {\n    let n = this._items.length;\n    let ai = this._activeIndex;\n    let start = ai <= 0 ? n - 1 : ai - 1;\n    let stop = start === n - 1 ? 0 : start + 1;\n    this.activeIndex = ArrayExt.findLastIndex(\n      this._items,\n      Private.canActivate,\n      start,\n      stop\n    );\n  }\n\n  /**\n   * Trigger the active menu item.\n   *\n   * #### Notes\n   * If the active item is a submenu, it will be opened and the first\n   * item will be activated.\n   *\n   * If the active item is a command, the command will be executed.\n   *\n   * If the menu is not attached, this is a no-op.\n   *\n   * If there is no active item, this is a no-op.\n   */\n  triggerActiveItem(): void {\n    // Bail if the menu is not attached.\n    if (!this.isAttached) {\n      return;\n    }\n\n    // Bail if there is no active item.\n    let item = this.activeItem;\n    if (!item) {\n      return;\n    }\n\n    // Cancel the pending timers.\n    this._cancelOpenTimer();\n    this._cancelCloseTimer();\n\n    // If the item is a submenu, open it.\n    if (item.type === 'submenu') {\n      this._openChildMenu(true);\n      return;\n    }\n\n    // Close the root menu before executing the command.\n    this.rootMenu.close();\n\n    // Execute the command for the item.\n    let { command, args } = item;\n    if (this.commands.isEnabled(command, args)) {\n      this.commands.execute(command, args);\n    } else {\n      console.log(`Command '${command}' is disabled.`);\n    }\n  }\n\n  /**\n   * Add a menu item to the end of the menu.\n   *\n   * @param options - The options for creating the menu item.\n   *\n   * @returns The menu item added to the menu.\n   */\n  addItem(options: Menu.IItemOptions): Menu.IItem {\n    return this.insertItem(this._items.length, options);\n  }\n\n  /**\n   * Insert a menu item into the menu at the specified index.\n   *\n   * @param index - The index at which to insert the item.\n   *\n   * @param options - The options for creating the menu item.\n   *\n   * @returns The menu item added to the menu.\n   *\n   * #### Notes\n   * The index will be clamped to the bounds of the items.\n   */\n  insertItem(index: number, options: Menu.IItemOptions): Menu.IItem {\n    // Close the menu if it's attached.\n    if (this.isAttached) {\n      this.close();\n    }\n\n    // Reset the active index.\n    this.activeIndex = -1;\n\n    // Clamp the insert index to the array bounds.\n    let i = Math.max(0, Math.min(index, this._items.length));\n\n    // Create the item for the options.\n    let item = Private.createItem(this, options);\n\n    // Insert the item into the array.\n    ArrayExt.insert(this._items, i, item);\n\n    // Schedule an update of the items.\n    this.update();\n\n    // Return the item added to the menu.\n    return item;\n  }\n\n  /**\n   * Remove an item from the menu.\n   *\n   * @param item - The item to remove from the menu.\n   *\n   * #### Notes\n   * This is a no-op if the item is not in the menu.\n   */\n  removeItem(item: Menu.IItem): void {\n    this.removeItemAt(this._items.indexOf(item));\n  }\n\n  /**\n   * Remove the item at a given index from the menu.\n   *\n   * @param index - The index of the item to remove.\n   *\n   * #### Notes\n   * This is a no-op if the index is out of range.\n   */\n  removeItemAt(index: number): void {\n    // Close the menu if it's attached.\n    if (this.isAttached) {\n      this.close();\n    }\n\n    // Reset the active index.\n    this.activeIndex = -1;\n\n    // Remove the item from the array.\n    let item = ArrayExt.removeAt(this._items, index);\n\n    // Bail if the index is out of range.\n    if (!item) {\n      return;\n    }\n\n    // Schedule an update of the items.\n    this.update();\n  }\n\n  /**\n   * Remove all menu items from the menu.\n   */\n  clearItems(): void {\n    // Close the menu if it's attached.\n    if (this.isAttached) {\n      this.close();\n    }\n\n    // Reset the active index.\n    this.activeIndex = -1;\n\n    // Bail if there is nothing to remove.\n    if (this._items.length === 0) {\n      return;\n    }\n\n    // Clear the items.\n    this._items.length = 0;\n\n    // Schedule an update of the items.\n    this.update();\n  }\n\n  /**\n   * Open the menu at the specified location.\n   *\n   * @param x - The client X coordinate of the menu location.\n   *\n   * @param y - The client Y coordinate of the menu location.\n   *\n   * @param options - The additional options for opening the menu.\n   *\n   * #### Notes\n   * The menu will be opened at the given location unless it will not\n   * fully fit on the screen. If it will not fit, it will be adjusted\n   * to fit naturally on the screen.\n   *\n   * This is a no-op if the menu is already attached to the DOM.\n   */\n  open(x: number, y: number, options: Menu.IOpenOptions = {}): void {\n    // Bail early if the menu is already attached.\n    if (this.isAttached) {\n      return;\n    }\n\n    // Extract the position options.\n    let forceX = options.forceX || false;\n    let forceY = options.forceY || false;\n\n    // Open the menu as a root menu.\n    Private.openRootMenu(this, x, y, forceX, forceY);\n\n    // Activate the menu to accept keyboard input.\n    this.activate();\n  }\n\n  /**\n   * Handle the DOM events for the menu.\n   *\n   * @param event - The DOM event sent to the menu.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the menu's DOM nodes. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'keydown':\n        this._evtKeyDown(event as KeyboardEvent);\n        break;\n      case 'mouseup':\n        this._evtMouseUp(event as MouseEvent);\n        break;\n      case 'mousemove':\n        this._evtMouseMove(event as MouseEvent);\n        break;\n      case 'mouseenter':\n        this._evtMouseEnter(event as MouseEvent);\n        break;\n      case 'mouseleave':\n        this._evtMouseLeave(event as MouseEvent);\n        break;\n      case 'mousedown':\n        this._evtMouseDown(event as MouseEvent);\n        break;\n      case 'contextmenu':\n        event.preventDefault();\n        event.stopPropagation();\n        break;\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    this.node.addEventListener('keydown', this);\n    this.node.addEventListener('mouseup', this);\n    this.node.addEventListener('mousemove', this);\n    this.node.addEventListener('mouseenter', this);\n    this.node.addEventListener('mouseleave', this);\n    this.node.addEventListener('contextmenu', this);\n    document.addEventListener('mousedown', this, true);\n  }\n\n  /**\n   * A message handler invoked on an `'after-detach'` message.\n   */\n  protected onAfterDetach(msg: Message): void {\n    this.node.removeEventListener('keydown', this);\n    this.node.removeEventListener('mouseup', this);\n    this.node.removeEventListener('mousemove', this);\n    this.node.removeEventListener('mouseenter', this);\n    this.node.removeEventListener('mouseleave', this);\n    this.node.removeEventListener('contextmenu', this);\n    document.removeEventListener('mousedown', this, true);\n  }\n\n  /**\n   * A message handler invoked on an `'activate-request'` message.\n   */\n  protected onActivateRequest(msg: Message): void {\n    if (this.isAttached) {\n      this.node.focus();\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    let items = this._items;\n    let renderer = this.renderer;\n    let activeIndex = this._activeIndex;\n    let collapsedFlags = Private.computeCollapsed(items);\n    let content = new Array<VirtualElement>(items.length);\n    for (let i = 0, n = items.length; i < n; ++i) {\n      let item = items[i];\n      let active = i === activeIndex;\n      let collapsed = collapsedFlags[i];\n      content[i] = renderer.renderItem({\n        item,\n        active,\n        collapsed,\n        onfocus: () => {\n          this.activeIndex = i;\n        }\n      });\n    }\n    VirtualDOM.render(content, this.contentNode);\n  }\n\n  /**\n   * A message handler invoked on a `'close-request'` message.\n   */\n  protected onCloseRequest(msg: Message): void {\n    // Cancel the pending timers.\n    this._cancelOpenTimer();\n    this._cancelCloseTimer();\n\n    // Reset the active index.\n    this.activeIndex = -1;\n\n    // Close any open child menu.\n    let childMenu = this._childMenu;\n    if (childMenu) {\n      this._childIndex = -1;\n      this._childMenu = null;\n      childMenu._parentMenu = null;\n      childMenu.close();\n    }\n\n    // Remove this menu from its parent and activate the parent.\n    let parentMenu = this._parentMenu;\n    if (parentMenu) {\n      this._parentMenu = null;\n      parentMenu._childIndex = -1;\n      parentMenu._childMenu = null;\n      parentMenu.activate();\n    }\n\n    // Emit the `aboutToClose` signal if the menu is attached.\n    if (this.isAttached) {\n      this._aboutToClose.emit(undefined);\n    }\n\n    // Finish closing the menu.\n    super.onCloseRequest(msg);\n  }\n\n  /**\n   * Handle the `'keydown'` event for the menu.\n   *\n   * #### Notes\n   * This listener is attached to the menu node.\n   */\n  private _evtKeyDown(event: KeyboardEvent): void {\n    // A menu handles all keydown events.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Fetch the key code for the event.\n    let kc = event.keyCode;\n\n    // Enter\n    if (kc === 13) {\n      this.triggerActiveItem();\n      return;\n    }\n\n    // Escape\n    if (kc === 27) {\n      this.close();\n      return;\n    }\n\n    // Left Arrow\n    if (kc === 37) {\n      if (this._parentMenu) {\n        this.close();\n      } else {\n        this._menuRequested.emit('previous');\n      }\n      return;\n    }\n\n    // Up Arrow\n    if (kc === 38) {\n      this.activatePreviousItem();\n      return;\n    }\n\n    // Right Arrow\n    if (kc === 39) {\n      let item = this.activeItem;\n      if (item && item.type === 'submenu') {\n        this.triggerActiveItem();\n      } else {\n        this.rootMenu._menuRequested.emit('next');\n      }\n      return;\n    }\n\n    // Down Arrow\n    if (kc === 40) {\n      this.activateNextItem();\n      return;\n    }\n\n    // Get the pressed key character.\n    let key = getKeyboardLayout().keyForKeydownEvent(event);\n\n    // Bail if the key is not valid.\n    if (!key) {\n      return;\n    }\n\n    // Search for the next best matching mnemonic item.\n    let start = this._activeIndex + 1;\n    let result = Private.findMnemonic(this._items, key, start);\n\n    // Handle the requested mnemonic based on the search results.\n    // If exactly one mnemonic is matched, that item is triggered.\n    // Otherwise, the next mnemonic is activated if available,\n    // followed by the auto mnemonic if available.\n    if (result.index !== -1 && !result.multiple) {\n      this.activeIndex = result.index;\n      this.triggerActiveItem();\n    } else if (result.index !== -1) {\n      this.activeIndex = result.index;\n    } else if (result.auto !== -1) {\n      this.activeIndex = result.auto;\n    }\n  }\n\n  /**\n   * Handle the `'mouseup'` event for the menu.\n   *\n   * #### Notes\n   * This listener is attached to the menu node.\n   */\n  private _evtMouseUp(event: MouseEvent): void {\n    if (event.button !== 0) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    this.triggerActiveItem();\n  }\n\n  /**\n   * Handle the `'mousemove'` event for the menu.\n   *\n   * #### Notes\n   * This listener is attached to the menu node.\n   */\n  private _evtMouseMove(event: MouseEvent): void {\n    // Hit test the item nodes for the item under the mouse.\n    let index = ArrayExt.findFirstIndex(this.contentNode.children, node => {\n      return ElementExt.hitTest(node, event.clientX, event.clientY);\n    });\n\n    // Bail early if the mouse is already over the active index.\n    if (index === this._activeIndex) {\n      return;\n    }\n\n    // Update and coerce the active index.\n    this.activeIndex = index;\n    index = this.activeIndex;\n\n    // If the index is the current child index, cancel the timers.\n    if (index === this._childIndex) {\n      this._cancelOpenTimer();\n      this._cancelCloseTimer();\n      return;\n    }\n\n    // If a child menu is currently open, start the close timer.\n    if (this._childIndex !== -1) {\n      this._startCloseTimer();\n    }\n\n    // Cancel the open timer to give a full delay for opening.\n    this._cancelOpenTimer();\n\n    // Bail if the active item is not a valid submenu item.\n    let item = this.activeItem;\n    if (!item || item.type !== 'submenu' || !item.submenu) {\n      return;\n    }\n\n    // Start the open timer to open the active item submenu.\n    this._startOpenTimer();\n  }\n\n  /**\n   * Handle the `'mouseenter'` event for the menu.\n   *\n   * #### Notes\n   * This listener is attached to the menu node.\n   */\n  private _evtMouseEnter(event: MouseEvent): void {\n    // Synchronize the active ancestor items.\n    for (let menu = this._parentMenu; menu; menu = menu._parentMenu) {\n      menu._cancelOpenTimer();\n      menu._cancelCloseTimer();\n      menu.activeIndex = menu._childIndex;\n    }\n  }\n\n  /**\n   * Handle the `'mouseleave'` event for the menu.\n   *\n   * #### Notes\n   * This listener is attached to the menu node.\n   */\n  private _evtMouseLeave(event: MouseEvent): void {\n    // Cancel any pending submenu opening.\n    this._cancelOpenTimer();\n\n    // If there is no open child menu, just reset the active index.\n    if (!this._childMenu) {\n      this.activeIndex = -1;\n      return;\n    }\n\n    // If the mouse is over the child menu, cancel the close timer.\n    let { clientX, clientY } = event;\n    if (ElementExt.hitTest(this._childMenu.node, clientX, clientY)) {\n      this._cancelCloseTimer();\n      return;\n    }\n\n    // Otherwise, reset the active index and start the close timer.\n    this.activeIndex = -1;\n    this._startCloseTimer();\n  }\n\n  /**\n   * Handle the `'mousedown'` event for the menu.\n   *\n   * #### Notes\n   * This listener is attached to the document node.\n   */\n  private _evtMouseDown(event: MouseEvent): void {\n    // Bail if the menu is not a root menu.\n    if (this._parentMenu) {\n      return;\n    }\n\n    // The mouse button which is pressed is irrelevant. If the press\n    // is not on a menu, the entire hierarchy is closed and the event\n    // is allowed to propagate. This allows other code to act on the\n    // event, such as focusing the clicked element.\n    if (Private.hitTestMenus(this, event.clientX, event.clientY)) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      this.close();\n    }\n  }\n\n  /**\n   * Open the child menu at the active index immediately.\n   *\n   * If a different child menu is already open, it will be closed,\n   * even if the active item is not a valid submenu.\n   */\n  private _openChildMenu(activateFirst = false): void {\n    // If the item is not a valid submenu, close the child menu.\n    let item = this.activeItem;\n    if (!item || item.type !== 'submenu' || !item.submenu) {\n      this._closeChildMenu();\n      return;\n    }\n\n    // Do nothing if the child menu will not change.\n    let submenu = item.submenu;\n    if (submenu === this._childMenu) {\n      return;\n    }\n\n    // Prior to any DOM modifications save window data\n    Menu.saveWindowData();\n\n    // Ensure the current child menu is closed.\n    this._closeChildMenu();\n\n    // Update the private child state.\n    this._childMenu = submenu;\n    this._childIndex = this._activeIndex;\n\n    // Set the parent menu reference for the child.\n    submenu._parentMenu = this;\n\n    // Ensure the menu is updated and lookup the item node.\n    MessageLoop.sendMessage(this, Widget.Msg.UpdateRequest);\n    let itemNode = this.contentNode.children[this._activeIndex];\n\n    // Open the submenu at the active node.\n    Private.openSubmenu(submenu, itemNode as HTMLElement);\n\n    // Activate the first item if desired.\n    if (activateFirst) {\n      submenu.activeIndex = -1;\n      submenu.activateNextItem();\n    }\n\n    // Activate the child menu.\n    submenu.activate();\n  }\n\n  /**\n   * Close the child menu immediately.\n   *\n   * This is a no-op if a child menu is not open.\n   */\n  private _closeChildMenu(): void {\n    if (this._childMenu) {\n      this._childMenu.close();\n    }\n  }\n\n  /**\n   * Start the open timer, unless it is already pending.\n   */\n  private _startOpenTimer(): void {\n    if (this._openTimerID === 0) {\n      this._openTimerID = window.setTimeout(() => {\n        this._openTimerID = 0;\n        this._openChildMenu();\n      }, Private.TIMER_DELAY);\n    }\n  }\n\n  /**\n   * Start the close timer, unless it is already pending.\n   */\n  private _startCloseTimer(): void {\n    if (this._closeTimerID === 0) {\n      this._closeTimerID = window.setTimeout(() => {\n        this._closeTimerID = 0;\n        this._closeChildMenu();\n      }, Private.TIMER_DELAY);\n    }\n  }\n\n  /**\n   * Cancel the open timer, if the timer is pending.\n   */\n  private _cancelOpenTimer(): void {\n    if (this._openTimerID !== 0) {\n      clearTimeout(this._openTimerID);\n      this._openTimerID = 0;\n    }\n  }\n\n  /**\n   * Cancel the close timer, if the timer is pending.\n   */\n  private _cancelCloseTimer(): void {\n    if (this._closeTimerID !== 0) {\n      clearTimeout(this._closeTimerID);\n      this._closeTimerID = 0;\n    }\n  }\n\n  /**\n   * Save window data used for menu positioning in transient cache.\n   *\n   * In order to avoid layout trashing it is recommended to invoke this\n   * method immediately prior to opening the menu and any DOM modifications\n   * (like closing previously visible menu, or adding a class to menu widget).\n   *\n   * The transient cache will be released upon `open()` call.\n   */\n  static saveWindowData(): void {\n    Private.saveWindowData();\n  }\n\n  private _childIndex = -1;\n  private _activeIndex = -1;\n  private _openTimerID = 0;\n  private _closeTimerID = 0;\n  private _items: Menu.IItem[] = [];\n  private _childMenu: Menu | null = null;\n  private _parentMenu: Menu | null = null;\n  private _aboutToClose = new Signal<this, void>(this);\n  private _menuRequested = new Signal<this, 'next' | 'previous'>(this);\n}\n\n/**\n * The namespace for the `Menu` class statics.\n */\nexport namespace Menu {\n  /**\n   * An options object for creating a menu.\n   */\n  export interface IOptions {\n    /**\n     * The command registry for use with the menu.\n     */\n    commands: CommandRegistry;\n\n    /**\n     * A custom renderer for use with the menu.\n     *\n     * The default is a shared renderer instance.\n     */\n    renderer?: IRenderer;\n  }\n\n  /**\n   * An options object for the `open` method on a menu.\n   */\n  export interface IOpenOptions {\n    /**\n     * Whether to force the X position of the menu.\n     *\n     * Setting to `true` will disable the logic which repositions the\n     * X coordinate of the menu if it will not fit entirely on screen.\n     *\n     * The default is `false`.\n     */\n    forceX?: boolean;\n\n    /**\n     * Whether to force the Y position of the menu.\n     *\n     * Setting to `true` will disable the logic which repositions the\n     * Y coordinate of the menu if it will not fit entirely on screen.\n     *\n     * The default is `false`.\n     */\n    forceY?: boolean;\n  }\n\n  /**\n   * A type alias for a menu item type.\n   */\n  export type ItemType = 'command' | 'submenu' | 'separator';\n\n  /**\n   * An options object for creating a menu item.\n   */\n  export interface IItemOptions {\n    /**\n     * The type of the menu item.\n     *\n     * The default value is `'command'`.\n     */\n    type?: ItemType;\n\n    /**\n     * The command to execute when the item is triggered.\n     *\n     * The default value is an empty string.\n     */\n    command?: string;\n\n    /**\n     * The arguments for the command.\n     *\n     * The default value is an empty object.\n     */\n    args?: ReadonlyJSONObject;\n\n    /**\n     * The submenu for a `'submenu'` type item.\n     *\n     * The default value is `null`.\n     */\n    submenu?: Menu | null;\n  }\n\n  /**\n   * An object which represents a menu item.\n   *\n   * #### Notes\n   * Item objects are created automatically by a menu.\n   */\n  export interface IItem {\n    /**\n     * The type of the menu item.\n     */\n    readonly type: ItemType;\n\n    /**\n     * The command to execute when the item is triggered.\n     */\n    readonly command: string;\n\n    /**\n     * The arguments for the command.\n     */\n    readonly args: ReadonlyJSONObject;\n\n    /**\n     * The submenu for a `'submenu'` type item.\n     */\n    readonly submenu: Menu | null;\n\n    /**\n     * The display label for the menu item.\n     */\n    readonly label: string;\n\n    /**\n     * The mnemonic index for the menu item.\n     */\n    readonly mnemonic: number;\n\n    /**\n     * The icon renderer for the menu item.\n     */\n    readonly icon: VirtualElement.IRenderer | undefined;\n\n    /**\n     * The icon class for the menu item.\n     */\n    readonly iconClass: string;\n\n    /**\n     * The icon label for the menu item.\n     */\n    readonly iconLabel: string;\n\n    /**\n     * The display caption for the menu item.\n     */\n    readonly caption: string;\n\n    /**\n     * The extra class name for the menu item.\n     */\n    readonly className: string;\n\n    /**\n     * The dataset for the menu item.\n     */\n    readonly dataset: CommandRegistry.Dataset;\n\n    /**\n     * Whether the menu item is enabled.\n     */\n    readonly isEnabled: boolean;\n\n    /**\n     * Whether the menu item is toggled.\n     */\n    readonly isToggled: boolean;\n\n    /**\n     * Whether the menu item is visible.\n     */\n    readonly isVisible: boolean;\n\n    /**\n     * The key binding for the menu item.\n     */\n    readonly keyBinding: CommandRegistry.IKeyBinding | null;\n  }\n\n  /**\n   * An object which holds the data to render a menu item.\n   */\n  export interface IRenderData {\n    /**\n     * The item to be rendered.\n     */\n    readonly item: IItem;\n\n    /**\n     * Whether the item is the active item.\n     */\n    readonly active: boolean;\n\n    /**\n     * Whether the item should be collapsed.\n     */\n    readonly collapsed: boolean;\n\n    /**\n     * Handler for when element is in focus.\n     */\n    readonly onfocus?: () => void;\n  }\n\n  /**\n   * A renderer for use with a menu.\n   */\n  export interface IRenderer {\n    /**\n     * Render the virtual element for a menu item.\n     *\n     * @param data - The data to use for rendering the item.\n     *\n     * @returns A virtual element representing the item.\n     */\n    renderItem(data: IRenderData): VirtualElement;\n  }\n\n  /**\n   * The default implementation of `IRenderer`.\n   *\n   * #### Notes\n   * Subclasses are free to reimplement rendering methods as needed.\n   */\n  export class Renderer implements IRenderer {\n    /**\n     * Render the virtual element for a menu item.\n     *\n     * @param data - The data to use for rendering the item.\n     *\n     * @returns A virtual element representing the item.\n     */\n    renderItem(data: IRenderData): VirtualElement {\n      let className = this.createItemClass(data);\n      let dataset = this.createItemDataset(data);\n      let aria = this.createItemARIA(data);\n      return h.li(\n        {\n          className,\n          dataset,\n          tabindex: '0',\n          onfocus: data.onfocus,\n          ...aria\n        },\n        this.renderIcon(data),\n        this.renderLabel(data),\n        this.renderShortcut(data),\n        this.renderSubmenu(data)\n      );\n    }\n\n    /**\n     * Render the icon element for a menu item.\n     *\n     * @param data - The data to use for rendering the icon.\n     *\n     * @returns A virtual element representing the item icon.\n     */\n    renderIcon(data: IRenderData): VirtualElement {\n      let className = this.createIconClass(data);\n\n      // If data.item.icon is undefined, it will be ignored.\n      return h.div({ className }, data.item.icon!, data.item.iconLabel);\n    }\n\n    /**\n     * Render the label element for a menu item.\n     *\n     * @param data - The data to use for rendering the label.\n     *\n     * @returns A virtual element representing the item label.\n     */\n    renderLabel(data: IRenderData): VirtualElement {\n      let content = this.formatLabel(data);\n      return h.div({ className: 'lm-Menu-itemLabel' }, content);\n    }\n\n    /**\n     * Render the shortcut element for a menu item.\n     *\n     * @param data - The data to use for rendering the shortcut.\n     *\n     * @returns A virtual element representing the item shortcut.\n     */\n    renderShortcut(data: IRenderData): VirtualElement {\n      let content = this.formatShortcut(data);\n      return h.div({ className: 'lm-Menu-itemShortcut' }, content);\n    }\n\n    /**\n     * Render the submenu icon element for a menu item.\n     *\n     * @param data - The data to use for rendering the submenu icon.\n     *\n     * @returns A virtual element representing the submenu icon.\n     */\n    renderSubmenu(data: IRenderData): VirtualElement {\n      return h.div({ className: 'lm-Menu-itemSubmenuIcon' });\n    }\n\n    /**\n     * Create the class name for the menu item.\n     *\n     * @param data - The data to use for the class name.\n     *\n     * @returns The full class name for the menu item.\n     */\n    createItemClass(data: IRenderData): string {\n      // Setup the initial class name.\n      let name = 'lm-Menu-item';\n\n      // Add the boolean state classes.\n      if (!data.item.isEnabled) {\n        name += ' lm-mod-disabled';\n      }\n      if (data.item.isToggled) {\n        name += ' lm-mod-toggled';\n      }\n      if (!data.item.isVisible) {\n        name += ' lm-mod-hidden';\n      }\n      if (data.active) {\n        name += ' lm-mod-active';\n      }\n      if (data.collapsed) {\n        name += ' lm-mod-collapsed';\n      }\n\n      // Add the extra class.\n      let extra = data.item.className;\n      if (extra) {\n        name += ` ${extra}`;\n      }\n\n      // Return the complete class name.\n      return name;\n    }\n\n    /**\n     * Create the dataset for the menu item.\n     *\n     * @param data - The data to use for creating the dataset.\n     *\n     * @returns The dataset for the menu item.\n     */\n    createItemDataset(data: IRenderData): ElementDataset {\n      let result: ElementDataset;\n      let { type, command, dataset } = data.item;\n      if (type === 'command') {\n        result = { ...dataset, type, command };\n      } else {\n        result = { ...dataset, type };\n      }\n      return result;\n    }\n\n    /**\n     * Create the class name for the menu item icon.\n     *\n     * @param data - The data to use for the class name.\n     *\n     * @returns The full class name for the item icon.\n     */\n    createIconClass(data: IRenderData): string {\n      let name = 'lm-Menu-itemIcon';\n      let extra = data.item.iconClass;\n      return extra ? `${name} ${extra}` : name;\n    }\n\n    /**\n     * Create the aria attributes for menu item.\n     *\n     * @param data - The data to use for the aria attributes.\n     *\n     * @returns The aria attributes object for the item.\n     */\n    createItemARIA(data: IRenderData): ElementARIAAttrs {\n      let aria: { [T in ARIAAttrNames]?: string } = {};\n      switch (data.item.type) {\n        case 'separator':\n          aria.role = 'presentation';\n          break;\n        case 'submenu':\n          aria['aria-haspopup'] = 'true';\n          if (!data.item.isEnabled) {\n            aria['aria-disabled'] = 'true';\n          }\n          break;\n        default:\n          if (!data.item.isEnabled) {\n            aria['aria-disabled'] = 'true';\n          }\n          aria.role = 'menuitem';\n      }\n      return aria;\n    }\n\n    /**\n     * Create the render content for the label node.\n     *\n     * @param data - The data to use for the label content.\n     *\n     * @returns The content to add to the label node.\n     */\n    formatLabel(data: IRenderData): h.Child {\n      // Fetch the label text and mnemonic index.\n      let { label, mnemonic } = data.item;\n\n      // If the index is out of range, do not modify the label.\n      if (mnemonic < 0 || mnemonic >= label.length) {\n        return label;\n      }\n\n      // Split the label into parts.\n      let prefix = label.slice(0, mnemonic);\n      let suffix = label.slice(mnemonic + 1);\n      let char = label[mnemonic];\n\n      // Wrap the mnemonic character in a span.\n      let span = h.span({ className: 'lm-Menu-itemMnemonic' }, char);\n\n      // Return the content parts.\n      return [prefix, span, suffix];\n    }\n\n    /**\n     * Create the render content for the shortcut node.\n     *\n     * @param data - The data to use for the shortcut content.\n     *\n     * @returns The content to add to the shortcut node.\n     */\n    formatShortcut(data: IRenderData): h.Child {\n      let kb = data.item.keyBinding;\n      return kb ? CommandRegistry.formatKeystroke(kb.keys) : null;\n    }\n  }\n\n  /**\n   * The default `Renderer` instance.\n   */\n  export const defaultRenderer = new Renderer();\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * The ms delay for opening and closing a submenu.\n   */\n  export const TIMER_DELAY = 300;\n\n  /**\n   * The horizontal pixel overlap for an open submenu.\n   */\n  export const SUBMENU_OVERLAP = 3;\n\n  let transientWindowDataCache: IWindowData | null = null;\n  let transientCacheCounter: number = 0;\n\n  function getWindowData(): IWindowData {\n    // if transient cache is in use, take one from it\n    if (transientCacheCounter > 0) {\n      transientCacheCounter--;\n      return transientWindowDataCache!;\n    }\n    return _getWindowData();\n  }\n\n  /**\n   * Store window data in transient cache.\n   *\n   * The transient cache will be released upon `getWindowData()` call.\n   * If this function is called multiple times, the cache will be\n   * retained until as many calls to `getWindowData()` were made.\n   *\n   * Note: should be called before any DOM modifications.\n   */\n  export function saveWindowData(): void {\n    transientWindowDataCache = _getWindowData();\n    transientCacheCounter++;\n  }\n\n  /**\n   * Create the DOM node for a menu.\n   */\n  export function createNode(): HTMLDivElement {\n    let node = document.createElement('div');\n    let content = document.createElement('ul');\n    content.className = 'lm-Menu-content';\n    node.appendChild(content);\n    content.setAttribute('role', 'menu');\n    node.tabIndex = 0;\n    return node;\n  }\n\n  /**\n   * Test whether a menu item can be activated.\n   */\n  export function canActivate(item: Menu.IItem): boolean {\n    return item.type !== 'separator' && item.isEnabled && item.isVisible;\n  }\n\n  /**\n   * Create a new menu item for an owner menu.\n   */\n  export function createItem(\n    owner: Menu,\n    options: Menu.IItemOptions\n  ): Menu.IItem {\n    return new MenuItem(owner.commands, options);\n  }\n\n  /**\n   * Hit test a menu hierarchy starting at the given root.\n   */\n  export function hitTestMenus(menu: Menu, x: number, y: number): boolean {\n    for (let temp: Menu | null = menu; temp; temp = temp.childMenu) {\n      if (ElementExt.hitTest(temp.node, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Compute which extra separator items should be collapsed.\n   */\n  export function computeCollapsed(\n    items: ReadonlyArray<Menu.IItem>\n  ): boolean[] {\n    // Allocate the return array and fill it with `false`.\n    let result = new Array<boolean>(items.length);\n    ArrayExt.fill(result, false);\n\n    // Collapse the leading separators.\n    let k1 = 0;\n    let n = items.length;\n    for (; k1 < n; ++k1) {\n      let item = items[k1];\n      if (!item.isVisible) {\n        continue;\n      }\n      if (item.type !== 'separator') {\n        break;\n      }\n      result[k1] = true;\n    }\n\n    // Hide the trailing separators.\n    let k2 = n - 1;\n    for (; k2 >= 0; --k2) {\n      let item = items[k2];\n      if (!item.isVisible) {\n        continue;\n      }\n      if (item.type !== 'separator') {\n        break;\n      }\n      result[k2] = true;\n    }\n\n    // Hide the remaining consecutive separators.\n    let hide = false;\n    while (++k1 < k2) {\n      let item = items[k1];\n      if (!item.isVisible) {\n        continue;\n      }\n      if (item.type !== 'separator') {\n        hide = false;\n      } else if (hide) {\n        result[k1] = true;\n      } else {\n        hide = true;\n      }\n    }\n\n    // Return the resulting flags.\n    return result;\n  }\n\n  function _getWindowData(): IWindowData {\n    return {\n      pageXOffset: window.pageXOffset,\n      pageYOffset: window.pageYOffset,\n      clientWidth: document.documentElement.clientWidth,\n      clientHeight: document.documentElement.clientHeight\n    };\n  }\n\n  /**\n   * Open a menu as a root menu at the target location.\n   */\n  export function openRootMenu(\n    menu: Menu,\n    x: number,\n    y: number,\n    forceX: boolean,\n    forceY: boolean\n  ): void {\n    // Get the current position and size of the main viewport.\n    const windowData = getWindowData();\n    let px = windowData.pageXOffset;\n    let py = windowData.pageYOffset;\n    let cw = windowData.clientWidth;\n    let ch = windowData.clientHeight;\n\n    // Ensure the menu is updated before attaching and measuring.\n    MessageLoop.sendMessage(menu, Widget.Msg.UpdateRequest);\n\n    // Compute the maximum allowed height for the menu.\n    let maxHeight = ch - (forceY ? y : 0);\n\n    // Fetch common variables.\n    let node = menu.node;\n    let style = node.style;\n\n    // Clear the menu geometry and prepare it for measuring.\n    style.opacity = '0';\n    style.maxHeight = `${maxHeight}px`;\n\n    // Attach the menu to the document.\n    Widget.attach(menu, document.body);\n\n    // Measure the size of the menu.\n    let { width, height } = node.getBoundingClientRect();\n\n    // Adjust the X position of the menu to fit on-screen.\n    if (!forceX && x + width > px + cw) {\n      x = px + cw - width;\n    }\n\n    // Adjust the Y position of the menu to fit on-screen.\n    if (!forceY && y + height > py + ch) {\n      if (y > py + ch) {\n        y = py + ch - height;\n      } else {\n        y = y - height;\n      }\n    }\n\n    // Update the position of the menu to the computed position.\n    style.transform = `translate(${Math.max(0, x)}px, ${Math.max(0, y)}px`;\n\n    // Finally, make the menu visible on the screen.\n    style.opacity = '1';\n  }\n\n  /**\n   * Open a menu as a submenu using an item node for positioning.\n   */\n  export function openSubmenu(submenu: Menu, itemNode: HTMLElement): void {\n    // Get the current position and size of the main viewport.\n    const windowData = getWindowData();\n    let px = windowData.pageXOffset;\n    let py = windowData.pageYOffset;\n    let cw = windowData.clientWidth;\n    let ch = windowData.clientHeight;\n\n    // Ensure the menu is updated before opening.\n    MessageLoop.sendMessage(submenu, Widget.Msg.UpdateRequest);\n\n    // Compute the maximum allowed height for the menu.\n    let maxHeight = ch;\n\n    // Fetch common variables.\n    let node = submenu.node;\n    let style = node.style;\n\n    // Clear the menu geometry and prepare it for measuring.\n    style.opacity = '0';\n    style.maxHeight = `${maxHeight}px`;\n\n    // Attach the menu to the document.\n    Widget.attach(submenu, document.body);\n\n    // Measure the size of the menu.\n    let { width, height } = node.getBoundingClientRect();\n\n    // Compute the box sizing for the menu.\n    let box = ElementExt.boxSizing(submenu.node);\n\n    // Get the bounding rect for the target item node.\n    let itemRect = itemNode.getBoundingClientRect();\n\n    // Compute the target X position.\n    let x = itemRect.right - SUBMENU_OVERLAP;\n\n    // Adjust the X position to fit on the screen.\n    if (x + width > px + cw) {\n      x = itemRect.left + SUBMENU_OVERLAP - width;\n    }\n\n    // Compute the target Y position.\n    let y = itemRect.top - box.borderTop - box.paddingTop;\n\n    // Adjust the Y position to fit on the screen.\n    if (y + height > py + ch) {\n      y = itemRect.bottom + box.borderBottom + box.paddingBottom - height;\n    }\n\n    // Update the position of the menu to the computed position.\n    style.transform = `translate(${Math.max(0, x)}px, ${Math.max(0, y)}px`;\n\n    // Finally, make the menu visible on the screen.\n    style.opacity = '1';\n  }\n\n  /**\n   * The results of a mnemonic search.\n   */\n  export interface IMnemonicResult {\n    /**\n     * The index of the first matching mnemonic item, or `-1`.\n     */\n    index: number;\n\n    /**\n     * Whether multiple mnemonic items matched.\n     */\n    multiple: boolean;\n\n    /**\n     * The index of the first auto matched non-mnemonic item.\n     */\n    auto: number;\n  }\n\n  /**\n   * Find the best matching mnemonic item.\n   *\n   * The search starts at the given index and wraps around.\n   */\n  export function findMnemonic(\n    items: ReadonlyArray<Menu.IItem>,\n    key: string,\n    start: number\n  ): IMnemonicResult {\n    // Setup the result variables.\n    let index = -1;\n    let auto = -1;\n    let multiple = false;\n\n    // Normalize the key to upper case.\n    let upperKey = key.toUpperCase();\n\n    // Search the items from the given start index.\n    for (let i = 0, n = items.length; i < n; ++i) {\n      // Compute the wrapped index.\n      let k = (i + start) % n;\n\n      // Lookup the item\n      let item = items[k];\n\n      // Ignore items which cannot be activated.\n      if (!canActivate(item)) {\n        continue;\n      }\n\n      // Ignore items with an empty label.\n      let label = item.label;\n      if (label.length === 0) {\n        continue;\n      }\n\n      // Lookup the mnemonic index for the label.\n      let mn = item.mnemonic;\n\n      // Handle a valid mnemonic index.\n      if (mn >= 0 && mn < label.length) {\n        if (label[mn].toUpperCase() === upperKey) {\n          if (index === -1) {\n            index = k;\n          } else {\n            multiple = true;\n          }\n        }\n        continue;\n      }\n\n      // Finally, handle the auto index if possible.\n      if (auto === -1 && label[0].toUpperCase() === upperKey) {\n        auto = k;\n      }\n    }\n\n    // Return the search results.\n    return { index, multiple, auto };\n  }\n\n  /**\n   * A concrete implementation of `Menu.IItem`.\n   */\n  class MenuItem implements Menu.IItem {\n    /**\n     * Construct a new menu item.\n     */\n    constructor(commands: CommandRegistry, options: Menu.IItemOptions) {\n      this._commands = commands;\n      this.type = options.type || 'command';\n      this.command = options.command || '';\n      this.args = options.args || JSONExt.emptyObject;\n      this.submenu = options.submenu || null;\n    }\n\n    /**\n     * The type of the menu item.\n     */\n    readonly type: Menu.ItemType;\n\n    /**\n     * The command to execute when the item is triggered.\n     */\n    readonly command: string;\n\n    /**\n     * The arguments for the command.\n     */\n    readonly args: ReadonlyJSONObject;\n\n    /**\n     * The submenu for a `'submenu'` type item.\n     */\n    readonly submenu: Menu | null;\n\n    /**\n     * The display label for the menu item.\n     */\n    get label(): string {\n      if (this.type === 'command') {\n        return this._commands.label(this.command, this.args);\n      }\n      if (this.type === 'submenu' && this.submenu) {\n        return this.submenu.title.label;\n      }\n      return '';\n    }\n\n    /**\n     * The mnemonic index for the menu item.\n     */\n    get mnemonic(): number {\n      if (this.type === 'command') {\n        return this._commands.mnemonic(this.command, this.args);\n      }\n      if (this.type === 'submenu' && this.submenu) {\n        return this.submenu.title.mnemonic;\n      }\n      return -1;\n    }\n\n    /**\n     * The icon renderer for the menu item.\n     */\n    get icon(): VirtualElement.IRenderer | undefined {\n      if (this.type === 'command') {\n        return this._commands.icon(this.command, this.args);\n      }\n      if (this.type === 'submenu' && this.submenu) {\n        return this.submenu.title.icon;\n      }\n      return undefined;\n    }\n\n    /**\n     * The icon class for the menu item.\n     */\n    get iconClass(): string {\n      if (this.type === 'command') {\n        return this._commands.iconClass(this.command, this.args);\n      }\n      if (this.type === 'submenu' && this.submenu) {\n        return this.submenu.title.iconClass;\n      }\n      return '';\n    }\n\n    /**\n     * The icon label for the menu item.\n     */\n    get iconLabel(): string {\n      if (this.type === 'command') {\n        return this._commands.iconLabel(this.command, this.args);\n      }\n      if (this.type === 'submenu' && this.submenu) {\n        return this.submenu.title.iconLabel;\n      }\n      return '';\n    }\n\n    /**\n     * The display caption for the menu item.\n     */\n    get caption(): string {\n      if (this.type === 'command') {\n        return this._commands.caption(this.command, this.args);\n      }\n      if (this.type === 'submenu' && this.submenu) {\n        return this.submenu.title.caption;\n      }\n      return '';\n    }\n\n    /**\n     * The extra class name for the menu item.\n     */\n    get className(): string {\n      if (this.type === 'command') {\n        return this._commands.className(this.command, this.args);\n      }\n      if (this.type === 'submenu' && this.submenu) {\n        return this.submenu.title.className;\n      }\n      return '';\n    }\n\n    /**\n     * The dataset for the menu item.\n     */\n    get dataset(): CommandRegistry.Dataset {\n      if (this.type === 'command') {\n        return this._commands.dataset(this.command, this.args);\n      }\n      if (this.type === 'submenu' && this.submenu) {\n        return this.submenu.title.dataset;\n      }\n      return {};\n    }\n\n    /**\n     * Whether the menu item is enabled.\n     */\n    get isEnabled(): boolean {\n      if (this.type === 'command') {\n        return this._commands.isEnabled(this.command, this.args);\n      }\n      if (this.type === 'submenu') {\n        return this.submenu !== null;\n      }\n      return true;\n    }\n\n    /**\n     * Whether the menu item is toggled.\n     */\n    get isToggled(): boolean {\n      if (this.type === 'command') {\n        return this._commands.isToggled(this.command, this.args);\n      }\n      return false;\n    }\n\n    /**\n     * Whether the menu item is visible.\n     */\n    get isVisible(): boolean {\n      if (this.type === 'command') {\n        return this._commands.isVisible(this.command, this.args);\n      }\n      if (this.type === 'submenu') {\n        return this.submenu !== null;\n      }\n      return true;\n    }\n\n    /**\n     * The key binding for the menu item.\n     */\n    get keyBinding(): CommandRegistry.IKeyBinding | null {\n      if (this.type === 'command') {\n        let { command, args } = this;\n        return (\n          ArrayExt.findLastValue(this._commands.keyBindings, kb => {\n            return kb.command === command && JSONExt.deepEqual(kb.args, args);\n          }) || null\n        );\n      }\n      return null;\n    }\n\n    private _commands: CommandRegistry;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { ArrayExt } from '@lumino/algorithm';\n\nimport { CommandRegistry } from '@lumino/commands';\n\nimport { DisposableDelegate, IDisposable } from '@lumino/disposable';\n\nimport { Selector } from '@lumino/domutils';\n\nimport { Menu } from './menu';\n\n/**\n * An object which implements a universal context menu.\n *\n * #### Notes\n * The items shown in the context menu are determined by CSS selector\n * matching against the DOM hierarchy at the site of the mouse click.\n * This is similar in concept to how keyboard shortcuts are matched\n * in the command registry.\n */\nexport class ContextMenu {\n  /**\n   * Construct a new context menu.\n   *\n   * @param options - The options for initializing the menu.\n   */\n  constructor(options: ContextMenu.IOptions) {\n    const { groupByTarget, sortBySelector, ...others } = options;\n    this.menu = new Menu(others);\n    this._groupByTarget = groupByTarget !== false;\n    this._sortBySelector = sortBySelector !== false;\n  }\n\n  /**\n   * The menu widget which displays the matched context items.\n   */\n  readonly menu: Menu;\n\n  /**\n   * Add an item to the context menu.\n   *\n   * @param options - The options for creating the item.\n   *\n   * @returns A disposable which will remove the item from the menu.\n   */\n  addItem(options: ContextMenu.IItemOptions): IDisposable {\n    // Create an item from the given options.\n    let item = Private.createItem(options, this._idTick++);\n\n    // Add the item to the internal array.\n    this._items.push(item);\n\n    // Return a disposable which will remove the item.\n    return new DisposableDelegate(() => {\n      ArrayExt.removeFirstOf(this._items, item);\n    });\n  }\n\n  /**\n   * Open the context menu in response to a `'contextmenu'` event.\n   *\n   * @param event - The `'contextmenu'` event of interest.\n   *\n   * @returns `true` if the menu was opened, or `false` if no items\n   *   matched the event and the menu was not opened.\n   *\n   * #### Notes\n   * This method will populate the context menu with items which match\n   * the propagation path of the event, then open the menu at the mouse\n   * position indicated by the event.\n   */\n  open(event: MouseEvent): boolean {\n    // Prior to any DOM modifications update the window data.\n    Menu.saveWindowData();\n\n    // Clear the current contents of the context menu.\n    this.menu.clearItems();\n\n    // Bail early if there are no items to match.\n    if (this._items.length === 0) {\n      return false;\n    }\n\n    // Find the matching items for the event.\n    let items = Private.matchItems(\n      this._items,\n      event,\n      this._groupByTarget,\n      this._sortBySelector\n    );\n\n    // Bail if there are no matching items.\n    if (!items || items.length === 0) {\n      return false;\n    }\n\n    // Add the filtered items to the menu.\n    for (const item of items) {\n      this.menu.addItem(item);\n    }\n\n    // Open the context menu at the current mouse position.\n    this.menu.open(event.clientX, event.clientY);\n\n    // Indicate success.\n    return true;\n  }\n\n  private _groupByTarget: boolean = true;\n  private _idTick = 0;\n  private _items: Private.IItem[] = [];\n  private _sortBySelector: boolean = true;\n}\n\n/**\n * The namespace for the `ContextMenu` class statics.\n */\nexport namespace ContextMenu {\n  /**\n   * An options object for initializing a context menu.\n   */\n  export interface IOptions {\n    /**\n     * The command registry to use with the context menu.\n     */\n    commands: CommandRegistry;\n\n    /**\n     * A custom renderer for use with the context menu.\n     */\n    renderer?: Menu.IRenderer;\n\n    /**\n     * Whether to sort by selector and rank or only rank.\n     *\n     * Default true.\n     */\n    sortBySelector?: boolean;\n\n    /**\n     * Whether to group items following the DOM hierarchy.\n     *\n     * Default true.\n     *\n     * #### Note\n     * If true, when the mouse event occurs on element `span` within `div.top`,\n     * the items matching `div.top` will be shown before the ones matching `body`.\n     */\n    groupByTarget?: boolean;\n  }\n\n  /**\n   * An options object for creating a context menu item.\n   */\n  export interface IItemOptions extends Menu.IItemOptions {\n    /**\n     * The CSS selector for the context menu item.\n     *\n     * The context menu item will only be displayed in the context menu\n     * when the selector matches a node on the propagation path of the\n     * contextmenu event. This allows the menu item to be restricted to\n     * user-defined contexts.\n     *\n     * The selector must not contain commas.\n     */\n    selector: string;\n\n    /**\n     * The rank for the item.\n     *\n     * The rank is used as a tie-breaker when ordering context menu\n     * items for display. Items are sorted in the following order:\n     *   1. Depth in the DOM tree (deeper is better)\n     *   2. Selector specificity (higher is better)\n     *   3. Rank (lower is better)\n     *   4. Insertion order\n     *\n     * The default rank is `Infinity`.\n     */\n    rank?: number;\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A normalized item for a context menu.\n   */\n  export interface IItem extends Menu.IItemOptions {\n    /**\n     * The selector for the item.\n     */\n    selector: string;\n\n    /**\n     * The rank for the item.\n     */\n    rank: number;\n\n    /**\n     * The tie-breaking id for the item.\n     */\n    id: number;\n  }\n\n  /**\n   * Create a normalized context menu item from an options object.\n   */\n  export function createItem(\n    options: ContextMenu.IItemOptions,\n    id: number\n  ): IItem {\n    let selector = validateSelector(options.selector);\n    let rank = options.rank !== undefined ? options.rank : Infinity;\n    return { ...options, selector, rank, id };\n  }\n\n  /**\n   * Find the items which match a context menu event.\n   *\n   * The results are sorted by DOM level, specificity, and rank.\n   */\n  export function matchItems(\n    items: IItem[],\n    event: MouseEvent,\n    groupByTarget: boolean,\n    sortBySelector: boolean\n  ): IItem[] | null {\n    // Look up the target of the event.\n    let target = event.target as Element | null;\n\n    // Bail if there is no target.\n    if (!target) {\n      return null;\n    }\n\n    // Look up the current target of the event.\n    let currentTarget = event.currentTarget as Element | null;\n\n    // Bail if there is no current target.\n    if (!currentTarget) {\n      return null;\n    }\n\n    // There are some third party libraries that cause the `target` to\n    // be detached from the DOM before lumino can process the event.\n    // If that happens, search for a new target node by point. If that\n    // node is still dangling, bail.\n    if (!currentTarget.contains(target)) {\n      target = document.elementFromPoint(event.clientX, event.clientY);\n      if (!target || !currentTarget.contains(target)) {\n        return null;\n      }\n    }\n\n    // Set up the result array.\n    let result: IItem[] = [];\n\n    // Copy the items array to allow in-place modification.\n    let availableItems: Array<IItem | null> = items.slice();\n\n    // Walk up the DOM hierarchy searching for matches.\n    while (target !== null) {\n      // Set up the match array for this DOM level.\n      let matches: IItem[] = [];\n\n      // Search the remaining items for matches.\n      for (let i = 0, n = availableItems.length; i < n; ++i) {\n        // Fetch the item.\n        let item = availableItems[i];\n\n        // Skip items which are already consumed.\n        if (!item) {\n          continue;\n        }\n\n        // Skip items which do not match the element.\n        if (!Selector.matches(target, item.selector)) {\n          continue;\n        }\n\n        // Add the matched item to the result for this DOM level.\n        matches.push(item);\n\n        // Mark the item as consumed.\n        availableItems[i] = null;\n      }\n\n      // Sort the matches for this level and add them to the results.\n      if (matches.length !== 0) {\n        if (groupByTarget) {\n          matches.sort(sortBySelector ? itemCmp : itemCmpRank);\n        }\n        result.push(...matches);\n      }\n\n      // Stop searching at the limits of the DOM range.\n      if (target === currentTarget) {\n        break;\n      }\n\n      // Step to the parent DOM level.\n      target = target.parentElement;\n    }\n\n    if (!groupByTarget) {\n      result.sort(sortBySelector ? itemCmp : itemCmpRank);\n    }\n\n    // Return the matched and sorted results.\n    return result;\n  }\n\n  /**\n   * Validate the selector for a menu item.\n   *\n   * This returns the validated selector, or throws if the selector is\n   * invalid or contains commas.\n   */\n  function validateSelector(selector: string): string {\n    if (selector.indexOf(',') !== -1) {\n      throw new Error(`Selector cannot contain commas: ${selector}`);\n    }\n    if (!Selector.isValid(selector)) {\n      throw new Error(`Invalid selector: ${selector}`);\n    }\n    return selector;\n  }\n\n  /**\n   * A sort comparison function for a context menu item by ranks.\n   */\n  function itemCmpRank(a: IItem, b: IItem): number {\n    // Sort based on rank.\n    let r1 = a.rank;\n    let r2 = b.rank;\n    if (r1 !== r2) {\n      return r1 < r2 ? -1 : 1; // Infinity-safe\n    }\n\n    // When all else fails, sort by item id.\n    return a.id - b.id;\n  }\n\n  /**\n   * A sort comparison function for a context menu item by selectors and ranks.\n   */\n  function itemCmp(a: IItem, b: IItem): number {\n    // Sort first based on selector specificity.\n    let s1 = Selector.calculateSpecificity(a.selector);\n    let s2 = Selector.calculateSpecificity(b.selector);\n    if (s1 !== s2) {\n      return s2 - s1;\n    }\n\n    // If specificities are equal\n    return itemCmpRank(a, b);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { ArrayExt } from '@lumino/algorithm';\n\nimport { IDisposable } from '@lumino/disposable';\n\nimport { ElementExt } from '@lumino/domutils';\n\nimport { Drag } from '@lumino/dragdrop';\n\nimport { Message, MessageLoop } from '@lumino/messaging';\n\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport {\n  ElementARIAAttrs,\n  ElementBaseAttrs,\n  ElementDataset,\n  ElementInlineStyle,\n  h,\n  VirtualDOM,\n  VirtualElement\n} from '@lumino/virtualdom';\n\nimport { Title } from './title';\n\nimport { Widget } from './widget';\n\nconst ARROW_KEYS = [\n  'ArrowLeft',\n  'ArrowUp',\n  'ArrowRight',\n  'ArrowDown',\n  'Home',\n  'End'\n];\n\n/**\n * A widget which displays titles as a single row or column of tabs.\n *\n * #### Notes\n * If CSS transforms are used to rotate nodes for vertically oriented\n * text, then tab dragging will not work correctly. The `tabsMovable`\n * property should be set to `false` when rotating nodes from CSS.\n */\nexport class TabBar<T> extends Widget {\n  /**\n   * Construct a new tab bar.\n   *\n   * @param options - The options for initializing the tab bar.\n   */\n  constructor(options: TabBar.IOptions<T> = {}) {\n    super({ node: Private.createNode() });\n    this.addClass('lm-TabBar');\n    this.contentNode.setAttribute('role', 'tablist');\n    this.setFlag(Widget.Flag.DisallowLayout);\n    this._document = options.document || document;\n    this.tabsMovable = options.tabsMovable || false;\n    this.titlesEditable = options.titlesEditable || false;\n    this.allowDeselect = options.allowDeselect || false;\n    this.addButtonEnabled = options.addButtonEnabled || false;\n    this.insertBehavior = options.insertBehavior || 'select-tab-if-needed';\n    this.name = options.name || '';\n    this.orientation = options.orientation || 'horizontal';\n    this.removeBehavior = options.removeBehavior || 'select-tab-after';\n    this.renderer = options.renderer || TabBar.defaultRenderer;\n  }\n\n  /**\n   * Dispose of the resources held by the widget.\n   */\n  dispose(): void {\n    this._releaseMouse();\n    this._titles.length = 0;\n    this._previousTitle = null;\n    super.dispose();\n  }\n\n  /**\n   * A signal emitted when the current tab is changed.\n   *\n   * #### Notes\n   * This signal is emitted when the currently selected tab is changed\n   * either through user or programmatic interaction.\n   *\n   * Notably, this signal is not emitted when the index of the current\n   * tab changes due to tabs being inserted, removed, or moved. It is\n   * only emitted when the actual current tab node is changed.\n   */\n  get currentChanged(): ISignal<this, TabBar.ICurrentChangedArgs<T>> {\n    return this._currentChanged;\n  }\n\n  /**\n   * A signal emitted when a tab is moved by the user.\n   *\n   * #### Notes\n   * This signal is emitted when a tab is moved by user interaction.\n   *\n   * This signal is not emitted when a tab is moved programmatically.\n   */\n  get tabMoved(): ISignal<this, TabBar.ITabMovedArgs<T>> {\n    return this._tabMoved;\n  }\n\n  /**\n   * A signal emitted when a tab is clicked by the user.\n   *\n   * #### Notes\n   * If the clicked tab is not the current tab, the clicked tab will be\n   * made current and the `currentChanged` signal will be emitted first.\n   *\n   * This signal is emitted even if the clicked tab is the current tab.\n   */\n  get tabActivateRequested(): ISignal<\n    this,\n    TabBar.ITabActivateRequestedArgs<T>\n  > {\n    return this._tabActivateRequested;\n  }\n\n  /**\n   * A signal emitted when the tab bar add button is clicked.\n   */\n  get addRequested(): ISignal<this, void> {\n    return this._addRequested;\n  }\n\n  /**\n   * A signal emitted when a tab close icon is clicked.\n   *\n   * #### Notes\n   * This signal is not emitted unless the tab title is `closable`.\n   */\n  get tabCloseRequested(): ISignal<this, TabBar.ITabCloseRequestedArgs<T>> {\n    return this._tabCloseRequested;\n  }\n\n  /**\n   * A signal emitted when a tab is dragged beyond the detach threshold.\n   *\n   * #### Notes\n   * This signal is emitted when the user drags a tab with the mouse,\n   * and mouse is dragged beyond the detach threshold.\n   *\n   * The consumer of the signal should call `releaseMouse` and remove\n   * the tab in order to complete the detach.\n   *\n   * This signal is only emitted once per drag cycle.\n   */\n  get tabDetachRequested(): ISignal<this, TabBar.ITabDetachRequestedArgs<T>> {\n    return this._tabDetachRequested;\n  }\n\n  /**\n   * The renderer used by the tab bar.\n   */\n  readonly renderer: TabBar.IRenderer<T>;\n\n  /**\n   * The document to use with the tab bar.\n   *\n   * The default is the global `document` instance.\n   */\n  get document(): Document | ShadowRoot {\n    return this._document;\n  }\n\n  /**\n   * Whether the tabs are movable by the user.\n   *\n   * #### Notes\n   * Tabs can always be moved programmatically.\n   */\n  tabsMovable: boolean;\n\n  /**\n   * Whether the titles can be user-edited.\n   *\n   */\n  get titlesEditable(): boolean {\n    return this._titlesEditable;\n  }\n\n  /**\n   * Set whether titles can be user edited.\n   *\n   */\n  set titlesEditable(value: boolean) {\n    this._titlesEditable = value;\n  }\n\n  /**\n   * Whether a tab can be deselected by the user.\n   *\n   * #### Notes\n   * Tabs can be always be deselected programmatically.\n   */\n  allowDeselect: boolean;\n\n  /**\n   * The selection behavior when inserting a tab.\n   */\n  insertBehavior: TabBar.InsertBehavior;\n\n  /**\n   * The selection behavior when removing a tab.\n   */\n  removeBehavior: TabBar.RemoveBehavior;\n\n  /**\n   * Get the currently selected title.\n   *\n   * #### Notes\n   * This will be `null` if no tab is selected.\n   */\n  get currentTitle(): Title<T> | null {\n    return this._titles[this._currentIndex] || null;\n  }\n\n  /**\n   * Set the currently selected title.\n   *\n   * #### Notes\n   * If the title does not exist, the title will be set to `null`.\n   */\n  set currentTitle(value: Title<T> | null) {\n    this.currentIndex = value ? this._titles.indexOf(value) : -1;\n  }\n\n  /**\n   * Get the index of the currently selected tab.\n   *\n   * #### Notes\n   * This will be `-1` if no tab is selected.\n   */\n  get currentIndex(): number {\n    return this._currentIndex;\n  }\n\n  /**\n   * Set the index of the currently selected tab.\n   *\n   * #### Notes\n   * If the value is out of range, the index will be set to `-1`.\n   */\n  set currentIndex(value: number) {\n    // Adjust for an out of range index.\n    if (value < 0 || value >= this._titles.length) {\n      value = -1;\n    }\n\n    // Bail early if the index will not change.\n    if (this._currentIndex === value) {\n      return;\n    }\n\n    // Look up the previous index and title.\n    let pi = this._currentIndex;\n    let pt = this._titles[pi] || null;\n\n    // Look up the current index and title.\n    let ci = value;\n    let ct = this._titles[ci] || null;\n\n    // Update the current index and previous title.\n    this._currentIndex = ci;\n    this._previousTitle = pt;\n\n    // Schedule an update of the tabs.\n    this.update();\n\n    // Emit the current changed signal.\n    this._currentChanged.emit({\n      previousIndex: pi,\n      previousTitle: pt,\n      currentIndex: ci,\n      currentTitle: ct\n    });\n  }\n\n  /**\n   * Get the name of the tab bar.\n   */\n  get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Set the name of the tab bar.\n   */\n  set name(value: string) {\n    this._name = value;\n    if (value) {\n      this.contentNode.setAttribute('aria-label', value);\n    } else {\n      this.contentNode.removeAttribute('aria-label');\n    }\n  }\n\n  /**\n   * Get the orientation of the tab bar.\n   *\n   * #### Notes\n   * This controls whether the tabs are arranged in a row or column.\n   */\n  get orientation(): TabBar.Orientation {\n    return this._orientation;\n  }\n\n  /**\n   * Set the orientation of the tab bar.\n   *\n   * #### Notes\n   * This controls whether the tabs are arranged in a row or column.\n   */\n  set orientation(value: TabBar.Orientation) {\n    // Do nothing if the orientation does not change.\n    if (this._orientation === value) {\n      return;\n    }\n\n    // Release the mouse before making any changes.\n    this._releaseMouse();\n\n    // Toggle the orientation values.\n    this._orientation = value;\n    this.dataset['orientation'] = value;\n    this.contentNode.setAttribute('aria-orientation', value);\n  }\n\n  /**\n   * Whether the add button is enabled.\n   */\n  get addButtonEnabled(): boolean {\n    return this._addButtonEnabled;\n  }\n\n  /**\n   * Set whether the add button is enabled.\n   */\n  set addButtonEnabled(value: boolean) {\n    // Do nothing if the value does not change.\n    if (this._addButtonEnabled === value) {\n      return;\n    }\n\n    this._addButtonEnabled = value;\n    if (value) {\n      this.addButtonNode.classList.remove('lm-mod-hidden');\n    } else {\n      this.addButtonNode.classList.add('lm-mod-hidden');\n    }\n  }\n\n  /**\n   * A read-only array of the titles in the tab bar.\n   */\n  get titles(): ReadonlyArray<Title<T>> {\n    return this._titles;\n  }\n\n  /**\n   * The tab bar content node.\n   *\n   * #### Notes\n   * This is the node which holds the tab nodes.\n   *\n   * Modifying this node directly can lead to undefined behavior.\n   */\n  get contentNode(): HTMLUListElement {\n    return this.node.getElementsByClassName(\n      'lm-TabBar-content'\n    )[0] as HTMLUListElement;\n  }\n\n  /**\n   * The tab bar add button node.\n   *\n   * #### Notes\n   * This is the node which holds the add button.\n   *\n   * Modifying this node directly can lead to undefined behavior.\n   */\n  get addButtonNode(): HTMLDivElement {\n    return this.node.getElementsByClassName(\n      'lm-TabBar-addButton'\n    )[0] as HTMLDivElement;\n  }\n\n  /**\n   * Add a tab to the end of the tab bar.\n   *\n   * @param value - The title which holds the data for the tab,\n   *   or an options object to convert to a title.\n   *\n   * @returns The title object added to the tab bar.\n   *\n   * #### Notes\n   * If the title is already added to the tab bar, it will be moved.\n   */\n  addTab(value: Title<T> | Title.IOptions<T>): Title<T> {\n    return this.insertTab(this._titles.length, value);\n  }\n\n  /**\n   * Insert a tab into the tab bar at the specified index.\n   *\n   * @param index - The index at which to insert the tab.\n   *\n   * @param value - The title which holds the data for the tab,\n   *   or an options object to convert to a title.\n   *\n   * @returns The title object added to the tab bar.\n   *\n   * #### Notes\n   * The index will be clamped to the bounds of the tabs.\n   *\n   * If the title is already added to the tab bar, it will be moved.\n   */\n  insertTab(index: number, value: Title<T> | Title.IOptions<T>): Title<T> {\n    // Release the mouse before making any changes.\n    this._releaseMouse();\n\n    // Coerce the value to a title.\n    let title = Private.asTitle(value);\n\n    // Look up the index of the title.\n    let i = this._titles.indexOf(title);\n\n    // Clamp the insert index to the array bounds.\n    let j = Math.max(0, Math.min(index, this._titles.length));\n\n    // If the title is not in the array, insert it.\n    if (i === -1) {\n      // Insert the title into the array.\n      ArrayExt.insert(this._titles, j, title);\n\n      // Connect to the title changed signal.\n      title.changed.connect(this._onTitleChanged, this);\n\n      // Schedule an update of the tabs.\n      this.update();\n\n      // Adjust the current index for the insert.\n      this._adjustCurrentForInsert(j, title);\n\n      // Return the title added to the tab bar.\n      return title;\n    }\n\n    // Otherwise, the title exists in the array and should be moved.\n\n    // Adjust the index if the location is at the end of the array.\n    if (j === this._titles.length) {\n      j--;\n    }\n\n    // Bail if there is no effective move.\n    if (i === j) {\n      return title;\n    }\n\n    // Move the title to the new location.\n    ArrayExt.move(this._titles, i, j);\n\n    // Schedule an update of the tabs.\n    this.update();\n\n    // Adjust the current index for the move.\n    this._adjustCurrentForMove(i, j);\n\n    // Return the title added to the tab bar.\n    return title;\n  }\n\n  /**\n   * Remove a tab from the tab bar.\n   *\n   * @param title - The title for the tab to remove.\n   *\n   * #### Notes\n   * This is a no-op if the title is not in the tab bar.\n   */\n  removeTab(title: Title<T>): void {\n    this.removeTabAt(this._titles.indexOf(title));\n  }\n\n  /**\n   * Remove the tab at a given index from the tab bar.\n   *\n   * @param index - The index of the tab to remove.\n   *\n   * #### Notes\n   * This is a no-op if the index is out of range.\n   */\n  removeTabAt(index: number): void {\n    // Release the mouse before making any changes.\n    this._releaseMouse();\n\n    // Remove the title from the array.\n    let title = ArrayExt.removeAt(this._titles, index);\n\n    // Bail if the index is out of range.\n    if (!title) {\n      return;\n    }\n\n    // Disconnect from the title changed signal.\n    title.changed.disconnect(this._onTitleChanged, this);\n\n    // Clear the previous title if it's being removed.\n    if (title === this._previousTitle) {\n      this._previousTitle = null;\n    }\n\n    // Schedule an update of the tabs.\n    this.update();\n\n    // Adjust the current index for the remove.\n    this._adjustCurrentForRemove(index, title);\n  }\n\n  /**\n   * Remove all tabs from the tab bar.\n   */\n  clearTabs(): void {\n    // Bail if there is nothing to remove.\n    if (this._titles.length === 0) {\n      return;\n    }\n\n    // Release the mouse before making any changes.\n    this._releaseMouse();\n\n    // Disconnect from the title changed signals.\n    for (let title of this._titles) {\n      title.changed.disconnect(this._onTitleChanged, this);\n    }\n\n    // Get the current index and title.\n    let pi = this.currentIndex;\n    let pt = this.currentTitle;\n\n    // Reset the current index and previous title.\n    this._currentIndex = -1;\n    this._previousTitle = null;\n\n    // Clear the title array.\n    this._titles.length = 0;\n\n    // Schedule an update of the tabs.\n    this.update();\n\n    // If no tab was selected, there's nothing else to do.\n    if (pi === -1) {\n      return;\n    }\n\n    // Emit the current changed signal.\n    this._currentChanged.emit({\n      previousIndex: pi,\n      previousTitle: pt,\n      currentIndex: -1,\n      currentTitle: null\n    });\n  }\n\n  /**\n   * Release the mouse and restore the non-dragged tab positions.\n   *\n   * #### Notes\n   * This will cause the tab bar to stop handling mouse events and to\n   * restore the tabs to their non-dragged positions.\n   */\n  releaseMouse(): void {\n    this._releaseMouse();\n  }\n\n  /**\n   * Handle the DOM events for the tab bar.\n   *\n   * @param event - The DOM event sent to the tab bar.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the tab bar's DOM node.\n   *\n   * This should not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'pointerdown':\n        this._evtPointerDown(event as PointerEvent);\n        break;\n      case 'pointermove':\n        this._evtPointerMove(event as PointerEvent);\n        break;\n      case 'pointerup':\n        this._evtPointerUp(event as PointerEvent);\n        break;\n      case 'dblclick':\n        this._evtDblClick(event as MouseEvent);\n        break;\n      case 'keydown':\n        event.eventPhase === Event.CAPTURING_PHASE\n          ? this._evtKeyDownCapturing(event as KeyboardEvent)\n          : this._evtKeyDown(event as KeyboardEvent);\n        break;\n      case 'contextmenu':\n        event.preventDefault();\n        event.stopPropagation();\n        break;\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    this.node.addEventListener('pointerdown', this);\n    this.node.addEventListener('dblclick', this);\n    this.node.addEventListener('keydown', this);\n  }\n\n  /**\n   * A message handler invoked on an `'after-detach'` message.\n   */\n  protected onAfterDetach(msg: Message): void {\n    this.node.removeEventListener('pointerdown', this);\n    this.node.removeEventListener('dblclick', this);\n    this.node.removeEventListener('keydown', this);\n    this._releaseMouse();\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    let titles = this._titles;\n    let renderer = this.renderer;\n    let currentTitle = this.currentTitle;\n    let content = new Array<VirtualElement>(titles.length);\n    // Keep the tabindex=\"0\" attribute to the tab which handled it before the update.\n    // If the add button handles it, no need to do anything. If no element of the tab\n    // bar handles it, set it on the current or the first tab to ensure one element\n    // handles it after update.\n    const tabHandlingTabindex =\n      this._getCurrentTabindex() ??\n      (this._currentIndex > -1 ? this._currentIndex : 0);\n\n    for (let i = 0, n = titles.length; i < n; ++i) {\n      let title = titles[i];\n      let current = title === currentTitle;\n      let zIndex = current ? n : n - i - 1;\n      let tabIndex = tabHandlingTabindex === i ? 0 : -1;\n      content[i] = renderer.renderTab({ title, current, zIndex, tabIndex });\n    }\n    VirtualDOM.render(content, this.contentNode);\n  }\n\n  /**\n   * Get the index of the tab which handles tabindex=\"0\".\n   * If the add button handles tabindex=\"0\", -1 is returned.\n   * If none of the previous handles tabindex=\"0\", null is returned.\n   */\n  private _getCurrentTabindex(): number | null {\n    let index = null;\n    const elemTabindex = this.contentNode.querySelector('li[tabindex=\"0\"]');\n    if (elemTabindex) {\n      index = [...this.contentNode.children].indexOf(elemTabindex);\n    } else if (\n      this._addButtonEnabled &&\n      this.addButtonNode.getAttribute('tabindex') === '0'\n    ) {\n      index = -1;\n    }\n    return index;\n  }\n\n  /**\n   * Handle the `'dblclick'` event for the tab bar.\n   */\n  private _evtDblClick(event: MouseEvent): void {\n    // Do nothing if titles are not editable\n    if (!this.titlesEditable) {\n      return;\n    }\n\n    let tabs = this.contentNode.children;\n\n    // Find the index of the targeted tab.\n    let index = ArrayExt.findFirstIndex(tabs, tab => {\n      return ElementExt.hitTest(tab, event.clientX, event.clientY);\n    });\n\n    // Do nothing if the press is not on a tab.\n    if (index === -1) {\n      return;\n    }\n\n    let title = this.titles[index];\n    let label = tabs[index].querySelector('.lm-TabBar-tabLabel') as HTMLElement;\n    if (label && label.contains(event.target as HTMLElement)) {\n      let value = title.label || '';\n\n      // Clear the label element\n      let oldValue = label.innerHTML;\n      label.innerHTML = '';\n\n      let input = document.createElement('input');\n      input.classList.add('lm-TabBar-tabInput');\n      input.value = value;\n      label.appendChild(input);\n\n      let onblur = () => {\n        input.removeEventListener('blur', onblur);\n        label.innerHTML = oldValue;\n        this.node.addEventListener('keydown', this);\n      };\n\n      input.addEventListener('dblclick', (event: Event) =>\n        event.stopPropagation()\n      );\n      input.addEventListener('blur', onblur);\n      input.addEventListener('keydown', (event: KeyboardEvent) => {\n        if (event.key === 'Enter') {\n          if (input.value !== '') {\n            title.label = title.caption = input.value;\n          }\n          onblur();\n        } else if (event.key === 'Escape') {\n          onblur();\n        }\n      });\n      this.node.removeEventListener('keydown', this);\n      input.select();\n      input.focus();\n\n      if (label.children.length > 0) {\n        (label.children[0] as HTMLElement).focus();\n      }\n    }\n  }\n\n  /**\n   * Handle the `'keydown'` event for the tab bar at capturing phase.\n   */\n  private _evtKeyDownCapturing(event: KeyboardEvent): void {\n    if (event.eventPhase !== Event.CAPTURING_PHASE) {\n      return;\n    }\n\n    // Stop all input events during drag.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Release the mouse if `Escape` is pressed.\n    if (event.key === 'Escape') {\n      this._releaseMouse();\n    }\n  }\n\n  /**\n   * Handle the `'keydown'` event for the tab bar at target phase.\n   */\n  private _evtKeyDown(event: KeyboardEvent): void {\n    // Allow for navigation using tab key\n    if (event.key === 'Tab' || event.eventPhase === Event.CAPTURING_PHASE) {\n      return;\n    }\n\n    // Check if Enter or Spacebar key has been pressed and open that tab\n    if (\n      event.key === 'Enter' ||\n      event.key === 'Spacebar' ||\n      event.key === ' '\n    ) {\n      // Get focus element that is in focus by the tab key\n      const focusedElement = document.activeElement;\n\n      // Test first if the focus is on the add button node\n      if (\n        this.addButtonEnabled &&\n        this.addButtonNode.contains(focusedElement)\n      ) {\n        event.preventDefault();\n        event.stopPropagation();\n        this._addRequested.emit();\n      } else {\n        const index = ArrayExt.findFirstIndex(this.contentNode.children, tab =>\n          tab.contains(focusedElement)\n        );\n        if (index >= 0) {\n          event.preventDefault();\n          event.stopPropagation();\n          this.currentIndex = index;\n        }\n      }\n      // Handle the arrow keys to switch tabs.\n    } else if (ARROW_KEYS.includes(event.key)) {\n      // Create a list of all focusable elements in the tab bar.\n      const focusable: Element[] = [...this.contentNode.children];\n      if (this.addButtonEnabled) {\n        focusable.push(this.addButtonNode);\n      }\n      // If the tab bar contains only one element, nothing to do.\n      if (focusable.length <= 1) {\n        return;\n      }\n      event.preventDefault();\n      event.stopPropagation();\n\n      // Get the current focused element.\n      let focusedIndex = focusable.indexOf(document.activeElement as Element);\n      if (focusedIndex === -1) {\n        focusedIndex = this._currentIndex;\n      }\n\n      // Find the next element to focus on.\n      let nextFocused: Element | null | undefined;\n      if (\n        (event.key === 'ArrowRight' && this._orientation === 'horizontal') ||\n        (event.key === 'ArrowDown' && this._orientation === 'vertical')\n      ) {\n        nextFocused = focusable[focusedIndex + 1] ?? focusable[0];\n      } else if (\n        (event.key === 'ArrowLeft' && this._orientation === 'horizontal') ||\n        (event.key === 'ArrowUp' && this._orientation === 'vertical')\n      ) {\n        nextFocused =\n          focusable[focusedIndex - 1] ?? focusable[focusable.length - 1];\n      } else if (event.key === 'Home') {\n        nextFocused = focusable[0];\n      } else if (event.key === 'End') {\n        nextFocused = focusable[focusable.length - 1];\n      }\n\n      // Change the focused element and the tabindex value.\n      if (nextFocused) {\n        focusable[focusedIndex]?.setAttribute('tabindex', '-1');\n        nextFocused?.setAttribute('tabindex', '0');\n        (nextFocused as HTMLElement).focus();\n      }\n    }\n  }\n\n  /**\n   * Handle the `'pointerdown'` event for the tab bar.\n   */\n  private _evtPointerDown(event: PointerEvent | MouseEvent): void {\n    // Do nothing if it's not a left or middle mouse press.\n    if (event.button !== 0 && event.button !== 1) {\n      return;\n    }\n\n    // Do nothing if a drag is in progress.\n    if (this._dragData) {\n      return;\n    }\n\n    // Do nothing if a title editable input was clicked.\n    if (\n      (event.target as HTMLElement).classList.contains('lm-TabBar-tabInput')\n    ) {\n      return;\n    }\n\n    // Check if the add button was clicked.\n    let addButtonClicked =\n      this.addButtonEnabled &&\n      this.addButtonNode.contains(event.target as HTMLElement);\n\n    // Lookup the tab nodes.\n    let tabs = this.contentNode.children;\n\n    // Find the index of the pressed tab.\n    let index = ArrayExt.findFirstIndex(tabs, tab => {\n      return ElementExt.hitTest(tab, event.clientX, event.clientY);\n    });\n\n    // Do nothing if the press is not on a tab or the add button.\n    if (index === -1 && !addButtonClicked) {\n      return;\n    }\n\n    // Pressing on a tab stops the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Initialize the non-measured parts of the drag data.\n    this._dragData = {\n      tab: tabs[index] as HTMLElement,\n      index: index,\n      pressX: event.clientX,\n      pressY: event.clientY,\n      tabPos: -1,\n      tabSize: -1,\n      tabPressPos: -1,\n      targetIndex: -1,\n      tabLayout: null,\n      contentRect: null,\n      override: null,\n      dragActive: false,\n      dragAborted: false,\n      detachRequested: false\n    };\n\n    // Add the document pointer up listener.\n    this.document.addEventListener('pointerup', this, true);\n\n    // Do nothing else if the middle button or add button is clicked.\n    if (event.button === 1 || addButtonClicked) {\n      return;\n    }\n\n    // Do nothing else if the close icon is clicked.\n    let icon = tabs[index].querySelector(this.renderer.closeIconSelector);\n    if (icon && icon.contains(event.target as HTMLElement)) {\n      return;\n    }\n\n    // Add the extra listeners if the tabs are movable.\n    if (this.tabsMovable) {\n      this.document.addEventListener('pointermove', this, true);\n      this.document.addEventListener('keydown', this, true);\n      this.document.addEventListener('contextmenu', this, true);\n    }\n\n    // Update the current index as appropriate.\n    if (this.allowDeselect && this.currentIndex === index) {\n      this.currentIndex = -1;\n    } else {\n      this.currentIndex = index;\n    }\n\n    // Do nothing else if there is no current tab.\n    if (this.currentIndex === -1) {\n      return;\n    }\n\n    // Emit the tab activate request signal.\n    this._tabActivateRequested.emit({\n      index: this.currentIndex,\n      title: this.currentTitle!\n    });\n  }\n\n  /**\n   * Handle the `'pointermove'` event for the tab bar.\n   */\n  private _evtPointerMove(event: PointerEvent | MouseEvent): void {\n    // Do nothing if no drag is in progress.\n    let data = this._dragData;\n    if (!data) {\n      return;\n    }\n\n    // Suppress the event during a drag.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Lookup the tab nodes.\n    let tabs = this.contentNode.children;\n\n    // Bail early if the drag threshold has not been met.\n    if (!data.dragActive && !Private.dragExceeded(data, event)) {\n      return;\n    }\n\n    // Activate the drag if necessary.\n    if (!data.dragActive) {\n      // Fill in the rest of the drag data measurements.\n      let tabRect = data.tab.getBoundingClientRect();\n      if (this._orientation === 'horizontal') {\n        data.tabPos = data.tab.offsetLeft;\n        data.tabSize = tabRect.width;\n        data.tabPressPos = data.pressX - tabRect.left;\n      } else {\n        data.tabPos = data.tab.offsetTop;\n        data.tabSize = tabRect.height;\n        data.tabPressPos = data.pressY - tabRect.top;\n      }\n      data.tabPressOffset = {\n        x: data.pressX - tabRect.left,\n        y: data.pressY - tabRect.top\n      };\n      data.tabLayout = Private.snapTabLayout(tabs, this._orientation);\n      data.contentRect = this.contentNode.getBoundingClientRect();\n      data.override = Drag.overrideCursor('default');\n\n      // Add the dragging style classes.\n      data.tab.classList.add('lm-mod-dragging');\n      this.addClass('lm-mod-dragging');\n\n      // Mark the drag as active.\n      data.dragActive = true;\n    }\n\n    // Emit the detach requested signal if the threshold is exceeded.\n    if (!data.detachRequested && Private.detachExceeded(data, event)) {\n      // Only emit the signal once per drag cycle.\n      data.detachRequested = true;\n\n      // Setup the arguments for the signal.\n      let index = data.index;\n      let clientX = event.clientX;\n      let clientY = event.clientY;\n      let tab = tabs[index] as HTMLElement;\n      let title = this._titles[index];\n\n      // Emit the tab detach requested signal.\n      this._tabDetachRequested.emit({\n        index,\n        title,\n        tab,\n        clientX,\n        clientY,\n        offset: data.tabPressOffset\n      });\n\n      // Bail if the signal handler aborted the drag.\n      if (data.dragAborted) {\n        return;\n      }\n    }\n\n    // Update the positions of the tabs.\n    Private.layoutTabs(tabs, data, event, this._orientation);\n  }\n\n  /**\n   * Handle the `'pointerup'` event for the document.\n   */\n  private _evtPointerUp(event: PointerEvent | MouseEvent): void {\n    // Do nothing if it's not a left or middle mouse release.\n    if (event.button !== 0 && event.button !== 1) {\n      return;\n    }\n\n    // Do nothing if no drag is in progress.\n    const data = this._dragData;\n    if (!data) {\n      return;\n    }\n\n    // Stop the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Remove the extra mouse event listeners.\n    this.document.removeEventListener('pointermove', this, true);\n    this.document.removeEventListener('pointerup', this, true);\n    this.document.removeEventListener('keydown', this, true);\n    this.document.removeEventListener('contextmenu', this, true);\n\n    // Handle a release when the drag is not active.\n    if (!data.dragActive) {\n      // Clear the drag data.\n      this._dragData = null;\n\n      // Handle clicking the add button.\n      let addButtonClicked =\n        this.addButtonEnabled &&\n        this.addButtonNode.contains(event.target as HTMLElement);\n      if (addButtonClicked) {\n        this._addRequested.emit(undefined);\n        return;\n      }\n\n      // Lookup the tab nodes.\n      let tabs = this.contentNode.children;\n\n      // Find the index of the released tab.\n      let index = ArrayExt.findFirstIndex(tabs, tab => {\n        return ElementExt.hitTest(tab, event.clientX, event.clientY);\n      });\n\n      // Do nothing if the release is not on the original pressed tab.\n      if (index !== data.index) {\n        return;\n      }\n\n      // Ignore the release if the title is not closable.\n      let title = this._titles[index];\n      if (!title.closable) {\n        return;\n      }\n\n      // Emit the close requested signal if the middle button is released.\n      if (event.button === 1) {\n        this._tabCloseRequested.emit({ index, title });\n        return;\n      }\n\n      // Emit the close requested signal if the close icon was released.\n      let icon = tabs[index].querySelector(this.renderer.closeIconSelector);\n      if (icon && icon.contains(event.target as HTMLElement)) {\n        this._tabCloseRequested.emit({ index, title });\n        return;\n      }\n\n      // Otherwise, there is nothing left to do.\n      return;\n    }\n\n    // Do nothing if the left button is not released.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Position the tab at its final resting position.\n    Private.finalizeTabPosition(data, this._orientation);\n\n    // Remove the dragging class from the tab so it can be transitioned.\n    data.tab.classList.remove('lm-mod-dragging');\n\n    // Parse the transition duration for releasing the tab.\n    let duration = Private.parseTransitionDuration(data.tab);\n\n    // Complete the release on a timer to allow the tab to transition.\n    setTimeout(() => {\n      // Do nothing if the drag has been aborted.\n      if (data.dragAborted) {\n        return;\n      }\n\n      // Clear the drag data reference.\n      this._dragData = null;\n\n      // Reset the positions of the tabs.\n      Private.resetTabPositions(this.contentNode.children, this._orientation);\n\n      // Clear the cursor grab.\n      data.override!.dispose();\n\n      // Remove the remaining dragging style.\n      this.removeClass('lm-mod-dragging');\n\n      // If the tab was not moved, there is nothing else to do.\n      let i = data.index;\n      let j = data.targetIndex;\n      if (j === -1 || i === j) {\n        return;\n      }\n\n      // Move the title to the new locations.\n      ArrayExt.move(this._titles, i, j);\n\n      // Adjust the current index for the move.\n      this._adjustCurrentForMove(i, j);\n\n      // Emit the tab moved signal.\n      this._tabMoved.emit({\n        fromIndex: i,\n        toIndex: j,\n        title: this._titles[j]\n      });\n\n      // Update the tabs immediately to prevent flicker.\n      MessageLoop.sendMessage(this, Widget.Msg.UpdateRequest);\n    }, duration);\n  }\n\n  /**\n   * Release the mouse and restore the non-dragged tab positions.\n   */\n  private _releaseMouse(): void {\n    // Do nothing if no drag is in progress.\n    let data = this._dragData;\n    if (!data) {\n      return;\n    }\n\n    // Clear the drag data reference.\n    this._dragData = null;\n\n    // Remove the extra document event listeners.\n    this.document.removeEventListener('pointermove', this, true);\n    this.document.removeEventListener('pointerup', this, true);\n    this.document.removeEventListener('keydown', this, true);\n    this.document.removeEventListener('contextmenu', this, true);\n\n    // Indicate the drag has been aborted. This allows the mouse\n    // event handlers to return early when the drag is canceled.\n    data.dragAborted = true;\n\n    // If the drag is not active, there's nothing more to do.\n    if (!data.dragActive) {\n      return;\n    }\n\n    // Reset the tabs to their non-dragged positions.\n    Private.resetTabPositions(this.contentNode.children, this._orientation);\n\n    // Clear the cursor override.\n    data.override!.dispose();\n\n    // Clear the dragging style classes.\n    data.tab.classList.remove('lm-mod-dragging');\n    this.removeClass('lm-mod-dragging');\n  }\n\n  /**\n   * Adjust the current index for a tab insert operation.\n   *\n   * This method accounts for the tab bar's insertion behavior when\n   * adjusting the current index and emitting the changed signal.\n   */\n  private _adjustCurrentForInsert(i: number, title: Title<T>): void {\n    // Lookup commonly used variables.\n    let ct = this.currentTitle;\n    let ci = this._currentIndex;\n    let bh = this.insertBehavior;\n\n    // TODO: do we need to do an update to update the aria-selected attribute?\n\n    // Handle the behavior where the new tab is always selected,\n    // or the behavior where the new tab is selected if needed.\n    if (bh === 'select-tab' || (bh === 'select-tab-if-needed' && ci === -1)) {\n      this._currentIndex = i;\n      this._previousTitle = ct;\n      this._currentChanged.emit({\n        previousIndex: ci,\n        previousTitle: ct,\n        currentIndex: i,\n        currentTitle: title\n      });\n      return;\n    }\n\n    // Otherwise, silently adjust the current index if needed.\n    if (ci >= i) {\n      this._currentIndex++;\n    }\n  }\n\n  /**\n   * Adjust the current index for a tab move operation.\n   *\n   * This method will not cause the actual current tab to change.\n   * It silently adjusts the index to account for the given move.\n   */\n  private _adjustCurrentForMove(i: number, j: number): void {\n    if (this._currentIndex === i) {\n      this._currentIndex = j;\n    } else if (this._currentIndex < i && this._currentIndex >= j) {\n      this._currentIndex++;\n    } else if (this._currentIndex > i && this._currentIndex <= j) {\n      this._currentIndex--;\n    }\n  }\n\n  /**\n   * Adjust the current index for a tab remove operation.\n   *\n   * This method accounts for the tab bar's remove behavior when\n   * adjusting the current index and emitting the changed signal.\n   */\n  private _adjustCurrentForRemove(i: number, title: Title<T>): void {\n    // Lookup commonly used variables.\n    let ci = this._currentIndex;\n    let bh = this.removeBehavior;\n\n    // Silently adjust the index if the current tab is not removed.\n    if (ci !== i) {\n      if (ci > i) {\n        this._currentIndex--;\n      }\n      return;\n    }\n\n    // TODO: do we need to do an update to adjust the aria-selected value?\n\n    // No tab gets selected if the tab bar is empty.\n    if (this._titles.length === 0) {\n      this._currentIndex = -1;\n      this._currentChanged.emit({\n        previousIndex: i,\n        previousTitle: title,\n        currentIndex: -1,\n        currentTitle: null\n      });\n      return;\n    }\n\n    // Handle behavior where the next sibling tab is selected.\n    if (bh === 'select-tab-after') {\n      this._currentIndex = Math.min(i, this._titles.length - 1);\n      this._currentChanged.emit({\n        previousIndex: i,\n        previousTitle: title,\n        currentIndex: this._currentIndex,\n        currentTitle: this.currentTitle\n      });\n      return;\n    }\n\n    // Handle behavior where the previous sibling tab is selected.\n    if (bh === 'select-tab-before') {\n      this._currentIndex = Math.max(0, i - 1);\n      this._currentChanged.emit({\n        previousIndex: i,\n        previousTitle: title,\n        currentIndex: this._currentIndex,\n        currentTitle: this.currentTitle\n      });\n      return;\n    }\n\n    // Handle behavior where the previous history tab is selected.\n    if (bh === 'select-previous-tab') {\n      if (this._previousTitle) {\n        this._currentIndex = this._titles.indexOf(this._previousTitle);\n        this._previousTitle = null;\n      } else {\n        this._currentIndex = Math.min(i, this._titles.length - 1);\n      }\n      this._currentChanged.emit({\n        previousIndex: i,\n        previousTitle: title,\n        currentIndex: this._currentIndex,\n        currentTitle: this.currentTitle\n      });\n      return;\n    }\n\n    // Otherwise, no tab gets selected.\n    this._currentIndex = -1;\n    this._currentChanged.emit({\n      previousIndex: i,\n      previousTitle: title,\n      currentIndex: -1,\n      currentTitle: null\n    });\n  }\n\n  /**\n   * Handle the `changed` signal of a title object.\n   */\n  private _onTitleChanged(sender: Title<T>): void {\n    this.update();\n  }\n\n  private _name: string;\n  private _currentIndex = -1;\n  private _titles: Title<T>[] = [];\n  private _orientation: TabBar.Orientation;\n  private _document: Document | ShadowRoot;\n  private _titlesEditable: boolean = false;\n  private _previousTitle: Title<T> | null = null;\n  private _dragData: Private.IDragData | null = null;\n  private _addButtonEnabled: boolean = false;\n  private _tabMoved = new Signal<this, TabBar.ITabMovedArgs<T>>(this);\n  private _currentChanged = new Signal<this, TabBar.ICurrentChangedArgs<T>>(\n    this\n  );\n  private _addRequested = new Signal<this, void>(this);\n  private _tabCloseRequested = new Signal<\n    this,\n    TabBar.ITabCloseRequestedArgs<T>\n  >(this);\n  private _tabDetachRequested = new Signal<\n    this,\n    TabBar.ITabDetachRequestedArgs<T>\n  >(this);\n  private _tabActivateRequested = new Signal<\n    this,\n    TabBar.ITabActivateRequestedArgs<T>\n  >(this);\n}\n\n/**\n * The namespace for the `TabBar` class statics.\n */\nexport namespace TabBar {\n  /**\n   * A type alias for a tab bar orientation.\n   */\n  export type Orientation =\n    | /**\n     * The tabs are arranged in a single row, left-to-right.\n     *\n     * The tab text orientation is horizontal.\n     */\n    'horizontal'\n\n    /**\n     * The tabs are arranged in a single column, top-to-bottom.\n     *\n     * The tab text orientation is horizontal.\n     */\n    | 'vertical';\n\n  /**\n   * A type alias for the selection behavior on tab insert.\n   */\n  export type InsertBehavior =\n    | /**\n     * The selected tab will not be changed.\n     */\n    'none'\n\n    /**\n     * The inserted tab will be selected.\n     */\n    | 'select-tab'\n\n    /**\n     * The inserted tab will be selected if the current tab is null.\n     */\n    | 'select-tab-if-needed';\n\n  /**\n   * A type alias for the selection behavior on tab remove.\n   */\n  export type RemoveBehavior =\n    | /**\n     * No tab will be selected.\n     */\n    'none'\n\n    /**\n     * The tab after the removed tab will be selected if possible.\n     */\n    | 'select-tab-after'\n\n    /**\n     * The tab before the removed tab will be selected if possible.\n     */\n    | 'select-tab-before'\n\n    /**\n     * The previously selected tab will be selected if possible.\n     */\n    | 'select-previous-tab';\n\n  /**\n   * An options object for creating a tab bar.\n   */\n  export interface IOptions<T> {\n    /**\n     * The document to use with the tab bar.\n     *\n     * The default is the global `document` instance.\n     */\n\n    document?: Document | ShadowRoot;\n\n    /**\n     * Name of the tab bar.\n     *\n     * This is used for accessibility reasons. The default is the empty string.\n     */\n    name?: string;\n\n    /**\n     * The layout orientation of the tab bar.\n     *\n     * The default is `horizontal`.\n     */\n    orientation?: TabBar.Orientation;\n\n    /**\n     * Whether the tabs are movable by the user.\n     *\n     * The default is `false`.\n     */\n    tabsMovable?: boolean;\n\n    /**\n     * Whether a tab can be deselected by the user.\n     *\n     * The default is `false`.\n     */\n    allowDeselect?: boolean;\n\n    /**\n     * Whether the titles can be directly edited by the user.\n     *\n     * The default is `false`.\n     */\n    titlesEditable?: boolean;\n\n    /**\n     * Whether the add button is enabled.\n     *\n     * The default is `false`.\n     */\n    addButtonEnabled?: boolean;\n\n    /**\n     * The selection behavior when inserting a tab.\n     *\n     * The default is `'select-tab-if-needed'`.\n     */\n    insertBehavior?: TabBar.InsertBehavior;\n\n    /**\n     * The selection behavior when removing a tab.\n     *\n     * The default is `'select-tab-after'`.\n     */\n    removeBehavior?: TabBar.RemoveBehavior;\n\n    /**\n     * A renderer to use with the tab bar.\n     *\n     * The default is a shared renderer instance.\n     */\n    renderer?: IRenderer<T>;\n  }\n\n  /**\n   * The arguments object for the `currentChanged` signal.\n   */\n  export interface ICurrentChangedArgs<T> {\n    /**\n     * The previously selected index.\n     */\n    readonly previousIndex: number;\n\n    /**\n     * The previously selected title.\n     */\n    readonly previousTitle: Title<T> | null;\n\n    /**\n     * The currently selected index.\n     */\n    readonly currentIndex: number;\n\n    /**\n     * The currently selected title.\n     */\n    readonly currentTitle: Title<T> | null;\n  }\n\n  /**\n   * The arguments object for the `tabMoved` signal.\n   */\n  export interface ITabMovedArgs<T> {\n    /**\n     * The previous index of the tab.\n     */\n    readonly fromIndex: number;\n\n    /**\n     * The current index of the tab.\n     */\n    readonly toIndex: number;\n\n    /**\n     * The title for the tab.\n     */\n    readonly title: Title<T>;\n  }\n\n  /**\n   * The arguments object for the `tabActivateRequested` signal.\n   */\n  export interface ITabActivateRequestedArgs<T> {\n    /**\n     * The index of the tab to activate.\n     */\n    readonly index: number;\n\n    /**\n     * The title for the tab.\n     */\n    readonly title: Title<T>;\n  }\n\n  /**\n   * The arguments object for the `tabCloseRequested` signal.\n   */\n  export interface ITabCloseRequestedArgs<T> {\n    /**\n     * The index of the tab to close.\n     */\n    readonly index: number;\n\n    /**\n     * The title for the tab.\n     */\n    readonly title: Title<T>;\n  }\n\n  /**\n   * The arguments object for the `tabDetachRequested` signal.\n   */\n  export interface ITabDetachRequestedArgs<T> {\n    /**\n     * The index of the tab to detach.\n     */\n    readonly index: number;\n\n    /**\n     * The title for the tab.\n     */\n    readonly title: Title<T>;\n\n    /**\n     * The node representing the tab.\n     */\n    readonly tab: HTMLElement;\n\n    /**\n     * The current client X position of the mouse.\n     */\n    readonly clientX: number;\n\n    /**\n     * The current client Y position of the mouse.\n     */\n    readonly clientY: number;\n\n    /**\n     * The mouse position in the tab coordinate.\n     */\n    readonly offset?: { x: number; y: number };\n  }\n\n  /**\n   * An object which holds the data to render a tab.\n   */\n  export interface IRenderData<T> {\n    /**\n     * The title associated with the tab.\n     */\n    readonly title: Title<T>;\n\n    /**\n     * Whether the tab is the current tab.\n     */\n    readonly current: boolean;\n\n    /**\n     * The z-index for the tab.\n     */\n    readonly zIndex: number;\n\n    /**\n     * The tabindex value for the tab.\n     */\n    readonly tabIndex?: number;\n  }\n\n  /**\n   * A renderer for use with a tab bar.\n   */\n  export interface IRenderer<T> {\n    /**\n     * A selector which matches the close icon node in a tab.\n     */\n    readonly closeIconSelector: string;\n\n    /**\n     * Render the virtual element for a tab.\n     *\n     * @param data - The data to use for rendering the tab.\n     *\n     * @returns A virtual element representing the tab.\n     */\n    renderTab(data: IRenderData<T>): VirtualElement;\n  }\n\n  /**\n   * The default implementation of `IRenderer`.\n   *\n   * #### Notes\n   * Subclasses are free to reimplement rendering methods as needed.\n   */\n  export class Renderer implements IRenderer<any> {\n    constructor() {\n      this._uuid = ++Renderer._nInstance;\n    }\n    /**\n     * A selector which matches the close icon node in a tab.\n     */\n    readonly closeIconSelector = '.lm-TabBar-tabCloseIcon';\n\n    /**\n     * Render the virtual element for a tab.\n     *\n     * @param data - The data to use for rendering the tab.\n     *\n     * @returns A virtual element representing the tab.\n     */\n    renderTab(data: IRenderData<any>): VirtualElement {\n      let title = data.title.caption;\n      let key = this.createTabKey(data);\n      let id = key;\n      let style = this.createTabStyle(data);\n      let className = this.createTabClass(data);\n      let dataset = this.createTabDataset(data);\n      let aria = this.createTabARIA(data);\n      if (data.title.closable) {\n        return h.li(\n          { id, key, className, title, style, dataset, ...aria },\n          this.renderIcon(data),\n          this.renderLabel(data),\n          this.renderCloseIcon(data)\n        );\n      } else {\n        return h.li(\n          { id, key, className, title, style, dataset, ...aria },\n          this.renderIcon(data),\n          this.renderLabel(data)\n        );\n      }\n    }\n\n    /**\n     * Render the icon element for a tab.\n     *\n     * @param data - The data to use for rendering the tab.\n     *\n     * @returns A virtual element representing the tab icon.\n     */\n    renderIcon(data: IRenderData<any>): VirtualElement {\n      const { title } = data;\n      let className = this.createIconClass(data);\n\n      // If title.icon is undefined, it will be ignored.\n      return h.div({ className }, title.icon!, title.iconLabel);\n    }\n\n    /**\n     * Render the label element for a tab.\n     *\n     * @param data - The data to use for rendering the tab.\n     *\n     * @returns A virtual element representing the tab label.\n     */\n    renderLabel(data: IRenderData<any>): VirtualElement {\n      return h.div({ className: 'lm-TabBar-tabLabel' }, data.title.label);\n    }\n\n    /**\n     * Render the close icon element for a tab.\n     *\n     * @param data - The data to use for rendering the tab.\n     *\n     * @returns A virtual element representing the tab close icon.\n     */\n    renderCloseIcon(data: IRenderData<any>): VirtualElement {\n      return h.div({ className: 'lm-TabBar-tabCloseIcon' });\n    }\n\n    /**\n     * Create a unique render key for the tab.\n     *\n     * @param data - The data to use for the tab.\n     *\n     * @returns The unique render key for the tab.\n     *\n     * #### Notes\n     * This method caches the key against the tab title the first time\n     * the key is generated. This enables efficient rendering of moved\n     * tabs and avoids subtle hover style artifacts.\n     */\n    createTabKey(data: IRenderData<any>): string {\n      let key = this._tabKeys.get(data.title);\n      if (key === undefined) {\n        key = `tab-key-${this._uuid}-${this._tabID++}`;\n        this._tabKeys.set(data.title, key);\n      }\n      return key;\n    }\n\n    /**\n     * Create the inline style object for a tab.\n     *\n     * @param data - The data to use for the tab.\n     *\n     * @returns The inline style data for the tab.\n     */\n    createTabStyle(data: IRenderData<any>): ElementInlineStyle {\n      return { zIndex: `${data.zIndex}` };\n    }\n\n    /**\n     * Create the class name for the tab.\n     *\n     * @param data - The data to use for the tab.\n     *\n     * @returns The full class name for the tab.\n     */\n    createTabClass(data: IRenderData<any>): string {\n      let name = 'lm-TabBar-tab';\n      if (data.title.className) {\n        name += ` ${data.title.className}`;\n      }\n      if (data.title.closable) {\n        name += ' lm-mod-closable';\n      }\n      if (data.current) {\n        name += ' lm-mod-current';\n      }\n      return name;\n    }\n\n    /**\n     * Create the dataset for a tab.\n     *\n     * @param data - The data to use for the tab.\n     *\n     * @returns The dataset for the tab.\n     */\n    createTabDataset(data: IRenderData<any>): ElementDataset {\n      return data.title.dataset;\n    }\n\n    /**\n     * Create the ARIA attributes for a tab.\n     *\n     * @param data - The data to use for the tab.\n     *\n     * @returns The ARIA attributes for the tab.\n     */\n    createTabARIA(data: IRenderData<any>): ElementARIAAttrs | ElementBaseAttrs {\n      return {\n        role: 'tab',\n        'aria-selected': data.current.toString(),\n        tabindex: `${data.tabIndex ?? '-1'}`\n      };\n    }\n\n    /**\n     * Create the class name for the tab icon.\n     *\n     * @param data - The data to use for the tab.\n     *\n     * @returns The full class name for the tab icon.\n     */\n    createIconClass(data: IRenderData<any>): string {\n      let name = 'lm-TabBar-tabIcon';\n      let extra = data.title.iconClass;\n      return extra ? `${name} ${extra}` : name;\n    }\n\n    private static _nInstance = 0;\n    private readonly _uuid: number;\n    private _tabID = 0;\n    private _tabKeys = new WeakMap<Title<any>, string>();\n  }\n\n  /**\n   * The default `Renderer` instance.\n   */\n  export const defaultRenderer = new Renderer();\n\n  /**\n   * A selector which matches the add button node in the tab bar.\n   */\n  export const addButtonSelector = '.lm-TabBar-addButton';\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * The start drag distance threshold.\n   */\n  export const DRAG_THRESHOLD = 5;\n\n  /**\n   * The detach distance threshold.\n   */\n  export const DETACH_THRESHOLD = 20;\n\n  /**\n   * A struct which holds the drag data for a tab bar.\n   */\n  export interface IDragData {\n    /**\n     * The tab node being dragged.\n     */\n    tab: HTMLElement;\n\n    /**\n     * The index of the tab being dragged.\n     */\n    index: number;\n\n    /**\n     * The mouse press client X position.\n     */\n    pressX: number;\n\n    /**\n     * The mouse press client Y position.\n     */\n    pressY: number;\n\n    /**\n     * The offset left/top of the tab being dragged.\n     *\n     * This will be `-1` if the drag is not active.\n     */\n    tabPos: number;\n\n    /**\n     * The offset width/height of the tab being dragged.\n     *\n     * This will be `-1` if the drag is not active.\n     */\n    tabSize: number;\n\n    /**\n     * The original mouse X/Y position in tab coordinates.\n     *\n     * This will be `-1` if the drag is not active.\n     */\n    tabPressPos: number;\n\n    /**\n     * The original mouse position in tab coordinates.\n     *\n     * This is undefined if the drag is not active.\n     */\n    tabPressOffset?: { x: number; y: number };\n\n    /**\n     * The tab target index upon mouse release.\n     *\n     * This will be `-1` if the drag is not active.\n     */\n    targetIndex: number;\n\n    /**\n     * The array of tab layout objects snapped at drag start.\n     *\n     * This will be `null` if the drag is not active.\n     */\n    tabLayout: ITabLayout[] | null;\n\n    /**\n     * The bounding client rect of the tab bar content node.\n     *\n     * This will be `null` if the drag is not active.\n     */\n    contentRect: DOMRect | null;\n\n    /**\n     * The disposable to clean up the cursor override.\n     *\n     * This will be `null` if the drag is not active.\n     */\n    override: IDisposable | null;\n\n    /**\n     * Whether the drag is currently active.\n     */\n    dragActive: boolean;\n\n    /**\n     * Whether the drag has been aborted.\n     */\n    dragAborted: boolean;\n\n    /**\n     * Whether a detach request as been made.\n     */\n    detachRequested: boolean;\n  }\n\n  /**\n   * An object which holds layout data for a tab.\n   */\n  export interface ITabLayout {\n    /**\n     * The left/top margin value for the tab.\n     */\n    margin: number;\n\n    /**\n     * The offset left/top position of the tab.\n     */\n    pos: number;\n\n    /**\n     * The offset width/height of the tab.\n     */\n    size: number;\n  }\n\n  /**\n   * Create the DOM node for a tab bar.\n   */\n  export function createNode(): HTMLDivElement {\n    let node = document.createElement('div');\n    let content = document.createElement('ul');\n    content.setAttribute('role', 'tablist');\n    content.className = 'lm-TabBar-content';\n    node.appendChild(content);\n\n    let add = document.createElement('div');\n    add.className = 'lm-TabBar-addButton lm-mod-hidden';\n    add.setAttribute('tabindex', '-1');\n    add.setAttribute('role', 'button');\n    node.appendChild(add);\n    return node;\n  }\n\n  /**\n   * Coerce a title or options into a real title.\n   */\n  export function asTitle<T>(value: Title<T> | Title.IOptions<T>): Title<T> {\n    return value instanceof Title ? value : new Title<T>(value);\n  }\n\n  /**\n   * Parse the transition duration for a tab node.\n   */\n  export function parseTransitionDuration(tab: HTMLElement): number {\n    let style = window.getComputedStyle(tab);\n    return 1000 * (parseFloat(style.transitionDuration!) || 0);\n  }\n\n  /**\n   * Get a snapshot of the current tab layout values.\n   */\n  export function snapTabLayout(\n    tabs: HTMLCollection,\n    orientation: TabBar.Orientation\n  ): ITabLayout[] {\n    let layout = new Array<ITabLayout>(tabs.length);\n    for (let i = 0, n = tabs.length; i < n; ++i) {\n      let node = tabs[i] as HTMLElement;\n      let style = window.getComputedStyle(node);\n      if (orientation === 'horizontal') {\n        layout[i] = {\n          pos: node.offsetLeft,\n          size: node.offsetWidth,\n          margin: parseFloat(style.marginLeft!) || 0\n        };\n      } else {\n        layout[i] = {\n          pos: node.offsetTop,\n          size: node.offsetHeight,\n          margin: parseFloat(style.marginTop!) || 0\n        };\n      }\n    }\n    return layout;\n  }\n\n  /**\n   * Test if the event exceeds the drag threshold.\n   */\n  export function dragExceeded(data: IDragData, event: MouseEvent): boolean {\n    let dx = Math.abs(event.clientX - data.pressX);\n    let dy = Math.abs(event.clientY - data.pressY);\n    return dx >= DRAG_THRESHOLD || dy >= DRAG_THRESHOLD;\n  }\n\n  /**\n   * Test if the event exceeds the drag detach threshold.\n   */\n  export function detachExceeded(data: IDragData, event: MouseEvent): boolean {\n    let rect = data.contentRect!;\n    return (\n      event.clientX < rect.left - DETACH_THRESHOLD ||\n      event.clientX >= rect.right + DETACH_THRESHOLD ||\n      event.clientY < rect.top - DETACH_THRESHOLD ||\n      event.clientY >= rect.bottom + DETACH_THRESHOLD\n    );\n  }\n\n  /**\n   * Update the relative tab positions and computed target index.\n   */\n  export function layoutTabs(\n    tabs: HTMLCollection,\n    data: IDragData,\n    event: MouseEvent,\n    orientation: TabBar.Orientation\n  ): void {\n    // Compute the orientation-sensitive values.\n    let pressPos: number;\n    let localPos: number;\n    let clientPos: number;\n    let clientSize: number;\n    if (orientation === 'horizontal') {\n      pressPos = data.pressX;\n      localPos = event.clientX - data.contentRect!.left;\n      clientPos = event.clientX;\n      clientSize = data.contentRect!.width;\n    } else {\n      pressPos = data.pressY;\n      localPos = event.clientY - data.contentRect!.top;\n      clientPos = event.clientY;\n      clientSize = data.contentRect!.height;\n    }\n\n    // Compute the target data.\n    let targetIndex = data.index;\n    let targetPos = localPos - data.tabPressPos;\n    let targetEnd = targetPos + data.tabSize;\n\n    // Update the relative tab positions.\n    for (let i = 0, n = tabs.length; i < n; ++i) {\n      let pxPos: string;\n      let layout = data.tabLayout![i];\n      let threshold = layout.pos + (layout.size >> 1);\n      if (i < data.index && targetPos < threshold) {\n        pxPos = `${data.tabSize + data.tabLayout![i + 1].margin}px`;\n        targetIndex = Math.min(targetIndex, i);\n      } else if (i > data.index && targetEnd > threshold) {\n        pxPos = `${-data.tabSize - layout.margin}px`;\n        targetIndex = Math.max(targetIndex, i);\n      } else if (i === data.index) {\n        let ideal = clientPos - pressPos;\n        let limit = clientSize - (data.tabPos + data.tabSize);\n        pxPos = `${Math.max(-data.tabPos, Math.min(ideal, limit))}px`;\n      } else {\n        pxPos = '';\n      }\n      if (orientation === 'horizontal') {\n        (tabs[i] as HTMLElement).style.left = pxPos;\n      } else {\n        (tabs[i] as HTMLElement).style.top = pxPos;\n      }\n    }\n\n    // Update the computed target index.\n    data.targetIndex = targetIndex;\n  }\n\n  /**\n   * Position the drag tab at its final resting relative position.\n   */\n  export function finalizeTabPosition(\n    data: IDragData,\n    orientation: TabBar.Orientation\n  ): void {\n    // Compute the orientation-sensitive client size.\n    let clientSize: number;\n    if (orientation === 'horizontal') {\n      clientSize = data.contentRect!.width;\n    } else {\n      clientSize = data.contentRect!.height;\n    }\n\n    // Compute the ideal final tab position.\n    let ideal: number;\n    if (data.targetIndex === data.index) {\n      ideal = 0;\n    } else if (data.targetIndex > data.index) {\n      let tgt = data.tabLayout![data.targetIndex];\n      ideal = tgt.pos + tgt.size - data.tabSize - data.tabPos;\n    } else {\n      let tgt = data.tabLayout![data.targetIndex];\n      ideal = tgt.pos - data.tabPos;\n    }\n\n    // Compute the tab position limit.\n    let limit = clientSize - (data.tabPos + data.tabSize);\n    let final = Math.max(-data.tabPos, Math.min(ideal, limit));\n\n    // Set the final orientation-sensitive position.\n    if (orientation === 'horizontal') {\n      data.tab.style.left = `${final}px`;\n    } else {\n      data.tab.style.top = `${final}px`;\n    }\n  }\n\n  /**\n   * Reset the relative positions of the given tabs.\n   */\n  export function resetTabPositions(\n    tabs: HTMLCollection,\n    orientation: TabBar.Orientation\n  ): void {\n    for (const tab of tabs) {\n      if (orientation === 'horizontal') {\n        (tab as HTMLElement).style.left = '';\n      } else {\n        (tab as HTMLElement).style.top = '';\n      }\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { ArrayExt, empty } from '@lumino/algorithm';\n\nimport { ElementExt } from '@lumino/domutils';\n\nimport { Message, MessageLoop } from '@lumino/messaging';\n\nimport { BoxEngine, BoxSizer } from './boxengine';\n\nimport { Layout, LayoutItem } from './layout';\n\nimport { TabBar } from './tabbar';\n\nimport Utils from './utils';\n\nimport { Widget } from './widget';\n\n/**\n * A layout which provides a flexible docking arrangement.\n *\n * #### Notes\n * The consumer of this layout is responsible for handling all signals\n * from the generated tab bars and managing the visibility of widgets\n * and tab bars as needed.\n */\nexport class DockLayout extends Layout {\n  /**\n   * Construct a new dock layout.\n   *\n   * @param options - The options for initializing the layout.\n   */\n  constructor(options: DockLayout.IOptions) {\n    super();\n    this.renderer = options.renderer;\n    if (options.spacing !== undefined) {\n      this._spacing = Utils.clampDimension(options.spacing);\n    }\n    this._document = options.document || document;\n    this._hiddenMode =\n      options.hiddenMode !== undefined\n        ? options.hiddenMode\n        : Widget.HiddenMode.Display;\n  }\n\n  /**\n   * Dispose of the resources held by the layout.\n   *\n   * #### Notes\n   * This will clear and dispose all widgets in the layout.\n   */\n  dispose(): void {\n    // Get an iterator over the widgets in the layout.\n    let widgets = this[Symbol.iterator]();\n\n    // Dispose of the layout items.\n    this._items.forEach(item => {\n      item.dispose();\n    });\n\n    // Clear the layout state before disposing the widgets.\n    this._box = null;\n    this._root = null;\n    this._items.clear();\n\n    // Dispose of the widgets contained in the old layout root.\n    for (const widget of widgets) {\n      widget.dispose();\n    }\n\n    // Dispose of the base class.\n    super.dispose();\n  }\n\n  /**\n   * The renderer used by the dock layout.\n   */\n  readonly renderer: DockLayout.IRenderer;\n\n  /**\n   * The method for hiding child widgets.\n   *\n   * #### Notes\n   * If there is only one child widget, `Display` hiding mode will be used\n   * regardless of this setting.\n   */\n  get hiddenMode(): Widget.HiddenMode {\n    return this._hiddenMode;\n  }\n  set hiddenMode(v: Widget.HiddenMode) {\n    if (this._hiddenMode === v) {\n      return;\n    }\n    this._hiddenMode = v;\n    for (const bar of this.tabBars()) {\n      if (bar.titles.length > 1) {\n        for (const title of bar.titles) {\n          title.owner.hiddenMode = this._hiddenMode;\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the inter-element spacing for the dock layout.\n   */\n  get spacing(): number {\n    return this._spacing;\n  }\n\n  /**\n   * Set the inter-element spacing for the dock layout.\n   */\n  set spacing(value: number) {\n    value = Utils.clampDimension(value);\n    if (this._spacing === value) {\n      return;\n    }\n    this._spacing = value;\n    if (!this.parent) {\n      return;\n    }\n    this.parent.fit();\n  }\n\n  /**\n   * Whether the dock layout is empty.\n   */\n  get isEmpty(): boolean {\n    return this._root === null;\n  }\n\n  /**\n   * Create an iterator over all widgets in the layout.\n   *\n   * @returns A new iterator over the widgets in the layout.\n   *\n   * #### Notes\n   * This iterator includes the generated tab bars.\n   */\n  [Symbol.iterator](): IterableIterator<Widget> {\n    return this._root ? this._root.iterAllWidgets() : empty();\n  }\n\n  /**\n   * Create an iterator over the user widgets in the layout.\n   *\n   * @returns A new iterator over the user widgets in the layout.\n   *\n   * #### Notes\n   * This iterator does not include the generated tab bars.\n   */\n  widgets(): IterableIterator<Widget> {\n    return this._root ? this._root.iterUserWidgets() : empty();\n  }\n\n  /**\n   * Create an iterator over the selected widgets in the layout.\n   *\n   * @returns A new iterator over the selected user widgets.\n   *\n   * #### Notes\n   * This iterator yields the widgets corresponding to the current tab\n   * of each tab bar in the layout.\n   */\n  selectedWidgets(): IterableIterator<Widget> {\n    return this._root ? this._root.iterSelectedWidgets() : empty();\n  }\n\n  /**\n   * Create an iterator over the tab bars in the layout.\n   *\n   * @returns A new iterator over the tab bars in the layout.\n   *\n   * #### Notes\n   * This iterator does not include the user widgets.\n   */\n  tabBars(): IterableIterator<TabBar<Widget>> {\n    return this._root ? this._root.iterTabBars() : empty();\n  }\n\n  /**\n   * Create an iterator over the handles in the layout.\n   *\n   * @returns A new iterator over the handles in the layout.\n   */\n  handles(): IterableIterator<HTMLDivElement> {\n    return this._root ? this._root.iterHandles() : empty();\n  }\n\n  /**\n   * Move a handle to the given offset position.\n   *\n   * @param handle - The handle to move.\n   *\n   * @param offsetX - The desired offset X position of the handle.\n   *\n   * @param offsetY - The desired offset Y position of the handle.\n   *\n   * #### Notes\n   * If the given handle is not contained in the layout, this is no-op.\n   *\n   * The handle will be moved as close as possible to the desired\n   * position without violating any of the layout constraints.\n   *\n   * Only one of the coordinates is used depending on the orientation\n   * of the handle. This method accepts both coordinates to make it\n   * easy to invoke from a mouse move event without needing to know\n   * the handle orientation.\n   */\n  moveHandle(handle: HTMLDivElement, offsetX: number, offsetY: number): void {\n    // Bail early if there is no root or if the handle is hidden.\n    let hidden = handle.classList.contains('lm-mod-hidden');\n    if (!this._root || hidden) {\n      return;\n    }\n\n    // Lookup the split node for the handle.\n    let data = this._root.findSplitNode(handle);\n    if (!data) {\n      return;\n    }\n\n    // Compute the desired delta movement for the handle.\n    let delta: number;\n    if (data.node.orientation === 'horizontal') {\n      delta = offsetX - handle.offsetLeft;\n    } else {\n      delta = offsetY - handle.offsetTop;\n    }\n\n    // Bail if there is no handle movement.\n    if (delta === 0) {\n      return;\n    }\n\n    // Prevent sibling resizing unless needed.\n    data.node.holdSizes();\n\n    // Adjust the sizers to reflect the handle movement.\n    BoxEngine.adjust(data.node.sizers, data.index, delta);\n\n    // Update the layout of the widgets.\n    if (this.parent) {\n      this.parent.update();\n    }\n  }\n\n  /**\n   * Save the current configuration of the dock layout.\n   *\n   * @returns A new config object for the current layout state.\n   *\n   * #### Notes\n   * The return value can be provided to the `restoreLayout` method\n   * in order to restore the layout to its current configuration.\n   */\n  saveLayout(): DockLayout.ILayoutConfig {\n    // Bail early if there is no root.\n    if (!this._root) {\n      return { main: null };\n    }\n\n    // Hold the current sizes in the layout tree.\n    this._root.holdAllSizes();\n\n    // Return the layout config.\n    return { main: this._root.createConfig() };\n  }\n\n  /**\n   * Restore the layout to a previously saved configuration.\n   *\n   * @param config - The layout configuration to restore.\n   *\n   * #### Notes\n   * Widgets which currently belong to the layout but which are not\n   * contained in the config will be unparented.\n   */\n  restoreLayout(config: DockLayout.ILayoutConfig): void {\n    // Create the widget set for validating the config.\n    let widgetSet = new Set<Widget>();\n\n    // Normalize the main area config and collect the widgets.\n    let mainConfig: DockLayout.AreaConfig | null;\n    if (config.main) {\n      mainConfig = Private.normalizeAreaConfig(config.main, widgetSet);\n    } else {\n      mainConfig = null;\n    }\n\n    // Create iterators over the old content.\n    let oldWidgets = this.widgets();\n    let oldTabBars = this.tabBars();\n    let oldHandles = this.handles();\n\n    // Clear the root before removing the old content.\n    this._root = null;\n\n    // Unparent the old widgets which are not in the new config.\n    for (const widget of oldWidgets) {\n      if (!widgetSet.has(widget)) {\n        widget.parent = null;\n      }\n    }\n\n    // Dispose of the old tab bars.\n    for (const tabBar of oldTabBars) {\n      tabBar.dispose();\n    }\n\n    // Remove the old handles.\n    for (const handle of oldHandles) {\n      if (handle.parentNode) {\n        handle.parentNode.removeChild(handle);\n      }\n    }\n\n    // Reparent the new widgets to the current parent.\n    for (const widget of widgetSet) {\n      widget.parent = this.parent;\n    }\n\n    // Create the root node for the new config.\n    if (mainConfig) {\n      this._root = Private.realizeAreaConfig(\n        mainConfig,\n        {\n          // Ignoring optional `document` argument as we must reuse `this._document`\n          createTabBar: (document?: Document | ShadowRoot) =>\n            this._createTabBar(),\n          createHandle: () => this._createHandle()\n        },\n        this._document\n      );\n    } else {\n      this._root = null;\n    }\n\n    // If there is no parent, there is nothing more to do.\n    if (!this.parent) {\n      return;\n    }\n\n    // Attach the new widgets to the parent.\n    widgetSet.forEach(widget => {\n      this.attachWidget(widget);\n    });\n\n    // Post a fit request to the parent.\n    this.parent.fit();\n  }\n\n  /**\n   * Add a widget to the dock layout.\n   *\n   * @param widget - The widget to add to the dock layout.\n   *\n   * @param options - The additional options for adding the widget.\n   *\n   * #### Notes\n   * The widget will be moved if it is already contained in the layout.\n   *\n   * An error will be thrown if the reference widget is invalid.\n   */\n  addWidget(widget: Widget, options: DockLayout.IAddOptions = {}): void {\n    // Parse the options.\n    let ref = options.ref || null;\n    let mode = options.mode || 'tab-after';\n\n    // Find the tab node which holds the reference widget.\n    let refNode: Private.TabLayoutNode | null = null;\n    if (this._root && ref) {\n      refNode = this._root.findTabNode(ref);\n    }\n\n    // Throw an error if the reference widget is invalid.\n    if (ref && !refNode) {\n      throw new Error('Reference widget is not in the layout.');\n    }\n\n    // Reparent the widget to the current layout parent.\n    widget.parent = this.parent;\n\n    // Insert the widget according to the insert mode.\n    switch (mode) {\n      case 'tab-after':\n        this._insertTab(widget, ref, refNode, true);\n        break;\n      case 'tab-before':\n        this._insertTab(widget, ref, refNode, false);\n        break;\n      case 'split-top':\n        this._insertSplit(widget, ref, refNode, 'vertical', false);\n        break;\n      case 'split-left':\n        this._insertSplit(widget, ref, refNode, 'horizontal', false);\n        break;\n      case 'split-right':\n        this._insertSplit(widget, ref, refNode, 'horizontal', true);\n        break;\n      case 'split-bottom':\n        this._insertSplit(widget, ref, refNode, 'vertical', true);\n        break;\n      case 'merge-top':\n        this._insertSplit(widget, ref, refNode, 'vertical', false, true);\n        break;\n      case 'merge-left':\n        this._insertSplit(widget, ref, refNode, 'horizontal', false, true);\n        break;\n      case 'merge-right':\n        this._insertSplit(widget, ref, refNode, 'horizontal', true, true);\n        break;\n      case 'merge-bottom':\n        this._insertSplit(widget, ref, refNode, 'vertical', true, true);\n        break;\n    }\n\n    // Do nothing else if there is no parent widget.\n    if (!this.parent) {\n      return;\n    }\n\n    // Ensure the widget is attached to the parent widget.\n    this.attachWidget(widget);\n\n    // Post a fit request for the parent widget.\n    this.parent.fit();\n  }\n\n  /**\n   * Remove a widget from the layout.\n   *\n   * @param widget - The widget to remove from the layout.\n   *\n   * #### Notes\n   * A widget is automatically removed from the layout when its `parent`\n   * is set to `null`. This method should only be invoked directly when\n   * removing a widget from a layout which has yet to be installed on a\n   * parent widget.\n   *\n   * This method does *not* modify the widget's `parent`.\n   */\n  removeWidget(widget: Widget): void {\n    // Remove the widget from its current layout location.\n    this._removeWidget(widget);\n\n    // Do nothing else if there is no parent widget.\n    if (!this.parent) {\n      return;\n    }\n\n    // Detach the widget from the parent widget.\n    this.detachWidget(widget);\n\n    // Post a fit request for the parent widget.\n    this.parent.fit();\n  }\n\n  /**\n   * Find the tab area which contains the given client position.\n   *\n   * @param clientX - The client X position of interest.\n   *\n   * @param clientY - The client Y position of interest.\n   *\n   * @returns The geometry of the tab area at the given position, or\n   *   `null` if there is no tab area at the given position.\n   */\n  hitTestTabAreas(\n    clientX: number,\n    clientY: number\n  ): DockLayout.ITabAreaGeometry | null {\n    // Bail early if hit testing cannot produce valid results.\n    if (!this._root || !this.parent || !this.parent.isVisible) {\n      return null;\n    }\n\n    // Ensure the parent box sizing data is computed.\n    if (!this._box) {\n      this._box = ElementExt.boxSizing(this.parent.node);\n    }\n\n    // Convert from client to local coordinates.\n    let rect = this.parent.node.getBoundingClientRect();\n    let x = clientX - rect.left - this._box.borderLeft;\n    let y = clientY - rect.top - this._box.borderTop;\n\n    // Find the tab layout node at the local position.\n    let tabNode = this._root.hitTestTabNodes(x, y);\n\n    // Bail if a tab layout node was not found.\n    if (!tabNode) {\n      return null;\n    }\n\n    // Extract the data from the tab node.\n    let { tabBar, top, left, width, height } = tabNode;\n\n    // Compute the right and bottom edges of the tab area.\n    let borderWidth = this._box.borderLeft + this._box.borderRight;\n    let borderHeight = this._box.borderTop + this._box.borderBottom;\n    let right = rect.width - borderWidth - (left + width);\n    let bottom = rect.height - borderHeight - (top + height);\n\n    // Return the hit test results.\n    return { tabBar, x, y, top, left, right, bottom, width, height };\n  }\n\n  /**\n   * Perform layout initialization which requires the parent widget.\n   */\n  protected init(): void {\n    // Perform superclass initialization.\n    super.init();\n\n    // Attach each widget to the parent.\n    for (const widget of this) {\n      this.attachWidget(widget);\n    }\n\n    // Attach each handle to the parent.\n    for (const handle of this.handles()) {\n      this.parent!.node.appendChild(handle);\n    }\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * Attach the widget to the layout parent widget.\n   *\n   * @param widget - The widget to attach to the parent.\n   *\n   * #### Notes\n   * This is a no-op if the widget is already attached.\n   */\n  protected attachWidget(widget: Widget): void {\n    // Do nothing if the widget is already attached.\n    if (this.parent!.node === widget.node.parentNode) {\n      return;\n    }\n\n    // Create the layout item for the widget.\n    this._items.set(widget, new LayoutItem(widget));\n\n    // Send a `'before-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\n    }\n\n    // Add the widget's node to the parent.\n    this.parent!.node.appendChild(widget.node);\n\n    // Send an `'after-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\n    }\n  }\n\n  /**\n   * Detach the widget from the layout parent widget.\n   *\n   * @param widget - The widget to detach from the parent.\n   *\n   * #### Notes\n   * This is a no-op if the widget is not attached.\n   */\n  protected detachWidget(widget: Widget): void {\n    // Do nothing if the widget is not attached.\n    if (this.parent!.node !== widget.node.parentNode) {\n      return;\n    }\n\n    // Send a `'before-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\n    }\n\n    // Remove the widget's node from the parent.\n    this.parent!.node.removeChild(widget.node);\n\n    // Send an `'after-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\n    }\n\n    // Delete the layout item for the widget.\n    let item = this._items.get(widget);\n    if (item) {\n      this._items.delete(widget);\n      item.dispose();\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-show'` message.\n   */\n  protected onBeforeShow(msg: Message): void {\n    super.onBeforeShow(msg);\n    this.parent!.update();\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    super.onBeforeAttach(msg);\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-shown'` message.\n   */\n  protected onChildShown(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-hidden'` message.\n   */\n  protected onChildHidden(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'resize'` message.\n   */\n  protected onResize(msg: Widget.ResizeMessage): void {\n    if (this.parent!.isVisible) {\n      this._update(msg.width, msg.height);\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    if (this.parent!.isVisible) {\n      this._update(-1, -1);\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'fit-request'` message.\n   */\n  protected onFitRequest(msg: Message): void {\n    if (this.parent!.isAttached) {\n      this._fit();\n    }\n  }\n\n  /**\n   * Remove the specified widget from the layout structure.\n   *\n   * #### Notes\n   * This is a no-op if the widget is not in the layout tree.\n   *\n   * This does not detach the widget from the parent node.\n   */\n  private _removeWidget(widget: Widget): void {\n    // Bail early if there is no layout root.\n    if (!this._root) {\n      return;\n    }\n\n    // Find the tab node which contains the given widget.\n    let tabNode = this._root.findTabNode(widget);\n\n    // Bail early if the tab node is not found.\n    if (!tabNode) {\n      return;\n    }\n\n    Private.removeAria(widget);\n\n    // If there are multiple tabs, just remove the widget's tab.\n    if (tabNode.tabBar.titles.length > 1) {\n      tabNode.tabBar.removeTab(widget.title);\n      if (\n        this._hiddenMode === Widget.HiddenMode.Scale &&\n        tabNode.tabBar.titles.length == 1\n      ) {\n        const existingWidget = tabNode.tabBar.titles[0].owner;\n        existingWidget.hiddenMode = Widget.HiddenMode.Display;\n      }\n      return;\n    }\n\n    // Otherwise, the tab node needs to be removed...\n\n    // Dispose the tab bar.\n    tabNode.tabBar.dispose();\n\n    // Handle the case where the tab node is the root.\n    if (this._root === tabNode) {\n      this._root = null;\n      return;\n    }\n\n    // Otherwise, remove the tab node from its parent...\n\n    // Prevent widget resizing unless needed.\n    this._root.holdAllSizes();\n\n    // Clear the parent reference on the tab node.\n    let splitNode = tabNode.parent!;\n    tabNode.parent = null;\n\n    // Remove the tab node from its parent split node.\n    let i = ArrayExt.removeFirstOf(splitNode.children, tabNode);\n    let handle = ArrayExt.removeAt(splitNode.handles, i)!;\n    ArrayExt.removeAt(splitNode.sizers, i);\n\n    // Remove the handle from its parent DOM node.\n    if (handle.parentNode) {\n      handle.parentNode.removeChild(handle);\n    }\n\n    // If there are multiple children, just update the handles.\n    if (splitNode.children.length > 1) {\n      splitNode.syncHandles();\n      return;\n    }\n\n    // Otherwise, the split node also needs to be removed...\n\n    // Clear the parent reference on the split node.\n    let maybeParent = splitNode.parent;\n    splitNode.parent = null;\n\n    // Lookup the remaining child node and handle.\n    let childNode = splitNode.children[0];\n    let childHandle = splitNode.handles[0];\n\n    // Clear the split node data.\n    splitNode.children.length = 0;\n    splitNode.handles.length = 0;\n    splitNode.sizers.length = 0;\n\n    // Remove the child handle from its parent node.\n    if (childHandle.parentNode) {\n      childHandle.parentNode.removeChild(childHandle);\n    }\n\n    // Handle the case where the split node is the root.\n    if (this._root === splitNode) {\n      childNode.parent = null;\n      this._root = childNode;\n      return;\n    }\n\n    // Otherwise, move the child node to the parent node...\n    let parentNode = maybeParent!;\n\n    // Lookup the index of the split node.\n    let j = parentNode.children.indexOf(splitNode);\n\n    // Handle the case where the child node is a tab node.\n    if (childNode instanceof Private.TabLayoutNode) {\n      childNode.parent = parentNode;\n      parentNode.children[j] = childNode;\n      return;\n    }\n\n    // Remove the split data from the parent.\n    let splitHandle = ArrayExt.removeAt(parentNode.handles, j)!;\n    ArrayExt.removeAt(parentNode.children, j);\n    ArrayExt.removeAt(parentNode.sizers, j);\n\n    // Remove the handle from its parent node.\n    if (splitHandle.parentNode) {\n      splitHandle.parentNode.removeChild(splitHandle);\n    }\n\n    // The child node and the split parent node will have the same\n    // orientation. Merge the grand-children with the parent node.\n    for (let i = 0, n = childNode.children.length; i < n; ++i) {\n      let gChild = childNode.children[i];\n      let gHandle = childNode.handles[i];\n      let gSizer = childNode.sizers[i];\n      ArrayExt.insert(parentNode.children, j + i, gChild);\n      ArrayExt.insert(parentNode.handles, j + i, gHandle);\n      ArrayExt.insert(parentNode.sizers, j + i, gSizer);\n      gChild.parent = parentNode;\n    }\n\n    // Clear the child node.\n    childNode.children.length = 0;\n    childNode.handles.length = 0;\n    childNode.sizers.length = 0;\n    childNode.parent = null;\n\n    // Sync the handles on the parent node.\n    parentNode.syncHandles();\n  }\n\n  /**\n   * Create the tab layout node to hold the widget.\n   */\n  private _createTabNode(widget: Widget): Private.TabLayoutNode {\n    let tabNode = new Private.TabLayoutNode(this._createTabBar());\n    tabNode.tabBar.addTab(widget.title);\n    Private.addAria(widget, tabNode.tabBar);\n    return tabNode;\n  }\n\n  /**\n   * Insert a widget next to an existing tab.\n   *\n   * #### Notes\n   * This does not attach the widget to the parent widget.\n   */\n  private _insertTab(\n    widget: Widget,\n    ref: Widget | null,\n    refNode: Private.TabLayoutNode | null,\n    after: boolean\n  ): void {\n    // Do nothing if the tab is inserted next to itself.\n    if (widget === ref) {\n      return;\n    }\n\n    // Create the root if it does not exist.\n    if (!this._root) {\n      let tabNode = new Private.TabLayoutNode(this._createTabBar());\n      tabNode.tabBar.addTab(widget.title);\n      this._root = tabNode;\n      Private.addAria(widget, tabNode.tabBar);\n      return;\n    }\n\n    // Use the first tab node as the ref node if needed.\n    if (!refNode) {\n      refNode = this._root.findFirstTabNode()!;\n    }\n\n    // If the widget is not contained in the ref node, ensure it is\n    // removed from the layout and hidden before being added again.\n    if (refNode.tabBar.titles.indexOf(widget.title) === -1) {\n      this._removeWidget(widget);\n      widget.hide();\n    }\n\n    // Lookup the target index for inserting the tab.\n    let index: number;\n    if (ref) {\n      index = refNode.tabBar.titles.indexOf(ref.title);\n    } else {\n      index = refNode.tabBar.currentIndex;\n    }\n\n    // Using transform create an additional layer in the pixel pipeline\n    // to limit the number of layer, it is set only if there is more than one widget.\n    if (this._hiddenMode === Widget.HiddenMode.Scale) {\n      if (refNode.tabBar.titles.length === 0) {\n        // Singular tab should use display mode to limit number of layers.\n        widget.hiddenMode = Widget.HiddenMode.Display;\n      } else if (refNode.tabBar.titles.length == 1) {\n        // If we are adding a second tab, switch the existing tab back to scale.\n        const existingWidget = refNode.tabBar.titles[0].owner;\n        existingWidget.hiddenMode = Widget.HiddenMode.Scale;\n      } else {\n        // For the third and subsequent tabs no special action is needed.\n        widget.hiddenMode = Widget.HiddenMode.Scale;\n      }\n    } else {\n      // For all other modes just propagate the current mode.\n      widget.hiddenMode = this._hiddenMode;\n    }\n\n    // Insert the widget's tab relative to the target index.\n    refNode.tabBar.insertTab(index + (after ? 1 : 0), widget.title);\n    Private.addAria(widget, refNode.tabBar);\n  }\n\n  /**\n   * Insert a widget as a new split area.\n   *\n   * #### Notes\n   * This does not attach the widget to the parent widget.\n   */\n  private _insertSplit(\n    widget: Widget,\n    ref: Widget | null,\n    refNode: Private.TabLayoutNode | null,\n    orientation: Private.Orientation,\n    after: boolean,\n    merge: boolean = false\n  ): void {\n    // Do nothing if there is no effective split.\n    if (widget === ref && refNode && refNode.tabBar.titles.length === 1) {\n      return;\n    }\n\n    // Ensure the widget is removed from the current layout.\n    this._removeWidget(widget);\n\n    // Set the root if it does not exist.\n    if (!this._root) {\n      this._root = this._createTabNode(widget);\n      return;\n    }\n\n    // If the ref node parent is null, split the root.\n    if (!refNode || !refNode.parent) {\n      // Ensure the root is split with the correct orientation.\n      let root = this._splitRoot(orientation);\n\n      // Determine the insert index for the new tab node.\n      let i = after ? root.children.length : 0;\n\n      // Normalize the split node.\n      root.normalizeSizes();\n\n      // Create the sizer for new tab node.\n      let sizer = Private.createSizer(refNode ? 1 : Private.GOLDEN_RATIO);\n\n      // Insert the tab node sized to the golden ratio.\n      let tabNode = this._createTabNode(widget);\n      ArrayExt.insert(root.children, i, tabNode);\n      ArrayExt.insert(root.sizers, i, sizer);\n      ArrayExt.insert(root.handles, i, this._createHandle());\n      tabNode.parent = root;\n\n      // Re-normalize the split node to maintain the ratios.\n      root.normalizeSizes();\n\n      // Finally, synchronize the visibility of the handles.\n      root.syncHandles();\n      return;\n    }\n\n    // Lookup the split node for the ref widget.\n    let splitNode = refNode.parent;\n\n    // If the split node already had the correct orientation,\n    // the widget can be inserted into the split node directly.\n    if (splitNode.orientation === orientation) {\n      // Find the index of the ref node.\n      let i = splitNode.children.indexOf(refNode);\n\n      // Conditionally reuse a tab layout found in the wanted position.\n      if (merge) {\n        let j = i + (after ? 1 : -1);\n        let sibling = splitNode.children[j];\n        if (sibling instanceof Private.TabLayoutNode) {\n          this._insertTab(widget, null, sibling, true);\n          ++sibling.tabBar.currentIndex;\n          return;\n        }\n      }\n\n      // Normalize the split node.\n      splitNode.normalizeSizes();\n\n      // Consume half the space for the insert location.\n      let s = (splitNode.sizers[i].sizeHint /= 2);\n\n      // Insert the tab node sized to the other half.\n      let j = i + (after ? 1 : 0);\n      let tabNode = this._createTabNode(widget);\n      ArrayExt.insert(splitNode.children, j, tabNode);\n      ArrayExt.insert(splitNode.sizers, j, Private.createSizer(s));\n      ArrayExt.insert(splitNode.handles, j, this._createHandle());\n      tabNode.parent = splitNode;\n\n      // Finally, synchronize the visibility of the handles.\n      splitNode.syncHandles();\n      return;\n    }\n\n    // Remove the ref node from the split node.\n    let i = ArrayExt.removeFirstOf(splitNode.children, refNode);\n\n    // Create a new normalized split node for the children.\n    let childNode = new Private.SplitLayoutNode(orientation);\n    childNode.normalized = true;\n\n    // Add the ref node sized to half the space.\n    childNode.children.push(refNode);\n    childNode.sizers.push(Private.createSizer(0.5));\n    childNode.handles.push(this._createHandle());\n    refNode.parent = childNode;\n\n    // Add the tab node sized to the other half.\n    let j = after ? 1 : 0;\n    let tabNode = this._createTabNode(widget);\n    ArrayExt.insert(childNode.children, j, tabNode);\n    ArrayExt.insert(childNode.sizers, j, Private.createSizer(0.5));\n    ArrayExt.insert(childNode.handles, j, this._createHandle());\n    tabNode.parent = childNode;\n\n    // Synchronize the visibility of the handles.\n    childNode.syncHandles();\n\n    // Finally, add the new child node to the original split node.\n    ArrayExt.insert(splitNode.children, i, childNode);\n    childNode.parent = splitNode;\n  }\n\n  /**\n   * Ensure the root is a split node with the given orientation.\n   */\n  private _splitRoot(\n    orientation: Private.Orientation\n  ): Private.SplitLayoutNode {\n    // Bail early if the root already meets the requirements.\n    let oldRoot = this._root;\n    if (oldRoot instanceof Private.SplitLayoutNode) {\n      if (oldRoot.orientation === orientation) {\n        return oldRoot;\n      }\n    }\n\n    // Create a new root node with the specified orientation.\n    let newRoot = (this._root = new Private.SplitLayoutNode(orientation));\n\n    // Add the old root to the new root.\n    if (oldRoot) {\n      newRoot.children.push(oldRoot);\n      newRoot.sizers.push(Private.createSizer(0));\n      newRoot.handles.push(this._createHandle());\n      oldRoot.parent = newRoot;\n    }\n\n    // Return the new root as a convenience.\n    return newRoot;\n  }\n\n  /**\n   * Fit the layout to the total size required by the widgets.\n   */\n  private _fit(): void {\n    // Set up the computed minimum size.\n    let minW = 0;\n    let minH = 0;\n\n    // Update the size limits for the layout tree.\n    if (this._root) {\n      let limits = this._root.fit(this._spacing, this._items);\n      minW = limits.minWidth;\n      minH = limits.minHeight;\n    }\n\n    // Update the box sizing and add it to the computed min size.\n    let box = (this._box = ElementExt.boxSizing(this.parent!.node));\n    minW += box.horizontalSum;\n    minH += box.verticalSum;\n\n    // Update the parent's min size constraints.\n    let style = this.parent!.node.style;\n    style.minWidth = `${minW}px`;\n    style.minHeight = `${minH}px`;\n\n    // Set the dirty flag to ensure only a single update occurs.\n    this._dirty = true;\n\n    // Notify the ancestor that it should fit immediately. This may\n    // cause a resize of the parent, fulfilling the required update.\n    if (this.parent!.parent) {\n      MessageLoop.sendMessage(this.parent!.parent!, Widget.Msg.FitRequest);\n    }\n\n    // If the dirty flag is still set, the parent was not resized.\n    // Trigger the required update on the parent widget immediately.\n    if (this._dirty) {\n      MessageLoop.sendMessage(this.parent!, Widget.Msg.UpdateRequest);\n    }\n  }\n\n  /**\n   * Update the layout position and size of the widgets.\n   *\n   * The parent offset dimensions should be `-1` if unknown.\n   */\n  private _update(offsetWidth: number, offsetHeight: number): void {\n    // Clear the dirty flag to indicate the update occurred.\n    this._dirty = false;\n\n    // Bail early if there is no root layout node.\n    if (!this._root) {\n      return;\n    }\n\n    // Measure the parent if the offset dimensions are unknown.\n    if (offsetWidth < 0) {\n      offsetWidth = this.parent!.node.offsetWidth;\n    }\n    if (offsetHeight < 0) {\n      offsetHeight = this.parent!.node.offsetHeight;\n    }\n\n    // Ensure the parent box sizing data is computed.\n    if (!this._box) {\n      this._box = ElementExt.boxSizing(this.parent!.node);\n    }\n\n    // Compute the actual layout bounds adjusted for border and padding.\n    let x = this._box.paddingTop;\n    let y = this._box.paddingLeft;\n    let width = offsetWidth - this._box.horizontalSum;\n    let height = offsetHeight - this._box.verticalSum;\n\n    // Update the geometry of the layout tree.\n    this._root.update(x, y, width, height, this._spacing, this._items);\n  }\n\n  /**\n   * Create a new tab bar for use by the dock layout.\n   *\n   * #### Notes\n   * The tab bar will be attached to the parent if it exists.\n   */\n  private _createTabBar(): TabBar<Widget> {\n    // Create the tab bar using the renderer.\n    let tabBar = this.renderer.createTabBar(this._document);\n\n    // Enforce necessary tab bar behavior.\n    tabBar.orientation = 'horizontal';\n\n    // Attach the tab bar to the parent if possible.\n    if (this.parent) {\n      this.attachWidget(tabBar);\n    }\n\n    // Return the initialized tab bar.\n    return tabBar;\n  }\n\n  /**\n   * Create a new handle for the dock layout.\n   *\n   * #### Notes\n   * The handle will be attached to the parent if it exists.\n   */\n  private _createHandle(): HTMLDivElement {\n    // Create the handle using the renderer.\n    let handle = this.renderer.createHandle();\n\n    // Initialize the handle layout behavior.\n    let style = handle.style;\n    style.position = 'absolute';\n    style.contain = 'strict';\n    style.top = '0';\n    style.left = '0';\n    style.width = '0';\n    style.height = '0';\n\n    // Attach the handle to the parent if it exists.\n    if (this.parent) {\n      this.parent.node.appendChild(handle);\n    }\n\n    // Return the initialized handle.\n    return handle;\n  }\n\n  private _spacing = 4;\n  private _dirty = false;\n  private _root: Private.LayoutNode | null = null;\n  private _box: ElementExt.IBoxSizing | null = null;\n  private _document: Document | ShadowRoot;\n  private _hiddenMode: Widget.HiddenMode;\n  private _items: Private.ItemMap = new Map<Widget, LayoutItem>();\n}\n\n/**\n * The namespace for the `DockLayout` class statics.\n */\nexport namespace DockLayout {\n  /**\n   * An options object for creating a dock layout.\n   */\n  export interface IOptions {\n    /**\n     * The document to use with the dock panel.\n     *\n     * The default is the global `document` instance.\n     */\n    document?: Document | ShadowRoot;\n\n    /**\n     * The method for hiding widgets.\n     *\n     * The default is `Widget.HiddenMode.Display`.\n     */\n    hiddenMode?: Widget.HiddenMode;\n\n    /**\n     * The renderer to use for the dock layout.\n     */\n    renderer: IRenderer;\n\n    /**\n     * The spacing between items in the layout.\n     *\n     * The default is `4`.\n     */\n    spacing?: number;\n  }\n\n  /**\n   * A renderer for use with a dock layout.\n   */\n  export interface IRenderer {\n    /**\n     * Create a new tab bar for use with a dock layout.\n     *\n     * @returns A new tab bar for a dock layout.\n     */\n    createTabBar(document?: Document | ShadowRoot): TabBar<Widget>;\n\n    /**\n     * Create a new handle node for use with a dock layout.\n     *\n     * @returns A new handle node for a dock layout.\n     */\n    createHandle(): HTMLDivElement;\n  }\n\n  /**\n   * A type alias for the supported insertion modes.\n   *\n   * An insert mode is used to specify how a widget should be added\n   * to the dock layout relative to a reference widget.\n   */\n  export type InsertMode =\n    | /**\n     * The area to the top of the reference widget.\n     *\n     * The widget will be inserted just above the reference widget.\n     *\n     * If the reference widget is null or invalid, the widget will be\n     * inserted at the top edge of the dock layout.\n     */\n    'split-top'\n\n    /**\n     * The area to the left of the reference widget.\n     *\n     * The widget will be inserted just left of the reference widget.\n     *\n     * If the reference widget is null or invalid, the widget will be\n     * inserted at the left edge of the dock layout.\n     */\n    | 'split-left'\n\n    /**\n     * The area to the right of the reference widget.\n     *\n     * The widget will be inserted just right of the reference widget.\n     *\n     * If the reference widget is null or invalid, the widget will be\n     * inserted  at the right edge of the dock layout.\n     */\n    | 'split-right'\n\n    /**\n     * The area to the bottom of the reference widget.\n     *\n     * The widget will be inserted just below the reference widget.\n     *\n     * If the reference widget is null or invalid, the widget will be\n     * inserted at the bottom edge of the dock layout.\n     */\n    | 'split-bottom'\n\n    /**\n     * Like `split-top` but if a tab layout exists above the reference widget,\n     * it behaves like `tab-after` with reference to that instead.\n     */\n    | 'merge-top'\n\n    /**\n     * Like `split-left` but if a tab layout exists left of the reference widget,\n     * it behaves like `tab-after` with reference to that instead.\n     */\n    | 'merge-left'\n\n    /**\n     * Like `split-right` but if a tab layout exists right of the reference widget,\n     * it behaves like `tab-after` with reference to that instead.\n     */\n    | 'merge-right'\n\n    /**\n     * Like `split-bottom` but if a tab layout exists below the reference widget,\n     * it behaves like `tab-after` with reference to that instead.\n     */\n    | 'merge-bottom'\n\n    /**\n     * The tab position before the reference widget.\n     *\n     * The widget will be added as a tab before the reference widget.\n     *\n     * If the reference widget is null or invalid, a sensible default\n     * will be used.\n     */\n    | 'tab-before'\n\n    /**\n     * The tab position after the reference widget.\n     *\n     * The widget will be added as a tab after the reference widget.\n     *\n     * If the reference widget is null or invalid, a sensible default\n     * will be used.\n     */\n    | 'tab-after';\n\n  /**\n   * An options object for adding a widget to the dock layout.\n   */\n  export interface IAddOptions {\n    /**\n     * The insertion mode for adding the widget.\n     *\n     * The default is `'tab-after'`.\n     */\n    mode?: InsertMode;\n\n    /**\n     * The reference widget for the insert location.\n     *\n     * The default is `null`.\n     */\n    ref?: Widget | null;\n  }\n\n  /**\n   * A layout config object for a tab area.\n   */\n  export interface ITabAreaConfig {\n    /**\n     * The discriminated type of the config object.\n     */\n    type: 'tab-area';\n\n    /**\n     * The widgets contained in the tab area.\n     */\n    widgets: Widget[];\n\n    /**\n     * The index of the selected tab.\n     */\n    currentIndex: number;\n  }\n\n  /**\n   * A layout config object for a split area.\n   */\n  export interface ISplitAreaConfig {\n    /**\n     * The discriminated type of the config object.\n     */\n    type: 'split-area';\n\n    /**\n     * The orientation of the split area.\n     */\n    orientation: 'horizontal' | 'vertical';\n\n    /**\n     * The children in the split area.\n     */\n    children: AreaConfig[];\n\n    /**\n     * The relative sizes of the children.\n     */\n    sizes: number[];\n  }\n\n  /**\n   * A type alias for a general area config.\n   */\n  export type AreaConfig = ITabAreaConfig | ISplitAreaConfig;\n\n  /**\n   * A dock layout configuration object.\n   */\n  export interface ILayoutConfig {\n    /**\n     * The layout config for the main dock area.\n     */\n    main: AreaConfig | null;\n  }\n\n  /**\n   * An object which represents the geometry of a tab area.\n   */\n  export interface ITabAreaGeometry {\n    /**\n     * The tab bar for the tab area.\n     */\n    tabBar: TabBar<Widget>;\n\n    /**\n     * The local X position of the hit test in the dock area.\n     *\n     * #### Notes\n     * This is the distance from the left edge of the layout parent\n     * widget, to the local X coordinate of the hit test query.\n     */\n    x: number;\n\n    /**\n     * The local Y position of the hit test in the dock area.\n     *\n     * #### Notes\n     * This is the distance from the top edge of the layout parent\n     * widget, to the local Y coordinate of the hit test query.\n     */\n    y: number;\n\n    /**\n     * The local coordinate of the top edge of the tab area.\n     *\n     * #### Notes\n     * This is the distance from the top edge of the layout parent\n     * widget, to the top edge of the tab area.\n     */\n    top: number;\n\n    /**\n     * The local coordinate of the left edge of the tab area.\n     *\n     * #### Notes\n     * This is the distance from the left edge of the layout parent\n     * widget, to the left edge of the tab area.\n     */\n    left: number;\n\n    /**\n     * The local coordinate of the right edge of the tab area.\n     *\n     * #### Notes\n     * This is the distance from the right edge of the layout parent\n     * widget, to the right edge of the tab area.\n     */\n    right: number;\n\n    /**\n     * The local coordinate of the bottom edge of the tab area.\n     *\n     * #### Notes\n     * This is the distance from the bottom edge of the layout parent\n     * widget, to the bottom edge of the tab area.\n     */\n    bottom: number;\n\n    /**\n     * The width of the tab area.\n     *\n     * #### Notes\n     * This is total width allocated for the tab area.\n     */\n    width: number;\n\n    /**\n     * The height of the tab area.\n     *\n     * #### Notes\n     * This is total height allocated for the tab area.\n     */\n    height: number;\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A fraction used for sizing root panels; ~= `1 / golden_ratio`.\n   */\n  export const GOLDEN_RATIO = 0.618;\n\n  /**\n   * A type alias for a dock layout node.\n   */\n  export type LayoutNode = TabLayoutNode | SplitLayoutNode;\n\n  /**\n   * A type alias for the orientation of a split layout node.\n   */\n  export type Orientation = 'horizontal' | 'vertical';\n\n  /**\n   * A type alias for a layout item map.\n   */\n  export type ItemMap = Map<Widget, LayoutItem>;\n\n  /**\n   * Create a box sizer with an initial size hint.\n   */\n  export function createSizer(hint: number): BoxSizer {\n    let sizer = new BoxSizer();\n    sizer.sizeHint = hint;\n    sizer.size = hint;\n    return sizer;\n  }\n\n  /**\n   * Normalize an area config object and collect the visited widgets.\n   */\n  export function normalizeAreaConfig(\n    config: DockLayout.AreaConfig,\n    widgetSet: Set<Widget>\n  ): DockLayout.AreaConfig | null {\n    let result: DockLayout.AreaConfig | null;\n    if (config.type === 'tab-area') {\n      result = normalizeTabAreaConfig(config, widgetSet);\n    } else {\n      result = normalizeSplitAreaConfig(config, widgetSet);\n    }\n    return result;\n  }\n\n  /**\n   * Convert a normalized area config into a layout tree.\n   */\n  export function realizeAreaConfig(\n    config: DockLayout.AreaConfig,\n    renderer: DockLayout.IRenderer,\n    document: Document | ShadowRoot\n  ): LayoutNode {\n    let node: LayoutNode;\n    if (config.type === 'tab-area') {\n      node = realizeTabAreaConfig(config, renderer, document);\n    } else {\n      node = realizeSplitAreaConfig(config, renderer, document);\n    }\n    return node;\n  }\n\n  /**\n   * A layout node which holds the data for a tabbed area.\n   */\n  export class TabLayoutNode {\n    /**\n     * Construct a new tab layout node.\n     *\n     * @param tabBar - The tab bar to use for the layout node.\n     */\n    constructor(tabBar: TabBar<Widget>) {\n      let tabSizer = new BoxSizer();\n      let widgetSizer = new BoxSizer();\n      tabSizer.stretch = 0;\n      widgetSizer.stretch = 1;\n      this.tabBar = tabBar;\n      this.sizers = [tabSizer, widgetSizer];\n    }\n\n    /**\n     * The parent of the layout node.\n     */\n    parent: SplitLayoutNode | null = null;\n\n    /**\n     * The tab bar for the layout node.\n     */\n    readonly tabBar: TabBar<Widget>;\n\n    /**\n     * The sizers for the layout node.\n     */\n    readonly sizers: [BoxSizer, BoxSizer];\n\n    /**\n     * The most recent value for the `top` edge of the layout box.\n     */\n    get top(): number {\n      return this._top;\n    }\n\n    /**\n     * The most recent value for the `left` edge of the layout box.\n     */\n    get left(): number {\n      return this._left;\n    }\n\n    /**\n     * The most recent value for the `width` of the layout box.\n     */\n    get width(): number {\n      return this._width;\n    }\n\n    /**\n     * The most recent value for the `height` of the layout box.\n     */\n    get height(): number {\n      return this._height;\n    }\n\n    /**\n     * Create an iterator for all widgets in the layout tree.\n     */\n    *iterAllWidgets(): IterableIterator<Widget> {\n      yield this.tabBar;\n      yield* this.iterUserWidgets();\n    }\n\n    /**\n     * Create an iterator for the user widgets in the layout tree.\n     */\n    *iterUserWidgets(): IterableIterator<Widget> {\n      for (const title of this.tabBar.titles) {\n        yield title.owner;\n      }\n    }\n\n    /**\n     * Create an iterator for the selected widgets in the layout tree.\n     */\n    *iterSelectedWidgets(): IterableIterator<Widget> {\n      let title = this.tabBar.currentTitle;\n      if (title) {\n        yield title.owner;\n      }\n    }\n\n    /**\n     * Create an iterator for the tab bars in the layout tree.\n     */\n    *iterTabBars(): IterableIterator<TabBar<Widget>> {\n      yield this.tabBar;\n    }\n\n    /**\n     * Create an iterator for the handles in the layout tree.\n     */\n    // eslint-disable-next-line require-yield\n    *iterHandles(): IterableIterator<HTMLDivElement> {\n      return;\n    }\n\n    /**\n     * Find the tab layout node which contains the given widget.\n     */\n    findTabNode(widget: Widget): TabLayoutNode | null {\n      return this.tabBar.titles.indexOf(widget.title) !== -1 ? this : null;\n    }\n\n    /**\n     * Find the split layout node which contains the given handle.\n     */\n    findSplitNode(\n      handle: HTMLDivElement\n    ): { index: number; node: SplitLayoutNode } | null {\n      return null;\n    }\n\n    /**\n     * Find the first tab layout node in a layout tree.\n     */\n    findFirstTabNode(): TabLayoutNode | null {\n      return this;\n    }\n\n    /**\n     * Find the tab layout node which contains the local point.\n     */\n    hitTestTabNodes(x: number, y: number): TabLayoutNode | null {\n      if (x < this._left || x >= this._left + this._width) {\n        return null;\n      }\n      if (y < this._top || y >= this._top + this._height) {\n        return null;\n      }\n      return this;\n    }\n\n    /**\n     * Create a configuration object for the layout tree.\n     */\n    createConfig(): DockLayout.ITabAreaConfig {\n      let widgets = this.tabBar.titles.map(title => title.owner);\n      let currentIndex = this.tabBar.currentIndex;\n      return { type: 'tab-area', widgets, currentIndex };\n    }\n\n    /**\n     * Recursively hold all of the sizes in the layout tree.\n     *\n     * This ignores the sizers of tab layout nodes.\n     */\n    holdAllSizes(): void {\n      return;\n    }\n\n    /**\n     * Fit the layout tree.\n     */\n    fit(spacing: number, items: ItemMap): ElementExt.ISizeLimits {\n      // Set up the limit variables.\n      let minWidth = 0;\n      let minHeight = 0;\n      let maxWidth = Infinity;\n      let maxHeight = Infinity;\n\n      // Lookup the tab bar layout item.\n      let tabBarItem = items.get(this.tabBar);\n\n      // Lookup the widget layout item.\n      let current = this.tabBar.currentTitle;\n      let widgetItem = current ? items.get(current.owner) : undefined;\n\n      // Lookup the tab bar and widget sizers.\n      let [tabBarSizer, widgetSizer] = this.sizers;\n\n      // Update the tab bar limits.\n      if (tabBarItem) {\n        tabBarItem.fit();\n      }\n\n      // Update the widget limits.\n      if (widgetItem) {\n        widgetItem.fit();\n      }\n\n      // Update the results and sizer for the tab bar.\n      if (tabBarItem && !tabBarItem.isHidden) {\n        minWidth = Math.max(minWidth, tabBarItem.minWidth);\n        minHeight += tabBarItem.minHeight;\n        tabBarSizer.minSize = tabBarItem.minHeight;\n        tabBarSizer.maxSize = tabBarItem.maxHeight;\n      } else {\n        tabBarSizer.minSize = 0;\n        tabBarSizer.maxSize = 0;\n      }\n\n      // Update the results and sizer for the current widget.\n      if (widgetItem && !widgetItem.isHidden) {\n        minWidth = Math.max(minWidth, widgetItem.minWidth);\n        minHeight += widgetItem.minHeight;\n        widgetSizer.minSize = widgetItem.minHeight;\n        widgetSizer.maxSize = Infinity;\n      } else {\n        widgetSizer.minSize = 0;\n        widgetSizer.maxSize = Infinity;\n      }\n\n      // Return the computed size limits for the layout node.\n      return { minWidth, minHeight, maxWidth, maxHeight };\n    }\n\n    /**\n     * Update the layout tree.\n     */\n    update(\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n      spacing: number,\n      items: ItemMap\n    ): void {\n      // Update the layout box values.\n      this._top = top;\n      this._left = left;\n      this._width = width;\n      this._height = height;\n\n      // Lookup the tab bar layout item.\n      let tabBarItem = items.get(this.tabBar);\n\n      // Lookup the widget layout item.\n      let current = this.tabBar.currentTitle;\n      let widgetItem = current ? items.get(current.owner) : undefined;\n\n      // Distribute the layout space to the sizers.\n      BoxEngine.calc(this.sizers, height);\n\n      // Update the tab bar item using the computed size.\n      if (tabBarItem && !tabBarItem.isHidden) {\n        let size = this.sizers[0].size;\n        tabBarItem.update(left, top, width, size);\n        top += size;\n      }\n\n      // Layout the widget using the computed size.\n      if (widgetItem && !widgetItem.isHidden) {\n        let size = this.sizers[1].size;\n        widgetItem.update(left, top, width, size);\n      }\n    }\n\n    private _top = 0;\n    private _left = 0;\n    private _width = 0;\n    private _height = 0;\n  }\n\n  /**\n   * A layout node which holds the data for a split area.\n   */\n  export class SplitLayoutNode {\n    /**\n     * Construct a new split layout node.\n     *\n     * @param orientation - The orientation of the node.\n     */\n    constructor(orientation: Orientation) {\n      this.orientation = orientation;\n    }\n\n    /**\n     * The parent of the layout node.\n     */\n    parent: SplitLayoutNode | null = null;\n\n    /**\n     * Whether the sizers have been normalized.\n     */\n    normalized = false;\n\n    /**\n     * The orientation of the node.\n     */\n    readonly orientation: Orientation;\n\n    /**\n     * The child nodes for the split node.\n     */\n    readonly children: LayoutNode[] = [];\n\n    /**\n     * The box sizers for the layout children.\n     */\n    readonly sizers: BoxSizer[] = [];\n\n    /**\n     * The handles for the layout children.\n     */\n    readonly handles: HTMLDivElement[] = [];\n\n    /**\n     * Create an iterator for all widgets in the layout tree.\n     */\n    *iterAllWidgets(): IterableIterator<Widget> {\n      for (const child of this.children) {\n        yield* child.iterAllWidgets();\n      }\n    }\n\n    /**\n     * Create an iterator for the user widgets in the layout tree.\n     */\n    *iterUserWidgets(): IterableIterator<Widget> {\n      for (const child of this.children) {\n        yield* child.iterUserWidgets();\n      }\n    }\n\n    /**\n     * Create an iterator for the selected widgets in the layout tree.\n     */\n    *iterSelectedWidgets(): IterableIterator<Widget> {\n      for (const child of this.children) {\n        yield* child.iterSelectedWidgets();\n      }\n    }\n\n    /**\n     * Create an iterator for the tab bars in the layout tree.\n     */\n    *iterTabBars(): IterableIterator<TabBar<Widget>> {\n      for (const child of this.children) {\n        yield* child.iterTabBars();\n      }\n    }\n\n    /**\n     * Create an iterator for the handles in the layout tree.\n     */\n    *iterHandles(): IterableIterator<HTMLDivElement> {\n      yield* this.handles;\n      for (const child of this.children) {\n        yield* child.iterHandles();\n      }\n    }\n\n    /**\n     * Find the tab layout node which contains the given widget.\n     */\n    findTabNode(widget: Widget): TabLayoutNode | null {\n      for (let i = 0, n = this.children.length; i < n; ++i) {\n        let result = this.children[i].findTabNode(widget);\n        if (result) {\n          return result;\n        }\n      }\n      return null;\n    }\n\n    /**\n     * Find the split layout node which contains the given handle.\n     */\n    findSplitNode(\n      handle: HTMLDivElement\n    ): { index: number; node: SplitLayoutNode } | null {\n      let index = this.handles.indexOf(handle);\n      if (index !== -1) {\n        return { index, node: this };\n      }\n      for (let i = 0, n = this.children.length; i < n; ++i) {\n        let result = this.children[i].findSplitNode(handle);\n        if (result) {\n          return result;\n        }\n      }\n      return null;\n    }\n\n    /**\n     * Find the first tab layout node in a layout tree.\n     */\n    findFirstTabNode(): TabLayoutNode | null {\n      if (this.children.length === 0) {\n        return null;\n      }\n      return this.children[0].findFirstTabNode();\n    }\n\n    /**\n     * Find the tab layout node which contains the local point.\n     */\n    hitTestTabNodes(x: number, y: number): TabLayoutNode | null {\n      for (let i = 0, n = this.children.length; i < n; ++i) {\n        let result = this.children[i].hitTestTabNodes(x, y);\n        if (result) {\n          return result;\n        }\n      }\n      return null;\n    }\n\n    /**\n     * Create a configuration object for the layout tree.\n     */\n    createConfig(): DockLayout.ISplitAreaConfig {\n      let orientation = this.orientation;\n      let sizes = this.createNormalizedSizes();\n      let children = this.children.map(child => child.createConfig());\n      return { type: 'split-area', orientation, children, sizes };\n    }\n\n    /**\n     * Sync the visibility and orientation of the handles.\n     */\n    syncHandles(): void {\n      this.handles.forEach((handle, i) => {\n        handle.setAttribute('data-orientation', this.orientation);\n        if (i === this.handles.length - 1) {\n          handle.classList.add('lm-mod-hidden');\n        } else {\n          handle.classList.remove('lm-mod-hidden');\n        }\n      });\n    }\n\n    /**\n     * Hold the current sizes of the box sizers.\n     *\n     * This sets the size hint of each sizer to its current size.\n     */\n    holdSizes(): void {\n      for (const sizer of this.sizers) {\n        sizer.sizeHint = sizer.size;\n      }\n    }\n\n    /**\n     * Recursively hold all of the sizes in the layout tree.\n     *\n     * This ignores the sizers of tab layout nodes.\n     */\n    holdAllSizes(): void {\n      for (const child of this.children) {\n        child.holdAllSizes();\n      }\n      this.holdSizes();\n    }\n\n    /**\n     * Normalize the sizes of the split layout node.\n     */\n    normalizeSizes(): void {\n      // Bail early if the sizers are empty.\n      let n = this.sizers.length;\n      if (n === 0) {\n        return;\n      }\n\n      // Hold the current sizes of the sizers.\n      this.holdSizes();\n\n      // Compute the sum of the sizes.\n      let sum = this.sizers.reduce((v, sizer) => v + sizer.sizeHint, 0);\n\n      // Normalize the sizes based on the sum.\n      if (sum === 0) {\n        for (const sizer of this.sizers) {\n          sizer.size = sizer.sizeHint = 1 / n;\n        }\n      } else {\n        for (const sizer of this.sizers) {\n          sizer.size = sizer.sizeHint /= sum;\n        }\n      }\n\n      // Mark the sizes as normalized.\n      this.normalized = true;\n    }\n\n    /**\n     * Snap the normalized sizes of the split layout node.\n     */\n    createNormalizedSizes(): number[] {\n      // Bail early if the sizers are empty.\n      let n = this.sizers.length;\n      if (n === 0) {\n        return [];\n      }\n\n      // Grab the current sizes of the sizers.\n      let sizes = this.sizers.map(sizer => sizer.size);\n\n      // Compute the sum of the sizes.\n      let sum = sizes.reduce((v, size) => v + size, 0);\n\n      // Normalize the sizes based on the sum.\n      if (sum === 0) {\n        for (let i = sizes.length - 1; i > -1; i--) {\n          sizes[i] = 1 / n;\n        }\n      } else {\n        for (let i = sizes.length - 1; i > -1; i--) {\n          sizes[i] /= sum;\n        }\n      }\n\n      // Return the normalized sizes.\n      return sizes;\n    }\n\n    /**\n     * Fit the layout tree.\n     */\n    fit(spacing: number, items: ItemMap): ElementExt.ISizeLimits {\n      // Compute the required fixed space.\n      let horizontal = this.orientation === 'horizontal';\n      let fixed = Math.max(0, this.children.length - 1) * spacing;\n\n      // Set up the limit variables.\n      let minWidth = horizontal ? fixed : 0;\n      let minHeight = horizontal ? 0 : fixed;\n      let maxWidth = Infinity;\n      let maxHeight = Infinity;\n\n      // Fit the children and update the limits.\n      for (let i = 0, n = this.children.length; i < n; ++i) {\n        let limits = this.children[i].fit(spacing, items);\n        if (horizontal) {\n          minHeight = Math.max(minHeight, limits.minHeight);\n          minWidth += limits.minWidth;\n          this.sizers[i].minSize = limits.minWidth;\n        } else {\n          minWidth = Math.max(minWidth, limits.minWidth);\n          minHeight += limits.minHeight;\n          this.sizers[i].minSize = limits.minHeight;\n        }\n      }\n\n      // Return the computed limits for the layout node.\n      return { minWidth, minHeight, maxWidth, maxHeight };\n    }\n\n    /**\n     * Update the layout tree.\n     */\n    update(\n      left: number,\n      top: number,\n      width: number,\n      height: number,\n      spacing: number,\n      items: ItemMap\n    ): void {\n      // Compute the available layout space.\n      let horizontal = this.orientation === 'horizontal';\n      let fixed = Math.max(0, this.children.length - 1) * spacing;\n      let space = Math.max(0, (horizontal ? width : height) - fixed);\n\n      // De-normalize the sizes if needed.\n      if (this.normalized) {\n        for (const sizer of this.sizers) {\n          sizer.sizeHint *= space;\n        }\n        this.normalized = false;\n      }\n\n      // Distribute the layout space to the sizers.\n      BoxEngine.calc(this.sizers, space);\n\n      // Update the geometry of the child nodes and handles.\n      for (let i = 0, n = this.children.length; i < n; ++i) {\n        let child = this.children[i];\n        let size = this.sizers[i].size;\n        let handleStyle = this.handles[i].style;\n        if (horizontal) {\n          child.update(left, top, size, height, spacing, items);\n          left += size;\n          handleStyle.top = `${top}px`;\n          handleStyle.left = `${left}px`;\n          handleStyle.width = `${spacing}px`;\n          handleStyle.height = `${height}px`;\n          left += spacing;\n        } else {\n          child.update(left, top, width, size, spacing, items);\n          top += size;\n          handleStyle.top = `${top}px`;\n          handleStyle.left = `${left}px`;\n          handleStyle.width = `${width}px`;\n          handleStyle.height = `${spacing}px`;\n          top += spacing;\n        }\n      }\n    }\n  }\n\n  export function addAria(widget: Widget, tabBar: TabBar<Widget>): void {\n    widget.node.setAttribute('role', 'tabpanel');\n    let renderer = tabBar.renderer;\n    if (renderer instanceof TabBar.Renderer) {\n      let tabId = renderer.createTabKey({\n        title: widget.title,\n        current: false,\n        zIndex: 0\n      });\n      widget.node.setAttribute('aria-labelledby', tabId);\n    }\n  }\n\n  export function removeAria(widget: Widget): void {\n    widget.node.removeAttribute('role');\n    widget.node.removeAttribute('aria-labelledby');\n  }\n\n  /**\n   * Normalize a tab area config and collect the visited widgets.\n   */\n  function normalizeTabAreaConfig(\n    config: DockLayout.ITabAreaConfig,\n    widgetSet: Set<Widget>\n  ): DockLayout.ITabAreaConfig | null {\n    // Bail early if there is no content.\n    if (config.widgets.length === 0) {\n      return null;\n    }\n\n    // Setup the filtered widgets array.\n    let widgets: Widget[] = [];\n\n    // Filter the config for unique widgets.\n    for (const widget of config.widgets) {\n      if (!widgetSet.has(widget)) {\n        widgetSet.add(widget);\n        widgets.push(widget);\n      }\n    }\n\n    // Bail if there are no effective widgets.\n    if (widgets.length === 0) {\n      return null;\n    }\n\n    // Normalize the current index.\n    let index = config.currentIndex;\n    if (index !== -1 && (index < 0 || index >= widgets.length)) {\n      index = 0;\n    }\n\n    // Return a normalized config object.\n    return { type: 'tab-area', widgets, currentIndex: index };\n  }\n\n  /**\n   * Normalize a split area config and collect the visited widgets.\n   */\n  function normalizeSplitAreaConfig(\n    config: DockLayout.ISplitAreaConfig,\n    widgetSet: Set<Widget>\n  ): DockLayout.AreaConfig | null {\n    // Set up the result variables.\n    let orientation = config.orientation;\n    let children: DockLayout.AreaConfig[] = [];\n    let sizes: number[] = [];\n\n    // Normalize the config children.\n    for (let i = 0, n = config.children.length; i < n; ++i) {\n      // Normalize the child config.\n      let child = normalizeAreaConfig(config.children[i], widgetSet);\n\n      // Ignore an empty child.\n      if (!child) {\n        continue;\n      }\n\n      // Add the child or hoist its content as appropriate.\n      if (child.type === 'tab-area' || child.orientation !== orientation) {\n        children.push(child);\n        sizes.push(Math.abs(config.sizes[i] || 0));\n      } else {\n        children.push(...child.children);\n        sizes.push(...child.sizes);\n      }\n    }\n\n    // Bail if there are no effective children.\n    if (children.length === 0) {\n      return null;\n    }\n\n    // If there is only one effective child, return that child.\n    if (children.length === 1) {\n      return children[0];\n    }\n\n    // Return a normalized config object.\n    return { type: 'split-area', orientation, children, sizes };\n  }\n\n  /**\n   * Convert a normalized tab area config into a layout tree.\n   */\n  function realizeTabAreaConfig(\n    config: DockLayout.ITabAreaConfig,\n    renderer: DockLayout.IRenderer,\n    document: Document | ShadowRoot\n  ): TabLayoutNode {\n    // Create the tab bar for the layout node.\n    let tabBar = renderer.createTabBar(document);\n\n    // Hide each widget and add it to the tab bar.\n    for (const widget of config.widgets) {\n      widget.hide();\n      tabBar.addTab(widget.title);\n      Private.addAria(widget, tabBar);\n    }\n\n    // Set the current index of the tab bar.\n    tabBar.currentIndex = config.currentIndex;\n\n    // Return the new tab layout node.\n    return new TabLayoutNode(tabBar);\n  }\n\n  /**\n   * Convert a normalized split area config into a layout tree.\n   */\n  function realizeSplitAreaConfig(\n    config: DockLayout.ISplitAreaConfig,\n    renderer: DockLayout.IRenderer,\n    document: Document | ShadowRoot\n  ): SplitLayoutNode {\n    // Create the split layout node.\n    let node = new SplitLayoutNode(config.orientation);\n\n    // Add each child to the layout node.\n    config.children.forEach((child, i) => {\n      // Create the child data for the layout node.\n      let childNode = realizeAreaConfig(child, renderer, document);\n      let sizer = createSizer(config.sizes[i]);\n      let handle = renderer.createHandle();\n\n      // Add the child data to the layout node.\n      node.children.push(childNode);\n      node.handles.push(handle);\n      node.sizers.push(sizer);\n\n      // Update the parent for the child node.\n      childNode.parent = node;\n    });\n\n    // Synchronize the handle state for the layout node.\n    node.syncHandles();\n\n    // Normalize the sizes for the layout node.\n    node.normalizeSizes();\n\n    // Return the new layout node.\n    return node;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { find } from '@lumino/algorithm';\n\nimport { MimeData } from '@lumino/coreutils';\n\nimport { IDisposable } from '@lumino/disposable';\n\nimport { ElementExt, Platform } from '@lumino/domutils';\n\nimport { Drag } from '@lumino/dragdrop';\n\nimport { ConflatableMessage, Message, MessageLoop } from '@lumino/messaging';\n\nimport { AttachedProperty } from '@lumino/properties';\n\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { DockLayout } from './docklayout';\n\nimport { TabBar } from './tabbar';\n\nimport { Widget } from './widget';\n\n/**\n * A widget which provides a flexible docking area for widgets.\n */\nexport class DockPanel extends Widget {\n  /**\n   * Construct a new dock panel.\n   *\n   * @param options - The options for initializing the panel.\n   */\n  constructor(options: DockPanel.IOptions = {}) {\n    super();\n    this.addClass('lm-DockPanel');\n    this._document = options.document || document;\n    this._mode = options.mode || 'multiple-document';\n    this._renderer = options.renderer || DockPanel.defaultRenderer;\n    this._edges = options.edges || Private.DEFAULT_EDGES;\n    if (options.tabsMovable !== undefined) {\n      this._tabsMovable = options.tabsMovable;\n    }\n    if (options.tabsConstrained !== undefined) {\n      this._tabsConstrained = options.tabsConstrained;\n    }\n    if (options.addButtonEnabled !== undefined) {\n      this._addButtonEnabled = options.addButtonEnabled;\n    }\n\n    // Toggle the CSS mode attribute.\n    this.dataset['mode'] = this._mode;\n\n    // Create the delegate renderer for the layout.\n    let renderer: DockPanel.IRenderer = {\n      createTabBar: () => this._createTabBar(),\n      createHandle: () => this._createHandle()\n    };\n\n    // Set up the dock layout for the panel.\n    this.layout = new DockLayout({\n      document: this._document,\n      renderer,\n      spacing: options.spacing,\n      hiddenMode: options.hiddenMode\n    });\n\n    // Set up the overlay drop indicator.\n    this.overlay = options.overlay || new DockPanel.Overlay();\n    this.node.appendChild(this.overlay.node);\n  }\n\n  /**\n   * Dispose of the resources held by the panel.\n   */\n  dispose(): void {\n    // Ensure the mouse is released.\n    this._releaseMouse();\n\n    // Hide the overlay.\n    this.overlay.hide(0);\n\n    // Cancel a drag if one is in progress.\n    if (this._drag) {\n      this._drag.dispose();\n    }\n\n    // Dispose of the base class.\n    super.dispose();\n  }\n\n  /**\n   * The method for hiding widgets.\n   */\n  get hiddenMode(): Widget.HiddenMode {\n    return (this.layout as DockLayout).hiddenMode;\n  }\n\n  /**\n   * Set the method for hiding widgets.\n   */\n  set hiddenMode(v: Widget.HiddenMode) {\n    (this.layout as DockLayout).hiddenMode = v;\n  }\n\n  /**\n   * A signal emitted when the layout configuration is modified.\n   *\n   * #### Notes\n   * This signal is emitted whenever the current layout configuration\n   * may have changed.\n   *\n   * This signal is emitted asynchronously in a collapsed fashion, so\n   * that multiple synchronous modifications results in only a single\n   * emit of the signal.\n   */\n  get layoutModified(): ISignal<this, void> {\n    return this._layoutModified;\n  }\n\n  /**\n   * A signal emitted when the add button on a tab bar is clicked.\n   *\n   */\n  get addRequested(): ISignal<this, TabBar<Widget>> {\n    return this._addRequested;\n  }\n\n  /**\n   * The overlay used by the dock panel.\n   */\n  readonly overlay: DockPanel.IOverlay;\n\n  /**\n   * The renderer used by the dock panel.\n   */\n  get renderer(): DockPanel.IRenderer {\n    return (this.layout as DockLayout).renderer;\n  }\n\n  /**\n   * Get the spacing between the widgets.\n   */\n  get spacing(): number {\n    return (this.layout as DockLayout).spacing;\n  }\n\n  /**\n   * Set the spacing between the widgets.\n   */\n  set spacing(value: number) {\n    (this.layout as DockLayout).spacing = value;\n  }\n\n  /**\n   * Get the mode for the dock panel.\n   */\n  get mode(): DockPanel.Mode {\n    return this._mode;\n  }\n\n  /**\n   * Set the mode for the dock panel.\n   *\n   * #### Notes\n   * Changing the mode is a destructive operation with respect to the\n   * panel's layout configuration. If layout state must be preserved,\n   * save the current layout config before changing the mode.\n   */\n  set mode(value: DockPanel.Mode) {\n    // Bail early if the mode does not change.\n    if (this._mode === value) {\n      return;\n    }\n\n    // Update the internal mode.\n    this._mode = value;\n\n    // Toggle the CSS mode attribute.\n    this.dataset['mode'] = value;\n\n    // Get the layout for the panel.\n    let layout = this.layout as DockLayout;\n\n    // Configure the layout for the specified mode.\n    switch (value) {\n      case 'multiple-document':\n        for (const tabBar of layout.tabBars()) {\n          tabBar.show();\n        }\n        break;\n      case 'single-document':\n        layout.restoreLayout(Private.createSingleDocumentConfig(this));\n        break;\n      default:\n        throw 'unreachable';\n    }\n\n    // Schedule an emit of the layout modified signal.\n    MessageLoop.postMessage(this, Private.LayoutModified);\n  }\n\n  /**\n   * Whether the tabs can be dragged / moved at runtime.\n   */\n  get tabsMovable(): boolean {\n    return this._tabsMovable;\n  }\n\n  /**\n   * Enable / Disable draggable / movable tabs.\n   */\n  set tabsMovable(value: boolean) {\n    this._tabsMovable = value;\n    for (const tabBar of this.tabBars()) {\n      tabBar.tabsMovable = value;\n    }\n  }\n\n  /**\n   * Whether the tabs are constrained to their source dock panel\n   */\n  get tabsConstrained(): boolean {\n    return this._tabsConstrained;\n  }\n\n  /**\n   * Constrain/Allow tabs to be dragged outside of this dock panel\n   */\n  set tabsConstrained(value: boolean) {\n    this._tabsConstrained = value;\n  }\n\n  /**\n   * Whether the add buttons for each tab bar are enabled.\n   */\n  get addButtonEnabled(): boolean {\n    return this._addButtonEnabled;\n  }\n\n  /**\n   * Set whether the add buttons for each tab bar are enabled.\n   */\n  set addButtonEnabled(value: boolean) {\n    this._addButtonEnabled = value;\n    for (const tabBar of this.tabBars()) {\n      tabBar.addButtonEnabled = value;\n    }\n  }\n\n  /**\n   * Whether the dock panel is empty.\n   */\n  get isEmpty(): boolean {\n    return (this.layout as DockLayout).isEmpty;\n  }\n\n  /**\n   * Create an iterator over the user widgets in the panel.\n   *\n   * @returns A new iterator over the user widgets in the panel.\n   *\n   * #### Notes\n   * This iterator does not include the generated tab bars.\n   */\n  *widgets(): IterableIterator<Widget> {\n    yield* (this.layout as DockLayout).widgets();\n  }\n\n  /**\n   * Create an iterator over the selected widgets in the panel.\n   *\n   * @returns A new iterator over the selected user widgets.\n   *\n   * #### Notes\n   * This iterator yields the widgets corresponding to the current tab\n   * of each tab bar in the panel.\n   */\n  *selectedWidgets(): IterableIterator<Widget> {\n    yield* (this.layout as DockLayout).selectedWidgets();\n  }\n\n  /**\n   * Create an iterator over the tab bars in the panel.\n   *\n   * @returns A new iterator over the tab bars in the panel.\n   *\n   * #### Notes\n   * This iterator does not include the user widgets.\n   */\n  *tabBars(): IterableIterator<TabBar<Widget>> {\n    yield* (this.layout as DockLayout).tabBars();\n  }\n\n  /**\n   * Create an iterator over the handles in the panel.\n   *\n   * @returns A new iterator over the handles in the panel.\n   */\n  *handles(): IterableIterator<HTMLDivElement> {\n    yield* (this.layout as DockLayout).handles();\n  }\n\n  /**\n   * Select a specific widget in the dock panel.\n   *\n   * @param widget - The widget of interest.\n   *\n   * #### Notes\n   * This will make the widget the current widget in its tab area.\n   */\n  selectWidget(widget: Widget): void {\n    // Find the tab bar which contains the widget.\n    let tabBar = find(this.tabBars(), bar => {\n      return bar.titles.indexOf(widget.title) !== -1;\n    });\n\n    // Throw an error if no tab bar is found.\n    if (!tabBar) {\n      throw new Error('Widget is not contained in the dock panel.');\n    }\n\n    // Ensure the widget is the current widget.\n    tabBar.currentTitle = widget.title;\n  }\n\n  /**\n   * Activate a specified widget in the dock panel.\n   *\n   * @param widget - The widget of interest.\n   *\n   * #### Notes\n   * This will select and activate the given widget.\n   */\n  activateWidget(widget: Widget): void {\n    this.selectWidget(widget);\n    widget.activate();\n  }\n\n  /**\n   * Save the current layout configuration of the dock panel.\n   *\n   * @returns A new config object for the current layout state.\n   *\n   * #### Notes\n   * The return value can be provided to the `restoreLayout` method\n   * in order to restore the layout to its current configuration.\n   */\n  saveLayout(): DockPanel.ILayoutConfig {\n    return (this.layout as DockLayout).saveLayout();\n  }\n\n  /**\n   * Restore the layout to a previously saved configuration.\n   *\n   * @param config - The layout configuration to restore.\n   *\n   * #### Notes\n   * Widgets which currently belong to the layout but which are not\n   * contained in the config will be unparented.\n   *\n   * The dock panel automatically reverts to `'multiple-document'`\n   * mode when a layout config is restored.\n   */\n  restoreLayout(config: DockPanel.ILayoutConfig): void {\n    // Reset the mode.\n    this._mode = 'multiple-document';\n\n    // Restore the layout.\n    (this.layout as DockLayout).restoreLayout(config);\n\n    // Flush the message loop on IE and Edge to prevent flicker.\n    if (Platform.IS_EDGE || Platform.IS_IE) {\n      MessageLoop.flush();\n    }\n\n    // Schedule an emit of the layout modified signal.\n    MessageLoop.postMessage(this, Private.LayoutModified);\n  }\n\n  /**\n   * Add a widget to the dock panel.\n   *\n   * @param widget - The widget to add to the dock panel.\n   *\n   * @param options - The additional options for adding the widget.\n   *\n   * #### Notes\n   * If the panel is in single document mode, the options are ignored\n   * and the widget is always added as tab in the hidden tab bar.\n   */\n  addWidget(widget: Widget, options: DockPanel.IAddOptions = {}): void {\n    // Add the widget to the layout.\n    if (this._mode === 'single-document') {\n      (this.layout as DockLayout).addWidget(widget);\n    } else {\n      (this.layout as DockLayout).addWidget(widget, options);\n    }\n\n    // Schedule an emit of the layout modified signal.\n    MessageLoop.postMessage(this, Private.LayoutModified);\n  }\n\n  /**\n   * Process a message sent to the widget.\n   *\n   * @param msg - The message sent to the widget.\n   */\n  processMessage(msg: Message): void {\n    if (msg.type === 'layout-modified') {\n      this._layoutModified.emit(undefined);\n    } else {\n      super.processMessage(msg);\n    }\n  }\n\n  /**\n   * Handle the DOM events for the dock panel.\n   *\n   * @param event - The DOM event sent to the panel.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the panel's DOM node. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'lm-dragenter':\n        this._evtDragEnter(event as Drag.Event);\n        break;\n      case 'lm-dragleave':\n        this._evtDragLeave(event as Drag.Event);\n        break;\n      case 'lm-dragover':\n        this._evtDragOver(event as Drag.Event);\n        break;\n      case 'lm-drop':\n        this._evtDrop(event as Drag.Event);\n        break;\n      case 'pointerdown':\n        this._evtPointerDown(event as PointerEvent);\n        break;\n      case 'pointermove':\n        this._evtPointerMove(event as PointerEvent);\n        break;\n      case 'pointerup':\n        this._evtPointerUp(event as PointerEvent);\n        break;\n      case 'keydown':\n        this._evtKeyDown(event as KeyboardEvent);\n        break;\n      case 'contextmenu':\n        event.preventDefault();\n        event.stopPropagation();\n        break;\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    this.node.addEventListener('lm-dragenter', this);\n    this.node.addEventListener('lm-dragleave', this);\n    this.node.addEventListener('lm-dragover', this);\n    this.node.addEventListener('lm-drop', this);\n    this.node.addEventListener('pointerdown', this);\n  }\n\n  /**\n   * A message handler invoked on an `'after-detach'` message.\n   */\n  protected onAfterDetach(msg: Message): void {\n    this.node.removeEventListener('lm-dragenter', this);\n    this.node.removeEventListener('lm-dragleave', this);\n    this.node.removeEventListener('lm-dragover', this);\n    this.node.removeEventListener('lm-drop', this);\n    this.node.removeEventListener('pointerdown', this);\n    this._releaseMouse();\n  }\n\n  /**\n   * A message handler invoked on a `'child-added'` message.\n   */\n  protected onChildAdded(msg: Widget.ChildMessage): void {\n    // Ignore the generated tab bars.\n    if (Private.isGeneratedTabBarProperty.get(msg.child)) {\n      return;\n    }\n\n    // Add the widget class to the child.\n    msg.child.addClass('lm-DockPanel-widget');\n  }\n\n  /**\n   * A message handler invoked on a `'child-removed'` message.\n   */\n  protected onChildRemoved(msg: Widget.ChildMessage): void {\n    // Ignore the generated tab bars.\n    if (Private.isGeneratedTabBarProperty.get(msg.child)) {\n      return;\n    }\n\n    // Remove the widget class from the child.\n    msg.child.removeClass('lm-DockPanel-widget');\n\n    // Schedule an emit of the layout modified signal.\n    MessageLoop.postMessage(this, Private.LayoutModified);\n  }\n\n  /**\n   * Handle the `'lm-dragenter'` event for the dock panel.\n   */\n  private _evtDragEnter(event: Drag.Event): void {\n    // If the factory mime type is present, mark the event as\n    // handled in order to get the rest of the drag events.\n    if (event.mimeData.hasData('application/vnd.lumino.widget-factory')) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * Handle the `'lm-dragleave'` event for the dock panel.\n   */\n  private _evtDragLeave(event: Drag.Event): void {\n    // Mark the event as handled.\n    event.preventDefault();\n\n    if (this._tabsConstrained && event.source !== this) return;\n\n    event.stopPropagation();\n\n    // The new target might be a descendant, so we might still handle the drop.\n    // Hide asynchronously so that if a lm-dragover event bubbles up to us, the\n    // hide is cancelled by the lm-dragover handler's show overlay logic.\n    this.overlay.hide(1);\n  }\n\n  /**\n   * Handle the `'lm-dragover'` event for the dock panel.\n   */\n  private _evtDragOver(event: Drag.Event): void {\n    // Mark the event as handled.\n    event.preventDefault();\n\n    // Show the drop indicator overlay and update the drop\n    // action based on the drop target zone under the mouse.\n    if (\n      (this._tabsConstrained && event.source !== this) ||\n      this._showOverlay(event.clientX, event.clientY) === 'invalid'\n    ) {\n      event.dropAction = 'none';\n    } else {\n      event.stopPropagation();\n      event.dropAction = event.proposedAction;\n    }\n  }\n\n  /**\n   * Handle the `'lm-drop'` event for the dock panel.\n   */\n  private _evtDrop(event: Drag.Event): void {\n    // Mark the event as handled.\n    event.preventDefault();\n\n    // Hide the drop indicator overlay.\n    this.overlay.hide(0);\n\n    // Bail if the proposed action is to do nothing.\n    if (event.proposedAction === 'none') {\n      event.dropAction = 'none';\n      return;\n    }\n\n    // Find the drop target under the mouse.\n    let { clientX, clientY } = event;\n    let { zone, target } = Private.findDropTarget(\n      this,\n      clientX,\n      clientY,\n      this._edges\n    );\n\n    // Bail if the drop zone is invalid.\n    if (\n      (this._tabsConstrained && event.source !== this) ||\n      zone === 'invalid'\n    ) {\n      event.dropAction = 'none';\n      return;\n    }\n\n    // Bail if the factory mime type has invalid data.\n    let mimeData = event.mimeData;\n    let factory = mimeData.getData('application/vnd.lumino.widget-factory');\n    if (typeof factory !== 'function') {\n      event.dropAction = 'none';\n      return;\n    }\n\n    // Bail if the factory does not produce a widget.\n    let widget = factory();\n    if (!(widget instanceof Widget)) {\n      event.dropAction = 'none';\n      return;\n    }\n\n    // Bail if the widget is an ancestor of the dock panel.\n    if (widget.contains(this)) {\n      event.dropAction = 'none';\n      return;\n    }\n\n    // Find the reference widget for the drop target.\n    let ref = target ? Private.getDropRef(target.tabBar) : null;\n\n    // Add the widget according to the indicated drop zone.\n    switch (zone) {\n      case 'root-all':\n        this.addWidget(widget);\n        break;\n      case 'root-top':\n        this.addWidget(widget, { mode: 'split-top' });\n        break;\n      case 'root-left':\n        this.addWidget(widget, { mode: 'split-left' });\n        break;\n      case 'root-right':\n        this.addWidget(widget, { mode: 'split-right' });\n        break;\n      case 'root-bottom':\n        this.addWidget(widget, { mode: 'split-bottom' });\n        break;\n      case 'widget-all':\n        this.addWidget(widget, { mode: 'tab-after', ref });\n        break;\n      case 'widget-top':\n        this.addWidget(widget, { mode: 'split-top', ref });\n        break;\n      case 'widget-left':\n        this.addWidget(widget, { mode: 'split-left', ref });\n        break;\n      case 'widget-right':\n        this.addWidget(widget, { mode: 'split-right', ref });\n        break;\n      case 'widget-bottom':\n        this.addWidget(widget, { mode: 'split-bottom', ref });\n        break;\n      case 'widget-tab':\n        this.addWidget(widget, { mode: 'tab-after', ref });\n        break;\n      default:\n        throw 'unreachable';\n    }\n\n    // Accept the proposed drop action.\n    event.dropAction = event.proposedAction;\n\n    // Stop propagation if we have not bailed so far.\n    event.stopPropagation();\n\n    // Activate the dropped widget.\n    this.activateWidget(widget);\n  }\n\n  /**\n   * Handle the `'keydown'` event for the dock panel.\n   */\n  private _evtKeyDown(event: KeyboardEvent): void {\n    // Stop input events during drag.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Release the mouse if `Escape` is pressed.\n    if (event.keyCode === 27) {\n      // Finalize the mouse release.\n      this._releaseMouse();\n\n      // Schedule an emit of the layout modified signal.\n      MessageLoop.postMessage(this, Private.LayoutModified);\n    }\n  }\n\n  /**\n   * Handle the `'pointerdown'` event for the dock panel.\n   */\n  private _evtPointerDown(event: PointerEvent): void {\n    // Do nothing if the left mouse button is not pressed.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Find the handle which contains the mouse target, if any.\n    let layout = this.layout as DockLayout;\n    let target = event.target as HTMLElement;\n    let handle = find(layout.handles(), handle => handle.contains(target));\n    if (!handle) {\n      return;\n    }\n\n    // Stop the event when a handle is pressed.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Add the extra document listeners.\n    this._document.addEventListener('keydown', this, true);\n    this._document.addEventListener('pointerup', this, true);\n    this._document.addEventListener('pointermove', this, true);\n    this._document.addEventListener('contextmenu', this, true);\n\n    // Compute the offset deltas for the handle press.\n    let rect = handle.getBoundingClientRect();\n    let deltaX = event.clientX - rect.left;\n    let deltaY = event.clientY - rect.top;\n\n    // Override the cursor and store the press data.\n    let style = window.getComputedStyle(handle);\n    let override = Drag.overrideCursor(style.cursor!, this._document);\n    this._pressData = { handle, deltaX, deltaY, override };\n  }\n\n  /**\n   * Handle the `'pointermove'` event for the dock panel.\n   */\n  private _evtPointerMove(event: PointerEvent): void {\n    // Bail early if no drag is in progress.\n    if (!this._pressData) {\n      return;\n    }\n\n    // Stop the event when dragging a handle.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Compute the desired offset position for the handle.\n    let rect = this.node.getBoundingClientRect();\n    let xPos = event.clientX - rect.left - this._pressData.deltaX;\n    let yPos = event.clientY - rect.top - this._pressData.deltaY;\n\n    // Set the handle as close to the desired position as possible.\n    let layout = this.layout as DockLayout;\n    layout.moveHandle(this._pressData.handle, xPos, yPos);\n  }\n\n  /**\n   * Handle the `'pointerup'` event for the dock panel.\n   */\n  private _evtPointerUp(event: PointerEvent): void {\n    // Do nothing if the left mouse button is not released.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Stop the event when releasing a handle.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Finalize the mouse release.\n    this._releaseMouse();\n\n    // Schedule an emit of the layout modified signal.\n    MessageLoop.postMessage(this, Private.LayoutModified);\n  }\n\n  /**\n   * Release the mouse grab for the dock panel.\n   */\n  private _releaseMouse(): void {\n    // Bail early if no drag is in progress.\n    if (!this._pressData) {\n      return;\n    }\n\n    // Clear the override cursor.\n    this._pressData.override.dispose();\n    this._pressData = null;\n\n    // Remove the extra document listeners.\n    this._document.removeEventListener('keydown', this, true);\n    this._document.removeEventListener('pointerup', this, true);\n    this._document.removeEventListener('pointermove', this, true);\n    this._document.removeEventListener('contextmenu', this, true);\n  }\n\n  /**\n   * Show the overlay indicator at the given client position.\n   *\n   * Returns the drop zone at the specified client position.\n   *\n   * #### Notes\n   * If the position is not over a valid zone, the overlay is hidden.\n   */\n  private _showOverlay(clientX: number, clientY: number): Private.DropZone {\n    // Find the dock target for the given client position.\n    let { zone, target } = Private.findDropTarget(\n      this,\n      clientX,\n      clientY,\n      this._edges\n    );\n\n    // If the drop zone is invalid, hide the overlay and bail.\n    if (zone === 'invalid') {\n      this.overlay.hide(100);\n      return zone;\n    }\n\n    // Setup the variables needed to compute the overlay geometry.\n    let top: number;\n    let left: number;\n    let right: number;\n    let bottom: number;\n    let box = ElementExt.boxSizing(this.node); // TODO cache this?\n    let rect = this.node.getBoundingClientRect();\n\n    // Compute the overlay geometry based on the dock zone.\n    switch (zone) {\n      case 'root-all':\n        top = box.paddingTop;\n        left = box.paddingLeft;\n        right = box.paddingRight;\n        bottom = box.paddingBottom;\n        break;\n      case 'root-top':\n        top = box.paddingTop;\n        left = box.paddingLeft;\n        right = box.paddingRight;\n        bottom = rect.height * Private.GOLDEN_RATIO;\n        break;\n      case 'root-left':\n        top = box.paddingTop;\n        left = box.paddingLeft;\n        right = rect.width * Private.GOLDEN_RATIO;\n        bottom = box.paddingBottom;\n        break;\n      case 'root-right':\n        top = box.paddingTop;\n        left = rect.width * Private.GOLDEN_RATIO;\n        right = box.paddingRight;\n        bottom = box.paddingBottom;\n        break;\n      case 'root-bottom':\n        top = rect.height * Private.GOLDEN_RATIO;\n        left = box.paddingLeft;\n        right = box.paddingRight;\n        bottom = box.paddingBottom;\n        break;\n      case 'widget-all':\n        top = target!.top;\n        left = target!.left;\n        right = target!.right;\n        bottom = target!.bottom;\n        break;\n      case 'widget-top':\n        top = target!.top;\n        left = target!.left;\n        right = target!.right;\n        bottom = target!.bottom + target!.height / 2;\n        break;\n      case 'widget-left':\n        top = target!.top;\n        left = target!.left;\n        right = target!.right + target!.width / 2;\n        bottom = target!.bottom;\n        break;\n      case 'widget-right':\n        top = target!.top;\n        left = target!.left + target!.width / 2;\n        right = target!.right;\n        bottom = target!.bottom;\n        break;\n      case 'widget-bottom':\n        top = target!.top + target!.height / 2;\n        left = target!.left;\n        right = target!.right;\n        bottom = target!.bottom;\n        break;\n      case 'widget-tab': {\n        const tabHeight = target!.tabBar.node.getBoundingClientRect().height;\n        top = target!.top;\n        left = target!.left;\n        right = target!.right;\n        bottom = target!.bottom + target!.height - tabHeight;\n        break;\n      }\n      default:\n        throw 'unreachable';\n    }\n\n    // Show the overlay with the computed geometry.\n    this.overlay.show({ top, left, right, bottom });\n\n    // Finally, return the computed drop zone.\n    return zone;\n  }\n\n  /**\n   * Create a new tab bar for use by the panel.\n   */\n  private _createTabBar(): TabBar<Widget> {\n    // Create the tab bar.\n    let tabBar = this._renderer.createTabBar(this._document);\n\n    // Set the generated tab bar property for the tab bar.\n    Private.isGeneratedTabBarProperty.set(tabBar, true);\n\n    // Hide the tab bar when in single document mode.\n    if (this._mode === 'single-document') {\n      tabBar.hide();\n    }\n\n    // Enforce necessary tab bar behavior.\n    // TODO do we really want to enforce *all* of these?\n    tabBar.tabsMovable = this._tabsMovable;\n    tabBar.allowDeselect = false;\n    tabBar.addButtonEnabled = this._addButtonEnabled;\n    tabBar.removeBehavior = 'select-previous-tab';\n    tabBar.insertBehavior = 'select-tab-if-needed';\n\n    // Connect the signal handlers for the tab bar.\n    tabBar.tabMoved.connect(this._onTabMoved, this);\n    tabBar.currentChanged.connect(this._onCurrentChanged, this);\n    tabBar.tabCloseRequested.connect(this._onTabCloseRequested, this);\n    tabBar.tabDetachRequested.connect(this._onTabDetachRequested, this);\n    tabBar.tabActivateRequested.connect(this._onTabActivateRequested, this);\n    tabBar.addRequested.connect(this._onTabAddRequested, this);\n\n    // Return the initialized tab bar.\n    return tabBar;\n  }\n\n  /**\n   * Create a new handle for use by the panel.\n   */\n  private _createHandle(): HTMLDivElement {\n    return this._renderer.createHandle();\n  }\n\n  /**\n   * Handle the `tabMoved` signal from a tab bar.\n   */\n  private _onTabMoved(): void {\n    MessageLoop.postMessage(this, Private.LayoutModified);\n  }\n\n  /**\n   * Handle the `currentChanged` signal from a tab bar.\n   */\n  private _onCurrentChanged(\n    sender: TabBar<Widget>,\n    args: TabBar.ICurrentChangedArgs<Widget>\n  ): void {\n    // Extract the previous and current title from the args.\n    let { previousTitle, currentTitle } = args;\n\n    // Hide the previous widget.\n    if (previousTitle) {\n      previousTitle.owner.hide();\n    }\n\n    // Show the current widget.\n    if (currentTitle) {\n      currentTitle.owner.show();\n    }\n\n    // Flush the message loop on IE and Edge to prevent flicker.\n    if (Platform.IS_EDGE || Platform.IS_IE) {\n      MessageLoop.flush();\n    }\n\n    // Schedule an emit of the layout modified signal.\n    MessageLoop.postMessage(this, Private.LayoutModified);\n  }\n\n  /**\n   * Handle the `addRequested` signal from a tab bar.\n   */\n  private _onTabAddRequested(sender: TabBar<Widget>): void {\n    this._addRequested.emit(sender);\n  }\n\n  /**\n   * Handle the `tabActivateRequested` signal from a tab bar.\n   */\n  private _onTabActivateRequested(\n    sender: TabBar<Widget>,\n    args: TabBar.ITabActivateRequestedArgs<Widget>\n  ): void {\n    args.title.owner.activate();\n  }\n\n  /**\n   * Handle the `tabCloseRequested` signal from a tab bar.\n   */\n  private _onTabCloseRequested(\n    sender: TabBar<Widget>,\n    args: TabBar.ITabCloseRequestedArgs<Widget>\n  ): void {\n    args.title.owner.close();\n  }\n\n  /**\n   * Handle the `tabDetachRequested` signal from a tab bar.\n   */\n  private _onTabDetachRequested(\n    sender: TabBar<Widget>,\n    args: TabBar.ITabDetachRequestedArgs<Widget>\n  ): void {\n    // Do nothing if a drag is already in progress.\n    if (this._drag) {\n      return;\n    }\n\n    // Release the tab bar's hold on the mouse.\n    sender.releaseMouse();\n\n    // Extract the data from the args.\n    let { title, tab, clientX, clientY, offset } = args;\n\n    // Setup the mime data for the drag operation.\n    let mimeData = new MimeData();\n    let factory = () => title.owner;\n    mimeData.setData('application/vnd.lumino.widget-factory', factory);\n\n    // Create the drag image for the drag operation.\n    let dragImage = tab.cloneNode(true) as HTMLElement;\n    if (offset) {\n      dragImage.style.top = `-${offset.y}px`;\n      dragImage.style.left = `-${offset.x}px`;\n    }\n\n    // Create the drag object to manage the drag-drop operation.\n    this._drag = new Drag({\n      document: this._document,\n      mimeData,\n      dragImage,\n      proposedAction: 'move',\n      supportedActions: 'move',\n      source: this\n    });\n\n    // Hide the tab node in the original tab.\n    tab.classList.add('lm-mod-hidden');\n    let cleanup = () => {\n      this._drag = null;\n      tab.classList.remove('lm-mod-hidden');\n    };\n\n    // Start the drag operation and cleanup when done.\n    this._drag.start(clientX, clientY).then(cleanup);\n  }\n\n  private _edges: DockPanel.IEdges;\n  private _document: Document | ShadowRoot;\n  private _mode: DockPanel.Mode;\n  private _drag: Drag | null = null;\n  private _renderer: DockPanel.IRenderer;\n  private _tabsMovable: boolean = true;\n  private _tabsConstrained: boolean = false;\n  private _addButtonEnabled: boolean = false;\n  private _pressData: Private.IPressData | null = null;\n  private _layoutModified = new Signal<this, void>(this);\n\n  private _addRequested = new Signal<this, TabBar<Widget>>(this);\n}\n\n/**\n * The namespace for the `DockPanel` class statics.\n */\nexport namespace DockPanel {\n  /**\n   * An options object for creating a dock panel.\n   */\n  export interface IOptions {\n    /**\n     * The document to use with the dock panel.\n     *\n     * The default is the global `document` instance.\n     */\n\n    document?: Document | ShadowRoot;\n    /**\n     * The overlay to use with the dock panel.\n     *\n     * The default is a new `Overlay` instance.\n     */\n    overlay?: IOverlay;\n\n    /**\n     * The renderer to use for the dock panel.\n     *\n     * The default is a shared renderer instance.\n     */\n    renderer?: IRenderer;\n\n    /**\n     * The spacing between the items in the panel.\n     *\n     * The default is `4`.\n     */\n    spacing?: number;\n\n    /**\n     * The mode for the dock panel.\n     *\n     * The default is `'multiple-document'`.\n     */\n    mode?: DockPanel.Mode;\n\n    /**\n     * The sizes of the edge drop zones, in pixels.\n     * If not given, default values will be used.\n     */\n    edges?: IEdges;\n\n    /**\n     * The method for hiding widgets.\n     *\n     * The default is `Widget.HiddenMode.Display`.\n     */\n    hiddenMode?: Widget.HiddenMode;\n\n    /**\n     * Allow tabs to be draggable / movable by user.\n     *\n     * The default is `'true'`.\n     */\n    tabsMovable?: boolean;\n\n    /**\n     * Constrain tabs to this dock panel\n     *\n     * The default is `'false'`.\n     */\n    tabsConstrained?: boolean;\n\n    /**\n     * Enable add buttons in each of the dock panel's tab bars.\n     *\n     * The default is `'false'`.\n     */\n    addButtonEnabled?: boolean;\n  }\n\n  /**\n   * The sizes of the edge drop zones, in pixels.\n   */\n  export interface IEdges {\n    /**\n     * The size of the top edge drop zone.\n     */\n    top: number;\n\n    /**\n     * The size of the right edge drop zone.\n     */\n    right: number;\n\n    /**\n     * The size of the bottom edge drop zone.\n     */\n    bottom: number;\n\n    /**\n     * The size of the left edge drop zone.\n     */\n    left: number;\n  }\n\n  /**\n   * A type alias for the supported dock panel modes.\n   */\n  export type Mode =\n    | /**\n     * The single document mode.\n     *\n     * In this mode, only a single widget is visible at a time, and that\n     * widget fills the available layout space. No tab bars are visible.\n     */\n    'single-document'\n\n    /**\n     * The multiple document mode.\n     *\n     * In this mode, multiple documents are displayed in separate tab\n     * areas, and those areas can be individually resized by the user.\n     */\n    | 'multiple-document';\n\n  /**\n   * A type alias for a layout configuration object.\n   */\n  export type ILayoutConfig = DockLayout.ILayoutConfig;\n\n  /**\n   * A type alias for the supported insertion modes.\n   */\n  export type InsertMode = DockLayout.InsertMode;\n\n  /**\n   * A type alias for the add widget options.\n   */\n  export type IAddOptions = DockLayout.IAddOptions;\n\n  /**\n   * An object which holds the geometry for overlay positioning.\n   */\n  export interface IOverlayGeometry {\n    /**\n     * The distance between the overlay and parent top edges.\n     */\n    top: number;\n\n    /**\n     * The distance between the overlay and parent left edges.\n     */\n    left: number;\n\n    /**\n     * The distance between the overlay and parent right edges.\n     */\n    right: number;\n\n    /**\n     * The distance between the overlay and parent bottom edges.\n     */\n    bottom: number;\n  }\n\n  /**\n   * An object which manages the overlay node for a dock panel.\n   */\n  export interface IOverlay {\n    /**\n     * The DOM node for the overlay.\n     */\n    readonly node: HTMLDivElement;\n\n    /**\n     * Show the overlay using the given overlay geometry.\n     *\n     * @param geo - The desired geometry for the overlay.\n     *\n     * #### Notes\n     * The given geometry values assume the node will use absolute\n     * positioning.\n     *\n     * This is called on every mouse move event during a drag in order\n     * to update the position of the overlay. It should be efficient.\n     */\n    show(geo: IOverlayGeometry): void;\n\n    /**\n     * Hide the overlay node.\n     *\n     * @param delay - The delay (in ms) before hiding the overlay.\n     *   A delay value <= 0 should hide the overlay immediately.\n     *\n     * #### Notes\n     * This is called whenever the overlay node should been hidden.\n     */\n    hide(delay: number): void;\n  }\n\n  /**\n   * A concrete implementation of `IOverlay`.\n   *\n   * This is the default overlay implementation for a dock panel.\n   */\n  export class Overlay implements IOverlay {\n    /**\n     * Construct a new overlay.\n     */\n    constructor() {\n      this.node = document.createElement('div');\n      this.node.classList.add('lm-DockPanel-overlay');\n      this.node.classList.add('lm-mod-hidden');\n      this.node.style.position = 'absolute';\n      this.node.style.contain = 'strict';\n    }\n\n    /**\n     * The DOM node for the overlay.\n     */\n    readonly node: HTMLDivElement;\n\n    /**\n     * Show the overlay using the given overlay geometry.\n     *\n     * @param geo - The desired geometry for the overlay.\n     */\n    show(geo: IOverlayGeometry): void {\n      // Update the position of the overlay.\n      let style = this.node.style;\n      style.top = `${geo.top}px`;\n      style.left = `${geo.left}px`;\n      style.right = `${geo.right}px`;\n      style.bottom = `${geo.bottom}px`;\n\n      // Clear any pending hide timer.\n      clearTimeout(this._timer);\n      this._timer = -1;\n\n      // If the overlay is already visible, we're done.\n      if (!this._hidden) {\n        return;\n      }\n\n      // Clear the hidden flag.\n      this._hidden = false;\n\n      // Finally, show the overlay.\n      this.node.classList.remove('lm-mod-hidden');\n    }\n\n    /**\n     * Hide the overlay node.\n     *\n     * @param delay - The delay (in ms) before hiding the overlay.\n     *   A delay value <= 0 will hide the overlay immediately.\n     */\n    hide(delay: number): void {\n      // Do nothing if the overlay is already hidden.\n      if (this._hidden) {\n        return;\n      }\n\n      // Hide immediately if the delay is <= 0.\n      if (delay <= 0) {\n        clearTimeout(this._timer);\n        this._timer = -1;\n        this._hidden = true;\n        this.node.classList.add('lm-mod-hidden');\n        return;\n      }\n\n      // Do nothing if a hide is already pending.\n      if (this._timer !== -1) {\n        return;\n      }\n\n      // Otherwise setup the hide timer.\n      this._timer = window.setTimeout(() => {\n        this._timer = -1;\n        this._hidden = true;\n        this.node.classList.add('lm-mod-hidden');\n      }, delay);\n    }\n\n    private _timer = -1;\n    private _hidden = true;\n  }\n\n  /**\n   * A type alias for a dock panel renderer;\n   */\n  export type IRenderer = DockLayout.IRenderer;\n\n  /**\n   * The default implementation of `IRenderer`.\n   */\n  export class Renderer implements IRenderer {\n    /**\n     * Create a new tab bar for use with a dock panel.\n     *\n     * @returns A new tab bar for a dock panel.\n     */\n    createTabBar(document?: Document | ShadowRoot): TabBar<Widget> {\n      let bar = new TabBar<Widget>({ document });\n      bar.addClass('lm-DockPanel-tabBar');\n      return bar;\n    }\n\n    /**\n     * Create a new handle node for use with a dock panel.\n     *\n     * @returns A new handle node for a dock panel.\n     */\n    createHandle(): HTMLDivElement {\n      let handle = document.createElement('div');\n      handle.className = 'lm-DockPanel-handle';\n      return handle;\n    }\n  }\n\n  /**\n   * The default `Renderer` instance.\n   */\n  export const defaultRenderer = new Renderer();\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A fraction used for sizing root panels; ~= `1 / golden_ratio`.\n   */\n  export const GOLDEN_RATIO = 0.618;\n\n  /**\n   * The default sizes for the edge drop zones, in pixels.\n   */\n  export const DEFAULT_EDGES = {\n    /**\n     * The size of the top edge dock zone for the root panel, in pixels.\n     * This is different from the others to distinguish between the top\n     * tab bar and the top root zone.\n     */\n    top: 12,\n\n    /**\n     * The size of the edge dock zone for the root panel, in pixels.\n     */\n    right: 40,\n\n    /**\n     * The size of the edge dock zone for the root panel, in pixels.\n     */\n    bottom: 40,\n\n    /**\n     * The size of the edge dock zone for the root panel, in pixels.\n     */\n    left: 40\n  };\n\n  /**\n   * A singleton `'layout-modified'` conflatable message.\n   */\n  export const LayoutModified = new ConflatableMessage('layout-modified');\n\n  /**\n   * An object which holds mouse press data.\n   */\n  export interface IPressData {\n    /**\n     * The handle which was pressed.\n     */\n    handle: HTMLDivElement;\n\n    /**\n     * The X offset of the press in handle coordinates.\n     */\n    deltaX: number;\n\n    /**\n     * The Y offset of the press in handle coordinates.\n     */\n    deltaY: number;\n\n    /**\n     * The disposable which will clear the override cursor.\n     */\n    override: IDisposable;\n  }\n\n  /**\n   * A type alias for a drop zone.\n   */\n  export type DropZone =\n    | /**\n     * An invalid drop zone.\n     */\n    'invalid'\n\n    /**\n     * The entirety of the root dock area.\n     */\n    | 'root-all'\n\n    /**\n     * The top portion of the root dock area.\n     */\n    | 'root-top'\n\n    /**\n     * The left portion of the root dock area.\n     */\n    | 'root-left'\n\n    /**\n     * The right portion of the root dock area.\n     */\n    | 'root-right'\n\n    /**\n     * The bottom portion of the root dock area.\n     */\n    | 'root-bottom'\n\n    /**\n     * The entirety of a tabbed widget area.\n     */\n    | 'widget-all'\n\n    /**\n     * The top portion of tabbed widget area.\n     */\n    | 'widget-top'\n\n    /**\n     * The left portion of tabbed widget area.\n     */\n    | 'widget-left'\n\n    /**\n     * The right portion of tabbed widget area.\n     */\n    | 'widget-right'\n\n    /**\n     * The bottom portion of tabbed widget area.\n     */\n    | 'widget-bottom'\n\n    /**\n     * The the bar of a tabbed widget area.\n     */\n    | 'widget-tab';\n\n  /**\n   * An object which holds the drop target zone and widget.\n   */\n  export interface IDropTarget {\n    /**\n     * The semantic zone for the mouse position.\n     */\n    zone: DropZone;\n\n    /**\n     * The tab area geometry for the drop zone, or `null`.\n     */\n    target: DockLayout.ITabAreaGeometry | null;\n  }\n\n  /**\n   * An attached property used to track generated tab bars.\n   */\n  export const isGeneratedTabBarProperty = new AttachedProperty<\n    Widget,\n    boolean\n  >({\n    name: 'isGeneratedTabBar',\n    create: () => false\n  });\n\n  /**\n   * Create a single document config for the widgets in a dock panel.\n   */\n  export function createSingleDocumentConfig(\n    panel: DockPanel\n  ): DockPanel.ILayoutConfig {\n    // Return an empty config if the panel is empty.\n    if (panel.isEmpty) {\n      return { main: null };\n    }\n\n    // Get a flat array of the widgets in the panel.\n    let widgets = Array.from(panel.widgets());\n\n    // Get the first selected widget in the panel.\n    let selected = panel.selectedWidgets().next().value;\n\n    // Compute the current index for the new config.\n    let currentIndex = selected ? widgets.indexOf(selected) : -1;\n\n    // Return the single document config.\n    return { main: { type: 'tab-area', widgets, currentIndex } };\n  }\n\n  /**\n   * Find the drop target at the given client position.\n   */\n  export function findDropTarget(\n    panel: DockPanel,\n    clientX: number,\n    clientY: number,\n    edges: DockPanel.IEdges\n  ): IDropTarget {\n    // Bail if the mouse is not over the dock panel.\n    if (!ElementExt.hitTest(panel.node, clientX, clientY)) {\n      return { zone: 'invalid', target: null };\n    }\n\n    // Look up the layout for the panel.\n    let layout = panel.layout as DockLayout;\n\n    // If the layout is empty, indicate the entire root drop zone.\n    if (layout.isEmpty) {\n      return { zone: 'root-all', target: null };\n    }\n\n    // Test the edge zones when in multiple document mode.\n    if (panel.mode === 'multiple-document') {\n      // Get the client rect for the dock panel.\n      let panelRect = panel.node.getBoundingClientRect();\n\n      // Compute the distance to each edge of the panel.\n      let pl = clientX - panelRect.left + 1;\n      let pt = clientY - panelRect.top + 1;\n      let pr = panelRect.right - clientX;\n      let pb = panelRect.bottom - clientY;\n\n      // Find the minimum distance to an edge.\n      let pd = Math.min(pt, pr, pb, pl);\n\n      // Return a root zone if the mouse is within an edge.\n      switch (pd) {\n        case pt:\n          if (pt < edges.top) {\n            return { zone: 'root-top', target: null };\n          }\n          break;\n        case pr:\n          if (pr < edges.right) {\n            return { zone: 'root-right', target: null };\n          }\n          break;\n        case pb:\n          if (pb < edges.bottom) {\n            return { zone: 'root-bottom', target: null };\n          }\n          break;\n        case pl:\n          if (pl < edges.left) {\n            return { zone: 'root-left', target: null };\n          }\n          break;\n        default:\n          throw 'unreachable';\n      }\n    }\n\n    // Hit test the dock layout at the given client position.\n    let target = layout.hitTestTabAreas(clientX, clientY);\n\n    // Bail if no target area was found.\n    if (!target) {\n      return { zone: 'invalid', target: null };\n    }\n\n    // Return the whole tab area when in single document mode.\n    if (panel.mode === 'single-document') {\n      return { zone: 'widget-all', target };\n    }\n\n    // Compute the distance to each edge of the tab area.\n    let al = target.x - target.left + 1;\n    let at = target.y - target.top + 1;\n    let ar = target.left + target.width - target.x;\n    let ab = target.top + target.height - target.y;\n\n    const tabHeight = target.tabBar.node.getBoundingClientRect().height;\n    if (at < tabHeight) {\n      return { zone: 'widget-tab', target };\n    }\n\n    // Get the X and Y edge sizes for the area.\n    let rx = Math.round(target.width / 3);\n    let ry = Math.round(target.height / 3);\n\n    // If the mouse is not within an edge, indicate the entire area.\n    if (al > rx && ar > rx && at > ry && ab > ry) {\n      return { zone: 'widget-all', target };\n    }\n\n    // Scale the distances by the slenderness ratio.\n    al /= rx;\n    at /= ry;\n    ar /= rx;\n    ab /= ry;\n\n    // Find the minimum distance to the area edge.\n    let ad = Math.min(al, at, ar, ab);\n\n    // Find the widget zone for the area edge.\n    let zone: DropZone;\n    switch (ad) {\n      case al:\n        zone = 'widget-left';\n        break;\n      case at:\n        zone = 'widget-top';\n        break;\n      case ar:\n        zone = 'widget-right';\n        break;\n      case ab:\n        zone = 'widget-bottom';\n        break;\n      default:\n        throw 'unreachable';\n    }\n\n    // Return the final drop target.\n    return { zone, target };\n  }\n\n  /**\n   * Get the drop reference widget for a tab bar.\n   */\n  export function getDropRef(tabBar: TabBar<Widget>): Widget | null {\n    if (tabBar.titles.length === 0) {\n      return null;\n    }\n    if (tabBar.currentTitle) {\n      return tabBar.currentTitle.owner;\n    }\n    return tabBar.titles[tabBar.titles.length - 1].owner;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { ArrayExt, find, max } from '@lumino/algorithm';\n\nimport { IDisposable } from '@lumino/disposable';\n\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { Widget } from './widget';\n\n/**\n * A class which tracks focus among a set of widgets.\n *\n * This class is useful when code needs to keep track of the most\n * recently focused widget(s) among a set of related widgets.\n */\nexport class FocusTracker<T extends Widget> implements IDisposable {\n  /**\n   * Dispose of the resources held by the tracker.\n   */\n  dispose(): void {\n    // Do nothing if the tracker is already disposed.\n    if (this._counter < 0) {\n      return;\n    }\n\n    // Mark the tracker as disposed.\n    this._counter = -1;\n\n    // Clear the connections for the tracker.\n    Signal.clearData(this);\n\n    // Remove all event listeners.\n    for (const widget of this._widgets) {\n      widget.node.removeEventListener('focus', this, true);\n      widget.node.removeEventListener('blur', this, true);\n    }\n\n    // Clear the internal data structures.\n    this._activeWidget = null;\n    this._currentWidget = null;\n    this._nodes.clear();\n    this._numbers.clear();\n    this._widgets.length = 0;\n  }\n\n  /**\n   * A signal emitted when the current widget has changed.\n   */\n  get currentChanged(): ISignal<this, FocusTracker.IChangedArgs<T>> {\n    return this._currentChanged;\n  }\n\n  /**\n   * A signal emitted when the active widget has changed.\n   */\n  get activeChanged(): ISignal<this, FocusTracker.IChangedArgs<T>> {\n    return this._activeChanged;\n  }\n\n  /**\n   * A flag indicating whether the tracker is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._counter < 0;\n  }\n\n  /**\n   * The current widget in the tracker.\n   *\n   * #### Notes\n   * The current widget is the widget among the tracked widgets which\n   * has the *descendant node* which has most recently been focused.\n   *\n   * The current widget will not be updated if the node loses focus. It\n   * will only be updated when a different tracked widget gains focus.\n   *\n   * If the current widget is removed from the tracker, the previous\n   * current widget will be restored.\n   *\n   * This behavior is intended to follow a user's conceptual model of\n   * a semantically \"current\" widget, where the \"last thing of type X\"\n   * to be interacted with is the \"current instance of X\", regardless\n   * of whether that instance still has focus.\n   */\n  get currentWidget(): T | null {\n    return this._currentWidget;\n  }\n\n  /**\n   * The active widget in the tracker.\n   *\n   * #### Notes\n   * The active widget is the widget among the tracked widgets which\n   * has the *descendant node* which is currently focused.\n   */\n  get activeWidget(): T | null {\n    return this._activeWidget;\n  }\n\n  /**\n   * A read only array of the widgets being tracked.\n   */\n  get widgets(): ReadonlyArray<T> {\n    return this._widgets;\n  }\n\n  /**\n   * Get the focus number for a particular widget in the tracker.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The focus number for the given widget, or `-1` if the\n   *   widget has not had focus since being added to the tracker, or\n   *   is not contained by the tracker.\n   *\n   * #### Notes\n   * The focus number indicates the relative order in which the widgets\n   * have gained focus. A widget with a larger number has gained focus\n   * more recently than a widget with a smaller number.\n   *\n   * The `currentWidget` will always have the largest focus number.\n   *\n   * All widgets start with a focus number of `-1`, which indicates that\n   * the widget has not been focused since being added to the tracker.\n   */\n  focusNumber(widget: T): number {\n    let n = this._numbers.get(widget);\n    return n === undefined ? -1 : n;\n  }\n\n  /**\n   * Test whether the focus tracker contains a given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns `true` if the widget is tracked, `false` otherwise.\n   */\n  has(widget: T): boolean {\n    return this._numbers.has(widget);\n  }\n\n  /**\n   * Add a widget to the focus tracker.\n   *\n   * @param widget - The widget of interest.\n   *\n   * #### Notes\n   * A widget will be automatically removed from the tracker if it\n   * is disposed after being added.\n   *\n   * If the widget is already tracked, this is a no-op.\n   */\n  add(widget: T): void {\n    // Do nothing if the widget is already tracked.\n    if (this._numbers.has(widget)) {\n      return;\n    }\n\n    // Test whether the widget has focus.\n    let focused = widget.node.contains(document.activeElement);\n\n    // Set up the initial focus number.\n    let n = focused ? this._counter++ : -1;\n\n    // Add the widget to the internal data structures.\n    this._widgets.push(widget);\n    this._numbers.set(widget, n);\n    this._nodes.set(widget.node, widget);\n\n    // Set up the event listeners. The capturing phase must be used\n    // since the 'focus' and 'blur' events don't bubble and Firefox\n    // doesn't support the 'focusin' or 'focusout' events.\n    widget.node.addEventListener('focus', this, true);\n    widget.node.addEventListener('blur', this, true);\n\n    // Connect the disposed signal handler.\n    widget.disposed.connect(this._onWidgetDisposed, this);\n\n    // Set the current and active widgets if needed.\n    if (focused) {\n      this._setWidgets(widget, widget);\n    }\n  }\n\n  /**\n   * Remove a widget from the focus tracker.\n   *\n   * #### Notes\n   * If the widget is the `currentWidget`, the previous current widget\n   * will become the new `currentWidget`.\n   *\n   * A widget will be automatically removed from the tracker if it\n   * is disposed after being added.\n   *\n   * If the widget is not tracked, this is a no-op.\n   */\n  remove(widget: T): void {\n    // Bail early if the widget is not tracked.\n    if (!this._numbers.has(widget)) {\n      return;\n    }\n\n    // Disconnect the disposed signal handler.\n    widget.disposed.disconnect(this._onWidgetDisposed, this);\n\n    // Remove the event listeners.\n    widget.node.removeEventListener('focus', this, true);\n    widget.node.removeEventListener('blur', this, true);\n\n    // Remove the widget from the internal data structures.\n    ArrayExt.removeFirstOf(this._widgets, widget);\n    this._nodes.delete(widget.node);\n    this._numbers.delete(widget);\n\n    // Bail early if the widget is not the current widget.\n    if (this._currentWidget !== widget) {\n      return;\n    }\n\n    // Filter the widgets for those which have had focus.\n    let valid = this._widgets.filter(w => this._numbers.get(w) !== -1);\n\n    // Get the valid widget with the max focus number.\n    let previous =\n      max(valid, (first, second) => {\n        let a = this._numbers.get(first)!;\n        let b = this._numbers.get(second)!;\n        return a - b;\n      }) || null;\n\n    // Set the current and active widgets.\n    this._setWidgets(previous, null);\n  }\n\n  /**\n   * Handle the DOM events for the focus tracker.\n   *\n   * @param event - The DOM event sent to the panel.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the tracked nodes. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'focus':\n        this._evtFocus(event as FocusEvent);\n        break;\n      case 'blur':\n        this._evtBlur(event as FocusEvent);\n        break;\n    }\n  }\n\n  /**\n   * Set the current and active widgets for the tracker.\n   */\n  private _setWidgets(current: T | null, active: T | null): void {\n    // Swap the current widget.\n    let oldCurrent = this._currentWidget;\n    this._currentWidget = current;\n\n    // Swap the active widget.\n    let oldActive = this._activeWidget;\n    this._activeWidget = active;\n\n    // Emit the `currentChanged` signal if needed.\n    if (oldCurrent !== current) {\n      this._currentChanged.emit({ oldValue: oldCurrent, newValue: current });\n    }\n\n    // Emit the `activeChanged` signal if needed.\n    if (oldActive !== active) {\n      this._activeChanged.emit({ oldValue: oldActive, newValue: active });\n    }\n  }\n\n  /**\n   * Handle the `'focus'` event for a tracked widget.\n   */\n  private _evtFocus(event: FocusEvent): void {\n    // Find the widget which gained focus, which is known to exist.\n    let widget = this._nodes.get(event.currentTarget as HTMLElement)!;\n\n    // Update the focus number if necessary.\n    if (widget !== this._currentWidget) {\n      this._numbers.set(widget, this._counter++);\n    }\n\n    // Set the current and active widgets.\n    this._setWidgets(widget, widget);\n  }\n\n  /**\n   * Handle the `'blur'` event for a tracked widget.\n   */\n  private _evtBlur(event: FocusEvent): void {\n    // Find the widget which lost focus, which is known to exist.\n    let widget = this._nodes.get(event.currentTarget as HTMLElement)!;\n\n    // Get the node which being focused after this blur.\n    let focusTarget = event.relatedTarget as HTMLElement;\n\n    // If no other node is being focused, clear the active widget.\n    if (!focusTarget) {\n      this._setWidgets(this._currentWidget, null);\n      return;\n    }\n\n    // Bail if the focus widget is not changing.\n    if (widget.node.contains(focusTarget)) {\n      return;\n    }\n\n    // If no tracked widget is being focused, clear the active widget.\n    if (!find(this._widgets, w => w.node.contains(focusTarget))) {\n      this._setWidgets(this._currentWidget, null);\n      return;\n    }\n  }\n\n  /**\n   * Handle the `disposed` signal for a tracked widget.\n   */\n  private _onWidgetDisposed(sender: T): void {\n    this.remove(sender);\n  }\n\n  private _counter = 0;\n  private _widgets: T[] = [];\n  private _activeWidget: T | null = null;\n  private _currentWidget: T | null = null;\n  private _numbers = new Map<T, number>();\n  private _nodes = new Map<HTMLElement, T>();\n  private _activeChanged = new Signal<this, FocusTracker.IChangedArgs<T>>(this);\n  private _currentChanged = new Signal<this, FocusTracker.IChangedArgs<T>>(\n    this\n  );\n}\n\n/**\n * The namespace for the `FocusTracker` class statics.\n */\nexport namespace FocusTracker {\n  /**\n   * An arguments object for the changed signals.\n   */\n  export interface IChangedArgs<T extends Widget> {\n    /**\n     * The old value for the widget.\n     */\n    oldValue: T | null;\n\n    /**\n     * The new value for the widget.\n     */\n    newValue: T | null;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { ArrayExt } from '@lumino/algorithm';\n\nimport { ElementExt } from '@lumino/domutils';\n\nimport { Message, MessageLoop } from '@lumino/messaging';\n\nimport { AttachedProperty } from '@lumino/properties';\n\nimport { BoxEngine, BoxSizer } from './boxengine';\n\nimport { Layout, LayoutItem } from './layout';\n\nimport { Widget } from './widget';\n\n/**\n * A layout which arranges its widgets in a grid.\n */\nexport class GridLayout extends Layout {\n  /**\n   * Construct a new grid layout.\n   *\n   * @param options - The options for initializing the layout.\n   */\n  constructor(options: GridLayout.IOptions = {}) {\n    super(options);\n    if (options.rowCount !== undefined) {\n      Private.reallocSizers(this._rowSizers, options.rowCount);\n    }\n    if (options.columnCount !== undefined) {\n      Private.reallocSizers(this._columnSizers, options.columnCount);\n    }\n    if (options.rowSpacing !== undefined) {\n      this._rowSpacing = Private.clampValue(options.rowSpacing);\n    }\n    if (options.columnSpacing !== undefined) {\n      this._columnSpacing = Private.clampValue(options.columnSpacing);\n    }\n  }\n\n  /**\n   * Dispose of the resources held by the layout.\n   */\n  dispose(): void {\n    // Dispose of the widgets and layout items.\n    for (const item of this._items) {\n      let widget = item.widget;\n      item.dispose();\n      widget.dispose();\n    }\n\n    // Clear the layout state.\n    this._box = null;\n    this._items.length = 0;\n    this._rowStarts.length = 0;\n    this._rowSizers.length = 0;\n    this._columnStarts.length = 0;\n    this._columnSizers.length = 0;\n\n    // Dispose of the rest of the layout.\n    super.dispose();\n  }\n\n  /**\n   * Get the number of rows in the layout.\n   */\n  get rowCount(): number {\n    return this._rowSizers.length;\n  }\n\n  /**\n   * Set the number of rows in the layout.\n   *\n   * #### Notes\n   * The minimum row count is `1`.\n   */\n  set rowCount(value: number) {\n    // Do nothing if the row count does not change.\n    if (value === this.rowCount) {\n      return;\n    }\n\n    // Reallocate the row sizers.\n    Private.reallocSizers(this._rowSizers, value);\n\n    // Schedule a fit of the parent.\n    if (this.parent) {\n      this.parent.fit();\n    }\n  }\n\n  /**\n   * Get the number of columns in the layout.\n   */\n  get columnCount(): number {\n    return this._columnSizers.length;\n  }\n\n  /**\n   * Set the number of columns in the layout.\n   *\n   * #### Notes\n   * The minimum column count is `1`.\n   */\n  set columnCount(value: number) {\n    // Do nothing if the column count does not change.\n    if (value === this.columnCount) {\n      return;\n    }\n\n    // Reallocate the column sizers.\n    Private.reallocSizers(this._columnSizers, value);\n\n    // Schedule a fit of the parent.\n    if (this.parent) {\n      this.parent.fit();\n    }\n  }\n\n  /**\n   * Get the row spacing for the layout.\n   */\n  get rowSpacing(): number {\n    return this._rowSpacing;\n  }\n\n  /**\n   * Set the row spacing for the layout.\n   */\n  set rowSpacing(value: number) {\n    // Clamp the spacing to the allowed range.\n    value = Private.clampValue(value);\n\n    // Bail if the spacing does not change\n    if (this._rowSpacing === value) {\n      return;\n    }\n\n    // Update the internal spacing.\n    this._rowSpacing = value;\n\n    // Schedule a fit of the parent.\n    if (this.parent) {\n      this.parent.fit();\n    }\n  }\n\n  /**\n   * Get the column spacing for the layout.\n   */\n  get columnSpacing(): number {\n    return this._columnSpacing;\n  }\n\n  /**\n   * Set the col spacing for the layout.\n   */\n  set columnSpacing(value: number) {\n    // Clamp the spacing to the allowed range.\n    value = Private.clampValue(value);\n\n    // Bail if the spacing does not change\n    if (this._columnSpacing === value) {\n      return;\n    }\n\n    // Update the internal spacing.\n    this._columnSpacing = value;\n\n    // Schedule a fit of the parent.\n    if (this.parent) {\n      this.parent.fit();\n    }\n  }\n\n  /**\n   * Get the stretch factor for a specific row.\n   *\n   * @param index - The row index of interest.\n   *\n   * @returns The stretch factor for the row.\n   *\n   * #### Notes\n   * This returns `-1` if the index is out of range.\n   */\n  rowStretch(index: number): number {\n    let sizer = this._rowSizers[index];\n    return sizer ? sizer.stretch : -1;\n  }\n\n  /**\n   * Set the stretch factor for a specific row.\n   *\n   * @param index - The row index of interest.\n   *\n   * @param value - The stretch factor for the row.\n   *\n   * #### Notes\n   * This is a no-op if the index is out of range.\n   */\n  setRowStretch(index: number, value: number): void {\n    // Look up the row sizer.\n    let sizer = this._rowSizers[index];\n\n    // Bail if the index is out of range.\n    if (!sizer) {\n      return;\n    }\n\n    // Clamp the value to the allowed range.\n    value = Private.clampValue(value);\n\n    // Bail if the stretch does not change.\n    if (sizer.stretch === value) {\n      return;\n    }\n\n    // Update the sizer stretch.\n    sizer.stretch = value;\n\n    // Schedule an update of the parent.\n    if (this.parent) {\n      this.parent.update();\n    }\n  }\n\n  /**\n   * Get the stretch factor for a specific column.\n   *\n   * @param index - The column index of interest.\n   *\n   * @returns The stretch factor for the column.\n   *\n   * #### Notes\n   * This returns `-1` if the index is out of range.\n   */\n  columnStretch(index: number): number {\n    let sizer = this._columnSizers[index];\n    return sizer ? sizer.stretch : -1;\n  }\n\n  /**\n   * Set the stretch factor for a specific column.\n   *\n   * @param index - The column index of interest.\n   *\n   * @param value - The stretch factor for the column.\n   *\n   * #### Notes\n   * This is a no-op if the index is out of range.\n   */\n  setColumnStretch(index: number, value: number): void {\n    // Look up the column sizer.\n    let sizer = this._columnSizers[index];\n\n    // Bail if the index is out of range.\n    if (!sizer) {\n      return;\n    }\n\n    // Clamp the value to the allowed range.\n    value = Private.clampValue(value);\n\n    // Bail if the stretch does not change.\n    if (sizer.stretch === value) {\n      return;\n    }\n\n    // Update the sizer stretch.\n    sizer.stretch = value;\n\n    // Schedule an update of the parent.\n    if (this.parent) {\n      this.parent.update();\n    }\n  }\n\n  /**\n   * Create an iterator over the widgets in the layout.\n   *\n   * @returns A new iterator over the widgets in the layout.\n   */\n  *[Symbol.iterator](): IterableIterator<Widget> {\n    for (const item of this._items) {\n      yield item.widget;\n    }\n  }\n\n  /**\n   * Add a widget to the grid layout.\n   *\n   * @param widget - The widget to add to the layout.\n   *\n   * #### Notes\n   * If the widget is already contained in the layout, this is no-op.\n   */\n  addWidget(widget: Widget): void {\n    // Look up the index for the widget.\n    let i = ArrayExt.findFirstIndex(this._items, it => it.widget === widget);\n\n    // Bail if the widget is already in the layout.\n    if (i !== -1) {\n      return;\n    }\n\n    // Add the widget to the layout.\n    this._items.push(new LayoutItem(widget));\n\n    // Attach the widget to the parent.\n    if (this.parent) {\n      this.attachWidget(widget);\n    }\n  }\n\n  /**\n   * Remove a widget from the grid layout.\n   *\n   * @param widget - The widget to remove from the layout.\n   *\n   * #### Notes\n   * A widget is automatically removed from the layout when its `parent`\n   * is set to `null`. This method should only be invoked directly when\n   * removing a widget from a layout which has yet to be installed on a\n   * parent widget.\n   *\n   * This method does *not* modify the widget's `parent`.\n   */\n  removeWidget(widget: Widget): void {\n    // Look up the index for the widget.\n    let i = ArrayExt.findFirstIndex(this._items, it => it.widget === widget);\n\n    // Bail if the widget is not in the layout.\n    if (i === -1) {\n      return;\n    }\n\n    // Remove the widget from the layout.\n    let item = ArrayExt.removeAt(this._items, i)!;\n\n    // Detach the widget from the parent.\n    if (this.parent) {\n      this.detachWidget(widget);\n    }\n\n    // Dispose the layout item.\n    item.dispose();\n  }\n\n  /**\n   * Perform layout initialization which requires the parent widget.\n   */\n  protected init(): void {\n    super.init();\n    for (const widget of this) {\n      this.attachWidget(widget);\n    }\n  }\n\n  /**\n   * Attach a widget to the parent's DOM node.\n   *\n   * @param widget - The widget to attach to the parent.\n   */\n  protected attachWidget(widget: Widget): void {\n    // Send a `'before-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\n    }\n\n    // Add the widget's node to the parent.\n    this.parent!.node.appendChild(widget.node);\n\n    // Send an `'after-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\n    }\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * Detach a widget from the parent's DOM node.\n   *\n   * @param widget - The widget to detach from the parent.\n   */\n  protected detachWidget(widget: Widget): void {\n    // Send a `'before-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\n    }\n\n    // Remove the widget's node from the parent.\n    this.parent!.node.removeChild(widget.node);\n\n    // Send an `'after-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\n    }\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'before-show'` message.\n   */\n  protected onBeforeShow(msg: Message): void {\n    super.onBeforeShow(msg);\n    this.parent!.update();\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    super.onBeforeAttach(msg);\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-shown'` message.\n   */\n  protected onChildShown(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-hidden'` message.\n   */\n  protected onChildHidden(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'resize'` message.\n   */\n  protected onResize(msg: Widget.ResizeMessage): void {\n    if (this.parent!.isVisible) {\n      this._update(msg.width, msg.height);\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    if (this.parent!.isVisible) {\n      this._update(-1, -1);\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'fit-request'` message.\n   */\n  protected onFitRequest(msg: Message): void {\n    if (this.parent!.isAttached) {\n      this._fit();\n    }\n  }\n\n  /**\n   * Fit the layout to the total size required by the widgets.\n   */\n  private _fit(): void {\n    // Reset the min sizes of the sizers.\n    for (let i = 0, n = this.rowCount; i < n; ++i) {\n      this._rowSizers[i].minSize = 0;\n    }\n    for (let i = 0, n = this.columnCount; i < n; ++i) {\n      this._columnSizers[i].minSize = 0;\n    }\n\n    // Filter for the visible layout items.\n    let items = this._items.filter(it => !it.isHidden);\n\n    // Fit the layout items.\n    for (let i = 0, n = items.length; i < n; ++i) {\n      items[i].fit();\n    }\n\n    // Get the max row and column index.\n    let maxRow = this.rowCount - 1;\n    let maxCol = this.columnCount - 1;\n\n    // Sort the items by row span.\n    items.sort(Private.rowSpanCmp);\n\n    // Update the min sizes of the row sizers.\n    for (let i = 0, n = items.length; i < n; ++i) {\n      // Fetch the item.\n      let item = items[i];\n\n      // Get the row bounds for the item.\n      let config = GridLayout.getCellConfig(item.widget);\n      let r1 = Math.min(config.row, maxRow);\n      let r2 = Math.min(config.row + config.rowSpan - 1, maxRow);\n\n      // Distribute the minimum height to the sizers as needed.\n      Private.distributeMin(this._rowSizers, r1, r2, item.minHeight);\n    }\n\n    // Sort the items by column span.\n    items.sort(Private.columnSpanCmp);\n\n    // Update the min sizes of the column sizers.\n    for (let i = 0, n = items.length; i < n; ++i) {\n      // Fetch the item.\n      let item = items[i];\n\n      // Get the column bounds for the item.\n      let config = GridLayout.getCellConfig(item.widget);\n      let c1 = Math.min(config.column, maxCol);\n      let c2 = Math.min(config.column + config.columnSpan - 1, maxCol);\n\n      // Distribute the minimum width to the sizers as needed.\n      Private.distributeMin(this._columnSizers, c1, c2, item.minWidth);\n    }\n\n    // If no size constraint is needed, just update the parent.\n    if (this.fitPolicy === 'set-no-constraint') {\n      MessageLoop.sendMessage(this.parent!, Widget.Msg.UpdateRequest);\n      return;\n    }\n\n    // Set up the computed min size.\n    let minH = maxRow * this._rowSpacing;\n    let minW = maxCol * this._columnSpacing;\n\n    // Add the sizer minimums to the computed min size.\n    for (let i = 0, n = this.rowCount; i < n; ++i) {\n      minH += this._rowSizers[i].minSize;\n    }\n    for (let i = 0, n = this.columnCount; i < n; ++i) {\n      minW += this._columnSizers[i].minSize;\n    }\n\n    // Update the box sizing and add it to the computed min size.\n    let box = (this._box = ElementExt.boxSizing(this.parent!.node));\n    minW += box.horizontalSum;\n    minH += box.verticalSum;\n\n    // Update the parent's min size constraints.\n    let style = this.parent!.node.style;\n    style.minWidth = `${minW}px`;\n    style.minHeight = `${minH}px`;\n\n    // Set the dirty flag to ensure only a single update occurs.\n    this._dirty = true;\n\n    // Notify the ancestor that it should fit immediately. This may\n    // cause a resize of the parent, fulfilling the required update.\n    if (this.parent!.parent) {\n      MessageLoop.sendMessage(this.parent!.parent!, Widget.Msg.FitRequest);\n    }\n\n    // If the dirty flag is still set, the parent was not resized.\n    // Trigger the required update on the parent widget immediately.\n    if (this._dirty) {\n      MessageLoop.sendMessage(this.parent!, Widget.Msg.UpdateRequest);\n    }\n  }\n\n  /**\n   * Update the layout position and size of the widgets.\n   *\n   * The parent offset dimensions should be `-1` if unknown.\n   */\n  private _update(offsetWidth: number, offsetHeight: number): void {\n    // Clear the dirty flag to indicate the update occurred.\n    this._dirty = false;\n\n    // Measure the parent if the offset dimensions are unknown.\n    if (offsetWidth < 0) {\n      offsetWidth = this.parent!.node.offsetWidth;\n    }\n    if (offsetHeight < 0) {\n      offsetHeight = this.parent!.node.offsetHeight;\n    }\n\n    // Ensure the parent box sizing data is computed.\n    if (!this._box) {\n      this._box = ElementExt.boxSizing(this.parent!.node);\n    }\n\n    // Compute the layout area adjusted for border and padding.\n    let top = this._box.paddingTop;\n    let left = this._box.paddingLeft;\n    let width = offsetWidth - this._box.horizontalSum;\n    let height = offsetHeight - this._box.verticalSum;\n\n    // Get the max row and column index.\n    let maxRow = this.rowCount - 1;\n    let maxCol = this.columnCount - 1;\n\n    // Compute the total fixed row and column space.\n    let fixedRowSpace = maxRow * this._rowSpacing;\n    let fixedColSpace = maxCol * this._columnSpacing;\n\n    // Distribute the available space to the box sizers.\n    BoxEngine.calc(this._rowSizers, Math.max(0, height - fixedRowSpace));\n    BoxEngine.calc(this._columnSizers, Math.max(0, width - fixedColSpace));\n\n    // Update the row start positions.\n    for (let i = 0, pos = top, n = this.rowCount; i < n; ++i) {\n      this._rowStarts[i] = pos;\n      pos += this._rowSizers[i].size + this._rowSpacing;\n    }\n\n    // Update the column start positions.\n    for (let i = 0, pos = left, n = this.columnCount; i < n; ++i) {\n      this._columnStarts[i] = pos;\n      pos += this._columnSizers[i].size + this._columnSpacing;\n    }\n\n    // Update the geometry of the layout items.\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      // Fetch the item.\n      let item = this._items[i];\n\n      // Ignore hidden items.\n      if (item.isHidden) {\n        continue;\n      }\n\n      // Fetch the cell bounds for the widget.\n      let config = GridLayout.getCellConfig(item.widget);\n      let r1 = Math.min(config.row, maxRow);\n      let c1 = Math.min(config.column, maxCol);\n      let r2 = Math.min(config.row + config.rowSpan - 1, maxRow);\n      let c2 = Math.min(config.column + config.columnSpan - 1, maxCol);\n\n      // Compute the cell geometry.\n      let x = this._columnStarts[c1];\n      let y = this._rowStarts[r1];\n      let w = this._columnStarts[c2] + this._columnSizers[c2].size - x;\n      let h = this._rowStarts[r2] + this._rowSizers[r2].size - y;\n\n      // Update the geometry of the layout item.\n      item.update(x, y, w, h);\n    }\n  }\n\n  private _dirty = false;\n  private _rowSpacing = 4;\n  private _columnSpacing = 4;\n  private _items: LayoutItem[] = [];\n  private _rowStarts: number[] = [];\n  private _columnStarts: number[] = [];\n  private _rowSizers: BoxSizer[] = [new BoxSizer()];\n  private _columnSizers: BoxSizer[] = [new BoxSizer()];\n  private _box: ElementExt.IBoxSizing | null = null;\n}\n\n/**\n * The namespace for the `GridLayout` class statics.\n */\nexport namespace GridLayout {\n  /**\n   * An options object for initializing a grid layout.\n   */\n  export interface IOptions extends Layout.IOptions {\n    /**\n     * The initial row count for the layout.\n     *\n     * The default is `1`.\n     */\n    rowCount?: number;\n\n    /**\n     * The initial column count for the layout.\n     *\n     * The default is `1`.\n     */\n    columnCount?: number;\n\n    /**\n     * The spacing between rows in the layout.\n     *\n     * The default is `4`.\n     */\n    rowSpacing?: number;\n\n    /**\n     * The spacing between columns in the layout.\n     *\n     * The default is `4`.\n     */\n    columnSpacing?: number;\n  }\n\n  /**\n   * An object which holds the cell configuration for a widget.\n   */\n  export interface ICellConfig {\n    /**\n     * The row index for the widget.\n     */\n    readonly row: number;\n\n    /**\n     * The column index for the widget.\n     */\n    readonly column: number;\n\n    /**\n     * The row span for the widget.\n     */\n    readonly rowSpan: number;\n\n    /**\n     * The column span for the widget.\n     */\n    readonly columnSpan: number;\n  }\n\n  /**\n   * Get the cell config for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @returns The cell config for the widget.\n   */\n  export function getCellConfig(widget: Widget): ICellConfig {\n    return Private.cellConfigProperty.get(widget);\n  }\n\n  /**\n   * Set the cell config for the given widget.\n   *\n   * @param widget - The widget of interest.\n   *\n   * @param value - The value for the cell config.\n   */\n  export function setCellConfig(\n    widget: Widget,\n    value: Partial<ICellConfig>\n  ): void {\n    Private.cellConfigProperty.set(widget, Private.normalizeConfig(value));\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * The property descriptor for the widget cell config.\n   */\n  export const cellConfigProperty = new AttachedProperty<\n    Widget,\n    GridLayout.ICellConfig\n  >({\n    name: 'cellConfig',\n    create: () => ({ row: 0, column: 0, rowSpan: 1, columnSpan: 1 }),\n    changed: onChildCellConfigChanged\n  });\n\n  /**\n   * Normalize a partial cell config object.\n   */\n  export function normalizeConfig(\n    config: Partial<GridLayout.ICellConfig>\n  ): GridLayout.ICellConfig {\n    let row = Math.max(0, Math.floor(config.row || 0));\n    let column = Math.max(0, Math.floor(config.column || 0));\n    let rowSpan = Math.max(1, Math.floor(config.rowSpan || 0));\n    let columnSpan = Math.max(1, Math.floor(config.columnSpan || 0));\n    return { row, column, rowSpan, columnSpan };\n  }\n\n  /**\n   * Clamp a value to an integer >= 0.\n   */\n  export function clampValue(value: number): number {\n    return Math.max(0, Math.floor(value));\n  }\n\n  /**\n   * A sort comparison function for row spans.\n   */\n  export function rowSpanCmp(a: LayoutItem, b: LayoutItem): number {\n    let c1 = cellConfigProperty.get(a.widget);\n    let c2 = cellConfigProperty.get(b.widget);\n    return c1.rowSpan - c2.rowSpan;\n  }\n\n  /**\n   * A sort comparison function for column spans.\n   */\n  export function columnSpanCmp(a: LayoutItem, b: LayoutItem): number {\n    let c1 = cellConfigProperty.get(a.widget);\n    let c2 = cellConfigProperty.get(b.widget);\n    return c1.columnSpan - c2.columnSpan;\n  }\n\n  /**\n   * Reallocate the box sizers for the given grid dimensions.\n   */\n  export function reallocSizers(sizers: BoxSizer[], count: number): void {\n    // Coerce the count to the valid range.\n    count = Math.max(1, Math.floor(count));\n\n    // Add the missing sizers.\n    while (sizers.length < count) {\n      sizers.push(new BoxSizer());\n    }\n\n    // Remove the extra sizers.\n    if (sizers.length > count) {\n      sizers.length = count;\n    }\n  }\n\n  /**\n   * Distribute a min size constraint across a range of sizers.\n   */\n  export function distributeMin(\n    sizers: BoxSizer[],\n    i1: number,\n    i2: number,\n    minSize: number\n  ): void {\n    // Sanity check the indices.\n    if (i2 < i1) {\n      return;\n    }\n\n    // Handle the simple case of no cell span.\n    if (i1 === i2) {\n      let sizer = sizers[i1];\n      sizer.minSize = Math.max(sizer.minSize, minSize);\n      return;\n    }\n\n    // Compute the total current min size of the span.\n    let totalMin = 0;\n    for (let i = i1; i <= i2; ++i) {\n      totalMin += sizers[i].minSize;\n    }\n\n    // Do nothing if the total is greater than the required.\n    if (totalMin >= minSize) {\n      return;\n    }\n\n    // Compute the portion of the space to allocate to each sizer.\n    let portion = (minSize - totalMin) / (i2 - i1 + 1);\n\n    // Add the portion to each sizer.\n    for (let i = i1; i <= i2; ++i) {\n      sizers[i].minSize += portion;\n    }\n  }\n\n  /**\n   * The change handler for the child cell config property.\n   */\n  function onChildCellConfigChanged(child: Widget): void {\n    if (child.parent && child.parent.layout instanceof GridLayout) {\n      child.parent.fit();\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { ArrayExt } from '@lumino/algorithm';\n\nimport { ElementExt } from '@lumino/domutils';\n\nimport { getKeyboardLayout } from '@lumino/keyboard';\n\nimport { Message, MessageLoop } from '@lumino/messaging';\n\nimport { CommandRegistry } from '@lumino/commands';\n\nimport {\n  ElementARIAAttrs,\n  ElementDataset,\n  h,\n  VirtualDOM,\n  VirtualElement\n} from '@lumino/virtualdom';\n\nimport { Menu } from './menu';\n\nimport { Title } from './title';\n\nimport { Widget } from './widget';\n\n/**\n * A widget which displays menus as a canonical menu bar.\n */\nexport class MenuBar extends Widget {\n  /**\n   * Construct a new menu bar.\n   *\n   * @param options - The options for initializing the menu bar.\n   */\n  constructor(options: MenuBar.IOptions = {}) {\n    super({ node: Private.createNode() });\n    this.addClass('lm-MenuBar');\n    this.setFlag(Widget.Flag.DisallowLayout);\n    this.renderer = options.renderer || MenuBar.defaultRenderer;\n    this._forceItemsPosition = options.forceItemsPosition || {\n      forceX: true,\n      forceY: true\n    };\n    this._overflowMenuOptions = options.overflowMenuOptions || {\n      isVisible: true\n    };\n  }\n\n  /**\n   * Dispose of the resources held by the widget.\n   */\n  dispose(): void {\n    this._closeChildMenu();\n    this._menus.length = 0;\n    super.dispose();\n  }\n\n  /**\n   * The renderer used by the menu bar.\n   */\n  readonly renderer: MenuBar.IRenderer;\n\n  /**\n   * The child menu of the menu bar.\n   *\n   * #### Notes\n   * This will be `null` if the menu bar does not have an open menu.\n   */\n  get childMenu(): Menu | null {\n    return this._childMenu;\n  }\n\n  /**\n   * The overflow index of the menu bar.\n   */\n  get overflowIndex(): number {\n    return this._overflowIndex;\n  }\n\n  /**\n   * The overflow menu of the menu bar.\n   */\n  get overflowMenu(): Menu | null {\n    return this._overflowMenu;\n  }\n\n  /**\n   * Get the menu bar content node.\n   *\n   * #### Notes\n   * This is the node which holds the menu title nodes.\n   *\n   * Modifying this node directly can lead to undefined behavior.\n   */\n  get contentNode(): HTMLUListElement {\n    return this.node.getElementsByClassName(\n      'lm-MenuBar-content'\n    )[0] as HTMLUListElement;\n  }\n\n  /**\n   * Get the currently active menu.\n   */\n  get activeMenu(): Menu | null {\n    return this._menus[this._activeIndex] || null;\n  }\n\n  /**\n   * Set the currently active menu.\n   *\n   * #### Notes\n   * If the menu does not exist, the menu will be set to `null`.\n   */\n  set activeMenu(value: Menu | null) {\n    this.activeIndex = value ? this._menus.indexOf(value) : -1;\n  }\n\n  /**\n   * Get the index of the currently active menu.\n   *\n   * #### Notes\n   * This will be `-1` if no menu is active.\n   */\n  get activeIndex(): number {\n    return this._activeIndex;\n  }\n\n  /**\n   * Set the index of the currently active menu.\n   *\n   * #### Notes\n   * If the menu cannot be activated, the index will be set to `-1`.\n   */\n  set activeIndex(value: number) {\n    // Adjust the value for an out of range index.\n    if (value < 0 || value >= this._menus.length) {\n      value = -1;\n    }\n\n    // An empty menu cannot be active\n    if (value > -1 && this._menus[value].items.length === 0) {\n      value = -1;\n    }\n\n    // Bail early if the index will not change.\n    if (this._activeIndex === value) {\n      return;\n    }\n\n    // Update the active index.\n    this._activeIndex = value;\n\n    // Schedule an update of the items.\n    this.update();\n  }\n\n  /**\n   * A read-only array of the menus in the menu bar.\n   */\n  get menus(): ReadonlyArray<Menu> {\n    return this._menus;\n  }\n\n  /**\n   * Open the active menu and activate its first menu item.\n   *\n   * #### Notes\n   * If there is no active menu, this is a no-op.\n   */\n  openActiveMenu(): void {\n    // Bail early if there is no active item.\n    if (this._activeIndex === -1) {\n      return;\n    }\n\n    // Open the child menu.\n    this._openChildMenu();\n\n    // Activate the first item in the child menu.\n    if (this._childMenu) {\n      this._childMenu.activeIndex = -1;\n      this._childMenu.activateNextItem();\n    }\n  }\n\n  /**\n   * Add a menu to the end of the menu bar.\n   *\n   * @param menu - The menu to add to the menu bar.\n   *\n   * #### Notes\n   * If the menu is already added to the menu bar, it will be moved.\n   */\n  addMenu(menu: Menu, update: boolean = true): void {\n    this.insertMenu(this._menus.length, menu, update);\n  }\n\n  /**\n   * Insert a menu into the menu bar at the specified index.\n   *\n   * @param index - The index at which to insert the menu.\n   *\n   * @param menu - The menu to insert into the menu bar.\n   *\n   * #### Notes\n   * The index will be clamped to the bounds of the menus.\n   *\n   * If the menu is already added to the menu bar, it will be moved.\n   */\n  insertMenu(index: number, menu: Menu, update: boolean = true): void {\n    // Close the child menu before making changes.\n    this._closeChildMenu();\n\n    // Look up the index of the menu.\n    let i = this._menus.indexOf(menu);\n\n    // Clamp the insert index to the array bounds.\n    let j = Math.max(0, Math.min(index, this._menus.length));\n\n    // If the menu is not in the array, insert it.\n    if (i === -1) {\n      // Insert the menu into the array.\n      ArrayExt.insert(this._menus, j, menu);\n\n      // Add the styling class to the menu.\n      menu.addClass('lm-MenuBar-menu');\n\n      // Connect to the menu signals.\n      menu.aboutToClose.connect(this._onMenuAboutToClose, this);\n      menu.menuRequested.connect(this._onMenuMenuRequested, this);\n      menu.title.changed.connect(this._onTitleChanged, this);\n\n      // Schedule an update of the items.\n      if (update) {\n        this.update();\n      }\n\n      // There is nothing more to do.\n      return;\n    }\n\n    // Otherwise, the menu exists in the array and should be moved.\n\n    // Adjust the index if the location is at the end of the array.\n    if (j === this._menus.length) {\n      j--;\n    }\n\n    // Bail if there is no effective move.\n    if (i === j) {\n      return;\n    }\n\n    // Move the menu to the new locations.\n    ArrayExt.move(this._menus, i, j);\n\n    // Schedule an update of the items.\n    if (update) {\n      this.update();\n    }\n  }\n\n  /**\n   * Remove a menu from the menu bar.\n   *\n   * @param menu - The menu to remove from the menu bar.\n   *\n   * #### Notes\n   * This is a no-op if the menu is not in the menu bar.\n   */\n  removeMenu(menu: Menu, update: boolean = true): void {\n    this.removeMenuAt(this._menus.indexOf(menu), update);\n  }\n\n  /**\n   * Remove the menu at a given index from the menu bar.\n   *\n   * @param index - The index of the menu to remove.\n   *\n   * #### Notes\n   * This is a no-op if the index is out of range.\n   */\n  removeMenuAt(index: number, update: boolean = true): void {\n    // Close the child menu before making changes.\n    this._closeChildMenu();\n\n    // Remove the menu from the array.\n    let menu = ArrayExt.removeAt(this._menus, index);\n\n    // Bail if the index is out of range.\n    if (!menu) {\n      return;\n    }\n\n    // Disconnect from the menu signals.\n    menu.aboutToClose.disconnect(this._onMenuAboutToClose, this);\n    menu.menuRequested.disconnect(this._onMenuMenuRequested, this);\n    menu.title.changed.disconnect(this._onTitleChanged, this);\n\n    // Remove the styling class from the menu.\n    menu.removeClass('lm-MenuBar-menu');\n\n    // Schedule an update of the items.\n    if (update) {\n      this.update();\n    }\n  }\n\n  /**\n   * Remove all menus from the menu bar.\n   */\n  clearMenus(): void {\n    // Bail if there is nothing to remove.\n    if (this._menus.length === 0) {\n      return;\n    }\n\n    // Close the child menu before making changes.\n    this._closeChildMenu();\n\n    // Disconnect from the menu signals and remove the styling class.\n    for (let menu of this._menus) {\n      menu.aboutToClose.disconnect(this._onMenuAboutToClose, this);\n      menu.menuRequested.disconnect(this._onMenuMenuRequested, this);\n      menu.title.changed.disconnect(this._onTitleChanged, this);\n      menu.removeClass('lm-MenuBar-menu');\n    }\n\n    // Clear the menus array.\n    this._menus.length = 0;\n\n    // Schedule an update of the items.\n    this.update();\n  }\n\n  /**\n   * Handle the DOM events for the menu bar.\n   *\n   * @param event - The DOM event sent to the menu bar.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the menu bar's DOM nodes. It\n   * should not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'keydown':\n        this._evtKeyDown(event as KeyboardEvent);\n        break;\n      case 'mousedown':\n        this._evtMouseDown(event as MouseEvent);\n        break;\n      case 'mousemove':\n        this._evtMouseMove(event as MouseEvent);\n        break;\n      case 'focusout':\n        this._evtFocusOut(event as FocusEvent);\n        break;\n      case 'contextmenu':\n        event.preventDefault();\n        event.stopPropagation();\n        break;\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    this.node.addEventListener('keydown', this);\n    this.node.addEventListener('mousedown', this);\n    this.node.addEventListener('mousemove', this);\n    this.node.addEventListener('focusout', this);\n    this.node.addEventListener('contextmenu', this);\n  }\n\n  /**\n   * A message handler invoked on an `'after-detach'` message.\n   */\n  protected onAfterDetach(msg: Message): void {\n    this.node.removeEventListener('keydown', this);\n    this.node.removeEventListener('mousedown', this);\n    this.node.removeEventListener('mousemove', this);\n    this.node.removeEventListener('focusout', this);\n    this.node.removeEventListener('contextmenu', this);\n    this._closeChildMenu();\n  }\n\n  /**\n   * A message handler invoked on an `'activate-request'` message.\n   */\n  protected onActivateRequest(msg: Message): void {\n    if (this.isAttached) {\n      this._focusItemAt(0);\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'resize'` message.\n   */\n  protected onResize(msg: Widget.ResizeMessage): void {\n    this.update();\n    super.onResize(msg);\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    let menus = this._menus;\n    let renderer = this.renderer;\n    let activeIndex = this._activeIndex;\n    let tabFocusIndex =\n      this._tabFocusIndex >= 0 && this._tabFocusIndex < menus.length\n        ? this._tabFocusIndex\n        : 0;\n    let length = this._overflowIndex > -1 ? this._overflowIndex : menus.length;\n    let totalMenuSize = 0;\n    let isVisible = false;\n\n    // Check that the overflow menu doesn't count\n    length = this._overflowMenu !== null ? length - 1 : length;\n    let content = new Array<VirtualElement>(length);\n\n    // Render visible menus\n    for (let i = 0; i < length; ++i) {\n      content[i] = renderer.renderItem({\n        title: menus[i].title,\n        active: i === activeIndex,\n        tabbable: i === tabFocusIndex,\n        disabled: menus[i].items.length === 0,\n        onfocus: () => {\n          this._tabFocusIndex = i;\n          this.activeIndex = i;\n        }\n      });\n      // Calculate size of current menu\n      totalMenuSize += this._menuItemSizes[i];\n      // Check if overflow menu is already rendered\n      if (menus[i].title.label === this._overflowMenuOptions.title) {\n        isVisible = true;\n        length--;\n      }\n    }\n    // Render overflow menu if needed and active\n    if (this._overflowMenuOptions.isVisible) {\n      if (this._overflowIndex > -1 && !isVisible) {\n        // Create overflow menu\n        if (this._overflowMenu === null) {\n          const overflowMenuTitle = this._overflowMenuOptions.title ?? '...';\n          this._overflowMenu = new Menu({ commands: new CommandRegistry() });\n          this._overflowMenu.title.label = overflowMenuTitle;\n          this._overflowMenu.title.mnemonic = 0;\n          this.addMenu(this._overflowMenu, false);\n        }\n        // Move menus to overflow menu\n        for (let i = menus.length - 2; i >= length; i--) {\n          const submenu = this.menus[i];\n          submenu.title.mnemonic = 0;\n          this._overflowMenu.insertItem(0, {\n            type: 'submenu',\n            submenu: submenu\n          });\n          this.removeMenu(submenu, false);\n        }\n        content[length] = renderer.renderItem({\n          title: this._overflowMenu.title,\n          active: length === activeIndex && menus[length].items.length !== 0,\n          tabbable: length === tabFocusIndex,\n          disabled: menus[length].items.length === 0,\n          onfocus: () => {\n            this._tabFocusIndex = length;\n            this.activeIndex = length;\n          }\n        });\n        length++;\n      } else if (this._overflowMenu !== null) {\n        // Remove submenus from overflow menu\n        let overflowMenuItems = this._overflowMenu.items;\n        let screenSize = this.node.offsetWidth;\n        let n = this._overflowMenu.items.length;\n        for (let i = 0; i < n; ++i) {\n          let index = menus.length - 1 - i;\n          if (screenSize - totalMenuSize > this._menuItemSizes[index]) {\n            let menu = overflowMenuItems[0].submenu as Menu;\n            this._overflowMenu.removeItemAt(0);\n            this.insertMenu(length, menu, false);\n            content[length] = renderer.renderItem({\n              title: menu.title,\n              active: false,\n              tabbable: length === tabFocusIndex,\n              disabled: menus[length].items.length === 0,\n              onfocus: () => {\n                this._tabFocusIndex = length;\n                this.activeIndex = length;\n              }\n            });\n            length++;\n          }\n        }\n        if (this._overflowMenu.items.length === 0) {\n          this.removeMenu(this._overflowMenu, false);\n          content.pop();\n          this._overflowMenu = null;\n          this._overflowIndex = -1;\n        }\n      }\n    }\n    VirtualDOM.render(content, this.contentNode);\n    this._updateOverflowIndex();\n  }\n\n  /**\n   * Calculate and update the current overflow index.\n   */\n  private _updateOverflowIndex(): void {\n    if (!this._overflowMenuOptions.isVisible) {\n      return;\n    }\n\n    // Get elements visible in the main menu bar\n    const itemMenus = this.contentNode.childNodes;\n    let screenSize = this.node.offsetWidth;\n    let totalMenuSize = 0;\n    let index = -1;\n    let n = itemMenus.length;\n\n    if (this._menuItemSizes.length == 0) {\n      // Check if it is the first resize and get info about menu items sizes\n      for (let i = 0; i < n; i++) {\n        let item = itemMenus[i] as HTMLLIElement;\n        // Add sizes to array\n        totalMenuSize += item.offsetWidth;\n        this._menuItemSizes.push(item.offsetWidth);\n        if (totalMenuSize > screenSize && index === -1) {\n          index = i;\n        }\n      }\n    } else {\n      // Calculate current menu size\n      for (let i = 0; i < this._menuItemSizes.length; i++) {\n        totalMenuSize += this._menuItemSizes[i];\n        if (totalMenuSize > screenSize) {\n          index = i;\n          break;\n        }\n      }\n    }\n    this._overflowIndex = index;\n  }\n\n  /**\n   * Handle the `'keydown'` event for the menu bar.\n   *\n   * #### Notes\n   * All keys are trapped except the tab key that is ignored.\n   */\n  private _evtKeyDown(event: KeyboardEvent): void {\n    // Fetch the key code for the event.\n    let kc = event.keyCode;\n\n    // Reset the active index on tab, but do not trap the tab key.\n    if (kc === 9) {\n      this.activeIndex = -1;\n      return;\n    }\n\n    // A menu bar handles all other keydown events.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Enter, Space, Up Arrow, Down Arrow\n    if (kc === 13 || kc === 32 || kc === 38 || kc === 40) {\n      // The active index may have changed (for example, user hovers over an\n      // item with the mouse), so be sure to use the focus index.\n      this.activeIndex = this._tabFocusIndex;\n      if (this.activeIndex !== this._tabFocusIndex) {\n        // Bail if the setter refused to set activeIndex to tabFocusIndex\n        // because it means that the item at tabFocusIndex cannot be opened (for\n        // example, it has an empty menu)\n        return;\n      }\n      this.openActiveMenu();\n      return;\n    }\n\n    // Escape\n    if (kc === 27) {\n      this._closeChildMenu();\n      this._focusItemAt(this.activeIndex);\n      return;\n    }\n\n    // Left or Right Arrow\n    if (kc === 37 || kc === 39) {\n      let direction = kc === 37 ? -1 : 1;\n      let start = this._tabFocusIndex + direction;\n      let n = this._menus.length;\n      for (let i = 0; i < n; i++) {\n        let index = (n + start + direction * i) % n;\n        if (this._menus[index].items.length) {\n          this._focusItemAt(index);\n          return;\n        }\n      }\n      return;\n    }\n\n    // Get the pressed key character.\n    let key = getKeyboardLayout().keyForKeydownEvent(event);\n\n    // Bail if the key is not valid.\n    if (!key) {\n      return;\n    }\n\n    // Search for the next best matching mnemonic item.\n    let start = this._activeIndex + 1;\n    let result = Private.findMnemonic(this._menus, key, start);\n\n    // Handle the requested mnemonic based on the search results.\n    // If exactly one mnemonic is matched, that menu is opened.\n    // Otherwise, the next mnemonic is activated if available,\n    // followed by the auto mnemonic if available.\n    if (result.index !== -1 && !result.multiple) {\n      this.activeIndex = result.index;\n      this.openActiveMenu();\n    } else if (result.index !== -1) {\n      this.activeIndex = result.index;\n      this._focusItemAt(this.activeIndex);\n    } else if (result.auto !== -1) {\n      this.activeIndex = result.auto;\n      this._focusItemAt(this.activeIndex);\n    }\n  }\n\n  /**\n   * Handle the `'mousedown'` event for the menu bar.\n   */\n  private _evtMouseDown(event: MouseEvent): void {\n    // Bail if the mouse press was not on the menu bar. This can occur\n    // when the document listener is installed for an active menu bar.\n    if (!ElementExt.hitTest(this.node, event.clientX, event.clientY)) {\n      return;\n    }\n\n    // Stop the propagation of the event. Immediate propagation is\n    // also stopped so that an open menu does not handle the event.\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    // Check if the mouse is over one of the menu items.\n    let index = ArrayExt.findFirstIndex(this.contentNode.children, node => {\n      return ElementExt.hitTest(node, event.clientX, event.clientY);\n    });\n\n    // If the press was not on an item, close the child menu.\n    if (index === -1) {\n      this._closeChildMenu();\n      return;\n    }\n\n    // If the press was not the left mouse button, do nothing further.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Otherwise, toggle the open state of the child menu.\n    if (this._childMenu) {\n      this._closeChildMenu();\n      this.activeIndex = index;\n    } else {\n      // If we don't call preventDefault() here, then the item in the menu\n      // bar will take focus over the menu that is being opened.\n      event.preventDefault();\n      const position = this._positionForMenu(index);\n      Menu.saveWindowData();\n      // Begin DOM modifications.\n      this.activeIndex = index;\n      this._openChildMenu(position);\n    }\n  }\n\n  /**\n   * Handle the `'mousemove'` event for the menu bar.\n   */\n  private _evtMouseMove(event: MouseEvent): void {\n    // Check if the mouse is over one of the menu items.\n    let index = ArrayExt.findFirstIndex(this.contentNode.children, node => {\n      return ElementExt.hitTest(node, event.clientX, event.clientY);\n    });\n\n    // Bail early if the active index will not change.\n    if (index === this._activeIndex) {\n      return;\n    }\n\n    // Bail early if a child menu is open and the mouse is not over\n    // an item. This allows the child menu to be kept open when the\n    // mouse is over the empty part of the menu bar.\n    if (index === -1 && this._childMenu) {\n      return;\n    }\n\n    // Get position for the new menu >before< updating active index.\n    const position =\n      index >= 0 && this._childMenu ? this._positionForMenu(index) : null;\n\n    // Before any modification, update window data.\n    Menu.saveWindowData();\n\n    // Begin DOM modifications.\n\n    // Update the active index to the hovered item.\n    this.activeIndex = index;\n\n    // Open the new menu if a menu is already open.\n    if (position) {\n      this._openChildMenu(position);\n    }\n  }\n\n  /**\n   * Find initial position for the menu based on menubar item position.\n   *\n   * NOTE: this should be called before updating active index to avoid\n   * an additional layout and style invalidation as changing active\n   * index modifies DOM.\n   */\n  private _positionForMenu(index: number): Private.IPosition {\n    let itemNode = this.contentNode.children[index];\n    let { left, bottom } = (itemNode as HTMLElement).getBoundingClientRect();\n    return {\n      top: bottom,\n      left\n    };\n  }\n\n  /**\n   * Handle the `'focusout'` event for the menu bar.\n   */\n  private _evtFocusOut(event: FocusEvent): void {\n    // Reset the active index if there is no open menu and the menubar is losing focus.\n    if (!this._childMenu && !this.node.contains(event.relatedTarget as Node)) {\n      this.activeIndex = -1;\n    }\n  }\n\n  /**\n   * Focus an item in the menu bar.\n   *\n   * #### Notes\n   * Does not open the associated menu.\n   */\n  private _focusItemAt(index: number): void {\n    const itemNode = this.contentNode.childNodes[index] as HTMLElement | void;\n    if (itemNode) {\n      itemNode.focus();\n    }\n  }\n\n  /**\n   * Open the child menu at the active index immediately.\n   *\n   * If a different child menu is already open, it will be closed,\n   * even if there is no active menu.\n   */\n  private _openChildMenu(options: { left?: number; top?: number } = {}): void {\n    // If there is no active menu, close the current menu.\n    let newMenu = this.activeMenu;\n    if (!newMenu) {\n      this._closeChildMenu();\n      return;\n    }\n\n    // Bail if there is no effective menu change.\n    let oldMenu = this._childMenu;\n    if (oldMenu === newMenu) {\n      return;\n    }\n\n    // Swap the internal menu reference.\n    this._childMenu = newMenu;\n\n    // Close the current menu, or setup for the new menu.\n    if (oldMenu) {\n      oldMenu.close();\n    } else {\n      document.addEventListener('mousedown', this, true);\n    }\n\n    // Update the tab focus index and ensure the menu bar is updated.\n    this._tabFocusIndex = this.activeIndex;\n    MessageLoop.sendMessage(this, Widget.Msg.UpdateRequest);\n\n    // Get the positioning data for the new menu.\n    let { left, top } = options;\n    if (typeof left === 'undefined' || typeof top === 'undefined') {\n      ({ left, top } = this._positionForMenu(this._activeIndex));\n    }\n    // Begin DOM modifications\n\n    if (!oldMenu) {\n      // Continue setup for new menu\n      this.addClass('lm-mod-active');\n    }\n\n    // Open the new menu at the computed location.\n    if (newMenu.items.length > 0) {\n      newMenu.open(left, top, this._forceItemsPosition);\n    }\n  }\n\n  /**\n   * Close the child menu immediately.\n   *\n   * This is a no-op if a child menu is not open.\n   */\n  private _closeChildMenu(): void {\n    // Bail if no child menu is open.\n    if (!this._childMenu) {\n      return;\n    }\n    // Remove the active class from the menu bar.\n    this.removeClass('lm-mod-active');\n\n    // Remove the document listeners.\n    document.removeEventListener('mousedown', this, true);\n\n    // Clear the internal menu reference.\n    let menu = this._childMenu;\n    this._childMenu = null;\n\n    // Close the menu.\n    menu.close();\n\n    // Reset the active index.\n    this.activeIndex = -1;\n  }\n\n  /**\n   * Handle the `aboutToClose` signal of a menu.\n   */\n  private _onMenuAboutToClose(sender: Menu): void {\n    // Bail if the sender is not the child menu.\n    if (sender !== this._childMenu) {\n      return;\n    }\n\n    // Remove the active class from the menu bar.\n    this.removeClass('lm-mod-active');\n\n    // Remove the document listeners.\n    document.removeEventListener('mousedown', this, true);\n\n    // Clear the internal menu reference.\n    this._childMenu = null;\n\n    // Reset the active index.\n    this.activeIndex = -1;\n  }\n\n  /**\n   * Handle the `menuRequested` signal of a child menu.\n   */\n  private _onMenuMenuRequested(sender: Menu, args: 'next' | 'previous'): void {\n    // Bail if the sender is not the child menu.\n    if (sender !== this._childMenu) {\n      return;\n    }\n\n    // Look up the active index and menu count.\n    let i = this._activeIndex;\n    let n = this._menus.length;\n\n    // Active the next requested index.\n    switch (args) {\n      case 'next':\n        this.activeIndex = i === n - 1 ? 0 : i + 1;\n        break;\n      case 'previous':\n        this.activeIndex = i === 0 ? n - 1 : i - 1;\n        break;\n    }\n\n    // Open the active menu.\n    this.openActiveMenu();\n  }\n\n  /**\n   * Handle the `changed` signal of a title object.\n   */\n  private _onTitleChanged(): void {\n    this.update();\n  }\n\n  // Track the index of the item that is currently focused or hovered. -1 means nothing focused or hovered.\n  private _activeIndex = -1;\n  // Track which item can be focused using the TAB key. Unlike _activeIndex will\n  // always point to a menuitem. Whenever you update this value, it's important\n  // to follow it with an \"update-request\" message so that the `tabindex`\n  // attribute on each menubar item gets properly updated.\n  private _tabFocusIndex = 0;\n  private _forceItemsPosition: Menu.IOpenOptions;\n  private _overflowMenuOptions: IOverflowMenuOptions;\n  private _menus: Menu[] = [];\n  private _childMenu: Menu | null = null;\n  private _overflowMenu: Menu | null = null;\n  private _menuItemSizes: number[] = [];\n  private _overflowIndex: number = -1;\n}\n\n/**\n * The namespace for the `MenuBar` class statics.\n */\nexport namespace MenuBar {\n  /**\n   * An options object for creating a menu bar.\n   */\n  export interface IOptions {\n    /**\n     * A custom renderer for creating menu bar content.\n     *\n     * The default is a shared renderer instance.\n     */\n    renderer?: IRenderer;\n    /**\n     * Whether to force the position of the menu. The MenuBar forces the\n     * coordinates of its menus by default. With this option you can disable it.\n     *\n     * Setting to `false` will enable the logic which repositions the\n     * coordinates of the menu if it will not fit entirely on screen.\n     *\n     * The default is `true`.\n     */\n    forceItemsPosition?: Menu.IOpenOptions;\n    /**\n     * Whether to add a overflow menu if there's overflow.\n     *\n     * Setting to `true` will enable the logic that creates an overflow menu\n     * to show the menu items that don't fit entirely on the screen.\n     *\n     * The default is `true`.\n     */\n    overflowMenuOptions?: IOverflowMenuOptions;\n  }\n\n  /**\n   * An object which holds the data to render a menu bar item.\n   */\n  export interface IRenderData {\n    /**\n     * The title to be rendered.\n     */\n    readonly title: Title<Widget>;\n\n    /**\n     * Whether the item is the active item.\n     */\n    readonly active: boolean;\n\n    /**\n     * Whether the user can tab to the item.\n     */\n    readonly tabbable: boolean;\n\n    /**\n     * Whether the item is disabled.\n     *\n     * #### Notes\n     * A disabled item cannot be active.\n     * A disabled item cannot be focussed.\n     */\n    readonly disabled?: boolean;\n\n    readonly onfocus?: (event: FocusEvent) => void;\n  }\n\n  /**\n   * A renderer for use with a menu bar.\n   */\n  export interface IRenderer {\n    /**\n     * Render the virtual element for a menu bar item.\n     *\n     * @param data - The data to use for rendering the item.\n     *\n     * @returns A virtual element representing the item.\n     */\n    renderItem(data: IRenderData): VirtualElement;\n  }\n\n  /**\n   * The default implementation of `IRenderer`.\n   *\n   * #### Notes\n   * Subclasses are free to reimplement rendering methods as needed.\n   */\n  export class Renderer implements IRenderer {\n    /**\n     * Render the virtual element for a menu bar item.\n     *\n     * @param data - The data to use for rendering the item.\n     *\n     * @returns A virtual element representing the item.\n     */\n    renderItem(data: IRenderData): VirtualElement {\n      let className = this.createItemClass(data);\n      let dataset = this.createItemDataset(data);\n      let aria = this.createItemARIA(data);\n      return h.li(\n        {\n          className,\n          dataset,\n          ...(data.disabled ? {} : { tabindex: data.tabbable ? '0' : '-1' }),\n          onfocus: data.onfocus,\n          ...aria\n        },\n        this.renderIcon(data),\n        this.renderLabel(data)\n      );\n    }\n\n    /**\n     * Render the icon element for a menu bar item.\n     *\n     * @param data - The data to use for rendering the icon.\n     *\n     * @returns A virtual element representing the item icon.\n     */\n    renderIcon(data: IRenderData): VirtualElement {\n      let className = this.createIconClass(data);\n\n      // If data.title.icon is undefined, it will be ignored.\n      return h.div({ className }, data.title.icon!, data.title.iconLabel);\n    }\n\n    /**\n     * Render the label element for a menu item.\n     *\n     * @param data - The data to use for rendering the label.\n     *\n     * @returns A virtual element representing the item label.\n     */\n    renderLabel(data: IRenderData): VirtualElement {\n      let content = this.formatLabel(data);\n      return h.div({ className: 'lm-MenuBar-itemLabel' }, content);\n    }\n\n    /**\n     * Create the class name for the menu bar item.\n     *\n     * @param data - The data to use for the class name.\n     *\n     * @returns The full class name for the menu item.\n     */\n    createItemClass(data: IRenderData): string {\n      let name = 'lm-MenuBar-item';\n      if (data.title.className) {\n        name += ` ${data.title.className}`;\n      }\n      if (data.active && !data.disabled) {\n        name += ' lm-mod-active';\n      }\n      return name;\n    }\n\n    /**\n     * Create the dataset for a menu bar item.\n     *\n     * @param data - The data to use for the item.\n     *\n     * @returns The dataset for the menu bar item.\n     */\n    createItemDataset(data: IRenderData): ElementDataset {\n      return data.title.dataset;\n    }\n\n    /**\n     * Create the aria attributes for menu bar item.\n     *\n     * @param data - The data to use for the aria attributes.\n     *\n     * @returns The aria attributes object for the item.\n     */\n    createItemARIA(data: IRenderData): ElementARIAAttrs {\n      return {\n        role: 'menuitem',\n        'aria-haspopup': 'true',\n        'aria-disabled': data.disabled ? 'true' : 'false'\n      };\n    }\n\n    /**\n     * Create the class name for the menu bar item icon.\n     *\n     * @param data - The data to use for the class name.\n     *\n     * @returns The full class name for the item icon.\n     */\n    createIconClass(data: IRenderData): string {\n      let name = 'lm-MenuBar-itemIcon';\n      let extra = data.title.iconClass;\n      return extra ? `${name} ${extra}` : name;\n    }\n\n    /**\n     * Create the render content for the label node.\n     *\n     * @param data - The data to use for the label content.\n     *\n     * @returns The content to add to the label node.\n     */\n    formatLabel(data: IRenderData): h.Child {\n      // Fetch the label text and mnemonic index.\n      let { label, mnemonic } = data.title;\n\n      // If the index is out of range, do not modify the label.\n      if (mnemonic < 0 || mnemonic >= label.length) {\n        return label;\n      }\n\n      // Split the label into parts.\n      let prefix = label.slice(0, mnemonic);\n      let suffix = label.slice(mnemonic + 1);\n      let char = label[mnemonic];\n\n      // Wrap the mnemonic character in a span.\n      let span = h.span({ className: 'lm-MenuBar-itemMnemonic' }, char);\n\n      // Return the content parts.\n      return [prefix, span, suffix];\n    }\n  }\n\n  /**\n   * The default `Renderer` instance.\n   */\n  export const defaultRenderer = new Renderer();\n}\n\n/**\n * Options for overflow menu.\n */\nexport interface IOverflowMenuOptions {\n  /**\n   * Determines if a overflow menu appears when the menu items overflow.\n   *\n   * Defaults to `true`.\n   */\n  isVisible: boolean;\n  /**\n   * Determines the title of the overflow menu.\n   *\n   * Default: `...`.\n   */\n  title?: string;\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Create the DOM node for a menu bar.\n   */\n  export function createNode(): HTMLDivElement {\n    let node = document.createElement('div');\n    let content = document.createElement('ul');\n    content.className = 'lm-MenuBar-content';\n    node.appendChild(content);\n    content.setAttribute('role', 'menubar');\n    return node;\n  }\n\n  /**\n   * Position for the menu relative to top-left screen corner.\n   */\n  export interface IPosition {\n    /**\n     * Pixels right from screen origin.\n     */\n    left: number;\n    /**\n     * Pixels down from screen origin.\n     */\n    top: number;\n  }\n\n  /**\n   * The results of a mnemonic search.\n   */\n  export interface IMnemonicResult {\n    /**\n     * The index of the first matching mnemonic item, or `-1`.\n     */\n    index: number;\n\n    /**\n     * Whether multiple mnemonic items matched.\n     */\n    multiple: boolean;\n\n    /**\n     * The index of the first auto matched non-mnemonic item.\n     */\n    auto: number;\n  }\n\n  /**\n   * Find the best matching mnemonic item.\n   *\n   * The search starts at the given index and wraps around.\n   */\n  export function findMnemonic(\n    menus: ReadonlyArray<Menu>,\n    key: string,\n    start: number\n  ): IMnemonicResult {\n    // Setup the result variables.\n    let index = -1;\n    let auto = -1;\n    let multiple = false;\n\n    // Normalize the key to upper case.\n    let upperKey = key.toUpperCase();\n\n    // Search the items from the given start index.\n    for (let i = 0, n = menus.length; i < n; ++i) {\n      // Compute the wrapped index.\n      let k = (i + start) % n;\n\n      // Look up the menu title.\n      let title = menus[k].title;\n\n      // Ignore titles with an empty label.\n      if (title.label.length === 0) {\n        continue;\n      }\n\n      // Look up the mnemonic index for the label.\n      let mn = title.mnemonic;\n\n      // Handle a valid mnemonic index.\n      if (mn >= 0 && mn < title.label.length) {\n        if (title.label[mn].toUpperCase() === upperKey) {\n          if (index === -1) {\n            index = k;\n          } else {\n            multiple = true;\n          }\n        }\n        continue;\n      }\n\n      // Finally, handle the auto index if possible.\n      if (auto === -1 && title.label[0].toUpperCase() === upperKey) {\n        auto = k;\n      }\n    }\n\n    // Return the search results.\n    return { index, multiple, auto };\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { IDisposable } from '@lumino/disposable';\n\nimport { ElementExt } from '@lumino/domutils';\n\nimport { Drag } from '@lumino/dragdrop';\n\nimport { Message } from '@lumino/messaging';\n\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { Widget } from './widget';\n\n/**\n * A widget which implements a canonical scroll bar.\n */\nexport class ScrollBar extends Widget {\n  /**\n   * Construct a new scroll bar.\n   *\n   * @param options - The options for initializing the scroll bar.\n   */\n  constructor(options: ScrollBar.IOptions = {}) {\n    super({ node: Private.createNode() });\n    this.addClass('lm-ScrollBar');\n    this.setFlag(Widget.Flag.DisallowLayout);\n\n    // Set the orientation.\n    this._orientation = options.orientation || 'vertical';\n    this.dataset['orientation'] = this._orientation;\n\n    // Parse the rest of the options.\n    if (options.maximum !== undefined) {\n      this._maximum = Math.max(0, options.maximum);\n    }\n    if (options.page !== undefined) {\n      this._page = Math.max(0, options.page);\n    }\n    if (options.value !== undefined) {\n      this._value = Math.max(0, Math.min(options.value, this._maximum));\n    }\n  }\n\n  /**\n   * A signal emitted when the user moves the scroll thumb.\n   *\n   * #### Notes\n   * The payload is the current value of the scroll bar.\n   */\n  get thumbMoved(): ISignal<this, number> {\n    return this._thumbMoved;\n  }\n\n  /**\n   * A signal emitted when the user clicks a step button.\n   *\n   * #### Notes\n   * The payload is whether a decrease or increase is requested.\n   */\n  get stepRequested(): ISignal<this, 'decrement' | 'increment'> {\n    return this._stepRequested;\n  }\n\n  /**\n   * A signal emitted when the user clicks the scroll track.\n   *\n   * #### Notes\n   * The payload is whether a decrease or increase is requested.\n   */\n  get pageRequested(): ISignal<this, 'decrement' | 'increment'> {\n    return this._pageRequested;\n  }\n\n  /**\n   * Get the orientation of the scroll bar.\n   */\n  get orientation(): ScrollBar.Orientation {\n    return this._orientation;\n  }\n\n  /**\n   * Set the orientation of the scroll bar.\n   */\n  set orientation(value: ScrollBar.Orientation) {\n    // Do nothing if the orientation does not change.\n    if (this._orientation === value) {\n      return;\n    }\n\n    // Release the mouse before making changes.\n    this._releaseMouse();\n\n    // Update the internal orientation.\n    this._orientation = value;\n    this.dataset['orientation'] = value;\n\n    // Schedule an update the scroll bar.\n    this.update();\n  }\n\n  /**\n   * Get the current value of the scroll bar.\n   */\n  get value(): number {\n    return this._value;\n  }\n\n  /**\n   * Set the current value of the scroll bar.\n   *\n   * #### Notes\n   * The value will be clamped to the range `[0, maximum]`.\n   */\n  set value(value: number) {\n    // Clamp the value to the allowable range.\n    value = Math.max(0, Math.min(value, this._maximum));\n\n    // Do nothing if the value does not change.\n    if (this._value === value) {\n      return;\n    }\n\n    // Update the internal value.\n    this._value = value;\n\n    // Schedule an update the scroll bar.\n    this.update();\n  }\n\n  /**\n   * Get the page size of the scroll bar.\n   *\n   * #### Notes\n   * The page size is the amount of visible content in the scrolled\n   * region, expressed in data units. It determines the size of the\n   * scroll bar thumb.\n   */\n  get page(): number {\n    return this._page;\n  }\n\n  /**\n   * Set the page size of the scroll bar.\n   *\n   * #### Notes\n   * The page size will be clamped to the range `[0, Infinity]`.\n   */\n  set page(value: number) {\n    // Clamp the page size to the allowable range.\n    value = Math.max(0, value);\n\n    // Do nothing if the value does not change.\n    if (this._page === value) {\n      return;\n    }\n\n    // Update the internal page size.\n    this._page = value;\n\n    // Schedule an update the scroll bar.\n    this.update();\n  }\n\n  /**\n   * Get the maximum value of the scroll bar.\n   */\n  get maximum(): number {\n    return this._maximum;\n  }\n\n  /**\n   * Set the maximum value of the scroll bar.\n   *\n   * #### Notes\n   * The max size will be clamped to the range `[0, Infinity]`.\n   */\n  set maximum(value: number) {\n    // Clamp the value to the allowable range.\n    value = Math.max(0, value);\n\n    // Do nothing if the value does not change.\n    if (this._maximum === value) {\n      return;\n    }\n\n    // Update the internal values.\n    this._maximum = value;\n\n    // Clamp the current value to the new range.\n    this._value = Math.min(this._value, value);\n\n    // Schedule an update the scroll bar.\n    this.update();\n  }\n\n  /**\n   * The scroll bar decrement button node.\n   *\n   * #### Notes\n   * Modifying this node directly can lead to undefined behavior.\n   */\n  get decrementNode(): HTMLDivElement {\n    return this.node.getElementsByClassName(\n      'lm-ScrollBar-button'\n    )[0] as HTMLDivElement;\n  }\n\n  /**\n   * The scroll bar increment button node.\n   *\n   * #### Notes\n   * Modifying this node directly can lead to undefined behavior.\n   */\n  get incrementNode(): HTMLDivElement {\n    return this.node.getElementsByClassName(\n      'lm-ScrollBar-button'\n    )[1] as HTMLDivElement;\n  }\n\n  /**\n   * The scroll bar track node.\n   *\n   * #### Notes\n   * Modifying this node directly can lead to undefined behavior.\n   */\n  get trackNode(): HTMLDivElement {\n    return this.node.getElementsByClassName(\n      'lm-ScrollBar-track'\n    )[0] as HTMLDivElement;\n  }\n\n  /**\n   * The scroll bar thumb node.\n   *\n   * #### Notes\n   * Modifying this node directly can lead to undefined behavior.\n   */\n  get thumbNode(): HTMLDivElement {\n    return this.node.getElementsByClassName(\n      'lm-ScrollBar-thumb'\n    )[0] as HTMLDivElement;\n  }\n\n  /**\n   * Handle the DOM events for the scroll bar.\n   *\n   * @param event - The DOM event sent to the scroll bar.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the scroll bar's DOM node.\n   *\n   * This should not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'mousedown':\n        this._evtMouseDown(event as MouseEvent);\n        break;\n      case 'mousemove':\n        this._evtMouseMove(event as MouseEvent);\n        break;\n      case 'mouseup':\n        this._evtMouseUp(event as MouseEvent);\n        break;\n      case 'keydown':\n        this._evtKeyDown(event as KeyboardEvent);\n        break;\n      case 'contextmenu':\n        event.preventDefault();\n        event.stopPropagation();\n        break;\n    }\n  }\n\n  /**\n   * A method invoked on a 'before-attach' message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    this.node.addEventListener('mousedown', this);\n    this.update();\n  }\n\n  /**\n   * A method invoked on an 'after-detach' message.\n   */\n  protected onAfterDetach(msg: Message): void {\n    this.node.removeEventListener('mousedown', this);\n    this._releaseMouse();\n  }\n\n  /**\n   * A method invoked on an 'update-request' message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    // Convert the value and page into percentages.\n    let value = (this._value * 100) / this._maximum;\n    let page = (this._page * 100) / (this._page + this._maximum);\n\n    // Clamp the value and page to the relevant range.\n    value = Math.max(0, Math.min(value, 100));\n    page = Math.max(0, Math.min(page, 100));\n\n    // Fetch the thumb style.\n    let thumbStyle = this.thumbNode.style;\n\n    // Update the thumb style for the current orientation.\n    if (this._orientation === 'horizontal') {\n      thumbStyle.top = '';\n      thumbStyle.height = '';\n      thumbStyle.left = `${value}%`;\n      thumbStyle.width = `${page}%`;\n      thumbStyle.transform = `translate(${-value}%, 0%)`;\n    } else {\n      thumbStyle.left = '';\n      thumbStyle.width = '';\n      thumbStyle.top = `${value}%`;\n      thumbStyle.height = `${page}%`;\n      thumbStyle.transform = `translate(0%, ${-value}%)`;\n    }\n  }\n\n  /**\n   * Handle the `'keydown'` event for the scroll bar.\n   */\n  private _evtKeyDown(event: KeyboardEvent): void {\n    // Stop all input events during drag.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Ignore anything except the `Escape` key.\n    if (event.keyCode !== 27) {\n      return;\n    }\n\n    // Fetch the previous scroll value.\n    let value = this._pressData ? this._pressData.value : -1;\n\n    // Release the mouse.\n    this._releaseMouse();\n\n    // Restore the old scroll value if possible.\n    if (value !== -1) {\n      this._moveThumb(value);\n    }\n  }\n\n  /**\n   * Handle the `'mousedown'` event for the scroll bar.\n   */\n  private _evtMouseDown(event: MouseEvent): void {\n    // Do nothing if it's not a left mouse press.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Send an activate request to the scroll bar. This can be\n    // used by message hooks to activate something relevant.\n    this.activate();\n\n    // Do nothing if the mouse is already captured.\n    if (this._pressData) {\n      return;\n    }\n\n    // Find the pressed scroll bar part.\n    let part = Private.findPart(this, event.target as HTMLElement);\n\n    // Do nothing if the part is not of interest.\n    if (!part) {\n      return;\n    }\n\n    // Stop the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Override the mouse cursor.\n    let override = Drag.overrideCursor('default');\n\n    // Set up the press data.\n    this._pressData = {\n      part,\n      override,\n      delta: -1,\n      value: -1,\n      mouseX: event.clientX,\n      mouseY: event.clientY\n    };\n\n    // Add the extra event listeners.\n    document.addEventListener('mousemove', this, true);\n    document.addEventListener('mouseup', this, true);\n    document.addEventListener('keydown', this, true);\n    document.addEventListener('contextmenu', this, true);\n\n    // Handle a thumb press.\n    if (part === 'thumb') {\n      // Fetch the thumb node.\n      let thumbNode = this.thumbNode;\n\n      // Fetch the client rect for the thumb.\n      let thumbRect = thumbNode.getBoundingClientRect();\n\n      // Update the press data delta for the current orientation.\n      if (this._orientation === 'horizontal') {\n        this._pressData.delta = event.clientX - thumbRect.left;\n      } else {\n        this._pressData.delta = event.clientY - thumbRect.top;\n      }\n\n      // Add the active class to the thumb node.\n      thumbNode.classList.add('lm-mod-active');\n\n      // Store the current value in the press data.\n      this._pressData.value = this._value;\n\n      // Finished.\n      return;\n    }\n\n    // Handle a track press.\n    if (part === 'track') {\n      // Fetch the client rect for the thumb.\n      let thumbRect = this.thumbNode.getBoundingClientRect();\n\n      // Determine the direction for the page request.\n      let dir: 'decrement' | 'increment';\n      if (this._orientation === 'horizontal') {\n        dir = event.clientX < thumbRect.left ? 'decrement' : 'increment';\n      } else {\n        dir = event.clientY < thumbRect.top ? 'decrement' : 'increment';\n      }\n\n      // Start the repeat timer.\n      this._repeatTimer = window.setTimeout(this._onRepeat, 350);\n\n      // Emit the page requested signal.\n      this._pageRequested.emit(dir);\n\n      // Finished.\n      return;\n    }\n\n    // Handle a decrement button press.\n    if (part === 'decrement') {\n      // Add the active class to the decrement node.\n      this.decrementNode.classList.add('lm-mod-active');\n\n      // Start the repeat timer.\n      this._repeatTimer = window.setTimeout(this._onRepeat, 350);\n\n      // Emit the step requested signal.\n      this._stepRequested.emit('decrement');\n\n      // Finished.\n      return;\n    }\n\n    // Handle an increment button press.\n    if (part === 'increment') {\n      // Add the active class to the increment node.\n      this.incrementNode.classList.add('lm-mod-active');\n\n      // Start the repeat timer.\n      this._repeatTimer = window.setTimeout(this._onRepeat, 350);\n\n      // Emit the step requested signal.\n      this._stepRequested.emit('increment');\n\n      // Finished.\n      return;\n    }\n  }\n\n  /**\n   * Handle the `'mousemove'` event for the scroll bar.\n   */\n  private _evtMouseMove(event: MouseEvent): void {\n    // Do nothing if no drag is in progress.\n    if (!this._pressData) {\n      return;\n    }\n\n    // Stop the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Update the mouse position.\n    this._pressData.mouseX = event.clientX;\n    this._pressData.mouseY = event.clientY;\n\n    // Bail if the thumb is not being dragged.\n    if (this._pressData.part !== 'thumb') {\n      return;\n    }\n\n    // Get the client rect for the thumb and track.\n    let thumbRect = this.thumbNode.getBoundingClientRect();\n    let trackRect = this.trackNode.getBoundingClientRect();\n\n    // Fetch the scroll geometry based on the orientation.\n    let trackPos: number;\n    let trackSpan: number;\n    if (this._orientation === 'horizontal') {\n      trackPos = event.clientX - trackRect.left - this._pressData.delta;\n      trackSpan = trackRect.width - thumbRect.width;\n    } else {\n      trackPos = event.clientY - trackRect.top - this._pressData.delta;\n      trackSpan = trackRect.height - thumbRect.height;\n    }\n\n    // Compute the desired value from the scroll geometry.\n    let value = trackSpan === 0 ? 0 : (trackPos * this._maximum) / trackSpan;\n\n    // Move the thumb to the computed value.\n    this._moveThumb(value);\n  }\n\n  /**\n   * Handle the `'mouseup'` event for the scroll bar.\n   */\n  private _evtMouseUp(event: MouseEvent): void {\n    // Do nothing if it's not a left mouse release.\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Stop the event propagation.\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Release the mouse.\n    this._releaseMouse();\n  }\n\n  /**\n   * Release the mouse and restore the node states.\n   */\n  private _releaseMouse(): void {\n    // Bail if there is no press data.\n    if (!this._pressData) {\n      return;\n    }\n\n    // Clear the repeat timer.\n    clearTimeout(this._repeatTimer);\n    this._repeatTimer = -1;\n\n    // Clear the press data.\n    this._pressData.override.dispose();\n    this._pressData = null;\n\n    // Remove the extra event listeners.\n    document.removeEventListener('mousemove', this, true);\n    document.removeEventListener('mouseup', this, true);\n    document.removeEventListener('keydown', this, true);\n    document.removeEventListener('contextmenu', this, true);\n\n    // Remove the active classes from the nodes.\n    this.thumbNode.classList.remove('lm-mod-active');\n    this.decrementNode.classList.remove('lm-mod-active');\n    this.incrementNode.classList.remove('lm-mod-active');\n  }\n\n  /**\n   * Move the thumb to the specified position.\n   */\n  private _moveThumb(value: number): void {\n    // Clamp the value to the allowed range.\n    value = Math.max(0, Math.min(value, this._maximum));\n\n    // Bail if the value does not change.\n    if (this._value === value) {\n      return;\n    }\n\n    // Update the internal value.\n    this._value = value;\n\n    // Schedule an update of the scroll bar.\n    this.update();\n\n    // Emit the thumb moved signal.\n    this._thumbMoved.emit(value);\n  }\n\n  /**\n   * A timeout callback for repeating the mouse press.\n   */\n  private _onRepeat = () => {\n    // Clear the repeat timer id.\n    this._repeatTimer = -1;\n\n    // Bail if the mouse has been released.\n    if (!this._pressData) {\n      return;\n    }\n\n    // Look up the part that was pressed.\n    let part = this._pressData.part;\n\n    // Bail if the thumb was pressed.\n    if (part === 'thumb') {\n      return;\n    }\n\n    // Schedule the timer for another repeat.\n    this._repeatTimer = window.setTimeout(this._onRepeat, 20);\n\n    // Get the current mouse position.\n    let mouseX = this._pressData.mouseX;\n    let mouseY = this._pressData.mouseY;\n\n    // Handle a decrement button repeat.\n    if (part === 'decrement') {\n      // Bail if the mouse is not over the button.\n      if (!ElementExt.hitTest(this.decrementNode, mouseX, mouseY)) {\n        return;\n      }\n\n      // Emit the step requested signal.\n      this._stepRequested.emit('decrement');\n\n      // Finished.\n      return;\n    }\n\n    // Handle an increment button repeat.\n    if (part === 'increment') {\n      // Bail if the mouse is not over the button.\n      if (!ElementExt.hitTest(this.incrementNode, mouseX, mouseY)) {\n        return;\n      }\n\n      // Emit the step requested signal.\n      this._stepRequested.emit('increment');\n\n      // Finished.\n      return;\n    }\n\n    // Handle a track repeat.\n    if (part === 'track') {\n      // Bail if the mouse is not over the track.\n      if (!ElementExt.hitTest(this.trackNode, mouseX, mouseY)) {\n        return;\n      }\n\n      // Fetch the thumb node.\n      let thumbNode = this.thumbNode;\n\n      // Bail if the mouse is over the thumb.\n      if (ElementExt.hitTest(thumbNode, mouseX, mouseY)) {\n        return;\n      }\n\n      // Fetch the client rect for the thumb.\n      let thumbRect = thumbNode.getBoundingClientRect();\n\n      // Determine the direction for the page request.\n      let dir: 'decrement' | 'increment';\n      if (this._orientation === 'horizontal') {\n        dir = mouseX < thumbRect.left ? 'decrement' : 'increment';\n      } else {\n        dir = mouseY < thumbRect.top ? 'decrement' : 'increment';\n      }\n\n      // Emit the page requested signal.\n      this._pageRequested.emit(dir);\n\n      // Finished.\n      return;\n    }\n  };\n\n  private _value = 0;\n  private _page = 10;\n  private _maximum = 100;\n  private _repeatTimer = -1;\n  private _orientation: ScrollBar.Orientation;\n  private _pressData: Private.IPressData | null = null;\n  private _thumbMoved = new Signal<this, number>(this);\n  private _stepRequested = new Signal<this, 'decrement' | 'increment'>(this);\n  private _pageRequested = new Signal<this, 'decrement' | 'increment'>(this);\n}\n\n/**\n * The namespace for the `ScrollBar` class statics.\n */\nexport namespace ScrollBar {\n  /**\n   * A type alias for a scroll bar orientation.\n   */\n  export type Orientation = 'horizontal' | 'vertical';\n\n  /**\n   * An options object for creating a scroll bar.\n   */\n  export interface IOptions {\n    /**\n     * The orientation of the scroll bar.\n     *\n     * The default is `'vertical'`.\n     */\n    orientation?: Orientation;\n\n    /**\n     * The value for the scroll bar.\n     *\n     * The default is `0`.\n     */\n    value?: number;\n\n    /**\n     * The page size for the scroll bar.\n     *\n     * The default is `10`.\n     */\n    page?: number;\n\n    /**\n     * The maximum value for the scroll bar.\n     *\n     * The default is `100`.\n     */\n    maximum?: number;\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A type alias for the parts of a scroll bar.\n   */\n  export type ScrollBarPart = 'thumb' | 'track' | 'decrement' | 'increment';\n\n  /**\n   * An object which holds mouse press data.\n   */\n  export interface IPressData {\n    /**\n     * The scroll bar part which was pressed.\n     */\n    part: ScrollBarPart;\n\n    /**\n     * The offset of the press in thumb coordinates, or -1.\n     */\n    delta: number;\n\n    /**\n     * The scroll value at the time the thumb was pressed, or -1.\n     */\n    value: number;\n\n    /**\n     * The disposable which will clear the override cursor.\n     */\n    override: IDisposable;\n\n    /**\n     * The current X position of the mouse.\n     */\n    mouseX: number;\n\n    /**\n     * The current Y position of the mouse.\n     */\n    mouseY: number;\n  }\n\n  /**\n   * Create the DOM node for a scroll bar.\n   */\n  export function createNode(): HTMLElement {\n    let node = document.createElement('div');\n    let decrement = document.createElement('div');\n    let increment = document.createElement('div');\n    let track = document.createElement('div');\n    let thumb = document.createElement('div');\n    decrement.className = 'lm-ScrollBar-button';\n    increment.className = 'lm-ScrollBar-button';\n    decrement.dataset['action'] = 'decrement';\n    increment.dataset['action'] = 'increment';\n    track.className = 'lm-ScrollBar-track';\n    thumb.className = 'lm-ScrollBar-thumb';\n    track.appendChild(thumb);\n    node.appendChild(decrement);\n    node.appendChild(track);\n    node.appendChild(increment);\n    return node;\n  }\n\n  /**\n   * Find the scroll bar part which contains the given target.\n   */\n  export function findPart(\n    scrollBar: ScrollBar,\n    target: HTMLElement\n  ): ScrollBarPart | null {\n    // Test the thumb.\n    if (scrollBar.thumbNode.contains(target)) {\n      return 'thumb';\n    }\n\n    // Test the track.\n    if (scrollBar.trackNode.contains(target)) {\n      return 'track';\n    }\n\n    // Test the decrement button.\n    if (scrollBar.decrementNode.contains(target)) {\n      return 'decrement';\n    }\n\n    // Test the increment button.\n    if (scrollBar.incrementNode.contains(target)) {\n      return 'increment';\n    }\n\n    // Indicate no match.\n    return null;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { MessageLoop } from '@lumino/messaging';\n\nimport { Layout } from './layout';\n\nimport { Widget } from './widget';\n\n/**\n * A concrete layout implementation which holds a single widget.\n *\n * #### Notes\n * This class is useful for creating simple container widgets which\n * hold a single child. The child should be positioned with CSS.\n */\nexport class SingletonLayout extends Layout {\n  /**\n   * Dispose of the resources held by the layout.\n   */\n  dispose(): void {\n    if (this._widget) {\n      let widget = this._widget;\n      this._widget = null;\n      widget.dispose();\n    }\n    super.dispose();\n  }\n\n  /**\n   * Get the child widget for the layout.\n   */\n  get widget(): Widget | null {\n    return this._widget;\n  }\n\n  /**\n   * Set the child widget for the layout.\n   *\n   * #### Notes\n   * Setting the child widget will cause the old child widget to be\n   * automatically disposed. If that is not desired, set the parent\n   * of the old child to `null` before assigning a new child.\n   */\n  set widget(widget: Widget | null) {\n    // Remove the widget from its current parent. This is a no-op\n    // if the widget's parent is already the layout parent widget.\n    if (widget) {\n      widget.parent = this.parent;\n    }\n\n    // Bail early if the widget does not change.\n    if (this._widget === widget) {\n      return;\n    }\n\n    // Dispose of the old child widget.\n    if (this._widget) {\n      this._widget.dispose();\n    }\n\n    // Update the internal widget.\n    this._widget = widget;\n\n    // Attach the new child widget if needed.\n    if (this.parent && widget) {\n      this.attachWidget(widget);\n    }\n  }\n\n  /**\n   * Create an iterator over the widgets in the layout.\n   *\n   * @returns A new iterator over the widgets in the layout.\n   */\n  *[Symbol.iterator](): IterableIterator<Widget> {\n    if (this._widget) {\n      yield this._widget;\n    }\n  }\n\n  /**\n   * Remove a widget from the layout.\n   *\n   * @param widget - The widget to remove from the layout.\n   *\n   * #### Notes\n   * A widget is automatically removed from the layout when its `parent`\n   * is set to `null`. This method should only be invoked directly when\n   * removing a widget from a layout which has yet to be installed on a\n   * parent widget.\n   *\n   * This method does *not* modify the widget's `parent`.\n   */\n  removeWidget(widget: Widget): void {\n    // Bail early if the widget does not exist in the layout.\n    if (this._widget !== widget) {\n      return;\n    }\n\n    // Clear the internal widget.\n    this._widget = null;\n\n    // If the layout is parented, detach the widget from the DOM.\n    if (this.parent) {\n      this.detachWidget(widget);\n    }\n  }\n\n  /**\n   * Perform layout initialization which requires the parent widget.\n   */\n  protected init(): void {\n    super.init();\n    for (const widget of this) {\n      this.attachWidget(widget);\n    }\n  }\n\n  /**\n   * Attach a widget to the parent's DOM node.\n   *\n   * @param index - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to attach to the parent.\n   *\n   * #### Notes\n   * This method is called automatically by the single layout at the\n   * appropriate time. It should not be called directly by user code.\n   *\n   * The default implementation adds the widgets's node to the parent's\n   * node at the proper location, and sends the appropriate attach\n   * messages to the widget if the parent is attached to the DOM.\n   *\n   * Subclasses may reimplement this method to control how the widget's\n   * node is added to the parent's node.\n   */\n  protected attachWidget(widget: Widget): void {\n    // Send a `'before-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\n    }\n\n    // Add the widget's node to the parent.\n    this.parent!.node.appendChild(widget.node);\n\n    // Send an `'after-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\n    }\n  }\n\n  /**\n   * Detach a widget from the parent's DOM node.\n   *\n   * @param widget - The widget to detach from the parent.\n   *\n   * #### Notes\n   * This method is called automatically by the single layout at the\n   * appropriate time. It should not be called directly by user code.\n   *\n   * The default implementation removes the widget's node from the\n   * parent's node, and sends the appropriate detach messages to the\n   * widget if the parent is attached to the DOM.\n   *\n   * Subclasses may reimplement this method to control how the widget's\n   * node is removed from the parent's node.\n   */\n  protected detachWidget(widget: Widget): void {\n    // Send a `'before-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\n    }\n\n    // Remove the widget's node from the parent.\n    this.parent!.node.removeChild(widget.node);\n\n    // Send an `'after-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\n    }\n  }\n\n  private _widget: Widget | null = null;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { ArrayExt } from '@lumino/algorithm';\n\nimport { ElementExt } from '@lumino/domutils';\n\nimport { Message, MessageLoop } from '@lumino/messaging';\n\nimport { Layout, LayoutItem } from './layout';\n\nimport { PanelLayout } from './panellayout';\n\nimport { Widget } from './widget';\n\n/**\n * A layout where visible widgets are stacked atop one another.\n *\n * #### Notes\n * The Z-order of the visible widgets follows their layout order.\n */\nexport class StackedLayout extends PanelLayout {\n  constructor(options: StackedLayout.IOptions = {}) {\n    super(options);\n    this._hiddenMode =\n      options.hiddenMode !== undefined\n        ? options.hiddenMode\n        : Widget.HiddenMode.Display;\n  }\n\n  /**\n   * The method for hiding widgets.\n   *\n   * #### Notes\n   * If there is only one child widget, `Display` hiding mode will be used\n   * regardless of this setting.\n   */\n  get hiddenMode(): Widget.HiddenMode {\n    return this._hiddenMode;\n  }\n\n  /**\n   * Set the method for hiding widgets.\n   *\n   * #### Notes\n   * If there is only one child widget, `Display` hiding mode will be used\n   * regardless of this setting.\n   */\n  set hiddenMode(v: Widget.HiddenMode) {\n    if (this._hiddenMode === v) {\n      return;\n    }\n    this._hiddenMode = v;\n    if (this.widgets.length > 1) {\n      this.widgets.forEach(w => {\n        w.hiddenMode = this._hiddenMode;\n      });\n    }\n  }\n\n  /**\n   * Dispose of the resources held by the layout.\n   */\n  dispose(): void {\n    // Dispose of the layout items.\n    for (const item of this._items) {\n      item.dispose();\n    }\n\n    // Clear the layout state.\n    this._box = null;\n    this._items.length = 0;\n\n    // Dispose of the rest of the layout.\n    super.dispose();\n  }\n\n  /**\n   * Attach a widget to the parent's DOM node.\n   *\n   * @param index - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to attach to the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected attachWidget(index: number, widget: Widget): void {\n    // Using transform create an additional layer in the pixel pipeline\n    // to limit the number of layer, it is set only if there is more than one widget.\n    if (\n      this._hiddenMode === Widget.HiddenMode.Scale &&\n      this._items.length > 0\n    ) {\n      if (this._items.length === 1) {\n        this.widgets[0].hiddenMode = Widget.HiddenMode.Scale;\n      }\n      widget.hiddenMode = Widget.HiddenMode.Scale;\n    } else {\n      widget.hiddenMode = Widget.HiddenMode.Display;\n    }\n\n    // Create and add a new layout item for the widget.\n    ArrayExt.insert(this._items, index, new LayoutItem(widget));\n\n    // Send a `'before-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\n    }\n\n    // Add the widget's node to the parent.\n    this.parent!.node.appendChild(widget.node);\n\n    // Send an `'after-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\n    }\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * Move a widget in the parent's DOM node.\n   *\n   * @param fromIndex - The previous index of the widget in the layout.\n   *\n   * @param toIndex - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to move in the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected moveWidget(\n    fromIndex: number,\n    toIndex: number,\n    widget: Widget\n  ): void {\n    // Move the layout item for the widget.\n    ArrayExt.move(this._items, fromIndex, toIndex);\n\n    // Post an update request for the parent widget.\n    this.parent!.update();\n  }\n\n  /**\n   * Detach a widget from the parent's DOM node.\n   *\n   * @param index - The previous index of the widget in the layout.\n   *\n   * @param widget - The widget to detach from the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected detachWidget(index: number, widget: Widget): void {\n    // Remove the layout item for the widget.\n    let item = ArrayExt.removeAt(this._items, index);\n\n    // Send a `'before-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\n    }\n\n    // Remove the widget's node from the parent.\n    this.parent!.node.removeChild(widget.node);\n\n    // Send an `'after-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\n    }\n\n    // Reset the z-index for the widget.\n    item!.widget.node.style.zIndex = '';\n\n    // Reset the hidden mode for the widget.\n    if (this._hiddenMode === Widget.HiddenMode.Scale) {\n      widget.hiddenMode = Widget.HiddenMode.Display;\n\n      // Reset the hidden mode for the first widget if necessary.\n      if (this._items.length === 1) {\n        this._items[0].widget.hiddenMode = Widget.HiddenMode.Display;\n      }\n    }\n\n    // Dispose of the layout item.\n    item!.dispose();\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'before-show'` message.\n   */\n  protected onBeforeShow(msg: Message): void {\n    super.onBeforeShow(msg);\n    this.parent!.update();\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    super.onBeforeAttach(msg);\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-shown'` message.\n   */\n  protected onChildShown(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-hidden'` message.\n   */\n  protected onChildHidden(msg: Widget.ChildMessage): void {\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'resize'` message.\n   */\n  protected onResize(msg: Widget.ResizeMessage): void {\n    if (this.parent!.isVisible) {\n      this._update(msg.width, msg.height);\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    if (this.parent!.isVisible) {\n      this._update(-1, -1);\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'fit-request'` message.\n   */\n  protected onFitRequest(msg: Message): void {\n    if (this.parent!.isAttached) {\n      this._fit();\n    }\n  }\n\n  /**\n   * Fit the layout to the total size required by the widgets.\n   */\n  private _fit(): void {\n    // Set up the computed minimum size.\n    let minW = 0;\n    let minH = 0;\n\n    // Update the computed minimum size.\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      // Fetch the item.\n      let item = this._items[i];\n\n      // Ignore hidden items.\n      if (item.isHidden) {\n        continue;\n      }\n\n      // Update the size limits for the item.\n      item.fit();\n\n      // Update the computed minimum size.\n      minW = Math.max(minW, item.minWidth);\n      minH = Math.max(minH, item.minHeight);\n    }\n\n    // Update the box sizing and add it to the computed min size.\n    let box = (this._box = ElementExt.boxSizing(this.parent!.node));\n    minW += box.horizontalSum;\n    minH += box.verticalSum;\n\n    // Update the parent's min size constraints.\n    let style = this.parent!.node.style;\n    style.minWidth = `${minW}px`;\n    style.minHeight = `${minH}px`;\n\n    // Set the dirty flag to ensure only a single update occurs.\n    this._dirty = true;\n\n    // Notify the ancestor that it should fit immediately. This may\n    // cause a resize of the parent, fulfilling the required update.\n    if (this.parent!.parent) {\n      MessageLoop.sendMessage(this.parent!.parent!, Widget.Msg.FitRequest);\n    }\n\n    // If the dirty flag is still set, the parent was not resized.\n    // Trigger the required update on the parent widget immediately.\n    if (this._dirty) {\n      MessageLoop.sendMessage(this.parent!, Widget.Msg.UpdateRequest);\n    }\n  }\n\n  /**\n   * Update the layout position and size of the widgets.\n   *\n   * The parent offset dimensions should be `-1` if unknown.\n   */\n  private _update(offsetWidth: number, offsetHeight: number): void {\n    // Clear the dirty flag to indicate the update occurred.\n    this._dirty = false;\n\n    // Compute the visible item count.\n    let nVisible = 0;\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      nVisible += +!this._items[i].isHidden;\n    }\n\n    // Bail early if there are no visible items to layout.\n    if (nVisible === 0) {\n      return;\n    }\n\n    // Measure the parent if the offset dimensions are unknown.\n    if (offsetWidth < 0) {\n      offsetWidth = this.parent!.node.offsetWidth;\n    }\n    if (offsetHeight < 0) {\n      offsetHeight = this.parent!.node.offsetHeight;\n    }\n\n    // Ensure the parent box sizing data is computed.\n    if (!this._box) {\n      this._box = ElementExt.boxSizing(this.parent!.node);\n    }\n\n    // Compute the actual layout bounds adjusted for border and padding.\n    let top = this._box.paddingTop;\n    let left = this._box.paddingLeft;\n    let width = offsetWidth - this._box.horizontalSum;\n    let height = offsetHeight - this._box.verticalSum;\n\n    // Update the widget stacking order and layout geometry.\n    for (let i = 0, n = this._items.length; i < n; ++i) {\n      // Fetch the item.\n      let item = this._items[i];\n\n      // Ignore hidden items.\n      if (item.isHidden) {\n        continue;\n      }\n\n      // Set the z-index for the widget.\n      item.widget.node.style.zIndex = `${i}`;\n\n      // Update the item geometry.\n      item.update(left, top, width, height);\n    }\n  }\n\n  private _dirty = false;\n  private _items: LayoutItem[] = [];\n  private _box: ElementExt.IBoxSizing | null = null;\n  private _hiddenMode: Widget.HiddenMode;\n}\n\n/**\n * The namespace for the `StackedLayout` class statics.\n */\nexport namespace StackedLayout {\n  /**\n   * An options object for initializing a stacked layout.\n   */\n  export interface IOptions extends Layout.IOptions {\n    /**\n     * The method for hiding widgets.\n     *\n     * The default is `Widget.HiddenMode.Display`.\n     */\n    hiddenMode?: Widget.HiddenMode;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { Panel } from './panel';\n\nimport { StackedLayout } from './stackedlayout';\n\nimport { Widget } from './widget';\n\n/**\n * A panel where visible widgets are stacked atop one another.\n *\n * #### Notes\n * This class provides a convenience wrapper around a {@link StackedLayout}.\n */\nexport class StackedPanel extends Panel {\n  /**\n   * Construct a new stacked panel.\n   *\n   * @param options - The options for initializing the panel.\n   */\n  constructor(options: StackedPanel.IOptions = {}) {\n    super({ layout: Private.createLayout(options) });\n    this.addClass('lm-StackedPanel');\n  }\n\n  /**\n   * The method for hiding widgets.\n   *\n   * #### Notes\n   * If there is only one child widget, `Display` hiding mode will be used\n   * regardless of this setting.\n   */\n  get hiddenMode(): Widget.HiddenMode {\n    return (this.layout as StackedLayout).hiddenMode;\n  }\n\n  /**\n   * Set the method for hiding widgets.\n   *\n   * #### Notes\n   * If there is only one child widget, `Display` hiding mode will be used\n   * regardless of this setting.\n   */\n  set hiddenMode(v: Widget.HiddenMode) {\n    (this.layout as StackedLayout).hiddenMode = v;\n  }\n\n  /**\n   * A signal emitted when a widget is removed from a stacked panel.\n   */\n  get widgetRemoved(): ISignal<this, Widget> {\n    return this._widgetRemoved;\n  }\n\n  /**\n   * A message handler invoked on a `'child-added'` message.\n   */\n  protected onChildAdded(msg: Widget.ChildMessage): void {\n    msg.child.addClass('lm-StackedPanel-child');\n  }\n\n  /**\n   * A message handler invoked on a `'child-removed'` message.\n   */\n  protected onChildRemoved(msg: Widget.ChildMessage): void {\n    msg.child.removeClass('lm-StackedPanel-child');\n    this._widgetRemoved.emit(msg.child);\n  }\n\n  private _widgetRemoved = new Signal<this, Widget>(this);\n}\n\n/**\n * The namespace for the `StackedPanel` class statics.\n */\nexport namespace StackedPanel {\n  /**\n   * An options object for creating a stacked panel.\n   */\n  export interface IOptions {\n    /**\n     * The stacked layout to use for the stacked panel.\n     *\n     * The default is a new `StackedLayout`.\n     */\n    layout?: StackedLayout;\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Create a stacked layout for the given panel options.\n   */\n  export function createLayout(options: StackedPanel.IOptions): StackedLayout {\n    return options.layout || new StackedLayout();\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { Platform } from '@lumino/domutils';\n\nimport { MessageLoop } from '@lumino/messaging';\n\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { BoxLayout } from './boxlayout';\n\nimport { StackedPanel } from './stackedpanel';\n\nimport { TabBar } from './tabbar';\n\nimport { Widget } from './widget';\n\n/**\n * A widget which combines a `TabBar` and a `StackedPanel`.\n *\n * #### Notes\n * This is a simple panel which handles the common case of a tab bar\n * placed next to a content area. The selected tab controls the widget\n * which is shown in the content area.\n *\n * For use cases which require more control than is provided by this\n * panel, the `TabBar` widget may be used independently.\n */\nexport class TabPanel extends Widget {\n  /**\n   * Construct a new tab panel.\n   *\n   * @param options - The options for initializing the tab panel.\n   */\n  constructor(options: TabPanel.IOptions = {}) {\n    super();\n    this.addClass('lm-TabPanel');\n\n    // Create the tab bar and stacked panel.\n    this.tabBar = new TabBar<Widget>(options);\n    this.tabBar.addClass('lm-TabPanel-tabBar');\n    this.stackedPanel = new StackedPanel();\n    this.stackedPanel.addClass('lm-TabPanel-stackedPanel');\n\n    // Connect the tab bar signal handlers.\n    this.tabBar.tabMoved.connect(this._onTabMoved, this);\n    this.tabBar.currentChanged.connect(this._onCurrentChanged, this);\n    this.tabBar.tabCloseRequested.connect(this._onTabCloseRequested, this);\n    this.tabBar.tabActivateRequested.connect(\n      this._onTabActivateRequested,\n      this\n    );\n    this.tabBar.addRequested.connect(this._onTabAddRequested, this);\n\n    // Connect the stacked panel signal handlers.\n    this.stackedPanel.widgetRemoved.connect(this._onWidgetRemoved, this);\n\n    // Get the data related to the placement.\n    this._tabPlacement = options.tabPlacement || 'top';\n    let direction = Private.directionFromPlacement(this._tabPlacement);\n    let orientation = Private.orientationFromPlacement(this._tabPlacement);\n\n    // Configure the tab bar for the placement.\n    this.tabBar.orientation = orientation;\n    this.tabBar.dataset['placement'] = this._tabPlacement;\n\n    // Create the box layout.\n    let layout = new BoxLayout({ direction, spacing: 0 });\n\n    // Set the stretch factors for the child widgets.\n    BoxLayout.setStretch(this.tabBar, 0);\n    BoxLayout.setStretch(this.stackedPanel, 1);\n\n    // Add the child widgets to the layout.\n    layout.addWidget(this.tabBar);\n    layout.addWidget(this.stackedPanel);\n\n    // Install the layout on the tab panel.\n    this.layout = layout;\n  }\n\n  /**\n   * A signal emitted when the current tab is changed.\n   *\n   * #### Notes\n   * This signal is emitted when the currently selected tab is changed\n   * either through user or programmatic interaction.\n   *\n   * Notably, this signal is not emitted when the index of the current\n   * tab changes due to tabs being inserted, removed, or moved. It is\n   * only emitted when the actual current tab node is changed.\n   */\n  get currentChanged(): ISignal<this, TabPanel.ICurrentChangedArgs> {\n    return this._currentChanged;\n  }\n\n  /**\n   * Get the index of the currently selected tab.\n   *\n   * #### Notes\n   * This will be `-1` if no tab is selected.\n   */\n  get currentIndex(): number {\n    return this.tabBar.currentIndex;\n  }\n\n  /**\n   * Set the index of the currently selected tab.\n   *\n   * #### Notes\n   * If the index is out of range, it will be set to `-1`.\n   */\n  set currentIndex(value: number) {\n    this.tabBar.currentIndex = value;\n  }\n\n  /**\n   * Get the currently selected widget.\n   *\n   * #### Notes\n   * This will be `null` if there is no selected tab.\n   */\n  get currentWidget(): Widget | null {\n    let title = this.tabBar.currentTitle;\n    return title ? title.owner : null;\n  }\n\n  /**\n   * Set the currently selected widget.\n   *\n   * #### Notes\n   * If the widget is not in the panel, it will be set to `null`.\n   */\n  set currentWidget(value: Widget | null) {\n    this.tabBar.currentTitle = value ? value.title : null;\n  }\n\n  /**\n   * Get the whether the tabs are movable by the user.\n   *\n   * #### Notes\n   * Tabs can always be moved programmatically.\n   */\n  get tabsMovable(): boolean {\n    return this.tabBar.tabsMovable;\n  }\n\n  /**\n   * Set the whether the tabs are movable by the user.\n   *\n   * #### Notes\n   * Tabs can always be moved programmatically.\n   */\n  set tabsMovable(value: boolean) {\n    this.tabBar.tabsMovable = value;\n  }\n\n  /**\n   * Get the whether the add button is enabled.\n   *\n   */\n  get addButtonEnabled(): boolean {\n    return this.tabBar.addButtonEnabled;\n  }\n\n  /**\n   * Set the whether the add button is enabled.\n   *\n   */\n  set addButtonEnabled(value: boolean) {\n    this.tabBar.addButtonEnabled = value;\n  }\n\n  /**\n   * Get the tab placement for the tab panel.\n   *\n   * #### Notes\n   * This controls the position of the tab bar relative to the content.\n   */\n  get tabPlacement(): TabPanel.TabPlacement {\n    return this._tabPlacement;\n  }\n\n  /**\n   * Set the tab placement for the tab panel.\n   *\n   * #### Notes\n   * This controls the position of the tab bar relative to the content.\n   */\n  set tabPlacement(value: TabPanel.TabPlacement) {\n    // Bail if the placement does not change.\n    if (this._tabPlacement === value) {\n      return;\n    }\n\n    // Update the internal value.\n    this._tabPlacement = value;\n\n    // Get the values related to the placement.\n    let direction = Private.directionFromPlacement(value);\n    let orientation = Private.orientationFromPlacement(value);\n\n    // Configure the tab bar for the placement.\n    this.tabBar.orientation = orientation;\n    this.tabBar.dataset['placement'] = value;\n\n    // Update the layout direction.\n    (this.layout as BoxLayout).direction = direction;\n  }\n\n  /**\n   * A signal emitted when the add button on a tab bar is clicked.\n   *\n   */\n  get addRequested(): ISignal<this, TabBar<Widget>> {\n    return this._addRequested;\n  }\n\n  /**\n   * The tab bar used by the tab panel.\n   *\n   * #### Notes\n   * Modifying the tab bar directly can lead to undefined behavior.\n   */\n  readonly tabBar: TabBar<Widget>;\n\n  /**\n   * The stacked panel used by the tab panel.\n   *\n   * #### Notes\n   * Modifying the panel directly can lead to undefined behavior.\n   */\n  readonly stackedPanel: StackedPanel;\n\n  /**\n   * A read-only array of the widgets in the panel.\n   */\n  get widgets(): ReadonlyArray<Widget> {\n    return this.stackedPanel.widgets;\n  }\n\n  /**\n   * Add a widget to the end of the tab panel.\n   *\n   * @param widget - The widget to add to the tab panel.\n   *\n   * #### Notes\n   * If the widget is already contained in the panel, it will be moved.\n   *\n   * The widget's `title` is used to populate the tab.\n   */\n  addWidget(widget: Widget): void {\n    this.insertWidget(this.widgets.length, widget);\n  }\n\n  /**\n   * Insert a widget into the tab panel at a specified index.\n   *\n   * @param index - The index at which to insert the widget.\n   *\n   * @param widget - The widget to insert into to the tab panel.\n   *\n   * #### Notes\n   * If the widget is already contained in the panel, it will be moved.\n   *\n   * The widget's `title` is used to populate the tab.\n   */\n  insertWidget(index: number, widget: Widget): void {\n    if (widget !== this.currentWidget) {\n      widget.hide();\n    }\n    this.stackedPanel.insertWidget(index, widget);\n    this.tabBar.insertTab(index, widget.title);\n\n    widget.node.setAttribute('role', 'tabpanel');\n\n    let renderer = this.tabBar.renderer;\n    if (renderer instanceof TabBar.Renderer) {\n      let tabId = renderer.createTabKey({\n        title: widget.title,\n        current: false,\n        zIndex: 0\n      });\n      widget.node.setAttribute('aria-labelledby', tabId);\n    }\n  }\n\n  /**\n   * Handle the `currentChanged` signal from the tab bar.\n   */\n  private _onCurrentChanged(\n    sender: TabBar<Widget>,\n    args: TabBar.ICurrentChangedArgs<Widget>\n  ): void {\n    // Extract the previous and current title from the args.\n    let { previousIndex, previousTitle, currentIndex, currentTitle } = args;\n\n    // Extract the widgets from the titles.\n    let previousWidget = previousTitle ? previousTitle.owner : null;\n    let currentWidget = currentTitle ? currentTitle.owner : null;\n\n    // Hide the previous widget.\n    if (previousWidget) {\n      previousWidget.hide();\n    }\n\n    // Show the current widget.\n    if (currentWidget) {\n      currentWidget.show();\n    }\n\n    // Emit the `currentChanged` signal for the tab panel.\n    this._currentChanged.emit({\n      previousIndex,\n      previousWidget,\n      currentIndex,\n      currentWidget\n    });\n\n    // Flush the message loop on IE and Edge to prevent flicker.\n    if (Platform.IS_EDGE || Platform.IS_IE) {\n      MessageLoop.flush();\n    }\n  }\n\n  /**\n   * Handle the `tabAddRequested` signal from the tab bar.\n   */\n  private _onTabAddRequested(sender: TabBar<Widget>, args: void): void {\n    this._addRequested.emit(sender);\n  }\n\n  /**\n   * Handle the `tabActivateRequested` signal from the tab bar.\n   */\n  private _onTabActivateRequested(\n    sender: TabBar<Widget>,\n    args: TabBar.ITabActivateRequestedArgs<Widget>\n  ): void {\n    args.title.owner.activate();\n  }\n\n  /**\n   * Handle the `tabCloseRequested` signal from the tab bar.\n   */\n  private _onTabCloseRequested(\n    sender: TabBar<Widget>,\n    args: TabBar.ITabCloseRequestedArgs<Widget>\n  ): void {\n    args.title.owner.close();\n  }\n\n  /**\n   * Handle the `tabMoved` signal from the tab bar.\n   */\n  private _onTabMoved(\n    sender: TabBar<Widget>,\n    args: TabBar.ITabMovedArgs<Widget>\n  ): void {\n    this.stackedPanel.insertWidget(args.toIndex, args.title.owner);\n  }\n\n  /**\n   * Handle the `widgetRemoved` signal from the stacked panel.\n   */\n  private _onWidgetRemoved(sender: StackedPanel, widget: Widget): void {\n    widget.node.removeAttribute('role');\n    widget.node.removeAttribute('aria-labelledby');\n    this.tabBar.removeTab(widget.title);\n  }\n\n  private _tabPlacement: TabPanel.TabPlacement;\n  private _currentChanged = new Signal<this, TabPanel.ICurrentChangedArgs>(\n    this\n  );\n\n  private _addRequested = new Signal<this, TabBar<Widget>>(this);\n}\n\n/**\n * The namespace for the `TabPanel` class statics.\n */\nexport namespace TabPanel {\n  /**\n   * A type alias for tab placement in a tab bar.\n   */\n  export type TabPlacement =\n    | /**\n     * The tabs are placed as a row above the content.\n     */\n    'top'\n\n    /**\n     * The tabs are placed as a column to the left of the content.\n     */\n    | 'left'\n\n    /**\n     * The tabs are placed as a column to the right of the content.\n     */\n    | 'right'\n\n    /**\n     * The tabs are placed as a row below the content.\n     */\n    | 'bottom';\n\n  /**\n   * An options object for initializing a tab panel.\n   */\n  export interface IOptions {\n    /**\n     * The document to use with the tab panel.\n     *\n     * The default is the global `document` instance.\n     */\n    document?: Document | ShadowRoot;\n\n    /**\n     * Whether the tabs are movable by the user.\n     *\n     * The default is `false`.\n     */\n    tabsMovable?: boolean;\n\n    /**\n     * Whether the button to add new tabs is enabled.\n     *\n     * The default is `false`.\n     */\n    addButtonEnabled?: boolean;\n\n    /**\n     * The placement of the tab bar relative to the content.\n     *\n     * The default is `'top'`.\n     */\n    tabPlacement?: TabPlacement;\n\n    /**\n     * The renderer for the panel's tab bar.\n     *\n     * The default is a shared renderer instance.\n     */\n    renderer?: TabBar.IRenderer<Widget>;\n  }\n\n  /**\n   * The arguments object for the `currentChanged` signal.\n   */\n  export interface ICurrentChangedArgs {\n    /**\n     * The previously selected index.\n     */\n    previousIndex: number;\n\n    /**\n     * The previously selected widget.\n     */\n    previousWidget: Widget | null;\n\n    /**\n     * The currently selected index.\n     */\n    currentIndex: number;\n\n    /**\n     * The currently selected widget.\n     */\n    currentWidget: Widget | null;\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Convert a tab placement to tab bar orientation.\n   */\n  export function orientationFromPlacement(\n    plc: TabPanel.TabPlacement\n  ): TabBar.Orientation {\n    return placementToOrientationMap[plc];\n  }\n\n  /**\n   * Convert a tab placement to a box layout direction.\n   */\n  export function directionFromPlacement(\n    plc: TabPanel.TabPlacement\n  ): BoxLayout.Direction {\n    return placementToDirectionMap[plc];\n  }\n\n  /**\n   * A mapping of tab placement to tab bar orientation.\n   */\n  const placementToOrientationMap: { [key: string]: TabBar.Orientation } = {\n    top: 'horizontal',\n    left: 'vertical',\n    right: 'vertical',\n    bottom: 'horizontal'\n  };\n\n  /**\n   * A mapping of tab placement to box layout direction.\n   */\n  const placementToDirectionMap: { [key: string]: BoxLayout.Direction } = {\n    top: 'top-to-bottom',\n    left: 'left-to-right',\n    right: 'right-to-left',\n    bottom: 'bottom-to-top'\n  };\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { h, VirtualElement } from '@lumino/virtualdom';\nimport { CommandPalette } from '@lumino/widgets';\nimport { LabIconStyle } from '../../style';\nimport { classes } from '../../utils';\nimport { checkIcon, filterListIcon } from '../iconimports';\n\nconst searchHeaderIcon = filterListIcon.bindprops({\n  stylesheet: 'commandPaletteHeader',\n  className: 'jp-icon-hoverShow-content'\n});\n\nexport namespace CommandPaletteSvg {\n  /**\n   * a modified implementation of the CommandPalette Renderer\n   */\n  export class Renderer extends CommandPalette.Renderer {\n    /**\n     * Render the virtual element for a command palette header.\n     *\n     * @param data - The data to use for rendering the header.\n     *\n     * @returns A virtual element representing the header.\n     */\n    renderHeader(data: CommandPalette.IHeaderRenderData): VirtualElement {\n      const content = this.formatHeader(data);\n      return h.li(\n        {\n          className: classes('lm-CommandPalette-header', 'jp-icon-hoverShow')\n        },\n        content,\n        h.span(searchHeaderIcon)\n      );\n    }\n\n    /**\n     * Render the icon for a command palette item.\n     *\n     * @param data - The data to use for rendering the icon.\n     *\n     * @returns A virtual element representing the icon.\n     */\n    renderItemIcon(data: CommandPalette.IItemRenderData): VirtualElement {\n      const className = this.createIconClass(data);\n\n      if (data.item.isToggled) {\n        // check mark icon takes precedence\n        return h.div({ className }, checkIcon, data.item.iconLabel);\n      }\n\n      // if data.item.icon is undefined, it will be ignored\n      return h.div({ className }, data.item.icon!, data.item.iconLabel);\n    }\n\n    /**\n     * Create the class name for the command item icon.\n     *\n     * @param data - The data to use for the class name.\n     *\n     * @returns The full class name for the item icon.\n     */\n    createIconClass(data: CommandPalette.IItemRenderData): string {\n      let name = 'lm-CommandPalette-itemIcon';\n\n      return classes(\n        LabIconStyle.styleClass({\n          stylesheet: 'commandPaletteItem'\n        }),\n        data.item.iconClass,\n        name\n      );\n    }\n  }\n\n  export const defaultRenderer = new Renderer();\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { IDisposable } from '@lumino/disposable';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { h, VirtualElement } from '@lumino/virtualdom';\nimport { ContextMenu, Menu } from '@lumino/widgets';\nimport { LabIconStyle } from '../../style';\nimport { classes } from '../../utils';\nimport { caretRightIcon, checkIcon } from '../iconimports';\n\nconst submenuIcon = caretRightIcon.bindprops({\n  stylesheet: 'menuItem'\n});\n\n/**\n * An object which implements a universal context menu.\n * Tweaked to use inline svg icons\n */\nexport class ContextMenuSvg extends ContextMenu implements IDisposable {\n  /**\n   * Construct a new context menu.\n   *\n   * @param options - The options for initializing the menu.\n   */\n  constructor(options: ContextMenu.IOptions) {\n    super(options);\n\n    // override the vanilla .menu\n    this.menu = new MenuSvg(options);\n  }\n\n  readonly menu: MenuSvg;\n\n  /**\n   * Test whether the context menu is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * A signal fired when the context menu is opened.\n   */\n  get opened(): ISignal<ContextMenu, void> {\n    return this._opened;\n  }\n\n  /**\n   * Dispose of the resources held by the context menu.\n   */\n  dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n\n    this._isDisposed = true;\n    this.menu.dispose();\n    Signal.disconnectSender(this);\n  }\n\n  /**\n   * Open the context menu in response to a `'contextmenu'` event.\n   *\n   * @param event - The `'contextmenu'` event of interest.\n   *\n   * @returns `true` if the menu was opened, or `false` if no items\n   *   matched the event and the menu was not opened.\n   *\n   * #### Notes\n   * This method will populate the context menu with items which match\n   * the propagation path of the event, then open the menu at the mouse\n   * position indicated by the event.\n   */\n  open(event: MouseEvent): boolean {\n    if (this._isDisposed) {\n      return false;\n    }\n    const hasItems = super.open(event);\n    if (hasItems) {\n      this._opened.emit();\n    }\n    return hasItems;\n  }\n\n  protected _isDisposed = false;\n  protected _opened: Signal<ContextMenu, void> = new Signal<ContextMenu, void>(\n    this\n  );\n}\n\n/**\n * a widget which displays items as a canonical menu.\n * Tweaked to use inline svg icons\n */\nexport class MenuSvg extends Menu {\n  /**\n   * construct a new menu. Overrides the default renderer\n   *\n   * @param options - The options for initializing the tab bar.\n   */\n  constructor(options: Menu.IOptions) {\n    options.renderer = options.renderer || MenuSvg.defaultRenderer;\n    super(options);\n  }\n\n  /**\n   * insert a menu item into the menu at the specified index. Replaces the\n   * default renderer for submenus\n   *\n   * @param index - The index at which to insert the item.\n   *\n   * @param options - The options for creating the menu item.\n   *\n   * @returns The menu item added to the menu.\n   *\n   * #### Notes\n   * The index will be clamped to the bounds of the items.\n   */\n  insertItem(index: number, options: Menu.IItemOptions): Menu.IItem {\n    if (options.submenu) {\n      MenuSvg.overrideDefaultRenderer(options.submenu);\n    }\n\n    return super.insertItem(index, options);\n  }\n}\n\nexport namespace MenuSvg {\n  export function overrideDefaultRenderer(menu: Menu): void {\n    // override renderer, if needed\n    if (menu.renderer === Menu.defaultRenderer) {\n      // cast away readonly on menu.renderer\n      (menu as any).renderer = MenuSvg.defaultRenderer;\n    }\n\n    // ensure correct renderer on any submenus that get added in the future\n    const originalInsertItem = menu.insertItem.bind(menu);\n    menu.insertItem = (index: number, options: Menu.IItemOptions) => {\n      if (options.submenu) {\n        MenuSvg.overrideDefaultRenderer(options.submenu);\n      }\n\n      return originalInsertItem(index, options);\n    };\n\n    // recurse through submenus\n    for (const item of (menu as any)._items as Menu.IItem[]) {\n      if (item.submenu) {\n        overrideDefaultRenderer(item.submenu);\n      }\n    }\n  }\n\n  /**\n   * a modified implementation of the Menu Renderer\n   */\n  export class Renderer extends Menu.Renderer {\n    /**\n     * Render the icon element for a menu item.\n     *\n     * @param data - The data to use for rendering the icon.\n     *\n     * @returns A virtual element representing the item icon.\n     */\n    renderIcon(data: Menu.IRenderData): VirtualElement {\n      const className = this.createIconClass(data);\n\n      if (data.item.isToggled) {\n        // check mark icon takes precedence\n        return h.div({ className }, checkIcon, data.item.iconLabel);\n      }\n\n      // if data.item.icon is undefined, it will be ignored\n      return h.div({ className }, data.item.icon!, data.item.iconLabel);\n    }\n\n    /**\n     * Create the class name for the menu item icon.\n     *\n     * @param data - The data to use for the class name.\n     *\n     * @returns The full class name for the item icon.\n     */\n    createIconClass(data: Menu.IRenderData): string {\n      let name = 'lm-Menu-itemIcon';\n\n      if (data.item.type === 'separator') {\n        return classes(data.item.iconClass, name);\n      } else {\n        return classes(\n          LabIconStyle.styleClass({ stylesheet: 'menuItem' }),\n          data.item.iconClass,\n          name\n        );\n      }\n    }\n\n    /**\n     * Render the submenu icon element for a menu item.\n     *\n     * @param data - The data to use for rendering the submenu icon.\n     *\n     * @returns A virtual element representing the submenu icon.\n     */\n    renderSubmenu(data: Menu.IRenderData): VirtualElement {\n      const className = 'lm-Menu-itemSubmenuIcon';\n\n      if (data.item.type === 'submenu') {\n        return h.div({ className }, submenuIcon);\n      } else {\n        return h.div({ className });\n      }\n    }\n  }\n\n  export const defaultRenderer = new Renderer();\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { ITranslator, nullTranslator } from '@jupyterlab/translation';\nimport { hpass, VirtualElement } from '@lumino/virtualdom';\nimport { DockPanel, TabBar, TabPanel, Widget } from '@lumino/widgets';\nimport { LabIconStyle } from '../../style';\nimport { classes } from '../../utils';\nimport { addIcon, closeIcon } from '../iconimports';\n\n/**\n * a widget which displays titles as a single row or column of tabs.\n * Tweaked to use an inline svg as the close icon\n */\nexport class TabBarSvg<T> extends TabBar<T> {\n  /**\n   * Translator object\n   */\n  static translator: ITranslator | null = null;\n\n  /**\n   * Construct a new tab bar. Overrides the default renderer.\n   *\n   * @param options - The options for initializing the tab bar.\n   */\n  constructor(options: TabBar.IOptions<T> = {}) {\n    super({ renderer: TabBarSvg.defaultRenderer, ...options });\n    const trans = (TabBarSvg.translator ?? nullTranslator).load('jupyterlab');\n    addIcon.element({\n      container: this.addButtonNode,\n      title: trans.__('New Launcher')\n    });\n  }\n}\n\nexport namespace TabBarSvg {\n  /**\n   * A modified implementation of the TabBar Renderer.\n   */\n  export class Renderer extends TabBar.Renderer {\n    /**\n     * Render the close icon element for a tab.\n     *\n     * @param data - The data to use for rendering the tab.\n     *\n     * @returns A virtual element representing the tab close icon.\n     */\n    renderCloseIcon(data: TabBar.IRenderData<any>): VirtualElement {\n      const trans = (TabBarSvg.translator ?? nullTranslator).load('jupyterlab');\n      const title = data.title.label\n        ? trans.__('Close %1', data.title.label)\n        : trans.__('Close tab');\n      const className = classes(\n        'jp-icon-hover lm-TabBar-tabCloseIcon',\n        LabIconStyle.styleClass({\n          elementPosition: 'center',\n          height: '16px',\n          width: '16px'\n        })\n      );\n\n      return hpass(\n        'div',\n        { className, title },\n        closeIcon\n      ) as unknown as VirtualElement;\n    }\n  }\n\n  export const defaultRenderer = new Renderer();\n}\n\n/**\n * a widget which provides a flexible docking area for widgets.\n * Tweaked to use an inline svg as the close icon\n */\nexport class DockPanelSvg extends DockPanel {\n  /**\n   * Construct a new dock panel.\n   *\n   * @param options - The options for initializing the panel.\n   */\n  constructor(options: DockPanel.IOptions = {}) {\n    super({\n      renderer: DockPanelSvg.defaultRenderer,\n      ...options\n    });\n  }\n}\n\nexport namespace DockPanelSvg {\n  /**\n   * A modified implementation of the DockPanel Renderer.\n   */\n  export class Renderer extends DockPanel.Renderer {\n    /**\n     * Create a new tab bar (with inline svg icons enabled\n     * for use with a dock panel.\n     *\n     * @returns A new tab bar for a dock panel.\n     */\n    createTabBar(): TabBarSvg<Widget> {\n      const bar = new TabBarSvg<Widget>();\n      bar.addClass('lm-DockPanel-tabBar');\n      return bar;\n    }\n  }\n\n  export const defaultRenderer = new Renderer();\n}\n\n/**\n * A widget which combines a `TabBar` and a `StackedPanel`.\n * Tweaked to use an inline svg as the close icon\n */\nexport class TabPanelSvg extends TabPanel {\n  /**\n   * Construct a new tab panel.\n   *\n   * @param options - The options for initializing the tab panel.\n   */\n  constructor(options: TabPanel.IOptions = {}) {\n    options.renderer = options.renderer || TabBarSvg.defaultRenderer;\n    super(options);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nexport * from './commandpalettesvg';\nexport * from './menusvg';\nexport * from './tabbarsvg';\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nexport * from './iconimports';\nexport * from './labicon';\nexport * from './widgets';\n", "/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n\nimport React from 'react';\nimport { LabIcon } from '../icon';\nimport { classes } from '../utils';\n\n/**\n * InputGroup component properties\n */\nexport interface IInputGroupProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {\n  /**\n   * Pass a ref to the input element\n   */\n  inputRef?: React.RefObject<HTMLInputElement>;\n  /**\n   * Right icon adornment\n   */\n  rightIcon?: string | LabIcon;\n}\n\n/**\n * InputGroup component\n *\n * @param props Component properties\n * @returns Component\n */\nexport function InputGroup(props: IInputGroupProps): JSX.Element {\n  const { className, inputRef, rightIcon, ...others } = props;\n  return (\n    <div className={classes('jp-InputGroup', className)}>\n      <input ref={inputRef} {...others}></input>\n      {rightIcon && (\n        <span className=\"jp-InputGroupAction\">\n          {typeof rightIcon === 'string' ? (\n            <LabIcon.resolveReact\n              icon={rightIcon}\n              elementPosition=\"center\"\n              tag=\"span\"\n            />\n          ) : (\n            <rightIcon.react elementPosition=\"center\" tag=\"span\" />\n          )}\n        </span>\n      )}\n    </div>\n  );\n}\n", "/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n\nimport React from 'react';\nimport { classes } from '../utils';\n\n/**\n * Button component property\n */\nexport interface IButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * Whether this button should use minimal styles.\n   */\n  minimal?: boolean;\n  /**\n   * Whether this button should use small styles.\n   */\n  small?: boolean;\n}\n\n/**\n * Button component\n *\n * @param props Component properties\n * @returns Component\n */\nexport function Button(props: IButtonProps): JSX.Element {\n  const { minimal, small, children, ...others } = props;\n  return (\n    <button\n      {...others}\n      className={classes(\n        props.className,\n        minimal ? 'jp-mod-minimal' : '',\n        small ? 'jp-mod-small' : '',\n        'jp-Button'\n      )}\n    >\n      {children}\n    </button>\n  );\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { Message } from '@lumino/messaging';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { Panel, PanelLayout, Title, Widget } from '@lumino/widgets';\n\nimport { caretDownIcon } from '../icon';\n\nconst COLLAPSE_CLASS = 'jp-Collapse';\n\nconst CONTENTS_CLASS = 'jp-Collapse-contents';\n\nconst HEADER_CLASS = 'jp-Collapse-header';\n\nconst HEADER_COLLAPSED_CLASS = 'jp-Collapse-header-collapsed';\n\nconst ICON_CLASS = 'jp-Collapser-icon';\n\nconst TITLE_CLASS = 'jp-Collapser-title';\n\n/**\n * A panel that supports a collapsible header made from the widget's title.\n * Clicking on the title expands or contracts the widget.\n */\nexport class Collapser<T extends Widget = Widget> extends Widget {\n  constructor(options: Collapser.IOptions<T>) {\n    super(options);\n    const { widget, collapsed = true } = options;\n\n    this.addClass(COLLAPSE_CLASS);\n    this._header = new Widget();\n    this._header.addClass(HEADER_CLASS);\n    if (collapsed) {\n      this._header.addClass(HEADER_COLLAPSED_CLASS);\n    }\n    this._header.node.appendChild(\n      caretDownIcon.element({\n        className: ICON_CLASS\n      })\n    );\n    const titleSpan = document.createElement('span');\n    titleSpan.classList.add(TITLE_CLASS);\n    titleSpan.textContent = widget.title.label;\n    this._header.node.appendChild(titleSpan);\n\n    this._content = new Panel();\n    this._content.addClass(CONTENTS_CLASS);\n\n    const layout = new PanelLayout();\n    this.layout = layout;\n    layout.addWidget(this._header);\n    layout.addWidget(this._content);\n\n    this.widget = widget;\n    this.collapsed = collapsed;\n  }\n\n  /**\n   * The widget inside the collapse panel.\n   */\n  get widget(): T {\n    return this._widget;\n  }\n  set widget(widget: T) {\n    const oldWidget = this._widget;\n    if (oldWidget) {\n      oldWidget.title.changed.disconnect(this._onTitleChanged, this);\n      oldWidget.parent = null;\n    }\n    this._widget = widget;\n    widget.title.changed.connect(this._onTitleChanged, this);\n    this._onTitleChanged(widget.title);\n    this._content.addWidget(widget);\n  }\n\n  /**\n   * The collapsed state of the panel.\n   */\n  get collapsed(): boolean {\n    return this._collapsed;\n  }\n  set collapsed(value: boolean) {\n    if (value === this._collapsed) {\n      return;\n    }\n    if (value) {\n      this._collapse();\n    } else {\n      this._uncollapse();\n    }\n  }\n\n  /**\n   * A signal for when the widget collapse state changes.\n   */\n  get collapseChanged(): ISignal<Collapser, void> {\n    return this._collapseChanged;\n  }\n\n  /**\n   * Toggle the collapse state of the panel.\n   */\n  toggle(): void {\n    this.collapsed = !this.collapsed;\n  }\n\n  /**\n   * Dispose the widget.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n\n    // Delete references we explicitly hold to other widgets.\n    this._header = null!;\n    this._widget = null!;\n    this._content = null!;\n\n    super.dispose();\n  }\n\n  /**\n   * Handle the DOM events for the Collapser widget.\n   *\n   * @param event - The DOM event sent to the panel.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the panel's DOM node. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'click':\n        this._evtClick(event as MouseEvent);\n        break;\n      default:\n        break;\n    }\n  }\n\n  protected onAfterAttach(msg: Message): void {\n    this._header.node.addEventListener('click', this);\n  }\n\n  protected onBeforeDetach(msg: Message): void {\n    this._header.node.removeEventListener('click', this);\n  }\n\n  private _collapse() {\n    this._collapsed = true;\n    if (this._content) {\n      this._content.hide();\n    }\n    this._setHeader();\n    this._collapseChanged.emit(void 0);\n  }\n\n  private _uncollapse() {\n    this._collapsed = false;\n    if (this._content) {\n      this._content.show();\n    }\n    this._setHeader();\n    this._collapseChanged.emit(void 0);\n  }\n\n  private _evtClick(event: MouseEvent) {\n    this.toggle();\n  }\n\n  /**\n   * Handle the `changed` signal of a title object.\n   */\n  private _onTitleChanged(sender: Title<Widget>): void {\n    this._setHeader();\n  }\n\n  private _setHeader(): void {\n    if (this._collapsed) {\n      this._header.addClass(HEADER_COLLAPSED_CLASS);\n    } else {\n      this._header.removeClass(HEADER_COLLAPSED_CLASS);\n    }\n  }\n\n  private _collapseChanged = new Signal<this, void>(this);\n  private _collapsed: boolean;\n  private _content: Panel;\n  private _header: Widget;\n  private _widget: T;\n}\n\nexport namespace Collapser {\n  export interface IOptions<T extends Widget = Widget> extends Widget.IOptions {\n    widget: T;\n    collapsed?: boolean;\n  }\n}\n", "/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar React = require('react');\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nfunction jsxWithValidationStatic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nfunction jsxWithValidationDynamic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, false);\n  }\n}\n\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\n\nvar jsxs =  jsxWithValidationStatic ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsx;\nexports.jsxs = jsxs;\n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n", "/** Determines whether a `thing` is an object for the purposes of RSJF. In this case, `thing` is an object if it has\n * the type `object` but is NOT null, an array or a File.\n *\n * @param thing - The thing to check to see whether it is an object\n * @returns - True if it is a non-null, non-array, non-File object\n */\nexport default function isObject(thing: any) {\n  if (typeof File !== 'undefined' && thing instanceof File) {\n    return false;\n  }\n  if (typeof Date !== 'undefined' && thing instanceof Date) {\n    return false;\n  }\n  return typeof thing === 'object' && thing !== null && !Array.isArray(thing);\n}\n", "import isObject from './isObject';\nimport { RJSFSchema, StrictRJSFSchema } from './types';\n\n/** Checks the schema to see if it is allowing additional items, by verifying that `schema.additionalItems` is an\n * object. The user is warned in the console if `schema.additionalItems` has the value `true`.\n *\n * @param schema - The schema object to check\n * @returns - True if additional items is allowed, otherwise false\n */\nexport default function allowAdditionalItems<S extends StrictRJSFSchema = RJSFSchema>(schema: S) {\n  if (schema.additionalItems === true) {\n    console.warn('additionalItems=true is currently not supported');\n  }\n  return isObject(schema.additionalItems);\n}\n", "/** Attempts to convert the string into a number. If an empty string is provided, then `undefined` is returned. If a\n * `null` is provided, it is returned. If the string ends in a `.` then the string is returned because the user may be\n * in the middle of typing a float number. If a number ends in a pattern like `.0`, `.20`, `.030`, string is returned\n * because the user may be typing number that will end in a non-zero digit. Otherwise, the string is wrapped by\n * `Number()` and if that result is not `NaN`, that number will be returned, otherwise the string `value` will be.\n *\n * @param value - The string or null value to convert to a number\n * @returns - The `value` converted to a number when appropriate, otherwise the `value`\n */\nexport default function asNumber(value: string | null) {\n  if (value === '') {\n    return undefined;\n  }\n  if (value === null) {\n    return null;\n  }\n  if (/\\.$/.test(value)) {\n    // '3.' can't really be considered a number even if it parses in js. The\n    // user is most likely entering a float.\n    return value;\n  }\n  if (/\\.0$/.test(value)) {\n    // we need to return this as a string here, to allow for input like 3.07\n    return value;\n  }\n\n  if (/\\.\\d*0$/.test(value)) {\n    // It's a number, that's cool - but we need it as a string so it doesn't screw\n    // with the user when entering dollar amounts or other values (such as those with\n    // specific precision or number of significant digits)\n    return value;\n  }\n\n  const n = Number(value);\n  const valid = typeof n === 'number' && !Number.isNaN(n);\n\n  return valid ? n : value;\n}\n", "/** Below are the list of all the keys into various elements of a RJSFSchema or UiSchema that are used by the various\n * utility functions. In addition to those keys, there are the special `ADDITIONAL_PROPERTY_FLAG` and\n * `RJSF_ADDITIONAL_PROPERTIES_FLAG` flags that is added to a schema under certain conditions by the `retrieveSchema()`\n * utility.\n */\nexport const ADDITIONAL_PROPERTY_FLAG = '__additional_property';\nexport const ADDITIONAL_PROPERTIES_KEY = 'additionalProperties';\nexport const ALL_OF_KEY = 'allOf';\nexport const ANY_OF_KEY = 'anyOf';\nexport const CONST_KEY = 'const';\nexport const DEFAULT_KEY = 'default';\nexport const DEFINITIONS_KEY = 'definitions';\nexport const DEPENDENCIES_KEY = 'dependencies';\nexport const ENUM_KEY = 'enum';\nexport const ERRORS_KEY = '__errors';\nexport const ID_KEY = '$id';\nexport const IF_KEY = 'if';\nexport const ITEMS_KEY = 'items';\nexport const JUNK_OPTION_ID = '_$junk_option_schema_id$_';\nexport const NAME_KEY = '$name';\nexport const ONE_OF_KEY = 'oneOf';\nexport const PROPERTIES_KEY = 'properties';\nexport const REQUIRED_KEY = 'required';\nexport const SUBMIT_BTN_OPTIONS_KEY = 'submitButtonOptions';\nexport const REF_KEY = '$ref';\n/**\n * @deprecated Replace with correctly spelled constant `RJSF_ADDITIONAL_PROPERTIES_FLAG`\n */\nexport const RJSF_ADDITONAL_PROPERTIES_FLAG = '__rjsf_additionalProperties';\nexport const RJSF_ADDITIONAL_PROPERTIES_FLAG = '__rjsf_additionalProperties';\nexport const ROOT_SCHEMA_PREFIX = '__rjsf_rootSchema';\nexport const UI_FIELD_KEY = 'ui:field';\nexport const UI_WIDGET_KEY = 'ui:widget';\nexport const UI_OPTIONS_KEY = 'ui:options';\nexport const UI_GLOBAL_OPTIONS_KEY = 'ui:globalOptions';\n", "import { UI_OPTIONS_KEY, UI_WIDGET_KEY } from './constants';\nimport isObject from './isObject';\nimport { FormContextType, GlobalUISchemaOptions, RJSFSchema, StrictRJSFSchema, UIOptionsType, UiSchema } from './types';\n\n/** Get all passed options from ui:options, and ui:<optionName>, returning them in an object with the `ui:`\n * stripped off. Any `globalOptions` will always be returned, unless they are overridden by options in the `uiSchema`.\n *\n * @param [uiSchema={}] - The UI Schema from which to get any `ui:xxx` options\n * @param [globalOptions={}] - The optional Global UI Schema from which to get any fallback `xxx` options\n * @returns - An object containing all the `ui:xxx` options with the `ui:` stripped off along with all `globalOptions`\n */\nexport default function getUiOptions<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  uiSchema: UiSchema<T, S, F> = {},\n  globalOptions: GlobalUISchemaOptions = {}\n): UIOptionsType<T, S, F> {\n  return Object.keys(uiSchema)\n    .filter((key) => key.indexOf('ui:') === 0)\n    .reduce(\n      (options, key) => {\n        const value = uiSchema[key];\n        if (key === UI_WIDGET_KEY && isObject(value)) {\n          console.error('Setting options via ui:widget object is no longer supported, use ui:options instead');\n          return options;\n        }\n        if (key === UI_OPTIONS_KEY && isObject(value)) {\n          return { ...options, ...value };\n        }\n        return { ...options, [key.substring(3)]: value };\n      },\n      { ...globalOptions }\n    );\n}\n", "import { FormContextType, RJSFSchema, StrictRJSFSchema, UiSchema } from './types';\nimport getUiOptions from './getUiOptions';\n\n/** Checks whether the field described by `schema`, having the `uiSchema` and `formData` supports expanding. The UI for\n * the field can expand if it has additional properties, is not forced as non-expandable by the `uiSchema` and the\n * `formData` object doesn't already have `schema.maxProperties` elements.\n *\n * @param schema - The schema for the field that is being checked\n * @param [uiSchema={}] - The uiSchema for the field\n * @param [formData] - The formData for the field\n * @returns - True if the schema element has additionalProperties, is expandable, and not at the maxProperties limit\n */\nexport default function canExpand<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  schema: RJSFSchema,\n  uiSchema: UiSchema<T, S, F> = {},\n  formData?: T\n) {\n  if (!schema.additionalProperties) {\n    return false;\n  }\n  const { expandable = true } = getUiOptions<T, S, F>(uiSchema);\n  if (expandable === false) {\n    return expandable;\n  }\n  // if ui:options.expandable was not explicitly set to false, we can add\n  // another property if we have not exceeded maxProperties yet\n  if (schema.maxProperties !== undefined && formData) {\n    return Object.keys(formData).length < schema.maxProperties;\n  }\n  return true;\n}\n", "/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n", "var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n", "var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n", "var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n", "/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n", "var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n", "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n", "var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n", "import isPlainObject from 'lodash/isPlainObject';\n\nimport { ERRORS_KEY } from './constants';\nimport { FieldValidation, FormValidation, GenericObjectType } from './types';\n\n/** Given a `formData` object, recursively creates a `FormValidation` error handling structure around it\n *\n * @param formData - The form data around which the error handler is created\n * @returns - A `FormValidation` object based on the `formData` structure\n */\nexport default function createErrorHandler<T = any>(formData: T): FormValidation<T> {\n  const handler: FieldValidation = {\n    // We store the list of errors for this node in a property named __errors\n    // to avoid name collision with a possible sub schema field named\n    // 'errors' (see `utils.toErrorSchema`).\n    [ERRORS_KEY]: [],\n    addError(message: string) {\n      this[ERRORS_KEY]!.push(message);\n    },\n  };\n  if (Array.isArray(formData)) {\n    return formData.reduce((acc, value, key) => {\n      return { ...acc, [key]: createErrorHandler(value) };\n    }, handler);\n  }\n  if (isPlainObject(formData)) {\n    const formObject: GenericObjectType = formData as GenericObjectType;\n    return Object.keys(formObject).reduce((acc, key) => {\n      return { ...acc, [key]: createErrorHandler(formObject[key]) };\n    }, handler as FormValidation<T>);\n  }\n  return handler as FormValidation<T>;\n}\n", "/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n", "/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n", "var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n", "var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n", "var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n", "/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n", "/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n", "/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n", "/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n", "var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n", "var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n", "/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n", "var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n", "/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n", "var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n", "var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n", "var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n", "/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n", "var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n", "var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n", "/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n", "var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n", "var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n", "var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n", "var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n", "/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n", "/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n", "var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n", "/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n", "/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n", "var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n", "var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n", "/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n", "/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n", "var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n", "/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n", "/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n", "var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n", "/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n", "/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n", "var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n", "/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n", "var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n", "/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n", "var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n", "var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n", "/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n", "var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n", "var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n", "var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n", "var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n", "var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n", "var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n", "var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n", "var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n", "var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n", "var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n", "var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n", "var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * This method is like `_.isEqual` except that it accepts `customizer` which\n * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n * are handled by the method instead. The `customizer` is invoked with up to\n * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * function isGreeting(value) {\n *   return /^h(?:i|ello)$/.test(value);\n * }\n *\n * function customizer(objValue, othValue) {\n *   if (isGreeting(objValue) && isGreeting(othValue)) {\n *     return true;\n *   }\n * }\n *\n * var array = ['hello', 'goodbye'];\n * var other = ['hi', 'goodbye'];\n *\n * _.isEqualWith(array, other, customizer);\n * // => true\n */\nfunction isEqualWith(value, other, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  var result = customizer ? customizer(value, other) : undefined;\n  return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n}\n\nmodule.exports = isEqualWith;\n", "import isEqualWith from 'lodash/isEqualWith';\n\n/** Implements a deep equals using the `lodash.isEqualWith` function, that provides a customized comparator that\n * assumes all functions are equivalent.\n *\n * @param a - The first element to compare\n * @param b - The second element to compare\n * @returns - True if the `a` and `b` are deeply equal, false otherwise\n */\nexport default function deepEquals(a: any, b: any): boolean {\n  return isEqualWith(a, b, (obj: any, other: any) => {\n    if (typeof obj === 'function' && typeof other === 'function') {\n      // Assume all functions are equivalent\n      // see https://github.com/rjsf-team/react-jsonschema-form/issues/255\n      return true;\n    }\n    return undefined; // fallback to default isEquals behavior\n  });\n}\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n", "var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n", "var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n", "var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n", "var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n", "/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n", "var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n", "var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n", "var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n", "var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n", "var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n", "var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n", "var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n", "var hasExcape = /~/\nvar escapeMatcher = /~[01]/g\nfunction escapeReplacer (m) {\n  switch (m) {\n    case '~1': return '/'\n    case '~0': return '~'\n  }\n  throw new Error('Invalid tilde escape: ' + m)\n}\n\nfunction untilde (str) {\n  if (!hasExcape.test(str)) return str\n  return str.replace(escapeMatcher, escapeReplacer)\n}\n\nfunction setter (obj, pointer, value) {\n  var part\n  var hasNextPart\n\n  for (var p = 1, len = pointer.length; p < len;) {\n    if (pointer[p] === 'constructor' || pointer[p] === 'prototype' || pointer[p] === '__proto__') return obj\n\n    part = untilde(pointer[p++])\n    hasNextPart = len > p\n\n    if (typeof obj[part] === 'undefined') {\n      // support setting of /-\n      if (Array.isArray(obj) && part === '-') {\n        part = obj.length\n      }\n\n      // support nested objects/array when setting values\n      if (hasNextPart) {\n        if ((pointer[p] !== '' && pointer[p] < Infinity) || pointer[p] === '-') obj[part] = []\n        else obj[part] = {}\n      }\n    }\n\n    if (!hasNextPart) break\n    obj = obj[part]\n  }\n\n  var oldValue = obj[part]\n  if (value === undefined) delete obj[part]\n  else obj[part] = value\n  return oldValue\n}\n\nfunction compilePointer (pointer) {\n  if (typeof pointer === 'string') {\n    pointer = pointer.split('/')\n    if (pointer[0] === '') return pointer\n    throw new Error('Invalid JSON pointer.')\n  } else if (Array.isArray(pointer)) {\n    for (const part of pointer) {\n      if (typeof part !== 'string' && typeof part !== 'number') {\n        throw new Error('Invalid JSON pointer. Must be of type string or number.')\n      }\n    }\n    return pointer\n  }\n\n  throw new Error('Invalid JSON pointer.')\n}\n\nfunction get (obj, pointer) {\n  if (typeof obj !== 'object') throw new Error('Invalid input object.')\n  pointer = compilePointer(pointer)\n  var len = pointer.length\n  if (len === 1) return obj\n\n  for (var p = 1; p < len;) {\n    obj = obj[untilde(pointer[p++])]\n    if (len === p) return obj\n    if (typeof obj !== 'object' || obj === null) return undefined\n  }\n}\n\nfunction set (obj, pointer, value) {\n  if (typeof obj !== 'object') throw new Error('Invalid input object.')\n  pointer = compilePointer(pointer)\n  if (pointer.length === 0) throw new Error('Invalid JSON pointer for set.')\n  return setter(obj, pointer, value)\n}\n\nfunction compile (pointer) {\n  var compiled = compilePointer(pointer)\n  return {\n    get: function (object) {\n      return get(object, compiled)\n    },\n    set: function (object, value) {\n      return set(object, compiled, value)\n    }\n  }\n}\n\nexports.get = get\nexports.set = set\nexports.compile = compile\n", "/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n", "var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n", "var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n", "var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n", "var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n", "var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n", "/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n", "var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n", "var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n", "var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n", "var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n", "/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n", "var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n", "var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n", "var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n", "var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n", "var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n", "var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n", "/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n", "var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n", "var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n", "var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n", "var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n", "var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n", "var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n", "var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n", "var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n", "var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n", "var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n", "/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n", "/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n", "var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n", "var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n", "var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n", "var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n", "var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n", "var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n", "/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n", "var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n", "/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n", "/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n", "var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n", "/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n", "var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n", "var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n", "var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n", "import jsonpointer from 'jsonpointer';\nimport omit from 'lodash/omit';\n\nimport { REF_KEY } from './constants';\nimport { GenericObjectType, RJSFSchema, StrictRJSFSchema } from './types';\n\n/** Splits out the value at the `key` in `object` from the `object`, returning an array that contains in the first\n * location, the `object` minus the `key: value` and in the second location the `value`.\n *\n * @param key - The key from the object to extract\n * @param object - The object from which to extract the element\n * @returns - An array with the first value being the object minus the `key` element and the second element being the\n *      value from `object[key]`\n */\nexport function splitKeyElementFromObject(key: string, object: GenericObjectType) {\n  const value = object[key];\n  const remaining = omit(object, [key]);\n  return [remaining, value];\n}\n\n/** Given the name of a `$ref` from within a schema, using the `rootSchema`, recursively look up and return the\n * sub-schema using the path provided by that reference. If `#` is not the first character of the reference, the path\n * does not exist in the schema, or the reference resolves circularly back to itself, then throw an Error.\n * Otherwise return the sub-schema. Also deals with nested `$ref`s in the sub-schema.\n *\n * @param $ref - The ref string for which the schema definition is desired\n * @param [rootSchema={}] - The root schema in which to search for the definition\n * @param recurseList - List of $refs already resolved to prevent recursion\n * @returns - The sub-schema within the `rootSchema` which matches the `$ref` if it exists\n * @throws - Error indicating that no schema for that reference could be resolved\n */\nexport function findSchemaDefinitionRecursive<S extends StrictRJSFSchema = RJSFSchema>(\n  $ref?: string,\n  rootSchema: S = {} as S,\n  recurseList: string[] = []\n): S {\n  const ref = $ref || '';\n  let decodedRef;\n  if (ref.startsWith('#')) {\n    // Decode URI fragment representation.\n    decodedRef = decodeURIComponent(ref.substring(1));\n  } else {\n    throw new Error(`Could not find a definition for ${$ref}.`);\n  }\n  const current: S = jsonpointer.get(rootSchema, decodedRef);\n  if (current === undefined) {\n    throw new Error(`Could not find a definition for ${$ref}.`);\n  }\n  const nextRef = current[REF_KEY];\n  if (nextRef) {\n    // Check for circular references.\n    if (recurseList.includes(nextRef)) {\n      if (recurseList.length === 1) {\n        throw new Error(`Definition for ${$ref} is a circular reference`);\n      }\n      const [firstRef, ...restRefs] = recurseList;\n      const circularPath = [...restRefs, ref, firstRef].join(' -> ');\n      throw new Error(`Definition for ${firstRef} contains a circular reference through ${circularPath}`);\n    }\n    const [remaining, theRef] = splitKeyElementFromObject(REF_KEY, current);\n    const subSchema = findSchemaDefinitionRecursive<S>(theRef, rootSchema, [...recurseList, ref]);\n    if (Object.keys(remaining).length > 0) {\n      return { ...remaining, ...subSchema };\n    }\n    return subSchema;\n  }\n  return current;\n}\n\n/** Given the name of a `$ref` from within a schema, using the `rootSchema`, look up and return the sub-schema using the\n * path provided by that reference. If `#` is not the first character of the reference, the path does not exist in\n * the schema, or the reference resolves circularly back to itself, then throw an Error. Otherwise return the\n * sub-schema. Also deals with nested `$ref`s in the sub-schema.\n *\n * @param $ref - The ref string for which the schema definition is desired\n * @param [rootSchema={}] - The root schema in which to search for the definition\n * @returns - The sub-schema within the `rootSchema` which matches the `$ref` if it exists\n * @throws - Error indicating that no schema for that reference could be resolved\n */\nexport default function findSchemaDefinition<S extends StrictRJSFSchema = RJSFSchema>(\n  $ref?: string,\n  rootSchema: S = {} as S\n): S {\n  const recurseList: string[] = [];\n  return findSchemaDefinitionRecursive($ref, rootSchema, recurseList);\n}\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nmodule.exports = baseHas;\n", "var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n", "var baseHas = require('./_baseHas'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nmodule.exports = has;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n", "var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n", "/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n", "/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n", "var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n", "var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n", "var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n", "var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n", "var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n", "var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n", "var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n", "/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n", "var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n", "/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n", "var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n", "var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n", "/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n", "var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n", "var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n", "var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n", "/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initAccum\n      ? (initAccum = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseReduce;\n", "var arrayReduce = require('./_arrayReduce'),\n    baseEach = require('./_baseEach'),\n    baseIteratee = require('./_baseIteratee'),\n    baseReduce = require('./_baseReduce'),\n    isArray = require('./isArray');\n\n/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` thru `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not given, the first element of `collection` is used as the initial\n * value. The iteratee is invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n * and `sortBy`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduceRight\n * @example\n *\n * _.reduce([1, 2], function(sum, n) {\n *   return sum + n;\n * }, 0);\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n *   return result;\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n */\nfunction reduce(collection, iteratee, accumulator) {\n  var func = isArray(collection) ? arrayReduce : baseReduce,\n      initAccum = arguments.length < 3;\n\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n}\n\nmodule.exports = reduce;\n", "var identity = require('./identity');\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nmodule.exports = castFunction;\n", "/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n", "var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n", "var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n", "var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n", "var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n", "var baseTimes = require('./_baseTimes'),\n    castFunction = require('./_castFunction'),\n    toInteger = require('./toInteger');\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Invokes the iteratee `n` times, returning an array of the results of\n * each invocation. The iteratee is invoked with one argument; (index).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.times(3, String);\n * // => ['0', '1', '2']\n *\n *  _.times(4, _.constant(0));\n * // => [0, 0, 0, 0]\n */\nfunction times(n, iteratee) {\n  n = toInteger(n);\n  if (n < 1 || n > MAX_SAFE_INTEGER) {\n    return [];\n  }\n  var index = MAX_ARRAY_LENGTH,\n      length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n  iteratee = castFunction(iteratee);\n  n -= MAX_ARRAY_LENGTH;\n\n  var result = baseTimes(length, iteratee);\n  while (++index < n) {\n    iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = times;\n", "import get from 'lodash/get';\nimport { PROPERTIES_KEY } from './constants';\nimport { RJSFSchema, StrictRJSFSchema } from './types';\n\n/** Compares the value of `discriminatorField` within `formData` against the value of `discriminatorField` within schema for each `option`.\n * Returns index of first `option` whose discriminator matches formData. Returns `undefined` if there is no match.\n * This function does not work with discriminators of `\"type\": \"object\"` and `\"type\": \"array\"`\n *\n * @param formData - The current formData, if any, used to figure out a match\n * @param options - The list of options to find a matching options from\n * @param [discriminatorField] - The optional name of the field within the options object whose value is used to\n *          determine which option is selected\n * @returns - The index of the matched option or undefined if there is no match\n */\nexport default function getOptionMatchingSimpleDiscriminator<T = any, S extends StrictRJSFSchema = RJSFSchema>(\n  formData: T | undefined,\n  options: S[],\n  discriminatorField?: string\n): number | undefined {\n  if (formData && discriminatorField) {\n    const value = get(formData, discriminatorField);\n\n    if (value === undefined) {\n      return;\n    }\n\n    for (let i = 0; i < options.length; i++) {\n      const option = options[i];\n      const discriminator = get(option, [PROPERTIES_KEY, discriminatorField], {});\n\n      if (discriminator.type === 'object' || discriminator.type === 'array') {\n        continue;\n      }\n\n      if (discriminator.const === value) {\n        return i;\n      }\n\n      if (discriminator.enum?.includes(value)) {\n        return i;\n      }\n    }\n  }\n\n  return;\n}\n", "import get from 'lodash/get';\nimport has from 'lodash/has';\nimport isNumber from 'lodash/isNumber';\n\nimport { PROPERTIES_KEY } from '../constants';\nimport { FormContextType, RJSFSchema, StrictRJSFSchema, ValidatorType } from '../types';\nimport getOptionMatchingSimpleDiscriminator from '../getOptionMatchingSimpleDiscriminator';\n\n/** Given the `formData` and list of `options`, attempts to find the index of the option that best matches the data.\n * Deprecated, use `getFirstMatchingOption()` instead.\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be used when necessary\n * @param formData - The current formData, if any, used to figure out a match\n * @param options - The list of options to find a matching options from\n * @param rootSchema - The root schema, used to primarily to look up `$ref`s\n * @param [discriminatorField] - The optional name of the field within the options object whose value is used to\n *          determine which option is selected\n * @returns - The index of the matched option or 0 if none is available\n * @deprecated\n */\nexport default function getMatchingOption<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(\n  validator: ValidatorType<T, S, F>,\n  formData: T | undefined,\n  options: S[],\n  rootSchema: S,\n  discriminatorField?: string\n): number {\n  // For performance, skip validating subschemas if formData is undefined. We just\n  // want to get the first option in that case.\n  if (formData === undefined) {\n    return 0;\n  }\n\n  const simpleDiscriminatorMatch = getOptionMatchingSimpleDiscriminator(formData, options, discriminatorField);\n  if (isNumber(simpleDiscriminatorMatch)) {\n    return simpleDiscriminatorMatch;\n  }\n\n  for (let i = 0; i < options.length; i++) {\n    const option = options[i];\n\n    // If we have a discriminator field, then we will use this to make the determination\n    if (discriminatorField && has(option, [PROPERTIES_KEY, discriminatorField])) {\n      const value = get(formData, discriminatorField);\n      const discriminator = get(option, [PROPERTIES_KEY, discriminatorField], {});\n      if (validator.isValid(discriminator, value, rootSchema)) {\n        return i;\n      }\n    } else if (option[PROPERTIES_KEY]) {\n      // If the schema describes an object then we need to add slightly more\n      // strict matching to the schema, because unless the schema uses the\n      // \"requires\" keyword, an object will match the schema as long as it\n      // doesn't have matching keys with a conflicting type. To do this we use an\n      // \"anyOf\" with an array of requires. This augmentation expresses that the\n      // schema should match if any of the keys in the schema are present on the\n      // object and pass validation.\n      //\n      // Create an \"anyOf\" schema that requires at least one of the keys in the\n      // \"properties\" object\n      const requiresAnyOf = {\n        anyOf: Object.keys(option[PROPERTIES_KEY]).map((key) => ({\n          required: [key],\n        })),\n      };\n\n      let augmentedSchema;\n\n      // If the \"anyOf\" keyword already exists, wrap the augmentation in an \"allOf\"\n      if (option.anyOf) {\n        // Create a shallow clone of the option\n        const { ...shallowClone } = option;\n\n        if (!shallowClone.allOf) {\n          shallowClone.allOf = [];\n        } else {\n          // If \"allOf\" already exists, shallow clone the array\n          shallowClone.allOf = shallowClone.allOf.slice();\n        }\n\n        shallowClone.allOf.push(requiresAnyOf);\n\n        augmentedSchema = shallowClone;\n      } else {\n        augmentedSchema = Object.assign({}, option, requiresAnyOf);\n      }\n\n      // Remove the \"required\" field as it's likely that not all fields have\n      // been filled in yet, which will mean that the schema is not valid\n      delete augmentedSchema.required;\n\n      if (validator.isValid(augmentedSchema, formData, rootSchema)) {\n        return i;\n      }\n    } else if (validator.isValid(option, formData, rootSchema)) {\n      return i;\n    }\n  }\n  return 0;\n}\n", "import getMatchingOption from './getMatchingOption';\nimport { FormContextType, RJSFSchema, StrictRJSFSchema, ValidatorType } from '../types';\n\n/** Given the `formData` and list of `options`, attempts to find the index of the first option that matches the data.\n * Always returns the first option if there is nothing that matches.\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be used when necessary\n * @param formData - The current formData, if any, used to figure out a match\n * @param options - The list of options to find a matching options from\n * @param rootSchema - The root schema, used to primarily to look up `$ref`s\n * @param [discriminatorField] - The optional name of the field within the options object whose value is used to\n *          determine which option is selected\n * @returns - The index of the first matched option or 0 if none is available\n */\nexport default function getFirstMatchingOption<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(\n  validator: ValidatorType<T, S, F>,\n  formData: T | undefined,\n  options: S[],\n  rootSchema: S,\n  discriminatorField?: string\n): number {\n  return getMatchingOption<T, S, F>(validator, formData, options, rootSchema, discriminatorField);\n}\n", "var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n", "var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n", "var baseSet = require('./_baseSet');\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nmodule.exports = set;\n", "var arrayEach = require('./_arrayEach'),\n    baseCreate = require('./_baseCreate'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee'),\n    getPrototype = require('./_getPrototype'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isTypedArray = require('./isTypedArray');\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n  iteratee = baseIteratee(iteratee, 4);\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor : [];\n    }\n    else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    }\n    else {\n      accumulator = {};\n    }\n  }\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = transform;\n", "var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n", "var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n", "/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nmodule.exports = safeGet;\n", "var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n", "var assignMergeValue = require('./_assignMergeValue'),\n    cloneBuffer = require('./_cloneBuffer'),\n    cloneTypedArray = require('./_cloneTypedArray'),\n    copyArray = require('./_copyArray'),\n    initCloneObject = require('./_initCloneObject'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isPlainObject = require('./isPlainObject'),\n    isTypedArray = require('./isTypedArray'),\n    safeGet = require('./_safeGet'),\n    toPlainObject = require('./toPlainObject');\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nmodule.exports = baseMergeDeep;\n", "var Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn'),\n    safeGet = require('./_safeGet');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n", "var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n", "var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n", "var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n", "var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nmodule.exports = merge;\n", "var baseFlatten = require('./_baseFlatten');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Recursively flattens `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flattenDeep([1, [2, [3, [4]], 5]]);\n * // => [1, 2, 3, 4, 5]\n */\nfunction flattenDeep(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, INFINITY) : [];\n}\n\nmodule.exports = flattenDeep;\n", "/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n", "/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n", "/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n", "var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n", "var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n", "/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n", "/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n", "var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n", "var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n", "var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n", "var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n", "var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n", "/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n", "var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n", "var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n", "var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n", "var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n", "var baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `comparator` which\n * is invoked to compare elements of `array`. The order of result values is\n * determined by the order they occur in the array.The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.uniqWith(objects, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n */\nfunction uniqWith(array, comparator) {\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n}\n\nmodule.exports = uniqWith;\n", "var baseRest = require('./_baseRest'),\n    eq = require('./eq'),\n    isIterateeCall = require('./_isIterateeCall'),\n    keysIn = require('./keysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nmodule.exports = defaults;\n", "var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n", "var isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nmodule.exports = castArrayLikeObject;\n", "var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.intersection` except that it accepts `comparator`\n * which is invoked to compare elements of `arrays`. The order and references\n * of result values are determined by the first array. The comparator is\n * invoked with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.intersectionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }]\n */\nvar intersectionWith = baseRest(function(arrays) {\n  var comparator = last(arrays),\n      mapped = arrayMap(arrays, castArrayLikeObject);\n\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  if (comparator) {\n    mapped.pop();\n  }\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped, undefined, comparator)\n    : [];\n});\n\nmodule.exports = intersectionWith;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && baseGetTag(value) == boolTag);\n}\n\nmodule.exports = isBoolean;\n", "var isEqual = require('lodash/isEqual')\nvar sortBy = require('lodash/sortBy')\nvar uniq = require('lodash/uniq')\nvar uniqWith = require('lodash/uniqWith')\nvar defaults = require('lodash/defaults')\nvar intersectionWith = require('lodash/intersectionWith')\nvar isPlainObject = require('lodash/isPlainObject')\nvar isBoolean = require('lodash/isBoolean')\n\nvar normalizeArray = val => Array.isArray(val)\n  ? val : [val]\nvar undef = val => val === undefined\nvar keys = obj => isPlainObject(obj) || Array.isArray(obj) ? Object.keys(obj) : []\nvar has = (obj, key) => obj.hasOwnProperty(key)\nvar stringArray = arr => sortBy(uniq(arr))\nvar undefEmpty = val => undef(val) || (Array.isArray(val) && val.length === 0)\nvar keyValEqual = (a, b, key, compare) => b && has(b, key) && a && has(a, key) && compare(a[key], b[key])\nvar undefAndZero = (a, b) => (undef(a) && b === 0) || (undef(b) && a === 0) || isEqual(a, b)\nvar falseUndefined = (a, b) => (undef(a) && b === false) || (undef(b) && a === false) || isEqual(a, b)\nvar emptySchema = schema => undef(schema) || isEqual(schema, {}) || schema === true\nvar emptyObjUndef = schema => undef(schema) || isEqual(schema, {})\nvar isSchema = val => undef(val) || isPlainObject(val) || val === true || val === false\n\nfunction undefArrayEqual(a, b) {\n  if (undefEmpty(a) && undefEmpty(b)) {\n    return true\n  } else {\n    return isEqual(stringArray(a), stringArray(b))\n  }\n}\n\nfunction unsortedNormalizedArray(a, b) {\n  a = normalizeArray(a)\n  b = normalizeArray(b)\n  return isEqual(stringArray(a), stringArray(b))\n}\n\nfunction schemaGroup(a, b, key, compare) {\n  var allProps = uniq(keys(a).concat(keys(b)))\n  if (emptyObjUndef(a) && emptyObjUndef(b)) {\n    return true\n  } else if (emptyObjUndef(a) && keys(b).length) {\n    return false\n  } else if (emptyObjUndef(b) && keys(a).length) {\n    return false\n  }\n\n  return allProps.every(function(key) {\n    var aVal = a[key]\n    var bVal = b[key]\n    if (Array.isArray(aVal) && Array.isArray(bVal)) {\n      return isEqual(stringArray(a), stringArray(b))\n    } else if (Array.isArray(aVal) && !Array.isArray(bVal)) {\n      return false\n    } else if (Array.isArray(bVal) && !Array.isArray(aVal)) {\n      return false\n    }\n    return keyValEqual(a, b, key, compare)\n  })\n}\n\nfunction items(a, b, key, compare) {\n  if (isPlainObject(a) && isPlainObject(b)) {\n    return compare(a, b)\n  } else if (Array.isArray(a) && Array.isArray(b)) {\n    return schemaGroup(a, b, key, compare)\n  } else {\n    return isEqual(a, b)\n  }\n}\n\nfunction unsortedArray(a, b, key, compare) {\n  var uniqueA = uniqWith(a, compare)\n  var uniqueB = uniqWith(b, compare)\n  var inter = intersectionWith(uniqueA, uniqueB, compare)\n  return inter.length === Math.max(uniqueA.length, uniqueB.length)\n}\n\nvar comparers = {\n  title: isEqual,\n  uniqueItems: falseUndefined,\n  minLength: undefAndZero,\n  minItems: undefAndZero,\n  minProperties: undefAndZero,\n  required: undefArrayEqual,\n  enum: undefArrayEqual,\n  type: unsortedNormalizedArray,\n  items: items,\n  anyOf: unsortedArray,\n  allOf: unsortedArray,\n  oneOf: unsortedArray,\n  properties: schemaGroup,\n  patternProperties: schemaGroup,\n  dependencies: schemaGroup\n}\n\nvar acceptsUndefined = [\n  'properties',\n  'patternProperties',\n  'dependencies',\n  'uniqueItems',\n  'minLength',\n  'minItems',\n  'minProperties',\n  'required'\n]\n\nvar schemaProps = ['additionalProperties', 'additionalItems', 'contains', 'propertyNames', 'not']\n\nfunction compare(a, b, options) {\n  options = defaults(options, {\n    ignore: []\n  })\n\n  if (emptySchema(a) && emptySchema(b)) {\n    return true\n  }\n\n  if (!isSchema(a) || !isSchema(b)) {\n    throw new Error('Either of the values are not a JSON schema.')\n  }\n  if (a === b) {\n    return true\n  }\n\n  if (isBoolean(a) && isBoolean(b)) {\n    return a === b\n  }\n\n  if ((a === undefined && b === false) || (b === undefined && a === false)) {\n    return false\n  }\n\n  if ((undef(a) && !undef(b)) || (!undef(a) && undef(b))) {\n    return false\n  }\n\n  var allKeys = uniq(Object.keys(a).concat(Object.keys(b)))\n\n  if (options.ignore.length) {\n    allKeys = allKeys.filter(k => options.ignore.indexOf(k) === -1)\n  }\n\n  if (!allKeys.length) {\n    return true\n  }\n\n  function innerCompare(a, b) {\n    return compare(a, b, options)\n  }\n\n  return allKeys.every(function(key) {\n    var aValue = a[key]\n    var bValue = b[key]\n\n    if (schemaProps.indexOf(key) !== -1) {\n      return compare(aValue, bValue, options)\n    }\n\n    var comparer = comparers[key]\n    if (!comparer) {\n      comparer = isEqual\n    }\n\n    // do simple lodash check first\n    if (isEqual(aValue, bValue)) {\n      return true\n    }\n\n    if (acceptsUndefined.indexOf(key) === -1) {\n      if ((!has(a, key) && has(b, key)) || (has(a, key) && !has(b, key))) {\n        return aValue === bValue\n      }\n    }\n\n    var result = comparer(aValue, bValue, key, innerCompare)\n    if (!isBoolean(result)) {\n      throw new Error('Comparer must return true or false')\n    }\n    return result\n  })\n}\n\nmodule.exports = compare\n", "'use strict';\n\n/**\n* FUNCTION: isArray( value )\n*\tValidates if a value is an array.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is an array\n*/\nfunction isArray( value ) {\n\treturn Object.prototype.toString.call( value ) === '[object Array]';\n} // end FUNCTION isArray()\n\n// EXPORTS //\n\nmodule.exports = Array.isArray || isArray;\n", "/**\n*\n*\tVALIDATE: number\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a number.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: isNumber( value )\n*\tValidates if a value is a number.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is a number\n*/\nfunction isNumber( value ) {\n\treturn ( typeof value === 'number' || Object.prototype.toString.call( value ) === '[object Number]' ) && value.valueOf() === value.valueOf();\n} // end FUNCTION isNumber()\n\n\n// EXPORTS //\n\nmodule.exports = isNumber;\n", "/**\n*\n*\tVALIDATE: integer\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is an integer.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( 'validate.io-number' );\n\n\n// ISINTEGER //\n\n/**\n* FUNCTION: isInteger( value )\n*\tValidates if a value is an integer.\n*\n* @param {Number} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is an integer\n*/\nfunction isInteger( value ) {\n\treturn isNumber( value ) && value%1 === 0;\n} // end FUNCTION isInteger()\n\n\n// EXPORTS //\n\nmodule.exports = isInteger;\n", "/**\n*\n*\tVALIDATE: integer-array\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is an integer array.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2015. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2015.\n*\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisInteger = require( 'validate.io-integer' );\n\n\n// IS INTEGER ARRAY //\n\n/**\n* FUNCTION: isIntegerArray( value )\n*\tValidates if a value is an integer array.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating if a value is an integer array\n*/\nfunction isIntegerArray( value ) {\n\tvar len;\n\tif ( !isArray( value ) ) {\n\t\treturn false;\n\t}\n\tlen = value.length;\n\tif ( !len ) {\n\t\treturn false;\n\t}\n\tfor ( var i = 0; i < len; i++ ) {\n\t\tif ( !isInteger( value[i] ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n} // end FUNCTION isIntegerArray()\n\n\n// EXPORTS //\n\nmodule.exports = isIntegerArray;\n", "/**\n*\n*\tVALIDATE: function\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is a function.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: isFunction( value )\n*\tValidates if a value is a function.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is a function\n*/\nfunction isFunction( value ) {\n\treturn ( typeof value === 'function' );\n} // end FUNCTION isFunction()\n\n\n// EXPORTS //\n\nmodule.exports = isFunction;\n", "'use strict';\n\n// MODULES //\n\nvar isArray = require( 'validate.io-array' ),\n\tisIntegerArray = require( 'validate.io-integer-array' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// VARIABLES //\n\nvar MAXINT = Math.pow( 2, 31 ) - 1;\n\n\n// FUNCTIONS //\n\n/**\n* FUNCTION: gcd( a, b )\n*\tComputes the greatest common divisor of two integers `a` and `b`, using the binary GCD algorithm.\n*\n* @param {Number} a - integer\n* @param {Number} b - integer\n* @returns {Number} greatest common divisor\n*/\nfunction gcd( a, b ) {\n\tvar k = 1,\n\t\tt;\n\t// Simple cases:\n\tif ( a === 0 ) {\n\t\treturn b;\n\t}\n\tif ( b === 0 ) {\n\t\treturn a;\n\t}\n\t// Reduce `a` and/or `b` to odd numbers and keep track of the greatest power of 2 dividing both `a` and `b`...\n\twhile ( a%2 === 0 && b%2 === 0 ) {\n\t\ta = a / 2; // right shift\n\t\tb = b / 2; // right shift\n\t\tk = k * 2; // left shift\n\t}\n\t// Reduce `a` to an odd number...\n\twhile ( a%2 === 0 ) {\n\t\ta = a / 2; // right shift\n\t}\n\t// Henceforth, `a` is always odd...\n\twhile ( b ) {\n\t\t// Remove all factors of 2 in `b`, as they are not common...\n\t\twhile ( b%2 === 0 ) {\n\t\t\tb = b / 2; // right shift\n\t\t}\n\t\t// `a` and `b` are both odd. Swap values such that `b` is the larger of the two values, and then set `b` to the difference (which is even)...\n\t\tif ( a > b ) {\n\t\t\tt = b;\n\t\t\tb = a;\n\t\t\ta = t;\n\t\t}\n\t\tb = b - a; // b=0 iff b=a\n\t}\n\t// Restore common factors of 2...\n\treturn k * a;\n} // end FUNCTION gcd()\n\n/**\n* FUNCTION: bitwise( a, b )\n*\tComputes the greatest common divisor of two integers `a` and `b`, using the binary GCD algorithm and bitwise operations.\n*\n* @param {Number} a - safe integer\n* @param {Number} b - safe integer\n* @returns {Number} greatest common divisor\n*/\nfunction bitwise( a, b ) {\n\tvar k = 0,\n\t\tt;\n\t// Simple cases:\n\tif ( a === 0 ) {\n\t\treturn b;\n\t}\n\tif ( b === 0 ) {\n\t\treturn a;\n\t}\n\t// Reduce `a` and/or `b` to odd numbers and keep track of the greatest power of 2 dividing both `a` and `b`...\n\twhile ( (a & 1) === 0 && (b & 1) === 0 ) {\n\t\ta >>>= 1; // right shift\n\t\tb >>>= 1; // right shift\n\t\tk++;\n\t}\n\t// Reduce `a` to an odd number...\n\twhile ( (a & 1) === 0 ) {\n\t\ta >>>= 1; // right shift\n\t}\n\t// Henceforth, `a` is always odd...\n\twhile ( b ) {\n\t\t// Remove all factors of 2 in `b`, as they are not common...\n\t\twhile ( (b & 1) === 0 ) {\n\t\t\tb >>>= 1; // right shift\n\t\t}\n\t\t// `a` and `b` are both odd. Swap values such that `b` is the larger of the two values, and then set `b` to the difference (which is even)...\n\t\tif ( a > b ) {\n\t\t\tt = b;\n\t\t\tb = a;\n\t\t\ta = t;\n\t\t}\n\t\tb = b - a; // b=0 iff b=a\n\t}\n\t// Restore common factors of 2...\n\treturn a << k;\n} // end FUNCTION bitwise()\n\n\n// GREATEST COMMON DIVISOR //\n\n/**\n* FUNCTION: compute( arr[, clbk] )\n*\tComputes the greatest common divisor.\n*\n* @param {Number[]|Number} arr - input array of integers\n* @param {Function|Number} [clbk] - accessor function for accessing array values\n* @returns {Number|Null} greatest common divisor or null\n*/\nfunction compute() {\n\tvar nargs = arguments.length,\n\t\targs,\n\t\tclbk,\n\t\tarr,\n\t\tlen,\n\t\ta, b,\n\t\ti;\n\n\t// Copy the input arguments to an array...\n\targs = new Array( nargs );\n\tfor ( i = 0; i < nargs; i++ ) {\n\t\targs[ i ] = arguments[ i ];\n\t}\n\t// Have we been provided with integer arguments?\n\tif ( isIntegerArray( args ) ) {\n\t\tif ( nargs === 2 ) {\n\t\t\ta = args[ 0 ];\n\t\t\tb = args[ 1 ];\n\t\t\tif ( a < 0 ) {\n\t\t\t\ta = -a;\n\t\t\t}\n\t\t\tif ( b < 0 ) {\n\t\t\t\tb = -b;\n\t\t\t}\n\t\t\tif ( a <= MAXINT && b <= MAXINT ) {\n\t\t\t\treturn bitwise( a, b );\n\t\t\t} else {\n\t\t\t\treturn gcd( a, b );\n\t\t\t}\n\t\t}\n\t\tarr = args;\n\t}\n\t// If not integers, ensure the first argument is an array...\n\telse if ( !isArray( args[ 0 ] ) ) {\n\t\tthrow new TypeError( 'gcd()::invalid input argument. Must provide an array of integers. Value: `' + args[ 0 ] + '`.' );\n\t}\n\t// Have we been provided with more than one argument? If so, ensure that the accessor argument is a function...\n\telse if ( nargs > 1 ) {\n\t\tarr = args[ 0 ];\n\t\tclbk = args[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'gcd()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\t// We have been provided an array...\n\telse {\n\t\tarr = args[ 0 ];\n\t}\n\tlen = arr.length;\n\n\t// Check if a sufficient number of values have been provided...\n\tif ( len < 2 ) {\n\t\treturn null;\n\t}\n\t// If an accessor is provided, extract the array values...\n\tif ( clbk ) {\n\t\ta = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\ta[ i ] = clbk( arr[ i ], i );\n\t\t}\n\t\tarr = a;\n\t}\n\t// Given an input array, ensure all array values are integers...\n\tif ( nargs < 3 ) {\n\t\tif ( !isIntegerArray( arr ) ) {\n\t\t\tthrow new TypeError( 'gcd()::invalid input argument. Accessed array values must be integers. Value: `' + arr + '`.' );\n\t\t}\n\t}\n\t// Convert any negative integers to positive integers...\n\tfor ( i = 0; i < len; i++ ) {\n\t\ta = arr[ i ];\n\t\tif ( a < 0 ) {\n\t\t\tarr[ i ] = -a;\n\t\t}\n\t}\n\t// Exploit the fact that the gcd is an associative function...\n\ta = arr[ 0 ];\n\tfor ( i = 1; i < len; i++ ) {\n\t\tb = arr[ i ];\n\t\tif ( b <= MAXINT && a <= MAXINT ) {\n\t\t\ta = bitwise( a, b );\n\t\t} else {\n\t\t\ta = gcd( a, b );\n\t\t}\n\t}\n\treturn a;\n} // end FUNCTION compute()\n\n\n// EXPORTS //\n\nmodule.exports = compute;\n", "'use strict';\n\n// MODULES //\n\nvar gcd = require( 'compute-gcd' ),\n\tisArray = require( 'validate.io-array' ),\n\tisIntegerArray = require( 'validate.io-integer-array' ),\n\tisFunction = require( 'validate.io-function' );\n\n\n// LEAST COMMON MULTIPLE //\n\n/**\n* FUNCTION: lcm( arr[, clbk] )\n*\tComputes the least common multiple (lcm).\n*\n* @param {Number[]|Number} arr - input array of integers\n* @param {Function|Number} [accessor] - accessor function for accessing array values\n* @returns {Number|Null} least common multiple or null\n*/\nfunction lcm() {\n\tvar nargs = arguments.length,\n\t\targs,\n\t\tclbk,\n\t\tarr,\n\t\tlen,\n\t\ta, b,\n\t\ti;\n\n\t// Copy the input arguments to an array...\n\targs = new Array( nargs );\n\tfor ( i = 0; i < nargs; i++ ) {\n\t\targs[ i ] = arguments[ i ];\n\t}\n\t// Have we been provided with integer arguments?\n\tif ( isIntegerArray( args ) ) {\n\t\tif ( nargs === 2 ) {\n\t\t\ta = args[ 0 ];\n\t\t\tb = args[ 1 ];\n\t\t\tif ( a < 0 ) {\n\t\t\t\ta = -a;\n\t\t\t}\n\t\t\tif ( b < 0 ) {\n\t\t\t\tb = -b;\n\t\t\t}\n\t\t\tif ( a === 0 || b === 0 ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn ( a/gcd(a,b) ) * b;\n\t\t}\n\t\tarr = args;\n\t}\n\t// If not integers, ensure that the first argument is an array...\n\telse if ( !isArray( args[ 0 ] ) ) {\n\t\tthrow new TypeError( 'lcm()::invalid input argument. Must provide an array of integers. Value: `' + args[ 0 ] + '`.' );\n\t}\n\t// Have we been provided with more than one argument? If so, ensure that the accessor argument is a function...\n\telse if ( nargs > 1 ) {\n\t\tarr = args[ 0 ];\n\t\tclbk = args[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( 'lcm()::invalid input argument. Accessor must be a function. Value: `' + clbk + '`.' );\n\t\t}\n\t}\n\t// We have been provided an array...\n\telse {\n\t\tarr = args[ 0 ];\n\t}\n\tlen = arr.length;\n\n\t// Check if a sufficient number of values have been provided...\n\tif ( len < 2 ) {\n\t\treturn null;\n\t}\n\t// If an accessor is provided, extract the array values...\n\tif ( clbk ) {\n\t\ta = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\ta[ i ] = clbk( arr[ i ], i );\n\t\t}\n\t\tarr = a;\n\t}\n\t// Given an input array, ensure all array values are integers...\n\tif ( nargs < 3 ) {\n\t\tif ( !isIntegerArray( arr ) ) {\n\t\t\tthrow new TypeError( 'lcm()::invalid input argument. Accessed array values must be integers. Value: `' + arr + '`.' );\n\t\t}\n\t}\n\t// Convert any negative integers to positive integers...\n\tfor ( i = 0; i < len; i++ ) {\n\t\ta = arr[ i ];\n\t\tif ( a < 0 ) {\n\t\t\tarr[ i ] = -a;\n\t\t}\n\t}\n\t// Exploit the fact that the lcm is an associative function...\n\ta = arr[ 0 ];\n\tfor ( i = 1; i < len; i++ ) {\n\t\tb = arr[ i ];\n\t\tif ( a === 0 || b === 0 ) {\n\t\t\treturn 0;\n\t\t}\n\t\ta = ( a/gcd(a,b) ) * b;\n\t}\n\treturn a;\n} // end FUNCTION lcm()\n\n\n// EXPORTS //\n\nmodule.exports = lcm;\n", "var baseMerge = require('./_baseMerge'),\n    isObject = require('./isObject');\n\n/**\n * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n * objects into destination objects that are passed thru.\n *\n * @private\n * @param {*} objValue The destination value.\n * @param {*} srcValue The source value.\n * @param {string} key The key of the property to merge.\n * @param {Object} object The parent object of `objValue`.\n * @param {Object} source The parent object of `srcValue`.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n * @returns {*} Returns the value to assign.\n */\nfunction customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n  if (isObject(objValue) && isObject(srcValue)) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, objValue);\n    baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n    stack['delete'](srcValue);\n  }\n  return objValue;\n}\n\nmodule.exports = customDefaultsMerge;\n", "var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.merge` except that it accepts `customizer` which\n * is invoked to produce the merged values of the destination and source\n * properties. If `customizer` returns `undefined`, merging is handled by the\n * method instead. The `customizer` is invoked with six arguments:\n * (objValue, srcValue, key, object, source, stack).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   if (_.isArray(objValue)) {\n *     return objValue.concat(srcValue);\n *   }\n * }\n *\n * var object = { 'a': [1], 'b': [2] };\n * var other = { 'a': [3], 'b': [4] };\n *\n * _.mergeWith(object, other, customizer);\n * // => { 'a': [1, 3], 'b': [2, 4] }\n */\nvar mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n  baseMerge(object, source, srcIndex, customizer);\n});\n\nmodule.exports = mergeWith;\n", "var apply = require('./_apply'),\n    baseRest = require('./_baseRest'),\n    customDefaultsMerge = require('./_customDefaultsMerge'),\n    mergeWith = require('./mergeWith');\n\n/**\n * This method is like `_.defaults` except that it recursively assigns\n * default properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaults\n * @example\n *\n * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n * // => { 'a': { 'b': 2, 'c': 3 } }\n */\nvar defaultsDeep = baseRest(function(args) {\n  args.push(undefined, customDefaultsMerge);\n  return apply(mergeWith, undefined, args);\n});\n\nmodule.exports = defaultsDeep;\n", "var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n", "/**\n * This function is like `baseIndexOf` except that it accepts a comparator.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOfWith(array, value, fromIndex, comparator) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (comparator(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseIndexOfWith;\n", "var arrayMap = require('./_arrayMap'),\n    baseIndexOf = require('./_baseIndexOf'),\n    baseIndexOfWith = require('./_baseIndexOfWith'),\n    baseUnary = require('./_baseUnary'),\n    copyArray = require('./_copyArray');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAllBy` without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAll(array, values, iteratee, comparator) {\n  var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n      index = -1,\n      length = values.length,\n      seen = array;\n\n  if (array === values) {\n    values = copyArray(values);\n  }\n  if (iteratee) {\n    seen = arrayMap(array, baseUnary(iteratee));\n  }\n  while (++index < length) {\n    var fromIndex = 0,\n        value = values[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n      if (seen !== array) {\n        splice.call(seen, fromIndex, 1);\n      }\n      splice.call(array, fromIndex, 1);\n    }\n  }\n  return array;\n}\n\nmodule.exports = basePullAll;\n", "var basePullAll = require('./_basePullAll');\n\n/**\n * This method is like `_.pull` except that it accepts an array of values to remove.\n *\n * **Note:** Unlike `_.difference`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pullAll(array, ['a', 'c']);\n * console.log(array);\n * // => ['b', 'b']\n */\nfunction pullAll(array, values) {\n  return (array && array.length && values && values.length)\n    ? basePullAll(array, values)\n    : array;\n}\n\nmodule.exports = pullAll;\n", "var arrayEach = require('./_arrayEach'),\n    baseEach = require('./_baseEach'),\n    castFunction = require('./_castFunction'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nmodule.exports = forEach;\n", "var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n", "var baseDifference = require('./_baseDifference'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array excluding all given values using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.pull`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...*} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.difference, _.xor\n * @example\n *\n * _.without([2, 1, 2, 3], 1, 2);\n * // => [3]\n */\nvar without = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, values)\n    : [];\n});\n\nmodule.exports = without;\n", "const flatten = require('lodash/flatten')\nconst flattenDeep = require('lodash/flattenDeep')\nconst isPlainObject = require('lodash/isPlainObject')\nconst uniq = require('lodash/uniq')\nconst uniqWith = require('lodash/uniqWith')\nconst without = require('lodash/without')\n\nfunction deleteUndefinedProps(returnObject) {\n  // cleanup empty\n  for (const prop in returnObject) {\n    if (has(returnObject, prop) && isEmptySchema(returnObject[prop])) {\n      delete returnObject[prop]\n    }\n  }\n  return returnObject\n}\n\nconst allUniqueKeys = (arr) => uniq(flattenDeep(arr.map(keys)))\nconst getValues = (schemas, key) => schemas.map(schema => schema && schema[key])\nconst has = (obj, propName) => Object.prototype.hasOwnProperty.call(obj, propName)\nconst keys = obj => {\n  if (isPlainObject(obj) || Array.isArray(obj)) {\n    return Object.keys(obj)\n  } else {\n    return []\n  }\n}\n\nconst notUndefined = (val) => val !== undefined\nconst isSchema = (val) => isPlainObject(val) || val === true || val === false\nconst isEmptySchema = (obj) => (!keys(obj).length) && obj !== false && obj !== true\nconst withoutArr = (arr, ...rest) => without.apply(null, [arr].concat(flatten(rest)))\n\nmodule.exports = {\n  allUniqueKeys,\n  deleteUndefinedProps,\n  getValues,\n  has,\n  isEmptySchema,\n  isSchema,\n  keys,\n  notUndefined,\n  uniqWith,\n  withoutArr\n}\n", "\nconst compare = require('json-schema-compare')\nconst forEach = require('lodash/forEach')\nconst {\n  allUniqueKeys,\n  deleteUndefinedProps,\n  getValues,\n  keys,\n  notUndefined,\n  uniqWith,\n  withoutArr\n} = require('../common')\n\nfunction removeFalseSchemas(target) {\n  forEach(target, function(schema, prop) {\n    if (schema === false) {\n      delete target[prop]\n    }\n  })\n}\n\nfunction mergeSchemaGroup(group, mergeSchemas) {\n  const allKeys = allUniqueKeys(group)\n  return allKeys.reduce(function(all, key) {\n    const schemas = getValues(group, key)\n    const compacted = uniqWith(schemas.filter(notUndefined), compare)\n    all[key] = mergeSchemas(compacted, key)\n    return all\n  }, {})\n}\n\nmodule.exports = {\n  keywords: ['properties', 'patternProperties', 'additionalProperties'],\n  resolver(values, parents, mergers, options) {\n    // first get rid of all non permitted properties\n    if (!options.ignoreAdditionalProperties) {\n      values.forEach(function(subSchema) {\n        const otherSubSchemas = values.filter(s => s !== subSchema)\n        const ownKeys = keys(subSchema.properties)\n        const ownPatternKeys = keys(subSchema.patternProperties)\n        const ownPatterns = ownPatternKeys.map(k => new RegExp(k))\n        otherSubSchemas.forEach(function(other) {\n          const allOtherKeys = keys(other.properties)\n          const keysMatchingPattern = allOtherKeys.filter(k => ownPatterns.some(pk => pk.test(k)))\n          const additionalKeys = withoutArr(allOtherKeys, ownKeys, keysMatchingPattern)\n          additionalKeys.forEach(function(key) {\n            other.properties[key] = mergers.properties([\n              other.properties[key], subSchema.additionalProperties\n            ], key)\n          })\n        })\n      })\n\n      // remove disallowed patternProperties\n      values.forEach(function(subSchema) {\n        const otherSubSchemas = values.filter(s => s !== subSchema)\n        const ownPatternKeys = keys(subSchema.patternProperties)\n        if (subSchema.additionalProperties === false) {\n          otherSubSchemas.forEach(function(other) {\n            const allOtherPatterns = keys(other.patternProperties)\n            const additionalPatternKeys = withoutArr(allOtherPatterns, ownPatternKeys)\n            additionalPatternKeys.forEach(key => delete other.patternProperties[key])\n          })\n        }\n      })\n    }\n\n    const returnObject = {\n      additionalProperties: mergers.additionalProperties(values.map(s => s.additionalProperties)),\n      patternProperties: mergeSchemaGroup(values.map(s => s.patternProperties), mergers.patternProperties),\n      properties: mergeSchemaGroup(values.map(s => s.properties), mergers.properties)\n    }\n\n    if (returnObject.additionalProperties === false) {\n      removeFalseSchemas(returnObject.properties)\n    }\n\n    return deleteUndefinedProps(returnObject)\n  }\n}\n", "\nconst compare = require('json-schema-compare')\nconst forEach = require('lodash/forEach')\nconst {\n  allUniqueKeys,\n  deleteUndefinedProps,\n  has,\n  isSchema,\n  notUndefined,\n  uniqWith\n} = require('../common')\n\nfunction removeFalseSchemasFromArray(target) {\n  forEach(target, function(schema, index) {\n    if (schema === false) {\n      target.splice(index, 1)\n    }\n  })\n}\n\nfunction getItemSchemas(subSchemas, key) {\n  return subSchemas.map(function(sub) {\n    if (!sub) {\n      return undefined\n    }\n\n    if (Array.isArray(sub.items)) {\n      const schemaAtPos = sub.items[key]\n      if (isSchema(schemaAtPos)) {\n        return schemaAtPos\n      } else if (has(sub, 'additionalItems')) {\n        return sub.additionalItems\n      }\n    } else {\n      return sub.items\n    }\n\n    return undefined\n  })\n}\n\nfunction getAdditionalSchemas(subSchemas) {\n  return subSchemas.map(function(sub) {\n    if (!sub) {\n      return undefined\n    }\n    if (Array.isArray(sub.items)) {\n      return sub.additionalItems\n    }\n    return sub.items\n  })\n}\n\n// Provide source when array\nfunction mergeItems(group, mergeSchemas, items) {\n  const allKeys = allUniqueKeys(items)\n  return allKeys.reduce(function(all, key) {\n    const schemas = getItemSchemas(group, key)\n    const compacted = uniqWith(schemas.filter(notUndefined), compare)\n    all[key] = mergeSchemas(compacted, key)\n    return all\n  }, [])\n}\n\nmodule.exports = {\n  keywords: ['items', 'additionalItems'],\n  resolver(values, parents, mergers) {\n    // const createSubMerger = groupKey => (schemas, key) => mergeSchemas(schemas, parents.concat(groupKey, key))\n    const items = values.map(s => s.items)\n    const itemsCompacted = items.filter(notUndefined)\n    const returnObject = {}\n\n    // if all items keyword values are schemas, we can merge them as simple schemas\n    // if not we need to merge them as mixed\n    if (itemsCompacted.every(isSchema)) {\n      returnObject.items = mergers.items(items)\n    } else {\n      returnObject.items = mergeItems(values, mergers.items, items)\n    }\n\n    let schemasAtLastPos\n    if (itemsCompacted.every(Array.isArray)) {\n      schemasAtLastPos = values.map(s => s.additionalItems)\n    } else if (itemsCompacted.some(Array.isArray)) {\n      schemasAtLastPos = getAdditionalSchemas(values)\n    }\n\n    if (schemasAtLastPos) {\n      returnObject.additionalItems = mergers.additionalItems(schemasAtLastPos)\n    }\n\n    if (returnObject.additionalItems === false && Array.isArray(returnObject.items)) {\n      removeFalseSchemasFromArray(returnObject.items)\n    }\n\n    return deleteUndefinedProps(returnObject)\n  }\n}\n", "const cloneDeep = require('lodash/cloneDeep')\nconst compare = require('json-schema-compare')\nconst computeLcm = require('compute-lcm')\nconst defaultsDeep = require('lodash/defaultsDeep')\nconst flatten = require('lodash/flatten')\nconst flattenDeep = require('lodash/flattenDeep')\nconst intersection = require('lodash/intersection')\nconst intersectionWith = require('lodash/intersectionWith')\nconst isEqual = require('lodash/isEqual')\nconst isPlainObject = require('lodash/isPlainObject')\nconst pullAll = require('lodash/pullAll')\nconst sortBy = require('lodash/sortBy')\nconst uniq = require('lodash/uniq')\nconst uniqWith = require('lodash/uniqWith')\n\nconst propertiesResolver = require('./complex-resolvers/properties')\nconst itemsResolver = require('./complex-resolvers/items')\n\nconst contains = (arr, val) => arr.indexOf(val) !== -1\nconst isSchema = (val) => isPlainObject(val) || val === true || val === false\nconst isFalse = (val) => val === false\nconst isTrue = (val) => val === true\nconst schemaResolver = (compacted, key, mergeSchemas) => mergeSchemas(compacted)\nconst stringArray = (values) => sortBy(uniq(flattenDeep(values)))\nconst notUndefined = (val) => val !== undefined\nconst allUniqueKeys = (arr) => uniq(flattenDeep(arr.map(keys)))\n\n// resolvers\nconst first = compacted => compacted[0]\nconst required = compacted => stringArray(compacted)\nconst maximumValue = compacted => Math.max.apply(Math, compacted)\nconst minimumValue = compacted => Math.min.apply(Math, compacted)\nconst uniqueItems = compacted => compacted.some(isTrue)\nconst examples = compacted => uniqWith(flatten(compacted), isEqual)\n\nfunction compareProp(key) {\n  return function(a, b) {\n    return compare({\n      [key]: a\n    }, { [key]: b })\n  }\n}\n\nfunction getAllOf(schema) {\n  let { allOf = [], ...copy } = schema\n  copy = isPlainObject(schema) ? copy : schema // if schema is boolean\n  return [copy, ...allOf.map(getAllOf)]\n}\n\nfunction getValues(schemas, key) {\n  return schemas.map(schema => schema && schema[key])\n}\n\nfunction tryMergeSchemaGroups(schemaGroups, mergeSchemas) {\n  return schemaGroups.map(function(schemas, index) {\n    try {\n      return mergeSchemas(schemas, index)\n    } catch (e) {\n      return undefined\n    }\n  }).filter(notUndefined)\n}\n\nfunction keys(obj) {\n  if (isPlainObject(obj) || Array.isArray(obj)) {\n    return Object.keys(obj)\n  } else {\n    return []\n  }\n}\n\nfunction getAnyOfCombinations(arrOfArrays, combinations) {\n  combinations = combinations || []\n  if (!arrOfArrays.length) {\n    return combinations\n  }\n\n  const values = arrOfArrays.slice(0).shift()\n  const rest = arrOfArrays.slice(1)\n  if (combinations.length) {\n    return getAnyOfCombinations(rest, flatten(combinations.map(combination => values.map(item => ([item].concat(combination))))))\n  }\n  return getAnyOfCombinations(rest, values.map(item => (item)))\n}\n\nfunction throwIncompatible(values, paths) {\n  let asJSON\n  try {\n    asJSON = values.map(function(val) {\n      return JSON.stringify(val, null, 2)\n    }).join('\\n')\n  } catch (variable) {\n    asJSON = values.join(', ')\n  }\n  throw new Error('Could not resolve values for path:\"' + paths.join('.') + '\". They are probably incompatible. Values: \\n' + asJSON)\n}\n\nfunction callGroupResolver(complexKeywords, resolverName, schemas, mergeSchemas, options, parents) {\n  if (complexKeywords.length) {\n    const resolverConfig = options.complexResolvers[resolverName]\n    if (!resolverConfig || !resolverConfig.resolver) {\n      throw new Error('No resolver found for ' + resolverName)\n    }\n\n    // extract all keywords from all the schemas that have one or more\n    // then remove all undefined ones and not unique\n    const extractedKeywordsOnly = schemas.map(schema => complexKeywords.reduce((all, key) => {\n      if (schema[key] !== undefined) all[key] = schema[key]\n      return all\n    }, {}))\n    const unique = uniqWith(extractedKeywordsOnly, compare)\n\n    // create mergers that automatically add the path of the keyword for use in the complex resolver\n    const mergers = resolverConfig.keywords.reduce((all, key) => ({\n      ...all,\n      [key]: (schemas, extraKey = []) => mergeSchemas(schemas, null, parents.concat(key, extraKey))\n    }), {})\n\n    const result = resolverConfig.resolver(unique, parents.concat(resolverName), mergers, options)\n\n    if (!isPlainObject(result)) {\n      throwIncompatible(unique, parents.concat(resolverName))\n    }\n\n    return result\n  }\n}\n\nfunction createRequiredMetaArray(arr) {\n  return { required: arr }\n}\n\nconst schemaGroupProps = ['properties', 'patternProperties', 'definitions', 'dependencies']\nconst schemaArrays = ['anyOf', 'oneOf']\nconst schemaProps = [\n  'additionalProperties',\n  'additionalItems',\n  'contains',\n  'propertyNames',\n  'not',\n  'items'\n]\n\nconst defaultResolvers = {\n  type(compacted) {\n    if (compacted.some(Array.isArray)) {\n      const normalized = compacted.map(function(val) {\n        return Array.isArray(val)\n          ? val\n          : [val]\n      })\n      const common = intersection.apply(null, normalized)\n\n      if (common.length === 1) {\n        return common[0]\n      } else if (common.length > 1) {\n        return uniq(common)\n      }\n    }\n  },\n  dependencies(compacted, paths, mergeSchemas) {\n    const allChildren = allUniqueKeys(compacted)\n\n    return allChildren.reduce(function(all, childKey) {\n      const childSchemas = getValues(compacted, childKey)\n      let innerCompacted = uniqWith(childSchemas.filter(notUndefined), isEqual)\n\n      // to support dependencies\n      const innerArrays = innerCompacted.filter(Array.isArray)\n\n      if (innerArrays.length) {\n        if (innerArrays.length === innerCompacted.length) {\n          all[childKey] = stringArray(innerCompacted)\n        } else {\n          const innerSchemas = innerCompacted.filter(isSchema)\n          const arrayMetaScheams = innerArrays.map(createRequiredMetaArray)\n          all[childKey] = mergeSchemas(innerSchemas.concat(arrayMetaScheams), childKey)\n        }\n        return all\n      }\n\n      innerCompacted = uniqWith(innerCompacted, compare)\n\n      all[childKey] = mergeSchemas(innerCompacted, childKey)\n      return all\n    }, {})\n  },\n  oneOf(compacted, paths, mergeSchemas) {\n    const combinations = getAnyOfCombinations(cloneDeep(compacted))\n    const result = tryMergeSchemaGroups(combinations, mergeSchemas)\n    const unique = uniqWith(result, compare)\n\n    if (unique.length) {\n      return unique\n    }\n  },\n  not(compacted) {\n    return { anyOf: compacted }\n  },\n  pattern(compacted) {\n    return compacted.map(r => '(?=' + r + ')').join('')\n  },\n  multipleOf(compacted) {\n    let integers = compacted.slice(0)\n    let factor = 1\n    while (integers.some(n => !Number.isInteger(n))) {\n      integers = integers.map(n => n * 10)\n      factor = factor * 10\n    }\n    return computeLcm(integers) / factor\n  },\n  enum(compacted) {\n    const enums = intersectionWith.apply(null, compacted.concat(isEqual))\n    if (enums.length) {\n      return sortBy(enums)\n    }\n  }\n}\n\ndefaultResolvers.$id = first\ndefaultResolvers.$ref = first\ndefaultResolvers.$schema = first\ndefaultResolvers.additionalItems = schemaResolver\ndefaultResolvers.additionalProperties = schemaResolver\ndefaultResolvers.anyOf = defaultResolvers.oneOf\ndefaultResolvers.contains = schemaResolver\ndefaultResolvers.default = first\ndefaultResolvers.definitions = defaultResolvers.dependencies\ndefaultResolvers.description = first\ndefaultResolvers.examples = examples\ndefaultResolvers.exclusiveMaximum = minimumValue\ndefaultResolvers.exclusiveMinimum = maximumValue\ndefaultResolvers.items = itemsResolver\ndefaultResolvers.maximum = minimumValue\ndefaultResolvers.maxItems = minimumValue\ndefaultResolvers.maxLength = minimumValue\ndefaultResolvers.maxProperties = minimumValue\ndefaultResolvers.minimum = maximumValue\ndefaultResolvers.minItems = maximumValue\ndefaultResolvers.minLength = maximumValue\ndefaultResolvers.minProperties = maximumValue\ndefaultResolvers.properties = propertiesResolver\ndefaultResolvers.propertyNames = schemaResolver\ndefaultResolvers.required = required\ndefaultResolvers.title = first\ndefaultResolvers.uniqueItems = uniqueItems\n\nconst defaultComplexResolvers = {\n  properties: propertiesResolver,\n  items: itemsResolver\n}\n\nfunction merger(rootSchema, options, totalSchemas) {\n  totalSchemas = totalSchemas || []\n  options = defaultsDeep(options, {\n    ignoreAdditionalProperties: false,\n    resolvers: defaultResolvers,\n    complexResolvers: defaultComplexResolvers,\n    deep: true\n  })\n\n  const complexResolvers = Object.entries(options.complexResolvers)\n\n  function mergeSchemas(schemas, base, parents) {\n    schemas = cloneDeep(schemas.filter(notUndefined))\n    parents = parents || []\n    const merged = isPlainObject(base)\n      ? base\n      : {}\n\n    // return undefined, an empty schema\n    if (!schemas.length) {\n      return\n    }\n\n    if (schemas.some(isFalse)) {\n      return false\n    }\n\n    if (schemas.every(isTrue)) {\n      return true\n    }\n\n    // there are no false and we don't need the true ones as they accept everything\n    schemas = schemas.filter(isPlainObject)\n\n    const allKeys = allUniqueKeys(schemas)\n    if (options.deep && contains(allKeys, 'allOf')) {\n      return merger({\n        allOf: schemas\n      }, options, totalSchemas)\n    }\n\n    const complexKeysArr = complexResolvers.map(([mainKeyWord, resolverConf]) =>\n      allKeys.filter(k => resolverConf.keywords.includes(k)))\n\n    // remove all complex keys before simple resolvers\n    complexKeysArr.forEach(keys => pullAll(allKeys, keys))\n\n    // call all simple resolvers for relevant keywords\n    allKeys.forEach(function(key) {\n      const values = getValues(schemas, key)\n      const compacted = uniqWith(values.filter(notUndefined), compareProp(key))\n\n      // arrayprops like anyOf and oneOf must be merged first, as they contains schemas\n      // allOf is treated differently alltogether\n      if (compacted.length === 1 && contains(schemaArrays, key)) {\n        merged[key] = compacted[0].map(schema => mergeSchemas([schema], schema))\n        // prop groups must always be resolved\n      } else if (compacted.length === 1 && !contains(schemaGroupProps, key) && !contains(schemaProps, key)) {\n        merged[key] = compacted[0]\n      } else {\n        const resolver = options.resolvers[key] || options.resolvers.defaultResolver\n        if (!resolver) throw new Error('No resolver found for key ' + key + '. You can provide a resolver for this keyword in the options, or provide a default resolver.')\n\n        const merger = (schemas, extraKey = []) => mergeSchemas(schemas, null, parents.concat(key, extraKey))\n        merged[key] = resolver(compacted, parents.concat(key), merger, options)\n\n        if (merged[key] === undefined) {\n          throwIncompatible(compacted, parents.concat(key))\n        } else if (merged[key] === undefined) {\n          delete merged[key]\n        }\n      }\n    })\n\n    return complexResolvers.reduce((all, [resolverKeyword, config], index) => ({\n      ...all,\n      ...callGroupResolver(complexKeysArr[index], resolverKeyword, schemas, mergeSchemas, options, parents)\n    }), merged)\n  }\n\n  const allSchemas = flattenDeep(getAllOf(rootSchema))\n  const merged = mergeSchemas(allSchemas)\n\n  return merged\n}\n\nmerger.options = {\n  resolvers: defaultResolvers\n}\n\nmodule.exports = merger\n", "import get from 'lodash/get';\nimport isString from 'lodash/isString';\n\nimport { RJSFSchema, StrictRJSFSchema } from './types';\n\n/** Returns the `discriminator.propertyName` when defined in the `schema` if it is a string. A warning is generated when\n * it is not a string. Returns `undefined` when a valid discriminator is not present.\n *\n * @param schema - The schema from which the discriminator is potentially obtained\n * @returns - The `discriminator.propertyName` if it exists in the schema, otherwise `undefined`\n */\nexport default function getDiscriminatorFieldFromSchema<S extends StrictRJSFSchema = RJSFSchema>(schema: S) {\n  let discriminator: string | undefined;\n  const maybeString = get(schema, 'discriminator.propertyName', undefined);\n  if (isString(maybeString)) {\n    discriminator = maybeString;\n  } else if (maybeString !== undefined) {\n    console.warn(`Expecting discriminator to be a string, got \"${typeof maybeString}\" instead`);\n  }\n  return discriminator;\n}\n", "/** Given a specific `value` attempts to guess the type of a schema element. In the case where we have to implicitly\n *  create a schema, it is useful to know what type to use based on the data we are defining.\n *\n * @param value - The value from which to guess the type\n * @returns - The best guess for the object type\n */\nexport default function guessType(value: any) {\n  if (Array.isArray(value)) {\n    return 'array';\n  }\n  if (typeof value === 'string') {\n    return 'string';\n  }\n  if (value == null) {\n    return 'null';\n  }\n  if (typeof value === 'boolean') {\n    return 'boolean';\n  }\n  if (!isNaN(value)) {\n    return 'number';\n  }\n  if (typeof value === 'object') {\n    return 'object';\n  }\n  // Default to string if we can't figure it out\n  return 'string';\n}\n", "var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nmodule.exports = union;\n", "import guessType from './guessType';\nimport { RJSFSchema, StrictRJSFSchema } from './types';\n\n/** Gets the type of a given `schema`. If the type is not explicitly defined, then an attempt is made to infer it from\n * other elements of the schema as follows:\n * - schema.const: Returns the `guessType()` of that value\n * - schema.enum: Returns `string`\n * - schema.properties: Returns `object`\n * - schema.additionalProperties: Returns `object`\n * - type is an array with a length of 2 and one type is 'null': Returns the other type\n *\n * @param schema - The schema for which to get the type\n * @returns - The type of the schema\n */\nexport default function getSchemaType<S extends StrictRJSFSchema = RJSFSchema>(\n  schema: S\n): string | string[] | undefined {\n  let { type } = schema;\n\n  if (!type && schema.const) {\n    return guessType(schema.const);\n  }\n\n  if (!type && schema.enum) {\n    return 'string';\n  }\n\n  if (!type && (schema.properties || schema.additionalProperties)) {\n    return 'object';\n  }\n\n  if (Array.isArray(type)) {\n    if (type.length === 2 && type.includes('null')) {\n      type = type.find((type) => type !== 'null');\n    } else {\n      type = type[0];\n    }\n  }\n\n  return type;\n}\n", "import union from 'lodash/union';\n\nimport { REQUIRED_KEY } from './constants';\nimport getSchemaType from './getSchemaType';\nimport isObject from './isObject';\nimport { GenericObjectType } from './types';\n\n/** Recursively merge deeply nested schemas. The difference between `mergeSchemas` and `mergeObjects` is that\n * `mergeSchemas` only concats arrays for values under the 'required' keyword, and when it does, it doesn't include\n * duplicate values.\n *\n * @param obj1 - The first schema object to merge\n * @param obj2 - The second schema object to merge\n * @returns - The merged schema object\n */\nexport default function mergeSchemas(obj1: GenericObjectType, obj2: GenericObjectType) {\n  const acc = Object.assign({}, obj1); // Prevent mutation of source object.\n  return Object.keys(obj2).reduce((acc, key) => {\n    const left = obj1 ? obj1[key] : {},\n      right = obj2[key];\n    if (obj1 && key in obj1 && isObject(right)) {\n      acc[key] = mergeSchemas(left, right);\n    } else if (\n      obj1 &&\n      obj2 &&\n      (getSchemaType(obj1) === 'object' || getSchemaType(obj2) === 'object') &&\n      key === REQUIRED_KEY &&\n      Array.isArray(left) &&\n      Array.isArray(right)\n    ) {\n      // Don't include duplicate values when merging 'required' fields.\n      acc[key] = union(left, right);\n    } else {\n      acc[key] = right;\n    }\n    return acc;\n  }, acc);\n}\n", "import get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\nimport set from 'lodash/set';\nimport times from 'lodash/times';\nimport transform from 'lodash/transform';\nimport merge from 'lodash/merge';\nimport flattenDeep from 'lodash/flattenDeep';\nimport uniq from 'lodash/uniq';\nimport mergeAllOf, { Options } from 'json-schema-merge-allof';\n\nimport {\n  ADDITIONAL_PROPERTIES_KEY,\n  ADDITIONAL_PROPERTY_FLAG,\n  ALL_OF_KEY,\n  ANY_OF_KEY,\n  DEPENDENCIES_KEY,\n  IF_KEY,\n  ONE_OF_KEY,\n  REF_KEY,\n  PROPERTIES_KEY,\n  ITEMS_KEY,\n} from '../constants';\nimport findSchemaDefinition, { splitKeyElementFromObject } from '../findSchemaDefinition';\nimport getDiscriminatorFieldFromSchema from '../getDiscriminatorFieldFromSchema';\nimport guessType from '../guessType';\nimport isObject from '../isObject';\nimport mergeSchemas from '../mergeSchemas';\nimport { FormContextType, GenericObjectType, RJSFSchema, StrictRJSFSchema, ValidatorType } from '../types';\nimport getFirstMatchingOption from './getFirstMatchingOption';\n\n/** Retrieves an expanded schema that has had all of its conditions, additional properties, references and dependencies\n * resolved and merged into the `schema` given a `validator`, `rootSchema` and `rawFormData` that is used to do the\n * potentially recursive resolution.\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be forwarded to all the APIs\n * @param schema - The schema for which retrieving a schema is desired\n * @param [rootSchema={}] - The root schema that will be forwarded to all the APIs\n * @param [rawFormData] - The current formData, if any, to assist retrieving a schema\n * @returns - The schema having its conditions, additional properties, references and dependencies resolved\n */\nexport default function retrieveSchema<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(validator: ValidatorType<T, S, F>, schema: S, rootSchema: S = {} as S, rawFormData?: T): S {\n  return retrieveSchemaInternal<T, S, F>(validator, schema, rootSchema, rawFormData)[0];\n}\n\n/** Resolves a conditional block (if/else/then) by removing the condition and merging the appropriate conditional branch\n * with the rest of the schema. If `expandAllBranches` is true, then the `retrieveSchemaInteral()` results for both\n * conditions will be returned.\n *\n * @param validator - An implementation of the `ValidatorType` interface that is used to detect valid schema conditions\n * @param schema - The schema for which resolving a condition is desired\n * @param rootSchema - The root schema that will be forwarded to all the APIs\n * @param expandAllBranches - Flag, if true, will return all possible branches of conditions, any/oneOf and\n *          dependencies as a list of schemas\n * @param recurseList - The list of recursive references already processed\n * @param [formData] - The current formData to assist retrieving a schema\n * @returns - A list of schemas with the appropriate conditions resolved, possibly with all branches expanded\n */\nexport function resolveCondition<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  validator: ValidatorType<T, S, F>,\n  schema: S,\n  rootSchema: S,\n  expandAllBranches: boolean,\n  recurseList: string[],\n  formData?: T\n): S[] {\n  const { if: expression, then, else: otherwise, ...resolvedSchemaLessConditional } = schema;\n\n  const conditionValue = validator.isValid(expression as S, formData || ({} as T), rootSchema);\n  let resolvedSchemas = [resolvedSchemaLessConditional as S];\n  let schemas: S[] = [];\n  if (expandAllBranches) {\n    if (then && typeof then !== 'boolean') {\n      schemas = schemas.concat(\n        retrieveSchemaInternal<T, S, F>(validator, then as S, rootSchema, formData, expandAllBranches, recurseList)\n      );\n    }\n    if (otherwise && typeof otherwise !== 'boolean') {\n      schemas = schemas.concat(\n        retrieveSchemaInternal<T, S, F>(validator, otherwise as S, rootSchema, formData, expandAllBranches, recurseList)\n      );\n    }\n  } else {\n    const conditionalSchema = conditionValue ? then : otherwise;\n    if (conditionalSchema && typeof conditionalSchema !== 'boolean') {\n      schemas = schemas.concat(\n        retrieveSchemaInternal<T, S, F>(\n          validator,\n          conditionalSchema as S,\n          rootSchema,\n          formData,\n          expandAllBranches,\n          recurseList\n        )\n      );\n    }\n  }\n  if (schemas.length) {\n    resolvedSchemas = schemas.map((s) => mergeSchemas(resolvedSchemaLessConditional, s) as S);\n  }\n  return resolvedSchemas.flatMap((s) =>\n    retrieveSchemaInternal<T, S, F>(validator, s, rootSchema, formData, expandAllBranches, recurseList)\n  );\n}\n\n/** Given a list of lists of allOf, anyOf or oneOf values, create a list of lists of all permutations of the values. The\n * `listOfLists` is expected to be all resolved values of the 1st...nth schemas within an `allOf`, `anyOf` or `oneOf`.\n * From those lists, build a matrix for each `xxxOf` where there is more than one schema for a row in the list of lists.\n *\n * For example:\n * - If there are three xxxOf rows (A, B, C) and they have been resolved such that there is only one A, two B and three\n *   C schemas then:\n *   - The permutation for the first row is `[[A]]`\n *   - The permutations for the second row are `[[A,B1], [A,B2]]`\n *   - The permutations for the third row are `[[A,B1,C1], [A,B1,C2], [A,B1,C3], [A,B2,C1], [A,B2,C2], [A,B2,C3]]`\n *\n * @param listOfLists - The list of lists of elements that represent the allOf, anyOf or oneOf resolved values in order\n * @returns - The list of all permutations of schemas for a set of `xxxOf`s\n */\nexport function getAllPermutationsOfXxxOf<S extends StrictRJSFSchema = RJSFSchema>(listOfLists: S[][]) {\n  const allPermutations: S[][] = listOfLists.reduce<S[][]>(\n    (permutations, list) => {\n      // When there are more than one set of schemas for a row, duplicate the set of permutations and add in the values\n      if (list.length > 1) {\n        return list.flatMap((element) => times(permutations.length, (i) => [...permutations[i]].concat(element)));\n      }\n      // Otherwise just push in the single value into the current set of permutations\n      permutations.forEach((permutation) => permutation.push(list[0]));\n      return permutations;\n    },\n    [[]] as S[][] // Start with an empty list\n  );\n\n  return allPermutations;\n}\n\n/** Resolves references and dependencies within a schema and its 'allOf' children. Passes the `expandAllBranches` flag\n * down to the `retrieveSchemaInternal()`, `resolveReference()` and `resolveDependencies()` helper calls. If\n * `expandAllBranches` is true, then all possible dependencies and/or allOf branches are returned.\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be forwarded to all the APIs\n * @param schema - The schema for which resolving a schema is desired\n * @param rootSchema - The root schema that will be forwarded to all the APIs\n * @param expandAllBranches - Flag, if true, will return all possible branches of conditions, any/oneOf and dependencies\n *          as a list of schemas\n * @param recurseList - The list of recursive references already processed\n * @param [formData] - The current formData, if any, to assist retrieving a schema\n * @returns - The list of schemas having its references, dependencies and allOf schemas resolved\n */\nexport function resolveSchema<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  validator: ValidatorType<T, S, F>,\n  schema: S,\n  rootSchema: S,\n  expandAllBranches: boolean,\n  recurseList: string[],\n  formData?: T\n): S[] {\n  const updatedSchemas = resolveReference<T, S, F>(\n    validator,\n    schema,\n    rootSchema,\n    expandAllBranches,\n    recurseList,\n    formData\n  );\n  if (updatedSchemas.length > 1 || updatedSchemas[0] !== schema) {\n    // return the updatedSchemas array if it has either multiple schemas within it\n    // OR the first schema is not the same as the original schema\n    return updatedSchemas;\n  }\n  if (DEPENDENCIES_KEY in schema) {\n    const resolvedSchemas = resolveDependencies<T, S, F>(\n      validator,\n      schema,\n      rootSchema,\n      expandAllBranches,\n      recurseList,\n      formData\n    );\n    return resolvedSchemas.flatMap((s) => {\n      return retrieveSchemaInternal<T, S, F>(validator, s, rootSchema, formData, expandAllBranches, recurseList);\n    });\n  }\n  if (ALL_OF_KEY in schema && Array.isArray(schema.allOf)) {\n    const allOfSchemaElements: S[][] = schema.allOf.map((allOfSubschema) =>\n      retrieveSchemaInternal<T, S, F>(\n        validator,\n        allOfSubschema as S,\n        rootSchema,\n        formData,\n        expandAllBranches,\n        recurseList\n      )\n    );\n    const allPermutations = getAllPermutationsOfXxxOf<S>(allOfSchemaElements);\n    return allPermutations.map((permutation) => ({ ...schema, allOf: permutation }));\n  }\n  // No $ref or dependencies or allOf attribute was found, returning the original schema.\n  return [schema];\n}\n\n/** Resolves all references within a schema and then returns the `retrieveSchemaInternal()` if the resolved schema is\n * actually different than the original. Passes the `expandAllBranches` flag down to the `retrieveSchemaInternal()`\n * helper call.\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be forwarded to all the APIs\n * @param schema - The schema for which resolving a reference is desired\n * @param rootSchema - The root schema that will be forwarded to all the APIs\n * @param expandAllBranches - Flag, if true, will return all possible branches of conditions, any/oneOf and dependencies\n *          as a list of schemas\n * @param recurseList - The list of recursive references already processed\n * @param [formData] - The current formData, if any, to assist retrieving a schema\n * @returns - The list schemas retrieved after having all references resolved\n */\nexport function resolveReference<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  validator: ValidatorType<T, S, F>,\n  schema: S,\n  rootSchema: S,\n  expandAllBranches: boolean,\n  recurseList: string[],\n  formData?: T\n): S[] {\n  const updatedSchema = resolveAllReferences<S>(schema, rootSchema, recurseList);\n  if (updatedSchema !== schema) {\n    // Only call this if the schema was actually changed by the `resolveAllReferences()` function\n    return retrieveSchemaInternal<T, S, F>(\n      validator,\n      updatedSchema,\n      rootSchema,\n      formData,\n      expandAllBranches,\n      recurseList\n    );\n  }\n  return [schema];\n}\n\n/** Resolves all references within the schema itself as well as any of its properties and array items.\n *\n * @param schema - The schema for which resolving all references is desired\n * @param rootSchema - The root schema that will be forwarded to all the APIs\n * @param recurseList - List of $refs already resolved to prevent recursion\n * @returns - given schema will all references resolved or the original schema if no internal `$refs` were resolved\n */\nexport function resolveAllReferences<S extends StrictRJSFSchema = RJSFSchema>(\n  schema: S,\n  rootSchema: S,\n  recurseList: string[]\n): S {\n  if (!isObject(schema)) {\n    return schema;\n  }\n  let resolvedSchema: S = schema;\n  // resolve top level ref\n  if (REF_KEY in resolvedSchema) {\n    const { $ref, ...localSchema } = resolvedSchema;\n    // Check for a recursive reference and stop the loop\n    if (recurseList.includes($ref!)) {\n      return resolvedSchema;\n    }\n    recurseList.push($ref!);\n    // Retrieve the referenced schema definition.\n    const refSchema = findSchemaDefinition<S>($ref, rootSchema);\n    resolvedSchema = { ...refSchema, ...localSchema };\n  }\n\n  if (PROPERTIES_KEY in resolvedSchema) {\n    const childrenLists: string[][] = [];\n    const updatedProps = transform(\n      resolvedSchema[PROPERTIES_KEY]!,\n      (result, value, key: string) => {\n        const childList: string[] = [...recurseList];\n        result[key] = resolveAllReferences(value as S, rootSchema, childList);\n        childrenLists.push(childList);\n      },\n      {} as RJSFSchema\n    );\n    merge(recurseList, uniq(flattenDeep(childrenLists)));\n    resolvedSchema = { ...resolvedSchema, [PROPERTIES_KEY]: updatedProps };\n  }\n\n  if (\n    ITEMS_KEY in resolvedSchema &&\n    !Array.isArray(resolvedSchema.items) &&\n    typeof resolvedSchema.items !== 'boolean'\n  ) {\n    resolvedSchema = {\n      ...resolvedSchema,\n      items: resolveAllReferences(resolvedSchema.items as S, rootSchema, recurseList),\n    };\n  }\n\n  return isEqual(schema, resolvedSchema) ? schema : resolvedSchema;\n}\n\n/** Creates new 'properties' items for each key in the `formData`\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be used when necessary\n * @param theSchema - The schema for which the existing additional properties is desired\n * @param [rootSchema] - The root schema, used to primarily to look up `$ref`s * @param validator\n * @param [aFormData] - The current formData, if any, to assist retrieving a schema\n * @returns - The updated schema with additional properties stubbed\n */\nexport function stubExistingAdditionalProperties<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(validator: ValidatorType<T, S, F>, theSchema: S, rootSchema?: S, aFormData?: T): S {\n  // Clone the schema so that we don't ruin the consumer's original\n  const schema = {\n    ...theSchema,\n    properties: { ...theSchema.properties },\n  };\n\n  // make sure formData is an object\n  const formData: GenericObjectType = aFormData && isObject(aFormData) ? aFormData : {};\n  Object.keys(formData).forEach((key) => {\n    if (key in schema.properties) {\n      // No need to stub, our schema already has the property\n      return;\n    }\n\n    let additionalProperties: S['additionalProperties'] = {};\n    if (typeof schema.additionalProperties !== 'boolean') {\n      if (REF_KEY in schema.additionalProperties!) {\n        additionalProperties = retrieveSchema<T, S, F>(\n          validator,\n          { $ref: get(schema.additionalProperties, [REF_KEY]) } as S,\n          rootSchema,\n          formData as T\n        );\n      } else if ('type' in schema.additionalProperties!) {\n        additionalProperties = { ...schema.additionalProperties };\n      } else if (ANY_OF_KEY in schema.additionalProperties! || ONE_OF_KEY in schema.additionalProperties!) {\n        additionalProperties = {\n          type: 'object',\n          ...schema.additionalProperties,\n        };\n      } else {\n        additionalProperties = { type: guessType(get(formData, [key])) };\n      }\n    } else {\n      additionalProperties = { type: guessType(get(formData, [key])) };\n    }\n\n    // The type of our new key should match the additionalProperties value;\n    schema.properties[key] = additionalProperties;\n    // Set our additional property flag so we know it was dynamically added\n    set(schema.properties, [key, ADDITIONAL_PROPERTY_FLAG], true);\n  });\n\n  return schema;\n}\n\n/** Internal handler that retrieves an expanded schema that has had all of its conditions, additional properties,\n * references and dependencies resolved and merged into the `schema` given a `validator`, `rootSchema` and `rawFormData`\n * that is used to do the potentially recursive resolution. If `expandAllBranches` is true, then all possible branches\n * of the schema and its references, conditions and dependencies are returned.\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be forwarded to all the APIs\n * @param schema - The schema for which retrieving a schema is desired\n * @param rootSchema - The root schema that will be forwarded to all the APIs\n * @param [rawFormData] - The current formData, if any, to assist retrieving a schema\n * @param [expandAllBranches=false] - Flag, if true, will return all possible branches of conditions, any/oneOf and\n *          dependencies as a list of schemas\n * @param [recurseList=[]] - The optional, list of recursive references already processed\n * @returns - The schema(s) resulting from having its conditions, additional properties, references and dependencies\n *          resolved. Multiple schemas may be returned if `expandAllBranches` is true.\n */\nexport function retrieveSchemaInternal<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(\n  validator: ValidatorType<T, S, F>,\n  schema: S,\n  rootSchema: S,\n  rawFormData?: T,\n  expandAllBranches = false,\n  recurseList: string[] = []\n): S[] {\n  if (!isObject(schema)) {\n    return [{} as S];\n  }\n  const resolvedSchemas = resolveSchema<T, S, F>(\n    validator,\n    schema,\n    rootSchema,\n    expandAllBranches,\n    recurseList,\n    rawFormData\n  );\n  return resolvedSchemas.flatMap((s: S) => {\n    let resolvedSchema = s;\n    if (IF_KEY in resolvedSchema) {\n      return resolveCondition<T, S, F>(\n        validator,\n        resolvedSchema,\n        rootSchema,\n        expandAllBranches,\n        recurseList,\n        rawFormData as T\n      );\n    }\n    if (ALL_OF_KEY in resolvedSchema) {\n      // resolve allOf schemas\n      if (expandAllBranches) {\n        const { allOf, ...restOfSchema } = resolvedSchema;\n        return [...(allOf as S[]), restOfSchema as S];\n      }\n      try {\n        resolvedSchema = mergeAllOf(resolvedSchema, {\n          deep: false,\n        } as Options) as S;\n      } catch (e) {\n        console.warn('could not merge subschemas in allOf:\\n', e);\n        const { allOf, ...resolvedSchemaWithoutAllOf } = resolvedSchema;\n        return resolvedSchemaWithoutAllOf as S;\n      }\n    }\n    const hasAdditionalProperties =\n      ADDITIONAL_PROPERTIES_KEY in resolvedSchema && resolvedSchema.additionalProperties !== false;\n    if (hasAdditionalProperties) {\n      return stubExistingAdditionalProperties<T, S, F>(validator, resolvedSchema, rootSchema, rawFormData as T);\n    }\n\n    return resolvedSchema;\n  });\n}\n\n/** Resolves an `anyOf` or `oneOf` within a schema (if present) to the list of schemas returned from\n * `retrieveSchemaInternal()` for the best matching option. If `expandAllBranches` is true, then a list of schemas for ALL\n * options are retrieved and returned.\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be forwarded to all the APIs\n * @param schema - The schema for which retrieving a schema is desired\n * @param rootSchema - The root schema that will be forwarded to all the APIs\n * @param expandAllBranches - Flag, if true, will return all possible branches of conditions, any/oneOf and dependencies\n *          as a list of schemas\n * @param [rawFormData] - The current formData, if any, to assist retrieving a schema, defaults to an empty object\n * @returns - Either an array containing the best matching option or all options if `expandAllBranches` is true\n */\nexport function resolveAnyOrOneOfSchemas<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(validator: ValidatorType<T, S, F>, schema: S, rootSchema: S, expandAllBranches: boolean, rawFormData?: T) {\n  let anyOrOneOf: S[] | undefined;\n  const { oneOf, anyOf, ...remaining } = schema;\n  if (Array.isArray(oneOf)) {\n    anyOrOneOf = oneOf as S[];\n  } else if (Array.isArray(anyOf)) {\n    anyOrOneOf = anyOf as S[];\n  }\n  if (anyOrOneOf) {\n    // Ensure that during expand all branches we pass an object rather than undefined so that all options are interrogated\n    const formData = rawFormData === undefined && expandAllBranches ? ({} as T) : rawFormData;\n    const discriminator = getDiscriminatorFieldFromSchema<S>(schema);\n    anyOrOneOf = anyOrOneOf.map((s) => {\n      // Due to anyOf/oneOf possibly using the same $ref we always pass a fresh recurse list array so that each option\n      // can resolve recursive references independently\n      return resolveAllReferences(s, rootSchema, []);\n    });\n    // Call this to trigger the set of isValid() calls that the schema parser will need\n    const option = getFirstMatchingOption<T, S, F>(validator, formData, anyOrOneOf, rootSchema, discriminator);\n    if (expandAllBranches) {\n      return anyOrOneOf.map((item) => mergeSchemas(remaining, item) as S);\n    }\n    schema = mergeSchemas(remaining, anyOrOneOf[option]) as S;\n  }\n  return [schema];\n}\n\n/** Resolves dependencies within a schema and its 'anyOf/oneOf' children. Passes the `expandAllBranches` flag down to\n * the `resolveAnyOrOneOfSchema()` and `processDependencies()` helper calls.\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be forwarded to all the APIs\n * @param schema - The schema for which resolving a dependency is desired\n * @param rootSchema - The root schema that will be forwarded to all the APIs\n * @param expandAllBranches - Flag, if true, will return all possible branches of conditions, any/oneOf and dependencies\n *          as a list of schemas\n * @param recurseList - The list of recursive references already processed\n * @param [formData] - The current formData, if any, to assist retrieving a schema\n * @returns - The list of schemas with their dependencies resolved\n */\nexport function resolveDependencies<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  validator: ValidatorType<T, S, F>,\n  schema: S,\n  rootSchema: S,\n  expandAllBranches: boolean,\n  recurseList: string[],\n  formData?: T\n): S[] {\n  // Drop the dependencies from the source schema.\n  const { dependencies, ...remainingSchema } = schema;\n  const resolvedSchemas = resolveAnyOrOneOfSchemas<T, S, F>(\n    validator,\n    remainingSchema as S,\n    rootSchema,\n    expandAllBranches,\n    formData\n  );\n  return resolvedSchemas.flatMap((resolvedSchema) =>\n    processDependencies<T, S, F>(\n      validator,\n      dependencies,\n      resolvedSchema,\n      rootSchema,\n      expandAllBranches,\n      recurseList,\n      formData\n    )\n  );\n}\n\n/** Processes all the `dependencies` recursively into the list of `resolvedSchema`s as needed. Passes the\n * `expandAllBranches` flag down to the `withDependentSchema()` and the recursive `processDependencies()` helper calls.\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be forwarded to all the APIs\n * @param dependencies - The set of dependencies that needs to be processed\n * @param resolvedSchema - The schema for which processing dependencies is desired\n * @param rootSchema - The root schema that will be forwarded to all the APIs\n * @param expandAllBranches - Flag, if true, will return all possible branches of conditions, any/oneOf and dependencies\n *          as a list of schemas\n * @param recurseList - The list of recursive references already processed\n * @param [formData] - The current formData, if any, to assist retrieving a schema\n * @returns - The schema with the `dependencies` resolved into it\n */\nexport function processDependencies<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  validator: ValidatorType<T, S, F>,\n  dependencies: S['dependencies'],\n  resolvedSchema: S,\n  rootSchema: S,\n  expandAllBranches: boolean,\n  recurseList: string[],\n  formData?: T\n): S[] {\n  let schemas = [resolvedSchema];\n  // Process dependencies updating the local schema properties as appropriate.\n  for (const dependencyKey in dependencies) {\n    // Skip this dependency if its trigger property is not present.\n    if (!expandAllBranches && get(formData, [dependencyKey]) === undefined) {\n      continue;\n    }\n    // Skip this dependency if it is not included in the schema (such as when dependencyKey is itself a hidden dependency.)\n    if (resolvedSchema.properties && !(dependencyKey in resolvedSchema.properties)) {\n      continue;\n    }\n    const [remainingDependencies, dependencyValue] = splitKeyElementFromObject(\n      dependencyKey,\n      dependencies as GenericObjectType\n    );\n    if (Array.isArray(dependencyValue)) {\n      schemas[0] = withDependentProperties<S>(resolvedSchema, dependencyValue);\n    } else if (isObject(dependencyValue)) {\n      schemas = withDependentSchema<T, S, F>(\n        validator,\n        resolvedSchema,\n        rootSchema,\n        dependencyKey,\n        dependencyValue as S,\n        expandAllBranches,\n        recurseList,\n        formData\n      );\n    }\n    return schemas.flatMap((schema) =>\n      processDependencies<T, S, F>(\n        validator,\n        remainingDependencies,\n        schema,\n        rootSchema,\n        expandAllBranches,\n        recurseList,\n        formData\n      )\n    );\n  }\n  return schemas;\n}\n\n/** Updates a schema with additionally required properties added\n *\n * @param schema - The schema for which resolving a dependent properties is desired\n * @param [additionallyRequired] - An optional array of additionally required names\n * @returns - The schema with the additional required values merged in\n */\nexport function withDependentProperties<S extends StrictRJSFSchema = RJSFSchema>(\n  schema: S,\n  additionallyRequired?: string[]\n) {\n  if (!additionallyRequired) {\n    return schema;\n  }\n  const required = Array.isArray(schema.required)\n    ? Array.from(new Set([...schema.required, ...additionallyRequired]))\n    : additionallyRequired;\n  return { ...schema, required: required };\n}\n\n/** Merges a dependent schema into the `schema` dealing with oneOfs and references. Passes the `expandAllBranches` flag\n * down to the `retrieveSchemaInternal()`, `resolveReference()` and `withExactlyOneSubschema()` helper calls.\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be forwarded to all the APIs\n * @param schema - The schema for which resolving a dependent schema is desired\n * @param rootSchema - The root schema that will be forwarded to all the APIs\n * @param dependencyKey - The key name of the dependency\n * @param dependencyValue - The potentially dependent schema\n * @param expandAllBranches - Flag, if true, will return all possible branches of conditions, any/oneOf and dependencies\n *          as a list of schemas\n * @param recurseList - The list of recursive references already processed\n * @param [formData]- The current formData to assist retrieving a schema\n * @returns - The list of schemas with the dependent schema resolved into them\n */\nexport function withDependentSchema<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  validator: ValidatorType<T, S, F>,\n  schema: S,\n  rootSchema: S,\n  dependencyKey: string,\n  dependencyValue: S,\n  expandAllBranches: boolean,\n  recurseList: string[],\n  formData?: T\n): S[] {\n  const dependentSchemas = retrieveSchemaInternal<T, S, F>(\n    validator,\n    dependencyValue,\n    rootSchema,\n    formData,\n    expandAllBranches,\n    recurseList\n  );\n  return dependentSchemas.flatMap((dependent) => {\n    const { oneOf, ...dependentSchema } = dependent;\n    schema = mergeSchemas(schema, dependentSchema) as S;\n    // Since it does not contain oneOf, we return the original schema.\n    if (oneOf === undefined) {\n      return schema;\n    }\n    // Resolve $refs inside oneOf.\n    const resolvedOneOfs = oneOf.map((subschema) => {\n      if (typeof subschema === 'boolean' || !(REF_KEY in subschema)) {\n        return [subschema as S];\n      }\n      return resolveReference<T, S, F>(validator, subschema as S, rootSchema, expandAllBranches, recurseList, formData);\n    });\n    const allPermutations = getAllPermutationsOfXxxOf(resolvedOneOfs);\n    return allPermutations.flatMap((resolvedOneOf) =>\n      withExactlyOneSubschema<T, S, F>(\n        validator,\n        schema,\n        rootSchema,\n        dependencyKey,\n        resolvedOneOf,\n        expandAllBranches,\n        recurseList,\n        formData\n      )\n    );\n  });\n}\n\n/** Returns a list of `schema`s with the best choice from the `oneOf` options merged into it. If `expandAllBranches` is\n * true, then a list of schemas for ALL options are retrieved and returned. Passes the `expandAllBranches` flag down to\n * the `retrieveSchemaInternal()` helper call.\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be used to validate oneOf options\n * @param schema - The schema for which resolving a oneOf subschema is desired\n * @param rootSchema - The root schema that will be forwarded to all the APIs\n * @param dependencyKey - The key name of the oneOf dependency\n * @param oneOf - The list of schemas representing the oneOf options\n * @param expandAllBranches - Flag, if true, will return all possible branches of conditions, any/oneOf and dependencies\n *          as a list of schemas\n * @param recurseList - The list of recursive references already processed\n * @param [formData] - The current formData to assist retrieving a schema\n * @returns - Either an array containing the best matching option or all options if `expandAllBranches` is true\n */\nexport function withExactlyOneSubschema<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(\n  validator: ValidatorType<T, S, F>,\n  schema: S,\n  rootSchema: S,\n  dependencyKey: string,\n  oneOf: S['oneOf'],\n  expandAllBranches: boolean,\n  recurseList: string[],\n  formData?: T\n): S[] {\n  const validSubschemas = oneOf!.filter((subschema) => {\n    if (typeof subschema === 'boolean' || !subschema || !subschema.properties) {\n      return false;\n    }\n    const { [dependencyKey]: conditionPropertySchema } = subschema.properties;\n    if (conditionPropertySchema) {\n      const conditionSchema: S = {\n        type: 'object',\n        properties: {\n          [dependencyKey]: conditionPropertySchema,\n        },\n      } as S;\n      return validator.isValid(conditionSchema, formData, rootSchema) || expandAllBranches;\n    }\n    return false;\n  });\n\n  if (!expandAllBranches && validSubschemas!.length !== 1) {\n    console.warn(\"ignoring oneOf in dependencies because there isn't exactly one subschema that is valid\");\n    return [schema];\n  }\n  return validSubschemas.flatMap((s) => {\n    const subschema: S = s as S;\n    const [dependentSubschema] = splitKeyElementFromObject(dependencyKey, subschema.properties as GenericObjectType);\n    const dependentSchema = { ...subschema, properties: dependentSubschema };\n    const schemas = retrieveSchemaInternal<T, S, F>(\n      validator,\n      dependentSchema,\n      rootSchema,\n      formData,\n      expandAllBranches,\n      recurseList\n    );\n    return schemas.map((s) => mergeSchemas(schema, s) as S);\n  });\n}\n", "import get from 'lodash/get';\nimport has from 'lodash/has';\nimport isNumber from 'lodash/isNumber';\nimport isObject from 'lodash/isObject';\nimport isString from 'lodash/isString';\nimport reduce from 'lodash/reduce';\nimport times from 'lodash/times';\n\nimport getFirstMatchingOption from './getFirstMatchingOption';\nimport retrieveSchema, { resolveAllReferences } from './retrieveSchema';\nimport { ONE_OF_KEY, REF_KEY, JUNK_OPTION_ID, ANY_OF_KEY } from '../constants';\nimport guessType from '../guessType';\nimport { FormContextType, RJSFSchema, StrictRJSFSchema, ValidatorType } from '../types';\nimport getDiscriminatorFieldFromSchema from '../getDiscriminatorFieldFromSchema';\nimport getOptionMatchingSimpleDiscriminator from '../getOptionMatchingSimpleDiscriminator';\n\n/** A junk option used to determine when the getFirstMatchingOption call really matches an option rather than returning\n * the first item\n */\nexport const JUNK_OPTION: StrictRJSFSchema = {\n  type: 'object',\n  $id: JUNK_OPTION_ID,\n  properties: {\n    __not_really_there__: {\n      type: 'number',\n    },\n  },\n};\n\n/** Recursive function that calculates the score of a `formData` against the given `schema`. The computation is fairly\n * simple. Initially the total score is 0. When `schema.properties` object exists, then all the `key/value` pairs within\n * the object are processed as follows after obtaining the formValue from `formData` using the `key`:\n * - If the `value` contains a `$ref`, `calculateIndexScore()` is called recursively with the formValue and the new\n *   schema that is the result of the ref in the schema being resolved and that sub-schema's resulting score is added to\n *   the total.\n * - If the `value` contains a `oneOf` and there is a formValue, then score based on the index returned from calling\n *   `getClosestMatchingOption()` of that oneOf.\n * - If the type of the `value` is 'object', `calculateIndexScore()` is called recursively with the formValue and the\n *   `value` itself as the sub-schema, and the score is added to the total.\n * - If the type of the `value` matches the guessed-type of the `formValue`, the score is incremented by 1, UNLESS the\n *   value has a `default` or `const`. In those case, if the `default` or `const` and the `formValue` match, the score\n *   is incremented by another 1 otherwise it is decremented by 1.\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be used when necessary\n * @param rootSchema - The root JSON schema of the entire form\n * @param schema - The schema for which the score is being calculated\n * @param formData - The form data associated with the schema, used to calculate the score\n * @returns - The score a schema against the formData\n */\nexport function calculateIndexScore<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  validator: ValidatorType<T, S, F>,\n  rootSchema: S,\n  schema?: S,\n  formData: any = {}\n): number {\n  let totalScore = 0;\n  if (schema) {\n    if (isObject(schema.properties)) {\n      totalScore += reduce(\n        schema.properties,\n        (score, value, key) => {\n          const formValue = get(formData, key);\n          if (typeof value === 'boolean') {\n            return score;\n          }\n          if (has(value, REF_KEY)) {\n            const newSchema = retrieveSchema<T, S, F>(validator, value as S, rootSchema, formValue);\n            return score + calculateIndexScore<T, S, F>(validator, rootSchema, newSchema, formValue || {});\n          }\n          if ((has(value, ONE_OF_KEY) || has(value, ANY_OF_KEY)) && formValue) {\n            const key = has(value, ONE_OF_KEY) ? ONE_OF_KEY : ANY_OF_KEY;\n            const discriminator = getDiscriminatorFieldFromSchema<S>(value as S);\n            return (\n              score +\n              getClosestMatchingOption<T, S, F>(\n                validator,\n                rootSchema,\n                formValue,\n                get(value, key) as S[],\n                -1,\n                discriminator\n              )\n            );\n          }\n          if (value.type === 'object') {\n            return score + calculateIndexScore<T, S, F>(validator, rootSchema, value as S, formValue || {});\n          }\n          if (value.type === guessType(formValue)) {\n            // If the types match, then we bump the score by one\n            let newScore = score + 1;\n            if (value.default) {\n              // If the schema contains a readonly default value score the value that matches the default higher and\n              // any non-matching value lower\n              newScore += formValue === value.default ? 1 : -1;\n            } else if (value.const) {\n              // If the schema contains a const value score the value that matches the default higher and\n              // any non-matching value lower\n              newScore += formValue === value.const ? 1 : -1;\n            }\n            // TODO eventually, deal with enums/arrays\n            return newScore;\n          }\n          return score;\n        },\n        0\n      );\n    } else if (isString(schema.type) && schema.type === guessType(formData)) {\n      totalScore += 1;\n    }\n  }\n  return totalScore;\n}\n\n/** Determines which of the given `options` provided most closely matches the `formData`. Using\n * `getFirstMatchingOption()` to match two schemas that differ only by the readOnly, default or const value of a field\n * based on the `formData` and returns 0 when there is no match. Rather than passing in all the `options` at once to\n * this utility, instead an array of valid option indexes is created by iterating over the list of options, call\n * `getFirstMatchingOptions` with a list of one junk option and one good option, seeing if the good option is considered\n * matched.\n *\n * Once the list of valid indexes is created, if there is only one valid index, just return it. Otherwise, if there are\n * no valid indexes, then fill the valid indexes array with the indexes of all the options. Next, the index of the\n * option with the highest score is determined by iterating over the list of valid options, calling\n * `calculateIndexScore()` on each, comparing it against the current best score, and returning the index of the one that\n * eventually has the best score.\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be used when necessary\n * @param rootSchema - The root JSON schema of the entire form\n * @param formData - The form data associated with the schema\n * @param options - The list of options that can be selected from\n * @param [selectedOption=-1] - The index of the currently selected option, defaulted to -1 if not specified\n * @param [discriminatorField] - The optional name of the field within the options object whose value is used to\n *          determine which option is selected\n * @returns - The index of the option that is the closest match to the `formData` or the `selectedOption` if no match\n */\nexport default function getClosestMatchingOption<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(\n  validator: ValidatorType<T, S, F>,\n  rootSchema: S,\n  formData: T | undefined,\n  options: S[],\n  selectedOption = -1,\n  discriminatorField?: string\n): number {\n  // First resolve any refs in the options\n  const resolvedOptions = options.map((option) => {\n    return resolveAllReferences<S>(option, rootSchema, []);\n  });\n\n  const simpleDiscriminatorMatch = getOptionMatchingSimpleDiscriminator(formData, options, discriminatorField);\n  if (isNumber(simpleDiscriminatorMatch)) {\n    return simpleDiscriminatorMatch;\n  }\n\n  // Reduce the array of options down to a list of the indexes that are considered matching options\n  const allValidIndexes = resolvedOptions.reduce((validList: number[], option, index: number) => {\n    const testOptions: S[] = [JUNK_OPTION as S, option];\n    const match = getFirstMatchingOption<T, S, F>(validator, formData, testOptions, rootSchema, discriminatorField);\n    // The match is the real option, so add its index to list of valid indexes\n    if (match === 1) {\n      validList.push(index);\n    }\n    return validList;\n  }, []);\n\n  // There is only one valid index, so return it!\n  if (allValidIndexes.length === 1) {\n    return allValidIndexes[0];\n  }\n  if (!allValidIndexes.length) {\n    // No indexes were valid, so we'll score all the options, add all the indexes\n    times(resolvedOptions.length, (i) => allValidIndexes.push(i));\n  }\n  type BestType = { bestIndex: number; bestScore: number };\n  const scoreCount = new Set<number>();\n  // Score all the options in the list of valid indexes and return the index with the best score\n  const { bestIndex }: BestType = allValidIndexes.reduce(\n    (scoreData: BestType, index: number) => {\n      const { bestScore } = scoreData;\n      const option = resolvedOptions[index];\n      const score = calculateIndexScore(validator, rootSchema, option, formData);\n      scoreCount.add(score);\n      if (score > bestScore) {\n        return { bestIndex: index, bestScore: score };\n      }\n      return scoreData;\n    },\n    { bestIndex: selectedOption, bestScore: 0 }\n  );\n  // if all scores are the same go with selectedOption\n  if (scoreCount.size === 1 && selectedOption >= 0) {\n    return selectedOption;\n  }\n\n  return bestIndex;\n}\n", "import isObject from './isObject';\nimport { RJSFSchema, StrictRJSFSchema } from './types';\n\n/** Detects whether the given `schema` contains fixed items. This is the case when `schema.items` is a non-empty array\n * that only contains objects.\n *\n * @param schema - The schema in which to check for fixed items\n * @returns - True if there are fixed items in the schema, false otherwise\n */\nexport default function isFixedItems<S extends StrictRJSFSchema = RJSFSchema>(schema: S) {\n  return Array.isArray(schema.items) && schema.items.length > 0 && schema.items.every((item) => isObject(item));\n}\n", "import get from 'lodash/get';\n\nimport isObject from './isObject';\nimport { GenericObjectType } from '../src';\n\n/** Merges the `defaults` object of type `T` into the `formData` of type `T`\n *\n * When merging defaults and form data, we want to merge in this specific way:\n * - objects are deeply merged\n * - arrays are merged in such a way that:\n *   - when the array is set in form data, only array entries set in form data\n *     are deeply merged; additional entries from the defaults are ignored unless `mergeExtraArrayDefaults` is true, in\n *     which case the extras are appended onto the end of the form data\n *   - when the array is not set in form data, the default is copied over\n * - scalars are overwritten/set by form data\n *\n * @param [defaults] - The defaults to merge\n * @param [formData] - The form data into which the defaults will be merged\n * @param [mergeExtraArrayDefaults=false] - If true, any additional default array entries are appended onto the formData\n * @returns - The resulting merged form data with defaults\n */\nexport default function mergeDefaultsWithFormData<T = any>(\n  defaults?: T,\n  formData?: T,\n  mergeExtraArrayDefaults = false\n): T | undefined {\n  if (Array.isArray(formData)) {\n    const defaultsArray = Array.isArray(defaults) ? defaults : [];\n    const mapped = formData.map((value, idx) => {\n      if (defaultsArray[idx]) {\n        return mergeDefaultsWithFormData<any>(defaultsArray[idx], value, mergeExtraArrayDefaults);\n      }\n      return value;\n    });\n    // Merge any extra defaults when mergeExtraArrayDefaults is true\n    if (mergeExtraArrayDefaults && mapped.length < defaultsArray.length) {\n      mapped.push(...defaultsArray.slice(mapped.length));\n    }\n    return mapped as unknown as T;\n  }\n  if (isObject(formData)) {\n    const acc: { [key in keyof T]: any } = Object.assign({}, defaults); // Prevent mutation of source object.\n    return Object.keys(formData as GenericObjectType).reduce((acc, key) => {\n      acc[key as keyof T] = mergeDefaultsWithFormData<T>(\n        defaults ? get(defaults, key) : {},\n        get(formData, key),\n        mergeExtraArrayDefaults\n      );\n      return acc;\n    }, acc);\n  }\n  return formData;\n}\n", "import isObject from './isObject';\nimport { GenericObjectType } from './types';\n\n/** Recursively merge deeply nested objects.\n *\n * @param obj1 - The first object to merge\n * @param obj2 - The second object to merge\n * @param [concatArrays=false] - Optional flag that, when true, will cause arrays to be concatenated. Use\n *          \"preventDuplicates\" to merge arrays in a manner that prevents any duplicate entries from being merged.\n *          NOTE: Uses shallow comparison for the duplicate checking.\n * @returns - A new object that is the merge of the two given objects\n */\nexport default function mergeObjects(\n  obj1: GenericObjectType,\n  obj2: GenericObjectType,\n  concatArrays: boolean | 'preventDuplicates' = false\n) {\n  return Object.keys(obj2).reduce((acc, key) => {\n    const left = obj1 ? obj1[key] : {},\n      right = obj2[key];\n    if (obj1 && key in obj1 && isObject(right)) {\n      acc[key] = mergeObjects(left, right, concatArrays);\n    } else if (concatArrays && Array.isArray(left) && Array.isArray(right)) {\n      let toMerge = right;\n      if (concatArrays === 'preventDuplicates') {\n        toMerge = right.reduce((result, value) => {\n          if (!left.includes(value)) {\n            result.push(value);\n          }\n          return result;\n        }, []);\n      }\n      acc[key] = left.concat(toMerge);\n    } else {\n      acc[key] = right;\n    }\n    return acc;\n  }, Object.assign({}, obj1)); // Prevent mutation of source object.\n}\n", "import { CONST_KEY } from './constants';\nimport { RJSFSchema, StrictRJSFSchema } from './types';\n\n/** This function checks if the given `schema` matches a single constant value. This happens when either the schema has\n * an `enum` array with a single value or there is a `const` defined.\n *\n * @param schema - The schema for a field\n * @returns - True if the `schema` has a single constant value, false otherwise\n */\nexport default function isConstant<S extends StrictRJSFSchema = RJSFSchema>(schema: S) {\n  return (Array.isArray(schema.enum) && schema.enum.length === 1) || CONST_KEY in schema;\n}\n", "import isConstant from '../isConstant';\nimport { FormContextType, RJSFSchema, StrictRJSFSchema, ValidatorType } from '../types';\nimport retrieveSchema from './retrieveSchema';\n\n/** Checks to see if the `schema` combination represents a select\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be used when necessary\n * @param theSchema - The schema for which check for a select flag is desired\n * @param [rootSchema] - The root schema, used to primarily to look up `$ref`s\n * @returns - True if schema contains a select, otherwise false\n */\nexport default function isSelect<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  validator: ValidatorType<T, S, F>,\n  theSchema: S,\n  rootSchema: S = {} as S\n) {\n  const schema = retrieveSchema<T, S, F>(validator, theSchema, rootSchema, undefined);\n  const altSchemas = schema.oneOf || schema.anyOf;\n  if (Array.isArray(schema.enum)) {\n    return true;\n  }\n  if (Array.isArray(altSchemas)) {\n    return altSchemas.every((altSchemas) => typeof altSchemas !== 'boolean' && isConstant(altSchemas));\n  }\n  return false;\n}\n", "import { FormContextType, RJSFSchema, StrictRJSFSchema, ValidatorType } from '../types';\n\nimport isSelect from './isSelect';\n\n/** Checks to see if the `schema` combination represents a multi-select\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be used when necessary\n * @param schema - The schema for which check for a multi-select flag is desired\n * @param [rootSchema] - The root schema, used to primarily to look up `$ref`s\n * @returns - True if schema contains a multi-select, otherwise false\n */\nexport default function isMultiSelect<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(validator: ValidatorType<T, S, F>, schema: S, rootSchema?: S) {\n  if (!schema.uniqueItems || !schema.items || typeof schema.items === 'boolean') {\n    return false;\n  }\n  return isSelect<T, S, F>(validator, schema.items as S, rootSchema);\n}\n", "import get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\n\nimport {\n  ANY_OF_KEY,\n  DEFAULT_KEY,\n  DEPENDENCIES_KEY,\n  PROPERTIES_KEY,\n  ONE_OF_KEY,\n  REF_KEY,\n  ALL_OF_KEY,\n} from '../constants';\nimport findSchemaDefinition from '../findSchemaDefinition';\nimport getClosestMatchingOption from './getClosestMatchingOption';\nimport getDiscriminatorFieldFromSchema from '../getDiscriminatorFieldFromSchema';\nimport getSchemaType from '../getSchemaType';\nimport isObject from '../isObject';\nimport isFixedItems from '../isFixedItems';\nimport mergeDefaultsWithFormData from '../mergeDefaultsWithFormData';\nimport mergeObjects from '../mergeObjects';\nimport mergeSchemas from '../mergeSchemas';\nimport {\n  Experimental_DefaultFormStateBehavior,\n  FormContextType,\n  GenericObjectType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  ValidatorType,\n} from '../types';\nimport isMultiSelect from './isMultiSelect';\nimport retrieveSchema, { resolveDependencies } from './retrieveSchema';\n\n/** Enum that indicates how `schema.additionalItems` should be handled by the `getInnerSchemaForArrayItem()` function.\n */\nexport enum AdditionalItemsHandling {\n  Ignore,\n  Invert,\n  Fallback,\n}\n\n/** Given a `schema` will return an inner schema that for an array item. This is computed differently based on the\n * `additionalItems` enum and the value of `idx`. There are four possible returns:\n * 1. If `idx` is >= 0, then if `schema.items` is an array the `idx`th element of the array is returned if it is a valid\n *    index and not a boolean, otherwise it falls through to 3.\n * 2. If `schema.items` is not an array AND truthy and not a boolean, then `schema.items` is returned since it actually\n *    is a schema, otherwise it falls through to 3.\n * 3. If `additionalItems` is not `AdditionalItemsHandling.Ignore` and `schema.additionalItems` is an object, then\n *    `schema.additionalItems` is returned since it actually is a schema, otherwise it falls through to 4.\n * 4. {} is returned representing an empty schema\n *\n * @param schema - The schema from which to get the particular item\n * @param [additionalItems=AdditionalItemsHandling.Ignore] - How do we want to handle additional items?\n * @param [idx=-1] - Index, if non-negative, will be used to return the idx-th element in a `schema.items` array\n * @returns - The best fit schema object from the `schema` given the `additionalItems` and `idx` modifiers\n */\nexport function getInnerSchemaForArrayItem<S extends StrictRJSFSchema = RJSFSchema>(\n  schema: S,\n  additionalItems: AdditionalItemsHandling = AdditionalItemsHandling.Ignore,\n  idx = -1\n): S {\n  if (idx >= 0) {\n    if (Array.isArray(schema.items) && idx < schema.items.length) {\n      const item = schema.items[idx];\n      if (typeof item !== 'boolean') {\n        return item as S;\n      }\n    }\n  } else if (schema.items && !Array.isArray(schema.items) && typeof schema.items !== 'boolean') {\n    return schema.items as S;\n  }\n  if (additionalItems !== AdditionalItemsHandling.Ignore && isObject(schema.additionalItems)) {\n    return schema.additionalItems as S;\n  }\n  return {} as S;\n}\n\n/** Either add `computedDefault` at `key` into `obj` or not add it based on its value, the value of\n * `includeUndefinedValues`, the value of `emptyObjectFields` and if its parent field is required. Generally undefined\n * `computedDefault` values are added only when `includeUndefinedValues` is either true/\"excludeObjectChildren\". If `\n * includeUndefinedValues` is false and `emptyObjectFields` is not \"skipDefaults\", then non-undefined and non-empty-object\n * values will be added based on certain conditions.\n *\n * @param obj - The object into which the computed default may be added\n * @param key - The key into the object at which the computed default may be added\n * @param computedDefault - The computed default value that maybe should be added to the obj\n * @param includeUndefinedValues - Optional flag, if true, cause undefined values to be added as defaults.\n *          If \"excludeObjectChildren\", cause undefined values for this object and pass `includeUndefinedValues` as\n *          false when computing defaults for any nested object properties. If \"allowEmptyObject\", prevents undefined\n *          values in this object while allow the object itself to be empty and passing `includeUndefinedValues` as\n *          false when computing defaults for any nested object properties.\n * @param isParentRequired - The optional boolean that indicates whether the parent field is required\n * @param requiredFields - The list of fields that are required\n * @param experimental_defaultFormStateBehavior - Optional configuration object, if provided, allows users to override\n *        default form state behavior\n */\nfunction maybeAddDefaultToObject<T = any>(\n  obj: GenericObjectType,\n  key: string,\n  computedDefault: T | T[] | undefined,\n  includeUndefinedValues: boolean | 'excludeObjectChildren',\n  isParentRequired?: boolean,\n  requiredFields: string[] = [],\n  experimental_defaultFormStateBehavior: Experimental_DefaultFormStateBehavior = {}\n) {\n  const { emptyObjectFields = 'populateAllDefaults' } = experimental_defaultFormStateBehavior;\n  if (includeUndefinedValues) {\n    obj[key] = computedDefault;\n  } else if (emptyObjectFields !== 'skipDefaults') {\n    if (isObject(computedDefault)) {\n      // If isParentRequired is undefined, then we are at the root level of the schema so defer to the requiredness of\n      // the field key itself in the `requiredField` list\n      const isSelfOrParentRequired = isParentRequired === undefined ? requiredFields.includes(key) : isParentRequired;\n\n      // If emptyObjectFields 'skipEmptyDefaults' store computedDefault if it's a non-empty object(e.g. not {})\n      if (emptyObjectFields === 'skipEmptyDefaults') {\n        if (!isEmpty(computedDefault)) {\n          obj[key] = computedDefault;\n        }\n      }\n      // Else store computedDefault if it's a non-empty object(e.g. not {}) and satisfies certain conditions\n      // Condition 1: If computedDefault is not empty or if the key is a required field\n      // Condition 2: If the parent object is required or emptyObjectFields is not 'populateRequiredDefaults'\n      else if (\n        (!isEmpty(computedDefault) || requiredFields.includes(key)) &&\n        (isSelfOrParentRequired || emptyObjectFields !== 'populateRequiredDefaults')\n      ) {\n        obj[key] = computedDefault;\n      }\n    } else if (\n      // Store computedDefault if it's a defined primitive (e.g., true) and satisfies certain conditions\n      // Condition 1: computedDefault is not undefined\n      // Condition 2: If emptyObjectFields is 'populateAllDefaults' or 'skipEmptyDefaults) or if the key is a required field\n      computedDefault !== undefined &&\n      (emptyObjectFields === 'populateAllDefaults' ||\n        emptyObjectFields === 'skipEmptyDefaults' ||\n        requiredFields.includes(key))\n    ) {\n      obj[key] = computedDefault;\n    }\n  }\n}\n\ninterface ComputeDefaultsProps<T = any, S extends StrictRJSFSchema = RJSFSchema> {\n  parentDefaults?: T;\n  rootSchema?: S;\n  rawFormData?: T;\n  includeUndefinedValues?: boolean | 'excludeObjectChildren';\n  _recurseList?: string[];\n  experimental_defaultFormStateBehavior?: Experimental_DefaultFormStateBehavior;\n  required?: boolean;\n}\n\n/** Computes the defaults for the current `schema` given the `rawFormData` and `parentDefaults` if any. This drills into\n * each level of the schema, recursively, to fill out every level of defaults provided by the schema.\n *\n * @param validator - an implementation of the `ValidatorType` interface that will be used when necessary\n * @param rawSchema - The schema for which the default state is desired\n * @param [props] - Optional props for this function\n * @param [props.parentDefaults] - Any defaults provided by the parent field in the schema\n * @param [props.rootSchema] - The options root schema, used to primarily to look up `$ref`s\n * @param [props.rawFormData] - The current formData, if any, onto which to provide any missing defaults\n * @param [props.includeUndefinedValues=false] - Optional flag, if true, cause undefined values to be added as defaults.\n *          If \"excludeObjectChildren\", cause undefined values for this object and pass `includeUndefinedValues` as\n *          false when computing defaults for any nested object properties.\n * @param [props._recurseList=[]] - The list of ref names currently being recursed, used to prevent infinite recursion\n * @param [props.experimental_defaultFormStateBehavior] Optional configuration object, if provided, allows users to override default form state behavior\n * @param [props.required] - Optional flag, if true, indicates this schema was required in the parent schema.\n * @returns - The resulting `formData` with all the defaults provided\n */\nexport function computeDefaults<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  validator: ValidatorType<T, S, F>,\n  rawSchema: S,\n  {\n    parentDefaults,\n    rawFormData,\n    rootSchema = {} as S,\n    includeUndefinedValues = false,\n    _recurseList = [],\n    experimental_defaultFormStateBehavior = undefined,\n    required,\n  }: ComputeDefaultsProps<T, S> = {}\n): T | T[] | undefined {\n  const formData: T = (isObject(rawFormData) ? rawFormData : {}) as T;\n  const schema: S = isObject(rawSchema) ? rawSchema : ({} as S);\n  // Compute the defaults recursively: give highest priority to deepest nodes.\n  let defaults: T | T[] | undefined = parentDefaults;\n  // If we get a new schema, then we need to recompute defaults again for the new schema found.\n  let schemaToCompute: S | null = null;\n  let updatedRecurseList = _recurseList;\n\n  if (isObject(defaults) && isObject(schema.default)) {\n    // For object defaults, only override parent defaults that are defined in\n    // schema.default.\n    defaults = mergeObjects(defaults!, schema.default as GenericObjectType) as T;\n  } else if (DEFAULT_KEY in schema) {\n    defaults = schema.default as unknown as T;\n  } else if (REF_KEY in schema) {\n    const refName = schema[REF_KEY];\n    // Use referenced schema defaults for this node.\n    if (!_recurseList.includes(refName!)) {\n      updatedRecurseList = _recurseList.concat(refName!);\n      schemaToCompute = findSchemaDefinition<S>(refName, rootSchema);\n    }\n  } else if (DEPENDENCIES_KEY in schema) {\n    const resolvedSchema = resolveDependencies<T, S, F>(validator, schema, rootSchema, false, [], formData);\n    schemaToCompute = resolvedSchema[0]; // pick the first element from resolve dependencies\n  } else if (isFixedItems(schema)) {\n    defaults = (schema.items! as S[]).map((itemSchema: S, idx: number) =>\n      computeDefaults<T, S>(validator, itemSchema, {\n        rootSchema,\n        includeUndefinedValues,\n        _recurseList,\n        experimental_defaultFormStateBehavior,\n        parentDefaults: Array.isArray(parentDefaults) ? parentDefaults[idx] : undefined,\n        rawFormData: formData as T,\n        required,\n      })\n    ) as T[];\n  } else if (ONE_OF_KEY in schema) {\n    const { oneOf, ...remaining } = schema;\n    if (oneOf!.length === 0) {\n      return undefined;\n    }\n    const discriminator = getDiscriminatorFieldFromSchema<S>(schema);\n    schemaToCompute = oneOf![\n      getClosestMatchingOption<T, S, F>(\n        validator,\n        rootSchema,\n        isEmpty(formData) ? undefined : formData,\n        oneOf as S[],\n        0,\n        discriminator\n      )\n    ] as S;\n    schemaToCompute = mergeSchemas(remaining, schemaToCompute) as S;\n  } else if (ANY_OF_KEY in schema) {\n    const { anyOf, ...remaining } = schema;\n    if (anyOf!.length === 0) {\n      return undefined;\n    }\n    const discriminator = getDiscriminatorFieldFromSchema<S>(schema);\n    schemaToCompute = anyOf![\n      getClosestMatchingOption<T, S, F>(\n        validator,\n        rootSchema,\n        isEmpty(formData) ? undefined : formData,\n        anyOf as S[],\n        0,\n        discriminator\n      )\n    ] as S;\n    schemaToCompute = mergeSchemas(remaining, schemaToCompute) as S;\n  }\n\n  if (schemaToCompute) {\n    return computeDefaults<T, S, F>(validator, schemaToCompute, {\n      rootSchema,\n      includeUndefinedValues,\n      _recurseList: updatedRecurseList,\n      experimental_defaultFormStateBehavior,\n      parentDefaults: defaults as T | undefined,\n      rawFormData: formData as T,\n      required,\n    });\n  }\n\n  // No defaults defined for this node, fallback to generic typed ones.\n  if (defaults === undefined) {\n    defaults = schema.default as unknown as T;\n  }\n\n  switch (getSchemaType<S>(schema)) {\n    // We need to recurse for object schema inner default values.\n    case 'object': {\n      // This is a custom addition that fixes this issue:\n      // https://github.com/rjsf-team/react-jsonschema-form/issues/3832\n      const retrievedSchema =\n        experimental_defaultFormStateBehavior?.allOf === 'populateDefaults' && ALL_OF_KEY in schema\n          ? retrieveSchema<T, S, F>(validator, schema, rootSchema, formData)\n          : schema;\n      const objectDefaults = Object.keys(retrievedSchema.properties || {}).reduce(\n        (acc: GenericObjectType, key: string) => {\n          // Compute the defaults for this node, with the parent defaults we might\n          // have from a previous run: defaults[key].\n          const computedDefault = computeDefaults<T, S, F>(validator, get(retrievedSchema, [PROPERTIES_KEY, key]), {\n            rootSchema,\n            _recurseList,\n            experimental_defaultFormStateBehavior,\n            includeUndefinedValues: includeUndefinedValues === true,\n            parentDefaults: get(defaults, [key]),\n            rawFormData: get(formData, [key]),\n            required: retrievedSchema.required?.includes(key),\n          });\n          maybeAddDefaultToObject<T>(\n            acc,\n            key,\n            computedDefault,\n            includeUndefinedValues,\n            required,\n            retrievedSchema.required,\n            experimental_defaultFormStateBehavior\n          );\n          return acc;\n        },\n        {}\n      ) as T;\n      if (retrievedSchema.additionalProperties) {\n        // as per spec additionalProperties may be either schema or boolean\n        const additionalPropertiesSchema = isObject(retrievedSchema.additionalProperties)\n          ? retrievedSchema.additionalProperties\n          : {};\n\n        const keys = new Set<string>();\n        if (isObject(defaults)) {\n          Object.keys(defaults as GenericObjectType)\n            .filter((key) => !retrievedSchema.properties || !retrievedSchema.properties[key])\n            .forEach((key) => keys.add(key));\n        }\n        const formDataRequired: string[] = [];\n        Object.keys(formData as GenericObjectType)\n          .filter((key) => !retrievedSchema.properties || !retrievedSchema.properties[key])\n          .forEach((key) => {\n            keys.add(key);\n            formDataRequired.push(key);\n          });\n        keys.forEach((key) => {\n          const computedDefault = computeDefaults(validator, additionalPropertiesSchema as S, {\n            rootSchema,\n            _recurseList,\n            experimental_defaultFormStateBehavior,\n            includeUndefinedValues: includeUndefinedValues === true,\n            parentDefaults: get(defaults, [key]),\n            rawFormData: get(formData, [key]),\n            required: retrievedSchema.required?.includes(key),\n          });\n          // Since these are additional properties we don't need to add the `experimental_defaultFormStateBehavior` prop\n          maybeAddDefaultToObject<T>(\n            objectDefaults as GenericObjectType,\n            key,\n            computedDefault,\n            includeUndefinedValues,\n            required,\n            formDataRequired\n          );\n        });\n      }\n      return objectDefaults;\n    }\n    case 'array': {\n      const neverPopulate = experimental_defaultFormStateBehavior?.arrayMinItems?.populate === 'never';\n      const ignoreMinItemsFlagSet = experimental_defaultFormStateBehavior?.arrayMinItems?.populate === 'requiredOnly';\n      const isSkipEmptyDefaults = experimental_defaultFormStateBehavior?.emptyObjectFields === 'skipEmptyDefaults';\n      const computeSkipPopulate =\n        experimental_defaultFormStateBehavior?.arrayMinItems?.computeSkipPopulate ?? (() => false);\n\n      const emptyDefault = isSkipEmptyDefaults ? undefined : [];\n\n      // Inject defaults into existing array defaults\n      if (Array.isArray(defaults)) {\n        defaults = defaults.map((item, idx) => {\n          const schemaItem: S = getInnerSchemaForArrayItem<S>(schema, AdditionalItemsHandling.Fallback, idx);\n          return computeDefaults<T, S, F>(validator, schemaItem, {\n            rootSchema,\n            _recurseList,\n            experimental_defaultFormStateBehavior,\n            parentDefaults: item,\n            required,\n          });\n        }) as T[];\n      }\n\n      // Deeply inject defaults into already existing form data\n      if (Array.isArray(rawFormData)) {\n        const schemaItem: S = getInnerSchemaForArrayItem<S>(schema);\n        if (neverPopulate) {\n          defaults = rawFormData;\n        } else {\n          defaults = rawFormData.map((item: T, idx: number) => {\n            return computeDefaults<T, S, F>(validator, schemaItem, {\n              rootSchema,\n              _recurseList,\n              experimental_defaultFormStateBehavior,\n              rawFormData: item,\n              parentDefaults: get(defaults, [idx]),\n              required,\n            });\n          }) as T[];\n        }\n      }\n\n      if (neverPopulate) {\n        return defaults ?? emptyDefault;\n      }\n      if (ignoreMinItemsFlagSet && !required) {\n        // If no form data exists or defaults are set leave the field empty/non-existent, otherwise\n        // return form data/defaults\n        return defaults ? defaults : undefined;\n      }\n\n      const defaultsLength = Array.isArray(defaults) ? defaults.length : 0;\n      if (\n        !schema.minItems ||\n        isMultiSelect<T, S, F>(validator, schema, rootSchema) ||\n        computeSkipPopulate<T, S, F>(validator, schema, rootSchema) ||\n        schema.minItems <= defaultsLength\n      ) {\n        return defaults ? defaults : emptyDefault;\n      }\n\n      const defaultEntries: T[] = (defaults || []) as T[];\n      const fillerSchema: S = getInnerSchemaForArrayItem<S>(schema, AdditionalItemsHandling.Invert);\n      const fillerDefault = fillerSchema.default;\n\n      // Calculate filler entries for remaining items (minItems - existing raw data/defaults)\n      const fillerEntries: T[] = new Array(schema.minItems - defaultsLength).fill(\n        computeDefaults<any, S, F>(validator, fillerSchema, {\n          parentDefaults: fillerDefault,\n          rootSchema,\n          _recurseList,\n          experimental_defaultFormStateBehavior,\n          required,\n        })\n      ) as T[];\n      // then fill up the rest with either the item default or empty, up to minItems\n      return defaultEntries.concat(fillerEntries);\n    }\n  }\n\n  return defaults;\n}\n\n/** Returns the superset of `formData` that includes the given set updated to include any missing fields that have\n * computed to have defaults provided in the `schema`.\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be used when necessary\n * @param theSchema - The schema for which the default state is desired\n * @param [formData] - The current formData, if any, onto which to provide any missing defaults\n * @param [rootSchema] - The root schema, used to primarily to look up `$ref`s\n * @param [includeUndefinedValues=false] - Optional flag, if true, cause undefined values to be added as defaults.\n *          If \"excludeObjectChildren\", cause undefined values for this object and pass `includeUndefinedValues` as\n *          false when computing defaults for any nested object properties.\n * @param [experimental_defaultFormStateBehavior] Optional configuration object, if provided, allows users to override default form state behavior\n * @returns - The resulting `formData` with all the defaults provided\n */\nexport default function getDefaultFormState<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(\n  validator: ValidatorType<T, S, F>,\n  theSchema: S,\n  formData?: T,\n  rootSchema?: S,\n  includeUndefinedValues: boolean | 'excludeObjectChildren' = false,\n  experimental_defaultFormStateBehavior?: Experimental_DefaultFormStateBehavior\n) {\n  if (!isObject(theSchema)) {\n    throw new Error('Invalid schema: ' + theSchema);\n  }\n  const schema = retrieveSchema<T, S, F>(validator, theSchema, rootSchema, formData);\n  const defaults = computeDefaults<T, S, F>(validator, schema, {\n    rootSchema,\n    includeUndefinedValues,\n    experimental_defaultFormStateBehavior,\n    rawFormData: formData,\n  });\n  if (formData === undefined || formData === null || (typeof formData === 'number' && isNaN(formData))) {\n    // No form data? Use schema defaults.\n    return defaults;\n  }\n  const { mergeExtraDefaults } = experimental_defaultFormStateBehavior?.arrayMinItems || {};\n  if (isObject(formData)) {\n    return mergeDefaultsWithFormData<T>(defaults as T, formData, mergeExtraDefaults);\n  }\n  if (Array.isArray(formData)) {\n    return mergeDefaultsWithFormData<T[]>(defaults as T[], formData, mergeExtraDefaults);\n  }\n  return formData;\n}\n", "import getUiOptions from './getUiOptions';\nimport { FormContextType, RJSFSchema, StrictRJSFSchema, UiSchema } from './types';\n\n/** Checks to see if the `uiSchema` contains the `widget` field and that the widget is not `hidden`\n *\n * @param uiSchema - The UI Schema from which to detect if it is customized\n * @returns - True if the `uiSchema` describes a custom widget, false otherwise\n */\nexport default function isCustomWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(uiSchema: UiSchema<T, S, F> = {}) {\n  return (\n    // TODO: Remove the `&& uiSchema['ui:widget'] !== 'hidden'` once we support hidden widgets for arrays.\n    // https://rjsf-team.github.io/react-jsonschema-form/docs/usage/widgets/#hidden-widgets\n    'widget' in getUiOptions<T, S, F>(uiSchema) && getUiOptions<T, S, F>(uiSchema)['widget'] !== 'hidden'\n  );\n}\n", "import { UI_WIDGET_KEY } from '../constants';\nimport { FormContextType, RJSFSchema, StrictRJSFSchema, UiSchema, ValidatorType } from '../types';\nimport retrieveSchema from './retrieveSchema';\n\n/** Checks to see if the `schema` and `uiSchema` combination represents an array of files\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be used when necessary\n * @param schema - The schema for which check for array of files flag is desired\n * @param [uiSchema={}] - The UI schema from which to check the widget\n * @param [rootSchema] - The root schema, used to primarily to look up `$ref`s\n * @returns - True if schema/uiSchema contains an array of files, otherwise false\n */\nexport default function isFilesArray<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  validator: ValidatorType<T, S, F>,\n  schema: S,\n  uiSchema: UiSchema<T, S, F> = {},\n  rootSchema?: S\n) {\n  if (uiSchema[UI_WIDGET_KEY] === 'files') {\n    return true;\n  }\n  if (schema.items) {\n    const itemsSchema = retrieveSchema<T, S, F>(validator, schema.items as S, rootSchema);\n    return itemsSchema.type === 'string' && itemsSchema.format === 'data-url';\n  }\n  return false;\n}\n", "import { UI_FIELD_KEY, UI_WIDGET_KEY } from '../constants';\nimport getSchemaType from '../getSchemaType';\nimport getUiOptions from '../getUiOptions';\nimport isCustomWidget from '../isCustomWidget';\nimport {\n  FormContextType,\n  GlobalUISchemaOptions,\n  RJSFSchema,\n  StrictRJSFSchema,\n  UiSchema,\n  ValidatorType,\n} from '../types';\nimport isFilesArray from './isFilesArray';\nimport isMultiSelect from './isMultiSelect';\n\n/** Determines whether the combination of `schema` and `uiSchema` properties indicates that the label for the `schema`\n * should be displayed in a UI.\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be used when necessary\n * @param schema - The schema for which the display label flag is desired\n * @param [uiSchema={}] - The UI schema from which to derive potentially displayable information\n * @param [rootSchema] - The root schema, used to primarily to look up `$ref`s\n * @param [globalOptions={}] - The optional Global UI Schema from which to get any fallback `xxx` options\n * @returns - True if the label should be displayed or false if it should not\n */\nexport default function getDisplayLabel<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(\n  validator: ValidatorType<T, S, F>,\n  schema: S,\n  uiSchema: UiSchema<T, S, F> = {},\n  rootSchema?: S,\n  globalOptions?: GlobalUISchemaOptions\n): boolean {\n  const uiOptions = getUiOptions<T, S, F>(uiSchema, globalOptions);\n  const { label = true } = uiOptions;\n  let displayLabel = !!label;\n  const schemaType = getSchemaType<S>(schema);\n\n  if (schemaType === 'array') {\n    displayLabel =\n      isMultiSelect<T, S, F>(validator, schema, rootSchema) ||\n      isFilesArray<T, S, F>(validator, schema, uiSchema, rootSchema) ||\n      isCustomWidget(uiSchema);\n  }\n\n  if (schemaType === 'object') {\n    displayLabel = false;\n  }\n  if (schemaType === 'boolean' && !uiSchema[UI_WIDGET_KEY]) {\n    displayLabel = false;\n  }\n  if (uiSchema[UI_FIELD_KEY]) {\n    displayLabel = false;\n  }\n  return displayLabel;\n}\n", "import isEmpty from 'lodash/isEmpty';\n\nimport mergeObjects from '../mergeObjects';\nimport { ErrorSchema, FormContextType, RJSFSchema, StrictRJSFSchema, ValidationData, ValidatorType } from '../types';\n\n/** Merges the errors in `additionalErrorSchema` into the existing `validationData` by combining the hierarchies in the\n * two `ErrorSchema`s and then appending the error list from the `additionalErrorSchema` obtained by calling\n * `validator.toErrorList()` onto the `errors` in the `validationData`. If no `additionalErrorSchema` is passed, then\n * `validationData` is returned.\n *\n * @param validator - The validator used to convert an ErrorSchema to a list of errors\n * @param validationData - The current `ValidationData` into which to merge the additional errors\n * @param [additionalErrorSchema] - The additional set of errors in an `ErrorSchema`\n * @returns - The `validationData` with the additional errors from `additionalErrorSchema` merged into it, if provided.\n * @deprecated - Use the `validationDataMerge()` function exported from `@rjsf/utils` instead. This function will be\n *        removed in the next major release.\n */\nexport default function mergeValidationData<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(\n  validator: ValidatorType<T, S, F>,\n  validationData: ValidationData<T>,\n  additionalErrorSchema?: ErrorSchema<T>\n): ValidationData<T> {\n  if (!additionalErrorSchema) {\n    return validationData;\n  }\n  const { errors: oldErrors, errorSchema: oldErrorSchema } = validationData;\n  let errors = validator.toErrorList(additionalErrorSchema);\n  let errorSchema = additionalErrorSchema;\n  if (!isEmpty(oldErrorSchema)) {\n    errorSchema = mergeObjects(oldErrorSchema, additionalErrorSchema, true) as ErrorSchema<T>;\n    errors = [...oldErrors].concat(errors);\n  }\n  return { errorSchema, errors };\n}\n", "import get from 'lodash/get';\nimport has from 'lodash/has';\n\nimport { FormContextType, GenericObjectType, RJSFSchema, StrictRJSFSchema, ValidatorType } from '../types';\nimport { PROPERTIES_KEY, REF_KEY } from '../constants';\nimport retrieveSchema from './retrieveSchema';\n\nconst NO_VALUE = Symbol('no Value');\n\n/** Sanitize the `data` associated with the `oldSchema` so it is considered appropriate for the `newSchema`. If the new\n * schema does not contain any properties, then `undefined` is returned to clear all the form data. Due to the nature\n * of schemas, this sanitization happens recursively for nested objects of data. Also, any properties in the old schema\n * that are non-existent in the new schema are set to `undefined`. The data sanitization process has the following flow:\n *\n * - If the new schema is an object that contains a `properties` object then:\n *   - Create a `removeOldSchemaData` object, setting each key in the `oldSchema.properties` having `data` to undefined\n *   - Create an empty `nestedData` object for use in the key filtering below:\n *   - Iterate over each key in the `newSchema.properties` as follows:\n *     - Get the `formValue` of the key from the `data`\n *     - Get the `oldKeySchema` and `newKeyedSchema` for the key, defaulting to `{}` when it doesn't exist\n *     - Retrieve the schema for any refs within each `oldKeySchema` and/or `newKeySchema`\n *     - Get the types of the old and new keyed schemas and if the old doesn't exist or the old & new are the same then:\n *       - If `removeOldSchemaData` has an entry for the key, delete it since the new schema has the same property\n *       - If type of the key in the new schema is `object`:\n *         - Store the value from the recursive `sanitizeDataForNewSchema` call in `nestedData[key]`\n *       - Otherwise, check for default or const values:\n *         - Get the old and new `default` values from the schema and check:\n *           - If the new `default` value does not match the form value:\n *             - If the old `default` value DOES match the form value, then:\n *               - Replace `removeOldSchemaData[key]` with the new `default`\n *               - Otherwise, if the new schema is `readOnly` then replace `removeOldSchemaData[key]` with undefined\n *         - Get the old and new `const` values from the schema and check:\n *           - If the new `const` value does not match the form value:\n *           - If the old `const` value DOES match the form value, then:\n *             - Replace `removeOldSchemaData[key]` with the new `const`\n *             - Otherwise, replace `removeOldSchemaData[key]` with undefined\n *   - Once all keys have been processed, return an object built as follows:\n *     - `{ ...removeOldSchemaData, ...nestedData, ...pick(data, keysToKeep) }`\n * - If the new and old schema types are array and the `data` is an array then:\n *   - If the type of the old and new schema `items` are a non-array objects:\n *     - Retrieve the schema for any refs within each `oldKeySchema.items` and/or `newKeySchema.items`\n *     - If the `type`s of both items are the same (or the old does not have a type):\n *       - If the type is \"object\", then:\n *         - For each element in the `data` recursively sanitize the data, stopping at `maxItems` if specified\n *       - Otherwise, just return the `data` removing any values after `maxItems` if it is set\n *   - If the type of the old and new schema `items` are booleans of the same value, return `data` as is\n * - Otherwise return `undefined`\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be used when necessary\n * @param rootSchema - The root JSON schema of the entire form\n * @param [newSchema] - The new schema for which the data is being sanitized\n * @param [oldSchema] - The old schema from which the data originated\n * @param [data={}] - The form data associated with the schema, defaulting to an empty object when undefined\n * @returns - The new form data, with all the fields uniquely associated with the old schema set\n *      to `undefined`. Will return `undefined` if the new schema is not an object containing properties.\n */\nexport default function sanitizeDataForNewSchema<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(validator: ValidatorType<T, S, F>, rootSchema: S, newSchema?: S, oldSchema?: S, data: any = {}): T {\n  // By default, we will clear the form data\n  let newFormData;\n  // If the new schema is of type object and that object contains a list of properties\n  if (has(newSchema, PROPERTIES_KEY)) {\n    // Create an object containing root-level keys in the old schema, setting each key to undefined to remove the data\n    const removeOldSchemaData: GenericObjectType = {};\n    if (has(oldSchema, PROPERTIES_KEY)) {\n      const properties = get(oldSchema, PROPERTIES_KEY, {});\n      Object.keys(properties).forEach((key) => {\n        if (has(data, key)) {\n          removeOldSchemaData[key] = undefined;\n        }\n      });\n    }\n    const keys: string[] = Object.keys(get(newSchema, PROPERTIES_KEY, {}));\n    // Create a place to store nested data that will be a side-effect of the filter\n    const nestedData: GenericObjectType = {};\n    keys.forEach((key) => {\n      const formValue = get(data, key);\n      let oldKeyedSchema: S = get(oldSchema, [PROPERTIES_KEY, key], {});\n      let newKeyedSchema: S = get(newSchema, [PROPERTIES_KEY, key], {});\n      // Resolve the refs if they exist\n      if (has(oldKeyedSchema, REF_KEY)) {\n        oldKeyedSchema = retrieveSchema<T, S, F>(validator, oldKeyedSchema, rootSchema, formValue);\n      }\n      if (has(newKeyedSchema, REF_KEY)) {\n        newKeyedSchema = retrieveSchema<T, S, F>(validator, newKeyedSchema, rootSchema, formValue);\n      }\n      // Now get types and see if they are the same\n      const oldSchemaTypeForKey = get(oldKeyedSchema, 'type');\n      const newSchemaTypeForKey = get(newKeyedSchema, 'type');\n      // Check if the old option has the same key with the same type\n      if (!oldSchemaTypeForKey || oldSchemaTypeForKey === newSchemaTypeForKey) {\n        if (has(removeOldSchemaData, key)) {\n          // SIDE-EFFECT: remove the undefined value for a key that has the same type between the old and new schemas\n          delete removeOldSchemaData[key];\n        }\n        // If it is an object, we'll recurse and store the resulting sanitized data for the key\n        if (newSchemaTypeForKey === 'object' || (newSchemaTypeForKey === 'array' && Array.isArray(formValue))) {\n          // SIDE-EFFECT: process the new schema type of object recursively to save iterations\n          const itemData = sanitizeDataForNewSchema<T, S, F>(\n            validator,\n            rootSchema,\n            newKeyedSchema,\n            oldKeyedSchema,\n            formValue\n          );\n          if (itemData !== undefined || newSchemaTypeForKey === 'array') {\n            // only put undefined values for the array type and not the object type\n            nestedData[key] = itemData;\n          }\n        } else {\n          // Ok, the non-object types match, let's make sure that a default or a const of a different value is replaced\n          // with the new default or const. This allows the case where two schemas differ that only by the default/const\n          // value to be properly selected\n          const newOptionDefault = get(newKeyedSchema, 'default', NO_VALUE);\n          const oldOptionDefault = get(oldKeyedSchema, 'default', NO_VALUE);\n          if (newOptionDefault !== NO_VALUE && newOptionDefault !== formValue) {\n            if (oldOptionDefault === formValue) {\n              // If the old default matches the formValue, we'll update the new value to match the new default\n              removeOldSchemaData[key] = newOptionDefault;\n            } else if (get(newKeyedSchema, 'readOnly') === true) {\n              // If the new schema has the default set to read-only, treat it like a const and remove the value\n              removeOldSchemaData[key] = undefined;\n            }\n          }\n\n          const newOptionConst = get(newKeyedSchema, 'const', NO_VALUE);\n          const oldOptionConst = get(oldKeyedSchema, 'const', NO_VALUE);\n          if (newOptionConst !== NO_VALUE && newOptionConst !== formValue) {\n            // Since this is a const, if the old value matches, replace the value with the new const otherwise clear it\n            removeOldSchemaData[key] = oldOptionConst === formValue ? newOptionConst : undefined;\n          }\n        }\n      }\n    });\n\n    newFormData = {\n      ...(typeof data == 'string' || Array.isArray(data) ? undefined : data),\n      ...removeOldSchemaData,\n      ...nestedData,\n    };\n    // First apply removing the old schema data, then apply the nested data, then apply the old data keys to keep\n  } else if (get(oldSchema, 'type') === 'array' && get(newSchema, 'type') === 'array' && Array.isArray(data)) {\n    let oldSchemaItems = get(oldSchema, 'items');\n    let newSchemaItems = get(newSchema, 'items');\n    // If any of the array types `items` are arrays (remember arrays are objects) then we'll just drop the data\n    // Eventually, we may want to deal with when either of the `items` are arrays since those tuple validations\n    if (\n      typeof oldSchemaItems === 'object' &&\n      typeof newSchemaItems === 'object' &&\n      !Array.isArray(oldSchemaItems) &&\n      !Array.isArray(newSchemaItems)\n    ) {\n      if (has(oldSchemaItems, REF_KEY)) {\n        oldSchemaItems = retrieveSchema<T, S, F>(validator, oldSchemaItems as S, rootSchema, data as T);\n      }\n      if (has(newSchemaItems, REF_KEY)) {\n        newSchemaItems = retrieveSchema<T, S, F>(validator, newSchemaItems as S, rootSchema, data as T);\n      }\n      // Now get types and see if they are the same\n      const oldSchemaType = get(oldSchemaItems, 'type');\n      const newSchemaType = get(newSchemaItems, 'type');\n      // Check if the old option has the same key with the same type\n      if (!oldSchemaType || oldSchemaType === newSchemaType) {\n        const maxItems = get(newSchema, 'maxItems', -1);\n        if (newSchemaType === 'object') {\n          newFormData = data.reduce((newValue, aValue) => {\n            const itemValue = sanitizeDataForNewSchema<T, S, F>(\n              validator,\n              rootSchema,\n              newSchemaItems as S,\n              oldSchemaItems as S,\n              aValue\n            );\n            if (itemValue !== undefined && (maxItems < 0 || newValue.length < maxItems)) {\n              newValue.push(itemValue);\n            }\n            return newValue;\n          }, []);\n        } else {\n          newFormData = maxItems > 0 && data.length > maxItems ? data.slice(0, maxItems) : data;\n        }\n      }\n    } else if (\n      typeof oldSchemaItems === 'boolean' &&\n      typeof newSchemaItems === 'boolean' &&\n      oldSchemaItems === newSchemaItems\n    ) {\n      // If they are both booleans and have the same value just return the data as is otherwise fall-thru to undefined\n      newFormData = data;\n    }\n    // Also probably want to deal with `prefixItems` as tuples with the latest 2020 draft\n  }\n  return newFormData as T;\n}\n", "import get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\n\nimport { ALL_OF_KEY, DEPENDENCIES_KEY, ID_KEY, ITEMS_KEY, PROPERTIES_KEY, REF_KEY } from '../constants';\nimport isObject from '../isObject';\nimport { FormContextType, IdSchema, RJSFSchema, StrictRJSFSchema, ValidatorType } from '../types';\nimport retrieveSchema from './retrieveSchema';\nimport getSchemaType from '../getSchemaType';\n\n/** An internal helper that generates an `IdSchema` object for the `schema`, recursively with protection against\n * infinite recursion\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be used when necessary\n * @param schema - The schema for which the `IdSchema` is desired\n * @param idPrefix - The prefix to use for the id\n * @param idSeparator - The separator to use for the path segments in the id\n * @param [id] - The base id for the schema\n * @param [rootSchema] - The root schema, used to primarily to look up `$ref`s\n * @param [formData] - The current formData, if any, to assist retrieving a schema\n * @param [_recurseList=[]] - The list of retrieved schemas currently being recursed, used to prevent infinite recursion\n * @returns - The `IdSchema` object for the `schema`\n */\nfunction toIdSchemaInternal<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  validator: ValidatorType<T, S, F>,\n  schema: S,\n  idPrefix: string,\n  idSeparator: string,\n  id?: string | null,\n  rootSchema?: S,\n  formData?: T,\n  _recurseList: S[] = []\n): IdSchema<T> {\n  if (REF_KEY in schema || DEPENDENCIES_KEY in schema || ALL_OF_KEY in schema) {\n    const _schema = retrieveSchema<T, S, F>(validator, schema, rootSchema, formData);\n    const sameSchemaIndex = _recurseList.findIndex((item) => isEqual(item, _schema));\n    if (sameSchemaIndex === -1) {\n      return toIdSchemaInternal<T, S, F>(\n        validator,\n        _schema,\n        idPrefix,\n        idSeparator,\n        id,\n        rootSchema,\n        formData,\n        _recurseList.concat(_schema)\n      );\n    }\n  }\n  if (ITEMS_KEY in schema && !get(schema, [ITEMS_KEY, REF_KEY])) {\n    return toIdSchemaInternal<T, S, F>(\n      validator,\n      get(schema, ITEMS_KEY) as S,\n      idPrefix,\n      idSeparator,\n      id,\n      rootSchema,\n      formData,\n      _recurseList\n    );\n  }\n  const $id = id || idPrefix;\n  const idSchema: IdSchema = { $id } as IdSchema<T>;\n  if (getSchemaType<S>(schema) === 'object' && PROPERTIES_KEY in schema) {\n    for (const name in schema.properties) {\n      const field = get(schema, [PROPERTIES_KEY, name]);\n      const fieldId = idSchema[ID_KEY] + idSeparator + name;\n      idSchema[name] = toIdSchemaInternal<T, S, F>(\n        validator,\n        isObject(field) ? field : {},\n        idPrefix,\n        idSeparator,\n        fieldId,\n        rootSchema,\n        // It's possible that formData is not an object -- this can happen if an\n        // array item has just been added, but not populated with data yet\n        get(formData, [name]),\n        _recurseList\n      );\n    }\n  }\n  return idSchema as IdSchema<T>;\n}\n\n/** Generates an `IdSchema` object for the `schema`, recursively\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be used when necessary\n * @param schema - The schema for which the `IdSchema` is desired\n * @param [id] - The base id for the schema\n * @param [rootSchema] - The root schema, used to primarily to look up `$ref`s\n * @param [formData] - The current formData, if any, to assist retrieving a schema\n * @param [idPrefix='root'] - The prefix to use for the id\n * @param [idSeparator='_'] - The separator to use for the path segments in the id\n * @returns - The `IdSchema` object for the `schema`\n */\nexport default function toIdSchema<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  validator: ValidatorType<T, S, F>,\n  schema: S,\n  id?: string | null,\n  rootSchema?: S,\n  formData?: T,\n  idPrefix = 'root',\n  idSeparator = '_'\n): IdSchema<T> {\n  return toIdSchemaInternal<T, S, F>(validator, schema, idPrefix, idSeparator, id, rootSchema, formData);\n}\n", "import get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\nimport set from 'lodash/set';\n\nimport {\n  ALL_OF_KEY,\n  ANY_OF_KEY,\n  ADDITIONAL_PROPERTIES_KEY,\n  DEPENDENCIES_KEY,\n  ITEMS_KEY,\n  NAME_KEY,\n  ONE_OF_KEY,\n  PROPERTIES_KEY,\n  REF_KEY,\n  RJSF_ADDITIONAL_PROPERTIES_FLAG,\n} from '../constants';\nimport getDiscriminatorFieldFromSchema from '../getDiscriminatorFieldFromSchema';\nimport { FormContextType, PathSchema, RJSFSchema, StrictRJSFSchema, ValidatorType } from '../types';\nimport getClosestMatchingOption from './getClosestMatchingOption';\nimport retrieveSchema from './retrieveSchema';\n\n/** An internal helper that generates an `PathSchema` object for the `schema`, recursively with protection against\n * infinite recursion\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be used when necessary\n * @param schema - The schema for which the `PathSchema` is desired\n * @param [name=''] - The base name for the schema\n * @param [rootSchema] - The root schema, used to primarily to look up `$ref`s\n * @param [formData] - The current formData, if any, to assist retrieving a schema\n * @param [_recurseList=[]] - The list of retrieved schemas currently being recursed, used to prevent infinite recursion\n * @returns - The `PathSchema` object for the `schema`\n */\nfunction toPathSchemaInternal<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  validator: ValidatorType<T, S, F>,\n  schema: S,\n  name: string,\n  rootSchema?: S,\n  formData?: T,\n  _recurseList: S[] = []\n): PathSchema<T> {\n  if (REF_KEY in schema || DEPENDENCIES_KEY in schema || ALL_OF_KEY in schema) {\n    const _schema = retrieveSchema<T, S, F>(validator, schema, rootSchema, formData);\n    const sameSchemaIndex = _recurseList.findIndex((item) => isEqual(item, _schema));\n    if (sameSchemaIndex === -1) {\n      return toPathSchemaInternal<T, S, F>(\n        validator,\n        _schema,\n        name,\n        rootSchema,\n        formData,\n        _recurseList.concat(_schema)\n      );\n    }\n  }\n\n  let pathSchema: PathSchema = {\n    [NAME_KEY]: name.replace(/^\\./, ''),\n  } as PathSchema;\n\n  if (ONE_OF_KEY in schema || ANY_OF_KEY in schema) {\n    const xxxOf: S[] = ONE_OF_KEY in schema ? (schema.oneOf as S[]) : (schema.anyOf as S[]);\n    const discriminator = getDiscriminatorFieldFromSchema<S>(schema);\n    const index = getClosestMatchingOption<T, S, F>(validator, rootSchema!, formData, xxxOf, 0, discriminator);\n    const _schema: S = xxxOf![index] as S;\n    pathSchema = {\n      ...pathSchema,\n      ...toPathSchemaInternal<T, S, F>(validator, _schema, name, rootSchema, formData, _recurseList),\n    };\n  }\n\n  if (ADDITIONAL_PROPERTIES_KEY in schema && schema[ADDITIONAL_PROPERTIES_KEY] !== false) {\n    set(pathSchema, RJSF_ADDITIONAL_PROPERTIES_FLAG, true);\n  }\n\n  if (ITEMS_KEY in schema && Array.isArray(formData)) {\n    const { items: schemaItems, additionalItems: schemaAdditionalItems } = schema;\n\n    if (Array.isArray(schemaItems)) {\n      formData.forEach((element, i: number) => {\n        if (schemaItems[i]) {\n          pathSchema[i] = toPathSchemaInternal<T, S, F>(\n            validator,\n            schemaItems[i] as S,\n            `${name}.${i}`,\n            rootSchema,\n            element,\n            _recurseList\n          );\n        } else if (schemaAdditionalItems) {\n          pathSchema[i] = toPathSchemaInternal<T, S, F>(\n            validator,\n            schemaAdditionalItems as S,\n            `${name}.${i}`,\n            rootSchema,\n            element,\n            _recurseList\n          );\n        } else {\n          console.warn(`Unable to generate path schema for \"${name}.${i}\". No schema defined for it`);\n        }\n      });\n    } else {\n      formData.forEach((element, i: number) => {\n        pathSchema[i] = toPathSchemaInternal<T, S, F>(\n          validator,\n          schemaItems as S,\n          `${name}.${i}`,\n          rootSchema,\n          element,\n          _recurseList\n        );\n      });\n    }\n  } else if (PROPERTIES_KEY in schema) {\n    for (const property in schema.properties) {\n      const field = get(schema, [PROPERTIES_KEY, property]);\n      pathSchema[property] = toPathSchemaInternal<T, S, F>(\n        validator,\n        field,\n        `${name}.${property}`,\n        rootSchema,\n        // It's possible that formData is not an object -- this can happen if an\n        // array item has just been added, but not populated with data yet\n        get(formData, [property]),\n        _recurseList\n      );\n    }\n  }\n  return pathSchema as PathSchema<T>;\n}\n\n/** Generates an `PathSchema` object for the `schema`, recursively\n *\n * @param validator - An implementation of the `ValidatorType` interface that will be used when necessary\n * @param schema - The schema for which the `PathSchema` is desired\n * @param [name=''] - The base name for the schema\n * @param [rootSchema] - The root schema, used to primarily to look up `$ref`s\n * @param [formData] - The current formData, if any, to assist retrieving a schema\n * @returns - The `PathSchema` object for the `schema`\n */\nexport default function toPathSchema<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  validator: ValidatorType<T, S, F>,\n  schema: S,\n  name = '',\n  rootSchema?: S,\n  formData?: T\n): PathSchema<T> {\n  return toPathSchemaInternal(validator, schema, name, rootSchema, formData);\n}\n", "import getDefaultFormState from './getDefaultFormState';\nimport getDisplayLabel from './getDisplayLabel';\nimport getClosestMatchingOption from './getClosestMatchingOption';\nimport getFirstMatchingOption from './getFirstMatchingOption';\nimport getMatchingOption from './getMatchingOption';\nimport isFilesArray from './isFilesArray';\nimport isMultiSelect from './isMultiSelect';\nimport isSelect from './isSelect';\nimport mergeValidationData from './mergeValidationData';\nimport retrieveSchema from './retrieveSchema';\nimport sanitizeDataForNewSchema from './sanitizeDataForNewSchema';\nimport toIdSchema from './toIdSchema';\nimport toPathSchema from './toPathSchema';\n\nexport {\n  getDefaultFormState,\n  getDisplayLabel,\n  getClosestMatchingOption,\n  getFirstMatchingOption,\n  getMatchingOption,\n  isFilesArray,\n  isMultiSelect,\n  isSelect,\n  mergeValidationData,\n  retrieveSchema,\n  sanitizeDataForNewSchema,\n  toIdSchema,\n  toPathSchema,\n};\n", "import deepEquals from './deepEquals';\nimport {\n  ErrorSchema,\n  Experimental_DefaultFormStateBehavior,\n  FormContextType,\n  GlobalUISchemaOptions,\n  IdSchema,\n  PathSchema,\n  RJSFSchema,\n  SchemaUtilsType,\n  StrictRJSFSchema,\n  UiSchema,\n  ValidationData,\n  ValidatorType,\n} from './types';\nimport {\n  getDefaultFormState,\n  getDisplayLabel,\n  getClosestMatchingOption,\n  getFirstMatchingOption,\n  getMatchingOption,\n  isFilesArray,\n  isMultiSelect,\n  isSelect,\n  mergeValidationData,\n  retrieveSchema,\n  sanitizeDataForNewSchema,\n  toIdSchema,\n  toPathSchema,\n} from './schema';\n\n/** The `SchemaUtils` class provides a wrapper around the publicly exported APIs in the `utils/schema` directory such\n * that one does not have to explicitly pass the `validator`, `rootSchema`, or `experimental_defaultFormStateBehavior` to each method.\n * Since these generally do not change across a `Form`, this allows for providing a simplified set of APIs to the\n * `@rjsf/core` components and the various themes as well. This class implements the `SchemaUtilsType` interface.\n */\nclass SchemaUtils<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>\n  implements SchemaUtilsType<T, S, F>\n{\n  rootSchema: S;\n  validator: ValidatorType<T, S, F>;\n  experimental_defaultFormStateBehavior: Experimental_DefaultFormStateBehavior;\n\n  /** Constructs the `SchemaUtils` instance with the given `validator` and `rootSchema` stored as instance variables\n   *\n   * @param validator - An implementation of the `ValidatorType` interface that will be forwarded to all the APIs\n   * @param rootSchema - The root schema that will be forwarded to all the APIs\n   * @param experimental_defaultFormStateBehavior - Configuration flags to allow users to override default form state behavior\n   */\n  constructor(\n    validator: ValidatorType<T, S, F>,\n    rootSchema: S,\n    experimental_defaultFormStateBehavior: Experimental_DefaultFormStateBehavior\n  ) {\n    this.rootSchema = rootSchema;\n    this.validator = validator;\n    this.experimental_defaultFormStateBehavior = experimental_defaultFormStateBehavior;\n  }\n\n  /** Returns the `ValidatorType` in the `SchemaUtilsType`\n   *\n   * @returns - The `ValidatorType`\n   */\n  getValidator() {\n    return this.validator;\n  }\n\n  /** Determines whether either the `validator` and `rootSchema` differ from the ones associated with this instance of\n   * the `SchemaUtilsType`. If either `validator` or `rootSchema` are falsy, then return false to prevent the creation\n   * of a new `SchemaUtilsType` with incomplete properties.\n   *\n   * @param validator - An implementation of the `ValidatorType` interface that will be compared against the current one\n   * @param rootSchema - The root schema that will be compared against the current one\n   * @param [experimental_defaultFormStateBehavior] Optional configuration object, if provided, allows users to override default form state behavior\n   * @returns - True if the `SchemaUtilsType` differs from the given `validator` or `rootSchema`\n   */\n  doesSchemaUtilsDiffer(\n    validator: ValidatorType<T, S, F>,\n    rootSchema: S,\n    experimental_defaultFormStateBehavior = {}\n  ): boolean {\n    if (!validator || !rootSchema) {\n      return false;\n    }\n    return (\n      this.validator !== validator ||\n      !deepEquals(this.rootSchema, rootSchema) ||\n      !deepEquals(this.experimental_defaultFormStateBehavior, experimental_defaultFormStateBehavior)\n    );\n  }\n\n  /** Returns the superset of `formData` that includes the given set updated to include any missing fields that have\n   * computed to have defaults provided in the `schema`.\n   *\n   * @param schema - The schema for which the default state is desired\n   * @param [formData] - The current formData, if any, onto which to provide any missing defaults\n   * @param [includeUndefinedValues=false] - Optional flag, if true, cause undefined values to be added as defaults.\n   *          If \"excludeObjectChildren\", pass `includeUndefinedValues` as false when computing defaults for any nested\n   *          object properties.\n   * @returns - The resulting `formData` with all the defaults provided\n   */\n  getDefaultFormState(\n    schema: S,\n    formData?: T,\n    includeUndefinedValues: boolean | 'excludeObjectChildren' = false\n  ): T | T[] | undefined {\n    return getDefaultFormState<T, S, F>(\n      this.validator,\n      schema,\n      formData,\n      this.rootSchema,\n      includeUndefinedValues,\n      this.experimental_defaultFormStateBehavior\n    );\n  }\n\n  /** Determines whether the combination of `schema` and `uiSchema` properties indicates that the label for the `schema`\n   * should be displayed in a UI.\n   *\n   * @param schema - The schema for which the display label flag is desired\n   * @param [uiSchema] - The UI schema from which to derive potentially displayable information\n   * @param [globalOptions={}] - The optional Global UI Schema from which to get any fallback `xxx` options\n   * @returns - True if the label should be displayed or false if it should not\n   */\n  getDisplayLabel(schema: S, uiSchema?: UiSchema<T, S, F>, globalOptions?: GlobalUISchemaOptions) {\n    return getDisplayLabel<T, S, F>(this.validator, schema, uiSchema, this.rootSchema, globalOptions);\n  }\n\n  /** Determines which of the given `options` provided most closely matches the `formData`.\n   * Returns the index of the option that is valid and is the closest match, or 0 if there is no match.\n   *\n   * The closest match is determined using the number of matching properties, and more heavily favors options with\n   * matching readOnly, default, or const values.\n   *\n   * @param formData - The form data associated with the schema\n   * @param options - The list of options that can be selected from\n   * @param [selectedOption] - The index of the currently selected option, defaulted to -1 if not specified\n   * @param [discriminatorField] - The optional name of the field within the options object whose value is used to\n   *          determine which option is selected\n   * @returns - The index of the option that is the closest match to the `formData` or the `selectedOption` if no match\n   */\n  getClosestMatchingOption(\n    formData: T | undefined,\n    options: S[],\n    selectedOption?: number,\n    discriminatorField?: string\n  ): number {\n    return getClosestMatchingOption<T, S, F>(\n      this.validator,\n      this.rootSchema,\n      formData,\n      options,\n      selectedOption,\n      discriminatorField\n    );\n  }\n\n  /** Given the `formData` and list of `options`, attempts to find the index of the first option that matches the data.\n   * Always returns the first option if there is nothing that matches.\n   *\n   * @param formData - The current formData, if any, used to figure out a match\n   * @param options - The list of options to find a matching options from\n   * @param [discriminatorField] - The optional name of the field within the options object whose value is used to\n   *          determine which option is selected\n   * @returns - The firstindex of the matched option or 0 if none is available\n   */\n  getFirstMatchingOption(formData: T | undefined, options: S[], discriminatorField?: string): number {\n    return getFirstMatchingOption<T, S, F>(this.validator, formData, options, this.rootSchema, discriminatorField);\n  }\n\n  /** Given the `formData` and list of `options`, attempts to find the index of the option that best matches the data.\n   * Deprecated, use `getFirstMatchingOption()` instead.\n   *\n   * @param formData - The current formData, if any, onto which to provide any missing defaults\n   * @param options - The list of options to find a matching options from\n   * @param [discriminatorField] - The optional name of the field within the options object whose value is used to\n   *          determine which option is selected\n   * @returns - The index of the matched option or 0 if none is available\n   * @deprecated\n   */\n  getMatchingOption(formData: T | undefined, options: S[], discriminatorField?: string) {\n    return getMatchingOption<T, S, F>(this.validator, formData, options, this.rootSchema, discriminatorField);\n  }\n\n  /** Checks to see if the `schema` and `uiSchema` combination represents an array of files\n   *\n   * @param schema - The schema for which check for array of files flag is desired\n   * @param [uiSchema] - The UI schema from which to check the widget\n   * @returns - True if schema/uiSchema contains an array of files, otherwise false\n   */\n  isFilesArray(schema: S, uiSchema?: UiSchema<T, S, F>) {\n    return isFilesArray<T, S, F>(this.validator, schema, uiSchema, this.rootSchema);\n  }\n\n  /** Checks to see if the `schema` combination represents a multi-select\n   *\n   * @param schema - The schema for which check for a multi-select flag is desired\n   * @returns - True if schema contains a multi-select, otherwise false\n   */\n  isMultiSelect(schema: S) {\n    return isMultiSelect<T, S, F>(this.validator, schema, this.rootSchema);\n  }\n\n  /** Checks to see if the `schema` combination represents a select\n   *\n   * @param schema - The schema for which check for a select flag is desired\n   * @returns - True if schema contains a select, otherwise false\n   */\n  isSelect(schema: S) {\n    return isSelect<T, S, F>(this.validator, schema, this.rootSchema);\n  }\n\n  /** Merges the errors in `additionalErrorSchema` into the existing `validationData` by combining the hierarchies in\n   * the two `ErrorSchema`s and then appending the error list from the `additionalErrorSchema` obtained by calling\n   * `getValidator().toErrorList()` onto the `errors` in the `validationData`. If no `additionalErrorSchema` is passed,\n   * then `validationData` is returned.\n   *\n   * @param validationData - The current `ValidationData` into which to merge the additional errors\n   * @param [additionalErrorSchema] - The additional set of errors\n   * @returns - The `validationData` with the additional errors from `additionalErrorSchema` merged into it, if provided.\n   * @deprecated - Use the `validationDataMerge()` function exported from `@rjsf/utils` instead. This function will be\n   *        removed in the next major release.\n   */\n  mergeValidationData(validationData: ValidationData<T>, additionalErrorSchema?: ErrorSchema<T>): ValidationData<T> {\n    return mergeValidationData<T, S, F>(this.validator, validationData, additionalErrorSchema);\n  }\n\n  /** Retrieves an expanded schema that has had all of its conditions, additional properties, references and\n   * dependencies resolved and merged into the `schema` given a `rawFormData` that is used to do the potentially\n   * recursive resolution.\n   *\n   * @param schema - The schema for which retrieving a schema is desired\n   * @param [rawFormData] - The current formData, if any, to assist retrieving a schema\n   * @returns - The schema having its conditions, additional properties, references and dependencies resolved\n   */\n  retrieveSchema(schema: S, rawFormData?: T) {\n    return retrieveSchema<T, S, F>(this.validator, schema, this.rootSchema, rawFormData);\n  }\n\n  /** Sanitize the `data` associated with the `oldSchema` so it is considered appropriate for the `newSchema`. If the\n   * new schema does not contain any properties, then `undefined` is returned to clear all the form data. Due to the\n   * nature of schemas, this sanitization happens recursively for nested objects of data. Also, any properties in the\n   * old schemas that are non-existent in the new schema are set to `undefined`.\n   *\n   * @param [newSchema] - The new schema for which the data is being sanitized\n   * @param [oldSchema] - The old schema from which the data originated\n   * @param [data={}] - The form data associated with the schema, defaulting to an empty object when undefined\n   * @returns - The new form data, with all the fields uniquely associated with the old schema set\n   *      to `undefined`. Will return `undefined` if the new schema is not an object containing properties.\n   */\n  sanitizeDataForNewSchema(newSchema?: S, oldSchema?: S, data?: any): T {\n    return sanitizeDataForNewSchema(this.validator, this.rootSchema, newSchema, oldSchema, data);\n  }\n\n  /** Generates an `IdSchema` object for the `schema`, recursively\n   *\n   * @param schema - The schema for which the display label flag is desired\n   * @param [id] - The base id for the schema\n   * @param [formData] - The current formData, if any, onto which to provide any missing defaults\n   * @param [idPrefix='root'] - The prefix to use for the id\n   * @param [idSeparator='_'] - The separator to use for the path segments in the id\n   * @returns - The `IdSchema` object for the `schema`\n   */\n  toIdSchema(schema: S, id?: string | null, formData?: T, idPrefix = 'root', idSeparator = '_'): IdSchema<T> {\n    return toIdSchema<T, S, F>(this.validator, schema, id, this.rootSchema, formData, idPrefix, idSeparator);\n  }\n\n  /** Generates an `PathSchema` object for the `schema`, recursively\n   *\n   * @param schema - The schema for which the display label flag is desired\n   * @param [name] - The base name for the schema\n   * @param [formData] - The current formData, if any, onto which to provide any missing defaults\n   * @returns - The `PathSchema` object for the `schema`\n   */\n  toPathSchema(schema: S, name?: string, formData?: T): PathSchema<T> {\n    return toPathSchema<T, S, F>(this.validator, schema, name, this.rootSchema, formData);\n  }\n}\n\n/** Creates a `SchemaUtilsType` interface that is based around the given `validator` and `rootSchema` parameters. The\n * resulting interface implementation will forward the `validator` and `rootSchema` to all the wrapped APIs.\n *\n * @param validator - an implementation of the `ValidatorType` interface that will be forwarded to all the APIs\n * @param rootSchema - The root schema that will be forwarded to all the APIs\n * @param [experimental_defaultFormStateBehavior] Optional configuration object, if provided, allows users to override default form state behavior\n * @returns - An implementation of a `SchemaUtilsType` interface\n */\nexport default function createSchemaUtils<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(\n  validator: ValidatorType<T, S, F>,\n  rootSchema: S,\n  experimental_defaultFormStateBehavior = {}\n): SchemaUtilsType<T, S, F> {\n  return new SchemaUtils<T, S, F>(validator, rootSchema, experimental_defaultFormStateBehavior);\n}\n", "/** Given the `FileReader.readAsDataURL()` based `dataURI` extracts that data into an actual Blob along with the name\n * of that Blob if provided in the URL. If no name is provided, then the name falls back to `unknown`.\n *\n * @param dataURI - The `DataUrl` potentially containing name and raw data to be converted to a Blob\n * @returns - an object containing a Blob and its name, extracted from the URI\n */\nexport default function dataURItoBlob(dataURILike: string) {\n  // check if is dataURI\n  if (dataURILike.indexOf('data:') === -1) {\n    throw new Error('File is invalid: URI must be a dataURI');\n  }\n  const dataURI = dataURILike.slice(5);\n  // split the dataURI into media and base64, with the base64 signature\n  const splitted = dataURI.split(';base64,');\n  // if the base64 signature is not present, the latter part will become empty\n  if (splitted.length !== 2) {\n    throw new Error('File is invalid: dataURI must be base64');\n  }\n  // extract the mime type, media parameters including the name, and the base64 string\n  const [media, base64] = splitted;\n  const [mime, ...mediaparams] = media.split(';');\n  const type = mime || '';\n\n  // extract the name from the parameters\n  const name = decodeURI(\n    // parse the parameters into key-value pairs, find a key, and extract a value\n    // if no key is found, then the name is unknown\n    mediaparams.map((param) => param.split('=')).find(([key]) => key === 'name')?.[1] || 'unknown'\n  );\n\n  // Built the Uint8Array Blob parameter from the base64 string.\n  try {\n    const binary = atob(base64);\n    const array = new Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n      array[i] = binary.charCodeAt(i);\n    }\n    // Create the blob object\n    const blob = new window.Blob([new Uint8Array(array)], { type });\n\n    return { blob, name };\n  } catch (error) {\n    throw new Error('File is invalid: ' + (error as Error).message);\n  }\n}\n", "/** Potentially substitutes all replaceable parameters with the associated value(s) from the `params` if available. When\n * a `params` array is provided, each value in the array is used to replace any of the replaceable parameters in the\n * `inputString` using the `%1`, `%2`, etc. replacement specifiers.\n *\n * @param inputString - The string which will be potentially updated with replacement parameters\n * @param params - The optional list of replaceable parameter values to substitute into the english string\n * @returns - The updated string with any replacement specifiers replaced\n */\nexport default function replaceStringParameters(inputString: string, params?: string[]) {\n  let output = inputString;\n  if (Array.isArray(params)) {\n    const parts = output.split(/(%\\d)/);\n    params.forEach((param, index) => {\n      const partIndex = parts.findIndex((part) => part === `%${index + 1}`);\n      if (partIndex >= 0) {\n        parts[partIndex] = param;\n      }\n    });\n    output = parts.join('');\n  }\n  return output;\n}\n", "import { TranslatableString } from './enums';\nimport replaceStringParameters from './replaceStringParameters';\n\n/** Translates a `TranslatableString` value `stringToTranslate` into english. When a `params` array is provided, each\n * value in the array is used to replace any of the replaceable parameters in the `stringToTranslate` using the `%1`,\n * `%2`, etc. replacement specifiers.\n *\n * @param stringToTranslate - The `TranslatableString` value to convert to english\n * @param params - The optional list of replaceable parameter values to substitute into the english string\n * @returns - The `stringToTranslate` itself with any replaceable parameter values substituted\n */\nexport default function englishStringTranslator(stringToTranslate: TranslatableString, params?: string[]): string {\n  return replaceStringParameters(stringToTranslate, params);\n}\n", "import { EnumOptionsType, RJSFSchema, StrictRJSFSchema } from './types';\n\n/** Returns the value(s) from `allEnumOptions` at the index(es) provided by `valueIndex`. If `valueIndex` is not an\n * array AND the index is not valid for `allEnumOptions`, `emptyValue` is returned. If `valueIndex` is an array, AND it\n * contains an invalid index, the returned array will have the resulting undefined values filtered out, leaving only\n * valid values or in the worst case, an empty array.\n *\n * @param valueIndex - The index(es) of the value(s) that should be returned\n * @param [allEnumOptions=[]] - The list of all the known enumOptions\n * @param [emptyValue] - The value to return when the non-array `valueIndex` does not refer to a real option\n * @returns - The single or list of values specified by the single or list of indexes if they are valid. Otherwise,\n *        `emptyValue` or an empty list.\n */\nexport default function enumOptionsValueForIndex<S extends StrictRJSFSchema = RJSFSchema>(\n  valueIndex: string | number | Array<string | number>,\n  allEnumOptions: EnumOptionsType<S>[] = [],\n  emptyValue?: EnumOptionsType<S>['value']\n): EnumOptionsType<S>['value'] | EnumOptionsType<S>['value'][] | undefined {\n  if (Array.isArray(valueIndex)) {\n    return (\n      valueIndex\n        .map((index) => enumOptionsValueForIndex(index, allEnumOptions))\n        // Since the recursive call returns `emptyValue` when we get a bad option, only filter those out\n        .filter((val) => val !== emptyValue)\n    );\n  }\n  // So Number(null) and Number('') both return 0, so use emptyValue for those two values\n  const index = valueIndex === '' || valueIndex === null ? -1 : Number(valueIndex);\n  const option = allEnumOptions[index];\n  return option ? option.value : emptyValue;\n}\n", "import isEqual from 'lodash/isEqual';\n\nimport { EnumOptionsType, RJSFSchema, StrictRJSFSchema } from './types';\nimport enumOptionsValueForIndex from './enumOptionsValueForIndex';\n\n/** Removes the enum option value at the `valueIndex` from the currently `selected` (list of) value(s). If `selected` is\n * a list, then that list is updated to remove the enum option value with the `valueIndex` in `allEnumOptions`. If it is\n * a single value, then if the enum option value with the `valueIndex` in `allEnumOptions` matches `selected`, undefined\n * is returned, otherwise the `selected` value is returned.\n *\n * @param valueIndex - The index of the value to be removed from the selected list or single value\n * @param selected - The current (list of) selected value(s)\n * @param [allEnumOptions=[]] - The list of all the known enumOptions\n * @returns - The updated `selected` with the enum option value at `valueIndex` in `allEnumOptions` removed from it,\n *        unless `selected` is a single value. In that case, if the `valueIndex` value matches `selected`, returns\n *        undefined, otherwise `selected`.\n */\nexport default function enumOptionsDeselectValue<S extends StrictRJSFSchema = RJSFSchema>(\n  valueIndex: string | number,\n  selected?: EnumOptionsType<S>['value'] | EnumOptionsType<S>['value'][],\n  allEnumOptions: EnumOptionsType<S>[] = []\n): EnumOptionsType<S>['value'] | EnumOptionsType<S>['value'][] | undefined {\n  const value = enumOptionsValueForIndex<S>(valueIndex, allEnumOptions);\n  if (Array.isArray(selected)) {\n    return selected.filter((v) => !isEqual(v, value));\n  }\n  return isEqual(value, selected) ? undefined : selected;\n}\n", "import isEqual from 'lodash/isEqual';\n\nimport { EnumOptionsType, RJSFSchema, StrictRJSFSchema } from './types';\n\n/** Determines whether the given `value` is (one of) the `selected` value(s).\n *\n * @param value - The value being checked to see if it is selected\n * @param selected - The current selected value or list of values\n * @returns - true if the `value` is one of the `selected` ones, false otherwise\n */\nexport default function enumOptionsIsSelected<S extends StrictRJSFSchema = RJSFSchema>(\n  value: EnumOptionsType<S>['value'],\n  selected: EnumOptionsType<S>['value'] | EnumOptionsType<S>['value'][]\n) {\n  if (Array.isArray(selected)) {\n    return selected.some((sel) => isEqual(sel, value));\n  }\n  return isEqual(selected, value);\n}\n", "import { EnumOptionsType, RJSFSchema, StrictRJSFSchema } from './types';\nimport enumOptionsIsSelected from './enumOptionsIsSelected';\n\n/** Returns the index(es) of the options in `allEnumOptions` whose value(s) match the ones in `value`. All the\n * `enumOptions` are filtered based on whether they are a \"selected\" `value` and the index of each selected one is then\n * stored in an array. If `multiple` is true, that array is returned, otherwise the first element in the array is\n * returned.\n *\n * @param value - The single value or list of values for which indexes are desired\n * @param [allEnumOptions=[]] - The list of all the known enumOptions\n * @param [multiple=false] - Optional flag, if true will return a list of index, otherwise a single one\n * @returns - A single string index for the first `value` in `allEnumOptions`, if not `multiple`. Otherwise, the list\n *        of indexes for (each of) the value(s) in `value`.\n */\nexport default function enumOptionsIndexForValue<S extends StrictRJSFSchema = RJSFSchema>(\n  value: EnumOptionsType<S>['value'] | EnumOptionsType<S>['value'][],\n  allEnumOptions: EnumOptionsType<S>[] = [],\n  multiple = false\n): string | string[] | undefined {\n  const selectedIndexes: string[] = allEnumOptions\n    .map((opt, index) => (enumOptionsIsSelected(opt.value, value) ? String(index) : undefined))\n    .filter((opt) => typeof opt !== 'undefined') as string[];\n  if (!multiple) {\n    return selectedIndexes[0];\n  }\n  return selectedIndexes;\n}\n", "/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n *\n * _.isNil(null);\n * // => true\n *\n * _.isNil(void 0);\n * // => true\n *\n * _.isNil(NaN);\n * // => false\n */\nfunction isNil(value) {\n  return value == null;\n}\n\nmodule.exports = isNil;\n", "import { EnumOptionsType, RJSFSchema, StrictRJSFSchema } from './types';\nimport enumOptionsValueForIndex from './enumOptionsValueForIndex';\nimport isNil from 'lodash/isNil';\n\n/** Add the enum option value at the `valueIndex` to the list of `selected` values in the proper order as defined by\n * `allEnumOptions`\n *\n * @param valueIndex - The index of the value that should be selected\n * @param selected - The current list of selected values\n * @param [allEnumOptions=[]] - The list of all the known enumOptions\n * @returns - The updated list of selected enum values with enum value at the `valueIndex` added to it\n */\nexport default function enumOptionsSelectValue<S extends StrictRJSFSchema = RJSFSchema>(\n  valueIndex: string | number,\n  selected: EnumOptionsType<S>['value'][],\n  allEnumOptions: EnumOptionsType<S>[] = []\n) {\n  const value = enumOptionsValueForIndex<S>(valueIndex, allEnumOptions);\n  if (!isNil(value)) {\n    const index = allEnumOptions.findIndex((opt) => value === opt.value);\n    const all = allEnumOptions.map(({ value: val }) => val);\n    const updated = selected.slice(0, index).concat(value, selected.slice(index));\n    // As inserting values at predefined index positions doesn't work with empty\n    // arrays, we need to reorder the updated selection to match the initial order\n    return updated.sort((a, b) => Number(all.indexOf(a) > all.indexOf(b)));\n  }\n  return selected;\n}\n", "import cloneDeep from 'lodash/cloneDeep';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\n\nimport { ErrorSchema } from './types';\nimport { ERRORS_KEY } from './constants';\n\n/** The `ErrorSchemaBuilder<T>` is used to build an `ErrorSchema<T>` since the definition of the `ErrorSchema` type is\n * designed for reading information rather than writing it. Use this class to add, replace or clear errors in an error\n * schema by using either dotted path or an array of path names. Once you are done building the `ErrorSchema`, you can\n * get the result and/or reset all the errors back to an initial set and start again.\n */\nexport default class ErrorSchemaBuilder<T = any> {\n  /** The error schema being built\n   *\n   * @private\n   */\n  private errorSchema: ErrorSchema<T> = {};\n\n  /** Construct an `ErrorSchemaBuilder` with an optional initial set of errors in an `ErrorSchema`.\n   *\n   * @param [initialSchema] - The optional set of initial errors, that will be cloned into the class\n   */\n  constructor(initialSchema?: ErrorSchema<T>) {\n    this.resetAllErrors(initialSchema);\n  }\n\n  /** Returns the `ErrorSchema` that has been updated by the methods of the `ErrorSchemaBuilder`\n   */\n  get ErrorSchema() {\n    return this.errorSchema;\n  }\n\n  /** Will get an existing `ErrorSchema` at the specified `pathOfError` or create and return one.\n   *\n   * @param [pathOfError] - The optional path into the `ErrorSchema` at which to add the error(s)\n   * @returns - The error block for the given `pathOfError` or the root if not provided\n   * @private\n   */\n  private getOrCreateErrorBlock(pathOfError?: string | string[]) {\n    const hasPath = (Array.isArray(pathOfError) && pathOfError.length > 0) || typeof pathOfError === 'string';\n    let errorBlock: ErrorSchema = hasPath ? get(this.errorSchema, pathOfError) : this.errorSchema;\n    if (!errorBlock && pathOfError) {\n      errorBlock = {};\n      set(this.errorSchema, pathOfError, errorBlock);\n    }\n    return errorBlock;\n  }\n\n  /** Resets all errors in the `ErrorSchemaBuilder` back to the `initialSchema` if provided, otherwise an empty set.\n   *\n   * @param [initialSchema] - The optional set of initial errors, that will be cloned into the class\n   * @returns - The `ErrorSchemaBuilder` object for chaining purposes\n   */\n  resetAllErrors(initialSchema?: ErrorSchema<T>) {\n    this.errorSchema = initialSchema ? cloneDeep(initialSchema) : {};\n    return this;\n  }\n\n  /** Adds the `errorOrList` to the list of errors in the `ErrorSchema` at either the root level or the location within\n   * the schema described by the `pathOfError`. For more information about how to specify the path see the\n   * [eslint lodash plugin docs](https://github.com/wix/eslint-plugin-lodash/blob/master/docs/rules/path-style.md).\n   *\n   * @param errorOrList - The error or list of errors to add into the `ErrorSchema`\n   * @param [pathOfError] - The optional path into the `ErrorSchema` at which to add the error(s)\n   * @returns - The `ErrorSchemaBuilder` object for chaining purposes\n   */\n  addErrors(errorOrList: string | string[], pathOfError?: string | string[]) {\n    const errorBlock: ErrorSchema = this.getOrCreateErrorBlock(pathOfError);\n    let errorsList = get(errorBlock, ERRORS_KEY);\n    if (!Array.isArray(errorsList)) {\n      errorsList = [];\n      errorBlock[ERRORS_KEY] = errorsList;\n    }\n\n    if (Array.isArray(errorOrList)) {\n      errorsList.push(...errorOrList);\n    } else {\n      errorsList.push(errorOrList);\n    }\n    return this;\n  }\n\n  /** Sets/replaces the `errorOrList` as the error(s) in the `ErrorSchema` at either the root level or the location\n   * within the schema described by the `pathOfError`. For more information about how to specify the path see the\n   * [eslint lodash plugin docs](https://github.com/wix/eslint-plugin-lodash/blob/master/docs/rules/path-style.md).\n   *\n   * @param errorOrList - The error or list of errors to set into the `ErrorSchema`\n   * @param [pathOfError] - The optional path into the `ErrorSchema` at which to set the error(s)\n   * @returns - The `ErrorSchemaBuilder` object for chaining purposes\n   */\n  setErrors(errorOrList: string | string[], pathOfError?: string | string[]) {\n    const errorBlock: ErrorSchema = this.getOrCreateErrorBlock(pathOfError);\n    // Effectively clone the array being given to prevent accidental outside manipulation of the given list\n    const listToAdd = Array.isArray(errorOrList) ? [...errorOrList] : [errorOrList];\n    set(errorBlock, ERRORS_KEY, listToAdd);\n    return this;\n  }\n\n  /** Clears the error(s) in the `ErrorSchema` at either the root level or the location within the schema described by\n   * the `pathOfError`. For more information about how to specify the path see the\n   * [eslint lodash plugin docs](https://github.com/wix/eslint-plugin-lodash/blob/master/docs/rules/path-style.md).\n   *\n   * @param [pathOfError] - The optional path into the `ErrorSchema` at which to clear the error(s)\n   * @returns - The `ErrorSchemaBuilder` object for chaining purposes\n   */\n  clearErrors(pathOfError?: string | string[]) {\n    const errorBlock: ErrorSchema = this.getOrCreateErrorBlock(pathOfError);\n    set(errorBlock, ERRORS_KEY, []);\n    return this;\n  }\n}\n", "import { type DateObject } from './types';\n\n/** Available options for re-ordering date input element */\nexport type DateElementFormat = 'DMY' | 'MDY' | 'YMD';\n\n/** Type describing format of DateElement prop */\ntype DateElementProp = {\n  type: string;\n  range: [number, number];\n  value: number | undefined;\n};\n\n/** Given date & time information with optional yearRange & format, returns props for DateElement\n *\n * @param date - Object containing date with optional time information\n * @param time - Determines whether to include time or not\n * @param [yearRange=[1900, new Date().getFullYear() + 2]] - Controls the list of years to be displayed\n * @param [format='YMD'] - Controls the order in which day, month and year input element will be displayed\n * @returns Array of props for DateElement\n */\n\nexport default function getDateElementProps(\n  date: DateObject,\n  time: boolean,\n  yearRange: [number, number] = [1900, new Date().getFullYear() + 2],\n  format: DateElementFormat = 'YMD'\n) {\n  const { day, month, year, hour, minute, second } = date;\n\n  const dayObj: DateElementProp = { type: 'day', range: [1, 31], value: day };\n  const monthObj: DateElementProp = { type: 'month', range: [1, 12], value: month };\n  const yearObj: DateElementProp = { type: 'year', range: yearRange, value: year };\n\n  const dateElementProp: DateElementProp[] = [];\n  switch (format) {\n    case 'MDY':\n      dateElementProp.push(monthObj, dayObj, yearObj);\n      break;\n    case 'DMY':\n      dateElementProp.push(dayObj, monthObj, yearObj);\n      break;\n    case 'YMD':\n    default:\n      dateElementProp.push(yearObj, monthObj, dayObj);\n  }\n\n  if (time) {\n    dateElementProp.push(\n      { type: 'hour', range: [0, 23], value: hour },\n      { type: 'minute', range: [0, 59], value: minute },\n      { type: 'second', range: [0, 59], value: second }\n    );\n  }\n\n  return dateElementProp;\n}\n", "import { RangeSpecType, StrictRJSFSchema } from './types';\nimport { RJSFSchema } from './types';\n\n/** Extracts the range spec information `{ step?: number, min?: number, max?: number }` that can be spread onto an HTML\n * input from the range analog in the schema `{ multipleOf?: number, minimum?: number, maximum?: number }`.\n *\n * @param schema - The schema from which to extract the range spec\n * @returns - A range specification from the schema\n */\nexport default function rangeSpec<S extends StrictRJSFSchema = RJSFSchema>(schema: S) {\n  const spec: RangeSpecType = {};\n  if (schema.multipleOf) {\n    spec.step = schema.multipleOf;\n  }\n  if (schema.minimum || schema.minimum === 0) {\n    spec.min = schema.minimum;\n  }\n  if (schema.maximum || schema.maximum === 0) {\n    spec.max = schema.maximum;\n  }\n  return spec;\n}\n", "import rangeSpec from './rangeSpec';\nimport { FormContextType, InputPropsType, RJSFSchema, StrictRJSFSchema, UIOptionsType } from './types';\n\n/** Using the `schema`, `defaultType` and `options`, extract out the props for the <input> element that make sense.\n *\n * @param schema - The schema for the field provided by the widget\n * @param [defaultType] - The default type, if any, for the field provided by the widget\n * @param [options={}] - The UI Options for the field provided by the widget\n * @param [autoDefaultStepAny=true] - Determines whether to auto-default step=any when the type is number and no step\n * @returns - The extracted `InputPropsType` object\n */\nexport default function getInputProps<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(\n  schema: RJSFSchema,\n  defaultType?: string,\n  options: UIOptionsType<T, S, F> = {},\n  autoDefaultStepAny = true\n): InputPropsType {\n  const inputProps: InputPropsType = {\n    type: defaultType || 'text',\n    ...rangeSpec(schema),\n  };\n\n  // If options.inputType is set use that as the input type\n  if (options.inputType) {\n    inputProps.type = options.inputType;\n  } else if (!defaultType) {\n    // If the schema is of type number or integer, set the input type to number\n    if (schema.type === 'number') {\n      inputProps.type = 'number';\n      // Only add step if one isn't already defined and we are auto-defaulting the \"any\" step\n      if (autoDefaultStepAny && inputProps.step === undefined) {\n        // Setting step to 'any' fixes a bug in Safari where decimals are not\n        // allowed in number inputs\n        inputProps.step = 'any';\n      }\n    } else if (schema.type === 'integer') {\n      inputProps.type = 'number';\n      // Only add step if one isn't already defined\n      if (inputProps.step === undefined) {\n        // Since this is integer, you always want to step up or down in multiples of 1\n        inputProps.step = 1;\n      }\n    }\n  }\n\n  if (options.autocomplete) {\n    inputProps.autoComplete = options.autocomplete;\n  }\n\n  return inputProps;\n}\n", "import { SUBMIT_BTN_OPTIONS_KEY } from './constants';\nimport getUiOptions from './getUiOptions';\nimport { FormContextType, RJSFSchema, StrictRJSFSchema, UiSchema, UISchemaSubmitButtonOptions } from './types';\n\n/** The default submit button options, exported for testing purposes\n */\nexport const DEFAULT_OPTIONS: UISchemaSubmitButtonOptions = {\n  props: {\n    disabled: false,\n  },\n  submitText: 'Submit',\n  norender: false,\n};\n\n/** Extracts any `ui:submitButtonOptions` from the `uiSchema` and merges them onto the `DEFAULT_OPTIONS`\n *\n * @param [uiSchema={}] - the UI Schema from which to extract submit button props\n * @returns - The merging of the `DEFAULT_OPTIONS` with any custom ones\n */\nexport default function getSubmitButtonOptions<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(uiSchema: UiSchema<T, S, F> = {}): UISchemaSubmitButtonOptions {\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\n  if (uiOptions && uiOptions[SUBMIT_BTN_OPTIONS_KEY]) {\n    const options = uiOptions[SUBMIT_BTN_OPTIONS_KEY] as UISchemaSubmitButtonOptions;\n    return { ...DEFAULT_OPTIONS, ...options };\n  }\n\n  return DEFAULT_OPTIONS;\n}\n", "import { FormContextType, TemplatesType, Registry, UIOptionsType, StrictRJSFSchema, RJSFSchema } from './types';\n\n/** Returns the template with the given `name` from either the `uiSchema` if it is defined or from the `registry`\n * otherwise. NOTE, since `ButtonTemplates` are not overridden in `uiSchema` only those in the `registry` are returned.\n *\n * @param name - The name of the template to fetch, restricted to the keys of `TemplatesType`\n * @param registry - The `Registry` from which to read the template\n * @param [uiOptions={}] - The `UIOptionsType` from which to read an alternate template\n * @returns - The template from either the `uiSchema` or `registry` for the `name`\n */\nexport default function getTemplate<\n  Name extends keyof TemplatesType<T, S, F>,\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(name: Name, registry: Registry<T, S, F>, uiOptions: UIOptionsType<T, S, F> = {}): TemplatesType<T, S, F>[Name] {\n  const { templates } = registry;\n  if (name === 'ButtonTemplates') {\n    return templates[name];\n  }\n  return (\n    // Evaluating uiOptions[name] results in TS2590: Expression produces a union type that is too complex to represent\n    // To avoid that, we cast uiOptions to `any` before accessing the name field\n    ((uiOptions as any)[name] as TemplatesType<T, S, F>[Name]) || templates[name]\n  );\n}\n", "/**\n * @license React\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n          case REACT_SUSPENSE_LIST_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_SERVER_CONTEXT_TYPE:\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n}\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar SuspenseList = REACT_SUSPENSE_LIST_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false;\nvar hasWarnedAboutDeprecatedIsConcurrentMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 18+.');\n    }\n  }\n\n  return false;\n}\nfunction isConcurrentMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsConcurrentMode) {\n      hasWarnedAboutDeprecatedIsConcurrentMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isConcurrentMode() alias has been deprecated, ' + 'and will be removed in React 18+.');\n    }\n  }\n\n  return false;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\nfunction isSuspenseList(object) {\n  return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;\n}\n\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.SuspenseList = SuspenseList;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isSuspenseList = isSuspenseList;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n", "import { createElement } from 'react';\nimport ReactIs from 'react-is';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\n\nimport { FormContextType, RJSFSchema, Widget, RegistryWidgetsType, StrictRJSFSchema } from './types';\nimport getSchemaType from './getSchemaType';\n\n/** The map of schema types to widget type to widget name\n */\nconst widgetMap: { [k: string]: { [j: string]: string } } = {\n  boolean: {\n    checkbox: 'CheckboxWidget',\n    radio: 'RadioWidget',\n    select: 'SelectWidget',\n    hidden: 'HiddenWidget',\n  },\n  string: {\n    text: 'TextWidget',\n    password: 'PasswordWidget',\n    email: 'EmailWidget',\n    hostname: 'TextWidget',\n    ipv4: 'TextWidget',\n    ipv6: 'TextWidget',\n    uri: 'URLWidget',\n    'data-url': 'FileWidget',\n    radio: 'RadioWidget',\n    select: 'SelectWidget',\n    textarea: 'TextareaWidget',\n    hidden: 'HiddenWidget',\n    date: 'DateWidget',\n    datetime: 'DateTimeWidget',\n    'date-time': 'DateTimeWidget',\n    'alt-date': 'AltDateWidget',\n    'alt-datetime': 'AltDateTimeWidget',\n    time: 'TimeWidget',\n    color: 'ColorWidget',\n    file: 'FileWidget',\n  },\n  number: {\n    text: 'TextWidget',\n    select: 'SelectWidget',\n    updown: 'UpDownWidget',\n    range: 'RangeWidget',\n    radio: 'RadioWidget',\n    hidden: 'HiddenWidget',\n  },\n  integer: {\n    text: 'TextWidget',\n    select: 'SelectWidget',\n    updown: 'UpDownWidget',\n    range: 'RangeWidget',\n    radio: 'RadioWidget',\n    hidden: 'HiddenWidget',\n  },\n  array: {\n    select: 'SelectWidget',\n    checkboxes: 'CheckboxesWidget',\n    files: 'FileWidget',\n    hidden: 'HiddenWidget',\n  },\n};\n\n/** Wraps the given widget with stateless functional component that will merge any `defaultProps.options` with the\n * `options` that are provided in the props. It will add the wrapper component as a `MergedWidget` property onto the\n * `Widget` so that future attempts to wrap `AWidget` will return the already existing wrapper.\n *\n * @param AWidget - A widget that will be wrapped or one that is already wrapped\n * @returns - The wrapper widget\n */\nfunction mergeWidgetOptions<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  AWidget: Widget<T, S, F>\n) {\n  let MergedWidget: Widget<T, S, F> | undefined = get(AWidget, 'MergedWidget');\n  // cache return value as property of widget for proper react reconciliation\n  if (!MergedWidget) {\n    const defaultOptions = (AWidget.defaultProps && AWidget.defaultProps.options) || {};\n    MergedWidget = ({ options, ...props }) => {\n      return <AWidget options={{ ...defaultOptions, ...options }} {...props} />;\n    };\n    set(AWidget, 'MergedWidget', MergedWidget);\n  }\n  return MergedWidget;\n}\n\n/** Given a schema representing a field to render and either the name or actual `Widget` implementation, returns the\n * React component that is used to render the widget. If the `widget` is already a React component, then it is wrapped\n * with a `MergedWidget`. Otherwise an attempt is made to look up the widget inside of the `registeredWidgets` map based\n * on the schema type and `widget` name. If no widget component can be found an `Error` is thrown.\n *\n * @param schema - The schema for the field\n * @param [widget] - Either the name of the widget OR a `Widget` implementation to use\n * @param [registeredWidgets={}] - A registry of widget name to `Widget` implementation\n * @returns - The `Widget` component to use\n * @throws - An error if there is no `Widget` component that can be returned\n */\nexport default function getWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  schema: RJSFSchema,\n  widget?: Widget<T, S, F> | string,\n  registeredWidgets: RegistryWidgetsType<T, S, F> = {}\n): Widget<T, S, F> {\n  const type = getSchemaType(schema);\n\n  if (\n    typeof widget === 'function' ||\n    (widget && ReactIs.isForwardRef(createElement(widget))) ||\n    ReactIs.isMemo(widget)\n  ) {\n    return mergeWidgetOptions<T, S, F>(widget as Widget<T, S, F>);\n  }\n\n  if (typeof widget !== 'string') {\n    throw new Error(`Unsupported widget definition: ${typeof widget}`);\n  }\n\n  if (widget in registeredWidgets) {\n    const registeredWidget = registeredWidgets[widget];\n    return getWidget<T, S, F>(schema, registeredWidget, registeredWidgets);\n  }\n\n  if (typeof type === 'string') {\n    if (!(type in widgetMap)) {\n      throw new Error(`No widget for type '${type}'`);\n    }\n\n    if (widget in widgetMap[type]) {\n      const registeredWidget = registeredWidgets[widgetMap[type][widget]];\n      return getWidget<T, S, F>(schema, registeredWidget, registeredWidgets);\n    }\n  }\n\n  throw new Error(`No widget '${widget}' for type '${type}'`);\n}\n", "import { RJSFSchema, StrictRJSFSchema } from './types';\n\n/** JS has no built-in hashing function, so rolling our own\n *  based on Java's hashing fn:\n *  http://www.java2s.com/example/nodejs-utility-method/string-hash/hashcode-4dc2b.html\n *\n * @param string - The string for which to get the hash\n * @returns - The resulting hash of the string in hex format\n */\nfunction hashString(string: string): string {\n  let hash = 0;\n  for (let i = 0; i < string.length; i += 1) {\n    const chr = string.charCodeAt(i);\n    hash = (hash << 5) - hash + chr;\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash.toString(16);\n}\n\n/** Stringifies the schema and returns the hash of the resulting string. Sorts schema fields\n * in consistent order before stringify to prevent different hash ids for the same schema.\n *\n * @param schema - The schema for which the hash is desired\n * @returns - The string obtained from the hash of the stringified schema\n */\nexport default function hashForSchema<S extends StrictRJSFSchema = RJSFSchema>(schema: S) {\n  const allKeys = new Set<string>();\n  // solution source: https://stackoverflow.com/questions/16167581/sort-object-properties-and-json-stringify/53593328#53593328\n  JSON.stringify(schema, (key, value) => (allKeys.add(key), value));\n  return hashString(JSON.stringify(schema, Array.from(allKeys).sort()));\n}\n", "import getWidget from './getWidget';\nimport { FormContextType, RegistryWidgetsType, RJSFSchema, StrictRJSFSchema, Widget } from './types';\n\n/** Detects whether the `widget` exists for the `schema` with the associated `registryWidgets` and returns true if it\n * does, or false if it doesn't.\n *\n * @param schema - The schema for the field\n * @param widget - Either the name of the widget OR a `Widget` implementation to use\n * @param [registeredWidgets={}] - A registry of widget name to `Widget` implementation\n * @returns - True if the widget exists, false otherwise\n */\nexport default function hasWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  schema: RJSFSchema,\n  widget: Widget<T, S, F> | string,\n  registeredWidgets: RegistryWidgetsType<T, S, F> = {}\n) {\n  try {\n    getWidget(schema, widget, registeredWidgets);\n    return true;\n  } catch (e) {\n    const err: Error = e as Error;\n    if (err.message && (err.message.startsWith('No widget') || err.message.startsWith('Unsupported widget'))) {\n      return false;\n    }\n    throw e;\n  }\n}\n", "import isString from 'lodash/isString';\n\nimport { IdSchema } from './types';\nimport { ID_KEY } from './constants';\n\n/** Generates a consistent `id` pattern for a given `id` and a `suffix`\n *\n * @param id - Either simple string id or an IdSchema from which to extract it\n * @param suffix - The suffix to append to the id\n */\nfunction idGenerator<T = any>(id: IdSchema<T> | string, suffix: string) {\n  const theId = isString(id) ? id : id[ID_KEY];\n  return `${theId}__${suffix}`;\n}\n/** Return a consistent `id` for the field description element\n *\n * @param id - Either simple string id or an IdSchema from which to extract it\n * @returns - The consistent id for the field description element from the given `id`\n */\nexport function descriptionId<T = any>(id: IdSchema<T> | string) {\n  return idGenerator<T>(id, 'description');\n}\n\n/** Return a consistent `id` for the field error element\n *\n * @param id - Either simple string id or an IdSchema from which to extract it\n * @returns - The consistent id for the field error element from the given `id`\n */\nexport function errorId<T = any>(id: IdSchema<T> | string) {\n  return idGenerator<T>(id, 'error');\n}\n\n/** Return a consistent `id` for the field examples element\n *\n * @param id - Either simple string id or an IdSchema from which to extract it\n * @returns - The consistent id for the field examples element from the given `id`\n */\nexport function examplesId<T = any>(id: IdSchema<T> | string) {\n  return idGenerator<T>(id, 'examples');\n}\n\n/** Return a consistent `id` for the field help element\n *\n * @param id - Either simple string id or an IdSchema from which to extract it\n * @returns - The consistent id for the field help element from the given `id`\n */\nexport function helpId<T = any>(id: IdSchema<T> | string) {\n  return idGenerator<T>(id, 'help');\n}\n\n/** Return a consistent `id` for the field title element\n *\n * @param id - Either simple string id or an IdSchema from which to extract it\n * @returns - The consistent id for the field title element from the given `id`\n */\nexport function titleId<T = any>(id: IdSchema<T> | string) {\n  return idGenerator<T>(id, 'title');\n}\n\n/** Return a list of element ids that contain additional information about the field that can be used to as the aria\n * description of the field. This is correctly omitting `titleId` which would be \"labeling\" rather than \"describing\" the\n * element.\n *\n * @param id - Either simple string id or an IdSchema from which to extract it\n * @param [includeExamples=false] - Optional flag, if true, will add the `examplesId` into the list\n * @returns - The string containing the list of ids for use in an `aria-describedBy` attribute\n */\nexport function ariaDescribedByIds<T = any>(id: IdSchema<T> | string, includeExamples = false) {\n  const examples = includeExamples ? ` ${examplesId<T>(id)}` : '';\n  return `${errorId<T>(id)} ${descriptionId<T>(id)} ${helpId<T>(id)}${examples}`;\n}\n\n/** Return a consistent `id` for the `optionIndex`s of a `Radio` or `Checkboxes` widget\n *\n * @param id - The id of the parent component for the option\n * @param optionIndex - The index of the option for which the id is desired\n * @returns - An id for the option index based on the parent `id`\n */\nexport function optionId(id: string, optionIndex: number) {\n  return `${id}-${optionIndex}`;\n}\n", "import { ReactElement } from 'react';\n\n/** Helper function that will return the value to use for a widget `label` based on `hideLabel`. The `fallback` is used\n * as the return value from the function when `hideLabel` is true. Due to the implementation of theme components, it\n * may be necessary to return something other than `undefined` to cause the theme component to not render a label. Some\n * themes require may `false` and others may require an empty string.\n *\n * @param [label] - The label string or component to render when not hidden\n * @param [hideLabel] - Flag, if true, will cause the label to be hidden\n * @param [fallback] - One of 3 values, `undefined` (the default), `false` or an empty string\n * @returns - `fallback` if `hideLabel` is true, otherwise `label`\n */\n\nexport default function labelValue(label?: string, hideLabel?: boolean, fallback?: ''): undefined | string;\nexport default function labelValue(label?: string, hideLabel?: boolean, fallback?: false): undefined | false | string;\nexport default function labelValue(label?: ReactElement, hideLabel?: boolean, fallback?: ''): undefined | ReactElement;\nexport default function labelValue(\n  label?: ReactElement,\n  hideLabel?: boolean,\n  fallback?: false\n): undefined | false | ReactElement;\nexport default function labelValue(\n  label?: string | ReactElement,\n  hideLabel?: boolean,\n  fallback?: false | ''\n): undefined | false | string | ReactElement {\n  return hideLabel ? fallback : label;\n}\n", "/** Converts a local Date string into a UTC date string\n *\n * @param dateString - The string representation of a date as accepted by the `Date()` constructor\n * @returns - A UTC date string if `dateString` is truthy, otherwise undefined\n */\nexport default function localToUTC(dateString: string) {\n  return dateString ? new Date(dateString).toJSON() : undefined;\n}\n", "import { CONST_KEY, ENUM_KEY } from './constants';\nimport { RJSFSchema, StrictRJSFSchema } from './types';\n\n/** Returns the constant value from the schema when it is either a single value enum or has a const key. Otherwise\n * throws an error.\n *\n * @param schema - The schema from which to obtain the constant value\n * @returns - The constant value for the schema\n * @throws - Error when the schema does not have a constant value\n */\nexport default function toConstant<S extends StrictRJSFSchema = RJSFSchema>(schema: S) {\n  if (ENUM_KEY in schema && Array.isArray(schema.enum) && schema.enum.length === 1) {\n    return schema.enum[0];\n  }\n  if (CONST_KEY in schema) {\n    return schema.const;\n  }\n  throw new Error('schema cannot be inferred as a constant');\n}\n", "import toConstant from './toConstant';\nimport { RJSFSchema, EnumOptionsType, StrictRJSFSchema } from './types';\n\n/** Gets the list of options from the schema. If the schema has an enum list, then those enum values are returned. The\n * labels for the options will be extracted from the non-standard, RJSF-deprecated `enumNames` if it exists, otherwise\n * the label will be the same as the `value`. If the schema has a `oneOf` or `anyOf`, then the value is the list of\n * `const` values from the schema and the label is either the `schema.title` or the value.\n *\n * @param schema - The schema from which to extract the options list\n * @returns - The list of options from the schema\n */\nexport default function optionsList<S extends StrictRJSFSchema = RJSFSchema>(\n  schema: S\n): EnumOptionsType<S>[] | undefined {\n  // enumNames was deprecated in v5 and is intentionally omitted from the RJSFSchema type.\n  // Cast the type to include enumNames so the feature still works.\n  const schemaWithEnumNames = schema as S & { enumNames?: string[] };\n  if (schemaWithEnumNames.enumNames && process.env.NODE_ENV !== 'production') {\n    console.warn('The enumNames property is deprecated and may be removed in a future major release.');\n  }\n  if (schema.enum) {\n    return schema.enum.map((value, i) => {\n      const label = (schemaWithEnumNames.enumNames && schemaWithEnumNames.enumNames[i]) || String(value);\n      return { label, value };\n    });\n  }\n  const altSchemas = schema.oneOf || schema.anyOf;\n  return (\n    altSchemas &&\n    altSchemas.map((aSchemaDef) => {\n      const aSchema = aSchemaDef as S;\n      const value = toConstant(aSchema);\n      const label = aSchema.title || String(value);\n      return {\n        schema: aSchema,\n        label,\n        value,\n      };\n    })\n  );\n}\n", "import { GenericObjectType } from './types';\n\n/** Given a list of `properties` and an `order` list, returns a list that contains the `properties` ordered correctly.\n * If `order` is not an array, then the untouched `properties` list is returned. Otherwise `properties` is ordered per\n * the `order` list. If `order` contains a '*' then any `properties` that are not mentioned explicity in `order` will be\n * places in the location of the `*`.\n *\n * @param properties - The list of property keys to be ordered\n * @param order - An array of property keys to be ordered first, with an optional '*' property\n * @returns - A list with the `properties` ordered\n * @throws - Error when the properties cannot be ordered correctly\n */\nexport default function orderProperties(properties: string[], order?: string[]): string[] {\n  if (!Array.isArray(order)) {\n    return properties;\n  }\n\n  const arrayToHash = (arr: string[]) =>\n    arr.reduce((prev: GenericObjectType, curr) => {\n      prev[curr] = true;\n      return prev;\n    }, {});\n  const errorPropList = (arr: string[]) =>\n    arr.length > 1 ? `properties '${arr.join(\"', '\")}'` : `property '${arr[0]}'`;\n  const propertyHash = arrayToHash(properties);\n  const orderFiltered = order.filter((prop) => prop === '*' || propertyHash[prop]);\n  const orderHash = arrayToHash(orderFiltered);\n\n  const rest = properties.filter((prop: string) => !orderHash[prop]);\n  const restIndex = orderFiltered.indexOf('*');\n  if (restIndex === -1) {\n    if (rest.length) {\n      throw new Error(`uiSchema order list does not contain ${errorPropList(rest)}`);\n    }\n    return orderFiltered;\n  }\n  if (restIndex !== orderFiltered.lastIndexOf('*')) {\n    throw new Error('uiSchema order list contains more than one wildcard item');\n  }\n\n  const complete = [...orderFiltered];\n  complete.splice(restIndex, 1, ...rest);\n  return complete;\n}\n", "/** Returns a string representation of the `num` that is padded with leading \"0\"s if necessary\n *\n * @param num - The number to pad\n * @param width - The width of the string at which no lead padding is necessary\n * @returns - The number converted to a string with leading zero padding if the number of digits is less than `width`\n */\nexport default function pad(num: number, width: number) {\n  let s = String(num);\n  while (s.length < width) {\n    s = '0' + s;\n  }\n  return s;\n}\n", "import { DateObject } from './types';\n\n/** Parses the `dateString` into a `DateObject`, including the time information when `includeTime` is true\n *\n * @param dateString - The date string to parse into a DateObject\n * @param [includeTime=true] - Optional flag, if false, will not include the time data into the object\n * @returns - The date string converted to a `DateObject`\n * @throws - Error when the date cannot be parsed from the string\n */\nexport default function parseDateString(dateString?: string, includeTime = true): DateObject {\n  if (!dateString) {\n    return {\n      year: -1,\n      month: -1,\n      day: -1,\n      hour: includeTime ? -1 : 0,\n      minute: includeTime ? -1 : 0,\n      second: includeTime ? -1 : 0,\n    };\n  }\n  const date = new Date(dateString);\n  if (Number.isNaN(date.getTime())) {\n    throw new Error('Unable to parse date ' + dateString);\n  }\n  return {\n    year: date.getUTCFullYear(),\n    month: date.getUTCMonth() + 1, // oh you, javascript.\n    day: date.getUTCDate(),\n    hour: includeTime ? date.getUTCHours() : 0,\n    minute: includeTime ? date.getUTCMinutes() : 0,\n    second: includeTime ? date.getUTCSeconds() : 0,\n  };\n}\n", "import { RJSFSchema, StrictRJSFSchema } from './types';\n\n/** Check to see if a `schema` specifies that a value must be true. This happens when:\n * - `schema.const` is truthy\n * - `schema.enum` == `[true]`\n * - `schema.anyOf` or `schema.oneOf` has a single value which recursively returns true\n * - `schema.allOf` has at least one value which recursively returns true\n *\n * @param schema - The schema to check\n * @returns - True if the schema specifies a value that must be true, false otherwise\n */\nexport default function schemaRequiresTrueValue<S extends StrictRJSFSchema = RJSFSchema>(schema: S): boolean {\n  // Check if const is a truthy value\n  if (schema.const) {\n    return true;\n  }\n\n  // Check if an enum has a single value of true\n  if (schema.enum && schema.enum.length === 1 && schema.enum[0] === true) {\n    return true;\n  }\n\n  // If anyOf has a single value, evaluate the subschema\n  if (schema.anyOf && schema.anyOf.length === 1) {\n    return schemaRequiresTrueValue(schema.anyOf[0] as S);\n  }\n\n  // If oneOf has a single value, evaluate the subschema\n  if (schema.oneOf && schema.oneOf.length === 1) {\n    return schemaRequiresTrueValue(schema.oneOf[0] as S);\n  }\n\n  // Evaluate each subschema in allOf, to see if one of them requires a true value\n  if (schema.allOf) {\n    const schemaSome = (subSchema: S['additionalProperties']) => schemaRequiresTrueValue(subSchema as S);\n    return schema.allOf.some(schemaSome);\n  }\n\n  return false;\n}\n", "import React from 'react';\n\nimport deepEquals from './deepEquals';\n\n/** Determines whether the given `component` should be rerendered by comparing its current set of props and state\n * against the next set. If either of those two sets are not the same, then the component should be rerendered.\n *\n * @param component - A React component being checked\n * @param nextProps - The next set of props against which to check\n * @param nextState - The next set of state against which to check\n * @returns - True if the component should be re-rendered, false otherwise\n */\nexport default function shouldRender(component: React.Component, nextProps: any, nextState: any) {\n  const { props, state } = component;\n  return !deepEquals(props, nextProps) || !deepEquals(state, nextState);\n}\n", "import { DateObject } from './types';\n\n/** Returns a UTC date string for the given `dateObject`. If `time` is false, then the time portion of the string is\n * removed.\n *\n * @param dateObject - The `DateObject` to convert to a date string\n * @param [time=true] - Optional flag used to remove the time portion of the date string if false\n * @returns - The UTC date string\n */\nexport default function toDateString(dateObject: DateObject, time = true) {\n  const { year, month, day, hour = 0, minute = 0, second = 0 } = dateObject;\n  const utcTime = Date.UTC(year, month - 1, day, hour, minute, second);\n  const datetime = new Date(utcTime).toJSON();\n  return time ? datetime : datetime.slice(0, 10);\n}\n", "import isPlainObject from 'lodash/isPlainObject';\n\nimport { ERRORS_KEY } from './constants';\nimport { ErrorSchema, GenericObjectType, RJSFValidationError } from './types';\n\n/** Converts an `errorSchema` into a list of `RJSFValidationErrors`\n *\n * @param errorSchema - The `ErrorSchema` instance to convert\n * @param [fieldPath=[]] - The current field path, defaults to [] if not specified\n * @returns - The list of `RJSFValidationErrors` extracted from the `errorSchema`\n */\nexport default function toErrorList<T = any>(\n  errorSchema?: ErrorSchema<T>,\n  fieldPath: string[] = []\n): RJSFValidationError[] {\n  if (!errorSchema) {\n    return [];\n  }\n  let errorList: RJSFValidationError[] = [];\n  if (ERRORS_KEY in errorSchema) {\n    errorList = errorList.concat(\n      errorSchema[ERRORS_KEY]!.map((message: string) => {\n        const property = `.${fieldPath.join('.')}`;\n        return {\n          property,\n          message,\n          stack: `${property} ${message}`,\n        };\n      })\n    );\n  }\n  return Object.keys(errorSchema).reduce((acc, key) => {\n    if (key !== ERRORS_KEY) {\n      const childSchema = (errorSchema as GenericObjectType)[key];\n      if (isPlainObject(childSchema)) {\n        acc = acc.concat(toErrorList(childSchema, [...fieldPath, key]));\n      }\n    }\n    return acc;\n  }, errorList);\n}\n", "var arrayMap = require('./_arrayMap'),\n    copyArray = require('./_copyArray'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol'),\n    stringToPath = require('./_stringToPath'),\n    toKey = require('./_toKey'),\n    toString = require('./toString');\n\n/**\n * Converts `value` to a property path array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {*} value The value to convert.\n * @returns {Array} Returns the new property path array.\n * @example\n *\n * _.toPath('a.b.c');\n * // => ['a', 'b', 'c']\n *\n * _.toPath('a[0].b.c');\n * // => ['a', '0', 'b', 'c']\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return arrayMap(value, toKey);\n  }\n  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n}\n\nmodule.exports = toPath;\n", "import toPath from 'lodash/toPath';\n\nimport { ErrorSchema, RJSFValidationError } from './types';\nimport ErrorSchemaBuilder from './ErrorSchemaBuilder';\n\n/** Transforms a rjsf validation errors list:\n * [\n *   {property: '.level1.level2[2].level3', message: 'err a'},\n *   {property: '.level1.level2[2].level3', message: 'err b'},\n *   {property: '.level1.level2[4].level3', message: 'err b'},\n * ]\n * Into an error tree:\n * {\n *   level1: {\n *     level2: {\n *       2: {level3: {errors: ['err a', 'err b']}},\n *       4: {level3: {errors: ['err b']}},\n *     }\n *   }\n * };\n *\n * @param errors - The list of RJSFValidationError objects\n * @returns - The `ErrorSchema` built from the list of `RJSFValidationErrors`\n */\nexport default function toErrorSchema<T = any>(errors: RJSFValidationError[]): ErrorSchema<T> {\n  const builder = new ErrorSchemaBuilder<T>();\n  if (errors.length) {\n    errors.forEach((error) => {\n      const { property, message } = error;\n      // When the property is the root element, just use an empty array for the path\n      const path = property === '.' ? [] : toPath(property);\n      // If the property is at the root (.level1) then toPath creates\n      // an empty array element at the first index. Remove it.\n      if (path.length > 0 && path[0] === '') {\n        path.splice(0, 1);\n      }\n      if (message) {\n        builder.addErrors(message, path);\n      }\n    });\n  }\n  return builder.ErrorSchema;\n}\n", "import isPlainObject from 'lodash/isPlainObject';\n\nimport { ErrorSchema, FormValidation, GenericObjectType } from './types';\n\n/** Unwraps the `errorHandler` structure into the associated `ErrorSchema`, stripping the `addError()` functions from it\n *\n * @param errorHandler - The `FormValidation` error handling structure\n * @returns - The `ErrorSchema` resulting from the stripping of the `addError()` function\n */\nexport default function unwrapErrorHandler<T = any>(errorHandler: FormValidation<T>): ErrorSchema<T> {\n  return Object.keys(errorHandler).reduce((acc, key) => {\n    if (key === 'addError') {\n      return acc;\n    } else {\n      const childSchema = (errorHandler as GenericObjectType)[key];\n      if (isPlainObject(childSchema)) {\n        return {\n          ...acc,\n          [key]: unwrapErrorHandler(childSchema),\n        };\n      }\n      return { ...acc, [key]: childSchema };\n    }\n  }, {} as ErrorSchema<T>);\n}\n", "import pad from './pad';\n\n/** Converts a UTC date string into a local Date format\n *\n * @param jsonDate - A UTC date string\n * @returns - An empty string when `jsonDate` is falsey, otherwise a date string in local format\n */\nexport default function utcToLocal(jsonDate: string) {\n  if (!jsonDate) {\n    return '';\n  }\n\n  // required format of `'yyyy-MM-ddThh:mm' followed by optional ':ss' or ':ss.SSS'\n  // https://html.spec.whatwg.org/multipage/input.html#local-date-and-time-state-(type%3Ddatetime-local)\n  // > should be a _valid local date and time string_ (not GMT)\n\n  // Note - date constructor passed local ISO-8601 does not correctly\n  // change time to UTC in node pre-8\n  const date = new Date(jsonDate);\n\n  const yyyy = pad(date.getFullYear(), 4);\n  const MM = pad(date.getMonth() + 1, 2);\n  const dd = pad(date.getDate(), 2);\n  const hh = pad(date.getHours(), 2);\n  const mm = pad(date.getMinutes(), 2);\n  const ss = pad(date.getSeconds(), 2);\n  const SSS = pad(date.getMilliseconds(), 3);\n\n  return `${yyyy}-${MM}-${dd}T${hh}:${mm}:${ss}.${SSS}`;\n}\n", "import isEmpty from 'lodash/isEmpty';\n\nimport mergeObjects from './mergeObjects';\nimport toErrorList from './toErrorList';\nimport { ErrorSchema, ValidationData } from './types';\n\n/** Merges the errors in `additionalErrorSchema` into the existing `validationData` by combining the hierarchies in the\n * two `ErrorSchema`s and then appending the error list from the `additionalErrorSchema` obtained by calling\n * `toErrorList()` on the `errors` in the `validationData`. If no `additionalErrorSchema` is passed, then\n * `validationData` is returned.\n *\n * @param validationData - The current `ValidationData` into which to merge the additional errors\n * @param [additionalErrorSchema] - The optional additional set of errors in an `ErrorSchema`\n * @returns - The `validationData` with the additional errors from `additionalErrorSchema` merged into it, if provided.\n */\nexport default function validationDataMerge<T = any>(\n  validationData: ValidationData<T>,\n  additionalErrorSchema?: ErrorSchema<T>\n): ValidationData<T> {\n  if (!additionalErrorSchema) {\n    return validationData;\n  }\n  const { errors: oldErrors, errorSchema: oldErrorSchema } = validationData;\n  let errors = toErrorList(additionalErrorSchema);\n  let errorSchema = additionalErrorSchema;\n  if (!isEmpty(oldErrorSchema)) {\n    errorSchema = mergeObjects(oldErrorSchema, additionalErrorSchema, true) as ErrorSchema<T>;\n    errors = [...oldErrors].concat(errors);\n  }\n  return { errorSchema, errors };\n}\n", "import { REF_KEY, ROOT_SCHEMA_PREFIX } from './constants';\nimport { RJSFSchema, StrictRJSFSchema } from './types';\nimport isObject from 'lodash/isObject';\n\n/** Takes a `node` object and transforms any contained `$ref` node variables with a prefix, recursively calling\n * `withIdRefPrefix` for any other elements.\n *\n * @param node - The object node to which a ROOT_SCHEMA_PREFIX is added when a REF_KEY is part of it\n */\nfunction withIdRefPrefixObject<S extends StrictRJSFSchema = RJSFSchema>(node: S): S {\n  for (const key in node) {\n    const realObj: { [k: string]: any } = node;\n    const value = realObj[key];\n    if (key === REF_KEY && typeof value === 'string' && value.startsWith('#')) {\n      realObj[key] = ROOT_SCHEMA_PREFIX + value;\n    } else {\n      realObj[key] = withIdRefPrefix<S>(value);\n    }\n  }\n  return node;\n}\n\n/** Takes a `node` object list and transforms any contained `$ref` node variables with a prefix, recursively calling\n * `withIdRefPrefix` for any other elements.\n *\n * @param node - The list of object nodes to which a ROOT_SCHEMA_PREFIX is added when a REF_KEY is part of it\n */\nfunction withIdRefPrefixArray<S extends StrictRJSFSchema = RJSFSchema>(node: S[]): S[] {\n  for (let i = 0; i < node.length; i++) {\n    node[i] = withIdRefPrefix<S>(node[i]) as S;\n  }\n  return node;\n}\n\n/** Recursively prefixes all `$ref`s in a schema with the value of the `ROOT_SCHEMA_PREFIX` constant.\n * This is used in isValid to make references to the rootSchema\n *\n * @param schemaNode - The object node to which a ROOT_SCHEMA_PREFIX is added when a REF_KEY is part of it\n * @returns - A copy of the `schemaNode` with updated `$ref`s\n */\nexport default function withIdRefPrefix<S extends StrictRJSFSchema = RJSFSchema>(\n  schemaNode: S | S[] | S[keyof S]\n): S | S[] | S[keyof S] {\n  if (Array.isArray(schemaNode)) {\n    return withIdRefPrefixArray<S>([...schemaNode]);\n  }\n  if (isObject(schemaNode)) {\n    return withIdRefPrefixObject<S>({ ...schemaNode });\n  }\n  return schemaNode;\n}\n", "export {};\n//# sourceMappingURL=types.js.map", "/** An enumeration of all the translatable strings used by `@rjsf/core` and its themes. The value of each of the\n * enumeration keys is expected to be the actual english string. Some strings contain replaceable parameter values\n * as indicated by `%1`, `%2`, etc. The number after the `%` indicates the order of the parameter. The ordering of\n * parameters is important because some languages may choose to put the second parameter before the first in its\n * translation. Also, some strings are rendered using `markdown-to-jsx` and thus support markdown and inline html.\n */\nexport enum TranslatableString {\n  /** Fallback title of an array item, used by ArrayField */\n  ArrayItemTitle = 'Item',\n  /** Missing items reason, used by ArrayField */\n  MissingItems = 'Missing items definition',\n  /** Yes label, used by BooleanField */\n  YesLabel = 'Yes',\n  /** No label, used by BooleanField */\n  NoLabel = 'No',\n  /** Close label, used by ErrorList */\n  CloseLabel = 'Close',\n  /** Errors label, used by ErrorList */\n  ErrorsLabel = 'Errors',\n  /** New additionalProperties string default value, used by ObjectField */\n  NewStringDefault = 'New Value',\n  /** Add button title, used by AddButton */\n  AddButton = 'Add',\n  /** Add button title, used by AddButton */\n  AddItemButton = 'Add Item',\n  /** Copy button title, used by IconButton */\n  CopyButton = 'Copy',\n  /** Move down button title, used by IconButton */\n  MoveDownButton = 'Move down',\n  /** Move up button title, used by IconButton */\n  MoveUpButton = 'Move up',\n  /** Remove button title, used by IconButton */\n  RemoveButton = 'Remove',\n  /** Now label, used by AltDateWidget */\n  NowLabel = 'Now',\n  /** Clear label, used by AltDateWidget */\n  ClearLabel = 'Clear',\n  /** Aria date label, used by DateWidget */\n  AriaDateLabel = 'Select a date',\n  /** File preview label, used by FileWidget */\n  PreviewLabel = 'Preview',\n  /** Decrement button aria label, used by UpDownWidget */\n  DecrementAriaLabel = 'Decrease value by 1',\n  /** Increment button aria label, used by UpDownWidget */\n  IncrementAriaLabel = 'Increase value by 1',\n  // Strings with replaceable parameters\n  /** Unknown field type reason, where %1 will be replaced with the type as provided by SchemaField */\n  UnknownFieldType = 'Unknown field type %1',\n  /** Option prefix, where %1 will be replaced with the option index as provided by MultiSchemaField */\n  OptionPrefix = 'Option %1',\n  /** Option prefix, where %1 and %2 will be replaced by the schema title and option index, respectively as provided by\n   * MultiSchemaField\n   */\n  TitleOptionPrefix = '%1 option %2',\n  /** Key label, where %1 will be replaced by the label as provided by WrapIfAdditionalTemplate */\n  KeyLabel = '%1 Key',\n  // Strings with replaceable parameters AND/OR that support markdown and html\n  /** Invalid object field configuration as provided by the ObjectField */\n  InvalidObjectField = 'Invalid \"%1\" object field configuration: <em>%2</em>.',\n  /** Unsupported field schema, used by UnsupportedField */\n  UnsupportedField = 'Unsupported field schema.',\n  /** Unsupported field schema, where %1 will be replaced by the idSchema.$id as provided by UnsupportedField */\n  UnsupportedFieldWithId = 'Unsupported field schema for field <code>%1</code>.',\n  /** Unsupported field schema, where %1 will be replaced by the reason string as provided by UnsupportedField */\n  UnsupportedFieldWithReason = 'Unsupported field schema: <em>%1</em>.',\n  /** Unsupported field schema, where %1 and %2 will be replaced by the idSchema.$id and reason strings, respectively,\n   * as provided by UnsupportedField\n   */\n  UnsupportedFieldWithIdAndReason = 'Unsupported field schema for field <code>%1</code>: <em>%2</em>.',\n  /** File name, type and size info, where %1, %2 and %3 will be replaced by the file name, file type and file size as\n   * provided by FileWidget\n   */\n  FilesInfo = '**%1** (%2, %3 bytes)',\n}\n", "import get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\n\nimport { ID_KEY } from '../constants';\nimport hashForSchema from '../hashForSchema';\nimport {\n  CustomValidator,\n  ErrorSchema,\n  ErrorTransformer,\n  FormContextType,\n  RJSFSchema,\n  RJSFValidationError,\n  StrictRJSFSchema,\n  UiSchema,\n  ValidationData,\n  ValidatorType,\n} from '../types';\n\n/** The type of the map of schema hash to schema\n */\nexport type SchemaMap<S extends StrictRJSFSchema = RJSFSchema> = {\n  [hash: string]: S;\n};\n\n/** An implementation of the `ValidatorType` interface that is designed for use in capturing schemas used by the\n * `isValid()` function. The rest of the implementation of the interface throws errors when it is attempted to be used.\n * An instance of the object allows the caller to capture the schemas used in calls to the `isValid()` function. These\n * captured schema, along with the root schema used to construct the object are stored in the map of schemas keyed by\n * the hashed value of the schema. NOTE: After hashing the schema, an $id with the hash value is added to the\n * schema IF that schema doesn't already have an $id, prior to putting the schema into the map.\n */\nexport default class ParserValidator<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>\n  implements ValidatorType<T, S, F>\n{\n  /** The rootSchema provided during construction of the class */\n  readonly rootSchema: S;\n\n  /** The map of schemas encountered by the ParserValidator */\n  schemaMap: SchemaMap<S> = {};\n\n  /** Construct the ParserValidator for the given `rootSchema`. This `rootSchema` will be stashed in the `schemaMap`\n   * first.\n   *\n   * @param rootSchema - The root schema against which this validator will be executed\n   */\n  constructor(rootSchema: S) {\n    this.rootSchema = rootSchema;\n    this.addSchema(rootSchema, hashForSchema<S>(rootSchema));\n  }\n\n  /** Adds the given `schema` to the `schemaMap` keyed by the `hash` or `ID_KEY` if present on the `schema`. If the\n   * schema does not have an `ID_KEY`, then the `hash` will be added as the `ID_KEY` to allow the schema to be\n   * associated with it's `hash` for future use (by a schema compiler).\n   *\n   * @param schema - The schema which is to be added to the map\n   * @param hash - The hash value at which to map the schema\n   */\n  addSchema(schema: S, hash: string) {\n    const key = get(schema, ID_KEY, hash);\n    const identifiedSchema = { ...schema, [ID_KEY]: key };\n    const existing = this.schemaMap[key];\n    if (!existing) {\n      this.schemaMap[key] = identifiedSchema;\n    } else if (!isEqual(existing, identifiedSchema)) {\n      console.error('existing schema:', JSON.stringify(existing, null, 2));\n      console.error('new schema:', JSON.stringify(identifiedSchema, null, 2));\n      throw new Error(\n        `Two different schemas exist with the same key ${key}! What a bad coincidence. If possible, try adding an $id to one of the schemas`\n      );\n    }\n  }\n\n  /** Returns the current `schemaMap` to the caller\n   */\n  getSchemaMap() {\n    return this.schemaMap;\n  }\n\n  /** Implements the `ValidatorType` `isValid()` method to capture the `schema` in the `schemaMap`. Throws an error when\n   * the `rootSchema` is not the same as the root schema provided during construction.\n   *\n   * @param schema - The schema to record in the `schemaMap`\n   * @param _formData - The formData parameter that is ignored\n   * @param rootSchema - The root schema associated with the schema\n   * @throws - Error when the given `rootSchema` differs from the root schema provided during construction\n   */\n  isValid(schema: S, _formData: T, rootSchema: S): boolean {\n    if (!isEqual(rootSchema, this.rootSchema)) {\n      throw new Error('Unexpectedly calling isValid() with a rootSchema that differs from the construction rootSchema');\n    }\n    this.addSchema(schema, hashForSchema<S>(schema));\n\n    return false;\n  }\n\n  /** Implements the `ValidatorType` `rawValidation()` method to throw an error since it is never supposed to be called\n   *\n   * @param _schema - The schema parameter that is ignored\n   * @param _formData - The formData parameter that is ignored\n   */\n  rawValidation<Result = any>(_schema: S, _formData?: T): { errors?: Result[]; validationError?: Error } {\n    throw new Error('Unexpectedly calling the `rawValidation()` method during schema parsing');\n  }\n\n  /** Implements the `ValidatorType` `toErrorList()` method to throw an error since it is never supposed to be called\n   *\n   * @param _errorSchema - The error schema parameter that is ignored\n   * @param _fieldPath - The field path parameter that is ignored\n   */\n  toErrorList(_errorSchema?: ErrorSchema<T>, _fieldPath?: string[]): RJSFValidationError[] {\n    throw new Error('Unexpectedly calling the `toErrorList()` method during schema parsing');\n  }\n\n  /** Implements the `ValidatorType` `validateFormData()` method to throw an error since it is never supposed to be\n   * called\n   *\n   * @param _formData - The formData parameter that is ignored\n   * @param _schema - The schema parameter that is ignored\n   * @param _customValidate - The customValidate parameter that is ignored\n   * @param _transformErrors - The transformErrors parameter that is ignored\n   * @param _uiSchema - The uiSchema parameter that is ignored\n   */\n  validateFormData(\n    _formData: T,\n    _schema: S,\n    _customValidate?: CustomValidator<T, S, F>,\n    _transformErrors?: ErrorTransformer<T, S, F>,\n    _uiSchema?: UiSchema<T, S, F>\n  ): ValidationData<T> {\n    throw new Error('Unexpectedly calling the `validateFormData()` method during schema parsing');\n  }\n}\n", "import forEach from 'lodash/forEach';\nimport isEqual from 'lodash/isEqual';\n\nimport { FormContextType, RJSFSchema, StrictRJSFSchema } from '../types';\nimport { PROPERTIES_KEY, ITEMS_KEY } from '../constants';\nimport ParserValidator, { SchemaMap } from './ParserValidator';\nimport { retrieveSchemaInternal, resolveAnyOrOneOfSchemas } from '../schema/retrieveSchema';\n\n/** Recursive function used to parse the given `schema` belonging to the `rootSchema`. The `validator` is used to\n * capture the sub-schemas that the `isValid()` function is called with. For each schema returned by the\n * `retrieveSchemaInternal()`, the `resolveAnyOrOneOfSchemas()` function is called. For each of the schemas returned\n * from THAT call have `properties`, then each of the sub-schema property objects are then recursively parsed.\n *\n * @param validator - The `ParserValidator` implementation used to capture `isValid()` calls during parsing\n * @param recurseList - The list of schemas returned from the `retrieveSchemaInternal`, preventing infinite recursion\n * @param rootSchema - The root schema from which the schema parsing began\n * @param schema - The current schema element being parsed\n */\nfunction parseSchema<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  validator: ParserValidator<T, S, F>,\n  recurseList: S[],\n  rootSchema: S,\n  schema: S\n) {\n  const schemas = retrieveSchemaInternal<T, S, F>(validator, schema, rootSchema, undefined, true);\n  schemas.forEach((schema) => {\n    const sameSchemaIndex = recurseList.findIndex((item) => isEqual(item, schema));\n    if (sameSchemaIndex === -1) {\n      recurseList.push(schema);\n      const allOptions = resolveAnyOrOneOfSchemas<T, S, F>(validator, schema, rootSchema, true);\n      allOptions.forEach((s) => {\n        if (PROPERTIES_KEY in s && s[PROPERTIES_KEY]) {\n          forEach(schema[PROPERTIES_KEY], (value) => {\n            parseSchema<T, S, F>(validator, recurseList, rootSchema, value as S);\n          });\n        }\n      });\n      if (ITEMS_KEY in schema && !Array.isArray(schema.items) && typeof schema.items !== 'boolean') {\n        parseSchema<T, S, F>(validator, recurseList, rootSchema, schema.items as S);\n      }\n    }\n  });\n}\n\n/** Parses the given `rootSchema` to extract out all the sub-schemas that maybe contained within it. Returns a map of\n * the hash of the schema to schema/sub-schema.\n *\n * @param rootSchema - The root schema to parse for sub-schemas used by `isValid()` calls\n * @returns - The `SchemaMap` of all schemas that were parsed\n */\nexport default function schemaParser<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  rootSchema: S\n): SchemaMap<S> {\n  const validator = new ParserValidator<T, S, F>(rootSchema);\n  const recurseList: S[] = [];\n\n  parseSchema(validator, recurseList, rootSchema, rootSchema);\n\n  return validator.getSchemaMap();\n}\n", "import schemaParser from './schemaParser';\nimport { SchemaMap } from './ParserValidator';\n\nexport type { SchemaMap };\n\nexport { schemaParser };\n", "import allowAdditionalItems from './allowAdditionalItems';\nimport asNumber from './asNumber';\nimport canExpand from './canExpand';\nimport createErrorHandler from './createErrorHandler';\nimport createSchemaUtils from './createSchemaUtils';\nimport dataURItoBlob from './dataURItoBlob';\nimport deepEquals from './deepEquals';\nimport englishStringTranslator from './englishStringTranslator';\nimport enumOptionsDeselectValue from './enumOptionsDeselectValue';\nimport enumOptionsIndexForValue from './enumOptionsIndexForValue';\nimport enumOptionsIsSelected from './enumOptionsIsSelected';\nimport enumOptionsSelectValue from './enumOptionsSelectValue';\nimport enumOptionsValueForIndex from './enumOptionsValueForIndex';\nimport ErrorSchemaBuilder from './ErrorSchemaBuilder';\nimport findSchemaDefinition from './findSchemaDefinition';\nimport getDateElementProps, { type DateElementFormat } from './getDateElementProps';\nimport getDiscriminatorFieldFromSchema from './getDiscriminatorFieldFromSchema';\nimport getInputProps from './getInputProps';\nimport getSchemaType from './getSchemaType';\nimport getSubmitButtonOptions from './getSubmitButtonOptions';\nimport getTemplate from './getTemplate';\nimport getUiOptions from './getUiOptions';\nimport getWidget from './getWidget';\nimport guessType from './guessType';\nimport hashForSchema from './hashForSchema';\nimport hasWidget from './hasWidget';\nimport { ariaDescribedByIds, descriptionId, errorId, examplesId, helpId, optionId, titleId } from './idGenerators';\nimport isConstant from './isConstant';\nimport isCustomWidget from './isCustomWidget';\nimport isFixedItems from './isFixedItems';\nimport isObject from './isObject';\nimport labelValue from './labelValue';\nimport localToUTC from './localToUTC';\nimport mergeDefaultsWithFormData from './mergeDefaultsWithFormData';\nimport mergeObjects from './mergeObjects';\nimport mergeSchemas from './mergeSchemas';\nimport optionsList from './optionsList';\nimport orderProperties from './orderProperties';\nimport pad from './pad';\nimport parseDateString from './parseDateString';\nimport rangeSpec from './rangeSpec';\nimport replaceStringParameters from './replaceStringParameters';\nimport schemaRequiresTrueValue from './schemaRequiresTrueValue';\nimport shouldRender from './shouldRender';\nimport toConstant from './toConstant';\nimport toDateString from './toDateString';\nimport toErrorList from './toErrorList';\nimport toErrorSchema from './toErrorSchema';\nimport unwrapErrorHandler from './unwrapErrorHandler';\nimport utcToLocal from './utcToLocal';\nimport validationDataMerge from './validationDataMerge';\nimport withIdRefPrefix from './withIdRefPrefix';\nimport getOptionMatchingSimpleDiscriminator from './getOptionMatchingSimpleDiscriminator';\n\nexport * from './types';\nexport * from './enums';\n\nexport * from './constants';\nexport * from './parser';\nexport * from './schema';\n\nexport {\n  allowAdditionalItems,\n  ariaDescribedByIds,\n  asNumber,\n  canExpand,\n  createErrorHandler,\n  createSchemaUtils,\n  DateElementFormat,\n  dataURItoBlob,\n  deepEquals,\n  descriptionId,\n  englishStringTranslator,\n  enumOptionsDeselectValue,\n  enumOptionsIndexForValue,\n  enumOptionsIsSelected,\n  enumOptionsSelectValue,\n  enumOptionsValueForIndex,\n  errorId,\n  examplesId,\n  ErrorSchemaBuilder,\n  findSchemaDefinition,\n  getDateElementProps,\n  getDiscriminatorFieldFromSchema,\n  getInputProps,\n  getOptionMatchingSimpleDiscriminator,\n  getSchemaType,\n  getSubmitButtonOptions,\n  getTemplate,\n  getUiOptions,\n  getWidget,\n  guessType,\n  hasWidget,\n  hashForSchema,\n  helpId,\n  isConstant,\n  isCustomWidget,\n  isFixedItems,\n  isObject,\n  labelValue,\n  localToUTC,\n  mergeDefaultsWithFormData,\n  mergeObjects,\n  mergeSchemas,\n  optionId,\n  optionsList,\n  orderProperties,\n  pad,\n  parseDateString,\n  rangeSpec,\n  replaceStringParameters,\n  schemaRequiresTrueValue,\n  shouldRender,\n  titleId,\n  toConstant,\n  toDateString,\n  toErrorList,\n  toErrorSchema,\n  unwrapErrorHandler,\n  utcToLocal,\n  validationDataMerge,\n  withIdRefPrefix,\n};\n", "var baseGet = require('./_baseGet'),\n    baseSet = require('./_baseSet'),\n    castPath = require('./_castPath');\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = basePickBy;\n", "var basePickBy = require('./_basePickBy'),\n    hasIn = require('./hasIn');\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nmodule.exports = basePick;\n", "var basePick = require('./_basePick'),\n    flatRest = require('./_flatRest');\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nmodule.exports = pick;\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n", "import { Component, MouseEvent } from 'react';\nimport {\n  getTemplate,\n  getWidget,\n  getUiOptions,\n  isFixedItems,\n  allowAdditionalItems,\n  isCustomWidget,\n  optionsList,\n  ArrayFieldTemplateProps,\n  ErrorSchema,\n  FieldProps,\n  FormContextType,\n  IdSchema,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  UiSchema,\n  ITEMS_KEY,\n} from '@rjsf/utils';\nimport cloneDeep from 'lodash/cloneDeep';\nimport get from 'lodash/get';\nimport isObject from 'lodash/isObject';\nimport set from 'lodash/set';\nimport { nanoid } from 'nanoid';\n\n/** Type used to represent the keyed form data used in the state */\ntype KeyedFormDataType<T> = { key: string; item: T };\n\n/** Type used for the state of the `ArrayField` component */\ntype ArrayFieldState<T> = {\n  /** The keyed form data elements */\n  keyedFormData: KeyedFormDataType<T>[];\n  /** Flag indicating whether any of the keyed form data has been updated */\n  updatedKeyedFormData: boolean;\n};\n\n/** Used to generate a unique ID for an element in a row */\nfunction generateRowId() {\n  return nanoid();\n}\n\n/** Converts the `formData` into `KeyedFormDataType` data, using the `generateRowId()` function to create the key\n *\n * @param formData - The data for the form\n * @returns - The `formData` converted into a `KeyedFormDataType` element\n */\nfunction generateKeyedFormData<T>(formData: T[]): KeyedFormDataType<T>[] {\n  return !Array.isArray(formData)\n    ? []\n    : formData.map((item) => {\n        return {\n          key: generateRowId(),\n          item,\n        };\n      });\n}\n\n/** Converts `KeyedFormDataType` data into the inner `formData`\n *\n * @param keyedFormData - The `KeyedFormDataType` to be converted\n * @returns - The inner `formData` item(s) in the `keyedFormData`\n */\nfunction keyedToPlainFormData<T>(keyedFormData: KeyedFormDataType<T> | KeyedFormDataType<T>[]): T[] {\n  if (Array.isArray(keyedFormData)) {\n    return keyedFormData.map((keyedItem) => keyedItem.item);\n  }\n  return [];\n}\n\n/** The `ArrayField` component is used to render a field in the schema that is of type `array`. It supports both normal\n * and fixed array, allowing user to add and remove elements from the array data.\n */\nclass ArrayField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> extends Component<\n  FieldProps<T[], S, F>,\n  ArrayFieldState<T>\n> {\n  /** Constructs an `ArrayField` from the `props`, generating the initial keyed data from the `formData`\n   *\n   * @param props - The `FieldProps` for this template\n   */\n  constructor(props: FieldProps<T[], S, F>) {\n    super(props);\n    const { formData = [] } = props;\n    const keyedFormData = generateKeyedFormData<T>(formData);\n    this.state = {\n      keyedFormData,\n      updatedKeyedFormData: false,\n    };\n  }\n\n  /** React lifecycle method that is called when the props are about to change allowing the state to be updated. It\n   * regenerates the keyed form data and returns it\n   *\n   * @param nextProps - The next set of props data\n   * @param prevState - The previous set of state data\n   */\n  static getDerivedStateFromProps<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n    nextProps: Readonly<FieldProps<T[], S, F>>,\n    prevState: Readonly<ArrayFieldState<T>>\n  ) {\n    // Don't call getDerivedStateFromProps if keyed formdata was just updated.\n    if (prevState.updatedKeyedFormData) {\n      return {\n        updatedKeyedFormData: false,\n      };\n    }\n    const nextFormData = Array.isArray(nextProps.formData) ? nextProps.formData : [];\n    const previousKeyedFormData = prevState.keyedFormData || [];\n    const newKeyedFormData =\n      nextFormData.length === previousKeyedFormData.length\n        ? previousKeyedFormData.map((previousKeyedFormDatum, index) => {\n            return {\n              key: previousKeyedFormDatum.key,\n              item: nextFormData[index],\n            };\n          })\n        : generateKeyedFormData<T>(nextFormData);\n    return {\n      keyedFormData: newKeyedFormData,\n    };\n  }\n\n  /** Returns the appropriate title for an item by getting first the title from the schema.items, then falling back to\n   * the description from the schema.items, and finally the string \"Item\"\n   */\n  get itemTitle() {\n    const { schema, registry } = this.props;\n    const { translateString } = registry;\n    return get(\n      schema,\n      [ITEMS_KEY, 'title'],\n      get(schema, [ITEMS_KEY, 'description'], translateString(TranslatableString.ArrayItemTitle))\n    );\n  }\n\n  /** Determines whether the item described in the schema is always required, which is determined by whether any item\n   * may be null.\n   *\n   * @param itemSchema - The schema for the item\n   * @return - True if the item schema type does not contain the \"null\" type\n   */\n  isItemRequired(itemSchema: S) {\n    if (Array.isArray(itemSchema.type)) {\n      // While we don't yet support composite/nullable jsonschema types, it's\n      // future-proof to check for requirement against these.\n      return !itemSchema.type.includes('null');\n    }\n    // All non-null array item types are inherently required by design\n    return itemSchema.type !== 'null';\n  }\n\n  /** Determines whether more items can be added to the array. If the uiSchema indicates the array doesn't allow adding\n   * then false is returned. Otherwise, if the schema indicates that there are a maximum number of items and the\n   * `formData` matches that value, then false is returned, otherwise true is returned.\n   *\n   * @param formItems - The list of items in the form\n   * @returns - True if the item is addable otherwise false\n   */\n  canAddItem(formItems: any[]) {\n    const { schema, uiSchema, registry } = this.props;\n    let { addable } = getUiOptions<T[], S, F>(uiSchema, registry.globalUiOptions);\n    if (addable !== false) {\n      // if ui:options.addable was not explicitly set to false, we can add\n      // another item if we have not exceeded maxItems yet\n      if (schema.maxItems !== undefined) {\n        addable = formItems.length < schema.maxItems;\n      } else {\n        addable = true;\n      }\n    }\n    return addable;\n  }\n\n  /** Returns the default form information for an item based on the schema for that item. Deals with the possibility\n   * that the schema is fixed and allows additional items.\n   */\n  _getNewFormDataRow = (): T => {\n    const { schema, registry } = this.props;\n    const { schemaUtils } = registry;\n    let itemSchema = schema.items as S;\n    if (isFixedItems(schema) && allowAdditionalItems(schema)) {\n      itemSchema = schema.additionalItems as S;\n    }\n    // Cast this as a T to work around schema utils being for T[] caused by the FieldProps<T[], S, F> call on the class\n    return schemaUtils.getDefaultFormState(itemSchema) as unknown as T;\n  };\n\n  /** Callback handler for when the user clicks on the add or add at index buttons. Creates a new row of keyed form data\n   * either at the end of the list (when index is not specified) or inserted at the `index` when it is, adding it into\n   * the state, and then returning `onChange()` with the plain form data converted from the keyed data\n   *\n   * @param event - The event for the click\n   * @param [index] - The optional index at which to add the new data\n   */\n  _handleAddClick(event: MouseEvent, index?: number) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    const { onChange } = this.props;\n    const { keyedFormData } = this.state;\n    const newKeyedFormDataRow: KeyedFormDataType<T> = {\n      key: generateRowId(),\n      item: this._getNewFormDataRow(),\n    };\n    const newKeyedFormData = [...keyedFormData];\n    if (index !== undefined) {\n      newKeyedFormData.splice(index, 0, newKeyedFormDataRow);\n    } else {\n      newKeyedFormData.push(newKeyedFormDataRow);\n    }\n    this.setState(\n      {\n        keyedFormData: newKeyedFormData,\n        updatedKeyedFormData: true,\n      },\n      () => onChange(keyedToPlainFormData(newKeyedFormData))\n    );\n  }\n\n  /** Callback handler for when the user clicks on the add button. Creates a new row of keyed form data at the end of\n   * the list, adding it into the state, and then returning `onChange()` with the plain form data converted from the\n   * keyed data\n   *\n   * @param event - The event for the click\n   */\n  onAddClick = (event: MouseEvent) => {\n    this._handleAddClick(event);\n  };\n\n  /** Callback handler for when the user clicks on the add button on an existing array element. Creates a new row of\n   * keyed form data inserted at the `index`, adding it into the state, and then returning `onChange()` with the plain\n   * form data converted from the keyed data\n   *\n   * @param index - The index at which the add button is clicked\n   */\n  onAddIndexClick = (index: number) => {\n    return (event: MouseEvent) => {\n      this._handleAddClick(event, index);\n    };\n  };\n\n  /** Callback handler for when the user clicks on the copy button on an existing array element. Clones the row of\n   * keyed form data at the `index` into the next position in the state, and then returning `onChange()` with the plain\n   * form data converted from the keyed data\n   *\n   * @param index - The index at which the copy button is clicked\n   */\n  onCopyIndexClick = (index: number) => {\n    return (event: MouseEvent) => {\n      if (event) {\n        event.preventDefault();\n      }\n\n      const { onChange } = this.props;\n      const { keyedFormData } = this.state;\n      const newKeyedFormDataRow: KeyedFormDataType<T> = {\n        key: generateRowId(),\n        item: cloneDeep(keyedFormData[index].item),\n      };\n      const newKeyedFormData = [...keyedFormData];\n      if (index !== undefined) {\n        newKeyedFormData.splice(index + 1, 0, newKeyedFormDataRow);\n      } else {\n        newKeyedFormData.push(newKeyedFormDataRow);\n      }\n      this.setState(\n        {\n          keyedFormData: newKeyedFormData,\n          updatedKeyedFormData: true,\n        },\n        () => onChange(keyedToPlainFormData(newKeyedFormData))\n      );\n    };\n  };\n\n  /** Callback handler for when the user clicks on the remove button on an existing array element. Removes the row of\n   * keyed form data at the `index` in the state, and then returning `onChange()` with the plain form data converted\n   * from the keyed data\n   *\n   * @param index - The index at which the remove button is clicked\n   */\n  onDropIndexClick = (index: number) => {\n    return (event: MouseEvent) => {\n      if (event) {\n        event.preventDefault();\n      }\n      const { onChange, errorSchema } = this.props;\n      const { keyedFormData } = this.state;\n      // refs #195: revalidate to ensure properly reindexing errors\n      let newErrorSchema: ErrorSchema<T>;\n      if (errorSchema) {\n        newErrorSchema = {};\n        for (const idx in errorSchema) {\n          const i = parseInt(idx);\n          if (i < index) {\n            set(newErrorSchema, [i], errorSchema[idx]);\n          } else if (i > index) {\n            set(newErrorSchema, [i - 1], errorSchema[idx]);\n          }\n        }\n      }\n      const newKeyedFormData = keyedFormData.filter((_, i) => i !== index);\n      this.setState(\n        {\n          keyedFormData: newKeyedFormData,\n          updatedKeyedFormData: true,\n        },\n        () => onChange(keyedToPlainFormData(newKeyedFormData), newErrorSchema as ErrorSchema<T[]>)\n      );\n    };\n  };\n\n  /** Callback handler for when the user clicks on one of the move item buttons on an existing array element. Moves the\n   * row of keyed form data at the `index` to the `newIndex` in the state, and then returning `onChange()` with the\n   * plain form data converted from the keyed data\n   *\n   * @param index - The index of the item to move\n   * @param newIndex - The index to where the item is to be moved\n   */\n  onReorderClick = (index: number, newIndex: number) => {\n    return (event: MouseEvent<HTMLButtonElement>) => {\n      if (event) {\n        event.preventDefault();\n        event.currentTarget.blur();\n      }\n      const { onChange, errorSchema } = this.props;\n      let newErrorSchema: ErrorSchema<T>;\n      if (errorSchema) {\n        newErrorSchema = {};\n        for (const idx in errorSchema) {\n          const i = parseInt(idx);\n          if (i == index) {\n            set(newErrorSchema, [newIndex], errorSchema[index]);\n          } else if (i == newIndex) {\n            set(newErrorSchema, [index], errorSchema[newIndex]);\n          } else {\n            set(newErrorSchema, [idx], errorSchema[i]);\n          }\n        }\n      }\n\n      const { keyedFormData } = this.state;\n      function reOrderArray() {\n        // Copy item\n        const _newKeyedFormData = keyedFormData.slice();\n\n        // Moves item from index to newIndex\n        _newKeyedFormData.splice(index, 1);\n        _newKeyedFormData.splice(newIndex, 0, keyedFormData[index]);\n\n        return _newKeyedFormData;\n      }\n      const newKeyedFormData = reOrderArray();\n      this.setState(\n        {\n          keyedFormData: newKeyedFormData,\n        },\n        () => onChange(keyedToPlainFormData(newKeyedFormData), newErrorSchema as ErrorSchema<T[]>)\n      );\n    };\n  };\n\n  /** Callback handler used to deal with changing the value of the data in the array at the `index`. Calls the\n   * `onChange` callback with the updated form data\n   *\n   * @param index - The index of the item being changed\n   */\n  onChangeForIndex = (index: number) => {\n    return (value: any, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n      const { formData, onChange, errorSchema } = this.props;\n      const arrayData = Array.isArray(formData) ? formData : [];\n      const newFormData = arrayData.map((item: T, i: number) => {\n        // We need to treat undefined items as nulls to have validation.\n        // See https://github.com/tdegrunt/jsonschema/issues/206\n        const jsonValue = typeof value === 'undefined' ? null : value;\n        return index === i ? jsonValue : item;\n      });\n      onChange(\n        newFormData,\n        errorSchema &&\n          errorSchema && {\n            ...errorSchema,\n            [index]: newErrorSchema,\n          },\n        id\n      );\n    };\n  };\n\n  /** Callback handler used to change the value for a checkbox */\n  onSelectChange = (value: any) => {\n    const { onChange, idSchema } = this.props;\n    onChange(value, undefined, idSchema && idSchema.$id);\n  };\n\n  /** Renders the `ArrayField` depending on the specific needs of the schema and uischema elements\n   */\n  render() {\n    const { schema, uiSchema, idSchema, registry } = this.props;\n    const { schemaUtils, translateString } = registry;\n    if (!(ITEMS_KEY in schema)) {\n      const uiOptions = getUiOptions<T[], S, F>(uiSchema);\n      const UnsupportedFieldTemplate = getTemplate<'UnsupportedFieldTemplate', T[], S, F>(\n        'UnsupportedFieldTemplate',\n        registry,\n        uiOptions\n      );\n\n      return (\n        <UnsupportedFieldTemplate\n          schema={schema}\n          idSchema={idSchema}\n          reason={translateString(TranslatableString.MissingItems)}\n          registry={registry}\n        />\n      );\n    }\n    if (schemaUtils.isMultiSelect(schema)) {\n      // If array has enum or uniqueItems set to true, call renderMultiSelect() to render the default multiselect widget or a custom widget, if specified.\n      return this.renderMultiSelect();\n    }\n    if (isCustomWidget<T[], S, F>(uiSchema)) {\n      return this.renderCustomWidget();\n    }\n    if (isFixedItems(schema)) {\n      return this.renderFixedArray();\n    }\n    if (schemaUtils.isFilesArray(schema, uiSchema)) {\n      return this.renderFiles();\n    }\n    return this.renderNormalArray();\n  }\n\n  /** Renders a normal array without any limitations of length\n   */\n  renderNormalArray() {\n    const {\n      schema,\n      uiSchema = {},\n      errorSchema,\n      idSchema,\n      name,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      registry,\n      onBlur,\n      onFocus,\n      idPrefix,\n      idSeparator = '_',\n      rawErrors,\n    } = this.props;\n    const { keyedFormData } = this.state;\n    const title = schema.title === undefined ? name : schema.title;\n    const { schemaUtils, formContext } = registry;\n    const uiOptions = getUiOptions<T[], S, F>(uiSchema);\n    const _schemaItems: S = isObject(schema.items) ? (schema.items as S) : ({} as S);\n    const itemsSchema: S = schemaUtils.retrieveSchema(_schemaItems);\n    const formData = keyedToPlainFormData(this.state.keyedFormData);\n    const canAdd = this.canAddItem(formData);\n    const arrayProps: ArrayFieldTemplateProps<T[], S, F> = {\n      canAdd,\n      items: keyedFormData.map((keyedItem, index) => {\n        const { key, item } = keyedItem;\n        // While we are actually dealing with a single item of type T, the types require a T[], so cast\n        const itemCast = item as unknown as T[];\n        const itemSchema = schemaUtils.retrieveSchema(_schemaItems, itemCast);\n        const itemErrorSchema = errorSchema ? (errorSchema[index] as ErrorSchema<T[]>) : undefined;\n        const itemIdPrefix = idSchema.$id + idSeparator + index;\n        const itemIdSchema = schemaUtils.toIdSchema(itemSchema, itemIdPrefix, itemCast, idPrefix, idSeparator);\n        return this.renderArrayFieldItem({\n          key,\n          index,\n          name: name && `${name}-${index}`,\n          canAdd,\n          canMoveUp: index > 0,\n          canMoveDown: index < formData.length - 1,\n          itemSchema,\n          itemIdSchema,\n          itemErrorSchema,\n          itemData: itemCast,\n          itemUiSchema: uiSchema.items,\n          autofocus: autofocus && index === 0,\n          onBlur,\n          onFocus,\n          rawErrors,\n          totalItems: keyedFormData.length,\n        });\n      }),\n      className: `field field-array field-array-of-${itemsSchema.type}`,\n      disabled,\n      idSchema,\n      uiSchema,\n      onAddClick: this.onAddClick,\n      readonly,\n      required,\n      schema,\n      title,\n      formContext,\n      formData,\n      rawErrors,\n      registry,\n    };\n\n    const Template = getTemplate<'ArrayFieldTemplate', T[], S, F>('ArrayFieldTemplate', registry, uiOptions);\n    return <Template {...arrayProps} />;\n  }\n\n  /** Renders an array using the custom widget provided by the user in the `uiSchema`\n   */\n  renderCustomWidget() {\n    const {\n      schema,\n      idSchema,\n      uiSchema,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      hideError,\n      placeholder,\n      onBlur,\n      onFocus,\n      formData: items = [],\n      registry,\n      rawErrors,\n      name,\n    } = this.props;\n    const { widgets, formContext, globalUiOptions, schemaUtils } = registry;\n    const { widget, title: uiTitle, ...options } = getUiOptions<T[], S, F>(uiSchema, globalUiOptions);\n    const Widget = getWidget<T[], S, F>(schema, widget, widgets);\n    const label = uiTitle ?? schema.title ?? name;\n    const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema, globalUiOptions);\n    return (\n      <Widget\n        id={idSchema.$id}\n        name={name}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        options={options}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        hideError={hideError}\n        required={required}\n        label={label}\n        hideLabel={!displayLabel}\n        placeholder={placeholder}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n      />\n    );\n  }\n\n  /** Renders an array as a set of checkboxes\n   */\n  renderMultiSelect() {\n    const {\n      schema,\n      idSchema,\n      uiSchema,\n      formData: items = [],\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      placeholder,\n      onBlur,\n      onFocus,\n      registry,\n      rawErrors,\n      name,\n    } = this.props;\n    const { widgets, schemaUtils, formContext, globalUiOptions } = registry;\n    const itemsSchema = schemaUtils.retrieveSchema(schema.items as S, items);\n    const enumOptions = optionsList(itemsSchema);\n    const { widget = 'select', title: uiTitle, ...options } = getUiOptions<T[], S, F>(uiSchema, globalUiOptions);\n    const Widget = getWidget<T[], S, F>(schema, widget, widgets);\n    const label = uiTitle ?? schema.title ?? name;\n    const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema, globalUiOptions);\n    return (\n      <Widget\n        id={idSchema.$id}\n        name={name}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        options={{ ...options, enumOptions }}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        required={required}\n        label={label}\n        hideLabel={!displayLabel}\n        placeholder={placeholder}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n      />\n    );\n  }\n\n  /** Renders an array of files using the `FileWidget`\n   */\n  renderFiles() {\n    const {\n      schema,\n      uiSchema,\n      idSchema,\n      name,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      onBlur,\n      onFocus,\n      registry,\n      formData: items = [],\n      rawErrors,\n    } = this.props;\n    const { widgets, formContext, globalUiOptions, schemaUtils } = registry;\n    const { widget = 'files', title: uiTitle, ...options } = getUiOptions<T[], S, F>(uiSchema, globalUiOptions);\n    const Widget = getWidget<T[], S, F>(schema, widget, widgets);\n    const label = uiTitle ?? schema.title ?? name;\n    const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema, globalUiOptions);\n    return (\n      <Widget\n        options={options}\n        id={idSchema.$id}\n        name={name}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        schema={schema}\n        uiSchema={uiSchema}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        required={required}\n        registry={registry}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n        label={label}\n        hideLabel={!displayLabel}\n      />\n    );\n  }\n\n  /** Renders an array that has a maximum limit of items\n   */\n  renderFixedArray() {\n    const {\n      schema,\n      uiSchema = {},\n      formData = [],\n      errorSchema,\n      idPrefix,\n      idSeparator = '_',\n      idSchema,\n      name,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      registry,\n      onBlur,\n      onFocus,\n      rawErrors,\n    } = this.props;\n    const { keyedFormData } = this.state;\n    let { formData: items = [] } = this.props;\n    const title = schema.title || name;\n    const uiOptions = getUiOptions<T[], S, F>(uiSchema);\n    const { schemaUtils, formContext } = registry;\n    const _schemaItems: S[] = isObject(schema.items) ? (schema.items as S[]) : ([] as S[]);\n    const itemSchemas = _schemaItems.map((item: S, index: number) =>\n      schemaUtils.retrieveSchema(item, formData[index] as unknown as T[])\n    );\n    const additionalSchema = isObject(schema.additionalItems)\n      ? schemaUtils.retrieveSchema(schema.additionalItems as S, formData)\n      : null;\n\n    if (!items || items.length < itemSchemas.length) {\n      // to make sure at least all fixed items are generated\n      items = items || [];\n      items = items.concat(new Array(itemSchemas.length - items.length));\n    }\n\n    // These are the props passed into the render function\n    const canAdd = this.canAddItem(items) && !!additionalSchema;\n    const arrayProps: ArrayFieldTemplateProps<T[], S, F> = {\n      canAdd,\n      className: 'field field-array field-array-fixed-items',\n      disabled,\n      idSchema,\n      formData,\n      items: keyedFormData.map((keyedItem, index) => {\n        const { key, item } = keyedItem;\n        // While we are actually dealing with a single item of type T, the types require a T[], so cast\n        const itemCast = item as unknown as T[];\n        const additional = index >= itemSchemas.length;\n        const itemSchema =\n          additional && isObject(schema.additionalItems)\n            ? schemaUtils.retrieveSchema(schema.additionalItems as S, itemCast)\n            : itemSchemas[index];\n        const itemIdPrefix = idSchema.$id + idSeparator + index;\n        const itemIdSchema = schemaUtils.toIdSchema(itemSchema, itemIdPrefix, itemCast, idPrefix, idSeparator);\n        const itemUiSchema = additional\n          ? uiSchema.additionalItems || {}\n          : Array.isArray(uiSchema.items)\n          ? uiSchema.items[index]\n          : uiSchema.items || {};\n        const itemErrorSchema = errorSchema ? (errorSchema[index] as ErrorSchema<T[]>) : undefined;\n\n        return this.renderArrayFieldItem({\n          key,\n          index,\n          name: name && `${name}-${index}`,\n          canAdd,\n          canRemove: additional,\n          canMoveUp: index >= itemSchemas.length + 1,\n          canMoveDown: additional && index < items.length - 1,\n          itemSchema,\n          itemData: itemCast,\n          itemUiSchema,\n          itemIdSchema,\n          itemErrorSchema,\n          autofocus: autofocus && index === 0,\n          onBlur,\n          onFocus,\n          rawErrors,\n          totalItems: keyedFormData.length,\n        });\n      }),\n      onAddClick: this.onAddClick,\n      readonly,\n      required,\n      registry,\n      schema,\n      uiSchema,\n      title,\n      formContext,\n      rawErrors,\n    };\n\n    const Template = getTemplate<'ArrayFieldTemplate', T[], S, F>('ArrayFieldTemplate', registry, uiOptions);\n    return <Template {...arrayProps} />;\n  }\n\n  /** Renders the individual array item using a `SchemaField` along with the additional properties required to be send\n   * back to the `ArrayFieldItemTemplate`.\n   *\n   * @param props - The props for the individual array item to be rendered\n   */\n  renderArrayFieldItem(props: {\n    key: string;\n    index: number;\n    name: string;\n    canAdd: boolean;\n    canRemove?: boolean;\n    canMoveUp: boolean;\n    canMoveDown: boolean;\n    itemSchema: S;\n    itemData: T[];\n    itemUiSchema: UiSchema<T[], S, F>;\n    itemIdSchema: IdSchema<T[]>;\n    itemErrorSchema?: ErrorSchema<T[]>;\n    autofocus?: boolean;\n    onBlur: FieldProps<T[], S, F>['onBlur'];\n    onFocus: FieldProps<T[], S, F>['onFocus'];\n    rawErrors?: string[];\n    totalItems: number;\n  }) {\n    const {\n      key,\n      index,\n      name,\n      canAdd,\n      canRemove = true,\n      canMoveUp,\n      canMoveDown,\n      itemSchema,\n      itemData,\n      itemUiSchema,\n      itemIdSchema,\n      itemErrorSchema,\n      autofocus,\n      onBlur,\n      onFocus,\n      rawErrors,\n      totalItems,\n    } = props;\n    const { disabled, hideError, idPrefix, idSeparator, readonly, uiSchema, registry, formContext } = this.props;\n    const {\n      fields: { ArraySchemaField, SchemaField },\n      globalUiOptions,\n    } = registry;\n    const ItemSchemaField = ArraySchemaField || SchemaField;\n    const { orderable = true, removable = true, copyable = false } = getUiOptions<T[], S, F>(uiSchema, globalUiOptions);\n    const has: { [key: string]: boolean } = {\n      moveUp: orderable && canMoveUp,\n      moveDown: orderable && canMoveDown,\n      copy: copyable && canAdd,\n      remove: removable && canRemove,\n      toolbar: false,\n    };\n    has.toolbar = Object.keys(has).some((key: keyof typeof has) => has[key]);\n\n    return {\n      children: (\n        <ItemSchemaField\n          name={name}\n          index={index}\n          schema={itemSchema}\n          uiSchema={itemUiSchema}\n          formData={itemData}\n          formContext={formContext}\n          errorSchema={itemErrorSchema}\n          idPrefix={idPrefix}\n          idSeparator={idSeparator}\n          idSchema={itemIdSchema}\n          required={this.isItemRequired(itemSchema)}\n          onChange={this.onChangeForIndex(index)}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          registry={registry}\n          disabled={disabled}\n          readonly={readonly}\n          hideError={hideError}\n          autofocus={autofocus}\n          rawErrors={rawErrors}\n        />\n      ),\n      className: 'array-item',\n      disabled,\n      canAdd,\n      hasCopy: has.copy,\n      hasToolbar: has.toolbar,\n      hasMoveUp: has.moveUp,\n      hasMoveDown: has.moveDown,\n      hasRemove: has.remove,\n      index,\n      totalItems,\n      key,\n      onAddIndexClick: this.onAddIndexClick,\n      onCopyIndexClick: this.onCopyIndexClick,\n      onDropIndexClick: this.onDropIndexClick,\n      onReorderClick: this.onReorderClick,\n      readonly,\n      registry,\n      schema: itemSchema,\n      uiSchema: itemUiSchema,\n    };\n  }\n}\n\n/** `ArrayField` is `React.ComponentType<FieldProps<T[], S, F>>` (necessarily) but the `registry` requires things to be a\n * `Field` which is defined as `React.ComponentType<FieldProps<T, S, F>>`, so cast it to make `registry` happy.\n */\nexport default ArrayField;\n", "import {\n  getWidget,\n  getUiOptions,\n  optionsList,\n  FieldProps,\n  FormContextType,\n  EnumOptionsType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n} from '@rjsf/utils';\nimport isObject from 'lodash/isObject';\n\n/** The `BooleanField` component is used to render a field in the schema is boolean. It constructs `enumOptions` for the\n * two boolean values based on the various alternatives in the schema.\n *\n * @param props - The `FieldProps` for this template\n */\nfunction BooleanField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: FieldProps<T, S, F>\n) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    registry,\n    required,\n    disabled,\n    readonly,\n    autofocus,\n    onChange,\n    onFocus,\n    onBlur,\n    rawErrors,\n  } = props;\n  const { title } = schema;\n  const { widgets, formContext, translateString, globalUiOptions } = registry;\n  const {\n    widget = 'checkbox',\n    title: uiTitle,\n    // Unlike the other fields, don't use `getDisplayLabel()` since it always returns false for the boolean type\n    label: displayLabel = true,\n    ...options\n  } = getUiOptions<T, S, F>(uiSchema, globalUiOptions);\n  const Widget = getWidget(schema, widget, widgets);\n  const yes = translateString(TranslatableString.YesLabel);\n  const no = translateString(TranslatableString.NoLabel);\n  let enumOptions: EnumOptionsType<S>[] | undefined;\n  const label = uiTitle ?? title ?? name;\n  if (Array.isArray(schema.oneOf)) {\n    enumOptions = optionsList<S>({\n      oneOf: schema.oneOf\n        .map((option) => {\n          if (isObject(option)) {\n            return {\n              ...option,\n              title: option.title || (option.const === true ? yes : no),\n            };\n          }\n          return undefined;\n        })\n        .filter((o: any) => o) as S[], // cast away the error that typescript can't grok is fixed\n    } as unknown as S);\n  } else {\n    // We deprecated enumNames in v5. It's intentionally omitted from RSJFSchema type, so we need to cast here.\n    const schemaWithEnumNames = schema as S & { enumNames?: string[] };\n    const enums = schema.enum ?? [true, false];\n    if (!schemaWithEnumNames.enumNames && enums.length === 2 && enums.every((v: any) => typeof v === 'boolean')) {\n      enumOptions = [\n        {\n          value: enums[0],\n          label: enums[0] ? yes : no,\n        },\n        {\n          value: enums[1],\n          label: enums[1] ? yes : no,\n        },\n      ];\n    } else {\n      enumOptions = optionsList<S>({\n        enum: enums,\n        // NOTE: enumNames is deprecated, but still supported for now.\n        enumNames: schemaWithEnumNames.enumNames,\n      } as unknown as S);\n    }\n  }\n\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      uiSchema={uiSchema}\n      id={idSchema.$id}\n      name={name}\n      onChange={onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      label={label}\n      hideLabel={!displayLabel}\n      value={formData}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      registry={registry}\n      formContext={formContext}\n      autofocus={autofocus}\n      rawErrors={rawErrors}\n    />\n  );\n}\n\nexport default BooleanField;\n", "import { Component } from 'react';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport omit from 'lodash/omit';\nimport {\n  deepEquals,\n  ERRORS_KEY,\n  FieldProps,\n  FormContextType,\n  getDiscriminatorFieldFromSchema,\n  getUiOptions,\n  getWidget,\n  mergeSchemas,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n} from '@rjsf/utils';\n\n/** Type used for the state of the `AnyOfField` component */\ntype AnyOfFieldState<S extends StrictRJSFSchema = RJSFSchema> = {\n  /** The currently selected option */\n  selectedOption: number;\n  /** The option schemas after retrieving all $refs */\n  retrievedOptions: S[];\n};\n\n/** The `AnyOfField` component is used to render a field in the schema that is an `anyOf`, `allOf` or `oneOf`. It tracks\n * the currently selected option and cleans up any irrelevant data in `formData`.\n *\n * @param props - The `FieldProps` for this template\n */\nclass AnyOfField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> extends Component<\n  FieldProps<T, S, F>,\n  AnyOfFieldState<S>\n> {\n  /** Constructs an `AnyOfField` with the given `props` to initialize the initially selected option in state\n   *\n   * @param props - The `FieldProps` for this template\n   */\n  constructor(props: FieldProps<T, S, F>) {\n    super(props);\n\n    const {\n      formData,\n      options,\n      registry: { schemaUtils },\n    } = this.props;\n    // cache the retrieved options in state in case they have $refs to save doing it later\n    const retrievedOptions = options.map((opt: S) => schemaUtils.retrieveSchema(opt, formData));\n\n    this.state = {\n      retrievedOptions,\n      selectedOption: this.getMatchingOption(0, formData, retrievedOptions),\n    };\n  }\n\n  /** React lifecycle method that is called when the props and/or state for this component is updated. It recomputes the\n   * currently selected option based on the overall `formData`\n   *\n   * @param prevProps - The previous `FieldProps` for this template\n   * @param prevState - The previous `AnyOfFieldState` for this template\n   */\n  componentDidUpdate(prevProps: Readonly<FieldProps<T, S, F>>, prevState: Readonly<AnyOfFieldState>) {\n    const { formData, options, idSchema } = this.props;\n    const { selectedOption } = this.state;\n    let newState = this.state;\n    if (!deepEquals(prevProps.options, options)) {\n      const {\n        registry: { schemaUtils },\n      } = this.props;\n      // re-cache the retrieved options in state in case they have $refs to save doing it later\n      const retrievedOptions = options.map((opt: S) => schemaUtils.retrieveSchema(opt, formData));\n      newState = { selectedOption, retrievedOptions };\n    }\n    if (!deepEquals(formData, prevProps.formData) && idSchema.$id === prevProps.idSchema.$id) {\n      const { retrievedOptions } = newState;\n      const matchingOption = this.getMatchingOption(selectedOption, formData, retrievedOptions);\n\n      if (prevState && matchingOption !== selectedOption) {\n        newState = { selectedOption: matchingOption, retrievedOptions };\n      }\n    }\n    if (newState !== this.state) {\n      this.setState(newState);\n    }\n  }\n\n  /** Determines the best matching option for the given `formData` and `options`.\n   *\n   * @param formData - The new formData\n   * @param options - The list of options to choose from\n   * @return - The index of the `option` that best matches the `formData`\n   */\n  getMatchingOption(selectedOption: number, formData: T | undefined, options: S[]) {\n    const {\n      schema,\n      registry: { schemaUtils },\n    } = this.props;\n\n    const discriminator = getDiscriminatorFieldFromSchema<S>(schema);\n    const option = schemaUtils.getClosestMatchingOption(formData, options, selectedOption, discriminator);\n    return option;\n  }\n\n  /** Callback handler to remember what the currently selected option is. In addition to that the `formData` is updated\n   * to remove properties that are not part of the newly selected option schema, and then the updated data is passed to\n   * the `onChange` handler.\n   *\n   * @param option - The new option value being selected\n   */\n  onOptionChange = (option?: string) => {\n    const { selectedOption, retrievedOptions } = this.state;\n    const { formData, onChange, registry } = this.props;\n    const { schemaUtils } = registry;\n    const intOption = option !== undefined ? parseInt(option, 10) : -1;\n    if (intOption === selectedOption) {\n      return;\n    }\n    const newOption = intOption >= 0 ? retrievedOptions[intOption] : undefined;\n    const oldOption = selectedOption >= 0 ? retrievedOptions[selectedOption] : undefined;\n\n    let newFormData = schemaUtils.sanitizeDataForNewSchema(newOption, oldOption, formData);\n    if (newFormData && newOption) {\n      // Call getDefaultFormState to make sure defaults are populated on change. Pass \"excludeObjectChildren\"\n      // so that only the root objects themselves are created without adding undefined children properties\n      newFormData = schemaUtils.getDefaultFormState(newOption, newFormData, 'excludeObjectChildren') as T;\n    }\n    onChange(newFormData, undefined, this.getFieldId());\n\n    this.setState({ selectedOption: intOption });\n  };\n\n  getFieldId() {\n    const { idSchema, schema } = this.props;\n    return `${idSchema.$id}${schema.oneOf ? '__oneof_select' : '__anyof_select'}`;\n  }\n\n  /** Renders the `AnyOfField` selector along with a `SchemaField` for the value of the `formData`\n   */\n  render() {\n    const {\n      name,\n      disabled = false,\n      errorSchema = {},\n      formContext,\n      onBlur,\n      onFocus,\n      registry,\n      schema,\n      uiSchema,\n    } = this.props;\n\n    const { widgets, fields, translateString, globalUiOptions, schemaUtils } = registry;\n    const { SchemaField: _SchemaField } = fields;\n    const { selectedOption, retrievedOptions } = this.state;\n    const {\n      widget = 'select',\n      placeholder,\n      autofocus,\n      autocomplete,\n      title = schema.title,\n      ...uiOptions\n    } = getUiOptions<T, S, F>(uiSchema, globalUiOptions);\n    const Widget = getWidget<T, S, F>({ type: 'number' }, widget, widgets);\n    const rawErrors = get(errorSchema, ERRORS_KEY, []);\n    const fieldErrorSchema = omit(errorSchema, [ERRORS_KEY]);\n    const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema, globalUiOptions);\n\n    const option = selectedOption >= 0 ? retrievedOptions[selectedOption] || null : null;\n    let optionSchema: S;\n\n    if (option) {\n      // merge top level required field\n      const { required } = schema;\n      // Merge in all the non-oneOf/anyOf properties and also skip the special ADDITIONAL_PROPERTY_FLAG property\n      optionSchema = required ? (mergeSchemas({ required }, option) as S) : option;\n    }\n\n    const translateEnum: TranslatableString = title\n      ? TranslatableString.TitleOptionPrefix\n      : TranslatableString.OptionPrefix;\n    const translateParams = title ? [title] : [];\n    const enumOptions = retrievedOptions.map((opt: { title?: string }, index: number) => ({\n      label: opt.title || translateString(translateEnum, translateParams.concat(String(index + 1))),\n      value: index,\n    }));\n\n    return (\n      <div className='panel panel-default panel-body'>\n        <div className='form-group'>\n          <Widget\n            id={this.getFieldId()}\n            name={`${name}${schema.oneOf ? '__oneof_select' : '__anyof_select'}`}\n            schema={{ type: 'number', default: 0 } as S}\n            onChange={this.onOptionChange}\n            onBlur={onBlur}\n            onFocus={onFocus}\n            disabled={disabled || isEmpty(enumOptions)}\n            multiple={false}\n            rawErrors={rawErrors}\n            errorSchema={fieldErrorSchema}\n            value={selectedOption >= 0 ? selectedOption : undefined}\n            options={{ enumOptions, ...uiOptions }}\n            registry={registry}\n            formContext={formContext}\n            placeholder={placeholder}\n            autocomplete={autocomplete}\n            autofocus={autofocus}\n            label={title ?? name}\n            hideLabel={!displayLabel}\n          />\n        </div>\n        {option !== null && <_SchemaField {...this.props} schema={optionSchema!} />}\n      </div>\n    );\n  }\n}\n\nexport default AnyOfField;\n", "import { useState, useCallback } from 'react';\nimport { asNumber, FieldProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n// Matches a string that ends in a . character, optionally followed by a sequence of\n// digits followed by any number of 0 characters up until the end of the line.\n// Ensuring that there is at least one prefixed character is important so that\n// you don't incorrectly match against \"0\".\nconst trailingCharMatcherWithPrefix = /\\.([0-9]*0)*$/;\n\n// This is used for trimming the trailing 0 and . characters without affecting\n// the rest of the string. Its possible to use one RegEx with groups for this\n// functionality, but it is fairly complex compared to simply defining two\n// different matchers.\nconst trailingCharMatcher = /[0.]0*$/;\n\n/**\n * The NumberField class has some special handling for dealing with trailing\n * decimal points and/or zeroes. This logic is designed to allow trailing values\n * to be visible in the input element, but not be represented in the\n * corresponding form data.\n *\n * The algorithm is as follows:\n *\n * 1. When the input value changes the value is cached in the component state\n *\n * 2. The value is then normalized, removing trailing decimal points and zeros,\n *    then passed to the \"onChange\" callback\n *\n * 3. When the component is rendered, the formData value is checked against the\n *    value cached in the state. If it matches the cached value, the cached\n *    value is passed to the input instead of the formData value\n */\nfunction NumberField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: FieldProps<T, S, F>\n) {\n  const { registry, onChange, formData, value: initialValue } = props;\n  const [lastValue, setLastValue] = useState(initialValue);\n  const { StringField } = registry.fields;\n\n  let value = formData;\n\n  /** Handle the change from the `StringField` to properly convert to a number\n   *\n   * @param value - The current value for the change occurring\n   */\n  const handleChange = useCallback(\n    (value: FieldProps<T, S, F>['value']) => {\n      // Cache the original value in component state\n      setLastValue(value);\n\n      // Normalize decimals that don't start with a zero character in advance so\n      // that the rest of the normalization logic is simpler\n      if (`${value}`.charAt(0) === '.') {\n        value = `0${value}`;\n      }\n\n      // Check that the value is a string (this can happen if the widget used is a\n      // <select>, due to an enum declaration etc) then, if the value ends in a\n      // trailing decimal point or multiple zeroes, strip the trailing values\n      const processed =\n        typeof value === 'string' && value.match(trailingCharMatcherWithPrefix)\n          ? asNumber(value.replace(trailingCharMatcher, ''))\n          : asNumber(value);\n\n      onChange(processed as unknown as T);\n    },\n    [onChange]\n  );\n\n  if (typeof lastValue === 'string' && typeof value === 'number') {\n    // Construct a regular expression that checks for a string that consists\n    // of the formData value suffixed with zero or one '.' characters and zero\n    // or more '0' characters\n    const re = new RegExp(`${value}`.replace('.', '\\\\.') + '\\\\.?0*$');\n\n    // If the cached \"lastValue\" is a match, use that instead of the formData\n    // value to prevent the input value from changing in the UI\n    if (lastValue.match(re)) {\n      value = lastValue as unknown as T;\n    }\n  }\n\n  return <StringField {...props} formData={value} onChange={handleChange} />;\n}\n\nexport default NumberField;\n", "/* @jsx h */\n/**\n * markdown-to-jsx is a fork of [simple-markdown v0.2.2](https://github.com/Khan/simple-markdown)\n * from Khan Academy. Thank you Khan devs for making such an awesome and extensible\n * parsing infra... without it, half of the optimizations here wouldn't be feasible. 🙏🏼\n */\nimport * as React from 'react'\n\nexport namespace MarkdownToJSX {\n  /**\n   * RequireAtLeastOne<{ ... }> <- only requires at least one key\n   */\n  type RequireAtLeastOne<T, Keys extends keyof T = keyof T> = Pick<\n    T,\n    Exclude<keyof T, Keys>\n  > &\n    {\n      [K in Keys]-?: Required<Pick<T, K>> & Partial<Pick<T, Exclude<Keys, K>>>\n    }[Keys]\n\n  export type CreateElement = typeof React.createElement\n\n  export type HTMLTags = keyof JSX.IntrinsicElements\n\n  export type State = {\n    _inAnchor?: boolean\n    _inline?: boolean\n    _inTable?: boolean\n    _key?: React.Key\n    _list?: boolean\n    _simple?: boolean\n  }\n\n  export type ParserResult = {\n    [key: string]: any\n    type?: string\n  }\n\n  export type NestedParser = (\n    input: string,\n    state?: MarkdownToJSX.State\n  ) => MarkdownToJSX.ParserResult\n\n  export type Parser<ParserOutput> = (\n    capture: RegExpMatchArray,\n    nestedParse: NestedParser,\n    state?: MarkdownToJSX.State\n  ) => ParserOutput\n\n  export type RuleOutput = (\n    ast: MarkdownToJSX.ParserResult,\n    state: MarkdownToJSX.State\n  ) => JSX.Element\n\n  export type Rule<ParserOutput = MarkdownToJSX.ParserResult> = {\n    _match: (\n      source: string,\n      state: MarkdownToJSX.State,\n      prevCapturedString?: string\n    ) => RegExpMatchArray\n    _order: Priority\n    _parse: MarkdownToJSX.Parser<ParserOutput>\n    _react?: (\n      node: ParserOutput,\n      output: RuleOutput,\n      state?: MarkdownToJSX.State\n    ) => React.ReactChild\n  }\n\n  export type Rules = {\n    [key: string]: Rule\n  }\n\n  export type Override =\n    | RequireAtLeastOne<{\n        component: React.ElementType\n        props: Object\n      }>\n    | React.ElementType\n\n  export type Overrides = {\n    [tag in HTMLTags]?: Override\n  } & {\n    [customComponent: string]: Override\n  }\n\n  export type Options = Partial<{\n    /**\n     * Ultimate control over the output of all rendered JSX.\n     */\n    createElement: (\n      tag: Parameters<CreateElement>[0],\n      props: JSX.IntrinsicAttributes,\n      ...children: React.ReactChild[]\n    ) => JSX.Element\n\n    /**\n     * Disable the compiler's best-effort transcription of provided raw HTML\n     * into JSX-equivalent. This is the functionality that prevents the need to\n     * use `dangerouslySetInnerHTML` in React.\n     */\n    disableParsingRawHTML: boolean\n\n    /**\n     * Forces the compiler to always output content with a block-level wrapper\n     * (`<p>` or any block-level syntax your markdown already contains.)\n     */\n    forceBlock: boolean\n\n    /**\n     * Forces the compiler to always output content with an inline wrapper (`<span>`)\n     */\n    forceInline: boolean\n\n    /**\n     * Supply additional HTML entity: unicode replacement mappings.\n     *\n     * Pass only the inner part of the entity as the key,\n     * e.g. `&le;` -> `{ \"le\": \"\\u2264\" }`\n     *\n     * By default\n     * the following entities are replaced with their unicode equivalents:\n     *\n     * ```\n     * &amp;\n     * &apos;\n     * &gt;\n     * &lt;\n     * &nbsp;\n     * &quot;\n     * ```\n     */\n    namedCodesToUnicode: {\n      [key: string]: string\n    }\n\n    /**\n     * Selectively control the output of particular HTML tags as they would be\n     * emitted by the compiler.\n     */\n    overrides: Overrides\n\n    /**\n     * Declare the type of the wrapper to be used when there are multiple\n     * children to render. Set to `null` to get an array of children back\n     * without any wrapper, or use `React.Fragment` to get a React element\n     * that won't show up in the DOM.\n     */\n    wrapper: React.ElementType | null\n\n    /**\n     * Forces the compiler to wrap results, even if there is only a single\n     * child or no children.\n     */\n    forceWrapper: boolean\n\n    /**\n     * Override normalization of non-URI-safe characters for use in generating\n     * HTML IDs for anchor linking purposes.\n     */\n    slugify: (source: string) => string\n\n    /**\n     * Forces the compiler to have space between hash sign and the header text which\n     * is explicitly stated in the most of the markdown specs.\n     * https://github.github.com/gfm/#atx-heading\n     * `The opening sequence of # characters must be followed by a space or by the end of line.`\n     */\n    enforceAtxHeadings: boolean\n  }>\n}\n\n/** TODO: Drop for React 16? */\nconst ATTRIBUTE_TO_JSX_PROP_MAP = [\n  'allowFullScreen',\n  'allowTransparency',\n  'autoComplete',\n  'autoFocus',\n  'autoPlay',\n  'cellPadding',\n  'cellSpacing',\n  'charSet',\n  'className',\n  'classId',\n  'colSpan',\n  'contentEditable',\n  'contextMenu',\n  'crossOrigin',\n  'encType',\n  'formAction',\n  'formEncType',\n  'formMethod',\n  'formNoValidate',\n  'formTarget',\n  'frameBorder',\n  'hrefLang',\n  'inputMode',\n  'keyParams',\n  'keyType',\n  'marginHeight',\n  'marginWidth',\n  'maxLength',\n  'mediaGroup',\n  'minLength',\n  'noValidate',\n  'radioGroup',\n  'readOnly',\n  'rowSpan',\n  'spellCheck',\n  'srcDoc',\n  'srcLang',\n  'srcSet',\n  'tabIndex',\n  'useMap',\n].reduce(\n  (obj, x) => {\n    obj[x.toLowerCase()] = x\n    return obj\n  },\n  { for: 'htmlFor' }\n)\n\nconst namedCodesToUnicode = {\n  amp: '\\u0026',\n  apos: '\\u0027',\n  gt: '\\u003e',\n  lt: '\\u003c',\n  nbsp: '\\u00a0',\n  quot: '\\u201c',\n} as const\n\nconst DO_NOT_PROCESS_HTML_ELEMENTS = ['style', 'script']\n\n/**\n * the attribute extractor regex looks for a valid attribute name,\n * followed by an equal sign (whitespace around the equal sign is allowed), followed\n * by one of the following:\n *\n * 1. a single quote-bounded string, e.g. 'foo'\n * 2. a double quote-bounded string, e.g. \"bar\"\n * 3. an interpolation, e.g. {something}\n *\n * JSX can be be interpolated into itself and is passed through the compiler using\n * the same options and setup as the current run.\n *\n * <Something children={<SomeOtherThing />} />\n *                      ==================\n *                              ↳ children: [<SomeOtherThing />]\n *\n * Otherwise, interpolations are handled as strings or simple booleans\n * unless HTML syntax is detected.\n *\n * <Something color={green} disabled={true} />\n *                   =====            ====\n *                     ↓                ↳ disabled: true\n *                     ↳ color: \"green\"\n *\n * Numbers are not parsed at this time due to complexities around int, float,\n * and the upcoming bigint functionality that would make handling it unwieldy.\n * Parse the string in your component as desired.\n *\n * <Something someBigNumber={123456789123456789} />\n *                           ==================\n *                                   ↳ someBigNumber: \"123456789123456789\"\n */\nconst ATTR_EXTRACTOR_R =\n  /([-A-Z0-9_:]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|(?:\\{((?:\\\\.|{[^}]*?}|[^}])*)\\})))?/gi\n\n/** TODO: Write explainers for each of these */\n\nconst AUTOLINK_MAILTO_CHECK_R = /mailto:/i\nconst BLOCK_END_R = /\\n{2,}$/\nconst BLOCKQUOTE_R = /^( *>[^\\n]+(\\n[^\\n]+)*\\n*)+\\n{2,}/\nconst BLOCKQUOTE_TRIM_LEFT_MULTILINE_R = /^ *> ?/gm\nconst BREAK_LINE_R = /^ {2,}\\n/\nconst BREAK_THEMATIC_R = /^(?:( *[-*_])){3,} *(?:\\n *)+\\n/\nconst CODE_BLOCK_FENCED_R =\n  /^\\s*(`{3,}|~{3,}) *(\\S+)?([^\\n]*?)?\\n([\\s\\S]+?)\\s*\\1 *(?:\\n *)*\\n?/\nconst CODE_BLOCK_R = /^(?: {4}[^\\n]+\\n*)+(?:\\n *)+\\n?/\nconst CODE_INLINE_R = /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/\nconst CONSECUTIVE_NEWLINE_R = /^(?:\\n *)*\\n/\nconst CR_NEWLINE_R = /\\r\\n?/g\nconst FOOTNOTE_R = /^\\[\\^([^\\]]+)](:.*)\\n/\nconst FOOTNOTE_REFERENCE_R = /^\\[\\^([^\\]]+)]/\nconst FORMFEED_R = /\\f/g\nconst GFM_TASK_R = /^\\s*?\\[(x|\\s)\\]/\nconst HEADING_R = /^ *(#{1,6}) *([^\\n]+?)(?: +#*)?(?:\\n *)*(?:\\n|$)/\nconst HEADING_ATX_COMPLIANT_R =\n  /^ *(#{1,6}) +([^\\n]+?)(?: +#*)?(?:\\n *)*(?:\\n|$)/\nconst HEADING_SETEXT_R = /^([^\\n]+)\\n *(=|-){3,} *(?:\\n *)+\\n/\n\n/**\n * Explanation:\n *\n * 1. Look for a starting tag, preceded by any amount of spaces\n *    ^ *<\n *\n * 2. Capture the tag name (capture 1)\n *    ([^ >/]+)\n *\n * 3. Ignore a space after the starting tag and capture the attribute portion of the tag (capture 2)\n *     ?([^>]*)\\/{0}>\n *\n * 4. Ensure a matching closing tag is present in the rest of the input string\n *    (?=[\\s\\S]*<\\/\\1>)\n *\n * 5. Capture everything until the matching closing tag -- this might include additional pairs\n *    of the same tag type found in step 2 (capture 3)\n *    ((?:[\\s\\S]*?(?:<\\1[^>]*>[\\s\\S]*?<\\/\\1>)*[\\s\\S]*?)*?)<\\/\\1>\n *\n * 6. Capture excess newlines afterward\n *    \\n*\n */\nconst HTML_BLOCK_ELEMENT_R =\n  /^ *(?!<[a-z][^ >/]* ?\\/>)<([a-z][^ >/]*) ?([^>]*)\\/{0}>\\n?(\\s*(?:<\\1[^>]*?>[\\s\\S]*?<\\/\\1>|(?!<\\1)[\\s\\S])*?)<\\/\\1>\\n*/i\n\nconst HTML_CHAR_CODE_R = /&([a-z0-9]+|#[0-9]{1,6}|#x[0-9a-fA-F]{1,6});/ig\n\nconst HTML_COMMENT_R = /^<!--[\\s\\S]*?(?:-->)/\n\n/**\n * borrowed from React 15(https://github.com/facebook/react/blob/894d20744cba99383ffd847dbd5b6e0800355a5c/src/renderers/dom/shared/HTMLDOMPropertyConfig.js)\n */\nconst HTML_CUSTOM_ATTR_R = /^(data|aria|x)-[a-z_][a-z\\d_.-]*$/\n\nconst HTML_SELF_CLOSING_ELEMENT_R =\n  /^ *<([a-z][a-z0-9:]*)(?:\\s+((?:<.*?>|[^>])*))?\\/?>(?!<\\/\\1>)(\\s*\\n)?/i\nconst INTERPOLATION_R = /^\\{.*\\}$/\nconst LINK_AUTOLINK_BARE_URL_R = /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/\nconst LINK_AUTOLINK_MAILTO_R = /^<([^ >]+@[^ >]+)>/\nconst LINK_AUTOLINK_R = /^<([^ >]+:\\/[^ >]+)>/\nconst CAPTURE_LETTER_AFTER_HYPHEN = /-([a-z])?/gi\nconst NP_TABLE_R = /^(.*\\|?.*)\\n *(\\|? *[-:]+ *\\|[-| :]*)\\n((?:.*\\|.*\\n)*)\\n?/\nconst PARAGRAPH_R = /^[^\\n]+(?:  \\n|\\n{2,})/\nconst REFERENCE_IMAGE_OR_LINK = /^\\[([^\\]]*)\\]:\\s+<?([^\\s>]+)>?\\s*(\"([^\"]*)\")?/\nconst REFERENCE_IMAGE_R = /^!\\[([^\\]]*)\\] ?\\[([^\\]]*)\\]/\nconst REFERENCE_LINK_R = /^\\[([^\\]]*)\\] ?\\[([^\\]]*)\\]/\nconst SQUARE_BRACKETS_R = /(\\[|\\])/g\nconst SHOULD_RENDER_AS_BLOCK_R = /(\\n|^[-*]\\s|^#|^ {2,}|^-{2,}|^>\\s)/\nconst TAB_R = /\\t/g\nconst TABLE_SEPARATOR_R = /^ *\\| */\nconst TABLE_TRIM_PIPES = /(^ *\\||\\| *$)/g\nconst TABLE_CELL_END_TRIM = / *$/\nconst TABLE_CENTER_ALIGN = /^ *:-+: *$/\nconst TABLE_LEFT_ALIGN = /^ *:-+ *$/\nconst TABLE_RIGHT_ALIGN = /^ *-+: *$/\n\nconst TEXT_BOLD_R =\n  /^([*_])\\1((?:\\[.*?\\][([].*?[)\\]]|<.*?>(?:.*?<.*?>)?|`.*?`|~+.*?~+|.)*?)\\1\\1(?!\\1)/\nconst TEXT_EMPHASIZED_R =\n  /^([*_])((?:\\[.*?\\][([].*?[)\\]]|<.*?>(?:.*?<.*?>)?|`.*?`|~+.*?~+|.)*?)\\1(?!\\1|\\w)/\nconst TEXT_MARKED_R = /^==((?:\\[.*?\\]|<.*?>(?:.*?<.*?>)?|`.*?`|.)*?)==/\nconst TEXT_STRIKETHROUGHED_R = /^~~((?:\\[.*?\\]|<.*?>(?:.*?<.*?>)?|`.*?`|.)*?)~~/\n\nconst TEXT_ESCAPED_R = /^\\\\([^0-9A-Za-z\\s])/\nconst TEXT_PLAIN_R =\n  /^[\\s\\S]+?(?=[^0-9A-Z\\s\\u00c0-\\uffff&#;.()'\"]|\\d+\\.|\\n\\n| {2,}\\n|\\w+:\\S|$)/i\n\nconst TRIM_STARTING_NEWLINES = /^\\n+/\n\nconst HTML_LEFT_TRIM_AMOUNT_R = /^([ \\t]*)/\n\nconst UNESCAPE_URL_R = /\\\\([^\\\\])/g\n\ntype LIST_TYPE = 1 | 2\nconst ORDERED: LIST_TYPE = 1\nconst UNORDERED: LIST_TYPE = 2\n\nconst LIST_ITEM_END_R = / *\\n+$/\nconst LIST_LOOKBEHIND_R = /(?:^|\\n)( *)$/\n\n// recognize a `*` `-`, `+`, `1.`, `2.`... list bullet\nconst ORDERED_LIST_BULLET = '(?:\\\\d+\\\\.)'\nconst UNORDERED_LIST_BULLET = '(?:[*+-])'\n\nfunction generateListItemPrefix(type: LIST_TYPE) {\n  return (\n    '( *)(' +\n    (type === ORDERED ? ORDERED_LIST_BULLET : UNORDERED_LIST_BULLET) +\n    ') +'\n  )\n}\n\n// recognize the start of a list item:\n// leading space plus a bullet plus a space (`   * `)\nconst ORDERED_LIST_ITEM_PREFIX = generateListItemPrefix(ORDERED)\nconst UNORDERED_LIST_ITEM_PREFIX = generateListItemPrefix(UNORDERED)\n\nfunction generateListItemPrefixRegex(type: LIST_TYPE) {\n  return new RegExp(\n    '^' +\n      (type === ORDERED ? ORDERED_LIST_ITEM_PREFIX : UNORDERED_LIST_ITEM_PREFIX)\n  )\n}\n\nconst ORDERED_LIST_ITEM_PREFIX_R = generateListItemPrefixRegex(ORDERED)\nconst UNORDERED_LIST_ITEM_PREFIX_R = generateListItemPrefixRegex(UNORDERED)\n\nfunction generateListItemRegex(type: LIST_TYPE) {\n  // recognize an individual list item:\n  //  * hi\n  //    this is part of the same item\n  //\n  //    as is this, which is a new paragraph in the same item\n  //\n  //  * but this is not part of the same item\n  return new RegExp(\n    '^' +\n      (type === ORDERED\n        ? ORDERED_LIST_ITEM_PREFIX\n        : UNORDERED_LIST_ITEM_PREFIX) +\n      '[^\\\\n]*(?:\\\\n' +\n      '(?!\\\\1' +\n      (type === ORDERED ? ORDERED_LIST_BULLET : UNORDERED_LIST_BULLET) +\n      ' )[^\\\\n]*)*(\\\\n|$)',\n    'gm'\n  )\n}\n\nconst ORDERED_LIST_ITEM_R = generateListItemRegex(ORDERED)\nconst UNORDERED_LIST_ITEM_R = generateListItemRegex(UNORDERED)\n\n// check whether a list item has paragraphs: if it does,\n// we leave the newlines at the end\nfunction generateListRegex(type: LIST_TYPE) {\n  const bullet = type === ORDERED ? ORDERED_LIST_BULLET : UNORDERED_LIST_BULLET\n\n  return new RegExp(\n    '^( *)(' +\n      bullet +\n      ') ' +\n      '[\\\\s\\\\S]+?(?:\\\\n{2,}(?! )' +\n      '(?!\\\\1' +\n      bullet +\n      ' (?!' +\n      bullet +\n      ' ))\\\\n*' +\n      // the \\\\s*$ here is so that we can parse the inside of nested\n      // lists, where our content might end before we receive two `\\n`s\n      '|\\\\s*\\\\n*$)'\n  )\n}\n\nconst ORDERED_LIST_R = generateListRegex(ORDERED)\nconst UNORDERED_LIST_R = generateListRegex(UNORDERED)\n\nfunction generateListRule(h: any, type: LIST_TYPE) {\n  const ordered = type === ORDERED\n  const LIST_R = ordered ? ORDERED_LIST_R : UNORDERED_LIST_R\n  const LIST_ITEM_R = ordered ? ORDERED_LIST_ITEM_R : UNORDERED_LIST_ITEM_R\n  const LIST_ITEM_PREFIX_R = ordered\n    ? ORDERED_LIST_ITEM_PREFIX_R\n    : UNORDERED_LIST_ITEM_PREFIX_R\n\n  return {\n    _match(source, state, prevCapture) {\n      // We only want to break into a list if we are at the start of a\n      // line. This is to avoid parsing \"hi * there\" with \"* there\"\n      // becoming a part of a list.\n      // You might wonder, \"but that's inline, so of course it wouldn't\n      // start a list?\". You would be correct! Except that some of our\n      // lists can be inline, because they might be inside another list,\n      // in which case we can parse with inline scope, but need to allow\n      // nested lists inside this inline scope.\n      const isStartOfLine = LIST_LOOKBEHIND_R.exec(prevCapture)\n      const isListBlock = state._list || (!state._inline && !state._simple)\n\n      if (isStartOfLine && isListBlock) {\n        source = isStartOfLine[1] + source\n\n        return LIST_R.exec(source)\n      } else {\n        return null\n      }\n    },\n    _order: Priority.HIGH,\n    _parse(capture, parse, state) {\n      const bullet = capture[2]\n      const start = ordered ? +bullet : undefined\n      const items = capture[0]\n        // recognize the end of a paragraph block inside a list item:\n        // two or more newlines at end end of the item\n        .replace(BLOCK_END_R, '\\n')\n        .match(LIST_ITEM_R)\n\n      let lastItemWasAParagraph = false\n      const itemContent = items.map(function (item, i) {\n        // We need to see how far indented the item is:\n        const space = LIST_ITEM_PREFIX_R.exec(item)[0].length\n\n        // And then we construct a regex to \"unindent\" the subsequent\n        // lines of the items by that amount:\n        const spaceRegex = new RegExp('^ {1,' + space + '}', 'gm')\n\n        // Before processing the item, we need a couple things\n        const content = item\n          // remove indents on trailing lines:\n          .replace(spaceRegex, '')\n          // remove the bullet:\n          .replace(LIST_ITEM_PREFIX_R, '')\n\n        // Handling \"loose\" lists, like:\n        //\n        //  * this is wrapped in a paragraph\n        //\n        //  * as is this\n        //\n        //  * as is this\n        const isLastItem = i === items.length - 1\n        const containsBlocks = content.indexOf('\\n\\n') !== -1\n\n        // Any element in a list is a block if it contains multiple\n        // newlines. The last element in the list can also be a block\n        // if the previous item in the list was a block (this is\n        // because non-last items in the list can end with \\n\\n, but\n        // the last item can't, so we just \"inherit\" this property\n        // from our previous element).\n        const thisItemIsAParagraph =\n          containsBlocks || (isLastItem && lastItemWasAParagraph)\n        lastItemWasAParagraph = thisItemIsAParagraph\n\n        // backup our state for restoration afterwards. We're going to\n        // want to set state._list to true, and state._inline depending\n        // on our list's looseness.\n        const oldStateInline = state._inline\n        const oldStateList = state._list\n        state._list = true\n\n        // Parse inline if we're in a tight list, or block if we're in\n        // a loose list.\n        let adjustedContent\n        if (thisItemIsAParagraph) {\n          state._inline = false\n          adjustedContent = content.replace(LIST_ITEM_END_R, '\\n\\n')\n        } else {\n          state._inline = true\n          adjustedContent = content.replace(LIST_ITEM_END_R, '')\n        }\n\n        const result = parse(adjustedContent, state)\n\n        // Restore our state before returning\n        state._inline = oldStateInline\n        state._list = oldStateList\n\n        return result\n      })\n\n      return {\n        _items: itemContent,\n        _ordered: ordered,\n        _start: start,\n      }\n    },\n    _react(node, output, state) {\n      const Tag = node._ordered ? 'ol' : 'ul'\n\n      return (\n        <Tag key={state._key} start={node._start}>\n          {node._items.map(function generateListItem(item, i) {\n            return <li key={i}>{output(item, state)}</li>\n          })}\n        </Tag>\n      )\n    },\n  } as MarkdownToJSX.Rule<{\n    _items: MarkdownToJSX.ParserResult[]\n    _ordered: boolean\n    _start?: number\n  }>\n}\n\nconst LINK_R = /^\\[([^\\]]*)]\\( *((?:\\([^)]*\\)|[^() ])*) *\"?([^)\"]*)?\"?\\)/\nconst IMAGE_R = /^!\\[([^\\]]*)]\\( *((?:\\([^)]*\\)|[^() ])*) *\"?([^)\"]*)?\"?\\)/\n\nconst NON_PARAGRAPH_BLOCK_SYNTAXES = [\n  BLOCKQUOTE_R,\n  CODE_BLOCK_FENCED_R,\n  CODE_BLOCK_R,\n  HEADING_R,\n  HEADING_SETEXT_R,\n  HEADING_ATX_COMPLIANT_R,\n  HTML_COMMENT_R,\n  NP_TABLE_R,\n  ORDERED_LIST_ITEM_R,\n  ORDERED_LIST_R,\n  UNORDERED_LIST_ITEM_R,\n  UNORDERED_LIST_R,\n]\n\nconst BLOCK_SYNTAXES = [\n  ...NON_PARAGRAPH_BLOCK_SYNTAXES,\n  PARAGRAPH_R,\n  HTML_BLOCK_ELEMENT_R,\n  HTML_SELF_CLOSING_ELEMENT_R,\n]\n\nfunction containsBlockSyntax(input: string) {\n  return BLOCK_SYNTAXES.some(r => r.test(input))\n}\n\n/** Remove symmetrical leading and trailing quotes */\nfunction unquote(str: string) {\n  const first = str[0]\n  if (\n    (first === '\"' || first === \"'\") &&\n    str.length >= 2 &&\n    str[str.length - 1] === first\n  ) {\n    return str.slice(1, -1)\n  }\n  return str\n}\n\n// based on https://stackoverflow.com/a/18123682/1141611\n// not complete, but probably good enough\nfunction slugify(str: string) {\n  return str\n    .replace(/[ÀÁÂÃÄÅàáâãäåæÆ]/g, 'a')\n    .replace(/[çÇ]/g, 'c')\n    .replace(/[ðÐ]/g, 'd')\n    .replace(/[ÈÉÊËéèêë]/g, 'e')\n    .replace(/[ÏïÎîÍíÌì]/g, 'i')\n    .replace(/[Ññ]/g, 'n')\n    .replace(/[øØœŒÕõÔôÓóÒò]/g, 'o')\n    .replace(/[ÜüÛûÚúÙù]/g, 'u')\n    .replace(/[ŸÿÝý]/g, 'y')\n    .replace(/[^a-z0-9- ]/gi, '')\n    .replace(/ /gi, '-')\n    .toLowerCase()\n}\n\nfunction parseTableAlignCapture(alignCapture: string) {\n  if (TABLE_RIGHT_ALIGN.test(alignCapture)) {\n    return 'right'\n  } else if (TABLE_CENTER_ALIGN.test(alignCapture)) {\n    return 'center'\n  } else if (TABLE_LEFT_ALIGN.test(alignCapture)) {\n    return 'left'\n  }\n\n  return null\n}\n\nfunction parseTableRow(\n  source: string,\n  parse: MarkdownToJSX.NestedParser,\n  state: MarkdownToJSX.State\n) {\n  const prevInTable = state._inTable\n  state._inTable = true\n  const tableRow = parse(source.trim(), state)\n  state._inTable = prevInTable\n\n  let cells = [[]]\n  tableRow.forEach(function (node, i) {\n    if (node.type === 'tableSeparator') {\n      // Filter out empty table separators at the start/end:\n      if (i !== 0 && i !== tableRow.length - 1) {\n        // Split the current row:\n        cells.push([])\n      }\n    } else {\n      if (\n        node.type === 'text' &&\n        (tableRow[i + 1] == null || tableRow[i + 1].type === 'tableSeparator')\n      ) {\n        node._content = node._content.replace(TABLE_CELL_END_TRIM, '')\n      }\n      cells[cells.length - 1].push(node)\n    }\n  })\n  return cells\n}\n\nfunction parseTableAlign(source: string /*, parse, state*/) {\n  const alignText = source.replace(TABLE_TRIM_PIPES, '').split('|')\n\n  return alignText.map(parseTableAlignCapture)\n}\n\nfunction parseTableCells(\n  source: string,\n  parse: MarkdownToJSX.NestedParser,\n  state: MarkdownToJSX.State\n) {\n  const rowsText = source.trim().split('\\n')\n\n  return rowsText.map(function (rowText) {\n    return parseTableRow(rowText, parse, state)\n  })\n}\n\nfunction parseTable(\n  capture: RegExpMatchArray,\n  parse: MarkdownToJSX.NestedParser,\n  state: MarkdownToJSX.State\n) {\n  state._inline = true\n  const header = parseTableRow(capture[1], parse, state)\n  const align = parseTableAlign(capture[2])\n  const cells = parseTableCells(capture[3], parse, state)\n  state._inline = false\n\n  return {\n    _align: align,\n    _cells: cells,\n    _header: header,\n    type: 'table',\n  }\n}\n\nfunction getTableStyle(node, colIndex) {\n  return node._align[colIndex] == null\n    ? {}\n    : {\n        textAlign: node._align[colIndex],\n      }\n}\n\n/** TODO: remove for react 16 */\nfunction normalizeAttributeKey(key) {\n  const hyphenIndex = key.indexOf('-')\n\n  if (hyphenIndex !== -1 && key.match(HTML_CUSTOM_ATTR_R) === null) {\n    key = key.replace(CAPTURE_LETTER_AFTER_HYPHEN, function (_, letter) {\n      return letter.toUpperCase()\n    })\n  }\n\n  return key\n}\n\nfunction attributeValueToJSXPropValue(\n  key: keyof React.AllHTMLAttributes<Element>,\n  value: string\n): any {\n  if (key === 'style') {\n    return value.split(/;\\s?/).reduce(function (styles, kvPair) {\n      const key = kvPair.slice(0, kvPair.indexOf(':'))\n\n      // snake-case to camelCase\n      // also handles PascalCasing vendor prefixes\n      const camelCasedKey = key.replace(/(-[a-z])/g, substr =>\n        substr[1].toUpperCase()\n      )\n\n      // key.length + 1 to skip over the colon\n      styles[camelCasedKey] = kvPair.slice(key.length + 1).trim()\n\n      return styles\n    }, {})\n  } else if (key === 'href') {\n    return sanitizeUrl(value)\n  } else if (value.match(INTERPOLATION_R)) {\n    // return as a string and let the consumer decide what to do with it\n    value = value.slice(1, value.length - 1)\n  }\n\n  if (value === 'true') {\n    return true\n  } else if (value === 'false') {\n    return false\n  }\n\n  return value\n}\n\nfunction normalizeWhitespace(source: string): string {\n  return source\n    .replace(CR_NEWLINE_R, '\\n')\n    .replace(FORMFEED_R, '')\n    .replace(TAB_R, '    ')\n}\n\n/**\n * Creates a parser for a given set of rules, with the precedence\n * specified as a list of rules.\n *\n * @rules: an object containing\n * rule type -> {match, order, parse} objects\n * (lower order is higher precedence)\n * (Note: `order` is added to defaultRules after creation so that\n *  the `order` of defaultRules in the source matches the `order`\n *  of defaultRules in terms of `order` fields.)\n *\n * @returns The resulting parse function, with the following parameters:\n *   @source: the input source string to be parsed\n *   @state: an optional object to be threaded through parse\n *     calls. Allows clients to add stateful operations to\n *     parsing, such as keeping track of how many levels deep\n *     some nesting is. For an example use-case, see passage-ref\n *     parsing in src/widgets/passage/passage-markdown.jsx\n */\nfunction parserFor(\n  rules: MarkdownToJSX.Rules\n): (\n  source: string,\n  state: MarkdownToJSX.State\n) => ReturnType<MarkdownToJSX.NestedParser> {\n  // Sorts rules in order of increasing order, then\n  // ascending rule name in case of ties.\n  let ruleList = Object.keys(rules)\n\n  /* istanbul ignore next */\n  if (process.env.NODE_ENV !== 'production') {\n    ruleList.forEach(function (type) {\n      let order = rules[type]._order\n      if (\n        process.env.NODE_ENV !== 'production' &&\n        (typeof order !== 'number' || !isFinite(order))\n      ) {\n        console.warn(\n          'markdown-to-jsx: Invalid order for rule `' + type + '`: ' + order\n        )\n      }\n    })\n  }\n\n  ruleList.sort(function (typeA, typeB) {\n    let orderA = rules[typeA]._order\n    let orderB = rules[typeB]._order\n\n    // First sort based on increasing order\n    if (orderA !== orderB) {\n      return orderA - orderB\n\n      // Then based on increasing unicode lexicographic ordering\n    } else if (typeA < typeB) {\n      return -1\n    }\n\n    return 1\n  })\n\n  function nestedParse(\n    source: string,\n    state: MarkdownToJSX.State\n  ): MarkdownToJSX.ParserResult[] {\n    let result = []\n\n    // We store the previous capture so that match functions can\n    // use some limited amount of lookbehind. Lists use this to\n    // ensure they don't match arbitrary '- ' or '* ' in inline\n    // text (see the list rule for more information).\n    let prevCapture = ''\n    while (source) {\n      let i = 0\n      while (i < ruleList.length) {\n        const ruleType = ruleList[i]\n        const rule = rules[ruleType]\n        const capture = rule._match(source, state, prevCapture)\n\n        if (capture) {\n          const currCaptureString = capture[0]\n          source = source.substring(currCaptureString.length)\n          const parsed = rule._parse(capture, nestedParse, state)\n\n          // We also let rules override the default type of\n          // their parsed node if they would like to, so that\n          // there can be a single output function for all links,\n          // even if there are several rules to parse them.\n          if (parsed.type == null) {\n            parsed.type = ruleType\n          }\n\n          result.push(parsed)\n\n          prevCapture = currCaptureString\n          break\n        }\n\n        i++\n      }\n    }\n\n    return result\n  }\n\n  return function outerParse(source, state) {\n    return nestedParse(normalizeWhitespace(source), state)\n  }\n}\n\n// Creates a match function for an inline scoped or simple element from a regex\nfunction inlineRegex(regex: RegExp) {\n  return function match(source, state: MarkdownToJSX.State) {\n    if (state._inline) {\n      return regex.exec(source)\n    } else {\n      return null\n    }\n  }\n}\n\n// basically any inline element except links\nfunction simpleInlineRegex(regex: RegExp) {\n  return function match(source: string, state: MarkdownToJSX.State) {\n    if (state._inline || state._simple) {\n      return regex.exec(source)\n    } else {\n      return null\n    }\n  }\n}\n\n// Creates a match function for a block scoped element from a regex\nfunction blockRegex(regex: RegExp) {\n  return function match(source: string, state: MarkdownToJSX.State) {\n    if (state._inline || state._simple) {\n      return null\n    } else {\n      return regex.exec(source)\n    }\n  }\n}\n\n// Creates a match function from a regex, ignoring block/inline scope\nfunction anyScopeRegex(regex: RegExp) {\n  return function match(source: string /*, state*/) {\n    return regex.exec(source)\n  }\n}\n\nfunction matchParagraph(\n  source: string,\n  state: MarkdownToJSX.State,\n  prevCapturedString?: string\n) {\n  if (state._inline || state._simple) {\n    return null\n  }\n\n  if (prevCapturedString && !prevCapturedString.endsWith('\\n')) {\n    // don't match continuation of a line\n    return null\n  }\n\n  let match = ''\n\n  source.split('\\n').every(line => {\n    // bail out on first sign of non-paragraph block\n    if (NON_PARAGRAPH_BLOCK_SYNTAXES.some(regex => regex.test(line))) {\n      return false\n    }\n    match += line + '\\n'\n    return line.trim()\n  })\n\n  const captured = match.trimEnd()\n  if (captured == '') {\n    return null\n  }\n\n  return [match, captured]\n}\n\nfunction reactFor(outputFunc) {\n  return function nestedReactOutput(\n    ast: MarkdownToJSX.ParserResult | MarkdownToJSX.ParserResult[],\n    state: MarkdownToJSX.State = {}\n  ): React.ReactChild[] {\n    if (Array.isArray(ast)) {\n      const oldKey = state._key\n      const result = []\n\n      // map nestedOutput over the ast, except group any text\n      // nodes together into a single string output.\n      let lastWasString = false\n\n      for (let i = 0; i < ast.length; i++) {\n        state._key = i\n\n        const nodeOut = nestedReactOutput(ast[i], state)\n        const isString = typeof nodeOut === 'string'\n\n        if (isString && lastWasString) {\n          result[result.length - 1] += nodeOut\n        } else if (nodeOut !== null) {\n          result.push(nodeOut)\n        }\n\n        lastWasString = isString\n      }\n\n      state._key = oldKey\n\n      return result\n    }\n\n    return outputFunc(ast, nestedReactOutput, state)\n  }\n}\n\nfunction sanitizeUrl(url: string): string | undefined {\n  try {\n    const decoded = decodeURIComponent(url).replace(/[^A-Za-z0-9/:]/g, '')\n\n    if (decoded.match(/^\\s*(javascript|vbscript|data(?!:image)):/i)) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn(\n          'Anchor URL contains an unsafe JavaScript/VBScript/data expression, it will not be rendered.',\n          decoded\n        )\n      }\n\n      return undefined\n    }\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(\n        'Anchor URL could not be decoded due to malformed syntax or characters, it will not be rendered.',\n        url\n      )\n    }\n\n    // decodeURIComponent sometimes throws a URIError\n    // See `decodeURIComponent('a%AFc');`\n    // http://stackoverflow.com/questions/9064536/javascript-decodeuricomponent-malformed-uri-exception\n    return null\n  }\n\n  return url\n}\n\nfunction unescapeUrl(rawUrlString: string): string {\n  return rawUrlString.replace(UNESCAPE_URL_R, '$1')\n}\n\n/**\n * Everything inline, including links.\n */\nfunction parseInline(\n  parse: MarkdownToJSX.NestedParser,\n  content: string,\n  state: MarkdownToJSX.State\n): MarkdownToJSX.ParserResult {\n  const isCurrentlyInline = state._inline || false\n  const isCurrentlySimple = state._simple || false\n  state._inline = true\n  state._simple = true\n  const result = parse(content, state)\n  state._inline = isCurrentlyInline\n  state._simple = isCurrentlySimple\n  return result\n}\n\n/**\n * Anything inline that isn't a link.\n */\nfunction parseSimpleInline(\n  parse: MarkdownToJSX.NestedParser,\n  content: string,\n  state: MarkdownToJSX.State\n): MarkdownToJSX.ParserResult {\n  const isCurrentlyInline = state._inline || false\n  const isCurrentlySimple = state._simple || false\n  state._inline = false\n  state._simple = true\n  const result = parse(content, state)\n  state._inline = isCurrentlyInline\n  state._simple = isCurrentlySimple\n  return result\n}\n\nfunction parseBlock(\n  parse,\n  content,\n  state: MarkdownToJSX.State\n): MarkdownToJSX.ParserResult {\n  state._inline = false\n  return parse(content, state)\n}\n\nconst parseCaptureInline: MarkdownToJSX.Parser<\n  ReturnType<typeof parseInline>\n> = (capture, parse, state: MarkdownToJSX.State) => {\n  return {\n    _content: parseInline(parse, capture[1], state),\n  }\n}\n\nfunction captureNothing() {\n  return {}\n}\n\nfunction renderNothing() {\n  return null\n}\n\nfunction ruleOutput(rules: MarkdownToJSX.Rules) {\n  return function nestedRuleOutput(\n    ast: MarkdownToJSX.ParserResult,\n    outputFunc: MarkdownToJSX.RuleOutput,\n    state: MarkdownToJSX.State\n  ): React.ReactChild {\n    return rules[ast.type]._react(ast, outputFunc, state)\n  }\n}\n\nfunction cx(...args) {\n  return args.filter(Boolean).join(' ')\n}\n\nfunction get(src: Object, path: string, fb?: any) {\n  let ptr = src\n  const frags = path.split('.')\n\n  while (frags.length) {\n    ptr = ptr[frags[0]]\n\n    if (ptr === undefined) break\n    else frags.shift()\n  }\n\n  return ptr || fb\n}\n\nfunction getTag(tag: string, overrides: MarkdownToJSX.Overrides) {\n  const override = get(overrides, tag)\n\n  if (!override) return tag\n\n  return typeof override === 'function' ||\n    (typeof override === 'object' && 'render' in override)\n    ? override\n    : get(overrides, `${tag}.component`, tag)\n}\n\nenum Priority {\n  /**\n   * anything that must scan the tree before everything else\n   */\n  MAX,\n  /**\n   * scans for block-level constructs\n   */\n  HIGH,\n  /**\n   * inline w/ more priority than other inline\n   */\n  MED,\n  /**\n   * inline elements\n   */\n  LOW,\n  /**\n   * bare text and stuff that is considered leftovers\n   */\n  MIN,\n}\n\nexport function compiler(\n  markdown: string,\n  options: MarkdownToJSX.Options = {}\n) {\n  options.overrides = options.overrides || {}\n  options.slugify = options.slugify || slugify\n  options.namedCodesToUnicode = options.namedCodesToUnicode\n    ? { ...namedCodesToUnicode, ...options.namedCodesToUnicode }\n    : namedCodesToUnicode\n\n  const createElementFn = options.createElement || React.createElement\n\n  // JSX custom pragma\n  // eslint-disable-next-line no-unused-vars\n  function h(\n    // locally we always will render a known string tag\n    tag: MarkdownToJSX.HTMLTags,\n    props: Parameters<MarkdownToJSX.CreateElement>[1] & {\n      className?: string\n      id?: string\n    },\n    ...children\n  ) {\n    const overrideProps = get(options.overrides, `${tag}.props`, {})\n\n    return createElementFn(\n      getTag(tag, options.overrides),\n      {\n        ...props,\n        ...overrideProps,\n        className: cx(props?.className, overrideProps.className) || undefined,\n      },\n      ...children\n    )\n  }\n\n  function compile(input: string): JSX.Element {\n    let _inline = false\n\n    if (options.forceInline) {\n      _inline = true\n    } else if (!options.forceBlock) {\n      /**\n       * should not contain any block-level markdown like newlines, lists, headings,\n       * thematic breaks, blockquotes, tables, etc\n       */\n      _inline = SHOULD_RENDER_AS_BLOCK_R.test(input) === false\n    }\n\n    const arr = emitter(\n      parser(\n        _inline\n          ? input\n          : `${input.trimEnd().replace(TRIM_STARTING_NEWLINES, '')}\\n\\n`,\n        {\n          _inline,\n        }\n      )\n    )\n\n    while (\n      typeof arr[arr.length - 1] === 'string' &&\n      !arr[arr.length - 1].trim()\n    ) {\n      arr.pop()\n    }\n\n    if (options.wrapper === null) {\n      return arr\n    }\n\n    const wrapper = options.wrapper || (_inline ? 'span' : 'div')\n    let jsx\n\n    if (arr.length > 1 || options.forceWrapper) {\n      jsx = arr\n    } else if (arr.length === 1) {\n      jsx = arr[0]\n\n      // TODO: remove this for React 16\n      if (typeof jsx === 'string') {\n        return <span key=\"outer\">{jsx}</span>\n      } else {\n        return jsx\n      }\n    } else {\n      // TODO: return null for React 16\n      jsx = null\n    }\n\n    return React.createElement(wrapper, { key: 'outer' }, jsx)\n  }\n\n  function attrStringToMap(str: string): JSX.IntrinsicAttributes {\n    const attributes = str.match(ATTR_EXTRACTOR_R)\n    if (!attributes) {\n      return null\n    }\n\n    return attributes.reduce(function (map, raw, index) {\n      const delimiterIdx = raw.indexOf('=')\n\n      if (delimiterIdx !== -1) {\n        const key = normalizeAttributeKey(raw.slice(0, delimiterIdx)).trim()\n        const value = unquote(raw.slice(delimiterIdx + 1).trim())\n\n        const mappedKey = ATTRIBUTE_TO_JSX_PROP_MAP[key] || key\n        const normalizedValue = (map[mappedKey] = attributeValueToJSXPropValue(\n          key,\n          value\n        ))\n\n        if (\n          typeof normalizedValue === 'string' &&\n          (HTML_BLOCK_ELEMENT_R.test(normalizedValue) ||\n            HTML_SELF_CLOSING_ELEMENT_R.test(normalizedValue))\n        ) {\n          map[mappedKey] = React.cloneElement(compile(normalizedValue.trim()), {\n            key: index,\n          })\n        }\n      } else if (raw !== 'style') {\n        map[ATTRIBUTE_TO_JSX_PROP_MAP[raw] || raw] = true\n      }\n\n      return map\n    }, {})\n  }\n\n  /* istanbul ignore next */\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof markdown !== 'string') {\n      throw new Error(`markdown-to-jsx: the first argument must be\n                             a string`)\n    }\n\n    if (\n      Object.prototype.toString.call(options.overrides) !== '[object Object]'\n    ) {\n      throw new Error(`markdown-to-jsx: options.overrides (second argument property) must be\n                             undefined or an object literal with shape:\n                             {\n                                htmltagname: {\n                                    component: string|ReactComponent(optional),\n                                    props: object(optional)\n                                }\n                             }`)\n    }\n  }\n\n  const footnotes: { _footnote: string; _identifier: string }[] = []\n  const refs: { [key: string]: { _target: string; _title: string } } = {}\n\n  /**\n   * each rule's react() output function goes through our custom h() JSX pragma;\n   * this allows the override functionality to be automatically applied\n   */\n  const rules: MarkdownToJSX.Rules = {\n    blockQuote: {\n      _match: blockRegex(BLOCKQUOTE_R),\n      _order: Priority.HIGH,\n      _parse(capture, parse, state) {\n        return {\n          _content: parse(\n            capture[0].replace(BLOCKQUOTE_TRIM_LEFT_MULTILINE_R, ''),\n            state\n          ),\n        }\n      },\n      _react(node, output, state) {\n        return (\n          <blockquote key={state._key}>\n            {output(node._content, state)}\n          </blockquote>\n        )\n      },\n    } as MarkdownToJSX.Rule<{ _content: MarkdownToJSX.ParserResult }>,\n\n    breakLine: {\n      _match: anyScopeRegex(BREAK_LINE_R),\n      _order: Priority.HIGH,\n      _parse: captureNothing,\n      _react(_, __, state) {\n        return <br key={state._key} />\n      },\n    },\n\n    breakThematic: {\n      _match: blockRegex(BREAK_THEMATIC_R),\n      _order: Priority.HIGH,\n      _parse: captureNothing,\n      _react(_, __, state) {\n        return <hr key={state._key} />\n      },\n    },\n\n    codeBlock: {\n      _match: blockRegex(CODE_BLOCK_R),\n      _order: Priority.MAX,\n      _parse(capture /*, parse, state*/) {\n        return {\n          _content: capture[0].replace(/^ {4}/gm, '').replace(/\\n+$/, ''),\n          _lang: undefined,\n        }\n      },\n\n      _react(node, output, state) {\n        return (\n          <pre key={state._key}>\n            <code\n              {...node._attrs}\n              className={node._lang ? `lang-${node._lang}` : ''}\n            >\n              {node._content}\n            </code>\n          </pre>\n        )\n      },\n    } as MarkdownToJSX.Rule<{\n      _attrs?: ReturnType<typeof attrStringToMap>\n      _content: string\n      _lang?: string\n    }>,\n\n    codeFenced: {\n      _match: blockRegex(CODE_BLOCK_FENCED_R),\n      _order: Priority.MAX,\n      _parse(capture /*, parse, state*/) {\n        return {\n          // if capture[3] it's additional metadata\n          _attrs: attrStringToMap(capture[3] || ''),\n          _content: capture[4],\n          _lang: capture[2] || undefined,\n          type: 'codeBlock',\n        }\n      },\n    },\n\n    codeInline: {\n      _match: simpleInlineRegex(CODE_INLINE_R),\n      _order: Priority.LOW,\n      _parse(capture /*, parse, state*/) {\n        return {\n          _content: capture[2],\n        }\n      },\n      _react(node, output, state) {\n        return <code key={state._key}>{node._content}</code>\n      },\n    } as MarkdownToJSX.Rule<{ _content: string }>,\n\n    /**\n     * footnotes are emitted at the end of compilation in a special <footer> block\n     */\n    footnote: {\n      _match: blockRegex(FOOTNOTE_R),\n      _order: Priority.MAX,\n      _parse(capture /*, parse, state*/) {\n        footnotes.push({\n          _footnote: capture[2],\n          _identifier: capture[1],\n        })\n\n        return {}\n      },\n      _react: renderNothing,\n    },\n\n    footnoteReference: {\n      _match: inlineRegex(FOOTNOTE_REFERENCE_R),\n      _order: Priority.HIGH,\n      _parse(capture /*, parse*/) {\n        return {\n          _content: capture[1],\n          _target: `#${options.slugify(capture[1])}`,\n        }\n      },\n      _react(node, output, state) {\n        return (\n          <a key={state._key} href={sanitizeUrl(node._target)}>\n            <sup key={state._key}>{node._content}</sup>\n          </a>\n        )\n      },\n    } as MarkdownToJSX.Rule<{ _content: string; _target: string }>,\n\n    gfmTask: {\n      _match: inlineRegex(GFM_TASK_R),\n      _order: Priority.HIGH,\n      _parse(capture /*, parse, state*/) {\n        return {\n          _completed: capture[1].toLowerCase() === 'x',\n        }\n      },\n      _react(node, output, state) {\n        return (\n          <input\n            checked={node._completed}\n            key={state._key}\n            readOnly\n            type=\"checkbox\"\n          />\n        )\n      },\n    } as MarkdownToJSX.Rule<{ _completed: boolean }>,\n\n    heading: {\n      _match: blockRegex(\n        options.enforceAtxHeadings ? HEADING_ATX_COMPLIANT_R : HEADING_R\n      ),\n      _order: Priority.HIGH,\n      _parse(capture, parse, state) {\n        return {\n          _content: parseInline(parse, capture[2], state),\n          _id: options.slugify(capture[2]),\n          _level: capture[1].length,\n        }\n      },\n      _react(node, output, state) {\n        return h(\n          `h${node._level}`,\n          { id: node._id, key: state._key },\n          output(node._content, state)\n        )\n      },\n    } as MarkdownToJSX.Rule<{\n      _content: MarkdownToJSX.ParserResult\n      _id: string\n      _level: 1 | 2 | 3 | 4 | 5 | 6\n      _tag: MarkdownToJSX.HTMLTags\n    }>,\n\n    headingSetext: {\n      _match: blockRegex(HEADING_SETEXT_R),\n      _order: Priority.MAX,\n      _parse(capture, parse, state) {\n        return {\n          _content: parseInline(parse, capture[1], state),\n          _level: capture[2] === '=' ? 1 : 2,\n          type: 'heading',\n        }\n      },\n    },\n\n    htmlComment: {\n      _match: anyScopeRegex(HTML_COMMENT_R),\n      _order: Priority.HIGH,\n      _parse() {\n        return {}\n      },\n      _react: renderNothing,\n    },\n\n    image: {\n      _match: simpleInlineRegex(IMAGE_R),\n      _order: Priority.HIGH,\n      _parse(capture /*, parse, state*/) {\n        return {\n          _alt: capture[1],\n          _target: unescapeUrl(capture[2]),\n          _title: capture[3],\n        }\n      },\n      _react(node, output, state) {\n        return (\n          <img\n            key={state._key}\n            alt={node._alt || undefined}\n            title={node._title || undefined}\n            src={sanitizeUrl(node._target)}\n          />\n        )\n      },\n    } as MarkdownToJSX.Rule<{\n      _alt?: string\n      _target: string\n      _title?: string\n    }>,\n\n    link: {\n      _match: inlineRegex(LINK_R),\n      _order: Priority.LOW,\n      _parse(capture, parse, state) {\n        return {\n          _content: parseSimpleInline(parse, capture[1], state),\n          _target: unescapeUrl(capture[2]),\n          _title: capture[3],\n        }\n      },\n      _react(node, output, state) {\n        return (\n          <a\n            key={state._key}\n            href={sanitizeUrl(node._target)}\n            title={node._title}\n          >\n            {output(node._content, state)}\n          </a>\n        )\n      },\n    } as MarkdownToJSX.Rule<{\n      _content: MarkdownToJSX.ParserResult\n      _target: string\n      _title?: string\n    }>,\n\n    // https://daringfireball.net/projects/markdown/syntax#autolink\n    linkAngleBraceStyleDetector: {\n      _match: inlineRegex(LINK_AUTOLINK_R),\n      _order: Priority.MAX,\n      _parse(capture /*, parse, state*/) {\n        return {\n          _content: [\n            {\n              _content: capture[1],\n              type: 'text',\n            },\n          ],\n          _target: capture[1],\n          type: 'link',\n        }\n      },\n    },\n\n    linkBareUrlDetector: {\n      _match: (source, state) => {\n        if (state._inAnchor) {\n          return null\n        }\n        return inlineRegex(LINK_AUTOLINK_BARE_URL_R)(source, state)\n      },\n      _order: Priority.MAX,\n      _parse(capture /*, parse, state*/) {\n        return {\n          _content: [\n            {\n              _content: capture[1],\n              type: 'text',\n            },\n          ],\n          _target: capture[1],\n          _title: undefined,\n          type: 'link',\n        }\n      },\n    },\n\n    linkMailtoDetector: {\n      _match: inlineRegex(LINK_AUTOLINK_MAILTO_R),\n      _order: Priority.MAX,\n      _parse(capture /*, parse, state*/) {\n        let address = capture[1]\n        let target = capture[1]\n\n        // Check for a `mailto:` already existing in the link:\n        if (!AUTOLINK_MAILTO_CHECK_R.test(target)) {\n          target = 'mailto:' + target\n        }\n\n        return {\n          _content: [\n            {\n              _content: address.replace('mailto:', ''),\n              type: 'text',\n            },\n          ],\n          _target: target,\n          type: 'link',\n        }\n      },\n    },\n\n    orderedList: generateListRule(h, ORDERED),\n    unorderedList: generateListRule(h, UNORDERED),\n\n    newlineCoalescer: {\n      _match: blockRegex(CONSECUTIVE_NEWLINE_R),\n      _order: Priority.LOW,\n      _parse: captureNothing,\n      _react(/*node, output, state*/) {\n        return '\\n'\n      },\n    },\n\n    paragraph: {\n      _match: matchParagraph,\n      _order: Priority.LOW,\n      _parse: parseCaptureInline,\n      _react(node, output, state) {\n        return <p key={state._key}>{output(node._content, state)}</p>\n      },\n    } as MarkdownToJSX.Rule<ReturnType<typeof parseCaptureInline>>,\n\n    ref: {\n      _match: inlineRegex(REFERENCE_IMAGE_OR_LINK),\n      _order: Priority.MAX,\n      _parse(capture /*, parse*/) {\n        refs[capture[1]] = {\n          _target: capture[2],\n          _title: capture[4],\n        }\n\n        return {}\n      },\n      _react: renderNothing,\n    },\n\n    refImage: {\n      _match: simpleInlineRegex(REFERENCE_IMAGE_R),\n      _order: Priority.MAX,\n      _parse(capture) {\n        return {\n          _alt: capture[1] || undefined,\n          _ref: capture[2],\n        }\n      },\n      _react(node, output, state) {\n        return (\n          <img\n            key={state._key}\n            alt={node._alt}\n            src={sanitizeUrl(refs[node._ref]._target)}\n            title={refs[node._ref]._title}\n          />\n        )\n      },\n    } as MarkdownToJSX.Rule<{ _alt?: string; _ref: string }>,\n\n    refLink: {\n      _match: inlineRegex(REFERENCE_LINK_R),\n      _order: Priority.MAX,\n      _parse(capture, parse, state) {\n        return {\n          _content: parse(capture[1], state),\n          _fallbackContent: parse(\n            capture[0].replace(SQUARE_BRACKETS_R, '\\\\$1'),\n            state\n          ),\n          _ref: capture[2],\n        }\n      },\n      _react(node, output, state) {\n        return refs[node._ref] ? (\n          <a\n            key={state._key}\n            href={sanitizeUrl(refs[node._ref]._target)}\n            title={refs[node._ref]._title}\n          >\n            {output(node._content, state)}\n          </a>\n        ) : (\n          <span key={state._key}>{output(node._fallbackContent, state)}</span>\n        )\n      },\n    } as MarkdownToJSX.Rule<{\n      _content: MarkdownToJSX.ParserResult\n      _fallbackContent: MarkdownToJSX.ParserResult\n      _ref: string\n    }>,\n\n    table: {\n      _match: blockRegex(NP_TABLE_R),\n      _order: Priority.HIGH,\n      _parse: parseTable,\n      _react(node, output, state) {\n        return (\n          <table key={state._key}>\n            <thead>\n              <tr>\n                {node._header.map(function generateHeaderCell(content, i) {\n                  return (\n                    <th key={i} style={getTableStyle(node, i)}>\n                      {output(content, state)}\n                    </th>\n                  )\n                })}\n              </tr>\n            </thead>\n\n            <tbody>\n              {node._cells.map(function generateTableRow(row, i) {\n                return (\n                  <tr key={i}>\n                    {row.map(function generateTableCell(content, c) {\n                      return (\n                        <td key={c} style={getTableStyle(node, c)}>\n                          {output(content, state)}\n                        </td>\n                      )\n                    })}\n                  </tr>\n                )\n              })}\n            </tbody>\n          </table>\n        )\n      },\n    } as MarkdownToJSX.Rule<ReturnType<typeof parseTable>>,\n\n    tableSeparator: {\n      _match: function (source, state) {\n        if (!state._inTable) {\n          return null\n        }\n        state._inline = true\n        return TABLE_SEPARATOR_R.exec(source)\n      },\n      _order: Priority.HIGH,\n      _parse: function () {\n        return { type: 'tableSeparator' }\n      },\n      // These shouldn't be reached, but in case they are, be reasonable:\n      _react() {\n        return ' | '\n      },\n    },\n\n    text: {\n      // Here we look for anything followed by non-symbols,\n      // double newlines, or double-space-newlines\n      // We break on any symbol characters so that this grammar\n      // is easy to extend without needing to modify this regex\n      _match: anyScopeRegex(TEXT_PLAIN_R),\n      _order: Priority.MIN,\n      _parse(capture /*, parse, state*/) {\n        return {\n          _content: capture[0]\n            // nbsp -> unicode equivalent for named chars\n            .replace(HTML_CHAR_CODE_R, (full, inner) => {\n              return options.namedCodesToUnicode[inner]\n                ? options.namedCodesToUnicode[inner]\n                : full\n            }),\n        }\n      },\n      _react(node /*, output, state*/) {\n        return node._content\n      },\n    } as MarkdownToJSX.Rule<{ _content: string }>,\n\n    textBolded: {\n      _match: simpleInlineRegex(TEXT_BOLD_R),\n      _order: Priority.MED,\n      _parse(capture, parse, state) {\n        return {\n          // capture[1] -> the syntax control character\n          // capture[2] -> inner content\n          _content: parse(capture[2], state),\n        }\n      },\n      _react(node, output, state) {\n        return <strong key={state._key}>{output(node._content, state)}</strong>\n      },\n    } as MarkdownToJSX.Rule<ReturnType<MarkdownToJSX.NestedParser>>,\n\n    textEmphasized: {\n      _match: simpleInlineRegex(TEXT_EMPHASIZED_R),\n      _order: Priority.LOW,\n      _parse(capture, parse, state) {\n        return {\n          // capture[1] -> opening * or _\n          // capture[2] -> inner content\n          _content: parse(capture[2], state),\n        }\n      },\n      _react(node, output, state) {\n        return <em key={state._key}>{output(node._content, state)}</em>\n      },\n    } as MarkdownToJSX.Rule<ReturnType<MarkdownToJSX.NestedParser>>,\n\n    textEscaped: {\n      // We don't allow escaping numbers, letters, or spaces here so that\n      // backslashes used in plain text still get rendered. But allowing\n      // escaping anything else provides a very flexible escape mechanism,\n      // regardless of how this grammar is extended.\n      _match: simpleInlineRegex(TEXT_ESCAPED_R),\n      _order: Priority.HIGH,\n      _parse(capture /*, parse, state*/) {\n        return {\n          _content: capture[1],\n          type: 'text',\n        }\n      },\n    },\n\n    textMarked: {\n      _match: simpleInlineRegex(TEXT_MARKED_R),\n      _order: Priority.LOW,\n      _parse: parseCaptureInline,\n      _react(node, output, state) {\n        return <mark key={state._key}>{output(node._content, state)}</mark>\n      },\n    } as MarkdownToJSX.Rule<ReturnType<typeof parseCaptureInline>>,\n\n    textStrikethroughed: {\n      _match: simpleInlineRegex(TEXT_STRIKETHROUGHED_R),\n      _order: Priority.LOW,\n      _parse: parseCaptureInline,\n      _react(node, output, state) {\n        return <del key={state._key}>{output(node._content, state)}</del>\n      },\n    } as MarkdownToJSX.Rule<ReturnType<typeof parseCaptureInline>>,\n  }\n\n  // Object.keys(rules).forEach(key => {\n  //   let { _match: match, _parse: parse } = rules[key]\n\n  //   rules[key]._match = (...args) => {\n  //     const start = performance.now()\n  //     const result = match(...args)\n  //     const delta = performance.now() - start\n\n  //     if (delta > 5)\n  //       console.warn(\n  //         `Slow match for ${key}: ${delta.toFixed(3)}ms, input: ${args[0]}`\n  //       )\n\n  //     return result\n  //   }\n\n  //   rules[key]._parse = (...args) => {\n  //     const start = performance.now()\n  //     const result = parse(...args)\n  //     const delta = performance.now() - start\n\n  //     if (delta > 5)\n  //       console.warn(`Slow parse for ${key}: ${delta.toFixed(3)}ms`)\n\n  //     console.log(`${key}:parse`, `${delta.toFixed(3)}ms`, args[0])\n\n  //     return result\n  //   }\n  // })\n\n  if (options.disableParsingRawHTML !== true) {\n    rules.htmlBlock = {\n      /**\n       * find the first matching end tag and process the interior\n       */\n      _match: anyScopeRegex(HTML_BLOCK_ELEMENT_R),\n      _order: Priority.HIGH,\n      _parse(capture, parse, state) {\n        const [, whitespace] = capture[3].match(HTML_LEFT_TRIM_AMOUNT_R)\n        const trimmer = new RegExp(`^${whitespace}`, 'gm')\n        const trimmed = capture[3].replace(trimmer, '')\n\n        const parseFunc = containsBlockSyntax(trimmed)\n          ? parseBlock\n          : parseInline\n\n        const tagName = capture[1].toLowerCase() as MarkdownToJSX.HTMLTags\n        const noInnerParse =\n          DO_NOT_PROCESS_HTML_ELEMENTS.indexOf(tagName) !== -1\n\n        state._inAnchor = state._inAnchor || tagName === 'a'\n\n        /**\n         * if another html block is detected within, parse as block,\n         * otherwise parse as inline to pick up any further markdown\n         */\n        const content = noInnerParse\n          ? capture[3]\n          : parseFunc(parse, trimmed, state)\n\n        state._inAnchor = false\n\n        return {\n          _attrs: attrStringToMap(capture[2]),\n          _content: content,\n          _noInnerParse: noInnerParse,\n          _tag: noInnerParse ? tagName : capture[1],\n        }\n      },\n      _react(node, output, state) {\n        return (\n          // @ts-ignore\n          <node._tag key={state._key} {...node._attrs}>\n            {node._noInnerParse\n              ? (node._content as string)\n              : output(node._content as MarkdownToJSX.ParserResult, state)}\n          </node._tag>\n        )\n      },\n    } as MarkdownToJSX.Rule<{\n      _attrs: ReturnType<typeof attrStringToMap>\n      _content: string | ReturnType<MarkdownToJSX.NestedParser>\n      _noInnerParse: Boolean\n      _tag: string\n    }>\n\n    rules.htmlSelfClosing = {\n      /**\n       * find the first matching end tag and process the interior\n       */\n      _match: anyScopeRegex(HTML_SELF_CLOSING_ELEMENT_R),\n      _order: Priority.HIGH,\n      _parse(capture /*, parse, state*/) {\n        return {\n          _attrs: attrStringToMap(capture[2] || ''),\n          _tag: capture[1],\n        }\n      },\n      _react(node, output, state) {\n        return <node._tag {...node._attrs} key={state._key} />\n      },\n    } as MarkdownToJSX.Rule<{\n      _attrs: ReturnType<typeof attrStringToMap>\n      _tag: string\n    }>\n  }\n\n  const parser = parserFor(rules)\n  const emitter: Function = reactFor(ruleOutput(rules))\n\n  const jsx = compile(markdown)\n\n  if (footnotes.length) {\n    return (\n      <div>\n        {jsx}\n        <footer key=\"footer\">\n          {footnotes.map(function createFootnote(def) {\n            return (\n              <div id={options.slugify(def._identifier)} key={def._identifier}>\n                {def._identifier}\n                {emitter(parser(def._footnote, { _inline: true }))}\n              </div>\n            )\n          })}\n        </footer>\n      </div>\n    )\n  }\n\n  return jsx\n}\n\n/**\n * A simple HOC for easy React use. Feed the markdown content as a direct child\n * and the rest is taken care of automatically.\n */\nconst Markdown: React.FC<{\n  [key: string]: any\n  children: string\n  options?: MarkdownToJSX.Options\n}> = ({ children, options, ...props }) => {\n  if (process.env.NODE_ENV !== 'production' && typeof children !== 'string') {\n    console.error('markdown-to-jsx: <Markdown> component only accepts a single string as a child, received:', children)\n  }\n\n  return React.cloneElement(\n    compiler(children, options),\n    props as JSX.IntrinsicAttributes\n  )\n}\n\nexport default Markdown\n", "var baseUnset = require('./_baseUnset');\n\n/**\n * Removes the property at `path` of `object`.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n * _.unset(object, 'a[0].b.c');\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n *\n * _.unset(object, ['a', '0', 'b', 'c']);\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n */\nfunction unset(object, path) {\n  return object == null ? true : baseUnset(object, path);\n}\n\nmodule.exports = unset;\n", "import { Component } from 'react';\nimport {\n  getTemplate,\n  getUiOptions,\n  orderProperties,\n  ErrorSchema,\n  FieldProps,\n  FormContextType,\n  GenericObjectType,\n  IdSchema,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  ADDITIONAL_PROPERTY_FLAG,\n  PROPERTIES_KEY,\n  REF_KEY,\n  ANY_OF_KEY,\n  ONE_OF_KEY,\n} from '@rjsf/utils';\nimport Markdown from 'markdown-to-jsx';\nimport get from 'lodash/get';\nimport has from 'lodash/has';\nimport isObject from 'lodash/isObject';\nimport set from 'lodash/set';\nimport unset from 'lodash/unset';\n\n/** Type used for the state of the `ObjectField` component */\ntype ObjectFieldState = {\n  /** Flag indicating whether an additional property key was modified */\n  wasPropertyKeyModified: boolean;\n  /** The set of additional properties */\n  additionalProperties: object;\n};\n\n/** The `ObjectField` component is used to render a field in the schema that is of type `object`. It tracks whether an\n * additional property key was modified and what it was modified to\n *\n * @param props - The `FieldProps` for this template\n */\nclass ObjectField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> extends Component<\n  FieldProps<T, S, F>,\n  ObjectFieldState\n> {\n  /** Set up the initial state */\n  state = {\n    wasPropertyKeyModified: false,\n    additionalProperties: {},\n  };\n\n  /** Returns a flag indicating whether the `name` field is required in the object schema\n   *\n   * @param name - The name of the field to check for required-ness\n   * @returns - True if the field `name` is required, false otherwise\n   */\n  isRequired(name: string) {\n    const { schema } = this.props;\n    return Array.isArray(schema.required) && schema.required.indexOf(name) !== -1;\n  }\n\n  /** Returns the `onPropertyChange` handler for the `name` field. Handles the special case where a user is attempting\n   * to clear the data for a field added as an additional property. Calls the `onChange()` handler with the updated\n   * formData.\n   *\n   * @param name - The name of the property\n   * @param addedByAdditionalProperties - Flag indicating whether this property is an additional property\n   * @returns - The onPropertyChange callback for the `name` property\n   */\n  onPropertyChange = (name: string, addedByAdditionalProperties = false) => {\n    return (value: T | undefined, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n      const { formData, onChange, errorSchema } = this.props;\n      if (value === undefined && addedByAdditionalProperties) {\n        // Don't set value = undefined for fields added by\n        // additionalProperties. Doing so removes them from the\n        // formData, which causes them to completely disappear\n        // (including the input field for the property name). Unlike\n        // fields which are \"mandated\" by the schema, these fields can\n        // be set to undefined by clicking a \"delete field\" button, so\n        // set empty values to the empty string.\n        value = '' as unknown as T;\n      }\n      const newFormData = { ...formData, [name]: value } as unknown as T;\n      onChange(\n        newFormData,\n        errorSchema &&\n          errorSchema && {\n            ...errorSchema,\n            [name]: newErrorSchema,\n          },\n        id\n      );\n    };\n  };\n\n  /** Returns a callback to handle the onDropPropertyClick event for the given `key` which removes the old `key` data\n   * and calls the `onChange` callback with it\n   *\n   * @param key - The key for which the drop callback is desired\n   * @returns - The drop property click callback\n   */\n  onDropPropertyClick = (key: string) => {\n    return (event: DragEvent) => {\n      event.preventDefault();\n      const { onChange, formData } = this.props;\n      const copiedFormData = { ...formData } as T;\n      unset(copiedFormData, key);\n      onChange(copiedFormData);\n    };\n  };\n\n  /** Computes the next available key name from the `preferredKey`, indexing through the already existing keys until one\n   * that is already not assigned is found.\n   *\n   * @param preferredKey - The preferred name of a new key\n   * @param [formData] - The form data in which to check if the desired key already exists\n   * @returns - The name of the next available key from `preferredKey`\n   */\n  getAvailableKey = (preferredKey: string, formData?: T) => {\n    const { uiSchema, registry } = this.props;\n    const { duplicateKeySuffixSeparator = '-' } = getUiOptions<T, S, F>(uiSchema, registry.globalUiOptions);\n\n    let index = 0;\n    let newKey = preferredKey;\n    while (has(formData, newKey)) {\n      newKey = `${preferredKey}${duplicateKeySuffixSeparator}${++index}`;\n    }\n    return newKey;\n  };\n\n  /** Returns a callback function that deals with the rename of a key for an additional property for a schema. That\n   * callback will attempt to rename the key and move the existing data to that key, calling `onChange` when it does.\n   *\n   * @param oldValue - The old value of a field\n   * @returns - The key change callback function\n   */\n  onKeyChange = (oldValue: any) => {\n    return (value: any, newErrorSchema: ErrorSchema<T>) => {\n      if (oldValue === value) {\n        return;\n      }\n      const { formData, onChange, errorSchema } = this.props;\n\n      value = this.getAvailableKey(value, formData);\n      const newFormData: GenericObjectType = {\n        ...(formData as GenericObjectType),\n      };\n      const newKeys: GenericObjectType = { [oldValue]: value };\n      const keyValues = Object.keys(newFormData).map((key) => {\n        const newKey = newKeys[key] || key;\n        return { [newKey]: newFormData[key] };\n      });\n      const renamedObj = Object.assign({}, ...keyValues);\n\n      this.setState({ wasPropertyKeyModified: true });\n\n      onChange(\n        renamedObj,\n        errorSchema &&\n          errorSchema && {\n            ...errorSchema,\n            [value]: newErrorSchema,\n          }\n      );\n    };\n  };\n\n  /** Returns a default value to be used for a new additional schema property of the given `type`\n   *\n   * @param type - The type of the new additional schema property\n   */\n  getDefaultValue(type?: RJSFSchema['type']) {\n    const {\n      registry: { translateString },\n    } = this.props;\n    switch (type) {\n      case 'array':\n        return [];\n      case 'boolean':\n        return false;\n      case 'null':\n        return null;\n      case 'number':\n        return 0;\n      case 'object':\n        return {};\n      case 'string':\n      default:\n        // We don't have a datatype for some reason (perhaps additionalProperties was true)\n        return translateString(TranslatableString.NewStringDefault);\n    }\n  }\n\n  /** Handles the adding of a new additional property on the given `schema`. Calls the `onChange` callback once the new\n   * default data for that field has been added to the formData.\n   *\n   * @param schema - The schema element to which the new property is being added\n   */\n  handleAddClick = (schema: S) => () => {\n    if (!schema.additionalProperties) {\n      return;\n    }\n    const { formData, onChange, registry } = this.props;\n    const newFormData = { ...formData } as T;\n\n    let type: RJSFSchema['type'] = undefined;\n    if (isObject(schema.additionalProperties)) {\n      type = schema.additionalProperties.type;\n      let apSchema = schema.additionalProperties;\n      if (REF_KEY in apSchema) {\n        const { schemaUtils } = registry;\n        apSchema = schemaUtils.retrieveSchema({ $ref: apSchema[REF_KEY] } as S, formData);\n        type = apSchema.type;\n      }\n      if (!type && (ANY_OF_KEY in apSchema || ONE_OF_KEY in apSchema)) {\n        type = 'object';\n      }\n    }\n\n    const newKey = this.getAvailableKey('newKey', newFormData);\n    // Cast this to make the `set` work properly\n    set(newFormData as GenericObjectType, newKey, this.getDefaultValue(type));\n\n    onChange(newFormData);\n  };\n\n  /** Renders the `ObjectField` from the given props\n   */\n  render() {\n    const {\n      schema: rawSchema,\n      uiSchema = {},\n      formData,\n      errorSchema,\n      idSchema,\n      name,\n      required = false,\n      disabled = false,\n      readonly = false,\n      hideError,\n      idPrefix,\n      idSeparator,\n      onBlur,\n      onFocus,\n      registry,\n    } = this.props;\n\n    const { fields, formContext, schemaUtils, translateString, globalUiOptions } = registry;\n    const { SchemaField } = fields;\n    const schema: S = schemaUtils.retrieveSchema(rawSchema, formData);\n    const uiOptions = getUiOptions<T, S, F>(uiSchema, globalUiOptions);\n    const { properties: schemaProperties = {} } = schema;\n\n    const title = uiOptions.title ?? schema.title ?? name;\n    const description = uiOptions.description ?? schema.description;\n    let orderedProperties: string[];\n    try {\n      const properties = Object.keys(schemaProperties);\n      orderedProperties = orderProperties(properties, uiOptions.order);\n    } catch (err) {\n      return (\n        <div>\n          <p className='config-error' style={{ color: 'red' }}>\n            <Markdown>\n              {translateString(TranslatableString.InvalidObjectField, [name || 'root', (err as Error).message])}\n            </Markdown>\n          </p>\n          <pre>{JSON.stringify(schema)}</pre>\n        </div>\n      );\n    }\n\n    const Template = getTemplate<'ObjectFieldTemplate', T, S, F>('ObjectFieldTemplate', registry, uiOptions);\n\n    const templateProps = {\n      // getDisplayLabel() always returns false for object types, so just check the `uiOptions.label`\n      title: uiOptions.label === false ? '' : title,\n      description: uiOptions.label === false ? undefined : description,\n      properties: orderedProperties.map((name) => {\n        const addedByAdditionalProperties = has(schema, [PROPERTIES_KEY, name, ADDITIONAL_PROPERTY_FLAG]);\n        const fieldUiSchema = addedByAdditionalProperties ? uiSchema.additionalProperties : uiSchema[name];\n        const hidden = getUiOptions<T, S, F>(fieldUiSchema).widget === 'hidden';\n        const fieldIdSchema: IdSchema<T> = get(idSchema, [name], {});\n\n        return {\n          content: (\n            <SchemaField\n              key={name}\n              name={name}\n              required={this.isRequired(name)}\n              schema={get(schema, [PROPERTIES_KEY, name], {})}\n              uiSchema={fieldUiSchema}\n              errorSchema={get(errorSchema, name)}\n              idSchema={fieldIdSchema}\n              idPrefix={idPrefix}\n              idSeparator={idSeparator}\n              formData={get(formData, name)}\n              formContext={formContext}\n              wasPropertyKeyModified={this.state.wasPropertyKeyModified}\n              onKeyChange={this.onKeyChange(name)}\n              onChange={this.onPropertyChange(name, addedByAdditionalProperties)}\n              onBlur={onBlur}\n              onFocus={onFocus}\n              registry={registry}\n              disabled={disabled}\n              readonly={readonly}\n              hideError={hideError}\n              onDropPropertyClick={this.onDropPropertyClick}\n            />\n          ),\n          name,\n          readonly,\n          disabled,\n          required,\n          hidden,\n        };\n      }),\n      readonly,\n      disabled,\n      required,\n      idSchema,\n      uiSchema,\n      errorSchema,\n      schema,\n      formData,\n      formContext,\n      registry,\n    };\n    return <Template {...templateProps} onAddClick={this.handleAddClick} />;\n  }\n}\n\nexport default ObjectField;\n", "import { useCallback, Component } from 'react';\nimport {\n  ADDITIONAL_PROPERTY_FLAG,\n  deepEquals,\n  descriptionId,\n  ErrorSchema,\n  FieldProps,\n  FieldTemplateProps,\n  FormContextType,\n  getSchemaType,\n  getTemplate,\n  getUiOptions,\n  ID_KEY,\n  IdSchema,\n  mergeObjects,\n  Registry,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  UI_OPTIONS_KEY,\n  UIOptionsType,\n} from '@rjsf/utils';\nimport isObject from 'lodash/isObject';\nimport omit from 'lodash/omit';\nimport Markdown from 'markdown-to-jsx';\n\n/** The map of component type to FieldName */\nconst COMPONENT_TYPES: { [key: string]: string } = {\n  array: 'ArrayField',\n  boolean: 'BooleanField',\n  integer: 'NumberField',\n  number: 'NumberField',\n  object: 'ObjectField',\n  string: 'StringField',\n  null: 'NullField',\n};\n\n/** Computes and returns which `Field` implementation to return in order to render the field represented by the\n * `schema`. The `uiOptions` are used to alter what potential `Field` implementation is actually returned. If no\n * appropriate `Field` implementation can be found then a wrapper around `UnsupportedFieldTemplate` is used.\n *\n * @param schema - The schema from which to obtain the type\n * @param uiOptions - The UI Options that may affect the component decision\n * @param idSchema - The id that is passed to the `UnsupportedFieldTemplate`\n * @param registry - The registry from which fields and templates are obtained\n * @returns - The `Field` component that is used to render the actual field data\n */\nfunction getFieldComponent<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  schema: S,\n  uiOptions: UIOptionsType<T, S, F>,\n  idSchema: IdSchema<T>,\n  registry: Registry<T, S, F>\n) {\n  const field = uiOptions.field;\n  const { fields, translateString } = registry;\n  if (typeof field === 'function') {\n    return field;\n  }\n  if (typeof field === 'string' && field in fields) {\n    return fields[field];\n  }\n\n  const schemaType = getSchemaType(schema);\n  const type: string = Array.isArray(schemaType) ? schemaType[0] : schemaType || '';\n\n  const schemaId = schema.$id;\n\n  let componentName = COMPONENT_TYPES[type];\n  if (schemaId && schemaId in fields) {\n    componentName = schemaId;\n  }\n\n  // If the type is not defined and the schema uses 'anyOf' or 'oneOf', don't\n  // render a field and let the MultiSchemaField component handle the form display\n  if (!componentName && (schema.anyOf || schema.oneOf)) {\n    return () => null;\n  }\n\n  return componentName in fields\n    ? fields[componentName]\n    : () => {\n        const UnsupportedFieldTemplate = getTemplate<'UnsupportedFieldTemplate', T, S, F>(\n          'UnsupportedFieldTemplate',\n          registry,\n          uiOptions\n        );\n\n        return (\n          <UnsupportedFieldTemplate\n            schema={schema}\n            idSchema={idSchema}\n            reason={translateString(TranslatableString.UnknownFieldType, [String(schema.type)])}\n            registry={registry}\n          />\n        );\n      };\n}\n\n/** The `SchemaFieldRender` component is the work-horse of react-jsonschema-form, determining what kind of real field to\n * render based on the `schema`, `uiSchema` and all the other props. It also deals with rendering the `anyOf` and\n * `oneOf` fields.\n *\n * @param props - The `FieldProps` for this component\n */\nfunction SchemaFieldRender<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: FieldProps<T, S, F>\n) {\n  const {\n    schema: _schema,\n    idSchema: _idSchema,\n    uiSchema,\n    formData,\n    errorSchema,\n    idPrefix,\n    idSeparator,\n    name,\n    onChange,\n    onKeyChange,\n    onDropPropertyClick,\n    required,\n    registry,\n    wasPropertyKeyModified = false,\n  } = props;\n  const { formContext, schemaUtils, globalUiOptions } = registry;\n  const uiOptions = getUiOptions<T, S, F>(uiSchema, globalUiOptions);\n  const FieldTemplate = getTemplate<'FieldTemplate', T, S, F>('FieldTemplate', registry, uiOptions);\n  const DescriptionFieldTemplate = getTemplate<'DescriptionFieldTemplate', T, S, F>(\n    'DescriptionFieldTemplate',\n    registry,\n    uiOptions\n  );\n  const FieldHelpTemplate = getTemplate<'FieldHelpTemplate', T, S, F>('FieldHelpTemplate', registry, uiOptions);\n  const FieldErrorTemplate = getTemplate<'FieldErrorTemplate', T, S, F>('FieldErrorTemplate', registry, uiOptions);\n  const schema = schemaUtils.retrieveSchema(_schema, formData);\n  const fieldId = _idSchema[ID_KEY];\n  const idSchema = mergeObjects(\n    schemaUtils.toIdSchema(schema, fieldId, formData, idPrefix, idSeparator),\n    _idSchema\n  ) as IdSchema<T>;\n\n  /** Intermediary `onChange` handler for field components that will inject the `id` of the current field into the\n   * `onChange` chain if it is not already being provided from a deeper level in the hierarchy\n   */\n  const handleFieldComponentChange = useCallback(\n    (formData: T | undefined, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n      const theId = id || fieldId;\n      return onChange(formData, newErrorSchema, theId);\n    },\n    [fieldId, onChange]\n  );\n\n  const FieldComponent = getFieldComponent<T, S, F>(schema, uiOptions, idSchema, registry);\n  const disabled = Boolean(props.disabled || uiOptions.disabled);\n  const readonly = Boolean(props.readonly || uiOptions.readonly || props.schema.readOnly || schema.readOnly);\n  const uiSchemaHideError = uiOptions.hideError;\n  // Set hideError to the value provided in the uiSchema, otherwise stick with the prop to propagate to children\n  const hideError = uiSchemaHideError === undefined ? props.hideError : Boolean(uiSchemaHideError);\n  const autofocus = Boolean(props.autofocus || uiOptions.autofocus);\n  if (Object.keys(schema).length === 0) {\n    return null;\n  }\n\n  const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema, globalUiOptions);\n\n  const { __errors, ...fieldErrorSchema } = errorSchema || {};\n  // See #439: uiSchema: Don't pass consumed class names or style to child components\n  const fieldUiSchema = omit(uiSchema, ['ui:classNames', 'classNames', 'ui:style']);\n  if (UI_OPTIONS_KEY in fieldUiSchema) {\n    fieldUiSchema[UI_OPTIONS_KEY] = omit(fieldUiSchema[UI_OPTIONS_KEY], ['classNames', 'style']);\n  }\n\n  const field = (\n    <FieldComponent\n      {...props}\n      onChange={handleFieldComponentChange}\n      idSchema={idSchema}\n      schema={schema}\n      uiSchema={fieldUiSchema}\n      disabled={disabled}\n      readonly={readonly}\n      hideError={hideError}\n      autofocus={autofocus}\n      errorSchema={fieldErrorSchema}\n      formContext={formContext}\n      rawErrors={__errors}\n    />\n  );\n\n  const id = idSchema[ID_KEY];\n\n  // If this schema has a title defined, but the user has set a new key/label, retain their input.\n  let label;\n  if (wasPropertyKeyModified) {\n    label = name;\n  } else {\n    label = ADDITIONAL_PROPERTY_FLAG in schema ? name : uiOptions.title || props.schema.title || schema.title || name;\n  }\n\n  const description = uiOptions.description || props.schema.description || schema.description || '';\n\n  const richDescription = uiOptions.enableMarkdownInDescription ? <Markdown>{description}</Markdown> : description;\n\n  const help = uiOptions.help;\n  const hidden = uiOptions.widget === 'hidden';\n\n  const classNames = ['form-group', 'field', `field-${getSchemaType(schema)}`];\n  if (!hideError && __errors && __errors.length > 0) {\n    classNames.push('field-error has-error has-danger');\n  }\n  if (uiSchema?.classNames) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(\n        \"'uiSchema.classNames' is deprecated and may be removed in a major release; Use 'ui:classNames' instead.\"\n      );\n    }\n    classNames.push(uiSchema.classNames);\n  }\n  if (uiOptions.classNames) {\n    classNames.push(uiOptions.classNames);\n  }\n\n  const helpComponent = (\n    <FieldHelpTemplate\n      help={help}\n      idSchema={idSchema}\n      schema={schema}\n      uiSchema={uiSchema}\n      hasErrors={!hideError && __errors && __errors.length > 0}\n      registry={registry}\n    />\n  );\n  /*\n   * AnyOf/OneOf errors handled by child schema\n   */\n  const errorsComponent =\n    hideError || schema.anyOf || schema.oneOf ? undefined : (\n      <FieldErrorTemplate\n        errors={__errors}\n        errorSchema={errorSchema}\n        idSchema={idSchema}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n    );\n  const fieldProps: Omit<FieldTemplateProps<T, S, F>, 'children'> = {\n    description: (\n      <DescriptionFieldTemplate\n        id={descriptionId<T>(id)}\n        description={richDescription}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n    ),\n    rawDescription: description,\n    help: helpComponent,\n    rawHelp: typeof help === 'string' ? help : undefined,\n    errors: errorsComponent,\n    rawErrors: hideError ? undefined : __errors,\n    id,\n    label,\n    hidden,\n    onChange,\n    onKeyChange,\n    onDropPropertyClick,\n    required,\n    disabled,\n    readonly,\n    hideError,\n    displayLabel,\n    classNames: classNames.join(' ').trim(),\n    style: uiOptions.style,\n    formContext,\n    formData,\n    schema,\n    uiSchema,\n    registry,\n  };\n\n  const _AnyOfField = registry.fields.AnyOfField;\n  const _OneOfField = registry.fields.OneOfField;\n  const isReplacingAnyOrOneOf = uiSchema?.['ui:field'] && uiSchema?.['ui:fieldReplacesAnyOrOneOf'] === true;\n\n  return (\n    <FieldTemplate {...fieldProps}>\n      <>\n        {field}\n        {/*\n        If the schema `anyOf` or 'oneOf' can be rendered as a select control, don't\n        render the selection and let `StringField` component handle\n        rendering\n      */}\n        {schema.anyOf && !isReplacingAnyOrOneOf && !schemaUtils.isSelect(schema) && (\n          <_AnyOfField\n            name={name}\n            disabled={disabled}\n            readonly={readonly}\n            hideError={hideError}\n            errorSchema={errorSchema}\n            formData={formData}\n            formContext={formContext}\n            idPrefix={idPrefix}\n            idSchema={idSchema}\n            idSeparator={idSeparator}\n            onBlur={props.onBlur}\n            onChange={props.onChange}\n            onFocus={props.onFocus}\n            options={schema.anyOf.map((_schema) =>\n              schemaUtils.retrieveSchema(isObject(_schema) ? (_schema as S) : ({} as S), formData)\n            )}\n            registry={registry}\n            schema={schema}\n            uiSchema={uiSchema}\n          />\n        )}\n        {schema.oneOf && !isReplacingAnyOrOneOf && !schemaUtils.isSelect(schema) && (\n          <_OneOfField\n            name={name}\n            disabled={disabled}\n            readonly={readonly}\n            hideError={hideError}\n            errorSchema={errorSchema}\n            formData={formData}\n            formContext={formContext}\n            idPrefix={idPrefix}\n            idSchema={idSchema}\n            idSeparator={idSeparator}\n            onBlur={props.onBlur}\n            onChange={props.onChange}\n            onFocus={props.onFocus}\n            options={schema.oneOf.map((_schema) =>\n              schemaUtils.retrieveSchema(isObject(_schema) ? (_schema as S) : ({} as S), formData)\n            )}\n            registry={registry}\n            schema={schema}\n            uiSchema={uiSchema}\n          />\n        )}\n      </>\n    </FieldTemplate>\n  );\n}\n\n/** The `SchemaField` component determines whether it is necessary to rerender the component based on any props changes\n * and if so, calls the `SchemaFieldRender` component with the props.\n */\nclass SchemaField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> extends Component<\n  FieldProps<T, S, F>\n> {\n  shouldComponentUpdate(nextProps: Readonly<FieldProps<T, S, F>>) {\n    return !deepEquals(this.props, nextProps);\n  }\n\n  render() {\n    return <SchemaFieldRender<T, S, F> {...this.props} />;\n  }\n}\n\nexport default SchemaField;\n", "import {\n  getWidget,\n  getUiOptions,\n  optionsList,\n  hasWidget,\n  FieldProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `StringField` component is used to render a schema field that represents a string type\n *\n * @param props - The `FieldProps` for this template\n */\nfunction StringField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: FieldProps<T, S, F>\n) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    required,\n    disabled = false,\n    readonly = false,\n    autofocus = false,\n    onChange,\n    onBlur,\n    onFocus,\n    registry,\n    rawErrors,\n  } = props;\n  const { title, format } = schema;\n  const { widgets, formContext, schemaUtils, globalUiOptions } = registry;\n  const enumOptions = schemaUtils.isSelect(schema) ? optionsList(schema) : undefined;\n  let defaultWidget = enumOptions ? 'select' : 'text';\n  if (format && hasWidget<T, S, F>(schema, format, widgets)) {\n    defaultWidget = format;\n  }\n  const { widget = defaultWidget, placeholder = '', title: uiTitle, ...options } = getUiOptions<T, S, F>(uiSchema);\n  const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema, globalUiOptions);\n  const label = uiTitle ?? title ?? name;\n  const Widget = getWidget<T, S, F>(schema, widget, widgets);\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      uiSchema={uiSchema}\n      id={idSchema.$id}\n      name={name}\n      label={label}\n      hideLabel={!displayLabel}\n      value={formData}\n      onChange={onChange}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      formContext={formContext}\n      autofocus={autofocus}\n      registry={registry}\n      placeholder={placeholder}\n      rawErrors={rawErrors}\n    />\n  );\n}\n\nexport default StringField;\n", "import { useEffect } from 'react';\nimport { FieldProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The `NullField` component is used to render a field in the schema is null. It also ensures that the `formData` is\n * also set to null if it has no value.\n *\n * @param props - The `FieldProps` for this template\n */\nfunction NullField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: FieldProps<T, S, F>\n) {\n  const { formData, onChange } = props;\n  useEffect(() => {\n    if (formData === undefined) {\n      onChange(null as unknown as T);\n    }\n  }, [formData, onChange]);\n\n  return null;\n}\n\nexport default NullField;\n", "import { Field, FormContextType, RegistryFieldsType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\nimport ArrayField from './ArrayField';\nimport BooleanField from './BooleanField';\nimport MultiSchemaField from './MultiSchemaField';\nimport NumberField from './NumberField';\nimport ObjectField from './ObjectField';\nimport SchemaField from './SchemaField';\nimport StringField from './StringField';\nimport NullField from './NullField';\n\nfunction fields<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): RegistryFieldsType<T, S, F> {\n  return {\n    AnyOfField: MultiSchemaField,\n    ArrayField: ArrayField as unknown as Field<T, S, F>,\n    // ArrayField falls back to SchemaField if ArraySchemaField is not defined, which it isn't by default\n    BooleanField,\n    NumberField,\n    ObjectField,\n    OneOfField: MultiSchemaField,\n    SchemaField,\n    StringField,\n    NullField,\n  };\n}\n\nexport default fields;\n", "import {\n  descriptionId,\n  getTemplate,\n  getUiOptions,\n  ArrayFieldDescriptionProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `ArrayFieldDescriptionTemplate` component renders a `DescriptionFieldTemplate` with an `id` derived from\n * the `idSchema`.\n *\n * @param props - The `ArrayFieldDescriptionProps` for the component\n */\nexport default function ArrayFieldDescriptionTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldDescriptionProps<T, S, F>) {\n  const { idSchema, description, registry, schema, uiSchema } = props;\n  const options = getUiOptions<T, S, F>(uiSchema, registry.globalUiOptions);\n  const { label: displayLabel = true } = options;\n  if (!description || !displayLabel) {\n    return null;\n  }\n  const DescriptionFieldTemplate = getTemplate<'DescriptionFieldTemplate', T, S, F>(\n    'DescriptionFieldTemplate',\n    registry,\n    options\n  );\n  return (\n    <DescriptionFieldTemplate\n      id={descriptionId<T>(idSchema)}\n      description={description}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    />\n  );\n}\n", "import {\n  getTemplate,\n  getUiOptions,\n  ArrayFieldTemplateProps,\n  ArrayFieldTemplateItemType,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `ArrayFieldTemplate` component is the template used to render all items in an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTemplateProps<T, S, F>) {\n  const {\n    canAdd,\n    className,\n    disabled,\n    idSchema,\n    uiSchema,\n    items,\n    onAddClick,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n  } = props;\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\n  const ArrayFieldDescriptionTemplate = getTemplate<'ArrayFieldDescriptionTemplate', T, S, F>(\n    'ArrayFieldDescriptionTemplate',\n    registry,\n    uiOptions\n  );\n  const ArrayFieldItemTemplate = getTemplate<'ArrayFieldItemTemplate', T, S, F>(\n    'ArrayFieldItemTemplate',\n    registry,\n    uiOptions\n  );\n  const ArrayFieldTitleTemplate = getTemplate<'ArrayFieldTitleTemplate', T, S, F>(\n    'ArrayFieldTitleTemplate',\n    registry,\n    uiOptions\n  );\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <fieldset className={className} id={idSchema.$id}>\n      <ArrayFieldTitleTemplate\n        idSchema={idSchema}\n        title={uiOptions.title || title}\n        required={required}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n      <ArrayFieldDescriptionTemplate\n        idSchema={idSchema}\n        description={uiOptions.description || schema.description}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n      <div className='row array-item-list'>\n        {items &&\n          items.map(({ key, ...itemProps }: ArrayFieldTemplateItemType<T, S, F>) => (\n            <ArrayFieldItemTemplate key={key} {...itemProps} />\n          ))}\n      </div>\n      {canAdd && (\n        <AddButton\n          className='array-item-add'\n          onClick={onAddClick}\n          disabled={disabled || readonly}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n    </fieldset>\n  );\n}\n", "import {\n  getTemplate,\n  getUiOptions,\n  titleId,\n  ArrayFieldTitleProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TemplatesType,\n} from '@rjsf/utils';\n\n/** The `ArrayFieldTitleTemplate` component renders a `TitleFieldTemplate` with an `id` derived from\n * the `idSchema`.\n *\n * @param props - The `ArrayFieldTitleProps` for the component\n */\nexport default function ArrayFieldTitleTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTitleProps<T, S, F>) {\n  const { idSchema, title, schema, uiSchema, required, registry } = props;\n  const options = getUiOptions<T, S, F>(uiSchema, registry.globalUiOptions);\n  const { label: displayLabel = true } = options;\n  if (!title || !displayLabel) {\n    return null;\n  }\n  const TitleFieldTemplate: TemplatesType<T, S, F>['TitleFieldTemplate'] = getTemplate<'TitleFieldTemplate', T, S, F>(\n    'TitleFieldTemplate',\n    registry,\n    options\n  );\n  return (\n    <TitleFieldTemplate\n      id={titleId<T>(idSchema)}\n      title={title}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    />\n  );\n}\n", "import { ChangeEvent, FocusEvent, useCallback } from 'react';\nimport {\n  ariaDescribedByIds,\n  BaseInputTemplateProps,\n  examplesId,\n  getInputProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `BaseInputTemplate` is the template to use to render the basic `<input>` component for the `core` theme.\n * It is used as the template for rendering many of the <input> based widgets that differ by `type` and callbacks only.\n * It can be customized/overridden for other themes or individual implementations as needed.\n *\n * @param props - The `WidgetProps` for this template\n */\nexport default function BaseInputTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: BaseInputTemplateProps<T, S, F>) {\n  const {\n    id,\n    name, // remove this from ...rest\n    value,\n    readonly,\n    disabled,\n    autofocus,\n    onBlur,\n    onFocus,\n    onChange,\n    onChangeOverride,\n    options,\n    schema,\n    uiSchema,\n    formContext,\n    registry,\n    rawErrors,\n    type,\n    hideLabel, // remove this from ...rest\n    hideError, // remove this from ...rest\n    ...rest\n  } = props;\n\n  // Note: since React 15.2.0 we can't forward unknown element attributes, so we\n  // exclude the \"options\" and \"schema\" ones here.\n  if (!id) {\n    console.log('No id for', props);\n    throw new Error(`no id for props ${JSON.stringify(props)}`);\n  }\n  const inputProps = {\n    ...rest,\n    ...getInputProps<T, S, F>(schema, type, options),\n  };\n\n  let inputValue;\n  if (inputProps.type === 'number' || inputProps.type === 'integer') {\n    inputValue = value || value === 0 ? value : '';\n  } else {\n    inputValue = value == null ? '' : value;\n  }\n\n  const _onChange = useCallback(\n    ({ target: { value } }: ChangeEvent<HTMLInputElement>) => onChange(value === '' ? options.emptyValue : value),\n    [onChange, options]\n  );\n  const _onBlur = useCallback(({ target: { value } }: FocusEvent<HTMLInputElement>) => onBlur(id, value), [onBlur, id]);\n  const _onFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) => onFocus(id, value),\n    [onFocus, id]\n  );\n\n  return (\n    <>\n      <input\n        id={id}\n        name={id}\n        className='form-control'\n        readOnly={readonly}\n        disabled={disabled}\n        autoFocus={autofocus}\n        value={inputValue}\n        {...inputProps}\n        list={schema.examples ? examplesId<T>(id) : undefined}\n        onChange={onChangeOverride || _onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        aria-describedby={ariaDescribedByIds<T>(id, !!schema.examples)}\n      />\n      {Array.isArray(schema.examples) && (\n        <datalist key={`datalist_${id}`} id={examplesId<T>(id)}>\n          {(schema.examples as string[])\n            .concat(schema.default && !schema.examples.includes(schema.default) ? ([schema.default] as string[]) : [])\n            .map((example: any) => {\n              return <option key={example} value={example} />;\n            })}\n        </datalist>\n      )}\n    </>\n  );\n}\n", "import { getSubmitButtonOptions, FormContextType, RJSFSchema, StrictRJSFSchema, SubmitButtonProps } from '@rjsf/utils';\n\n/** The `SubmitButton` renders a button that represent the `Submit` action on a form\n */\nexport default function SubmitButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ uiSchema }: SubmitButtonProps<T, S, F>) {\n  const { submitText, norender, props: submitButtonProps = {} } = getSubmitButtonOptions<T, S, F>(uiSchema);\n  if (norender) {\n    return null;\n  }\n  return (\n    <div>\n      <button type='submit' {...submitButtonProps} className={`btn btn-info ${submitButtonProps.className || ''}`}>\n        {submitText}\n      </button>\n    </div>\n  );\n}\n", "import { FormContextType, IconButtonProps, RJSFSchema, StrictRJSFSchema, TranslatableString } from '@rjsf/utils';\n\nexport default function IconButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: IconButtonProps<T, S, F>\n) {\n  const { iconType = 'default', icon, className, uiSchema, registry, ...otherProps } = props;\n  return (\n    <button type='button' className={`btn btn-${iconType} ${className}`} {...otherProps}>\n      <i className={`glyphicon glyphicon-${icon}`} />\n    </button>\n  );\n}\n\nexport function CopyButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: IconButtonProps<T, S, F>\n) {\n  const {\n    registry: { translateString },\n  } = props;\n  return (\n    <IconButton\n      title={translateString(TranslatableString.CopyButton)}\n      className='array-item-copy'\n      {...props}\n      icon='copy'\n    />\n  );\n}\n\nexport function MoveDownButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: IconButtonProps<T, S, F>\n) {\n  const {\n    registry: { translateString },\n  } = props;\n  return (\n    <IconButton\n      title={translateString(TranslatableString.MoveDownButton)}\n      className='array-item-move-down'\n      {...props}\n      icon='arrow-down'\n    />\n  );\n}\n\nexport function MoveUpButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: IconButtonProps<T, S, F>\n) {\n  const {\n    registry: { translateString },\n  } = props;\n  return (\n    <IconButton\n      title={translateString(TranslatableString.MoveUpButton)}\n      className='array-item-move-up'\n      {...props}\n      icon='arrow-up'\n    />\n  );\n}\n\nexport function RemoveButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: IconButtonProps<T, S, F>\n) {\n  const {\n    registry: { translateString },\n  } = props;\n  return (\n    <IconButton\n      title={translateString(TranslatableString.RemoveButton)}\n      className='array-item-remove'\n      {...props}\n      iconType='danger'\n      icon='remove'\n    />\n  );\n}\n", "import { FormContextType, IconButtonProps, RJSFSchema, StrictRJSFSchema, TranslatableString } from '@rjsf/utils';\n\nimport IconButton from './IconButton';\n\n/** The `AddButton` renders a button that represent the `Add` action on a form\n */\nexport default function AddButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  className,\n  onClick,\n  disabled,\n  registry,\n}: IconButtonProps<T, S, F>) {\n  const { translateString } = registry;\n  return (\n    <div className='row'>\n      <p className={`col-xs-3 col-xs-offset-9 text-right ${className}`}>\n        <IconButton\n          iconType='info'\n          icon='plus'\n          className='btn-add col-xs-12'\n          title={translateString(TranslatableString.AddButton)}\n          onClick={onClick}\n          disabled={disabled}\n          registry={registry}\n        />\n      </p>\n    </div>\n  );\n}\n", "import { FormContextType, RJSFSchema, StrictRJSFSchema, TemplatesType } from '@rjsf/utils';\n\nimport SubmitButton from './SubmitButton';\nimport AddButton from './AddButton';\nimport { CopyButton, MoveDownButton, MoveUpButton, RemoveButton } from './IconButton';\n\nfunction buttonTemplates<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): TemplatesType<T, S, F>['ButtonTemplates'] {\n  return {\n    SubmitButton,\n    AddButton,\n    CopyButton,\n    MoveDownButton,\n    MoveUpButton,\n    RemoveButton,\n  };\n}\n\nexport default buttonTemplates;\n", "import {\n  ErrorListProps,\n  FormContextType,\n  RJSFValidationError,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n} from '@rjsf/utils';\n\n/** The `ErrorList` component is the template that renders the all the errors associated with the fields in the `Form`\n *\n * @param props - The `ErrorListProps` for this component\n */\nexport default function ErrorList<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  errors,\n  registry,\n}: ErrorListProps<T, S, F>) {\n  const { translateString } = registry;\n  return (\n    <div className='panel panel-danger errors'>\n      <div className='panel-heading'>\n        <h3 className='panel-title'>{translateString(TranslatableString.ErrorsLabel)}</h3>\n      </div>\n      <ul className='list-group'>\n        {errors.map((error: RJSFValidationError, i: number) => {\n          return (\n            <li key={i} className='list-group-item text-danger'>\n              {error.stack}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n", "import {\n  FieldTemplateProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  getTemplate,\n  getUiOptions,\n} from '@rjsf/utils';\n\nimport Label from './Label';\n\n/** The `FieldTemplate` component is the template used by `SchemaField` to render any field. It renders the field\n * content, (label, description, children, errors and help) inside of a `WrapIfAdditional` component.\n *\n * @param props - The `FieldTemplateProps` for this component\n */\nexport default function FieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldTemplateProps<T, S, F>) {\n  const { id, label, children, errors, help, description, hidden, required, displayLabel, registry, uiSchema } = props;\n  const uiOptions = getUiOptions(uiSchema);\n  const WrapIfAdditionalTemplate = getTemplate<'WrapIfAdditionalTemplate', T, S, F>(\n    'WrapIfAdditionalTemplate',\n    registry,\n    uiOptions\n  );\n  if (hidden) {\n    return <div className='hidden'>{children}</div>;\n  }\n  return (\n    <WrapIfAdditionalTemplate {...props}>\n      {displayLabel && <Label label={label} required={required} id={id} />}\n      {displayLabel && description ? description : null}\n      {children}\n      {errors}\n      {help}\n    </WrapIfAdditionalTemplate>\n  );\n}\n", "import FieldTemplate from './FieldTemplate';\n\nexport default FieldTemplate;\n", "import { errorId, FieldErrorProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The `FieldErrorTemplate` component renders the errors local to the particular field\n *\n * @param props - The `FieldErrorProps` for the errors being rendered\n */\nexport default function FieldErrorTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldErrorProps<T, S, F>) {\n  const { errors = [], idSchema } = props;\n  if (errors.length === 0) {\n    return null;\n  }\n  const id = errorId<T>(idSchema);\n\n  return (\n    <div>\n      <ul id={id} className='error-detail bs-callout bs-callout-info'>\n        {errors\n          .filter((elem) => !!elem)\n          .map((error, index: number) => {\n            return (\n              <li className='text-danger' key={index}>\n                {error}\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n", "import { helpId, FieldHelpProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The `FieldHelpTemplate` component renders any help desired for a field\n *\n * @param props - The `FieldHelpProps` to be rendered\n */\nexport default function FieldHelpTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldHelpProps<T, S, F>) {\n  const { idSchema, help } = props;\n  if (!help) {\n    return null;\n  }\n  const id = helpId<T>(idSchema);\n  if (typeof help === 'string') {\n    return (\n      <p id={id} className='help-block'>\n        {help}\n      </p>\n    );\n  }\n  return (\n    <div id={id} className='help-block'>\n      {help}\n    </div>\n  );\n}\n", "import {\n  FormContextType,\n  ObjectFieldTemplatePropertyType,\n  ObjectFieldTemplateProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n  canExpand,\n  descriptionId,\n  getTemplate,\n  getUiOptions,\n  titleId,\n} from '@rjsf/utils';\n\n/** The `ObjectFieldTemplate` is the template to use to render all the inner properties of an object along with the\n * title and description if available. If the object is expandable, then an `AddButton` is also rendered after all\n * the properties.\n *\n * @param props - The `ObjectFieldTemplateProps` for this component\n */\nexport default function ObjectFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ObjectFieldTemplateProps<T, S, F>) {\n  const {\n    description,\n    disabled,\n    formData,\n    idSchema,\n    onAddClick,\n    properties,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n    uiSchema,\n  } = props;\n  const options = getUiOptions<T, S, F>(uiSchema);\n  const TitleFieldTemplate = getTemplate<'TitleFieldTemplate', T, S, F>('TitleFieldTemplate', registry, options);\n  const DescriptionFieldTemplate = getTemplate<'DescriptionFieldTemplate', T, S, F>(\n    'DescriptionFieldTemplate',\n    registry,\n    options\n  );\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <fieldset id={idSchema.$id}>\n      {title && (\n        <TitleFieldTemplate\n          id={titleId<T>(idSchema)}\n          title={title}\n          required={required}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      {description && (\n        <DescriptionFieldTemplate\n          id={descriptionId<T>(idSchema)}\n          description={description}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      {properties.map((prop: ObjectFieldTemplatePropertyType) => prop.content)}\n      {canExpand<T, S, F>(schema, uiSchema, formData) && (\n        <AddButton\n          className='object-property-expand'\n          onClick={onAddClick(schema)}\n          disabled={disabled || readonly}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n    </fieldset>\n  );\n}\n", "import { FormContextType, RJSFSchema, StrictRJSFSchema, TranslatableString, UnsupportedFieldProps } from '@rjsf/utils';\nimport Markdown from 'markdown-to-jsx';\n\n/** The `UnsupportedField` component is used to render a field in the schema is one that is not supported by\n * react-jsonschema-form.\n *\n * @param props - The `FieldProps` for this template\n */\nfunction UnsupportedField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: UnsupportedFieldProps<T, S, F>\n) {\n  const { schema, idSchema, reason, registry } = props;\n  const { translateString } = registry;\n  let translateEnum: TranslatableString = TranslatableString.UnsupportedField;\n  const translateParams: string[] = [];\n  if (idSchema && idSchema.$id) {\n    translateEnum = TranslatableString.UnsupportedFieldWithId;\n    translateParams.push(idSchema.$id);\n  }\n  if (reason) {\n    translateEnum =\n      translateEnum === TranslatableString.UnsupportedField\n        ? TranslatableString.UnsupportedFieldWithReason\n        : TranslatableString.UnsupportedFieldWithIdAndReason;\n    translateParams.push(reason);\n  }\n  return (\n    <div className='unsupported-field'>\n      <p>\n        <Markdown>{translateString(translateEnum, translateParams)}</Markdown>\n      </p>\n      {schema && <pre>{JSON.stringify(schema, null, 2)}</pre>}\n    </div>\n  );\n}\n\nexport default UnsupportedField;\n", "import {\n  ADDITIONAL_PROPERTY_FLAG,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  WrapIfAdditionalTemplateProps,\n} from '@rjsf/utils';\n\nimport Label from './FieldTemplate/Label';\n\n/** The `WrapIfAdditional` component is used by the `FieldTemplate` to rename, or remove properties that are\n * part of an `additionalProperties` part of a schema.\n *\n * @param props - The `WrapIfAdditionalProps` for this component\n */\nexport default function WrapIfAdditionalTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WrapIfAdditionalTemplateProps<T, S, F>) {\n  const {\n    id,\n    classNames,\n    style,\n    disabled,\n    label,\n    onKeyChange,\n    onDropPropertyClick,\n    readonly,\n    required,\n    schema,\n    children,\n    uiSchema,\n    registry,\n  } = props;\n  const { templates, translateString } = registry;\n  // Button templates are not overridden in the uiSchema\n  const { RemoveButton } = templates.ButtonTemplates;\n  const keyLabel = translateString(TranslatableString.KeyLabel, [label]);\n  const additional = ADDITIONAL_PROPERTY_FLAG in schema;\n\n  if (!additional) {\n    return (\n      <div className={classNames} style={style}>\n        {children}\n      </div>\n    );\n  }\n\n  return (\n    <div className={classNames} style={style}>\n      <div className='row'>\n        <div className='col-xs-5 form-additional'>\n          <div className='form-group'>\n            <Label label={keyLabel} required={required} id={`${id}-key`} />\n            <input\n              className='form-control'\n              type='text'\n              id={`${id}-key`}\n              onBlur={(event) => onKeyChange(event.target.value)}\n              defaultValue={label}\n            />\n          </div>\n        </div>\n        <div className='form-additional form-group col-xs-5'>{children}</div>\n        <div className='col-xs-2'>\n          <RemoveButton\n            className='array-item-remove btn-block'\n            style={{ border: '0' }}\n            disabled={disabled || readonly}\n            onClick={onDropPropertyClick(label)}\n            uiSchema={uiSchema}\n            registry={registry}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { FormContextType, RJSFSchema, StrictRJSFSchema, TemplatesType } from '@rjsf/utils';\n\nimport ArrayFieldDescriptionTemplate from './ArrayFieldDescriptionTemplate';\nimport ArrayFieldItemTemplate from './ArrayFieldItemTemplate';\nimport ArrayFieldTemplate from './ArrayFieldTemplate';\nimport ArrayFieldTitleTemplate from './ArrayFieldTitleTemplate';\nimport BaseInputTemplate from './BaseInputTemplate';\nimport ButtonTemplates from './ButtonTemplates';\nimport DescriptionField from './DescriptionField';\nimport ErrorList from './ErrorList';\nimport FieldTemplate from './FieldTemplate';\nimport FieldErrorTemplate from './FieldErrorTemplate';\nimport FieldHelpTemplate from './FieldHelpTemplate';\nimport ObjectFieldTemplate from './ObjectFieldTemplate';\nimport TitleField from './TitleField';\nimport UnsupportedField from './UnsupportedField';\nimport WrapIfAdditionalTemplate from './WrapIfAdditionalTemplate';\n\nfunction templates<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(): TemplatesType<\n  T,\n  S,\n  F\n> {\n  return {\n    ArrayFieldDescriptionTemplate,\n    ArrayFieldItemTemplate,\n    ArrayFieldTemplate,\n    ArrayFieldTitleTemplate,\n    ButtonTemplates: ButtonTemplates<T, S, F>(),\n    BaseInputTemplate,\n    DescriptionFieldTemplate: DescriptionField,\n    ErrorListTemplate: ErrorList,\n    FieldTemplate,\n    FieldErrorTemplate,\n    FieldHelpTemplate,\n    ObjectFieldTemplate,\n    TitleFieldTemplate: TitleField,\n    UnsupportedFieldTemplate: UnsupportedField,\n    WrapIfAdditionalTemplate,\n  };\n}\n\nexport default templates;\n", "import { MouseEvent, useCallback, useEffect, useReducer, useState } from 'react';\nimport {\n  ariaDescribedByIds,\n  parseDateString,\n  toDateString,\n  pad,\n  DateObject,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  WidgetProps,\n} from '@rjsf/utils';\n\nfunction rangeOptions(start: number, stop: number) {\n  const options = [];\n  for (let i = start; i <= stop; i++) {\n    options.push({ value: i, label: pad(i, 2) });\n  }\n  return options;\n}\n\nfunction readyForChange(state: DateObject) {\n  return Object.values(state).every((value) => value !== -1);\n}\n\nfunction dateElementProps(\n  state: DateObject,\n  time: boolean,\n  yearsRange: [number, number] = [1900, new Date().getFullYear() + 2]\n) {\n  const { year, month, day, hour, minute, second } = state;\n  const data = [\n    {\n      type: 'year',\n      range: yearsRange,\n      value: year,\n    },\n    { type: 'month', range: [1, 12], value: month },\n    { type: 'day', range: [1, 31], value: day },\n  ] as { type: string; range: [number, number]; value: number | undefined }[];\n  if (time) {\n    data.push(\n      { type: 'hour', range: [0, 23], value: hour },\n      { type: 'minute', range: [0, 59], value: minute },\n      { type: 'second', range: [0, 59], value: second }\n    );\n  }\n  return data;\n}\n\ntype DateElementProps<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> = Pick<\n  WidgetProps<T, S, F>,\n  'value' | 'name' | 'disabled' | 'readonly' | 'autofocus' | 'registry' | 'onBlur' | 'onFocus'\n> & {\n  rootId: string;\n  select: (property: keyof DateObject, value: any) => void;\n  type: string;\n  range: [number, number];\n};\n\nfunction DateElement<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  type,\n  range,\n  value,\n  select,\n  rootId,\n  name,\n  disabled,\n  readonly,\n  autofocus,\n  registry,\n  onBlur,\n  onFocus,\n}: DateElementProps<T, S, F>) {\n  const id = rootId + '_' + type;\n  const { SelectWidget } = registry.widgets;\n  return (\n    <SelectWidget\n      schema={{ type: 'integer' } as S}\n      id={id}\n      name={name}\n      className='form-control'\n      options={{ enumOptions: rangeOptions(range[0], range[1]) }}\n      placeholder={type}\n      value={value}\n      disabled={disabled}\n      readonly={readonly}\n      autofocus={autofocus}\n      onChange={(value: any) => select(type as keyof DateObject, value)}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      registry={registry}\n      label=''\n      aria-describedby={ariaDescribedByIds<T>(rootId)}\n    />\n  );\n}\n\n/** The `AltDateWidget` is an alternative widget for rendering date properties.\n * @param props - The `WidgetProps` for this component\n */\nfunction AltDateWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  time = false,\n  disabled = false,\n  readonly = false,\n  autofocus = false,\n  options,\n  id,\n  name,\n  registry,\n  onBlur,\n  onFocus,\n  onChange,\n  value,\n}: WidgetProps<T, S, F>) {\n  const { translateString } = registry;\n  const [lastValue, setLastValue] = useState(value);\n  const [state, setState] = useReducer((state: DateObject, action: Partial<DateObject>) => {\n    return { ...state, ...action };\n  }, parseDateString(value, time));\n\n  useEffect(() => {\n    const stateValue = toDateString(state, time);\n    if (readyForChange(state) && stateValue !== value) {\n      // The user changed the date to a new valid data via the comboboxes, so call onChange\n      onChange(stateValue);\n    } else if (lastValue !== value) {\n      // We got a new value in the props\n      setLastValue(value);\n      setState(parseDateString(value, time));\n    }\n  }, [time, value, onChange, state, lastValue]);\n\n  const handleChange = useCallback((property: keyof DateObject, value: string) => {\n    setState({ [property]: value });\n  }, []);\n\n  const handleSetNow = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      if (disabled || readonly) {\n        return;\n      }\n      const nextState = parseDateString(new Date().toJSON(), time);\n      onChange(toDateString(nextState, time));\n    },\n    [disabled, readonly, time]\n  );\n\n  const handleClear = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      if (disabled || readonly) {\n        return;\n      }\n      onChange(undefined);\n    },\n    [disabled, readonly, onChange]\n  );\n\n  return (\n    <ul className='list-inline'>\n      {dateElementProps(state, time, options.yearsRange as [number, number] | undefined).map((elemProps, i) => (\n        <li className='list-inline-item' key={i}>\n          <DateElement\n            rootId={id}\n            name={name}\n            select={handleChange}\n            {...elemProps}\n            disabled={disabled}\n            readonly={readonly}\n            registry={registry}\n            onBlur={onBlur}\n            onFocus={onFocus}\n            autofocus={autofocus && i === 0}\n          />\n        </li>\n      ))}\n      {(options.hideNowButton !== 'undefined' ? !options.hideNowButton : true) && (\n        <li className='list-inline-item'>\n          <a href='#' className='btn btn-info btn-now' onClick={handleSetNow}>\n            {translateString(TranslatableString.NowLabel)}\n          </a>\n        </li>\n      )}\n      {(options.hideClearButton !== 'undefined' ? !options.hideClearButton : true) && (\n        <li className='list-inline-item'>\n          <a href='#' className='btn btn-warning btn-clear' onClick={handleClear}>\n            {translateString(TranslatableString.ClearLabel)}\n          </a>\n        </li>\n      )}\n    </ul>\n  );\n}\n\nexport default AltDateWidget;\n", "import { ChangeEvent, FocusEvent, useCallback } from 'react';\nimport {\n  ariaDescribedByIds,\n  descriptionId,\n  getTemplate,\n  labelValue,\n  schemaRequiresTrueValue,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from '@rjsf/utils';\n\n/** The `CheckBoxWidget` is a widget for rendering boolean properties.\n *  It is typically used to represent a boolean.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction CheckboxWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  schema,\n  uiSchema,\n  options,\n  id,\n  value,\n  disabled,\n  readonly,\n  label,\n  hideLabel,\n  autofocus = false,\n  onBlur,\n  onFocus,\n  onChange,\n  registry,\n}: WidgetProps<T, S, F>) {\n  const DescriptionFieldTemplate = getTemplate<'DescriptionFieldTemplate', T, S, F>(\n    'DescriptionFieldTemplate',\n    registry,\n    options\n  );\n  // Because an unchecked checkbox will cause html5 validation to fail, only add\n  // the \"required\" attribute if the field value must be \"true\", due to the\n  // \"const\" or \"enum\" keywords\n  const required = schemaRequiresTrueValue<S>(schema);\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => onChange(event.target.checked),\n    [onChange]\n  );\n\n  const handleBlur = useCallback(\n    (event: FocusEvent<HTMLInputElement>) => onBlur(id, event.target.checked),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    (event: FocusEvent<HTMLInputElement>) => onFocus(id, event.target.checked),\n    [onFocus, id]\n  );\n  const description = options.description ?? schema.description;\n\n  return (\n    <div className={`checkbox ${disabled || readonly ? 'disabled' : ''}`}>\n      {!hideLabel && !!description && (\n        <DescriptionFieldTemplate\n          id={descriptionId<T>(id)}\n          description={description}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      <label>\n        <input\n          type='checkbox'\n          id={id}\n          name={id}\n          checked={typeof value === 'undefined' ? false : value}\n          required={required}\n          disabled={disabled || readonly}\n          autoFocus={autofocus}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          onFocus={handleFocus}\n          aria-describedby={ariaDescribedByIds<T>(id)}\n        />\n        {labelValue(<span>{label}</span>, hideLabel)}\n      </label>\n    </div>\n  );\n}\n\nexport default CheckboxWidget;\n", "import { ChangeEvent, FocusEvent, useCallback } from 'react';\nimport {\n  ariaDescribedByIds,\n  enumOptionsDeselectValue,\n  enumOptionsIsSelected,\n  enumOptionsSelectValue,\n  enumOptionsValueForIndex,\n  optionId,\n  FormContextType,\n  WidgetProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `CheckboxesWidget` is a widget for rendering checkbox groups.\n *  It is typically used to represent an array of enums.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction CheckboxesWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  id,\n  disabled,\n  options: { inline = false, enumOptions, enumDisabled, emptyValue },\n  value,\n  autofocus = false,\n  readonly,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps<T, S, F>) {\n  const checkboxesValues = Array.isArray(value) ? value : [value];\n\n  const handleBlur = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n      onBlur(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue)),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n      onFocus(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue)),\n    [onFocus, id]\n  );\n  return (\n    <div className='checkboxes' id={id}>\n      {Array.isArray(enumOptions) &&\n        enumOptions.map((option, index) => {\n          const checked = enumOptionsIsSelected<S>(option.value, checkboxesValues);\n          const itemDisabled = Array.isArray(enumDisabled) && enumDisabled.indexOf(option.value) !== -1;\n          const disabledCls = disabled || itemDisabled || readonly ? 'disabled' : '';\n\n          const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n            if (event.target.checked) {\n              onChange(enumOptionsSelectValue<S>(index, checkboxesValues, enumOptions));\n            } else {\n              onChange(enumOptionsDeselectValue<S>(index, checkboxesValues, enumOptions));\n            }\n          };\n\n          const checkbox = (\n            <span>\n              <input\n                type='checkbox'\n                id={optionId(id, index)}\n                name={id}\n                checked={checked}\n                value={String(index)}\n                disabled={disabled || itemDisabled || readonly}\n                autoFocus={autofocus && index === 0}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                onFocus={handleFocus}\n                aria-describedby={ariaDescribedByIds<T>(id)}\n              />\n              <span>{option.label}</span>\n            </span>\n          );\n          return inline ? (\n            <label key={index} className={`checkbox-inline ${disabledCls}`}>\n              {checkbox}\n            </label>\n          ) : (\n            <div key={index} className={`checkbox ${disabledCls}`}>\n              <label>{checkbox}</label>\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default CheckboxesWidget;\n", "import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `ColorWidget` component uses the `BaseInputTemplate` changing the type to `color` and disables it when it is\n * either disabled or readonly.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function ColorWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { disabled, readonly, options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate type='color' {...props} disabled={disabled || readonly} />;\n}\n", "import { useCallback } from 'react';\nimport { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `DateWidget` component uses the `BaseInputTemplate` changing the type to `date` and transforms\n * the value to undefined when it is falsy during the `onChange` handling.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function DateWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { onChange, options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  const handleChange = useCallback((value: any) => onChange(value || undefined), [onChange]);\n\n  return <BaseInputTemplate type='date' {...props} onChange={handleChange} />;\n}\n", "import {\n  getTemplate,\n  localToUTC,\n  utcToLocal,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from '@rjsf/utils';\n\n/** The `DateTimeWidget` component uses the `BaseInputTemplate` changing the type to `datetime-local` and transforms\n * the value to/from utc using the appropriate utility functions.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function DateTimeWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { onChange, value, options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return (\n    <BaseInputTemplate\n      type='datetime-local'\n      {...props}\n      value={utcToLocal(value)}\n      onChange={(value) => onChange(localToUTC(value))}\n    />\n  );\n}\n", "import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `EmailWidget` component uses the `BaseInputTemplate` changing the type to `email`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function EmailWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate type='email' {...props} />;\n}\n", "import { ChangeEvent, useCallback, useState } from 'react';\nimport {\n  dataURItoBlob,\n  FormContextType,\n  getTemplate,\n  Registry,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  WidgetProps,\n} from '@rjsf/utils';\nimport Markdown from 'markdown-to-jsx';\n\nfunction addNameToDataURL(dataURL: string, name: string) {\n  if (dataURL === null) {\n    return null;\n  }\n  return dataURL.replace(';base64', `;name=${encodeURIComponent(name)};base64`);\n}\n\ntype FileInfoType = {\n  dataURL?: string | null;\n  name: string;\n  size: number;\n  type: string;\n};\n\nfunction processFile(file: File): Promise<FileInfoType> {\n  const { name, size, type } = file;\n  return new Promise((resolve, reject) => {\n    const reader = new window.FileReader();\n    reader.onerror = reject;\n    reader.onload = (event) => {\n      if (typeof event.target?.result === 'string') {\n        resolve({\n          dataURL: addNameToDataURL(event.target.result, name),\n          name,\n          size,\n          type,\n        });\n      } else {\n        resolve({\n          dataURL: null,\n          name,\n          size,\n          type,\n        });\n      }\n    };\n    reader.readAsDataURL(file);\n  });\n}\n\nfunction processFiles(files: FileList) {\n  return Promise.all(Array.from(files).map(processFile));\n}\n\nfunction FileInfoPreview<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  fileInfo,\n  registry,\n}: {\n  fileInfo: FileInfoType;\n  registry: Registry<T, S, F>;\n}) {\n  const { translateString } = registry;\n  const { dataURL, type, name } = fileInfo;\n  if (!dataURL) {\n    return null;\n  }\n\n  if (type.indexOf('image') !== -1) {\n    return <img src={dataURL} style={{ maxWidth: '100%' }} className='file-preview' />;\n  }\n\n  return (\n    <>\n      {' '}\n      <a download={`preview-${name}`} href={dataURL} className='file-download'>\n        {translateString(TranslatableString.PreviewLabel)}\n      </a>\n    </>\n  );\n}\n\nfunction FilesInfo<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  filesInfo,\n  registry,\n  preview,\n}: {\n  filesInfo: FileInfoType[];\n  registry: Registry<T, S, F>;\n  preview?: boolean;\n}) {\n  if (filesInfo.length === 0) {\n    return null;\n  }\n  const { translateString } = registry;\n  return (\n    <ul className='file-info'>\n      {filesInfo.map((fileInfo, key) => {\n        const { name, size, type } = fileInfo;\n        return (\n          <li key={key}>\n            <Markdown>{translateString(TranslatableString.FilesInfo, [name, type, String(size)])}</Markdown>\n            {preview && <FileInfoPreview<T, S, F> fileInfo={fileInfo} registry={registry} />}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction extractFileInfo(dataURLs: string[]): FileInfoType[] {\n  return dataURLs\n    .filter((dataURL) => dataURL)\n    .map((dataURL) => {\n      const { blob, name } = dataURItoBlob(dataURL);\n      return {\n        dataURL,\n        name: name,\n        size: blob.size,\n        type: blob.type,\n      };\n    });\n}\n\n/**\n *  The `FileWidget` is a widget for rendering file upload fields.\n *  It is typically used with a string property with data-url format.\n */\nfunction FileWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { disabled, readonly, required, multiple, onChange, value, options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  const [filesInfo, setFilesInfo] = useState<FileInfoType[]>(\n    Array.isArray(value) ? extractFileInfo(value) : extractFileInfo([value])\n  );\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      if (!event.target.files) {\n        return;\n      }\n      // Due to variances in themes, dealing with multiple files for the array case now happens one file at a time.\n      // This is because we don't pass `multiple` into the `BaseInputTemplate` anymore. Instead, we deal with the single\n      // file in each event and concatenate them together ourselves\n      processFiles(event.target.files).then((filesInfoEvent) => {\n        const newValue = filesInfoEvent.map((fileInfo) => fileInfo.dataURL);\n        if (multiple) {\n          setFilesInfo(filesInfo.concat(filesInfoEvent[0]));\n          onChange(value.concat(newValue[0]));\n        } else {\n          setFilesInfo(filesInfoEvent);\n          onChange(newValue[0]);\n        }\n      });\n    },\n    [multiple, value, filesInfo, onChange]\n  );\n\n  return (\n    <div>\n      <BaseInputTemplate\n        {...props}\n        disabled={disabled || readonly}\n        type='file'\n        required={value ? false : required} // this turns off HTML required validation when a value exists\n        onChangeOverride={handleChange}\n        value=''\n        accept={options.accept ? String(options.accept) : undefined}\n      />\n      <FilesInfo<T, S, F> filesInfo={filesInfo} registry={registry} preview={options.filePreview} />\n    </div>\n  );\n}\n\nexport default FileWidget;\n", "import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `PasswordWidget` component uses the `BaseInputTemplate` changing the type to `password`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function PasswordWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate type='password' {...props} />;\n}\n", "import { FocusEvent, useCallback } from 'react';\nimport {\n  ariaDescribedByIds,\n  enumOptionsIsSelected,\n  enumOptionsValueForIndex,\n  optionId,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from '@rjsf/utils';\n\n/** The `RadioWidget` is a widget for rendering a radio group.\n *  It is typically used with a string property constrained with enum options.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction RadioWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  autofocus = false,\n  onBlur,\n  onFocus,\n  onChange,\n  id,\n}: WidgetProps<T, S, F>) {\n  const { enumOptions, enumDisabled, inline, emptyValue } = options;\n\n  const handleBlur = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n      onBlur(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue)),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n      onFocus(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue)),\n    [onFocus, id]\n  );\n\n  return (\n    <div className='field-radio-group' id={id}>\n      {Array.isArray(enumOptions) &&\n        enumOptions.map((option, i) => {\n          const checked = enumOptionsIsSelected<S>(option.value, value);\n          const itemDisabled = Array.isArray(enumDisabled) && enumDisabled.indexOf(option.value) !== -1;\n          const disabledCls = disabled || itemDisabled || readonly ? 'disabled' : '';\n\n          const handleChange = () => onChange(option.value);\n\n          const radio = (\n            <span>\n              <input\n                type='radio'\n                id={optionId(id, i)}\n                checked={checked}\n                name={id}\n                required={required}\n                value={String(i)}\n                disabled={disabled || itemDisabled || readonly}\n                autoFocus={autofocus && i === 0}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                onFocus={handleFocus}\n                aria-describedby={ariaDescribedByIds<T>(id)}\n              />\n              <span>{option.label}</span>\n            </span>\n          );\n\n          return inline ? (\n            <label key={i} className={`radio-inline ${disabledCls}`}>\n              {radio}\n            </label>\n          ) : (\n            <div key={i} className={`radio ${disabledCls}`}>\n              <label>{radio}</label>\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default RadioWidget;\n", "import { ChangeEvent, FocusEvent, SyntheticEvent, useCallback } from 'react';\nimport {\n  ariaDescribedByIds,\n  enumOptionsIndexForValue,\n  enumOptionsValueForIndex,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from '@rjsf/utils';\n\nfunction getValue(event: SyntheticEvent<HTMLSelectElement>, multiple: boolean) {\n  if (multiple) {\n    return Array.from((event.target as HTMLSelectElement).options)\n      .slice()\n      .filter((o) => o.selected)\n      .map((o) => o.value);\n  }\n  return (event.target as HTMLSelectElement).value;\n}\n\n/** The `SelectWidget` is a widget for rendering dropdowns.\n *  It is typically used with string properties constrained with enum options.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction SelectWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  schema,\n  id,\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  multiple = false,\n  autofocus = false,\n  onChange,\n  onBlur,\n  onFocus,\n  placeholder,\n}: WidgetProps<T, S, F>) {\n  const { enumOptions, enumDisabled, emptyValue: optEmptyVal } = options;\n  const emptyValue = multiple ? [] : '';\n\n  const handleFocus = useCallback(\n    (event: FocusEvent<HTMLSelectElement>) => {\n      const newValue = getValue(event, multiple);\n      return onFocus(id, enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyVal));\n    },\n    [onFocus, id, schema, multiple, options]\n  );\n\n  const handleBlur = useCallback(\n    (event: FocusEvent<HTMLSelectElement>) => {\n      const newValue = getValue(event, multiple);\n      return onBlur(id, enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyVal));\n    },\n    [onBlur, id, schema, multiple, options]\n  );\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLSelectElement>) => {\n      const newValue = getValue(event, multiple);\n      return onChange(enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyVal));\n    },\n    [onChange, schema, multiple, options]\n  );\n\n  const selectedIndexes = enumOptionsIndexForValue<S>(value, enumOptions, multiple);\n\n  return (\n    <select\n      id={id}\n      name={id}\n      multiple={multiple}\n      className='form-control'\n      value={typeof selectedIndexes === 'undefined' ? emptyValue : selectedIndexes}\n      required={required}\n      disabled={disabled || readonly}\n      autoFocus={autofocus}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      onChange={handleChange}\n      aria-describedby={ariaDescribedByIds<T>(id)}\n    >\n      {!multiple && schema.default === undefined && <option value=''>{placeholder}</option>}\n      {Array.isArray(enumOptions) &&\n        enumOptions.map(({ value, label }, i) => {\n          const disabled = enumDisabled && enumDisabled.indexOf(value) !== -1;\n          return (\n            <option key={i} value={String(i)} disabled={disabled}>\n              {label}\n            </option>\n          );\n        })}\n    </select>\n  );\n}\n\nexport default SelectWidget;\n", "import { ChangeEvent, FocusEvent, useCallback } from 'react';\nimport { ariaDescribedByIds, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `TextareaWidget` is a widget for rendering input fields as textarea.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction TextareaWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  id,\n  options = {},\n  placeholder,\n  value,\n  required,\n  disabled,\n  readonly,\n  autofocus = false,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps<T, S, F>) {\n  const handleChange = useCallback(\n    ({ target: { value } }: ChangeEvent<HTMLTextAreaElement>) => onChange(value === '' ? options.emptyValue : value),\n    [onChange, options.emptyValue]\n  );\n\n  const handleBlur = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLTextAreaElement>) => onBlur(id, value),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLTextAreaElement>) => onFocus(id, value),\n    [id, onFocus]\n  );\n\n  return (\n    <textarea\n      id={id}\n      name={id}\n      className='form-control'\n      value={value ? value : ''}\n      placeholder={placeholder}\n      required={required}\n      disabled={disabled}\n      readOnly={readonly}\n      autoFocus={autofocus}\n      rows={options.rows}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      onChange={handleChange}\n      aria-describedby={ariaDescribedByIds<T>(id)}\n    />\n  );\n}\n\nTextareaWidget.defaultProps = {\n  autofocus: false,\n  options: {},\n};\n\nexport default TextareaWidget;\n", "import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `TextWidget` component uses the `BaseInputTemplate`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function TextWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate {...props} />;\n}\n", "import { useCallback } from 'react';\nimport { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `TimeWidget` component uses the `BaseInputTemplate` changing the type to `time` and transforms\n * the value to undefined when it is falsy during the `onChange` handling.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function TimeWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { onChange, options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  const handleChange = useCallback((value: any) => onChange(value ? `${value}:00` : undefined), [onChange]);\n\n  return <BaseInputTemplate type='time' {...props} onChange={handleChange} />;\n}\n", "import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `URLWidget` component uses the `BaseInputTemplate` changing the type to `url`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function URLWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate type='url' {...props} />;\n}\n", "import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `UpDownWidget` component uses the `BaseInputTemplate` changing the type to `number`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function UpDownWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate type='number' {...props} />;\n}\n", "import { FormContextType, RegistryWidgetsType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\nimport AltDateWidget from './AltDateWidget';\nimport AltDateTimeWidget from './AltDateTimeWidget';\nimport CheckboxWidget from './CheckboxWidget';\nimport CheckboxesWidget from './CheckboxesWidget';\nimport ColorWidget from './ColorWidget';\nimport DateWidget from './DateWidget';\nimport DateTimeWidget from './DateTimeWidget';\nimport EmailWidget from './EmailWidget';\nimport FileWidget from './FileWidget';\nimport HiddenWidget from './HiddenWidget';\nimport PasswordWidget from './PasswordWidget';\nimport RadioWidget from './RadioWidget';\nimport RangeWidget from './RangeWidget';\nimport SelectWidget from './SelectWidget';\nimport TextareaWidget from './TextareaWidget';\nimport TextWidget from './TextWidget';\nimport TimeWidget from './TimeWidget';\nimport URLWidget from './URLWidget';\nimport UpDownWidget from './UpDownWidget';\n\nfunction widgets<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): RegistryWidgetsType<T, S, F> {\n  return {\n    AltDateWidget,\n    AltDateTimeWidget,\n    CheckboxWidget,\n    CheckboxesWidget,\n    ColorWidget,\n    DateWidget,\n    DateTimeWidget,\n    EmailWidget,\n    FileWidget,\n    HiddenWidget,\n    PasswordWidget,\n    RadioWidget,\n    RangeWidget,\n    SelectWidget,\n    TextWidget,\n    TextareaWidget,\n    TimeWidget,\n    UpDownWidget,\n    URLWidget,\n  };\n}\n\nexport default widgets;\n", "import { englishStringTranslator, FormContextType, Registry, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\nimport fields from './components/fields';\nimport templates from './components/templates';\nimport widgets from './components/widgets';\n\n/** The default registry consists of all the fields, templates and widgets provided in the core implementation,\n * plus an empty `rootSchema` and `formContext. We omit schemaUtils here because it cannot be defaulted without a\n * rootSchema and validator. It will be added into the computed registry later in the Form.\n */\nexport default function getDefaultRegistry<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): Omit<Registry<T, S, F>, 'schemaUtils'> {\n  return {\n    fields: fields<T, S, F>(),\n    templates: templates<T, S, F>(),\n    widgets: widgets<T, S, F>(),\n    rootSchema: {} as S,\n    formContext: {} as F,\n    translateString: englishStringTranslator,\n  };\n}\n", "import { Component, ElementType, FormEvent, ReactNode, Ref, RefObject, createRef } from 'react';\nimport {\n  createSchemaUtils,\n  CustomValidator,\n  deepEquals,\n  ErrorSchema,\n  ErrorTransformer,\n  FormContextType,\n  GenericObjectType,\n  getTemplate,\n  getUiOptions,\n  IdSchema,\n  isObject,\n  mergeObjects,\n  NAME_KEY,\n  PathSchema,\n  StrictRJSFSchema,\n  Registry,\n  RegistryFieldsType,\n  RegistryWidgetsType,\n  RJSFSchema,\n  RJSFValidationError,\n  RJSF_ADDITONAL_PROPERTIES_FLAG,\n  SchemaUtilsType,\n  shouldRender,\n  SUBMIT_BTN_OPTIONS_KEY,\n  TemplatesType,\n  toErrorList,\n  UiSchema,\n  UI_GLOBAL_OPTIONS_KEY,\n  UI_OPTIONS_KEY,\n  ValidationData,\n  validationDataMerge,\n  ValidatorType,\n  Experimental_DefaultFormStateBehavior,\n} from '@rjsf/utils';\nimport _get from 'lodash/get';\nimport _isEmpty from 'lodash/isEmpty';\nimport _pick from 'lodash/pick';\nimport _toPath from 'lodash/toPath';\n\nimport getDefaultRegistry from '../getDefaultRegistry';\n\n/** The properties that are passed to the `Form` */\nexport interface FormProps<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> {\n  /** The JSON schema object for the form */\n  schema: S;\n  /** An implementation of the `ValidatorType` interface that is needed for form validation to work */\n  validator: ValidatorType<T, S, F>;\n  /** The optional children for the form, if provided, it will replace the default `SubmitButton` */\n  children?: ReactNode;\n  /** The uiSchema for the form */\n  uiSchema?: UiSchema<T, S, F>;\n  /** The data for the form, used to prefill a form with existing data */\n  formData?: T;\n  // Form presentation and behavior modifiers\n  /** You can provide a `formContext` object to the form, which is passed down to all fields and widgets. Useful for\n   * implementing context aware fields and widgets.\n   *\n   * NOTE: Setting `{readonlyAsDisabled: false}` on the formContext will make the antd theme treat readOnly fields as\n   * disabled.\n   */\n  formContext?: F;\n  /** To avoid collisions with existing ids in the DOM, it is possible to change the prefix used for ids;\n   * Default is `root`\n   */\n  idPrefix?: string;\n  /** To avoid using a path separator that is present in field names, it is possible to change the separator used for\n   * ids (Default is `_`)\n   */\n  idSeparator?: string;\n  /** It's possible to disable the whole form by setting the `disabled` prop. The `disabled` prop is then forwarded down\n   * to each field of the form. If you just want to disable some fields, see the `ui:disabled` parameter in `uiSchema`\n   */\n  disabled?: boolean;\n  /** It's possible to make the whole form read-only by setting the `readonly` prop. The `readonly` prop is then\n   * forwarded down to each field of the form. If you just want to make some fields read-only, see the `ui:readonly`\n   * parameter in `uiSchema`\n   */\n  readonly?: boolean;\n  // Form registry\n  /** The dictionary of registered fields in the form */\n  fields?: RegistryFieldsType<T, S, F>;\n  /** The dictionary of registered templates in the form; Partial allows a subset to be provided beyond the defaults */\n  templates?: Partial<Omit<TemplatesType<T, S, F>, 'ButtonTemplates'>> & {\n    ButtonTemplates?: Partial<TemplatesType<T, S, F>['ButtonTemplates']>;\n  };\n  /** The dictionary of registered widgets in the form */\n  widgets?: RegistryWidgetsType<T, S, F>;\n  // Callbacks\n  /** If you plan on being notified every time the form data are updated, you can pass an `onChange` handler, which will\n   * receive the same args as `onSubmit` any time a value is updated in the form. Can also return the `id` of the field\n   * that caused the change\n   */\n  onChange?: (data: IChangeEvent<T, S, F>, id?: string) => void;\n  /** To react when submitted form data are invalid, pass an `onError` handler. It will be passed the list of\n   * encountered errors\n   */\n  onError?: (errors: RJSFValidationError[]) => void;\n  /** You can pass a function as the `onSubmit` prop of your `Form` component to listen to when the form is submitted\n   * and its data are valid. It will be passed a result object having a `formData` attribute, which is the valid form\n   * data you're usually after. The original event will also be passed as a second parameter\n   */\n  onSubmit?: (data: IChangeEvent<T, S, F>, event: FormEvent<any>) => void;\n  /** Sometimes you may want to trigger events or modify external state when a field has been touched, so you can pass\n   * an `onBlur` handler, which will receive the id of the input that was blurred and the field value\n   */\n  onBlur?: (id: string, data: any) => void;\n  /** Sometimes you may want to trigger events or modify external state when a field has been focused, so you can pass\n   * an `onFocus` handler, which will receive the id of the input that is focused and the field value\n   */\n  onFocus?: (id: string, data: any) => void;\n  // <form /> HTML attributes\n  /** The value of this prop will be passed to the `accept-charset` HTML attribute on the form */\n  acceptcharset?: string;\n  /** The value of this prop will be passed to the `action` HTML attribute on the form\n   *\n   * NOTE: this just renders the `action` attribute in the HTML markup. There is no real network request being sent to\n   * this `action` on submit. Instead, react-jsonschema-form catches the submit event with `event.preventDefault()`\n   * and then calls the `onSubmit` function, where you could send a request programmatically with `fetch` or similar.\n   */\n  action?: string;\n  /** The value of this prop will be passed to the `autocomplete` HTML attribute on the form */\n  autoComplete?: string;\n  /** The value of this prop will be passed to the `class` HTML attribute on the form */\n  className?: string;\n  /** The value of this prop will be passed to the `enctype` HTML attribute on the form */\n  enctype?: string;\n  /** The value of this prop will be passed to the `id` HTML attribute on the form */\n  id?: string;\n  /** The value of this prop will be passed to the `name` HTML attribute on the form */\n  name?: string;\n  /** The value of this prop will be passed to the `method` HTML attribute on the form */\n  method?: string;\n  /** It's possible to change the default `form` tag name to a different HTML tag, which can be helpful if you are\n   * nesting forms. However, native browser form behaviour, such as submitting when the `Enter` key is pressed, may no\n   * longer work\n   */\n  tagName?: ElementType;\n  /** The value of this prop will be passed to the `target` HTML attribute on the form */\n  target?: string;\n  // Errors and validation\n  /** Formerly the `validate` prop; Takes a function that specifies custom validation rules for the form */\n  customValidate?: CustomValidator<T, S, F>;\n  /** This prop allows passing in custom errors that are augmented with the existing JSON Schema errors on the form; it\n   * can be used to implement asynchronous validation. By default, these are non-blocking errors, meaning that you can\n   * still submit the form when these are the only errors displayed to the user.\n   */\n  extraErrors?: ErrorSchema<T>;\n  /** If set to true, causes the `extraErrors` to become blocking when the form is submitted */\n  extraErrorsBlockSubmit?: boolean;\n  /** If set to true, turns off HTML5 validation on the form; Set to `false` by default */\n  noHtml5Validate?: boolean;\n  /** If set to true, turns off all validation. Set to `false` by default\n   *\n   * @deprecated - In a future release, this switch may be replaced by making `validator` prop optional\n   */\n  noValidate?: boolean;\n  /** If set to true, the form will perform validation and show any validation errors whenever the form data is changed,\n   * rather than just on submit\n   */\n  liveValidate?: boolean;\n  /** If `omitExtraData` and `liveOmit` are both set to true, then extra form data values that are not in any form field\n   * will be removed whenever `onChange` is called. Set to `false` by default\n   */\n  liveOmit?: boolean;\n  /** If set to true, then extra form data values that are not in any form field will be removed whenever `onSubmit` is\n   * called. Set to `false` by default.\n   */\n  omitExtraData?: boolean;\n  /** When this prop is set to `top` or 'bottom', a list of errors (or the custom error list defined in the `ErrorList`) will also\n   * show. When set to false, only inline input validation errors will be shown. Set to `top` by default\n   */\n  showErrorList?: false | 'top' | 'bottom';\n  /** A function can be passed to this prop in order to make modifications to the default errors resulting from JSON\n   * Schema validation\n   */\n  transformErrors?: ErrorTransformer<T, S, F>;\n  /** If set to true, then the first field with an error will receive the focus when the form is submitted with errors\n   */\n  focusOnFirstError?: boolean | ((error: RJSFValidationError) => void);\n  /** Optional string translation function, if provided, allows users to change the translation of the RJSF internal\n   * strings. Some strings contain replaceable parameter values as indicated by `%1`, `%2`, etc. The number after the\n   * `%` indicates the order of the parameter. The ordering of parameters is important because some languages may choose\n   * to put the second parameter before the first in its translation.\n   */\n  translateString?: Registry['translateString'];\n  /** Optional configuration object with flags, if provided, allows users to override default form state behavior\n   * Currently only affecting minItems on array fields and handling of setting defaults based on the value of\n   * `emptyObjectFields`\n   */\n  experimental_defaultFormStateBehavior?: Experimental_DefaultFormStateBehavior;\n  // Private\n  /**\n   * _internalFormWrapper is currently used by the semantic-ui theme to provide a custom wrapper around `<Form />`\n   * that supports the proper rendering of those themes. To use this prop, one must pass a component that takes two\n   * props: `children` and `as`. That component, at minimum, should render the `children` inside of a <form /> tag\n   * unless `as` is provided, in which case, use the `as` prop in place of `<form />`.\n   * i.e.:\n   * ```\n   * export default function InternalForm({ children, as }) {\n   *   const FormTag = as || 'form';\n   *   return <FormTag>{children}</FormTag>;\n   * }\n   * ```\n   *\n   * Use at your own risk as this prop is private and may change at any time without notice.\n   */\n  _internalFormWrapper?: ElementType;\n  /** Support receiving a React ref to the Form\n   */\n  ref?: Ref<Form<T, S, F>>;\n}\n\n/** The data that is contained within the state for the `Form` */\nexport interface FormState<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> {\n  /** The JSON schema object for the form */\n  schema: S;\n  /** The uiSchema for the form */\n  uiSchema: UiSchema<T, S, F>;\n  /** The `IdSchema` for the form, computed from the `schema`, the `rootFieldId`, the `formData` and the `idPrefix` and\n   * `idSeparator` props.\n   */\n  idSchema: IdSchema<T>;\n  /** The schemaUtils implementation used by the `Form`, created from the `validator` and the `schema` */\n  schemaUtils: SchemaUtilsType<T, S, F>;\n  /** The current data for the form, computed from the `formData` prop and the changes made by the user */\n  formData?: T;\n  /** Flag indicating whether the form is in edit mode, true when `formData` is passed to the form, otherwise false */\n  edit: boolean;\n  /** The current list of errors for the form, includes `extraErrors` */\n  errors: RJSFValidationError[];\n  /** The current errors, in `ErrorSchema` format, for the form, includes `extraErrors` */\n  errorSchema: ErrorSchema<T>;\n  /** The current list of errors for the form directly from schema validation, does NOT include `extraErrors` */\n  schemaValidationErrors: RJSFValidationError[];\n  /** The current errors, in `ErrorSchema` format, for the form directly from schema validation, does NOT include\n   * `extraErrors`\n   */\n  schemaValidationErrorSchema: ErrorSchema<T>;\n}\n\n/** The event data passed when changes have been made to the form, includes everything from the `FormState` except\n * the schema validation errors. An additional `status` is added when returned from `onSubmit`\n */\nexport interface IChangeEvent<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>\n  extends Omit<FormState<T, S, F>, 'schemaValidationErrors' | 'schemaValidationErrorSchema'> {\n  /** The status of the form when submitted */\n  status?: 'submitted';\n}\n\n/** The `Form` component renders the outer form and all the fields defined in the `schema` */\nexport default class Form<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> extends Component<FormProps<T, S, F>, FormState<T, S, F>> {\n  /** The ref used to hold the `form` element, this needs to be `any` because `tagName` or `_internalFormWrapper` can\n   * provide any possible type here\n   */\n  formElement: RefObject<any>;\n\n  /** Constructs the `Form` from the `props`. Will setup the initial state from the props. It will also call the\n   * `onChange` handler if the initially provided `formData` is modified to add missing default values as part of the\n   * state construction.\n   *\n   * @param props - The initial props for the `Form`\n   */\n  constructor(props: FormProps<T, S, F>) {\n    super(props);\n\n    if (!props.validator) {\n      throw new Error('A validator is required for Form functionality to work');\n    }\n\n    this.state = this.getStateFromProps(props, props.formData);\n    if (this.props.onChange && !deepEquals(this.state.formData, this.props.formData)) {\n      this.props.onChange(this.state);\n    }\n    this.formElement = createRef();\n  }\n\n  /** React lifecycle method that gets called before new props are provided, updates the state based on new props. It\n   * will also call the`onChange` handler if the `formData` is modified to add missing default values as part of the\n   * state construction.\n   *\n   * @param nextProps - The new set of props about to be applied to the `Form`\n   */\n  UNSAFE_componentWillReceiveProps(nextProps: FormProps<T, S, F>) {\n    const nextState = this.getStateFromProps(nextProps, nextProps.formData);\n    if (\n      !deepEquals(nextState.formData, nextProps.formData) &&\n      !deepEquals(nextState.formData, this.state.formData) &&\n      nextProps.onChange\n    ) {\n      nextProps.onChange(nextState);\n    }\n    this.setState(nextState);\n  }\n\n  /** Extracts the updated state from the given `props` and `inputFormData`. As part of this process, the\n   * `inputFormData` is first processed to add any missing required defaults. After that, the data is run through the\n   * validation process IF required by the `props`.\n   *\n   * @param props - The props passed to the `Form`\n   * @param inputFormData - The new or current data for the `Form`\n   * @returns - The new state for the `Form`\n   */\n  getStateFromProps(props: FormProps<T, S, F>, inputFormData?: T): FormState<T, S, F> {\n    const state: FormState<T, S, F> = this.state || {};\n    const schema = 'schema' in props ? props.schema : this.props.schema;\n    const uiSchema: UiSchema<T, S, F> = ('uiSchema' in props ? props.uiSchema! : this.props.uiSchema!) || {};\n    const edit = typeof inputFormData !== 'undefined';\n    const liveValidate = 'liveValidate' in props ? props.liveValidate : this.props.liveValidate;\n    const mustValidate = edit && !props.noValidate && liveValidate;\n    const rootSchema = schema;\n    const experimental_defaultFormStateBehavior =\n      'experimental_defaultFormStateBehavior' in props\n        ? props.experimental_defaultFormStateBehavior\n        : this.props.experimental_defaultFormStateBehavior;\n    let schemaUtils: SchemaUtilsType<T, S, F> = state.schemaUtils;\n    if (\n      !schemaUtils ||\n      schemaUtils.doesSchemaUtilsDiffer(props.validator, rootSchema, experimental_defaultFormStateBehavior)\n    ) {\n      schemaUtils = createSchemaUtils<T, S, F>(props.validator, rootSchema, experimental_defaultFormStateBehavior);\n    }\n    const formData: T = schemaUtils.getDefaultFormState(schema, inputFormData) as T;\n    const retrievedSchema = schemaUtils.retrieveSchema(schema, formData);\n\n    const getCurrentErrors = (): ValidationData<T> => {\n      if (props.noValidate) {\n        return { errors: [], errorSchema: {} };\n      } else if (!props.liveValidate) {\n        return {\n          errors: state.schemaValidationErrors || [],\n          errorSchema: state.schemaValidationErrorSchema || {},\n        };\n      }\n      return {\n        errors: state.errors || [],\n        errorSchema: state.errorSchema || {},\n      };\n    };\n\n    let errors: RJSFValidationError[];\n    let errorSchema: ErrorSchema<T> | undefined;\n    let schemaValidationErrors: RJSFValidationError[] = state.schemaValidationErrors;\n    let schemaValidationErrorSchema: ErrorSchema<T> = state.schemaValidationErrorSchema;\n    if (mustValidate) {\n      const schemaValidation = this.validate(formData, schema, schemaUtils);\n      errors = schemaValidation.errors;\n      errorSchema = schemaValidation.errorSchema;\n      schemaValidationErrors = errors;\n      schemaValidationErrorSchema = errorSchema;\n    } else {\n      const currentErrors = getCurrentErrors();\n      errors = currentErrors.errors;\n      errorSchema = currentErrors.errorSchema;\n    }\n    if (props.extraErrors) {\n      const merged = validationDataMerge({ errorSchema, errors }, props.extraErrors);\n      errorSchema = merged.errorSchema;\n      errors = merged.errors;\n    }\n    const idSchema = schemaUtils.toIdSchema(\n      retrievedSchema,\n      uiSchema['ui:rootFieldId'],\n      formData,\n      props.idPrefix,\n      props.idSeparator\n    );\n    const nextState: FormState<T, S, F> = {\n      schemaUtils,\n      schema,\n      uiSchema,\n      idSchema,\n      formData,\n      edit,\n      errors,\n      errorSchema,\n      schemaValidationErrors,\n      schemaValidationErrorSchema,\n    };\n    return nextState;\n  }\n\n  /** React lifecycle method that is used to determine whether component should be updated.\n   *\n   * @param nextProps - The next version of the props\n   * @param nextState - The next version of the state\n   * @returns - True if the component should be updated, false otherwise\n   */\n  shouldComponentUpdate(nextProps: FormProps<T, S, F>, nextState: FormState<T, S, F>): boolean {\n    return shouldRender(this, nextProps, nextState);\n  }\n\n  /** Validates the `formData` against the `schema` using the `altSchemaUtils` (if provided otherwise it uses the\n   * `schemaUtils` in the state), returning the results.\n   *\n   * @param formData - The new form data to validate\n   * @param schema - The schema used to validate against\n   * @param altSchemaUtils - The alternate schemaUtils to use for validation\n   */\n  validate(\n    formData: T | undefined,\n    schema = this.props.schema,\n    altSchemaUtils?: SchemaUtilsType<T, S, F>\n  ): ValidationData<T> {\n    const schemaUtils = altSchemaUtils ? altSchemaUtils : this.state.schemaUtils;\n    const { customValidate, transformErrors, uiSchema } = this.props;\n    const resolvedSchema = schemaUtils.retrieveSchema(schema, formData);\n    return schemaUtils\n      .getValidator()\n      .validateFormData(formData, resolvedSchema, customValidate, transformErrors, uiSchema);\n  }\n\n  /** Renders any errors contained in the `state` in using the `ErrorList`, if not disabled by `showErrorList`. */\n  renderErrors(registry: Registry<T, S, F>) {\n    const { errors, errorSchema, schema, uiSchema } = this.state;\n    const { formContext } = this.props;\n    const options = getUiOptions<T, S, F>(uiSchema);\n    const ErrorListTemplate = getTemplate<'ErrorListTemplate', T, S, F>('ErrorListTemplate', registry, options);\n\n    if (errors && errors.length) {\n      return (\n        <ErrorListTemplate\n          errors={errors}\n          errorSchema={errorSchema || {}}\n          schema={schema}\n          uiSchema={uiSchema}\n          formContext={formContext}\n          registry={registry}\n        />\n      );\n    }\n    return null;\n  }\n\n  /** Returns the `formData` with only the elements specified in the `fields` list\n   *\n   * @param formData - The data for the `Form`\n   * @param fields - The fields to keep while filtering\n   */\n  getUsedFormData = (formData: T | undefined, fields: string[][]): T | undefined => {\n    // For the case of a single input form\n    if (fields.length === 0 && typeof formData !== 'object') {\n      return formData;\n    }\n\n    // _pick has incorrect type definition, it works with string[][], because lodash/hasIn supports it\n    const data: GenericObjectType = _pick(formData, fields as unknown as string[]);\n    if (Array.isArray(formData)) {\n      return Object.keys(data).map((key: string) => data[key]) as unknown as T;\n    }\n\n    return data as T;\n  };\n\n  /** Returns the list of field names from inspecting the `pathSchema` as well as using the `formData`\n   *\n   * @param pathSchema - The `PathSchema` object for the form\n   * @param [formData] - The form data to use while checking for empty objects/arrays\n   */\n  getFieldNames = (pathSchema: PathSchema<T>, formData?: T): string[][] => {\n    const getAllPaths = (_obj: GenericObjectType, acc: string[][] = [], paths: string[][] = [[]]) => {\n      Object.keys(_obj).forEach((key: string) => {\n        if (typeof _obj[key] === 'object') {\n          const newPaths = paths.map((path) => [...path, key]);\n          // If an object is marked with additionalProperties, all its keys are valid\n          if (_obj[key][RJSF_ADDITONAL_PROPERTIES_FLAG] && _obj[key][NAME_KEY] !== '') {\n            acc.push(_obj[key][NAME_KEY]);\n          } else {\n            getAllPaths(_obj[key], acc, newPaths);\n          }\n        } else if (key === NAME_KEY && _obj[key] !== '') {\n          paths.forEach((path) => {\n            const formValue = _get(formData, path);\n            // adds path to fieldNames if it points to a value\n            // or an empty object/array\n            if (typeof formValue !== 'object' || _isEmpty(formValue)) {\n              acc.push(path);\n            }\n          });\n        }\n      });\n      return acc;\n    };\n\n    return getAllPaths(pathSchema);\n  };\n\n  /** Function to handle changes made to a field in the `Form`. This handler receives an entirely new copy of the\n   * `formData` along with a new `ErrorSchema`. It will first update the `formData` with any missing default fields and\n   * then, if `omitExtraData` and `liveOmit` are turned on, the `formData` will be filterer to remove any extra data not\n   * in a form field. Then, the resulting formData will be validated if required. The state will be updated with the new\n   * updated (potentially filtered) `formData`, any errors that resulted from validation. Finally the `onChange`\n   * callback will be called if specified with the updated state.\n   *\n   * @param formData - The new form data from a change to a field\n   * @param newErrorSchema - The new `ErrorSchema` based on the field change\n   * @param id - The id of the field that caused the change\n   */\n  onChange = (formData: T | undefined, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n    const { extraErrors, omitExtraData, liveOmit, noValidate, liveValidate, onChange } = this.props;\n    const { schemaUtils, schema } = this.state;\n    if (isObject(formData) || Array.isArray(formData)) {\n      const newState = this.getStateFromProps(this.props, formData);\n      formData = newState.formData;\n    }\n\n    const mustValidate = !noValidate && liveValidate;\n    let state: Partial<FormState<T, S, F>> = { formData, schema };\n    let newFormData = formData;\n\n    if (omitExtraData === true && liveOmit === true) {\n      const retrievedSchema = schemaUtils.retrieveSchema(schema, formData);\n      const pathSchema = schemaUtils.toPathSchema(retrievedSchema, '', formData);\n\n      const fieldNames = this.getFieldNames(pathSchema, formData);\n\n      newFormData = this.getUsedFormData(formData, fieldNames);\n      state = {\n        formData: newFormData,\n      };\n    }\n\n    if (mustValidate) {\n      const schemaValidation = this.validate(newFormData);\n      let errors = schemaValidation.errors;\n      let errorSchema = schemaValidation.errorSchema;\n      const schemaValidationErrors = errors;\n      const schemaValidationErrorSchema = errorSchema;\n      if (extraErrors) {\n        const merged = validationDataMerge(schemaValidation, extraErrors);\n        errorSchema = merged.errorSchema;\n        errors = merged.errors;\n      }\n      state = {\n        formData: newFormData,\n        errors,\n        errorSchema,\n        schemaValidationErrors,\n        schemaValidationErrorSchema,\n      };\n    } else if (!noValidate && newErrorSchema) {\n      const errorSchema = extraErrors\n        ? (mergeObjects(newErrorSchema, extraErrors, 'preventDuplicates') as ErrorSchema<T>)\n        : newErrorSchema;\n      state = {\n        formData: newFormData,\n        errorSchema: errorSchema,\n        errors: toErrorList(errorSchema),\n      };\n    }\n    this.setState(state as FormState<T, S, F>, () => onChange && onChange({ ...this.state, ...state }, id));\n  };\n\n  /**\n   * Callback function to handle reset form data.\n   * - Reset all fields with default values.\n   * - Reset validations and errors\n   *\n   */\n  reset = () => {\n    const { onChange } = this.props;\n    const newState = this.getStateFromProps(this.props, undefined);\n    const newFormData = newState.formData;\n    const state = {\n      formData: newFormData,\n      errorSchema: {},\n      errors: [] as unknown,\n      schemaValidationErrors: [] as unknown,\n      schemaValidationErrorSchema: {},\n    } as FormState<T, S, F>;\n\n    this.setState(state, () => onChange && onChange({ ...this.state, ...state }));\n  };\n\n  /** Callback function to handle when a field on the form is blurred. Calls the `onBlur` callback for the `Form` if it\n   * was provided.\n   *\n   * @param id - The unique `id` of the field that was blurred\n   * @param data - The data associated with the field that was blurred\n   */\n  onBlur = (id: string, data: any) => {\n    const { onBlur } = this.props;\n    if (onBlur) {\n      onBlur(id, data);\n    }\n  };\n\n  /** Callback function to handle when a field on the form is focused. Calls the `onFocus` callback for the `Form` if it\n   * was provided.\n   *\n   * @param id - The unique `id` of the field that was focused\n   * @param data - The data associated with the field that was focused\n   */\n  onFocus = (id: string, data: any) => {\n    const { onFocus } = this.props;\n    if (onFocus) {\n      onFocus(id, data);\n    }\n  };\n\n  /** Callback function to handle when the form is submitted. First, it prevents the default event behavior. Nothing\n   * happens if the target and currentTarget of the event are not the same. It will omit any extra data in the\n   * `formData` in the state if `omitExtraData` is true. It will validate the resulting `formData`, reporting errors\n   * via the `onError()` callback unless validation is disabled. Finally, it will add in any `extraErrors` and then call\n   * back the `onSubmit` callback if it was provided.\n   *\n   * @param event - The submit HTML form event\n   */\n  onSubmit = (event: FormEvent<any>) => {\n    event.preventDefault();\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    event.persist();\n    const { omitExtraData, extraErrors, noValidate, onSubmit } = this.props;\n    let { formData: newFormData } = this.state;\n    const { schema, schemaUtils } = this.state;\n\n    if (omitExtraData === true) {\n      const retrievedSchema = schemaUtils.retrieveSchema(schema, newFormData);\n      const pathSchema = schemaUtils.toPathSchema(retrievedSchema, '', newFormData);\n\n      const fieldNames = this.getFieldNames(pathSchema, newFormData);\n\n      newFormData = this.getUsedFormData(newFormData, fieldNames);\n    }\n\n    if (noValidate || this.validateForm()) {\n      // There are no errors generated through schema validation.\n      // Check for user provided errors and update state accordingly.\n      const errorSchema = extraErrors || {};\n      const errors = extraErrors ? toErrorList(extraErrors) : [];\n      this.setState(\n        {\n          formData: newFormData,\n          errors,\n          errorSchema,\n          schemaValidationErrors: [],\n          schemaValidationErrorSchema: {},\n        },\n        () => {\n          if (onSubmit) {\n            onSubmit({ ...this.state, formData: newFormData, status: 'submitted' }, event);\n          }\n        }\n      );\n    }\n  };\n\n  /** Returns the registry for the form */\n  getRegistry(): Registry<T, S, F> {\n    const { translateString: customTranslateString, uiSchema = {} } = this.props;\n    const { schemaUtils } = this.state;\n    const { fields, templates, widgets, formContext, translateString } = getDefaultRegistry<T, S, F>();\n    return {\n      fields: { ...fields, ...this.props.fields },\n      templates: {\n        ...templates,\n        ...this.props.templates,\n        ButtonTemplates: {\n          ...templates.ButtonTemplates,\n          ...this.props.templates?.ButtonTemplates,\n        },\n      },\n      widgets: { ...widgets, ...this.props.widgets },\n      rootSchema: this.props.schema,\n      formContext: this.props.formContext || formContext,\n      schemaUtils,\n      translateString: customTranslateString || translateString,\n      globalUiOptions: uiSchema[UI_GLOBAL_OPTIONS_KEY],\n    };\n  }\n\n  /** Provides a function that can be used to programmatically submit the `Form` */\n  submit() {\n    if (this.formElement.current) {\n      this.formElement.current.dispatchEvent(\n        new CustomEvent('submit', {\n          cancelable: true,\n        })\n      );\n      this.formElement.current.requestSubmit();\n    }\n  }\n\n  /** Attempts to focus on the field associated with the `error`. Uses the `property` field to compute path of the error\n   * field, then, using the `idPrefix` and `idSeparator` converts that path into an id. Then the input element with that\n   * id is attempted to be found using the `formElement` ref. If it is located, then it is focused.\n   *\n   * @param error - The error on which to focus\n   */\n  focusOnError(error: RJSFValidationError) {\n    const { idPrefix = 'root', idSeparator = '_' } = this.props;\n    const { property } = error;\n    const path = _toPath(property);\n    if (path[0] === '') {\n      // Most of the time the `.foo` property results in the first element being empty, so replace it with the idPrefix\n      path[0] = idPrefix;\n    } else {\n      // Otherwise insert the idPrefix into the first location using unshift\n      path.unshift(idPrefix);\n    }\n\n    const elementId = path.join(idSeparator);\n    let field = this.formElement.current.elements[elementId];\n    if (!field) {\n      // if not an exact match, try finding an input starting with the element id (like radio buttons or checkboxes)\n      field = this.formElement.current.querySelector(`input[id^=${elementId}`);\n    }\n    if (field && field.length) {\n      // If we got a list with length > 0\n      field = field[0];\n    }\n    if (field) {\n      field.focus();\n    }\n  }\n\n  /** Programmatically validate the form. If `onError` is provided, then it will be called with the list of errors the\n   * same way as would happen on form submission.\n   *\n   * @returns - True if the form is valid, false otherwise.\n   */\n  validateForm() {\n    const { extraErrors, extraErrorsBlockSubmit, focusOnFirstError, onError } = this.props;\n    const { formData, errors: prevErrors } = this.state;\n    const schemaValidation = this.validate(formData);\n    let errors = schemaValidation.errors;\n    let errorSchema = schemaValidation.errorSchema;\n    const schemaValidationErrors = errors;\n    const schemaValidationErrorSchema = errorSchema;\n    const hasError = errors.length > 0 || (extraErrors && extraErrorsBlockSubmit);\n    if (hasError) {\n      if (extraErrors) {\n        const merged = validationDataMerge(schemaValidation, extraErrors);\n        errorSchema = merged.errorSchema;\n        errors = merged.errors;\n      }\n      if (focusOnFirstError) {\n        if (typeof focusOnFirstError === 'function') {\n          focusOnFirstError(errors[0]);\n        } else {\n          this.focusOnError(errors[0]);\n        }\n      }\n      this.setState(\n        {\n          errors,\n          errorSchema,\n          schemaValidationErrors,\n          schemaValidationErrorSchema,\n        },\n        () => {\n          if (onError) {\n            onError(errors);\n          } else {\n            console.error('Form validation failed', errors);\n          }\n        }\n      );\n    } else if (prevErrors.length > 0) {\n      this.setState({\n        errors: [],\n        errorSchema: {},\n        schemaValidationErrors: [],\n        schemaValidationErrorSchema: {},\n      });\n    }\n    return !hasError;\n  }\n\n  /** Renders the `Form` fields inside the <form> | `tagName` or `_internalFormWrapper`, rendering any errors if\n   * needed along with the submit button or any children of the form.\n   */\n  render() {\n    const {\n      children,\n      id,\n      idPrefix,\n      idSeparator,\n      className = '',\n      tagName,\n      name,\n      method,\n      target,\n      action,\n      autoComplete,\n      enctype,\n      acceptcharset,\n      noHtml5Validate = false,\n      disabled = false,\n      readonly = false,\n      formContext,\n      showErrorList = 'top',\n      _internalFormWrapper,\n    } = this.props;\n\n    const { schema, uiSchema, formData, errorSchema, idSchema } = this.state;\n    const registry = this.getRegistry();\n    const { SchemaField: _SchemaField } = registry.fields;\n    const { SubmitButton } = registry.templates.ButtonTemplates;\n    // The `semantic-ui` and `material-ui` themes have `_internalFormWrapper`s that take an `as` prop that is the\n    // PropTypes.elementType to use for the inner tag, so we'll need to pass `tagName` along if it is provided.\n    // NOTE, the `as` prop is native to `semantic-ui` and is emulated in the `material-ui` theme\n    const as = _internalFormWrapper ? tagName : undefined;\n    const FormTag = _internalFormWrapper || tagName || 'form';\n\n    let { [SUBMIT_BTN_OPTIONS_KEY]: submitOptions = {} } = getUiOptions<T, S, F>(uiSchema);\n    if (disabled) {\n      submitOptions = { ...submitOptions, props: { ...submitOptions.props, disabled: true } };\n    }\n    const submitUiSchema = { [UI_OPTIONS_KEY]: { [SUBMIT_BTN_OPTIONS_KEY]: submitOptions } };\n\n    return (\n      <FormTag\n        className={className ? className : 'rjsf'}\n        id={id}\n        name={name}\n        method={method}\n        target={target}\n        action={action}\n        autoComplete={autoComplete}\n        encType={enctype}\n        acceptCharset={acceptcharset}\n        noValidate={noHtml5Validate}\n        onSubmit={this.onSubmit}\n        as={as}\n        ref={this.formElement}\n      >\n        {showErrorList === 'top' && this.renderErrors(registry)}\n        <_SchemaField\n          name=''\n          schema={schema}\n          uiSchema={uiSchema}\n          errorSchema={errorSchema}\n          idSchema={idSchema}\n          idPrefix={idPrefix}\n          idSeparator={idSeparator}\n          formContext={formContext}\n          formData={formData}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          onFocus={this.onFocus}\n          registry={registry}\n          disabled={disabled}\n          readonly={readonly}\n        />\n\n        {children ? children : <SubmitButton uiSchema={submitUiSchema} registry={registry} />}\n        {showErrorList === 'bottom' && this.renderErrors(registry)}\n      </FormTag>\n    );\n  }\n}\n", "import { ComponentType, ForwardedRef, forwardRef } from 'react';\nimport Form, { FormProps } from './components/Form';\nimport { FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The properties for the `withTheme` function, essentially a subset of properties from the `FormProps` that can be\n * overridden while creating a theme\n */\nexport type ThemeProps<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> = Pick<\n  FormProps<T, S, F>,\n  'fields' | 'templates' | 'widgets' | '_internalFormWrapper'\n>;\n\n/** A Higher-Order component that creates a wrapper around a `Form` with the overrides from the `WithThemeProps` */\nexport default function withTheme<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  themeProps: ThemeProps<T, S, F>\n): ComponentType<FormProps<T, S, F>> {\n  return forwardRef(\n    ({ fields, widgets, templates, ...directProps }: FormProps<T, S, F>, ref: ForwardedRef<Form<T, S, F>>) => {\n      fields = { ...themeProps?.fields, ...fields };\n      widgets = { ...themeProps?.widgets, ...widgets };\n      templates = {\n        ...themeProps?.templates,\n        ...templates,\n        ButtonTemplates: {\n          ...themeProps?.templates?.ButtonTemplates,\n          ...templates?.ButtonTemplates,\n        },\n      };\n\n      return (\n        <Form<T, S, F>\n          {...themeProps}\n          {...directProps}\n          fields={fields}\n          widgets={widgets}\n          templates={templates}\n          ref={ref}\n        />\n      );\n    }\n  );\n}\n", "import Form, { FormProps, FormState, IChangeEvent } from './components/Form';\nimport withTheme, { ThemeProps } from './withTheme';\nimport getDefaultRegistry from './getDefaultRegistry';\n\nexport type { FormProps, FormState, IChangeEvent, ThemeProps };\n\nexport { withTheme, getDefaultRegistry };\nexport default Form;\n", "/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n\nimport { ITranslator, nullTranslator } from '@jupyterlab/translation';\nimport { JSONExt, ReadonlyJSONObject } from '@lumino/coreutils';\n\nimport Form, { FormProps, IChangeEvent } from '@rjsf/core';\n\nimport {\n  ADDITIONAL_PROPERTY_FLAG,\n  ArrayFieldTemplateProps,\n  canExpand,\n  FieldTemplateProps,\n  getTemplate,\n  ObjectFieldTemplateProps,\n  Registry,\n  UiSchema\n} from '@rjsf/utils';\n\nimport React from 'react';\nimport {\n  addIcon,\n  caretDownIcon,\n  caretUpIcon,\n  closeIcon,\n  LabIcon\n} from '../icon';\n\n/**\n * Default `ui:options` for the UiSchema.\n */\nexport const DEFAULT_UI_OPTIONS = {\n  /**\n   * This prevents the submit button from being rendered, by default, as it is\n   * almost never what is wanted.\n   *\n   * Provide any `uiSchema#/ui:options/submitButtonOptions` to override this.\n   */\n  submitButtonOptions: {\n    norender: true\n  }\n};\n\n/**\n * Form component namespace.\n */\nexport namespace FormComponent {\n  export interface IButtonProps {\n    /**\n     * Button style.\n     */\n    buttonStyle?: 'icons' | 'text';\n    /**\n     * Translator for button text.\n     */\n    translator?: ITranslator;\n  }\n\n  /**\n   * Properties for React JSON schema form's container template (array and object).\n   */\n  export interface ILabCustomizerProps extends IButtonProps {\n    /**\n     * Whether the container is in compact mode or not.\n     * In compact mode the title and description are displayed more compactness.\n     */\n    compact?: boolean;\n    /**\n     * Whether to display if the current value is not the default one.\n     */\n    showModifiedFromDefault?: boolean;\n  }\n\n  /**\n   * Properties of the button to move an item.\n   */\n  export interface IMoveButtonProps extends IButtonProps {\n    /**\n     * Item index to move with this button.\n     */\n    item: ArrayFieldTemplateProps['items'][number];\n    /**\n     * Direction in which to move the item.\n     */\n    direction: 'up' | 'down';\n  }\n\n  /**\n   * Properties of the button to drop an item.\n   */\n  export interface IDropButtonProps extends IButtonProps {\n    /**\n     * Item index to drop with this button.\n     */\n    item: ArrayFieldTemplateProps['items'][number];\n  }\n\n  /**\n   * Properties of the button to add an item.\n   */\n  export interface IAddButtonProps extends IButtonProps {\n    /**\n     * Function to call to add an item.\n     */\n    onAddClick: ArrayFieldTemplateProps['onAddClick'];\n  }\n}\n/**\n * Button to move an item.\n *\n * @returns - the button as a react element.\n */\nexport const MoveButton = (\n  props: FormComponent.IMoveButtonProps\n): JSX.Element => {\n  const trans = (props.translator ?? nullTranslator).load('jupyterlab');\n  let buttonContent: JSX.Element | string;\n\n  /**\n   * Whether the button is disabled or not.\n   */\n  const disabled = () => {\n    if (props.direction === 'up') {\n      return !props.item.hasMoveUp;\n    } else {\n      return !props.item.hasMoveDown;\n    }\n  };\n\n  if (props.buttonStyle === 'icons') {\n    const iconProps: LabIcon.IReactProps = {\n      tag: 'span',\n      elementSize: 'xlarge',\n      elementPosition: 'center'\n    };\n    buttonContent =\n      props.direction === 'up' ? (\n        <caretUpIcon.react {...iconProps}></caretUpIcon.react>\n      ) : (\n        <caretDownIcon.react {...iconProps}></caretDownIcon.react>\n      );\n  } else {\n    buttonContent =\n      props.direction === 'up' ? trans.__('Move up') : trans.__('Move down');\n  }\n\n  const moveTo =\n    props.direction === 'up' ? props.item.index - 1 : props.item.index + 1;\n\n  return (\n    <button\n      className=\"jp-mod-styled jp-mod-reject jp-ArrayOperationsButton\"\n      onClick={props.item.onReorderClick(props.item.index, moveTo)}\n      disabled={disabled()}\n    >\n      {buttonContent}\n    </button>\n  );\n};\n\n/**\n * Button to drop an item.\n *\n * @returns - the button as a react element.\n */\nexport const DropButton = (\n  props: FormComponent.IDropButtonProps\n): JSX.Element => {\n  const trans = (props.translator ?? nullTranslator).load('jupyterlab');\n  let buttonContent: JSX.Element | string;\n\n  if (props.buttonStyle === 'icons') {\n    buttonContent = (\n      <closeIcon.react\n        tag=\"span\"\n        elementSize=\"xlarge\"\n        elementPosition=\"center\"\n      />\n    );\n  } else {\n    buttonContent = trans.__('Remove');\n  }\n\n  return (\n    <button\n      className=\"jp-mod-styled jp-mod-warn jp-ArrayOperationsButton\"\n      onClick={props.item.onDropIndexClick(props.item.index)}\n    >\n      {buttonContent}\n    </button>\n  );\n};\n\n/**\n * Button to add an item.\n *\n * @returns - the button as a react element.\n */\nexport const AddButton = (\n  props: FormComponent.IAddButtonProps\n): JSX.Element => {\n  const trans = (props.translator ?? nullTranslator).load('jupyterlab');\n  let buttonContent: JSX.Element | string;\n\n  if (props.buttonStyle === 'icons') {\n    buttonContent = (\n      <addIcon.react tag=\"span\" elementSize=\"xlarge\" elementPosition=\"center\" />\n    );\n  } else {\n    buttonContent = trans.__('Add');\n  }\n\n  return (\n    <button\n      className=\"jp-mod-styled jp-mod-reject jp-ArrayOperationsButton\"\n      onClick={props.onAddClick}\n    >\n      {buttonContent}\n    </button>\n  );\n};\n\nexport interface ILabCustomizerOptions<P>\n  extends FormComponent.ILabCustomizerProps {\n  name?: string;\n  component: React.FunctionComponent<\n    P & Required<FormComponent.ILabCustomizerProps>\n  >;\n}\n\nfunction customizeForLab<P = any>(\n  options: ILabCustomizerOptions<P>\n): React.FunctionComponent<P> {\n  const {\n    component,\n    name,\n    buttonStyle,\n    compact,\n    showModifiedFromDefault,\n    translator\n  } = options;\n\n  const isCompact = compact ?? false;\n  const button = buttonStyle ?? (isCompact ? 'icons' : 'text');\n\n  const factory = (props: P) =>\n    component({\n      ...props,\n      buttonStyle: button,\n      compact: isCompact,\n      showModifiedFromDefault: showModifiedFromDefault ?? true,\n      translator: translator ?? nullTranslator\n    });\n  if (name) {\n    factory.displayName = name;\n  }\n  return factory;\n}\n\n/**\n * Fetch field templates from RJSF.\n */\nfunction getTemplates(registry: Registry, uiSchema: UiSchema | undefined) {\n  const TitleField = getTemplate<'TitleFieldTemplate'>(\n    'TitleFieldTemplate',\n    registry,\n    uiSchema\n  );\n\n  const DescriptionField = getTemplate<'DescriptionFieldTemplate'>(\n    'DescriptionFieldTemplate',\n    registry,\n    uiSchema\n  );\n\n  return { TitleField, DescriptionField };\n}\n\n/**\n * Template to allow for custom buttons to re-order/remove entries in an array.\n * Necessary to create accessible buttons.\n */\nconst CustomArrayTemplateFactory = (\n  options: FormComponent.ILabCustomizerProps\n) =>\n  customizeForLab<ArrayFieldTemplateProps>({\n    ...options,\n    name: 'JupyterLabArrayTemplate',\n    component: props => {\n      const { schema, registry, uiSchema, required } = props;\n      const commonProps = { schema, registry, uiSchema, required };\n      const { TitleField, DescriptionField } = getTemplates(registry, uiSchema);\n\n      return (\n        <div className={props.className}>\n          {props.compact ? (\n            <div className=\"jp-FormGroup-compactTitle\">\n              <div\n                className=\"jp-FormGroup-fieldLabel jp-FormGroup-contentItem\"\n                id={`${props.idSchema.$id}__title`}\n              >\n                {props.title || ''}\n              </div>\n              <div\n                className=\"jp-FormGroup-description\"\n                id={`${props.idSchema.$id}-description`}\n              >\n                {props.schema.description || ''}\n              </div>\n            </div>\n          ) : (\n            <>\n              {props.title && (\n                <TitleField\n                  {...commonProps}\n                  title={props.title}\n                  id={`${props.idSchema.$id}-title`}\n                />\n              )}\n              <DescriptionField\n                {...commonProps}\n                id={`${props.idSchema.$id}-description`}\n                description={props.schema.description ?? ''}\n              />\n            </>\n          )}\n          {props.items.map(item => {\n            return (\n              <div key={item.key} className={item.className}>\n                {item.children}\n                <div className=\"jp-ArrayOperations\">\n                  <MoveButton\n                    buttonStyle={props.buttonStyle}\n                    translator={props.translator}\n                    item={item}\n                    direction=\"up\"\n                  />\n                  <MoveButton\n                    buttonStyle={props.buttonStyle}\n                    translator={props.translator}\n                    item={item}\n                    direction=\"down\"\n                  />\n                  <DropButton\n                    buttonStyle={props.buttonStyle}\n                    translator={props.translator}\n                    item={item}\n                  />\n                </div>\n              </div>\n            );\n          })}\n          {props.canAdd && (\n            <AddButton\n              onAddClick={props.onAddClick}\n              buttonStyle={props.buttonStyle}\n              translator={props.translator}\n            />\n          )}\n        </div>\n      );\n    }\n  });\n\n/**\n * Template with custom add button, necessary for accessibility and internationalization.\n */\nconst CustomObjectTemplateFactory = (\n  options: FormComponent.ILabCustomizerProps\n) =>\n  customizeForLab<ObjectFieldTemplateProps>({\n    ...options,\n    name: 'JupyterLabObjectTemplate',\n    component: props => {\n      const { schema, registry, uiSchema, required } = props;\n      const commonProps = { schema, registry, uiSchema, required };\n      const { TitleField, DescriptionField } = getTemplates(registry, uiSchema);\n\n      return (\n        <fieldset id={props.idSchema.$id}>\n          {props.compact ? (\n            <div className=\"jp-FormGroup-compactTitle\">\n              <div\n                className=\"jp-FormGroup-fieldLabel jp-FormGroup-contentItem\"\n                id={`${props.idSchema.$id}__title`}\n              >\n                {props.title || ''}\n              </div>\n              <div\n                className=\"jp-FormGroup-description\"\n                id={`${props.idSchema.$id}__description`}\n              >\n                {props.schema.description || ''}\n              </div>\n            </div>\n          ) : (\n            <>\n              {(props.title ||\n                (props.uiSchema || JSONExt.emptyObject)['ui:title']) && (\n                <TitleField\n                  {...commonProps}\n                  id={`${props.idSchema.$id}__title`}\n                  title={\n                    props.title ||\n                    `${(props.uiSchema || JSONExt.emptyObject)['ui:title']}` ||\n                    ''\n                  }\n                />\n              )}\n              <DescriptionField\n                {...commonProps}\n                id={`${props.idSchema.$id}__description`}\n                description={props.schema.description ?? ''}\n              />\n            </>\n          )}\n          {props.properties.map(property => property.content)}\n          {canExpand(props.schema, props.uiSchema, props.formData) && (\n            <AddButton\n              onAddClick={props.onAddClick(props.schema)}\n              buttonStyle={props.buttonStyle}\n              translator={props.translator}\n            />\n          )}\n        </fieldset>\n      );\n    }\n  });\n\n/**\n * Renders the modified indicator and errors\n */\nconst CustomTemplateFactory = (options: FormComponent.ILabCustomizerProps) =>\n  customizeForLab<FieldTemplateProps>({\n    ...options,\n    name: 'JupyterLabFieldTemplate',\n    component: props => {\n      const trans = (props.translator ?? nullTranslator).load('jupyterlab');\n      let isModified = false;\n      let defaultValue: any;\n      const {\n        formData,\n        schema,\n        label,\n        displayLabel,\n        id,\n        formContext,\n        errors,\n        rawErrors,\n        children,\n        onKeyChange,\n        onDropPropertyClick\n      } = props;\n\n      const { defaultFormData } = formContext;\n      const schemaIds = id.split('_');\n      schemaIds.shift();\n      const schemaId = schemaIds.join('.');\n\n      const isRoot = schemaId === '';\n\n      const hasCustomField =\n        schemaId === (props.uiSchema || JSONExt.emptyObject)['ui:field'];\n\n      if (props.showModifiedFromDefault) {\n        /**\n         * Determine if the field has been modified.\n         * Schema Id is formatted as 'root_<field name>.<nested field name>'\n         * This logic parses out the field name to find the default value\n         * before determining if the field has been modified.\n         */\n\n        defaultValue = schemaIds.reduce(\n          (acc, key) => acc?.[key],\n          defaultFormData\n        );\n        isModified =\n          !isRoot &&\n          formData !== undefined &&\n          defaultValue !== undefined &&\n          !schema.properties &&\n          schema.type !== 'array' &&\n          !JSONExt.deepEqual(formData, defaultValue);\n      }\n\n      const needsDescription =\n        !isRoot &&\n        schema.type != 'object' &&\n        id !=\n          'jp-SettingsEditor-@jupyterlab/shortcuts-extension:shortcuts_shortcuts';\n\n      // While we can implement \"remove\" button for array items in array template,\n      // object templates do not provide a way to do this instead we need to add\n      // buttons here (and first check if the field can be removed = is additional).\n      const isAdditional = schema.hasOwnProperty(ADDITIONAL_PROPERTY_FLAG);\n\n      const isItem: boolean = !(\n        schema.type === 'object' || schema.type === 'array'\n      );\n\n      return (\n        <div\n          className={`form-group ${\n            displayLabel || schema.type === 'boolean' ? 'small-field' : ''\n          }`}\n        >\n          {!hasCustomField &&\n            (rawErrors ? (\n              // Shows a red indicator for fields that have validation errors\n              <div className=\"jp-modifiedIndicator jp-errorIndicator\" />\n            ) : (\n              // Only show the modified indicator if there are no errors\n              isModified && <div className=\"jp-modifiedIndicator\" />\n            ))}\n          <div\n            className={`jp-FormGroup-content ${\n              props.compact\n                ? 'jp-FormGroup-contentCompact'\n                : 'jp-FormGroup-contentNormal'\n            }`}\n          >\n            {isItem && displayLabel && !isRoot && label && !isAdditional ? (\n              props.compact ? (\n                <div className=\"jp-FormGroup-compactTitle\">\n                  <div className=\"jp-FormGroup-fieldLabel jp-FormGroup-contentItem\">\n                    {label}\n                  </div>\n                  {isItem && schema.description && needsDescription && (\n                    <div className=\"jp-FormGroup-description\">\n                      {schema.description}\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <h3 className=\"jp-FormGroup-fieldLabel jp-FormGroup-contentItem\">\n                  {label}\n                </h3>\n              )\n            ) : (\n              <></>\n            )}\n            {isAdditional && (\n              <input\n                className=\"jp-FormGroup-contentItem jp-mod-styled\"\n                type=\"text\"\n                onBlur={event => onKeyChange(event.target.value)}\n                defaultValue={label}\n              />\n            )}\n            <div\n              className={`${\n                isRoot\n                  ? 'jp-root'\n                  : schema.type === 'object'\n                  ? 'jp-objectFieldWrapper'\n                  : schema.type === 'array'\n                  ? 'jp-arrayFieldWrapper'\n                  : 'jp-inputFieldWrapper jp-FormGroup-contentItem'\n              }`}\n            >\n              {children}\n            </div>\n            {isAdditional && (\n              <button\n                className=\"jp-FormGroup-contentItem jp-mod-styled jp-mod-warn jp-FormGroup-removeButton\"\n                onClick={onDropPropertyClick(label)}\n              >\n                {trans.__('Remove')}\n              </button>\n            )}\n            {!props.compact && schema.description && needsDescription && (\n              <div className=\"jp-FormGroup-description\">\n                {schema.description}\n              </div>\n            )}\n            {isModified &&\n              defaultValue !== undefined &&\n              schema.type !== 'object' && (\n                <div className=\"jp-FormGroup-default\">\n                  {trans.__(\n                    'Default: %1',\n                    defaultValue !== null\n                      ? defaultValue.toLocaleString()\n                      : 'null'\n                  )}\n                </div>\n              )}\n            <div className=\"validationErrors\">{errors}</div>\n          </div>\n        </div>\n      );\n    }\n  });\n\n/**\n * FormComponent properties\n */\nexport interface IFormComponentProps<T = ReadonlyJSONObject>\n  extends FormProps<T>,\n    FormComponent.ILabCustomizerProps {\n  /**\n   *\n   */\n  formData: T;\n  /**\n   *\n   */\n  onChange: (e: IChangeEvent<T>) => any;\n  /**\n   *\n   */\n  formContext?: unknown;\n}\n\n/**\n * Generic rjsf form component for JupyterLab UI.\n */\nexport function FormComponent(props: IFormComponentProps): JSX.Element {\n  const {\n    buttonStyle,\n    compact,\n    showModifiedFromDefault,\n    translator,\n    formContext,\n    ...others\n  } = props;\n\n  const uiSchema = { ...(others.uiSchema || JSONExt.emptyObject) } as UiSchema;\n\n  uiSchema['ui:options'] = { ...DEFAULT_UI_OPTIONS, ...uiSchema['ui:options'] };\n\n  others.uiSchema = uiSchema;\n\n  const { FieldTemplate, ArrayFieldTemplate, ObjectFieldTemplate } =\n    props.templates || JSONExt.emptyObject;\n\n  const customization = {\n    buttonStyle,\n    compact,\n    showModifiedFromDefault,\n    translator\n  };\n\n  const fieldTemplate = React.useMemo(\n    () => FieldTemplate ?? CustomTemplateFactory(customization),\n    [FieldTemplate, buttonStyle, compact, showModifiedFromDefault, translator]\n  ) as React.FunctionComponent;\n\n  const arrayTemplate = React.useMemo(\n    () => ArrayFieldTemplate ?? CustomArrayTemplateFactory(customization),\n    [\n      ArrayFieldTemplate,\n      buttonStyle,\n      compact,\n      showModifiedFromDefault,\n      translator\n    ]\n  ) as React.FunctionComponent;\n\n  const objectTemplate = React.useMemo(\n    () => ObjectFieldTemplate ?? CustomObjectTemplateFactory(customization),\n    [\n      ObjectFieldTemplate,\n      buttonStyle,\n      compact,\n      showModifiedFromDefault,\n      translator\n    ]\n  ) as React.FunctionComponent;\n\n  const templates: Record<string, React.FunctionComponent> = {\n    FieldTemplate: fieldTemplate,\n    ArrayFieldTemplate: arrayTemplate,\n    ObjectFieldTemplate: objectTemplate\n  };\n\n  return (\n    <Form templates={templates} formContext={formContext as any} {...others} />\n  );\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nexport const DEFAULT_STYLE_CLASS = 'jp-DefaultStyle';\n\nexport interface IElementRefProps<E extends HTMLElement> {\n  /** Ref handler to access the instance of the internal HTML element. */\n  elementRef?: (ref: E | null) => void;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport * as React from 'react';\nimport { caretDownEmptyIcon, LabIcon } from '../icon';\nimport { classes } from '../utils';\nimport { DEFAULT_STYLE_CLASS, IElementRefProps } from './interface';\n\nexport const HTML_SELECT_CLASS = 'jp-HTMLSelect';\n\nexport interface IOptionProps {\n  /**\n   * A space-delimited list of class names\n   */\n  className?: string;\n\n  /**\n   * Whether this option is non-interactive.\n   */\n  disabled?: boolean;\n\n  /**\n   * Label text for this option. If omitted, `value` is used as the label.\n   */\n  label?: string;\n\n  /**\n   * Value of this option.\n   */\n  value: string | number;\n}\n\nexport interface IHTMLSelectProps\n  extends IElementRefProps<HTMLSelectElement>,\n    React.SelectHTMLAttributes<HTMLSelectElement> {\n  defaultStyle?: boolean;\n\n  iconProps?: LabIcon.IProps;\n\n  icon?: LabIcon;\n\n  options?: Array<string | number | IOptionProps>;\n}\n\nexport class HTMLSelect extends React.Component<IHTMLSelectProps> {\n  public render(): JSX.Element {\n    const {\n      className,\n      defaultStyle = true,\n      disabled,\n      elementRef,\n      iconProps,\n      icon = caretDownEmptyIcon,\n      options = [],\n      ...htmlProps\n    } = this.props;\n\n    const cls = classes(\n      HTML_SELECT_CLASS,\n      {\n        [DEFAULT_STYLE_CLASS]: defaultStyle\n      },\n      className\n    );\n\n    const optionChildren = options.map(option => {\n      const props: IOptionProps =\n        typeof option === 'object' ? option : { value: option };\n      return (\n        <option {...props} key={props.value}>\n          {props.label || props.value}\n        </option>\n      );\n    });\n\n    return (\n      <div className={cls}>\n        <select\n          disabled={disabled}\n          ref={elementRef}\n          {...htmlProps}\n          multiple={false}\n        >\n          {optionChildren}\n          {htmlProps.children}\n        </select>\n        <icon.react\n          {...{\n            tag: 'span',\n            stylesheet: 'select',\n            right: '7px',\n            top: '5px',\n            ...iconProps\n          }}\n        />\n      </div>\n    );\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { Widget } from '@lumino/widgets';\n\n/**\n * A Lumino widget which wraps an IFrame.\n */\nexport class IFrame extends Widget {\n  /**\n   * Create a new IFrame widget.\n   */\n  constructor(options: IFrame.IOptions = {}) {\n    super({ node: Private.createNode() });\n    this.addClass('jp-IFrame');\n    this.sandbox = options.sandbox || [];\n    this.referrerPolicy = options.referrerPolicy || 'no-referrer';\n  }\n\n  /**\n   * Referrer policy for the iframe.\n   *\n   * #### Notes\n   * By default, `no-referrer` is chosen.\n   *\n   * For more information, see\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/referrerPolicy\n   */\n  get referrerPolicy(): IFrame.ReferrerPolicy {\n    return this._referrerPolicy;\n  }\n  set referrerPolicy(value: IFrame.ReferrerPolicy) {\n    if (this._referrerPolicy === value) {\n      return;\n    }\n    this._referrerPolicy = value;\n    const iframe = this.node.querySelector('iframe')!;\n    iframe.setAttribute('referrerpolicy', value);\n  }\n\n  /**\n   * Exceptions to the sandboxing.\n   *\n   * #### Notes\n   * By default, all sandboxing security policies are enabled.\n   * This setting allows the user to selectively disable these\n   * policies. This should be done with care, as it can\n   * introduce security risks, and possibly allow malicious\n   * sites to execute code in a JupyterLab session.\n   *\n   * For more information, see\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\n   */\n  get sandbox(): IFrame.SandboxExceptions[] {\n    return this._sandbox.slice();\n  }\n  set sandbox(values: IFrame.SandboxExceptions[]) {\n    this._sandbox = values.slice();\n    const iframe = this.node.querySelector('iframe')!;\n    const exceptions = values.length ? values.join(' ') : '';\n    iframe.setAttribute('sandbox', exceptions);\n  }\n\n  /**\n   * The url of the IFrame.\n   */\n  get url(): string {\n    return this.node.querySelector('iframe')!.getAttribute('src') || '';\n  }\n  set url(url: string) {\n    this.node.querySelector('iframe')!.setAttribute('src', url);\n  }\n\n  private _sandbox: IFrame.SandboxExceptions[] = [];\n  private _referrerPolicy: IFrame.ReferrerPolicy;\n}\n\n/**\n * A namespace for IFrame widget statics.\n */\nexport namespace IFrame {\n  /**\n   * Referrer policy for the iframe.\n   *\n   * User documentation for the policies can be found here:\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/referrerPolicy\n   */\n  export type ReferrerPolicy =\n    | 'no-referrer'\n    | 'no-referrer-when-downgrade'\n    | 'origin'\n    | 'origin-when-cross-origin'\n    | 'same-origin'\n    | 'strict-origin'\n    | 'strict-origin-when-cross-origin'\n    | 'unsafe-url';\n\n  /**\n   * Exceptions to the iframe sandboxing policies.\n   * These are specified here:\n   * https://www.w3.org/TR/2011/WD-html5-20110525/the-iframe-element.html#attr-iframe-sandbox\n   *\n   * More user-friendly documentation can be found here:\n   * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#sandbox\n   */\n  export type SandboxExceptions =\n    | 'allow-downloads'\n    | 'allow-forms'\n    | 'allow-modals'\n    | 'allow-orientation-lock'\n    | 'allow-pointer-lock'\n    | 'allow-popups'\n    | 'popups-to-escape-sandbox'\n    | 'allow-presentation'\n    | 'allow-same-origin'\n    | 'allow-scripts'\n    | 'allow-storage-access-by-user-activation'\n    | 'allow-top-navigation'\n    | 'allow-top-navigation-by-user-activation';\n\n  /**\n   * Options for creating a new IFrame widget.\n   */\n  export interface IOptions {\n    /**\n     * Exceptions for the iframe sandbox.\n     */\n    sandbox?: SandboxExceptions[];\n\n    /**\n     * Referrer policy for the iframe.\n     */\n    referrerPolicy?: ReferrerPolicy;\n  }\n}\n\n/**\n * A namespace for private data.\n */\nnamespace Private {\n  /**\n   * Create the main content node of an iframe widget.\n   */\n  export function createNode(): HTMLElement {\n    const node = document.createElement('div');\n    const iframe = document.createElement('iframe');\n    iframe.setAttribute('sandbox', '');\n    iframe.style.height = '100%';\n    iframe.style.width = '100%';\n    node.appendChild(iframe);\n    return node;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for array-specific algorithms.\n */\nexport namespace ArrayExt {\n  /**\n   * Find the index of the first occurrence of a value in an array.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param value - The value to locate in the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first occurrence of the value, or `-1`\n   *   if the value is not found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four', 'one'];\n   * ArrayExt.firstIndexOf(data, 'red');        // -1\n   * ArrayExt.firstIndexOf(data, 'one');        // 0\n   * ArrayExt.firstIndexOf(data, 'one', 1);     // 4\n   * ArrayExt.firstIndexOf(data, 'two', 2);     // -1\n   * ArrayExt.firstIndexOf(data, 'two', 2, 1);  // 1\n   * ```\n   */\n  export function firstIndexOf<T>(\n    array: ArrayLike<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start + i) % n;\n      if (array[j] === value) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the last occurrence of a value in an array.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param value - The value to locate in the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the last occurrence of the value, or `-1`\n   *   if the value is not found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four', 'one'];\n   * ArrayExt.lastIndexOf(data, 'red');        // -1\n   * ArrayExt.lastIndexOf(data, 'one');        // 4\n   * ArrayExt.lastIndexOf(data, 'one', 1);     // 0\n   * ArrayExt.lastIndexOf(data, 'two', 0);     // -1\n   * ArrayExt.lastIndexOf(data, 'two', 0, 1);  // 1\n   * ```\n   */\n  export function lastIndexOf<T>(\n    array: ArrayLike<T>,\n    value: T,\n    start = -1,\n    stop = 0\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (start < stop) {\n      span = start + 1 + (n - stop);\n    } else {\n      span = start - stop + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start - i + n) % n;\n      if (array[j] === value) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the first value which matches a predicate.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first matching value, or `-1` if no\n   *   matching value is found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findFirstIndex(data, isEven);       // 1\n   * ArrayExt.findFirstIndex(data, isEven, 4);    // 5\n   * ArrayExt.findFirstIndex(data, isEven, 6);    // -1\n   * ArrayExt.findFirstIndex(data, isEven, 6, 5); // 1\n   * ```\n   */\n  export function findFirstIndex<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start + i) % n;\n      if (fn(array[j], j)) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the last value which matches a predicate.\n   *\n   * @param object - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the last matching value, or `-1` if no\n   *   matching value is found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findLastIndex(data, isEven);        // 5\n   * ArrayExt.findLastIndex(data, isEven, 4);     // 3\n   * ArrayExt.findLastIndex(data, isEven, 0);     // -1\n   * ArrayExt.findLastIndex(data, isEven, 0, 1);  // 5\n   * ```\n   */\n  export function findLastIndex<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let d: number;\n    if (start < stop) {\n      d = start + 1 + (n - stop);\n    } else {\n      d = start - stop + 1;\n    }\n    for (let i = 0; i < d; ++i) {\n      let j = (start - i + n) % n;\n      if (fn(array[j], j)) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the first value which matches a predicate.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The first matching value, or `undefined` if no matching\n   *   value is found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findFirstValue(data, isEven);       // 2\n   * ArrayExt.findFirstValue(data, isEven, 2);    // 4\n   * ArrayExt.findFirstValue(data, isEven, 6);    // undefined\n   * ArrayExt.findFirstValue(data, isEven, 6, 5); // 2\n   * ```\n   */\n  export function findFirstValue<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): T | undefined {\n    let index = findFirstIndex(array, fn, start, stop);\n    return index !== -1 ? array[index] : undefined;\n  }\n\n  /**\n   * Find the last value which matches a predicate.\n   *\n   * @param object - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The last matching value, or `undefined` if no matching\n   *   value is found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findLastValue(data, isEven);        // 2\n   * ArrayExt.findLastValue(data, isEven, 4);     // 4\n   * ArrayExt.findLastValue(data, isEven, 0);     // undefined\n   * ArrayExt.findLastValue(data, isEven, 0, 1);  // 2\n   * ```\n   */\n  export function findLastValue<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): T | undefined {\n    let index = findLastIndex(array, fn, start, stop);\n    return index !== -1 ? array[index] : undefined;\n  }\n\n  /**\n   * Find the index of the first element which compares `>=` to a value.\n   *\n   * @param array - The sorted array-like object to search.\n   *\n   * @param value - The value to locate in the array.\n   *\n   * @param fn - The 3-way comparison function to apply to the values.\n   *   It should return `< 0` if an element is less than a value, `0` if\n   *   an element is equal to a value, or `> 0` if an element is greater\n   *   than a value.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first element which compares `>=` to the\n   *   value, or `length` if there is no such element. If the computed\n   *   index for `stop` is less than `start`, then the computed index\n   *   for `start` is returned.\n   *\n   * #### Notes\n   * The array must already be sorted in ascending order according to\n   * the comparison function.\n   *\n   * #### Complexity\n   * Logarithmic.\n   *\n   * #### Undefined Behavior\n   * Searching a range which is not sorted in ascending order.\n   *\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function numberCmp(a: number, b: number): number {\n   *   return a - b;\n   * }\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.lowerBound(data, 0, numberCmp);   // 0\n   * ArrayExt.lowerBound(data, 6, numberCmp);   // 3\n   * ArrayExt.lowerBound(data, 7, numberCmp);   // 3\n   * ArrayExt.lowerBound(data, -1, numberCmp);  // 0\n   * ArrayExt.lowerBound(data, 10, numberCmp);  // 6\n   * ```\n   */\n  export function lowerBound<T, U>(\n    array: ArrayLike<T>,\n    value: U,\n    fn: (element: T, value: U) => number,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let begin = start;\n    let span = stop - start + 1;\n    while (span > 0) {\n      let half = span >> 1;\n      let middle = begin + half;\n      if (fn(array[middle], value) < 0) {\n        begin = middle + 1;\n        span -= half + 1;\n      } else {\n        span = half;\n      }\n    }\n    return begin;\n  }\n\n  /**\n   * Find the index of the first element which compares `>` than a value.\n   *\n   * @param array - The sorted array-like object to search.\n   *\n   * @param value - The value to locate in the array.\n   *\n   * @param fn - The 3-way comparison function to apply to the values.\n   *   It should return `< 0` if an element is less than a value, `0` if\n   *   an element is equal to a value, or `> 0` if an element is greater\n   *   than a value.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first element which compares `>` than the\n   *   value, or `length` if there is no such element. If the computed\n   *   index for `stop` is less than `start`, then the computed index\n   *   for `start` is returned.\n   *\n   * #### Notes\n   * The array must already be sorted in ascending order according to\n   * the comparison function.\n   *\n   * #### Complexity\n   * Logarithmic.\n   *\n   * #### Undefined Behavior\n   * Searching a range which is not sorted in ascending order.\n   *\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function numberCmp(a: number, b: number): number {\n   *   return a - b;\n   * }\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.upperBound(data, 0, numberCmp);   // 1\n   * ArrayExt.upperBound(data, 6, numberCmp);   // 3\n   * ArrayExt.upperBound(data, 7, numberCmp);   // 5\n   * ArrayExt.upperBound(data, -1, numberCmp);  // 0\n   * ArrayExt.upperBound(data, 10, numberCmp);  // 6\n   * ```\n   */\n  export function upperBound<T, U>(\n    array: ArrayLike<T>,\n    value: U,\n    fn: (element: T, value: U) => number,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let begin = start;\n    let span = stop - start + 1;\n    while (span > 0) {\n      let half = span >> 1;\n      let middle = begin + half;\n      if (fn(array[middle], value) > 0) {\n        span = half;\n      } else {\n        begin = middle + 1;\n        span -= half + 1;\n      }\n    }\n    return begin;\n  }\n\n  /**\n   * Test whether two arrays are shallowly equal.\n   *\n   * @param a - The first array-like object to compare.\n   *\n   * @param b - The second array-like object to compare.\n   *\n   * @param fn - The comparison function to apply to the elements. It\n   *   should return `true` if the elements are \"equal\". The default\n   *   compares elements using strict `===` equality.\n   *\n   * @returns Whether the two arrays are shallowly equal.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * Modifying the length of the arrays while comparing.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let d1 = [0, 3, 4, 7, 7, 9];\n   * let d2 = [0, 3, 4, 7, 7, 9];\n   * let d3 = [42];\n   * ArrayExt.shallowEqual(d1, d2);  // true\n   * ArrayExt.shallowEqual(d2, d3);  // false\n   * ```\n   */\n  export function shallowEqual<T>(\n    a: ArrayLike<T>,\n    b: ArrayLike<T>,\n    fn?: (a: T, b: T) => boolean\n  ): boolean {\n    // Check for object identity first.\n    if (a === b) {\n      return true;\n    }\n\n    // Bail early if the lengths are different.\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    // Compare each element for equality.\n    for (let i = 0, n = a.length; i < n; ++i) {\n      if (fn ? !fn(a[i], b[i]) : a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    // The array are shallowly equal.\n    return true;\n  }\n\n  /**\n   * Create a slice of an array subject to an optional step.\n   *\n   * @param array - The array-like object of interest.\n   *\n   * @param options - The options for configuring the slice.\n   *\n   * @returns A new array with the specified values.\n   *\n   * @throws An exception if the slice `step` is `0`.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start`, `stop`, or `step` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.slice(data);                         // [0, 3, 4, 7, 7, 9]\n   * ArrayExt.slice(data, { start: 2 });           // [4, 7, 7, 9]\n   * ArrayExt.slice(data, { start: 0, stop: 4 });  // [0, 3, 4, 7]\n   * ArrayExt.slice(data, { step: 2 });            // [0, 4, 7]\n   * ArrayExt.slice(data, { step: -1 });           // [9, 7, 7, 4, 3, 0]\n   * ```\n   */\n  export function slice<T>(\n    array: ArrayLike<T>,\n    options: slice.IOptions = {}\n  ): T[] {\n    // Extract the options.\n    let { start, stop, step } = options;\n\n    // Set up the `step` value.\n    if (step === undefined) {\n      step = 1;\n    }\n\n    // Validate the step size.\n    if (step === 0) {\n      throw new Error('Slice `step` cannot be zero.');\n    }\n\n    // Look up the length of the array.\n    let n = array.length;\n\n    // Set up the `start` value.\n    if (start === undefined) {\n      start = step < 0 ? n - 1 : 0;\n    } else if (start < 0) {\n      start = Math.max(start + n, step < 0 ? -1 : 0);\n    } else if (start >= n) {\n      start = step < 0 ? n - 1 : n;\n    }\n\n    // Set up the `stop` value.\n    if (stop === undefined) {\n      stop = step < 0 ? -1 : n;\n    } else if (stop < 0) {\n      stop = Math.max(stop + n, step < 0 ? -1 : 0);\n    } else if (stop >= n) {\n      stop = step < 0 ? n - 1 : n;\n    }\n\n    // Compute the slice length.\n    let length;\n    if ((step < 0 && stop >= start) || (step > 0 && start >= stop)) {\n      length = 0;\n    } else if (step < 0) {\n      length = Math.floor((stop - start + 1) / step + 1);\n    } else {\n      length = Math.floor((stop - start - 1) / step + 1);\n    }\n\n    // Compute the sliced result.\n    let result: T[] = [];\n    for (let i = 0; i < length; ++i) {\n      result[i] = array[start + i * step];\n    }\n\n    // Return the result.\n    return result;\n  }\n\n  /**\n   * The namespace for the `slice` function statics.\n   */\n  export namespace slice {\n    /**\n     * The options for the `slice` function.\n     */\n    export interface IOptions {\n      /**\n       * The starting index of the slice, inclusive.\n       *\n       * Negative values are taken as an offset from the end\n       * of the array.\n       *\n       * The default is `0` if `step > 0` else `n - 1`.\n       */\n      start?: number;\n\n      /**\n       * The stopping index of the slice, exclusive.\n       *\n       * Negative values are taken as an offset from the end\n       * of the array.\n       *\n       * The default is `n` if `step > 0` else `-n - 1`.\n       */\n      stop?: number;\n\n      /**\n       * The step value for the slice.\n       *\n       * This must not be `0`.\n       *\n       * The default is `1`.\n       */\n      step?: number;\n    }\n  }\n\n  /**\n   * An array-like object which supports item assignment.\n   */\n  export type MutableArrayLike<T> = {\n    readonly length: number;\n    [index: number]: T;\n  };\n\n  /**\n   * Move an element in an array from one index to another.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param fromIndex - The index of the element to move. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * @param toIndex - The target index of the element. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `fromIndex` or `toIndex` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.move(data, 1, 2);  // [0, 2, 1, 3, 4]\n   * ArrayExt.move(data, 4, 2);  // [0, 2, 4, 1, 3]\n   * ```\n   */\n  export function move<T>(\n    array: MutableArrayLike<T>,\n    fromIndex: number,\n    toIndex: number\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (fromIndex < 0) {\n      fromIndex = Math.max(0, fromIndex + n);\n    } else {\n      fromIndex = Math.min(fromIndex, n - 1);\n    }\n    if (toIndex < 0) {\n      toIndex = Math.max(0, toIndex + n);\n    } else {\n      toIndex = Math.min(toIndex, n - 1);\n    }\n    if (fromIndex === toIndex) {\n      return;\n    }\n    let value = array[fromIndex];\n    let d = fromIndex < toIndex ? 1 : -1;\n    for (let i = fromIndex; i !== toIndex; i += d) {\n      array[i] = array[i + d];\n    }\n    array[toIndex] = value;\n  }\n\n  /**\n   * Reverse an array in-place.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param start - The index of the first element in the range to be\n   *   reversed, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   reversed, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or  `stop` index which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.reverse(data, 1, 3);  // [0, 3, 2, 1, 4]\n   * ArrayExt.reverse(data, 3);     // [0, 3, 2, 4, 1]\n   * ArrayExt.reverse(data);        // [1, 4, 2, 3, 0]\n   * ```\n   */\n  export function reverse<T>(\n    array: MutableArrayLike<T>,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    while (start < stop) {\n      let a = array[start];\n      let b = array[stop];\n      array[start++] = b;\n      array[stop--] = a;\n    }\n  }\n\n  /**\n   * Rotate the elements of an array in-place.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param delta - The amount of rotation to apply to the elements. A\n   *   positive value will rotate the elements to the left. A negative\n   *   value will rotate the elements to the right.\n   *\n   * @param start - The index of the first element in the range to be\n   *   rotated, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   rotated, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `delta`, `start`, or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.rotate(data, 2);        // [2, 3, 4, 0, 1]\n   * ArrayExt.rotate(data, -2);       // [0, 1, 2, 3, 4]\n   * ArrayExt.rotate(data, 10);       // [0, 1, 2, 3, 4]\n   * ArrayExt.rotate(data, 9);        // [4, 0, 1, 2, 3]\n   * ArrayExt.rotate(data, 2, 1, 3);  // [4, 2, 0, 1, 3]\n   * ```\n   */\n  export function rotate<T>(\n    array: MutableArrayLike<T>,\n    delta: number,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    if (start >= stop) {\n      return;\n    }\n    let length = stop - start + 1;\n    if (delta > 0) {\n      delta = delta % length;\n    } else if (delta < 0) {\n      delta = ((delta % length) + length) % length;\n    }\n    if (delta === 0) {\n      return;\n    }\n    let pivot = start + delta;\n    reverse(array, start, pivot - 1);\n    reverse(array, pivot, stop);\n    reverse(array, start, stop);\n  }\n\n  /**\n   * Fill an array with a static value.\n   *\n   * @param array - The mutable array-like object to fill.\n   *\n   * @param value - The static value to use to fill the array.\n   *\n   * @param start - The index of the first element in the range to be\n   *   filled, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   filled, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Notes\n   * If `stop < start` the fill will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four'];\n   * ArrayExt.fill(data, 'r');        // ['r', 'r', 'r', 'r']\n   * ArrayExt.fill(data, 'g', 1);     // ['r', 'g', 'g', 'g']\n   * ArrayExt.fill(data, 'b', 2, 3);  // ['r', 'g', 'b', 'b']\n   * ArrayExt.fill(data, 'z', 3, 1);  // ['z', 'z', 'b', 'z']\n   * ```\n   */\n  export function fill<T>(\n    array: MutableArrayLike<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n === 0) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      array[(start + i) % n] = value;\n    }\n  }\n\n  /**\n   * Insert a value into an array at a specific index.\n   *\n   * @param array - The array of interest.\n   *\n   * @param index - The index at which to insert the value. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * @param value - The value to set at the specified index.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2];\n   * ArrayExt.insert(data, 0, -1);  // [-1, 0, 1, 2]\n   * ArrayExt.insert(data, 2, 12);  // [-1, 0, 12, 1, 2]\n   * ArrayExt.insert(data, -1, 7);  // [-1, 0, 12, 1, 7, 2]\n   * ArrayExt.insert(data, 6, 19);  // [-1, 0, 12, 1, 7, 2, 19]\n   * ```\n   */\n  export function insert<T>(array: Array<T>, index: number, value: T): void {\n    let n = array.length;\n    if (index < 0) {\n      index = Math.max(0, index + n);\n    } else {\n      index = Math.min(index, n);\n    }\n    for (let i = n; i > index; --i) {\n      array[i] = array[i - 1];\n    }\n    array[index] = value;\n  }\n\n  /**\n   * Remove and return a value at a specific index in an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param index - The index of the value to remove. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The value at the specified index, or `undefined` if the\n   *   index is out of range.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeAt(data, 2);   // 23\n   * ArrayExt.removeAt(data, -2);  // 12\n   * ArrayExt.removeAt(data, 10);  // undefined;\n   * ```\n   */\n  export function removeAt<T>(array: Array<T>, index: number): T | undefined {\n    let n = array.length;\n    if (index < 0) {\n      index += n;\n    }\n    if (index < 0 || index >= n) {\n      return undefined;\n    }\n    let value = array[index];\n    for (let i = index + 1; i < n; ++i) {\n      array[i - 1] = array[i];\n    }\n    array.length = n - 1;\n    return value;\n  }\n\n  /**\n   * Remove the first occurrence of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the removed value, or `-1` if the value\n   *   is not contained in the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeFirstOf(data, 12);        // 1\n   * ArrayExt.removeFirstOf(data, 17);        // -1\n   * ArrayExt.removeFirstOf(data, 39, 3);     // -1\n   * ArrayExt.removeFirstOf(data, 39, 3, 2);  // 2\n   * ```\n   */\n  export function removeFirstOf<T>(\n    array: Array<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let index = firstIndexOf(array, value, start, stop);\n    if (index !== -1) {\n      removeAt(array, index);\n    }\n    return index;\n  }\n\n  /**\n   * Remove the last occurrence of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the removed value, or `-1` if the value\n   *   is not contained in the array.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeLastOf(data, 12);        // 5\n   * ArrayExt.removeLastOf(data, 17);        // -1\n   * ArrayExt.removeLastOf(data, 39, 2);     // -1\n   * ArrayExt.removeLastOf(data, 39, 2, 3);  // 3\n   * ```\n   */\n  export function removeLastOf<T>(\n    array: Array<T>,\n    value: T,\n    start = -1,\n    stop = 0\n  ): number {\n    let index = lastIndexOf(array, value, start, stop);\n    if (index !== -1) {\n      removeAt(array, index);\n    }\n    return index;\n  }\n\n  /**\n   * Remove all occurrences of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The number of elements removed from the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will conceptually wrap at the end of\n   * the array, however the array will be traversed front-to-back.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [14, 12, 23, 39, 14, 12, 19, 14];\n   * ArrayExt.removeAllOf(data, 12);        // 2\n   * ArrayExt.removeAllOf(data, 17);        // 0\n   * ArrayExt.removeAllOf(data, 14, 1, 4);  // 1\n   * ```\n   */\n  export function removeAllOf<T>(\n    array: Array<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let count = 0;\n    for (let i = 0; i < n; ++i) {\n      if (start <= stop && i >= start && i <= stop && array[i] === value) {\n        count++;\n      } else if (\n        stop < start &&\n        (i <= stop || i >= start) &&\n        array[i] === value\n      ) {\n        count++;\n      } else if (count > 0) {\n        array[i - count] = array[i];\n      }\n    }\n    if (count > 0) {\n      array.length = n - count;\n    }\n    return count;\n  }\n\n  /**\n   * Remove the first occurrence of a value which matches a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The removed `{ index, value }`, which will be `-1` and\n   *   `undefined` if the value is not contained in the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeFirstWhere(data, isEven);     // { index: 0, value: 0 }\n   * ArrayExt.removeFirstWhere(data, isEven, 2);  // { index: 3, value: 14 }\n   * ArrayExt.removeFirstWhere(data, isEven, 4);  // { index: -1, value: undefined }\n   * ```\n   */\n  export function removeFirstWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): { index: number; value: T | undefined } {\n    let value: T | undefined;\n    let index = findFirstIndex(array, fn, start, stop);\n    if (index !== -1) {\n      value = removeAt(array, index);\n    }\n    return { index, value };\n  }\n\n  /**\n   * Remove the last occurrence of a value which matches a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The removed `{ index, value }`, which will be `-1` and\n   *   `undefined` if the value is not contained in the array.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeLastWhere(data, isEven);        // { index: 5, value: 12 }\n   * ArrayExt.removeLastWhere(data, isEven, 2);     // { index: 1, value: 12 }\n   * ArrayExt.removeLastWhere(data, isEven, 2, 1);  // { index: -1, value: undefined }\n   * ```\n   */\n  export function removeLastWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): { index: number; value: T | undefined } {\n    let value: T | undefined;\n    let index = findLastIndex(array, fn, start, stop);\n    if (index !== -1) {\n      value = removeAt(array, index);\n    }\n    return { index, value };\n  }\n\n  /**\n   * Remove all occurrences of values which match a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The number of elements removed from the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will conceptually wrap at the end of\n   * the array, however the array will be traversed front-to-back.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * function isNegative(value: number): boolean {\n   *   return value < 0;\n   * }\n   *\n   * let data = [0, 12, -13, -9, 23, 39, 14, -15, 12, 75];\n   * ArrayExt.removeAllWhere(data, isEven);            // 4\n   * ArrayExt.removeAllWhere(data, isNegative, 0, 3);  // 2\n   * ```\n   */\n  export function removeAllWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let count = 0;\n    for (let i = 0; i < n; ++i) {\n      if (start <= stop && i >= start && i <= stop && fn(array[i], i)) {\n        count++;\n      } else if (stop < start && (i <= stop || i >= start) && fn(array[i], i)) {\n        count++;\n      } else if (count > 0) {\n        array[i - count] = array[i];\n      }\n    }\n    if (count > 0) {\n      array.length = n - count;\n    }\n    return count;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Chain together several iterables.\n *\n * @deprecated\n *\n * @param objects - The iterable objects of interest.\n *\n * @returns An iterator which yields the values of the iterables\n *   in the order in which they are supplied.\n *\n * #### Example\n * ```typescript\n * import { chain } from '@lumino/algorithm';\n *\n * let data1 = [1, 2, 3];\n * let data2 = [4, 5, 6];\n *\n * let stream = chain(data1, data2);\n *\n * Array.from(stream);  // [1, 2, 3, 4, 5, 6]\n * ```\n */\nexport function* chain<T>(...objects: Iterable<T>[]): IterableIterator<T> {\n  for (const object of objects) {\n    yield* object;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an empty iterator.\n *\n * @returns A new iterator which yields nothing.\n *\n * #### Example\n * ```typescript\n * import { empty } from '@lumino/algorithm';\n *\n * let stream = empty<number>();\n *\n * Array.from(stream);  // []\n * ```\n */\n// eslint-disable-next-line require-yield\nexport function* empty<T>(): IterableIterator<T> {\n  return;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Enumerate an iterable object.\n *\n * @param object - The iterable object of interest.\n *\n * @param start - The starting enum value. The default is `0`.\n *\n * @returns An iterator which yields the enumerated values.\n *\n * #### Example\n * ```typescript\n * import { enumerate } from '@lumino/algorithm';\n *\n * let data = ['foo', 'bar', 'baz'];\n *\n * let stream = enumerate(data, 1);\n *\n * Array.from(stream);  // [[1, 'foo'], [2, 'bar'], [3, 'baz']]\n * ```\n */\nexport function* enumerate<T>(\n  object: Iterable<T>,\n  start = 0\n): IterableIterator<[number, T]> {\n  for (const value of object) {\n    yield [start++, value];\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Filter an iterable for values which pass a test.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns An iterator which yields the values which pass the test.\n *\n * #### Example\n * ```typescript\n * import { filter } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = filter(data, value => value % 2 === 0);\n *\n * Array.from(stream);  // [2, 4, 6]\n * ```\n */\nexport function* filter<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): IterableIterator<T> {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      yield value;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Find the first value in an iterable which matches a predicate.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The predicate function to apply to the values.\n *\n * @returns The first matching value, or `undefined` if no matching\n *   value is found.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { find } from '@lumino/algorithm';\n *\n * interface IAnimal { species: string, name: string };\n *\n * function isCat(value: IAnimal): boolean {\n *   return value.species === 'cat';\n * }\n *\n * let data: IAnimal[] = [\n *   { species: 'dog', name: 'spot' },\n *   { species: 'cat', name: 'fluffy' },\n *   { species: 'alligator', name: 'pocho' }\n * ];\n *\n * find(data, isCat).name;  // 'fluffy'\n * ```\n */\nexport function find<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): T | undefined {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return value;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Find the index of the first value which matches a predicate.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The predicate function to apply to the values.\n *\n * @returns The index of the first matching value, or `-1` if no\n *   matching value is found.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { findIndex } from '@lumino/algorithm';\n *\n * interface IAnimal { species: string, name: string };\n *\n * function isCat(value: IAnimal): boolean {\n *   return value.species === 'cat';\n * }\n *\n * let data: IAnimal[] = [\n *   { species: 'dog', name: 'spot' },\n *   { species: 'cat', name: 'fluffy' },\n *   { species: 'alligator', name: 'pocho' }\n * ];\n *\n * findIndex(data, isCat);  // 1\n * ```\n */\nexport function findIndex<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): number {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return index - 1;\n    }\n  }\n  return -1;\n}\n\n/**\n * Find the minimum value in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns The minimum value in the iterable. If multiple values are\n *   equivalent to the minimum, the left-most value is returned. If\n *   the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { min } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * min([7, 4, 0, 3, 9, 4], numberCmp);  // 0\n * ```\n */\nexport function min<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): T | undefined {\n  let result: T | undefined = undefined;\n  for (const value of object) {\n    if (result === undefined) {\n      result = value;\n      continue;\n    }\n    if (fn(value, result) < 0) {\n      result = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Find the maximum value in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns The maximum value in the iterable. If multiple values are\n *   equivalent to the maximum, the left-most value is returned. If\n *   the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { max } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * max([7, 4, 0, 3, 9, 4], numberCmp);  // 9\n * ```\n */\nexport function max<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): T | undefined {\n  let result: T | undefined = undefined;\n  for (const value of object) {\n    if (result === undefined) {\n      result = value;\n      continue;\n    }\n    if (fn(value, result) > 0) {\n      result = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Find the minimum and maximum values in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns A 2-tuple of the `[min, max]` values in the iterable. If\n *   multiple values are equivalent, the left-most values are returned.\n *   If the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { minmax } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * minmax([7, 4, 0, 3, 9, 4], numberCmp);  // [0, 9]\n * ```\n */\nexport function minmax<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): [T, T] | undefined {\n  let empty = true;\n  let vmin: T;\n  let vmax: T;\n  for (const value of object) {\n    if (empty) {\n      vmin = value;\n      vmax = value;\n      empty = false;\n    } else if (fn(value, vmin!) < 0) {\n      vmin = value;\n    } else if (fn(value, vmax!) > 0) {\n      vmax = value;\n    }\n  }\n  return empty ? undefined : [vmin!, vmax!];\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an array from an iterable of values.\n *\n * @deprecated\n *\n * @param object - The iterable object of interest.\n *\n * @returns A new array of values from the given object.\n *\n * #### Example\n * ```typescript\n * import { toArray } from '@lumino/algorithm';\n *\n * let stream = [1, 2, 3, 4, 5, 6][Symbol.iterator]();\n *\n * toArray(stream);  // [1, 2, 3, 4, 5, 6];\n * ```\n */\nexport function toArray<T>(object: Iterable<T>): T[] {\n  return Array.from(object);\n}\n\n/**\n * Create an object from an iterable of key/value pairs.\n *\n * @param object - The iterable object of interest.\n *\n * @returns A new object mapping keys to values.\n *\n * #### Example\n * ```typescript\n * import { toObject } from '@lumino/algorithm';\n *\n * let data: [string, number][] = [['one', 1], ['two', 2], ['three', 3]];\n *\n * toObject(data);  // { one: 1, two: 2, three: 3 }\n * ```\n */\nexport function toObject<T>(object: Iterable<[string, T]>): {\n  [key: string]: T;\n} {\n  const result: { [key: string]: T } = {};\n  for (const [key, value] of object) {\n    result[key] = value;\n  }\n  return result;\n}\n\n/**\n * Invoke a function for each value in an iterable.\n *\n * @deprecated\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The callback function to invoke for each value.\n *\n * #### Notes\n * Iteration can be terminated early by returning `false` from the\n * callback function.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { each } from '@lumino/algorithm';\n *\n * let data = [5, 7, 0, -2, 9];\n *\n * each(data, value => { console.log(value); });\n * ```\n */\nexport function each<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean | void\n): void {\n  let index = 0;\n  for (const value of object) {\n    if (false === fn(value, index++)) {\n      return;\n    }\n  }\n}\n\n/**\n * Test whether all values in an iterable satisfy a predicate.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns `true` if all values pass the test, `false` otherwise.\n *\n * #### Notes\n * Iteration terminates on the first `false` predicate result.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { every } from '@lumino/algorithm';\n *\n * let data = [5, 7, 1];\n *\n * every(data, value => value % 2 === 0);  // false\n * every(data, value => value % 2 === 1);  // true\n * ```\n */\nexport function every<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): boolean {\n  let index = 0;\n  for (const value of object) {\n    if (false === fn(value, index++)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Test whether any value in an iterable satisfies a predicate.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns `true` if any value passes the test, `false` otherwise.\n *\n * #### Notes\n * Iteration terminates on the first `true` predicate result.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { some } from '@lumino/algorithm';\n *\n * let data = [5, 7, 1];\n *\n * some(data, value => value === 7);  // true\n * some(data, value => value === 3);  // false\n * ```\n */\nexport function some<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): boolean {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return true;\n    }\n  }\n  return false;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Transform the values of an iterable with a mapping function.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The mapping function to invoke for each value.\n *\n * @returns An iterator which yields the transformed values.\n *\n * #### Example\n * ```typescript\n * import { map } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3];\n *\n * let stream = map(data, value => value * 2);\n *\n * Array.from(stream);  // [2, 4, 6]\n * ```\n */\nexport function* map<T, U>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => U\n): IterableIterator<U> {\n  let index = 0;\n  for (const value of object) {\n    yield fn(value, index++);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Create an iterator of evenly spaced values.\n *\n * @param start - The starting value for the range, inclusive.\n *\n * @param stop - The stopping value for the range, exclusive.\n *\n * @param step - The distance between each value.\n *\n * @returns An iterator which produces evenly spaced values.\n *\n * #### Notes\n * In the single argument form of `range(stop)`, `start` defaults to\n * `0` and `step` defaults to `1`.\n *\n * In the two argument form of `range(start, stop)`, `step` defaults\n * to `1`.\n *\n * #### Example\n * ```typescript\n * import { range } from '@lumino/algorithm';\n *\n * let stream = range(2, 4);\n *\n * Array.from(stream);  // [2, 3]\n * ```\n */\nexport function* range(\n  start: number,\n  stop?: number,\n  step?: number\n): IterableIterator<number> {\n  if (stop === undefined) {\n    stop = start;\n    start = 0;\n    step = 1;\n  } else if (step === undefined) {\n    step = 1;\n  }\n  const length = Private.rangeLength(start, stop, step);\n  for (let index = 0; index < length; index++) {\n    yield start + step * index;\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Compute the effective length of a range.\n   *\n   * @param start - The starting value for the range, inclusive.\n   *\n   * @param stop - The stopping value for the range, exclusive.\n   *\n   * @param step - The distance between each value.\n   *\n   * @returns The number of steps need to traverse the range.\n   */\n  export function rangeLength(\n    start: number,\n    stop: number,\n    step: number\n  ): number {\n    if (step === 0) {\n      return Infinity;\n    }\n    if (start > stop && step > 0) {\n      return 0;\n    }\n    if (start < stop && step < 0) {\n      return 0;\n    }\n    return Math.ceil((stop - start) / step);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Summarize all values in an iterable using a reducer function.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The reducer function to invoke for each value.\n *\n * @param initial - The initial value to start accumulation.\n *\n * @returns The final accumulated value.\n *\n * #### Notes\n * The `reduce` function follows the conventions of `Array#reduce`.\n *\n * If the iterator is empty, an initial value is required. That value\n * will be used as the return value. If no initial value is provided,\n * an error will be thrown.\n *\n * If the iterator contains a single item and no initial value is\n * provided, the single item is used as the return value.\n *\n * Otherwise, the reducer is invoked for each element in the iterable.\n * If an initial value is not provided, the first element will be used\n * as the initial accumulated value.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { reduce } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5];\n *\n * let sum = reduce(data, (a, value) => a + value);  // 15\n * ```\n */\nexport function reduce<T>(\n  object: Iterable<T>,\n  fn: (accumulator: T, value: T, index: number) => T\n): T;\nexport function reduce<T, U>(\n  object: Iterable<T>,\n  fn: (accumulator: U, value: T, index: number) => U,\n  initial: U\n): U;\nexport function reduce<T>(\n  object: Iterable<T>,\n  fn: (accumulator: any, value: T, index: number) => any,\n  initial?: unknown\n): any {\n  // Setup the iterator and fetch the first value.\n  const it = object[Symbol.iterator]();\n  let index = 0;\n  let first = it.next();\n\n  // An empty iterator and no initial value is an error.\n  if (first.done && initial === undefined) {\n    throw new TypeError('Reduce of empty iterable with no initial value.');\n  }\n\n  // If the iterator is empty, return the initial value.\n  if (first.done) {\n    return initial;\n  }\n\n  // If the iterator has a single item and no initial value, the\n  // reducer is not invoked and the first item is the return value.\n  let second = it.next();\n  if (second.done && initial === undefined) {\n    return first.value;\n  }\n\n  // If iterator has a single item and an initial value is provided,\n  // the reducer is invoked and that result is the return value.\n  if (second.done) {\n    return fn(initial, first.value, index++);\n  }\n\n  // Setup the initial accumlated value.\n  let accumulator: any;\n  if (initial === undefined) {\n    accumulator = fn(first.value, second.value, index++);\n  } else {\n    accumulator = fn(fn(initial, first.value, index++), second.value, index++);\n  }\n\n  // Iterate the rest of the values, updating the accumulator.\n  let next: IteratorResult<T>;\n  while (!(next = it.next()).done) {\n    accumulator = fn(accumulator, next.value, index++);\n  }\n\n  // Return the final accumulated value.\n  return accumulator;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an iterator which repeats a value a number of times.\n *\n * @deprecated\n *\n * @param value - The value to repeat.\n *\n * @param count - The number of times to repeat the value.\n *\n * @returns A new iterator which repeats the specified value.\n *\n * #### Example\n * ```typescript\n * import { repeat } from '@lumino/algorithm';\n *\n * let stream = repeat(7, 3);\n *\n * Array.from(stream);  // [7, 7, 7]\n * ```\n */\nexport function* repeat<T>(value: T, count: number): IterableIterator<T> {\n  while (0 < count--) {\n    yield value;\n  }\n}\n\n/**\n * Create an iterator which yields a value a single time.\n *\n * @deprecated\n *\n * @param value - The value to wrap in an iterator.\n *\n * @returns A new iterator which yields the value a single time.\n *\n * #### Example\n * ```typescript\n * import { once } from '@lumino/algorithm';\n *\n * let stream = once(7);\n *\n * Array.from(stream);  // [7]\n * ```\n */\nexport function* once<T>(value: T): IterableIterator<T> {\n  yield value;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * An object which can produce a reverse iterator over its values.\n */\nexport interface IRetroable<T> {\n  /**\n   * Get a reverse iterator over the object's values.\n   *\n   * @returns An iterator which yields the object's values in reverse.\n   */\n  retro(): IterableIterator<T>;\n}\n\n/**\n * Create an iterator for a retroable object.\n *\n * @param object - The retroable or array-like object of interest.\n *\n * @returns An iterator which traverses the object's values in reverse.\n *\n * #### Example\n * ```typescript\n * import { retro } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = retro(data);\n *\n * Array.from(stream);  // [6, 5, 4, 3, 2, 1]\n * ```\n */\nexport function* retro<T>(\n  object: IRetroable<T> | ArrayLike<T>\n): IterableIterator<T> {\n  if (typeof (object as IRetroable<T>).retro === 'function') {\n    yield* (object as IRetroable<T>).retro();\n  } else {\n    for (let index = (object as ArrayLike<T>).length - 1; index > -1; index--) {\n      yield (object as ArrayLike<T>)[index];\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Topologically sort an iterable of edges.\n *\n * @param edges - The iterable object of edges to sort.\n *   An edge is represented as a 2-tuple of `[fromNode, toNode]`.\n *\n * @returns The topologically sorted array of nodes.\n *\n * #### Notes\n * If a cycle is present in the graph, the cycle will be ignored and\n * the return value will be only approximately sorted.\n *\n * #### Example\n * ```typescript\n * import { topologicSort } from '@lumino/algorithm';\n *\n * let data = [\n *   ['d', 'e'],\n *   ['c', 'd'],\n *   ['a', 'b'],\n *   ['b', 'c']\n * ];\n *\n * topologicSort(data);  // ['a', 'b', 'c', 'd', 'e']\n * ```\n */\nexport function topologicSort<T>(edges: Iterable<[T, T]>): T[] {\n  // Setup the shared sorting state.\n  let sorted: T[] = [];\n  let visited = new Set<T>();\n  let graph = new Map<T, T[]>();\n\n  // Add the edges to the graph.\n  for (const edge of edges) {\n    addEdge(edge);\n  }\n\n  // Visit each node in the graph.\n  for (const [k] of graph) {\n    visit(k);\n  }\n\n  // Return the sorted results.\n  return sorted;\n\n  // Add an edge to the graph.\n  function addEdge(edge: [T, T]): void {\n    let [fromNode, toNode] = edge;\n    let children = graph.get(toNode);\n    if (children) {\n      children.push(fromNode);\n    } else {\n      graph.set(toNode, [fromNode]);\n    }\n  }\n\n  // Recursively visit the node.\n  function visit(node: T): void {\n    if (visited.has(node)) {\n      return;\n    }\n    visited.add(node);\n    let children = graph.get(node);\n    if (children) {\n      for (const child of children) {\n        visit(child);\n      }\n    }\n    sorted.push(node);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Iterate over an iterable using a stepped increment.\n *\n * @param object - The iterable object of interest.\n *\n * @param step - The distance to step on each iteration. A value\n *   of less than `1` will behave the same as a value of `1`.\n *\n * @returns An iterator which traverses the iterable step-wise.\n *\n * #### Example\n * ```typescript\n * import { stride } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = stride(data, 2);\n *\n * Array.from(stream);  // [1, 3, 5];\n * ```\n */\nexport function* stride<T>(\n  object: Iterable<T>,\n  step: number\n): IterableIterator<T> {\n  let count = 0;\n  for (const value of object) {\n    if (0 === count++ % step) {\n      yield value;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for string-specific algorithms.\n */\nexport namespace StringExt {\n  /**\n   * Find the indices of characters in a source text.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The matched indices, or `null` if there is no match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * In order for there to be a match, all of the characters in `query`\n   * **must** appear in `source` in the order given by `query`.\n   *\n   * Characters are matched using strict `===` equality.\n   */\n  export function findIndices(\n    source: string,\n    query: string,\n    start = 0\n  ): number[] | null {\n    let indices = new Array<number>(query.length);\n    for (let i = 0, j = start, n = query.length; i < n; ++i, ++j) {\n      j = source.indexOf(query[i], j);\n      if (j === -1) {\n        return null;\n      }\n      indices[i] = j;\n    }\n    return indices;\n  }\n\n  /**\n   * The result of a string match function.\n   */\n  export interface IMatchResult {\n    /**\n     * A score which indicates the strength of the match.\n     *\n     * The documentation of a given match function should specify\n     * whether a lower or higher score is a stronger match.\n     */\n    score: number;\n\n    /**\n     * The indices of the matched characters in the source text.\n     *\n     * The indices will appear in increasing order.\n     */\n    indices: number[];\n  }\n\n  /**\n   * A string matcher which uses a sum-of-squares algorithm.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The match result, or `null` if there is no match.\n   *   A lower `score` represents a stronger match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * This scoring algorithm uses a sum-of-squares approach to determine\n   * the score. In order for there to be a match, all of the characters\n   * in `query` **must** appear in `source` in order. The index of each\n   * matching character is squared and added to the score. This means\n   * that early and consecutive character matches are preferred, while\n   * late matches are heavily penalized.\n   */\n  export function matchSumOfSquares(\n    source: string,\n    query: string,\n    start = 0\n  ): IMatchResult | null {\n    let indices = findIndices(source, query, start);\n    if (!indices) {\n      return null;\n    }\n    let score = 0;\n    for (let i = 0, n = indices.length; i < n; ++i) {\n      let j = indices[i] - start;\n      score += j * j;\n    }\n    return { score, indices };\n  }\n\n  /**\n   * A string matcher which uses a sum-of-deltas algorithm.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The match result, or `null` if there is no match.\n   *   A lower `score` represents a stronger match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * This scoring algorithm uses a sum-of-deltas approach to determine\n   * the score. In order for there to be a match, all of the characters\n   * in `query` **must** appear in `source` in order. The delta between\n   * the indices are summed to create the score. This means that groups\n   * of matched characters are preferred, while fragmented matches are\n   * penalized.\n   */\n  export function matchSumOfDeltas(\n    source: string,\n    query: string,\n    start = 0\n  ): IMatchResult | null {\n    let indices = findIndices(source, query, start);\n    if (!indices) {\n      return null;\n    }\n    let score = 0;\n    let last = start - 1;\n    for (let i = 0, n = indices.length; i < n; ++i) {\n      let j = indices[i];\n      score += j - last - 1;\n      last = j;\n    }\n    return { score, indices };\n  }\n\n  /**\n   * Highlight the matched characters of a source text.\n   *\n   * @param source - The text which should be highlighted.\n   *\n   * @param indices - The indices of the matched characters. They must\n   *   appear in increasing order and must be in bounds of the source.\n   *\n   * @param fn - The function to apply to the matched chunks.\n   *\n   * @returns An array of unmatched and highlighted chunks.\n   */\n  export function highlight<T>(\n    source: string,\n    indices: ReadonlyArray<number>,\n    fn: (chunk: string) => T\n  ): Array<string | T> {\n    // Set up the result array.\n    let result: Array<string | T> = [];\n\n    // Set up the counter variables.\n    let k = 0;\n    let last = 0;\n    let n = indices.length;\n\n    // Iterator over each index.\n    while (k < n) {\n      // Set up the chunk indices.\n      let i = indices[k];\n      let j = indices[k];\n\n      // Advance the right chunk index until it's non-contiguous.\n      while (++k < n && indices[k] === j + 1) {\n        j++;\n      }\n\n      // Extract the unmatched text.\n      if (last < i) {\n        result.push(source.slice(last, i));\n      }\n\n      // Extract and highlight the matched text.\n      if (i < j + 1) {\n        result.push(fn(source.slice(i, j + 1)));\n      }\n\n      // Update the last visited index.\n      last = j + 1;\n    }\n\n    // Extract any remaining unmatched text.\n    if (last < source.length) {\n      result.push(source.slice(last));\n    }\n\n    // Return the highlighted result.\n    return result;\n  }\n\n  /**\n   * A 3-way string comparison function.\n   *\n   * @param a - The first string of interest.\n   *\n   * @param b - The second string of interest.\n   *\n   * @returns `-1` if `a < b`, else `1` if `a > b`, else `0`.\n   */\n  export function cmp(a: string, b: string): number {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Take a fixed number of items from an iterable.\n *\n * @param object - The iterable object of interest.\n *\n * @param count - The number of items to take from the iterable.\n *\n * @returns An iterator which yields the specified number of items\n *   from the source iterable.\n *\n * #### Notes\n * The returned iterator will exhaust early if the source iterable\n * contains an insufficient number of items.\n *\n * #### Example\n * ```typescript\n * import { take } from '@lumino/algorithm';\n *\n * let stream = take([5, 4, 3, 2, 1, 0, -1], 3);\n *\n * Array.from(stream);  // [5, 4, 3]\n * ```\n */\nexport function* take<T>(\n  object: Iterable<T>,\n  count: number\n): IterableIterator<T> {\n  if (count < 1) {\n    return;\n  }\n  const it = object[Symbol.iterator]();\n  let item: IteratorResult<T>;\n  while (0 < count-- && !(item = it.next()).done) {\n    yield item.value;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { every } from './iter';\n\n/**\n * Iterate several iterables in lockstep.\n *\n * @param objects - The iterable objects of interest.\n *\n * @returns An iterator which yields successive tuples of values where\n *   each value is taken in turn from the provided iterables. It will\n *   be as long as the shortest provided iterable.\n *\n * #### Example\n * ```typescript\n * import { zip } from '@lumino/algorithm';\n *\n * let data1 = [1, 2, 3];\n * let data2 = [4, 5, 6];\n *\n * let stream = zip(data1, data2);\n *\n * Array.from(stream);  // [[1, 4], [2, 5], [3, 6]]\n * ```\n */\nexport function* zip<T>(...objects: Iterable<T>[]): IterableIterator<T[]> {\n  const iters = objects.map(obj => obj[Symbol.iterator]());\n  let tuple = iters.map(it => it.next());\n  for (; every(tuple, item => !item.done); tuple = iters.map(it => it.next())) {\n    yield tuple.map(item => item.value);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n/* global WeakRef */\n\nimport { ArrayExt } from '@lumino/algorithm';\nimport { CommandRegistry } from '@lumino/commands';\nimport { ReadonlyJSONObject } from '@lumino/coreutils';\nimport { DisposableDelegate, IDisposable } from '@lumino/disposable';\nimport { Signal } from '@lumino/signaling';\nimport { VirtualElement } from '@lumino/virtualdom';\nimport { Menu } from '@lumino/widgets';\n\n/**\n * Interface for disposable item menu\n */\nexport interface IDisposableMenuItem extends IDisposable, Menu.IItem {}\n\n/**\n * A common interface for extensible JupyterLab application menus.\n *\n * Plugins are still free to define their own menus in any way\n * they like. However, JupyterLab defines a few top-level\n * application menus that may be extended by plugins as well,\n * such as \"Edit\" and \"View\"\n */\nexport interface IRankedMenu extends IDisposable {\n  /**\n   * Add a group of menu items specific to a particular\n   * plugin.\n   *\n   * The rank can be set for all items in the group using the\n   * function argument or per item.\n   *\n   * @param items - the list of menu items to add.\n   * @param rank - the default rank in the menu in which to insert the group.\n   * @returns Disposable of the group\n   */\n  addGroup(items: Menu.IItemOptions[], rank?: number): IDisposable;\n\n  /**\n   * Add a menu item to the end of the menu.\n   *\n   * @param options - The options for creating the menu item.\n   *\n   * @returns The disposable menu item added to the menu.\n   */\n  addItem(options: IRankedMenu.IItemOptions): IDisposable;\n\n  /**\n   * A read-only array of the menu items in the menu.\n   */\n  readonly items: ReadonlyArray<Menu.IItem>;\n\n  /**\n   * Menu rank\n   */\n  readonly rank?: number;\n}\n\n/**\n * Namespace for JupyterLabMenu interfaces\n */\nexport namespace IRankedMenu {\n  /**\n   * Default menu item rank\n   */\n  export const DEFAULT_RANK = 100;\n\n  /**\n   * An options object for creating a menu item.\n   */\n  export interface IItemOptions extends Menu.IItemOptions {\n    /**\n     * Menu item rank\n     */\n    rank?: number;\n  }\n\n  /**\n   * An options object for creating a JupyterLab menu.\n   */\n  export interface IOptions extends Menu.IOptions {\n    /**\n     * Whether to include separators between the\n     *   groups that are added to the menu.\n     *\n     * Default: true\n     */\n    includeSeparators?: boolean;\n    /**\n     * Menu rank\n     */\n    rank?: number;\n  }\n}\n\n/**\n * An extensible menu for JupyterLab application menus.\n */\nexport class RankedMenu extends Menu implements IRankedMenu {\n  /**\n   * Construct a new menu.\n   *\n   * @param options - Options for the lumino menu.\n   */\n  constructor(options: IRankedMenu.IOptions) {\n    super(options);\n    this._rank = options.rank;\n    this._includeSeparators = options.includeSeparators ?? true;\n  }\n\n  /**\n   * Menu rank.\n   */\n  get rank(): number | undefined {\n    return this._rank;\n  }\n\n  /**\n   * Add a group of menu items specific to a particular\n   * plugin.\n   *\n   * The rank can be set for all items in the group using the\n   * function argument or per item.\n   *\n   * @param items - the list of menu items to add.\n   * @param rank - the default rank in the menu in which to insert the group.\n   * @returns Disposable of the group\n   */\n  addGroup(items: IRankedMenu.IItemOptions[], rank?: number): IDisposable {\n    if (items.length === 0) {\n      return new DisposableDelegate(() => void 0);\n    }\n    const defaultRank = rank ?? IRankedMenu.DEFAULT_RANK;\n\n    const sortedItems = items\n      .map(item => {\n        return { ...item, rank: item.rank ?? defaultRank };\n      })\n      .sort((a, b) => a.rank - b.rank);\n\n    // Insert the plugin group into the menu.\n    let insertIndex = this._ranks.findIndex(rank => sortedItems[0].rank < rank);\n    if (insertIndex < 0) {\n      insertIndex = this._ranks.length; // Insert at the end of the menu\n    }\n\n    // Keep an array of the menu items that have been created.\n    const added: IDisposableMenuItem[] = [];\n\n    // Insert a separator before the group.\n    // Lumino takes care of superfluous leading,\n    // trailing, and duplicate separators.\n    if (this._includeSeparators) {\n      added.push(\n        this.insertItem(insertIndex++, { type: 'separator', rank: defaultRank })\n      );\n    }\n    // Insert the group.\n    added.push(\n      ...sortedItems.map(item => {\n        return this.insertItem(insertIndex++, item);\n      })\n    );\n\n    // Insert a separator after the group.\n    if (this._includeSeparators) {\n      added.push(\n        this.insertItem(insertIndex++, { type: 'separator', rank: defaultRank })\n      );\n    }\n\n    return new DisposableDelegate(() => {\n      added.forEach(i => i.dispose());\n    });\n  }\n\n  /**\n   * Add a menu item to the end of the menu.\n   *\n   * @param options - The options for creating the menu item.\n   *\n   * @returns The menu item added to the menu.\n   */\n  addItem(options: IRankedMenu.IItemOptions): IDisposableMenuItem {\n    let insertIndex = -1;\n\n    if (options.rank) {\n      insertIndex = this._ranks.findIndex(rank => options.rank! < rank);\n    }\n    if (insertIndex < 0) {\n      insertIndex = this._ranks.length; // Insert at the end of the menu\n    }\n\n    return this.insertItem(insertIndex, options);\n  }\n\n  /**\n   * Remove all menu items from the menu.\n   */\n  clearItems(): void {\n    this._ranks.length = 0;\n    super.clearItems();\n  }\n\n  /**\n   * Dispose of the resources held by the menu.\n   */\n  dispose(): void {\n    this._ranks.length = 0;\n    super.dispose();\n  }\n\n  /**\n   * Get the rank of the item at index.\n   *\n   * @param index Item index.\n   * @returns Rank of the item.\n   */\n  getRankAt(index: number): number {\n    return this._ranks[index];\n  }\n\n  /**\n   * Insert a menu item into the menu at the specified index.\n   *\n   * @param index - The index at which to insert the item.\n   *\n   * @param options - The options for creating the menu item.\n   *\n   * @returns The menu item added to the menu.\n   *\n   * #### Notes\n   * The index will be clamped to the bounds of the items.\n   */\n  insertItem(\n    index: number,\n    options: IRankedMenu.IItemOptions\n  ): IDisposableMenuItem {\n    const clampedIndex = Math.max(0, Math.min(index, this._ranks.length));\n    ArrayExt.insert(\n      this._ranks,\n      clampedIndex,\n      options.rank ??\n        Math.max(\n          IRankedMenu.DEFAULT_RANK,\n          this._ranks[this._ranks.length - 1] ?? IRankedMenu.DEFAULT_RANK\n        )\n    );\n    const item = super.insertItem(clampedIndex, options);\n    return new DisposableMenuItem(item, this);\n  }\n\n  /**\n   * Remove the item at a given index from the menu.\n   *\n   * @param index - The index of the item to remove.\n   *\n   * #### Notes\n   * This is a no-op if the index is out of range.\n   */\n  removeItemAt(index: number): void {\n    ArrayExt.removeAt(this._ranks, index);\n    super.removeItemAt(index);\n  }\n\n  private _includeSeparators: boolean;\n  private _rank: number | undefined;\n  private _ranks: number[] = [];\n}\n\n/**\n * Disposable Menu Item\n */\nclass DisposableMenuItem implements IDisposableMenuItem {\n  /**\n   * Create a disposable menu item from an item and the menu it belongs to\n   *\n   * @param item Menu item\n   * @param menu Menu\n   */\n  constructor(item: Menu.IItem, menu: Menu) {\n    this._item = new WeakRef(item);\n    this._menu = menu;\n\n    // dispose this item if the parent menu is disposed\n    const dispose = (menu: Menu): void => {\n      menu.disposed.disconnect(dispose, this);\n      this.dispose();\n    };\n    this._menu.disposed.connect(dispose, this);\n  }\n\n  /**\n   * Whether the menu item is disposed or not.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * The type of the menu item.\n   */\n  get type(): Menu.ItemType {\n    return this._item.deref()!.type;\n  }\n\n  /**\n   * The command to execute when the item is triggered.\n   */\n  get command(): string {\n    return this._item.deref()!.command;\n  }\n\n  /**\n   * The arguments for the command.\n   */\n  get args(): ReadonlyJSONObject {\n    return this._item.deref()!.args;\n  }\n\n  /**\n   * The submenu for a `'submenu'` type item.\n   */\n  get submenu(): Menu | null {\n    return this._item.deref()!.submenu;\n  }\n\n  /**\n   * The display label for the menu item.\n   */\n  get label(): string {\n    return this._item.deref()!.label;\n  }\n\n  /**\n   * The mnemonic index for the menu item.\n   */\n  get mnemonic(): number {\n    return this._item.deref()!.mnemonic;\n  }\n\n  /**\n   * The icon renderer for the menu item.\n   */\n  get icon(): VirtualElement.IRenderer | undefined {\n    return this._item.deref()!.icon;\n  }\n\n  /**\n   * The icon class for the menu item.\n   */\n  get iconClass(): string {\n    return this._item.deref()!.iconClass;\n  }\n\n  /**\n   * The icon label for the menu item.\n   */\n  get iconLabel(): string {\n    return this._item.deref()!.iconLabel;\n  }\n\n  /**\n   * The display caption for the menu item.\n   */\n  get caption(): string {\n    return this._item.deref()!.caption;\n  }\n\n  /**\n   * The extra class name for the menu item.\n   */\n  get className(): string {\n    return this._item.deref()!.className;\n  }\n\n  /**\n   * The dataset for the menu item.\n   */\n  get dataset(): CommandRegistry.Dataset {\n    return this._item.deref()!.dataset;\n  }\n\n  /**\n   * Whether the menu item is enabled.\n   */\n  get isEnabled(): boolean {\n    return this._item.deref()!.isEnabled;\n  }\n\n  /**\n   * Whether the menu item is toggled.\n   */\n  get isToggled(): boolean {\n    return this._item.deref()!.isToggled;\n  }\n\n  /**\n   * Whether the menu item is visible.\n   */\n  get isVisible(): boolean {\n    return this._item.deref()!.isVisible;\n  }\n\n  /**\n   * The key binding for the menu item.\n   */\n  get keyBinding(): CommandRegistry.IKeyBinding | null {\n    return this._item.deref()!.keyBinding;\n  }\n\n  /**\n   * Dispose the menu item by removing it from its menu.\n   */\n  dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    const item = this._item.deref();\n    if (item && !this._menu.isDisposed) {\n      this._menu.removeItem(item);\n    }\n    Signal.clearData(this);\n  }\n\n  private _isDisposed: boolean;\n  private _item: WeakRef<Menu.IItem>;\n  private _menu: Menu;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { IRetroable } from '@lumino/algorithm';\n\n/**\n * A generic doubly-linked list.\n */\nexport class LinkedList<T> implements Iterable<T>, IRetroable<T> {\n  /**\n   * Whether the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  get isEmpty(): boolean {\n    return this._size === 0;\n  }\n\n  /**\n   * The size of the list.\n   *\n   * #### Complexity\n   * `O(1)`\n   *\n   * #### Notes\n   * This is equivalent to `length`.\n   */\n  get size(): number {\n    return this._size;\n  }\n\n  /**\n   * The length of the list.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Notes\n   * This is equivalent to `size`.\n   *\n   * This property is deprecated.\n   */\n  get length(): number {\n    return this._size;\n  }\n\n  /**\n   * The first value in the list.\n   *\n   * This is `undefined` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  get first(): T | undefined {\n    return this._first ? this._first.value : undefined;\n  }\n\n  /**\n   * The last value in the list.\n   *\n   * This is `undefined` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  get last(): T | undefined {\n    return this._last ? this._last.value : undefined;\n  }\n\n  /**\n   * The first node in the list.\n   *\n   * This is `null` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  get firstNode(): LinkedList.INode<T> | null {\n    return this._first;\n  }\n\n  /**\n   * The last node in the list.\n   *\n   * This is `null` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  get lastNode(): LinkedList.INode<T> | null {\n    return this._last;\n  }\n\n  /**\n   * Create an iterator over the values in the list.\n   *\n   * @returns A new iterator starting with the first value.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  *[Symbol.iterator](): IterableIterator<T> {\n    let node = this._first;\n    while (node) {\n      yield node.value;\n      node = node.next;\n    }\n  }\n\n  /**\n   * Create a reverse iterator over the values in the list.\n   *\n   * @returns A new iterator starting with the last value.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  *retro(): IterableIterator<T> {\n    let node = this._last;\n    while (node) {\n      yield node.value;\n      node = node.prev;\n    }\n  }\n\n  /**\n   * Create an iterator over the nodes in the list.\n   *\n   * @returns A new iterator starting with the first node.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  *nodes(): IterableIterator<LinkedList.INode<T>> {\n    let node = this._first;\n    while (node) {\n      yield node;\n      node = node.next;\n    }\n  }\n\n  /**\n   * Create a reverse iterator over the nodes in the list.\n   *\n   * @returns A new iterator starting with the last node.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  *retroNodes(): IterableIterator<LinkedList.INode<T>> {\n    let node = this._last;\n    while (node) {\n      yield node;\n      node = node.prev;\n    }\n  }\n\n  /**\n   * Assign new values to the list, replacing all current values.\n   *\n   * @param values - The values to assign to the list.\n   *\n   * #### Complexity\n   * Linear.\n   */\n  assign(values: Iterable<T>): void {\n    this.clear();\n    for (const value of values) {\n      this.addLast(value);\n    }\n  }\n\n  /**\n   * Add a value to the end of the list.\n   *\n   * @param value - The value to add to the end of the list.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Notes\n   * This is equivalent to `addLast`.\n   */\n  push(value: T): void {\n    this.addLast(value);\n  }\n\n  /**\n   * Remove and return the value at the end of the list.\n   *\n   * @returns The removed value, or `undefined` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Notes\n   * This is equivalent to `removeLast`.\n   */\n  pop(): T | undefined {\n    return this.removeLast();\n  }\n\n  /**\n   * Add a value to the beginning of the list.\n   *\n   * @param value - The value to add to the beginning of the list.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Notes\n   * This is equivalent to `addFirst`.\n   */\n  shift(value: T): void {\n    this.addFirst(value);\n  }\n\n  /**\n   * Remove and return the value at the beginning of the list.\n   *\n   * @returns The removed value, or `undefined` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Notes\n   * This is equivalent to `removeFirst`.\n   */\n  unshift(): T | undefined {\n    return this.removeFirst();\n  }\n\n  /**\n   * Add a value to the beginning of the list.\n   *\n   * @param value - The value to add to the beginning of the list.\n   *\n   * @returns The list node which holds the value.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  addFirst(value: T): LinkedList.INode<T> {\n    let node = new Private.LinkedListNode<T>(this, value);\n    if (!this._first) {\n      this._first = node;\n      this._last = node;\n    } else {\n      node.next = this._first;\n      this._first.prev = node;\n      this._first = node;\n    }\n    this._size++;\n    return node;\n  }\n\n  /**\n   * Add a value to the end of the list.\n   *\n   * @param value - The value to add to the end of the list.\n   *\n   * @returns The list node which holds the value.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  addLast(value: T): LinkedList.INode<T> {\n    let node = new Private.LinkedListNode<T>(this, value);\n    if (!this._last) {\n      this._first = node;\n      this._last = node;\n    } else {\n      node.prev = this._last;\n      this._last.next = node;\n      this._last = node;\n    }\n    this._size++;\n    return node;\n  }\n\n  /**\n   * Insert a value before a specific node in the list.\n   *\n   * @param value - The value to insert before the reference node.\n   *\n   * @param ref - The reference node of interest. If this is `null`,\n   *   the value will be added to the beginning of the list.\n   *\n   * @returns The list node which holds the value.\n   *\n   * #### Notes\n   * The reference node must be owned by the list.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  insertBefore(value: T, ref: LinkedList.INode<T> | null): LinkedList.INode<T> {\n    if (!ref || ref === this._first) {\n      return this.addFirst(value);\n    }\n    if (!(ref instanceof Private.LinkedListNode) || ref.list !== this) {\n      throw new Error('Reference node is not owned by the list.');\n    }\n    let node = new Private.LinkedListNode<T>(this, value);\n    let _ref = ref as Private.LinkedListNode<T>;\n    let prev = _ref.prev!;\n    node.next = _ref;\n    node.prev = prev;\n    _ref.prev = node;\n    prev.next = node;\n    this._size++;\n    return node;\n  }\n\n  /**\n   * Insert a value after a specific node in the list.\n   *\n   * @param value - The value to insert after the reference node.\n   *\n   * @param ref - The reference node of interest. If this is `null`,\n   *   the value will be added to the end of the list.\n   *\n   * @returns The list node which holds the value.\n   *\n   * #### Notes\n   * The reference node must be owned by the list.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  insertAfter(value: T, ref: LinkedList.INode<T> | null): LinkedList.INode<T> {\n    if (!ref || ref === this._last) {\n      return this.addLast(value);\n    }\n    if (!(ref instanceof Private.LinkedListNode) || ref.list !== this) {\n      throw new Error('Reference node is not owned by the list.');\n    }\n    let node = new Private.LinkedListNode<T>(this, value);\n    let _ref = ref as Private.LinkedListNode<T>;\n    let next = _ref.next!;\n    node.next = next;\n    node.prev = _ref;\n    _ref.next = node;\n    next.prev = node;\n    this._size++;\n    return node;\n  }\n\n  /**\n   * Remove and return the value at the beginning of the list.\n   *\n   * @returns The removed value, or `undefined` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  removeFirst(): T | undefined {\n    let node = this._first;\n    if (!node) {\n      return undefined;\n    }\n    if (node === this._last) {\n      this._first = null;\n      this._last = null;\n    } else {\n      this._first = node.next;\n      this._first!.prev = null;\n    }\n    node.list = null;\n    node.next = null;\n    node.prev = null;\n    this._size--;\n    return node.value;\n  }\n\n  /**\n   * Remove and return the value at the end of the list.\n   *\n   * @returns The removed value, or `undefined` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  removeLast(): T | undefined {\n    let node = this._last;\n    if (!node) {\n      return undefined;\n    }\n    if (node === this._first) {\n      this._first = null;\n      this._last = null;\n    } else {\n      this._last = node.prev;\n      this._last!.next = null;\n    }\n    node.list = null;\n    node.next = null;\n    node.prev = null;\n    this._size--;\n    return node.value;\n  }\n\n  /**\n   * Remove a specific node from the list.\n   *\n   * @param node - The node to remove from the list.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Notes\n   * The node must be owned by the list.\n   */\n  removeNode(node: LinkedList.INode<T>): void {\n    if (!(node instanceof Private.LinkedListNode) || node.list !== this) {\n      throw new Error('Node is not owned by the list.');\n    }\n    let _node = node as Private.LinkedListNode<T>;\n    if (_node === this._first && _node === this._last) {\n      this._first = null;\n      this._last = null;\n    } else if (_node === this._first) {\n      this._first = _node.next;\n      this._first!.prev = null;\n    } else if (_node === this._last) {\n      this._last = _node.prev;\n      this._last!.next = null;\n    } else {\n      _node.next!.prev = _node.prev;\n      _node.prev!.next = _node.next;\n    }\n    _node.list = null;\n    _node.next = null;\n    _node.prev = null;\n    this._size--;\n  }\n\n  /**\n   * Remove all values from the list.\n   *\n   * #### Complexity\n   * Linear.\n   */\n  clear(): void {\n    let node = this._first;\n    while (node) {\n      let next = node.next;\n      node.list = null;\n      node.prev = null;\n      node.next = null;\n      node = next;\n    }\n    this._first = null;\n    this._last = null;\n    this._size = 0;\n  }\n\n  private _first: Private.LinkedListNode<T> | null = null;\n  private _last: Private.LinkedListNode<T> | null = null;\n  private _size = 0;\n}\n\n/**\n * The namespace for the `LinkedList` class statics.\n */\nexport namespace LinkedList {\n  /**\n   * An object which represents a node in a linked list.\n   *\n   * #### Notes\n   * User code will not create linked list nodes directly. Nodes\n   * are created automatically when values are added to a list.\n   */\n  export interface INode<T> {\n    /**\n     * The linked list which created and owns the node.\n     *\n     * This will be `null` when the node is removed from the list.\n     */\n    readonly list: LinkedList<T> | null;\n\n    /**\n     * The next node in the list.\n     *\n     * This will be `null` when the node is the last node in the list\n     * or when the node is removed from the list.\n     */\n    readonly next: INode<T> | null;\n\n    /**\n     * The previous node in the list.\n     *\n     * This will be `null` when the node is the first node in the list\n     * or when the node is removed from the list.\n     */\n    readonly prev: INode<T> | null;\n\n    /**\n     * The user value stored in the node.\n     */\n    readonly value: T;\n  }\n\n  /**\n   * Create a linked list from an iterable of values.\n   *\n   * @param values - The iterable object of interest.\n   *\n   * @returns A new linked list initialized with the given values.\n   *\n   * #### Complexity\n   * Linear.\n   */\n  export function from<T>(values: Iterable<T>): LinkedList<T> {\n    let list = new LinkedList<T>();\n    list.assign(values);\n    return list;\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * The internal linked list node implementation.\n   */\n  export class LinkedListNode<T> {\n    /**\n     * The linked list which created and owns the node.\n     */\n    list: LinkedList<T> | null = null;\n\n    /**\n     * The next node in the list.\n     */\n    next: LinkedListNode<T> | null = null;\n\n    /**\n     * The previous node in the list.\n     */\n    prev: LinkedListNode<T> | null = null;\n\n    /**\n     * The user value stored in the node.\n     */\n    readonly value: T;\n\n    /**\n     * Construct a new linked list node.\n     *\n     * @param list - The list which owns the node.\n     *\n     * @param value - The value for the link.\n     */\n    constructor(list: LinkedList<T>, value: T) {\n      this.list = list;\n      this.value = value;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * @packageDocumentation\n * @module messaging\n */\nimport { ArrayExt, every, retro, some } from '@lumino/algorithm';\n\nimport { LinkedList } from '@lumino/collections';\n\n/**\n * A message which can be delivered to a message handler.\n *\n * #### Notes\n * This class may be subclassed to create complex message types.\n */\nexport class Message {\n  /**\n   * Construct a new message.\n   *\n   * @param type - The type of the message.\n   */\n  constructor(type: string) {\n    this.type = type;\n  }\n\n  /**\n   * The type of the message.\n   *\n   * #### Notes\n   * The `type` of a message should be related directly to its actual\n   * runtime type. This means that `type` can and will be used to cast\n   * the message to the relevant derived `Message` subtype.\n   */\n  readonly type: string;\n\n  /**\n   * Test whether the message is conflatable.\n   *\n   * #### Notes\n   * Message conflation is an advanced topic. Most message types will\n   * not make use of this feature.\n   *\n   * If a conflatable message is posted to a handler while another\n   * conflatable message of the same `type` has already been posted\n   * to the handler, the `conflate()` method of the existing message\n   * will be invoked. If that method returns `true`, the new message\n   * will not be enqueued. This allows messages to be compressed, so\n   * that only a single instance of the message type is processed per\n   * cycle, no matter how many times messages of that type are posted.\n   *\n   * Custom message types may reimplement this property.\n   *\n   * The default implementation is always `false`.\n   */\n  get isConflatable(): boolean {\n    return false;\n  }\n\n  /**\n   * Conflate this message with another message of the same `type`.\n   *\n   * @param other - A conflatable message of the same `type`.\n   *\n   * @returns `true` if the message was successfully conflated, or\n   *   `false` otherwise.\n   *\n   * #### Notes\n   * Message conflation is an advanced topic. Most message types will\n   * not make use of this feature.\n   *\n   * This method is called automatically by the message loop when the\n   * given message is posted to the handler paired with this message.\n   * This message will already be enqueued and conflatable, and the\n   * given message will have the same `type` and also be conflatable.\n   *\n   * This method should merge the state of the other message into this\n   * message as needed so that when this message is finally delivered\n   * to the handler, it receives the most up-to-date information.\n   *\n   * If this method returns `true`, it signals that the other message\n   * was successfully conflated and that message will not be enqueued.\n   *\n   * If this method returns `false`, the other message will be enqueued\n   * for normal delivery.\n   *\n   * Custom message types may reimplement this method.\n   *\n   * The default implementation always returns `false`.\n   */\n  conflate(other: Message): boolean {\n    return false;\n  }\n}\n\n/**\n * A convenience message class which conflates automatically.\n *\n * #### Notes\n * Message conflation is an advanced topic. Most user code will not\n * make use of this class.\n *\n * This message class is useful for creating message instances which\n * should be conflated, but which have no state other than `type`.\n *\n * If conflation of stateful messages is required, a custom `Message`\n * subclass should be created.\n */\nexport class ConflatableMessage extends Message {\n  /**\n   * Test whether the message is conflatable.\n   *\n   * #### Notes\n   * This property is always `true`.\n   */\n  get isConflatable(): boolean {\n    return true;\n  }\n\n  /**\n   * Conflate this message with another message of the same `type`.\n   *\n   * #### Notes\n   * This method always returns `true`.\n   */\n  conflate(other: ConflatableMessage): boolean {\n    return true;\n  }\n}\n\n/**\n * An object which handles messages.\n *\n * #### Notes\n * A message handler is a simple way of defining a type which can act\n * upon on a large variety of external input without requiring a large\n * abstract API surface. This is particularly useful in the context of\n * widget frameworks where the number of distinct message types can be\n * unbounded.\n */\nexport interface IMessageHandler {\n  /**\n   * Process a message sent to the handler.\n   *\n   * @param msg - The message to be processed.\n   */\n  processMessage(msg: Message): void;\n}\n\n/**\n * An object which intercepts messages sent to a message handler.\n *\n * #### Notes\n * A message hook is useful for intercepting or spying on messages\n * sent to message handlers which were either not created by the\n * consumer, or when subclassing the handler is not feasible.\n *\n * If `messageHook` returns `false`, no other message hooks will be\n * invoked and the message will not be delivered to the handler.\n *\n * If all installed message hooks return `true`, the message will\n * be delivered to the handler for processing.\n *\n * **See also:** {@link MessageLoop.installMessageHook} and {@link MessageLoop.removeMessageHook}\n */\nexport interface IMessageHook {\n  /**\n   * Intercept a message sent to a message handler.\n   *\n   * @param handler - The target handler of the message.\n   *\n   * @param msg - The message to be sent to the handler.\n   *\n   * @returns `true` if the message should continue to be processed\n   *   as normal, or `false` if processing should cease immediately.\n   */\n  messageHook(handler: IMessageHandler, msg: Message): boolean;\n}\n\n/**\n * A type alias for message hook object or function.\n *\n * #### Notes\n * The signature and semantics of a message hook function are the same\n * as the `messageHook` method of {@link IMessageHook}.\n */\nexport type MessageHook =\n  | IMessageHook\n  | ((handler: IMessageHandler, msg: Message) => boolean);\n\n/**\n * The namespace for the global singleton message loop.\n */\nexport namespace MessageLoop {\n  /**\n   * A function that cancels the pending loop task; `null` if unavailable.\n   */\n  let pending: (() => void) | null = null;\n\n  /**\n   * Schedules a function for invocation as soon as possible asynchronously.\n   *\n   * @param fn The function to invoke when called back.\n   *\n   * @returns An anonymous function that will unschedule invocation if possible.\n   */\n  const schedule = (\n    resolved =>\n    (fn: () => unknown): (() => void) => {\n      let rejected = false;\n      resolved.then(() => !rejected && fn());\n      return () => {\n        rejected = true;\n      };\n    }\n  )(Promise.resolve());\n\n  /**\n   * Send a message to a message handler to process immediately.\n   *\n   * @param handler - The handler which should process the message.\n   *\n   * @param msg - The message to deliver to the handler.\n   *\n   * #### Notes\n   * The message will first be sent through any installed message hooks\n   * for the handler. If the message passes all hooks, it will then be\n   * delivered to the `processMessage` method of the handler.\n   *\n   * The message will not be conflated with pending posted messages.\n   *\n   * Exceptions in hooks and handlers will be caught and logged.\n   */\n  export function sendMessage(handler: IMessageHandler, msg: Message): void {\n    // Lookup the message hooks for the handler.\n    let hooks = messageHooks.get(handler);\n\n    // Handle the common case of no installed hooks.\n    if (!hooks || hooks.length === 0) {\n      invokeHandler(handler, msg);\n      return;\n    }\n\n    // Invoke the message hooks starting with the newest first.\n    let passed = every(retro(hooks), hook => {\n      return hook ? invokeHook(hook, handler, msg) : true;\n    });\n\n    // Invoke the handler if the message passes all hooks.\n    if (passed) {\n      invokeHandler(handler, msg);\n    }\n  }\n\n  /**\n   * Post a message to a message handler to process in the future.\n   *\n   * @param handler - The handler which should process the message.\n   *\n   * @param msg - The message to post to the handler.\n   *\n   * #### Notes\n   * The message will be conflated with the pending posted messages for\n   * the handler, if possible. If the message is not conflated, it will\n   * be queued for normal delivery on the next cycle of the event loop.\n   *\n   * Exceptions in hooks and handlers will be caught and logged.\n   */\n  export function postMessage(handler: IMessageHandler, msg: Message): void {\n    // Handle the common case of a non-conflatable message.\n    if (!msg.isConflatable) {\n      enqueueMessage(handler, msg);\n      return;\n    }\n\n    // Conflate the message with an existing message if possible.\n    let conflated = some(messageQueue, posted => {\n      if (posted.handler !== handler) {\n        return false;\n      }\n      if (!posted.msg) {\n        return false;\n      }\n      if (posted.msg.type !== msg.type) {\n        return false;\n      }\n      if (!posted.msg.isConflatable) {\n        return false;\n      }\n      return posted.msg.conflate(msg);\n    });\n\n    // Enqueue the message if it was not conflated.\n    if (!conflated) {\n      enqueueMessage(handler, msg);\n    }\n  }\n\n  /**\n   * Install a message hook for a message handler.\n   *\n   * @param handler - The message handler of interest.\n   *\n   * @param hook - The message hook to install.\n   *\n   * #### Notes\n   * A message hook is invoked before a message is delivered to the\n   * handler. If the hook returns `false`, no other hooks will be\n   * invoked and the message will not be delivered to the handler.\n   *\n   * The most recently installed message hook is executed first.\n   *\n   * If the hook is already installed, this is a no-op.\n   */\n  export function installMessageHook(\n    handler: IMessageHandler,\n    hook: MessageHook\n  ): void {\n    // Look up the hooks for the handler.\n    let hooks = messageHooks.get(handler);\n\n    // Bail early if the hook is already installed.\n    if (hooks && hooks.indexOf(hook) !== -1) {\n      return;\n    }\n\n    // Add the hook to the end, so it will be the first to execute.\n    if (!hooks) {\n      messageHooks.set(handler, [hook]);\n    } else {\n      hooks.push(hook);\n    }\n  }\n\n  /**\n   * Remove an installed message hook for a message handler.\n   *\n   * @param handler - The message handler of interest.\n   *\n   * @param hook - The message hook to remove.\n   *\n   * #### Notes\n   * It is safe to call this function while the hook is executing.\n   *\n   * If the hook is not installed, this is a no-op.\n   */\n  export function removeMessageHook(\n    handler: IMessageHandler,\n    hook: MessageHook\n  ): void {\n    // Lookup the hooks for the handler.\n    let hooks = messageHooks.get(handler);\n\n    // Bail early if the hooks do not exist.\n    if (!hooks) {\n      return;\n    }\n\n    // Lookup the index of the hook and bail if not found.\n    let i = hooks.indexOf(hook);\n    if (i === -1) {\n      return;\n    }\n\n    // Clear the hook and schedule a cleanup of the array.\n    hooks[i] = null;\n    scheduleCleanup(hooks);\n  }\n\n  /**\n   * Clear all message data associated with a message handler.\n   *\n   * @param handler - The message handler of interest.\n   *\n   * #### Notes\n   * This will clear all posted messages and hooks for the handler.\n   */\n  export function clearData(handler: IMessageHandler): void {\n    // Lookup the hooks for the handler.\n    let hooks = messageHooks.get(handler);\n\n    // Clear all messsage hooks for the handler.\n    if (hooks && hooks.length > 0) {\n      ArrayExt.fill(hooks, null);\n      scheduleCleanup(hooks);\n    }\n\n    // Clear all posted messages for the handler.\n    for (const posted of messageQueue) {\n      if (posted.handler === handler) {\n        posted.handler = null;\n        posted.msg = null;\n      }\n    }\n  }\n\n  /**\n   * Process the pending posted messages in the queue immediately.\n   *\n   * #### Notes\n   * This function is useful when posted messages must be processed immediately.\n   *\n   * This function should normally not be needed, but it may be\n   * required to work around certain browser idiosyncrasies.\n   *\n   * Recursing into this function is a no-op.\n   */\n  export function flush(): void {\n    // Bail if recursion is detected or if there is no pending task.\n    if (flushGuard || pending === null) {\n      return;\n    }\n\n    // Unschedule the pending loop task.\n    pending();\n    pending = null;\n\n    // Run the message loop within the recursion guard.\n    flushGuard = true;\n    runMessageLoop();\n    flushGuard = false;\n  }\n\n  /**\n   * A type alias for the exception handler function.\n   */\n  export type ExceptionHandler = (err: Error) => void;\n\n  /**\n   * Get the message loop exception handler.\n   *\n   * @returns The current exception handler.\n   *\n   * #### Notes\n   * The default exception handler is `console.error`.\n   */\n  export function getExceptionHandler(): ExceptionHandler {\n    return exceptionHandler;\n  }\n\n  /**\n   * Set the message loop exception handler.\n   *\n   * @param handler - The function to use as the exception handler.\n   *\n   * @returns The old exception handler.\n   *\n   * #### Notes\n   * The exception handler is invoked when a message handler or a\n   * message hook throws an exception.\n   */\n  export function setExceptionHandler(\n    handler: ExceptionHandler\n  ): ExceptionHandler {\n    let old = exceptionHandler;\n    exceptionHandler = handler;\n    return old;\n  }\n\n  /**\n   * A type alias for a posted message pair.\n   */\n  type PostedMessage = { handler: IMessageHandler | null; msg: Message | null };\n\n  /**\n   * The queue of posted message pairs.\n   */\n  const messageQueue = new LinkedList<PostedMessage>();\n\n  /**\n   * A mapping of handler to array of installed message hooks.\n   */\n  const messageHooks = new WeakMap<\n    IMessageHandler,\n    Array<MessageHook | null>\n  >();\n\n  /**\n   * A set of message hook arrays which are pending cleanup.\n   */\n  const dirtySet = new Set<Array<MessageHook | null>>();\n\n  /**\n   * The message loop exception handler.\n   */\n  let exceptionHandler: ExceptionHandler = (err: Error) => {\n    console.error(err);\n  };\n\n  /**\n   * A guard flag to prevent flush recursion.\n   */\n  let flushGuard = false;\n\n  /**\n   * Invoke a message hook with the specified handler and message.\n   *\n   * Returns the result of the hook, or `true` if the hook throws.\n   *\n   * Exceptions in the hook will be caught and logged.\n   */\n  function invokeHook(\n    hook: MessageHook,\n    handler: IMessageHandler,\n    msg: Message\n  ): boolean {\n    let result = true;\n    try {\n      if (typeof hook === 'function') {\n        result = hook(handler, msg);\n      } else {\n        result = hook.messageHook(handler, msg);\n      }\n    } catch (err) {\n      exceptionHandler(err);\n    }\n    return result;\n  }\n\n  /**\n   * Invoke a message handler with the specified message.\n   *\n   * Exceptions in the handler will be caught and logged.\n   */\n  function invokeHandler(handler: IMessageHandler, msg: Message): void {\n    try {\n      handler.processMessage(msg);\n    } catch (err) {\n      exceptionHandler(err);\n    }\n  }\n\n  /**\n   * Add a message to the end of the message queue.\n   *\n   * This will automatically schedule a run of the message loop.\n   */\n  function enqueueMessage(handler: IMessageHandler, msg: Message): void {\n    // Add the posted message to the queue.\n    messageQueue.addLast({ handler, msg });\n\n    // Bail if a loop task is already pending.\n    if (pending !== null) {\n      return;\n    }\n\n    // Schedule a run of the message loop.\n    pending = schedule(runMessageLoop);\n  }\n\n  /**\n   * Run an iteration of the message loop.\n   *\n   * This will process all pending messages in the queue. If a message\n   * is added to the queue while the message loop is running, it will\n   * be processed on the next cycle of the loop.\n   */\n  function runMessageLoop(): void {\n    // Clear the task so the next loop can be scheduled.\n    pending = null;\n\n    // If the message queue is empty, there is nothing else to do.\n    if (messageQueue.isEmpty) {\n      return;\n    }\n\n    // Add a sentinel value to the end of the queue. The queue will\n    // only be processed up to the sentinel. Messages posted during\n    // this cycle will execute on the next cycle.\n    let sentinel: PostedMessage = { handler: null, msg: null };\n    messageQueue.addLast(sentinel);\n\n    // Enter the message loop.\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      // Remove the first posted message in the queue.\n      let posted = messageQueue.removeFirst()!;\n\n      // If the value is the sentinel, exit the loop.\n      if (posted === sentinel) {\n        return;\n      }\n\n      // Dispatch the message if it has not been cleared.\n      if (posted.handler && posted.msg) {\n        sendMessage(posted.handler, posted.msg);\n      }\n    }\n  }\n\n  /**\n   * Schedule a cleanup of a message hooks array.\n   *\n   * This will add the array to the dirty set and schedule a deferred\n   * cleanup of the array contents. On cleanup, any `null` hook will\n   * be removed from the array.\n   */\n  function scheduleCleanup(hooks: Array<MessageHook | null>): void {\n    if (dirtySet.size === 0) {\n      schedule(cleanupDirtySet);\n    }\n    dirtySet.add(hooks);\n  }\n\n  /**\n   * Cleanup the message hook arrays in the dirty set.\n   *\n   * This function should only be invoked asynchronously, when the\n   * stack frame is guaranteed to not be on the path of user code.\n   */\n  function cleanupDirtySet(): void {\n    dirtySet.forEach(cleanupHooks);\n    dirtySet.clear();\n  }\n\n  /**\n   * Cleanup the dirty hooks in a message hooks array.\n   *\n   * This will remove any `null` hook from the array.\n   *\n   * This function should only be invoked asynchronously, when the\n   * stack frame is guaranteed to not be on the path of user code.\n   */\n  function cleanupHooks(hooks: Array<MessageHook | null>): void {\n    ArrayExt.removeAllWhere(hooks, isNull);\n  }\n\n  /**\n   * Test whether a value is `null`.\n   */\n  function isNull<T>(value: T | null): boolean {\n    return value === null;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * @packageDocumentation\n * @module properties\n */\n\n/**\n * A class which attaches a value to an external object.\n *\n * #### Notes\n * Attached properties are used to extend the state of an object with\n * semantic data from an unrelated class. They also encapsulate value\n * creation, coercion, and notification.\n *\n * Because attached property values are stored in a hash table, which\n * in turn is stored in a WeakMap keyed on the owner object, there is\n * non-trivial storage overhead involved in their use. The pattern is\n * therefore best used for the storage of rare data.\n */\nexport class AttachedProperty<T, U> {\n  /**\n   * Construct a new attached property.\n   *\n   * @param options - The options for initializing the property.\n   */\n  constructor(options: AttachedProperty.IOptions<T, U>) {\n    this.name = options.name;\n    this._create = options.create;\n    this._coerce = options.coerce || null;\n    this._compare = options.compare || null;\n    this._changed = options.changed || null;\n  }\n\n  /**\n   * The human readable name for the property.\n   */\n  readonly name: string;\n\n  /**\n   * Get the current value of the property for a given owner.\n   *\n   * @param owner - The property owner of interest.\n   *\n   * @returns The current value of the property.\n   *\n   * #### Notes\n   * If the value has not yet been set, the default value will be\n   * computed and assigned as the current value of the property.\n   */\n  get(owner: T): U {\n    let value: U;\n    let map = Private.ensureMap(owner);\n    if (this._pid in map) {\n      value = map[this._pid];\n    } else {\n      value = map[this._pid] = this._createValue(owner);\n    }\n    return value;\n  }\n\n  /**\n   * Set the current value of the property for a given owner.\n   *\n   * @param owner - The property owner of interest.\n   *\n   * @param value - The value for the property.\n   *\n   * #### Notes\n   * If the value has not yet been set, the default value will be\n   * computed and used as the previous value for the comparison.\n   */\n  set(owner: T, value: U): void {\n    let oldValue: U;\n    let map = Private.ensureMap(owner);\n    if (this._pid in map) {\n      oldValue = map[this._pid];\n    } else {\n      oldValue = map[this._pid] = this._createValue(owner);\n    }\n    let newValue = this._coerceValue(owner, value);\n    this._maybeNotify(owner, oldValue, (map[this._pid] = newValue));\n  }\n\n  /**\n   * Explicitly coerce the current property value for a given owner.\n   *\n   * @param owner - The property owner of interest.\n   *\n   * #### Notes\n   * If the value has not yet been set, the default value will be\n   * computed and used as the previous value for the comparison.\n   */\n  coerce(owner: T): void {\n    let oldValue: U;\n    let map = Private.ensureMap(owner);\n    if (this._pid in map) {\n      oldValue = map[this._pid];\n    } else {\n      oldValue = map[this._pid] = this._createValue(owner);\n    }\n    let newValue = this._coerceValue(owner, oldValue);\n    this._maybeNotify(owner, oldValue, (map[this._pid] = newValue));\n  }\n\n  /**\n   * Get or create the default value for the given owner.\n   */\n  private _createValue(owner: T): U {\n    let create = this._create;\n    return create(owner);\n  }\n\n  /**\n   * Coerce the value for the given owner.\n   */\n  private _coerceValue(owner: T, value: U): U {\n    let coerce = this._coerce;\n    return coerce ? coerce(owner, value) : value;\n  }\n\n  /**\n   * Compare the old value and new value for equality.\n   */\n  private _compareValue(oldValue: U, newValue: U): boolean {\n    let compare = this._compare;\n    return compare ? compare(oldValue, newValue) : oldValue === newValue;\n  }\n\n  /**\n   * Run the change notification if the given values are different.\n   */\n  private _maybeNotify(owner: T, oldValue: U, newValue: U): void {\n    let changed = this._changed;\n    if (changed && !this._compareValue(oldValue, newValue)) {\n      changed(owner, oldValue, newValue);\n    }\n  }\n\n  private _pid = Private.nextPID();\n  private _create: (owner: T) => U;\n  private _coerce: ((owner: T, value: U) => U) | null;\n  private _compare: ((oldValue: U, newValue: U) => boolean) | null;\n  private _changed: ((owner: T, oldValue: U, newValue: U) => void) | null;\n}\n\n/**\n * The namespace for the `AttachedProperty` class statics.\n */\nexport namespace AttachedProperty {\n  /**\n   * The options object used to initialize an attached property.\n   */\n  export interface IOptions<T, U> {\n    /**\n     * The human readable name for the property.\n     *\n     * #### Notes\n     * By convention, this should be the same as the name used to define\n     * the public accessor for the property value.\n     *\n     * This **does not** have an effect on the property lookup behavior.\n     * Multiple properties may share the same name without conflict.\n     */\n    name: string;\n\n    /**\n     * A factory function used to create the default property value.\n     *\n     * #### Notes\n     * This will be called whenever the property value is required,\n     * but has not yet been set for a given owner.\n     */\n    create: (owner: T) => U;\n\n    /**\n     * A function used to coerce a supplied value into the final value.\n     *\n     * #### Notes\n     * This will be called whenever the property value is changed, or\n     * when the property is explicitly coerced. The return value will\n     * be used as the final value of the property.\n     *\n     * This will **not** be called for the initial default value.\n     */\n    coerce?: (owner: T, value: U) => U;\n\n    /**\n     * A function used to compare two values for equality.\n     *\n     * #### Notes\n     * This is called to determine if the property value has changed.\n     * It should return `true` if the given values are equivalent, or\n     * `false` if they are different.\n     *\n     * If this is not provided, it defaults to the `===` operator.\n     */\n    compare?: (oldValue: U, newValue: U) => boolean;\n\n    /**\n     * A function called when the property value has changed.\n     *\n     * #### Notes\n     * This will be invoked when the property value is changed and the\n     * comparator indicates that the old value is not equal to the new\n     * value.\n     *\n     * This will **not** be called for the initial default value.\n     */\n    changed?: (owner: T, oldValue: U, newValue: U) => void;\n  }\n\n  /**\n   * Clear the stored property data for the given owner.\n   *\n   * @param owner - The property owner of interest.\n   *\n   * #### Notes\n   * This will clear all property values for the owner, but it will\n   * **not** run the change notification for any of the properties.\n   */\n  export function clearData(owner: unknown): void {\n    Private.ownerData.delete(owner);\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A typedef for a mapping of property id to property value.\n   */\n  export type PropertyMap = { [key: string]: any };\n\n  /**\n   * A weak mapping of property owner to property map.\n   */\n  export const ownerData = new WeakMap<any, PropertyMap>();\n\n  /**\n   * A function which computes successive unique property ids.\n   */\n  export const nextPID = (() => {\n    let id = 0;\n    return () => {\n      let rand = Math.random();\n      let stem = `${rand}`.slice(2);\n      return `pid-${stem}-${id++}`;\n    };\n  })();\n\n  /**\n   * Lookup the data map for the property owner.\n   *\n   * This will create the map if one does not already exist.\n   */\n  export function ensureMap(owner: unknown): PropertyMap {\n    let map = ownerData.get(owner);\n    if (map) {\n      return map;\n    }\n    map = Object.create(null) as PropertyMap;\n    ownerData.set(owner, map);\n    return map;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { IDisposable } from '@lumino/disposable';\nimport { Message, MessageLoop } from '@lumino/messaging';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { Widget } from '@lumino/widgets';\nimport * as React from 'react';\nimport { createRoot, Root } from 'react-dom/client';\n\ntype ReactRenderElement =\n  | Array<React.ReactElement<any>>\n  | React.ReactElement<any>;\n\n/**\n * An abstract class for a Lumino widget which renders a React component.\n */\nexport abstract class ReactWidget extends Widget {\n  constructor() {\n    super();\n  }\n  /**\n   * Creates a new `ReactWidget` that renders a constant element.\n   * @param element React element to render.\n   */\n  static create(element: ReactRenderElement): ReactWidget {\n    return new (class extends ReactWidget {\n      render() {\n        return element;\n      }\n    })();\n  }\n\n  /**\n   * Render the content of this widget using the virtual DOM.\n   *\n   * This method will be called anytime the widget needs to be rendered, which\n   * includes layout triggered rendering.\n   *\n   * Subclasses should define this method and return the root React nodes here.\n   */\n  protected abstract render(): ReactRenderElement | null;\n\n  /**\n   * Called to update the state of the widget.\n   *\n   * The default implementation of this method triggers\n   * VDOM based rendering by calling the `renderDOM` method.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    this.renderPromise = this.renderDOM();\n  }\n\n  /**\n   * Called after the widget is attached to the DOM\n   */\n  protected onAfterAttach(msg: Message): void {\n    // Make *sure* the widget is rendered.\n    MessageLoop.sendMessage(this, Widget.Msg.UpdateRequest);\n  }\n\n  /**\n   * Called before the widget is detached from the DOM.\n   */\n  protected onBeforeDetach(msg: Message): void {\n    // Unmount the component so it can tear down.\n    if (this._rootDOM !== null) {\n      this._rootDOM.unmount();\n      this._rootDOM = null;\n    }\n  }\n\n  /**\n   * Render the React nodes to the DOM.\n   *\n   * @returns a promise that resolves when the rendering is done.\n   */\n  private renderDOM(): Promise<void> {\n    return new Promise<void>(resolve => {\n      const vnode = this.render();\n      if (this._rootDOM === null) {\n        this._rootDOM = createRoot(this.node);\n      }\n      // Split up the array/element cases so type inference chooses the right\n      // signature.\n      if (Array.isArray(vnode)) {\n        this._rootDOM.render(vnode);\n        // Resolves after the widget has been rendered.\n        // https://github.com/reactwg/react-18/discussions/5#discussioncomment-798304\n        requestIdleCallback(() => resolve());\n      } else if (vnode) {\n        this._rootDOM.render(vnode);\n        // Resolves after the widget has been rendered.\n        // https://github.com/reactwg/react-18/discussions/5#discussioncomment-798304\n        requestIdleCallback(() => resolve());\n      } else {\n        // If the virtual node is null, unmount the node content\n        this._rootDOM.unmount();\n        this._rootDOM = null;\n        requestIdleCallback(() => resolve());\n      }\n    });\n  }\n\n  // Set whenever a new render is triggered and resolved when it is finished.\n  renderPromise?: Promise<void>;\n  private _rootDOM: Root | null = null;\n}\n\n/**\n * An abstract ReactWidget with a model.\n */\nexport abstract class VDomRenderer<\n  T extends VDomRenderer.IModel | null = null\n> extends ReactWidget {\n  /**\n   * Create a new VDomRenderer\n   */\n  constructor(model?: T) {\n    super();\n    this.model = (model ?? null) as unknown as T;\n  }\n  /**\n   * A signal emitted when the model changes.\n   */\n  get modelChanged(): ISignal<this, void> {\n    return this._modelChanged;\n  }\n\n  /**\n   * Set the model and fire changed signals.\n   */\n  set model(newValue: T) {\n    if (this._model === newValue) {\n      return;\n    }\n\n    if (this._model) {\n      this._model.stateChanged.disconnect(this.update, this);\n    }\n    this._model = newValue;\n    if (newValue) {\n      newValue.stateChanged.connect(this.update, this);\n    }\n    this.update();\n    this._modelChanged.emit(void 0);\n  }\n\n  /**\n   * Get the current model.\n   */\n  get model(): T {\n    return this._model;\n  }\n\n  /**\n   * Dispose this widget.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._model = null!;\n    super.dispose();\n  }\n\n  private _model: T;\n  private _modelChanged = new Signal<this, void>(this);\n}\n\n/**\n * Props for the UseSignal component\n */\nexport interface IUseSignalProps<SENDER, ARGS> {\n  /**\n   * Phosphor signal to connect to.\n   */\n\n  signal: ISignal<SENDER, ARGS>;\n  /**\n   * Initial value to use for the sender, used before the signal emits a value.\n   * If not provided, initial sender will be undefined\n   */\n  initialSender?: SENDER;\n  /**\n   * Initial value to use for the args, used before the signal emits a value.\n   * If not provided, initial args will be undefined.\n   */\n  initialArgs?: ARGS;\n  /**\n   * Function mapping the last signal value or initial values to an element to render.\n   *\n   * Note: returns `React.ReactNode` as per\n   * https://github.com/sw-yx/react-typescript-cheatsheet#higher-order-componentsrender-props\n   */\n\n  children: (sender?: SENDER, args?: ARGS) => React.ReactNode;\n  /**\n   * Given the last signal value, should return whether to update the state or not.\n   *\n   * The default unconditionally returns `true`, so you only have to override if you want\n   * to skip some updates.\n   */\n\n  shouldUpdate?: (sender: SENDER, args: ARGS) => boolean;\n}\n\n/**\n * State for the UseSignal component\n */\nexport interface IUseSignalState<SENDER, ARGS> {\n  value: [SENDER?, ARGS?];\n}\n\n/**\n * UseSignal provides a way to hook up a Lumino signal to a React element,\n * so that the element is re-rendered every time the signal fires.\n *\n * It is implemented through the \"render props\" technique, using the `children`\n * prop as a function to render, so that it can be used either as a prop or as a child\n * of this element\n * https://reactjs.org/docs/render-props.html\n *\n *\n * Example as child:\n *\n * ```\n * function LiveButton(isActiveSignal: ISignal<any, boolean>) {\n *  return (\n *    <UseSignal signal={isActiveSignal} initialArgs={true}>\n *     {(_, isActive) => <Button isActive={isActive}>}\n *    </UseSignal>\n *  )\n * }\n * ```\n *\n * Example as prop:\n *\n * ```\n * function LiveButton(isActiveSignal: ISignal<any, boolean>) {\n *  return (\n *    <UseSignal\n *      signal={isActiveSignal}\n *      initialArgs={true}\n *      children={(_, isActive) => <Button isActive={isActive}>}\n *    />\n *  )\n * }\n * ```\n */\nexport class UseSignal<SENDER, ARGS> extends React.Component<\n  IUseSignalProps<SENDER, ARGS>,\n  IUseSignalState<SENDER, ARGS>\n> {\n  constructor(props: IUseSignalProps<SENDER, ARGS>) {\n    super(props);\n    this.state = { value: [this.props.initialSender, this.props.initialArgs] };\n  }\n\n  componentDidMount(): void {\n    this.props.signal.connect(this.slot);\n  }\n\n  componentWillUnmount(): void {\n    this.props.signal.disconnect(this.slot);\n  }\n\n  private slot = (sender: SENDER, args: ARGS) => {\n    // skip setting new state if we have a shouldUpdate function and it returns false\n    if (this.props.shouldUpdate && !this.props.shouldUpdate(sender, args)) {\n      return;\n    }\n    this.setState({ value: [sender, args] });\n  };\n\n  render(): React.ReactNode {\n    return this.props.children(...this.state.value);\n  }\n}\n\n/**\n * The namespace for VDomRenderer statics.\n */\nexport namespace VDomRenderer {\n  /**\n   * An interface for a model to be used with vdom rendering.\n   */\n  export interface IModel extends IDisposable {\n    /**\n     * A signal emitted when any model state changes.\n     */\n    readonly stateChanged: ISignal<this, void>;\n  }\n}\n\n/**\n * Concrete implementation of VDomRenderer model.\n */\nexport class VDomModel implements VDomRenderer.IModel {\n  /**\n   * A signal emitted when any model state changes.\n   */\n  readonly stateChanged = new Signal<this, void>(this);\n\n  /**\n   * Test whether the model is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * Dispose the model.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    Signal.clearData(this);\n  }\n\n  private _isDisposed = false;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { ITranslator, nullTranslator } from '@jupyterlab/translation';\nimport { find, map, some } from '@lumino/algorithm';\nimport { CommandRegistry } from '@lumino/commands';\nimport { ReadonlyJSONObject } from '@lumino/coreutils';\nimport { Message, MessageLoop } from '@lumino/messaging';\nimport { AttachedProperty } from '@lumino/properties';\nimport { Layout, PanelLayout, Widget } from '@lumino/widgets';\nimport { Throttler } from '@lumino/polling';\nimport * as React from 'react';\nimport { Button } from './button';\nimport { ellipsesIcon, LabIcon } from '../icon';\nimport { classes } from '../utils';\nimport { ReactWidget, UseSignal } from './vdom';\n\n/**\n * The class name added to toolbars.\n */\nconst TOOLBAR_CLASS = 'jp-Toolbar';\n\n/**\n * The class name added to toolbar items.\n */\nconst TOOLBAR_ITEM_CLASS = 'jp-Toolbar-item';\n\n/**\n * Toolbar pop-up opener button name\n */\nconst TOOLBAR_OPENER_NAME = 'toolbar-popup-opener';\n\n/**\n * The class name added to toolbar spacer.\n */\nconst TOOLBAR_SPACER_CLASS = 'jp-Toolbar-spacer';\n\n/**\n * A layout for toolbars.\n *\n * #### Notes\n * This layout automatically collapses its height if there are no visible\n * toolbar widgets, and expands to the standard toolbar height if there are\n * visible toolbar widgets.\n */\nclass ToolbarLayout extends PanelLayout {\n  /**\n   * A message handler invoked on a `'fit-request'` message.\n   *\n   * If any child widget is visible, expand the toolbar height to the normal\n   * toolbar height.\n   */\n  protected onFitRequest(msg: Message): void {\n    super.onFitRequest(msg);\n    if (this.parent!.isAttached) {\n      // If there are any widgets not explicitly hidden, expand the toolbar to\n      // accommodate them.\n      if (some(this.widgets, w => !w.isHidden)) {\n        this.parent!.node.style.minHeight = 'var(--jp-private-toolbar-height)';\n        this.parent!.removeClass('jp-Toolbar-micro');\n      } else {\n        this.parent!.node.style.minHeight = '';\n        this.parent!.addClass('jp-Toolbar-micro');\n      }\n    }\n\n    // Set the dirty flag to ensure only a single update occurs.\n    this._dirty = true;\n\n    // Notify the ancestor that it should fit immediately. This may\n    // cause a resize of the parent, fulfilling the required update.\n    if (this.parent!.parent) {\n      MessageLoop.sendMessage(this.parent!.parent!, Widget.Msg.FitRequest);\n    }\n\n    // If the dirty flag is still set, the parent was not resized.\n    // Trigger the required update on the parent widget immediately.\n    if (this._dirty) {\n      MessageLoop.sendMessage(this.parent!, Widget.Msg.UpdateRequest);\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    super.onUpdateRequest(msg);\n    if (this.parent!.isVisible) {\n      this._dirty = false;\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'child-shown'` message.\n   */\n  protected onChildShown(msg: Widget.ChildMessage): void {\n    super.onChildShown(msg);\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'child-hidden'` message.\n   */\n  protected onChildHidden(msg: Widget.ChildMessage): void {\n    super.onChildHidden(msg);\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * A message handler invoked on a `'before-attach'` message.\n   */\n  protected onBeforeAttach(msg: Message): void {\n    super.onBeforeAttach(msg);\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * Attach a widget to the parent's DOM node.\n   *\n   * @param index - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to attach to the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected attachWidget(index: number, widget: Widget): void {\n    super.attachWidget(index, widget);\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  /**\n   * Detach a widget from the parent's DOM node.\n   *\n   * @param index - The previous index of the widget in the layout.\n   *\n   * @param widget - The widget to detach from the parent.\n   *\n   * #### Notes\n   * This is a reimplementation of the superclass method.\n   */\n  protected detachWidget(index: number, widget: Widget): void {\n    super.detachWidget(index, widget);\n\n    // Post a fit request for the parent widget.\n    this.parent!.fit();\n  }\n\n  private _dirty = false;\n}\n\n/**\n * A class which provides a toolbar widget.\n */\nexport class Toolbar<T extends Widget = Widget> extends Widget {\n  /**\n   * Construct a new toolbar widget.\n   */\n  constructor(options: Toolbar.IOptions = {}) {\n    super();\n    this.addClass(TOOLBAR_CLASS);\n    this.layout = options.layout ?? new ToolbarLayout();\n  }\n\n  /**\n   * Get an iterator over the ordered toolbar item names.\n   *\n   * @returns An iterator over the toolbar item names.\n   */\n  names(): IterableIterator<string> {\n    const layout = this.layout as ToolbarLayout;\n    return map(layout.widgets, widget => {\n      return Private.nameProperty.get(widget);\n    });\n  }\n\n  /**\n   * Add an item to the end of the toolbar.\n   *\n   * @param name - The name of the widget to add to the toolbar.\n   *\n   * @param widget - The widget to add to the toolbar.\n   *\n   * @param index - The optional name of the item to insert after.\n   *\n   * @returns Whether the item was added to toolbar.  Returns false if\n   *   an item of the same name is already in the toolbar.\n   *\n   * #### Notes\n   * The item can be removed from the toolbar by setting its parent to `null`.\n   */\n  addItem(name: string, widget: T): boolean {\n    const layout = this.layout as ToolbarLayout;\n    return this.insertItem(layout.widgets.length, name, widget);\n  }\n\n  /**\n   * Insert an item into the toolbar at the specified index.\n   *\n   * @param index - The index at which to insert the item.\n   *\n   * @param name - The name of the item.\n   *\n   * @param widget - The widget to add.\n   *\n   * @returns Whether the item was added to the toolbar. Returns false if\n   *   an item of the same name is already in the toolbar.\n   *\n   * #### Notes\n   * The index will be clamped to the bounds of the items.\n   * The item can be removed from the toolbar by setting its parent to `null`.\n   */\n  insertItem(index: number, name: string, widget: T): boolean {\n    const existing = find(this.names(), value => value === name);\n    if (existing) {\n      return false;\n    }\n    widget.addClass(TOOLBAR_ITEM_CLASS);\n    const layout = this.layout as ToolbarLayout;\n\n    const j = Math.max(0, Math.min(index, layout.widgets.length));\n    layout.insertWidget(j, widget);\n\n    Private.nameProperty.set(widget, name);\n    return true;\n  }\n\n  /**\n   * Insert an item into the toolbar at the after a target item.\n   *\n   * @param at - The target item to insert after.\n   *\n   * @param name - The name of the item.\n   *\n   * @param widget - The widget to add.\n   *\n   * @returns Whether the item was added to the toolbar. Returns false if\n   *   an item of the same name is already in the toolbar.\n   *\n   * #### Notes\n   * The index will be clamped to the bounds of the items.\n   * The item can be removed from the toolbar by setting its parent to `null`.\n   */\n  insertAfter(at: string, name: string, widget: T): boolean {\n    return this._insertRelative(at, 1, name, widget);\n  }\n\n  /**\n   * Insert an item into the toolbar at the before a target item.\n   *\n   * @param at - The target item to insert before.\n   *\n   * @param name - The name of the item.\n   *\n   * @param widget - The widget to add.\n   *\n   * @returns Whether the item was added to the toolbar. Returns false if\n   *   an item of the same name is already in the toolbar.\n   *\n   * #### Notes\n   * The index will be clamped to the bounds of the items.\n   * The item can be removed from the toolbar by setting its parent to `null`.\n   */\n  insertBefore(at: string, name: string, widget: T): boolean {\n    return this._insertRelative(at, 0, name, widget);\n  }\n\n  private _insertRelative(\n    at: string,\n    offset: number,\n    name: string,\n    widget: T\n  ): boolean {\n    const nameWithIndex = map(this.names(), (name, i) => {\n      return { name: name, index: i };\n    });\n    const target = find(nameWithIndex, x => x.name === at);\n    if (target) {\n      return this.insertItem(target.index + offset, name, widget);\n    }\n    return false;\n  }\n\n  /**\n   * Handle the DOM events for the widget.\n   *\n   * @param event - The DOM event sent to the widget.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the dock panel's node. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'click':\n        this.handleClick(event);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Handle a DOM click event.\n   */\n  protected handleClick(event: Event): void {\n    // Stop propagating the click outside the toolbar\n    event.stopPropagation();\n\n    // Clicking a label focuses the corresponding control\n    // that is linked with `for` attribute, so let it be.\n    if (event.target instanceof HTMLLabelElement) {\n      const forId = event.target.getAttribute('for');\n      if (forId && this.node.querySelector(`#${forId}`)) {\n        return;\n      }\n    }\n\n    // If this click already focused a control, let it be.\n    if (this.node.contains(document.activeElement)) {\n      return;\n    }\n\n    // Otherwise, activate the parent widget, which may take focus if desired.\n    if (this.parent) {\n      this.parent.activate();\n    }\n  }\n\n  /**\n   * Handle `after-attach` messages for the widget.\n   */\n  protected onAfterAttach(msg: Message): void {\n    this.node.addEventListener('click', this);\n  }\n\n  /**\n   * Handle `before-detach` messages for the widget.\n   */\n  protected onBeforeDetach(msg: Message): void {\n    this.node.removeEventListener('click', this);\n  }\n}\n\n/**\n * A class which provides a toolbar widget.\n */\nexport class ReactiveToolbar extends Toolbar<Widget> {\n  /**\n   * Construct a new toolbar widget.\n   */\n  constructor() {\n    super();\n    this.insertItem(0, TOOLBAR_OPENER_NAME, this.popupOpener);\n    this.popupOpener.hide();\n    this._resizer = new Throttler(this._onResize.bind(this), 500);\n  }\n\n  /**\n   * Dispose of the widget and its descendant widgets.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n\n    if (this._resizer) {\n      this._resizer.dispose();\n    }\n\n    super.dispose();\n  }\n\n  /**\n   * Insert an item into the toolbar at the after a target item.\n   *\n   * @param at - The target item to insert after.\n   *\n   * @param name - The name of the item.\n   *\n   * @param widget - The widget to add.\n   *\n   * @returns Whether the item was added to the toolbar. Returns false if\n   *   an item of the same name is already in the toolbar or if the target\n   *   is the toolbar pop-up opener.\n   *\n   * #### Notes\n   * The index will be clamped to the bounds of the items.\n   * The item can be removed from the toolbar by setting its parent to `null`.\n   */\n  insertAfter(at: string, name: string, widget: Widget): boolean {\n    if (at === TOOLBAR_OPENER_NAME) {\n      return false;\n    }\n    return super.insertAfter(at, name, widget);\n  }\n\n  /**\n   * Insert an item into the toolbar at the specified index.\n   *\n   * @param index - The index at which to insert the item.\n   *\n   * @param name - The name of the item.\n   *\n   * @param widget - The widget to add.\n   *\n   * @returns Whether the item was added to the toolbar. Returns false if\n   *   an item of the same name is already in the toolbar.\n   *\n   * #### Notes\n   * The index will be clamped to the bounds of the items.\n   * The item can be removed from the toolbar by setting its parent to `null`.\n   */\n  insertItem(index: number, name: string, widget: Widget): boolean {\n    if (widget instanceof ToolbarPopupOpener) {\n      return super.insertItem(index, name, widget);\n    } else {\n      const j = Math.max(\n        0,\n        Math.min(index, (this.layout as ToolbarLayout).widgets.length - 1)\n      );\n      return super.insertItem(j, name, widget);\n    }\n  }\n\n  /**\n   * A message handler invoked on a `'before-hide'` message.\n   *\n   * It will hide the pop-up panel\n   */\n  onBeforeHide(msg: Message): void {\n    this.popupOpener.hidePopup();\n    super.onBeforeHide(msg);\n  }\n\n  protected onResize(msg: Widget.ResizeMessage): void {\n    super.onResize(msg);\n    if (msg.width > 0 && this._resizer) {\n      void this._resizer.invoke();\n    }\n  }\n\n  private _onResize() {\n    if (this.parent && this.parent.isAttached) {\n      const toolbarWidth = this.node.clientWidth;\n      const opener = this.popupOpener;\n      const openerWidth = 30;\n      const toolbarPadding = 2;\n      const layout = this.layout as ToolbarLayout;\n\n      let width = opener.isHidden\n        ? toolbarPadding\n        : toolbarPadding + openerWidth;\n      let index = 0;\n      const widgetsToRemove = [];\n      const toIndex = layout.widgets.length - 1;\n\n      while (index < toIndex) {\n        const widget = layout.widgets[index];\n        this._saveWidgetWidth(widget);\n        width += this._getWidgetWidth(widget);\n        if (\n          widgetsToRemove.length === 0 &&\n          opener.isHidden &&\n          width + openerWidth > toolbarWidth\n        ) {\n          width += openerWidth;\n        }\n        if (width > toolbarWidth) {\n          widgetsToRemove.push(widget);\n        }\n        index++;\n      }\n\n      while (widgetsToRemove.length > 0) {\n        const widget = widgetsToRemove.pop() as Widget;\n        width -= this._getWidgetWidth(widget);\n        opener.addWidget(widget);\n      }\n\n      if (opener.widgetCount() > 0) {\n        const widgetsToAdd = [];\n        let index = 0;\n        let widget = opener.widgetAt(index);\n        const widgetCount = opener.widgetCount();\n\n        width += this._getWidgetWidth(widget);\n\n        if (widgetCount === 1 && width - openerWidth <= toolbarWidth) {\n          width -= openerWidth;\n        }\n\n        while (width < toolbarWidth && index < widgetCount) {\n          widgetsToAdd.push(widget);\n          index++;\n          widget = opener.widgetAt(index);\n          if (widget) {\n            width += this._getWidgetWidth(widget);\n          } else {\n            break;\n          }\n        }\n\n        while (widgetsToAdd.length > 0) {\n          const widget = widgetsToAdd.shift()!;\n          this.addItem(Private.nameProperty.get(widget), widget);\n        }\n      }\n\n      if (opener.widgetCount() > 0) {\n        opener.updatePopup();\n        opener.show();\n      } else {\n        opener.hide();\n      }\n    }\n  }\n\n  private _saveWidgetWidth(widget: Widget) {\n    const widgetName = Private.nameProperty.get(widget);\n    this._widgetWidths![widgetName] = widget.hasClass(TOOLBAR_SPACER_CLASS)\n      ? 2\n      : widget.node.clientWidth;\n  }\n\n  private _getWidgetWidth(widget: Widget): number {\n    const widgetName = Private.nameProperty.get(widget);\n    return this._widgetWidths![widgetName];\n  }\n\n  protected readonly popupOpener: ToolbarPopupOpener = new ToolbarPopupOpener();\n  private readonly _widgetWidths: { [key: string]: number } = {};\n  private readonly _resizer: Throttler;\n}\n\n/**\n * The namespace for Toolbar class statics.\n */\nexport namespace Toolbar {\n  /**\n   * The options used to create a toolbar.\n   */\n  export interface IOptions {\n    /**\n     * Toolbar widget layout.\n     */\n    layout?: Layout;\n  }\n\n  /**\n   * Widget with associated toolbar\n   */\n  export interface IWidgetToolbar extends Widget {\n    /**\n     * Toolbar of actions on the widget\n     */\n    toolbar?: Toolbar;\n  }\n\n  /**\n   * Create a toolbar spacer item.\n   *\n   * #### Notes\n   * It is a flex spacer that separates the left toolbar items\n   * from the right toolbar items.\n   */\n  export function createSpacerItem(): Widget {\n    return new Private.Spacer();\n  }\n}\n\n/**\n * Namespace for ToolbarButtonComponent.\n */\nexport namespace ToolbarButtonComponent {\n  /**\n   * Interface for ToolbarButtonComponent props.\n   */\n  export interface IProps {\n    className?: string;\n    /**\n     * Data set of the button\n     */\n    dataset?: DOMStringMap;\n    label?: string;\n    icon?: LabIcon.IMaybeResolvable;\n    iconClass?: string;\n    iconLabel?: string;\n    tooltip?: string;\n    onClick?: () => void;\n    enabled?: boolean;\n    pressed?: boolean;\n    pressedIcon?: LabIcon.IMaybeResolvable;\n    pressedTooltip?: string;\n    disabledTooltip?: string;\n\n    /**\n     * Trigger the button on the actual onClick event rather than onMouseDown.\n     *\n     * See note in ToolbarButtonComponent below as to why the default is to\n     * trigger on onMouseDown.\n     */\n    actualOnClick?: boolean;\n\n    /**\n     * The application language translator.\n     */\n    translator?: ITranslator;\n  }\n}\n\n/**\n * React component for a toolbar button.\n *\n * @param props - The props for ToolbarButtonComponent.\n */\nexport function ToolbarButtonComponent(\n  props: ToolbarButtonComponent.IProps\n): JSX.Element {\n  // In some browsers, a button click event moves the focus from the main\n  // content to the button (see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus).\n  // We avoid a click event by calling preventDefault in mousedown, and\n  // we bind the button action to `mousedown`.\n  const handleMouseDown = (event: React.MouseEvent) => {\n    // Fire action only when left button is pressed.\n    if (event.button === 0) {\n      event.preventDefault();\n      props.onClick?.();\n    }\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    const { key } = event;\n    if (key === 'Enter' || key === ' ') {\n      props.onClick?.();\n    }\n  };\n\n  const handleClick = (event: React.MouseEvent) => {\n    if (event.button === 0) {\n      props.onClick?.();\n    }\n  };\n\n  const getTooltip = () => {\n    if (props.enabled === false && props.disabledTooltip) {\n      return props.disabledTooltip;\n    } else if (props.pressed && props.pressedTooltip) {\n      return props.pressedTooltip;\n    } else {\n      return props.tooltip || props.iconLabel;\n    }\n  };\n\n  return (\n    <Button\n      className={\n        props.className\n          ? props.className + ' jp-ToolbarButtonComponent'\n          : 'jp-ToolbarButtonComponent'\n      }\n      aria-pressed={props.pressed}\n      aria-disabled={props.enabled === false}\n      {...props.dataset}\n      disabled={props.enabled === false}\n      onClick={props.actualOnClick ?? false ? handleClick : undefined}\n      onMouseDown={\n        !(props.actualOnClick ?? false) ? handleMouseDown : undefined\n      }\n      onKeyDown={handleKeyDown}\n      title={getTooltip()}\n      minimal\n    >\n      {(props.icon || props.iconClass) && (\n        <LabIcon.resolveReact\n          icon={props.pressed ? props.pressedIcon : props.icon}\n          iconClass={\n            // add some extra classes for proper support of icons-as-css-background\n            classes(props.iconClass, 'jp-Icon')\n          }\n          className=\"jp-ToolbarButtonComponent-icon\"\n          tag=\"span\"\n          stylesheet=\"toolbarButton\"\n        />\n      )}\n      {props.label && (\n        <span className=\"jp-ToolbarButtonComponent-label\">{props.label}</span>\n      )}\n    </Button>\n  );\n}\n\n/**\n * Adds the toolbar button class to the toolbar widget.\n * @param w Toolbar button widget.\n */\nexport function addToolbarButtonClass<T extends Widget = Widget>(w: T): T {\n  w.addClass('jp-ToolbarButton');\n  return w;\n}\n\n/**\n * Lumino Widget version of static ToolbarButtonComponent.\n */\nexport class ToolbarButton extends ReactWidget {\n  /**\n   * Creates a toolbar button\n   * @param props props for underlying `ToolbarButton` component\n   */\n  constructor(private props: ToolbarButtonComponent.IProps = {}) {\n    super();\n    addToolbarButtonClass(this);\n    this._enabled = props.enabled ?? true;\n    this._pressed = this._enabled! && (props.pressed ?? false);\n    this._onClick = props.onClick!;\n  }\n\n  /**\n   * Sets the pressed state for the button\n   * @param value true if button is pressed, false otherwise\n   */\n  set pressed(value: boolean) {\n    if (this.enabled && value !== this._pressed) {\n      this._pressed = value;\n      this.update();\n    }\n  }\n\n  /**\n   * Returns true if button is pressed, false otherwise\n   */\n  get pressed(): boolean {\n    return this._pressed!;\n  }\n\n  /**\n   * Sets the enabled state for the button\n   * @param value true to enable the button, false otherwise\n   */\n  set enabled(value: boolean) {\n    if (value != this._enabled) {\n      this._enabled = value;\n      if (!this._enabled) {\n        this._pressed = false;\n      }\n      this.update();\n    }\n  }\n\n  /**\n   * Returns true if button is enabled, false otherwise\n   */\n  get enabled(): boolean {\n    return this._enabled;\n  }\n\n  /**\n   * Sets the click handler for the button\n   * @param value click handler\n   */\n  set onClick(value: () => void) {\n    if (value !== this._onClick) {\n      this._onClick = value;\n      this.update();\n    }\n  }\n\n  /**\n   * Returns the click handler for the button\n   */\n  get onClick(): () => void {\n    return this._onClick!;\n  }\n\n  render(): JSX.Element {\n    return (\n      <ToolbarButtonComponent\n        {...this.props}\n        pressed={this.pressed}\n        enabled={this.enabled}\n        onClick={this.onClick}\n      />\n    );\n  }\n\n  private _pressed: boolean;\n  private _enabled: boolean;\n  private _onClick: () => void;\n}\n\n/**\n * Namespace for CommandToolbarButtonComponent.\n */\nexport namespace CommandToolbarButtonComponent {\n  /**\n   * Interface for CommandToolbarButtonComponent props.\n   */\n  export interface IProps {\n    /**\n     * Application commands registry\n     */\n    commands: CommandRegistry;\n    /**\n     * Command unique id\n     */\n    id: string;\n    /**\n     * Command arguments\n     */\n    args?: ReadonlyJSONObject;\n    /**\n     * Overrides command icon\n     */\n    icon?: LabIcon;\n    /**\n     * Overrides command label\n     */\n    label?: string;\n    /**\n     * Overrides command caption\n     */\n    caption?: string;\n  }\n}\n\n/**\n * React component for a toolbar button that wraps a command.\n *\n * This wraps the ToolbarButtonComponent and watches the command registry\n * for changes to the command.\n */\nexport function CommandToolbarButtonComponent(\n  props: CommandToolbarButtonComponent.IProps\n): JSX.Element {\n  return (\n    <UseSignal\n      signal={props.commands.commandChanged}\n      shouldUpdate={(sender, args) =>\n        (args.id === props.id && args.type === 'changed') ||\n        args.type === 'many-changed'\n      }\n    >\n      {() => <ToolbarButtonComponent {...Private.propsFromCommand(props)} />}\n    </UseSignal>\n  );\n}\n\n/*\n * Adds the command toolbar button class to the command toolbar widget.\n * @param w Command toolbar button widget.\n */\nexport function addCommandToolbarButtonClass(w: Widget): Widget {\n  w.addClass('jp-CommandToolbarButton');\n  return w;\n}\n\n/**\n * Phosphor Widget version of CommandToolbarButtonComponent.\n */\nexport class CommandToolbarButton extends ReactWidget {\n  /**\n   * Creates a command toolbar button\n   * @param props props for underlying `CommandToolbarButtonComponent` component\n   */\n  constructor(private props: CommandToolbarButtonComponent.IProps) {\n    super();\n    addCommandToolbarButtonClass(this);\n  }\n  render(): JSX.Element {\n    return <CommandToolbarButtonComponent {...this.props} />;\n  }\n}\n\n/**\n *  A class which provides a toolbar popup\n *  used to store widgets that don't fit\n *  in the toolbar when it is resized\n */\nclass ToolbarPopup extends Widget {\n  width: number = 0;\n\n  /**\n   *  Construct a new ToolbarPopup\n   */\n  constructor() {\n    super();\n    this.addClass('jp-Toolbar-responsive-popup');\n    this.layout = new PanelLayout();\n    Widget.attach(this, document.body);\n    this.hide();\n  }\n\n  /**\n   * Updates the width of the popup, this\n   * should match with the toolbar width\n   *\n   * @param width - The width to resize to\n   * @protected\n   */\n  updateWidth(width: number) {\n    if (width > 0) {\n      this.width = width;\n      this.node.style.width = `${width}px`;\n    }\n  }\n\n  /**\n   * Aligns the popup to left bottom of widget\n   *\n   * @param widget the widget to align to\n   * @private\n   */\n  alignTo(widget: Widget) {\n    const {\n      height: widgetHeight,\n      width: widgetWidth,\n      x: widgetX,\n      y: widgetY\n    } = widget.node.getBoundingClientRect();\n    const width = this.width;\n    this.node.style.left = `${widgetX + widgetWidth - width + 1}px`;\n    this.node.style.top = `${widgetY + widgetHeight + 1}px`;\n  }\n\n  /**\n   * Inserts the widget at specified index\n   * @param index the index\n   * @param widget widget to add\n   */\n  insertWidget(index: number, widget: Widget) {\n    (this.layout as PanelLayout).insertWidget(0, widget);\n  }\n\n  /**\n   *  Total number of widgets in the popup\n   */\n  widgetCount() {\n    return (this.layout as PanelLayout).widgets.length;\n  }\n\n  /**\n   * Returns the widget at index\n   * @param index the index\n   */\n  widgetAt(index: number) {\n    return (this.layout as PanelLayout).widgets[index];\n  }\n}\n\n/**\n *  A class that provides a ToolbarPopupOpener,\n *  which is a button added to toolbar when\n *  the toolbar items overflow toolbar width\n */\nclass ToolbarPopupOpener extends ToolbarButton {\n  /**\n   *  Create a new popup opener\n   */\n  constructor(props: ToolbarButtonComponent.IProps = {}) {\n    const trans = (props.translator || nullTranslator).load('jupyterlab');\n    super({\n      icon: ellipsesIcon,\n      onClick: () => {\n        this.handleClick();\n      },\n      tooltip: trans.__('More commands')\n    });\n    this.addClass('jp-Toolbar-responsive-opener');\n\n    this.popup = new ToolbarPopup();\n  }\n\n  /**\n   * Add widget to the popup, prepends widgets\n   * @param widget the widget to add\n   */\n  addWidget(widget: Widget) {\n    this.popup.insertWidget(0, widget);\n  }\n\n  /**\n   * Dispose of the widget and its descendant widgets.\n   *\n   * #### Notes\n   * It is unsafe to use the widget after it has been disposed.\n   *\n   * All calls made to this method after the first are a no-op.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.popup.dispose();\n    super.dispose();\n  }\n\n  /**\n   * Hides the opener and the popup\n   */\n  hide(): void {\n    super.hide();\n    this.hidePopup();\n  }\n\n  /**\n   * Hides the popup\n   */\n  hidePopup(): void {\n    this.popup.hide();\n  }\n\n  /**\n   *  Updates width and position of the popup\n   *  to align with the toolbar\n   */\n  updatePopup(): void {\n    this.popup.updateWidth(this.parent!.node.clientWidth);\n    this.popup.alignTo(this.parent!);\n  }\n\n  /**\n   * Returns widget at index in the popup\n   * @param index\n   */\n  widgetAt(index: number) {\n    return this.popup.widgetAt(index);\n  }\n\n  /**\n   * Returns total number of widgets in the popup\n   *\n   * @returns Number of widgets\n   */\n  widgetCount(): number {\n    return this.popup.widgetCount();\n  }\n\n  protected handleClick() {\n    this.updatePopup();\n    this.popup.setHidden(!this.popup.isHidden);\n  }\n\n  protected popup: ToolbarPopup;\n}\n\n/**\n * A namespace for private data.\n */\nnamespace Private {\n  export function propsFromCommand(\n    options: CommandToolbarButtonComponent.IProps\n  ): ToolbarButtonComponent.IProps {\n    const { commands, id, args } = options;\n\n    const iconClass = commands.iconClass(id, args);\n    const iconLabel = commands.iconLabel(id, args);\n    const icon = options.icon ?? commands.icon(id, args);\n\n    const label = commands.label(id, args);\n    let className = commands.className(id, args);\n    // Add the boolean state classes.\n    if (commands.isToggled(id, args)) {\n      className += ' lm-mod-toggled';\n    }\n    if (!commands.isVisible(id, args)) {\n      className += ' lm-mod-hidden';\n    }\n\n    let tooltip =\n      commands.caption(id, args) || options.label || label || iconLabel;\n    // Shows hot keys in tooltips\n    const binding = commands.keyBindings.find(b => b.command === id);\n    if (binding) {\n      const ks = binding.keys.map(CommandRegistry.formatKeystroke).join(', ');\n      tooltip = `${tooltip} (${ks})`;\n    }\n    const onClick = () => {\n      void commands.execute(id, args);\n    };\n    const enabled = commands.isEnabled(id, args);\n\n    return {\n      className,\n      dataset: { 'data-command': options.id },\n      icon,\n      iconClass,\n      tooltip: options.caption ?? tooltip,\n      onClick,\n      enabled,\n      label: options.label ?? label\n    };\n  }\n\n  /**\n   * An attached property for the name of a toolbar item.\n   */\n  export const nameProperty = new AttachedProperty<Widget, string>({\n    name: 'name',\n    create: () => ''\n  });\n\n  /**\n   * A spacer widget.\n   */\n  export class Spacer extends Widget {\n    /**\n     * Construct a new spacer widget.\n     */\n    constructor() {\n      super();\n      this.addClass(TOOLBAR_SPACER_CLASS);\n    }\n  }\n}\n", "/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n\nimport { Panel } from '@lumino/widgets';\nimport { Toolbar } from './toolbar';\n\n/**\n * A base class for panel widget with toolbar.\n */\nexport class PanelWithToolbar extends Panel implements Toolbar.IWidgetToolbar {\n  constructor(options: PanelWithToolbar.IOptions = {}) {\n    super(options);\n    this._toolbar = new Toolbar();\n  }\n\n  /**\n   * Widget toolbar\n   */\n  get toolbar(): Toolbar {\n    return this._toolbar;\n  }\n\n  protected _toolbar: Toolbar;\n}\n\n/**\n * Namespace for panel with toolbar\n */\nexport namespace PanelWithToolbar {\n  /**\n   * An options object for creating a panel with toolbar widget.\n   */\n  export interface IOptions extends Panel.IOptions {\n    /**\n     * Custom toolbar\n     */\n    toolbar?: Toolbar;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { InputGroup } from './inputgroup';\nimport { ReactWidget } from './vdom';\nimport { StringExt } from '@lumino/algorithm';\nimport React, { useEffect, useState } from 'react';\n\n/**\n * The class name added to the filebrowser crumbs node.\n */\nexport interface IFilterBoxProps {\n  /**\n   * Whether to use case-sensitive search\n   */\n  caseSensitive?: boolean;\n\n  /**\n   * Whether the search box is disabled or not.\n   */\n  disabled?: boolean;\n\n  /**\n   * Whether to force a refresh.\n   */\n  forceRefresh?: boolean;\n\n  /**\n   * An optional initial search value.\n   */\n  initialQuery?: string;\n\n  /**\n   * Pass a ref to the input element\n   */\n  inputRef?: React.RefObject<HTMLInputElement>;\n\n  /**\n   * Optional placeholder for the search box.\n   */\n  placeholder?: string;\n\n  /**\n   * A function to callback when filter is updated.\n   */\n  updateFilter: (\n    filterFn: (item: string) => Partial<IScore> | null,\n    query?: string\n  ) => void;\n\n  /**\n   * Whether to use the fuzzy filter.\n   */\n  useFuzzyFilter: boolean;\n}\n\n/**\n * A text match score with associated content item.\n */\nexport interface IScore {\n  /**\n   * The numerical score for the text match.\n   */\n  score: number;\n\n  /**\n   * The indices of the text matches.\n   */\n  indices: number[] | null;\n}\n\n/**\n * Perform a fuzzy search on a single item.\n */\nexport function fuzzySearch(source: string, query: string): IScore | null {\n  // Set up the match score and indices array.\n  let score = Infinity;\n  let indices: number[] | null = null;\n\n  // The regex for search word boundaries\n  const rgx = /\\b\\w/g;\n\n  let continueSearch = true;\n\n  // Search the source by word boundary.\n  while (continueSearch) {\n    // Find the next word boundary in the source.\n    let rgxMatch = rgx.exec(source);\n\n    // Break if there is no more source context.\n    if (!rgxMatch) {\n      break;\n    }\n\n    // Run the string match on the relevant substring.\n    let match = StringExt.matchSumOfDeltas(source, query, rgxMatch.index);\n\n    // Break if there is no match.\n    if (!match) {\n      break;\n    }\n\n    // Update the match if the score is better.\n    if (match && match.score <= score) {\n      score = match.score;\n      indices = match.indices;\n    }\n  }\n\n  // Bail if there was no match.\n  if (!indices || score === Infinity) {\n    return null;\n  }\n\n  // Handle a split match.\n  return {\n    score,\n    indices\n  };\n}\n\nexport const updateFilterFunction = (\n  value: string,\n  useFuzzyFilter: boolean,\n  caseSensitive?: boolean\n) => {\n  return (item: string): Partial<IScore> | null => {\n    if (useFuzzyFilter) {\n      // Run the fuzzy search for the item and query.\n      const query = value.toLowerCase();\n      // Ignore the item if it is not a match.\n      return fuzzySearch(item, query);\n    }\n    if (!caseSensitive) {\n      item = item.toLocaleLowerCase();\n      value = value.toLocaleLowerCase();\n    }\n    const i = item.indexOf(value);\n    if (i === -1) {\n      return null;\n    }\n    return {\n      indices: [...Array(item.length).keys()].map(x => x + 1)\n    };\n  };\n};\n\nexport const FilterBox = (props: IFilterBoxProps): JSX.Element => {\n  const [filter, setFilter] = useState(props.initialQuery ?? '');\n\n  if (props.forceRefresh) {\n    useEffect(() => {\n      props.updateFilter((item: string) => {\n        return {};\n      });\n    }, []);\n  }\n\n  useEffect(() => {\n    // If there is an initial search value, pass the parent the initial filter function for that value.\n    if (props.initialQuery !== undefined) {\n      props.updateFilter(\n        updateFilterFunction(\n          props.initialQuery,\n          props.useFuzzyFilter,\n          props.caseSensitive\n        ),\n        props.initialQuery\n      );\n    }\n  }, []);\n\n  /**\n   * Handler for search input changes.\n   */\n  const handleChange = (e: React.FormEvent<HTMLElement>) => {\n    const target = e.target as HTMLInputElement;\n    setFilter(target.value);\n    props.updateFilter(\n      updateFilterFunction(\n        target.value,\n        props.useFuzzyFilter,\n        props.caseSensitive\n      ),\n      target.value\n    );\n  };\n\n  return (\n    <InputGroup\n      className=\"jp-FilterBox\"\n      inputRef={props.inputRef}\n      type=\"text\"\n      disabled={props.disabled}\n      rightIcon=\"ui-components:search\"\n      placeholder={props.placeholder}\n      onChange={handleChange}\n      value={filter}\n    />\n  );\n};\n\n/**\n * A widget which hosts a input textbox to filter on file names.\n */\nexport const FilenameSearcher = (props: IFilterBoxProps): ReactWidget => {\n  return ReactWidget.create(\n    <FilterBox\n      updateFilter={props.updateFilter}\n      useFuzzyFilter={props.useFuzzyFilter}\n      placeholder={props.placeholder}\n      forceRefresh={props.forceRefresh}\n      caseSensitive={props.caseSensitive}\n    />\n  );\n};\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport {\n  ITranslator,\n  nullTranslator,\n  TranslationBundle\n} from '@jupyterlab/translation';\nimport { AccordionPanel, Panel, PanelLayout, Widget } from '@lumino/widgets';\nimport { AccordionToolbar } from './accordiontoolbar';\nimport { Toolbar } from './toolbar';\n\n/**\n * A widget meant to be contained in sidebars.\n *\n * #### Note\n * By default the content widget is an accordion panel that supports widget with\n * associated toolbar to be displayed in the widget title.\n */\nexport class SidePanel extends Widget {\n  constructor(options: SidePanel.IOptions = {}) {\n    super();\n    const layout = (this.layout = new PanelLayout());\n    this.addClass('jp-SidePanel');\n\n    const trans = (this._trans = (options.translator || nullTranslator).load(\n      'jupyterlab'\n    ));\n\n    if (options.header) {\n      this.addHeader(options.header);\n    }\n\n    const content = (this._content =\n      options.content ??\n      new AccordionPanel({\n        ...options,\n        layout: AccordionToolbar.createLayout(options)\n      }));\n    content.node.setAttribute('role', 'region');\n    content.node.setAttribute('aria-label', trans.__('side panel content'));\n    content.addClass('jp-SidePanel-content');\n    layout.addWidget(content);\n\n    if (options.toolbar) {\n      this.addToolbar(options.toolbar);\n    }\n  }\n\n  /**\n   * The content hosted by the widget.\n   */\n  get content(): Panel {\n    return this._content;\n  }\n\n  /**\n   * A panel for widgets that sit on top of the widget.\n   */\n  get header(): Panel {\n    if (!this._header) {\n      this.addHeader();\n    }\n    return this._header;\n  }\n\n  /**\n   * The toolbar hosted by the widget.\n   *\n   * It sits between the header and the content\n   */\n  get toolbar(): Toolbar {\n    if (!this._toolbar) {\n      this.addToolbar();\n    }\n    return this._toolbar;\n  }\n\n  /**\n   * A read-only array of the widgets in the content panel.\n   */\n  get widgets(): ReadonlyArray<Widget> {\n    return this.content.widgets;\n  }\n\n  /**\n   * Add a widget to the content panel bottom.\n   *\n   * @param widget Widget to add\n   */\n  addWidget(widget: Toolbar.IWidgetToolbar): void {\n    this.content.addWidget(widget);\n  }\n\n  /**\n   * Insert a widget at the given position in the content panel.\n   *\n   * @param index Position\n   * @param widget Widget to insert\n   */\n  insertWidget(index: number, widget: Toolbar.IWidgetToolbar): void {\n    this.content.insertWidget(index, widget);\n  }\n\n  private addHeader(header?: Panel) {\n    const theHeader = (this._header = header || new Panel());\n    theHeader.addClass('jp-SidePanel-header');\n\n    (this.layout as PanelLayout).insertWidget(0, theHeader);\n  }\n\n  private addToolbar(toolbar?: Toolbar) {\n    const theToolbar = (this._toolbar = toolbar ?? new Toolbar());\n    theToolbar.addClass('jp-SidePanel-toolbar');\n    theToolbar.node.setAttribute('role', 'navigation');\n    theToolbar.node.setAttribute(\n      'aria-label',\n      this._trans.__('side panel actions')\n    );\n    (this.layout as PanelLayout).insertWidget(\n      (this.layout as PanelLayout).widgets.length - 1,\n      theToolbar\n    );\n  }\n\n  protected _content: Panel;\n  protected _header: Panel;\n  protected _toolbar: Toolbar;\n  protected _trans: TranslationBundle;\n}\n\n/**\n * The namespace for the `SidePanel` class statics.\n */\nexport namespace SidePanel {\n  /**\n   * An options object for creating a side panel widget.\n   */\n  export interface IOptions extends AccordionPanel.IOptions {\n    /**\n     * The main child of the side panel\n     *\n     * If nothing is provided it fallback to an AccordionToolbar panel.\n     */\n    content?: Panel;\n\n    /**\n     * The header is at the top of the SidePanel,\n     * and that extensions can populate.\n     *\n     * Defaults to an empty Panel if requested otherwise it won't be created.\n     */\n    header?: Panel;\n\n    /**\n     * The toolbar to use for the widget.\n     * It sits between the header and the content\n     *\n     * Defaults to an empty toolbar if requested otherwise it won't be created.\n     */\n    toolbar?: Toolbar;\n\n    /**\n     * The application language translator.\n     */\n    translator?: ITranslator;\n  }\n}\n", "/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n\nimport { Message } from '@lumino/messaging';\nimport { Widget } from '@lumino/widgets';\n\n/**\n * The spinner class.\n */\nexport class Spinner extends Widget {\n  /**\n   * Construct a spinner widget.\n   */\n  constructor() {\n    super();\n    this.addClass('jp-Spinner');\n    this.node.tabIndex = -1;\n    const content = document.createElement('div');\n    content.className = 'jp-SpinnerContent';\n    this.node.appendChild(content);\n  }\n\n  /**\n   * Handle `'activate-request'` messages.\n   */\n  protected onActivateRequest(msg: Message): void {\n    this.node.focus();\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { caretDownEmptyIcon } from '../icon';\n\n/**\n * A namespace for node styling.\n */\nexport namespace Styling {\n  /**\n   * Style a node and its child elements with the default tag names.\n   *\n   * @param node - The base node.\n   *\n   * @param className - The optional CSS class to add to styled nodes.\n   */\n  export function styleNode(node: HTMLElement, className = ''): void {\n    styleNodeByTag(node, 'select', className);\n    styleNodeByTag(node, 'textarea', className);\n    styleNodeByTag(node, 'input', className);\n    styleNodeByTag(node, 'button', className);\n  }\n\n  /**\n   * Style a node and its elements that have a given tag name.\n   *\n   * @param node - The base node.\n   *\n   * @param tagName - The html tag name to style.\n   *\n   * @param className - The optional CSS class to add to styled nodes.\n   */\n  export function styleNodeByTag(\n    node: HTMLElement,\n    tagName: string,\n    className = ''\n  ): void {\n    if (node.localName === tagName) {\n      node.classList.add('jp-mod-styled');\n    }\n    if (node.localName === 'select') {\n      const multiple = node.hasAttribute('multiple');\n      wrapSelect(node as HTMLSelectElement, multiple);\n    }\n    const nodes = node.getElementsByTagName(tagName);\n    for (let i = 0; i < nodes.length; i++) {\n      const child = nodes[i];\n      child.classList.add('jp-mod-styled');\n      if (className) {\n        child.classList.add(className);\n      }\n      if (tagName === 'select') {\n        const multiple = child.hasAttribute('multiple');\n        wrapSelect(child as HTMLSelectElement, multiple);\n      }\n    }\n  }\n\n  /**\n   * Wrap a select node.\n   */\n  export function wrapSelect(\n    node: HTMLSelectElement,\n    multiple?: boolean\n  ): HTMLElement {\n    const wrapper = document.createElement('div');\n    wrapper.classList.add('jp-select-wrapper');\n    node.addEventListener('focus', Private.onFocus);\n    node.addEventListener('blur', Private.onFocus);\n    node.classList.add('jp-mod-styled');\n    if (node.parentElement) {\n      node.parentElement.replaceChild(wrapper, node);\n    }\n    wrapper.appendChild(node);\n\n    if (multiple) {\n      wrapper.classList.add('multiple');\n    } else {\n      // add the icon node\n      wrapper.appendChild(\n        caretDownEmptyIcon.element({\n          tag: 'span',\n          stylesheet: 'select',\n          right: '8px',\n          top: '5px',\n          width: '18px'\n        })\n      );\n    }\n\n    return wrapper;\n  }\n}\n\n/**\n * The namespace for module private data.\n */\nnamespace Private {\n  /**\n   * Handle a focus event on a styled select.\n   */\n  export function onFocus(event: FocusEvent): void {\n    const target = event.target as Element;\n    const parent = target.parentElement;\n    if (!parent) {\n      return;\n    }\n    if (event.type === 'focus') {\n      parent.classList.add('jp-mod-focused');\n    } else {\n      parent.classList.remove('jp-mod-focused');\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { IChangedArgs } from '@jupyterlab/coreutils';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { Widget } from '@lumino/widgets';\n\n/**\n * A Switch widget\n */\nexport class Switch extends Widget {\n  constructor() {\n    super();\n\n    // switch accessibility refs:\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/Switch_role\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Accessibility_concerns\n\n    this._button.className = 'jp-switch';\n    this._button.setAttribute('role', 'switch');\n\n    this._label.className = 'jp-switch-label';\n\n    const track = document.createElement('div');\n    track.className = 'jp-switch-track';\n    track.setAttribute('aria-hidden', 'true');\n\n    this._button.appendChild(this._label);\n    this._button.appendChild(track);\n    this.node.appendChild(this._button);\n  }\n\n  /**\n   * The value of the switch.\n   */\n  get value(): boolean {\n    return this._value;\n  }\n  set value(newValue: boolean) {\n    const oldValue = this._value;\n    if (oldValue === newValue) {\n      return;\n    }\n    this._button.setAttribute('aria-checked', newValue.toString());\n    this._value = newValue;\n    this._valueChanged.emit({ name: 'value', oldValue, newValue });\n  }\n\n  /**\n   * A signal emitted when the value changes.\n   */\n  get valueChanged(): ISignal<this, IChangedArgs<boolean, boolean, 'value'>> {\n    return this._valueChanged;\n  }\n\n  /**\n   * The visible label of the switch.\n   */\n  get label(): string {\n    return this._label.textContent ?? '';\n  }\n  set label(x: string) {\n    this._label.textContent = x;\n  }\n\n  /**\n   * The caption (title) of the switch.\n   */\n  get caption(): string {\n    return this._button.title;\n  }\n  set caption(x: string) {\n    this._button.title = x;\n    this._label.title = x;\n  }\n\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'click':\n        this.value = !this.value;\n        break;\n      default:\n        break;\n    }\n  }\n\n  protected onAfterAttach(): void {\n    this._button.addEventListener('click', this);\n  }\n\n  protected onBeforeDetach(): void {\n    this._button.removeEventListener('click', this);\n  }\n\n  private _button = document.createElement('button');\n  private _label = document.createElement('label');\n\n  private _value: boolean;\n  private _valueChanged = new Signal<\n    this,\n    IChangedArgs<boolean, boolean, 'value'>\n  >(this);\n}\n", "/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n\n/*\n * This code is inspired by\n * - react-window https://github.com/bvaughn/react-window\n * That library is licensed under MIT License (MIT) Copyright (c) 2018 Brian Vaughn\n * - https://github.com/WICG/virtual-scroller/\n * Licensed by Contributors under the [W3C Software and Document License](http://www.w3.org/Consortium/Legal/2015/copyright-software-and-document)\n */\nimport { IChangedArgs } from '@jupyterlab/coreutils';\nimport { IObservableList } from '@jupyterlab/observables';\nimport { ArrayExt } from '@lumino/algorithm';\nimport { PromiseDelegate } from '@lumino/coreutils';\nimport { IDisposable } from '@lumino/disposable';\nimport { Message, MessageLoop } from '@lumino/messaging';\nimport { Throttler } from '@lumino/polling';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { PanelLayout, Widget } from '@lumino/widgets';\n\n/**\n * Maximal remaining time for idle callback\n *\n * Ref: https://developer.mozilla.org/en-US/docs/Web/API/Background_Tasks_API#getting_the_most_out_of_idle_callbacks\n */\nconst MAXIMUM_TIME_REMAINING = 50;\n\n/*\n * Feature detection\n *\n * Ref: https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#improving_scrolling_performance_with_passive_listeners\n */\nlet passiveIfSupported: boolean | { passive: boolean } = false;\n\ntry {\n  // @ts-expect-error unknown signature\n  window.addEventListener(\n    'test',\n    null,\n    Object.defineProperty({}, 'passive', {\n      get: function () {\n        passiveIfSupported = { passive: true };\n      }\n    })\n  );\n} catch (err) {\n  // pass no-op\n}\n\n/**\n * Windowed list abstract model.\n */\nexport abstract class WindowedListModel implements WindowedList.IModel {\n  /**\n   * Constructor\n   *\n   * @param options Constructor options\n   */\n  constructor(options: WindowedList.IModelOptions = {}) {\n    this._widgetCount = options.itemsList?.length ?? options.count ?? 0;\n    this._overscanCount = options.overscanCount ?? 1;\n    this._windowingActive = options.windowingActive ?? true;\n    this.itemsList = options.itemsList ?? null;\n  }\n\n  /**\n   * Provide a best guess for the widget size at position index\n   *\n   * #### Notes\n   *\n   * This function should be very light to compute especially when\n   * returning the default size.\n   * The default value should be constant (i.e. two calls with `null` should\n   * return the same value). But it can change for a given `index`.\n   *\n   * @param index Widget position\n   * @returns Estimated widget size\n   */\n  abstract estimateWidgetSize: (index: number) => number;\n\n  /**\n   * Widget factory for the list items.\n   *\n   * Caching the resulting widgets should be done by the callee.\n   *\n   * @param index List index\n   * @returns The widget at the given position\n   */\n  abstract widgetRenderer: (index: number) => Widget;\n\n  /**\n   * The overlap threshold used to decide whether to scroll down to an item\n   * below the viewport (smart mode). If the item overlap with the viewport\n   * is greater or equal this threshold the item is considered sufficiently\n   * visible and will not be scrolled to. The value is the number of pixels\n   * in overlap if greater than one, or otherwise a fraction of item height.\n   * By default the item is scrolled to if not full visible in the viewport.\n   */\n  readonly scrollDownThreshold: number = 1;\n\n  /**\n   * The underlap threshold used to decide whether to scroll up to an item\n   * above the viewport (smart mode). If the item part outside the viewport\n   * (underlap) is greater than this threshold then the item is considered\n   * not sufficiently visible and will be scrolled to.\n   * The value is the number of pixels in underlap if greater than one, or\n   * otherwise a fraction of the item height.\n   * By default the item is scrolled to if not full visible in the viewport.\n   */\n  readonly scrollUpThreshold: number = 0;\n\n  /**\n   * Top padding of the the outer window node.\n   */\n  paddingTop: number = 0;\n\n  /**\n   * List widget height\n   */\n  get height(): number {\n    return this._height;\n  }\n  set height(h: number) {\n    this._height = h;\n  }\n\n  /**\n   * Test whether the model is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * Items list to be rendered\n   */\n  get itemsList(): IObservableList<any> | null {\n    return this._itemsList;\n  }\n  set itemsList(v: IObservableList<any> | null) {\n    if (this._itemsList !== v) {\n      if (this._itemsList) {\n        this._itemsList.changed.disconnect(this.onListChanged, this);\n      }\n      const oldValue = this._itemsList;\n      this._itemsList = v;\n      if (this._itemsList) {\n        this._itemsList.changed.connect(this.onListChanged, this);\n      } else {\n        this._widgetCount = 0;\n      }\n      this._stateChanged.emit({\n        name: 'list',\n        newValue: this._itemsList,\n        oldValue\n      });\n      this._stateChanged.emit({\n        name: 'count',\n        newValue: this._itemsList?.length ?? 0,\n        oldValue: oldValue?.length ?? 0\n      });\n    }\n  }\n\n  /**\n   * Number of widgets to render in addition to those\n   * visible in the viewport.\n   */\n  get overscanCount(): number {\n    return this._overscanCount;\n  }\n  set overscanCount(newValue: number) {\n    if (newValue >= 1) {\n      if (this._overscanCount !== newValue) {\n        const oldValue = this._overscanCount;\n        this._overscanCount = newValue;\n        this._stateChanged.emit({ name: 'overscanCount', newValue, oldValue });\n      }\n    } else {\n      console.error(`Forbidden non-positive overscan count: got ${newValue}`);\n    }\n  }\n\n  /**\n   * Viewport scroll offset.\n   */\n  get scrollOffset(): number {\n    return this._scrollOffset;\n  }\n  set scrollOffset(offset: number) {\n    this._scrollOffset = offset;\n  }\n\n  /**\n   * Total number of widgets in the list\n   */\n  get widgetCount(): number {\n    return this._itemsList ? this._itemsList.length : this._widgetCount;\n  }\n  set widgetCount(newValue: number) {\n    if (this.itemsList) {\n      console.error(\n        'It is not allow to change the widgets count of a windowed list if a items list is used.'\n      );\n      return;\n    }\n\n    if (newValue >= 0) {\n      if (this._widgetCount !== newValue) {\n        const oldValue = this._widgetCount;\n        this._widgetCount = newValue;\n        this._stateChanged.emit({ name: 'count', newValue, oldValue });\n      }\n    } else {\n      console.error(`Forbidden negative widget count: got ${newValue}`);\n    }\n  }\n\n  /**\n   * Whether windowing is active or not.\n   *\n   * This is true by default.\n   */\n  get windowingActive(): boolean {\n    return this._windowingActive;\n  }\n  set windowingActive(newValue: boolean) {\n    if (newValue !== this._windowingActive) {\n      const oldValue = this._windowingActive;\n      this._windowingActive = newValue;\n\n      this._currentWindow = [-1, -1, -1, -1];\n      this._lastMeasuredIndex = -1;\n      this._widgetSizers = [];\n\n      this._stateChanged.emit({ name: 'windowingActive', newValue, oldValue });\n    }\n  }\n\n  /**\n   * A signal emitted when any model state changes.\n   */\n  get stateChanged(): ISignal<\n    WindowedListModel,\n    IChangedArgs<\n      any,\n      any,\n      'count' | 'index' | 'list' | 'overscanCount' | 'windowingActive'\n    >\n  > {\n    return this._stateChanged;\n  }\n\n  /**\n   * Dispose the model.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    Signal.clearData(this);\n  }\n\n  /**\n   * Get the total list size.\n   *\n   * @returns Total estimated size\n   */\n  getEstimatedTotalSize(): number {\n    let totalSizeOfMeasuredItems = 0;\n\n    if (this._lastMeasuredIndex >= this.widgetCount) {\n      this._lastMeasuredIndex = this.widgetCount - 1;\n    }\n\n    if (this._lastMeasuredIndex >= 0) {\n      const itemMetadata = this._widgetSizers[this._lastMeasuredIndex];\n      totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n    }\n\n    // We can do better than this\n    const numUnmeasuredItems = this.widgetCount - this._lastMeasuredIndex - 1;\n    const totalSizeOfUnmeasuredItems =\n      numUnmeasuredItems * this._estimatedWidgetSize;\n\n    return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n  }\n\n  /**\n   * Get the scroll offset to display an item in the viewport.\n   *\n   * By default, the list will scroll as little as possible to ensure the item is fully visible. You can control the alignment of the item though by specifying a second alignment parameter. Acceptable values are:\n   *\n   *   auto (default) - Automatically align with the top or bottom minimising the amount scrolled; if item is smaller than the viewport and fully visible, do not scroll at all.\n   *   smart - If the item is significantly visible, don't scroll at all (regardless of whether it fits in the viewport). If it is less than one viewport away or exceeds viewport in height, scroll so that it becomes visible. If it is more than one viewport away and fits the viewport, scroll so that it is centered within the viewport.\n   *   center - Center align the item within the list.\n   *   end - Align the item to the end of the list\n   *   start - Align the item to the beginning of the list\n   *\n   * An item is considered significantly visible if:\n   *  - it overlaps with the viewport by the amount specified by `scrollDownThreshold` when below the viewport\n   *  - it exceeds the viewport by the amount less than specified by `scrollUpThreshold` when above the viewport.\n   *\n   * @param index Item index\n   * @param align Where to align the item in the viewport\n   * @param margin The proportion of viewport to add when aligning with the top/bottom of the list.\n   * @returns The needed scroll offset\n   */\n  getOffsetForIndexAndAlignment(\n    index: number,\n    align: WindowedList.ScrollToAlign = 'auto',\n    margin: number = 0\n  ): number {\n    const boundedMargin = Math.min(Math.max(0.0, margin), 1.0);\n    const size = this._height;\n    const itemMetadata = this._getItemMetadata(index);\n\n    const scrollDownThreshold =\n      this.scrollDownThreshold <= 1\n        ? itemMetadata.size * this.scrollDownThreshold\n        : this.scrollDownThreshold;\n    const scrollUpThreshold =\n      this.scrollUpThreshold <= 1\n        ? itemMetadata.size * this.scrollUpThreshold\n        : this.scrollUpThreshold;\n\n    // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n    const estimatedTotalSize = this.getEstimatedTotalSize();\n\n    const topOffset = Math.max(\n      0,\n      Math.min(estimatedTotalSize - size, itemMetadata.offset)\n    );\n    const bottomOffset = Math.max(\n      0,\n      itemMetadata.offset - size + itemMetadata.size\n    );\n    const currentOffset = this._scrollOffset;\n\n    const itemTop = itemMetadata.offset;\n    const itemBottom = itemMetadata.offset + itemMetadata.size;\n    const bottomEdge = currentOffset - this.paddingTop + size;\n    const topEdge = currentOffset - this.paddingTop;\n    const crossingBottomEdge = bottomEdge > itemTop && bottomEdge < itemBottom;\n    const crossingTopEdge = topEdge > itemTop && topEdge < itemBottom;\n    if (align === 'smart') {\n      const edgeLessThanOneViewportAway =\n        currentOffset >= bottomOffset - size &&\n        currentOffset <= topOffset + size;\n\n      const visiblePartBottom = bottomEdge - itemTop;\n      const hiddenPartTop = topEdge - itemTop;\n\n      if (\n        (crossingBottomEdge && visiblePartBottom >= scrollDownThreshold) ||\n        (crossingTopEdge && hiddenPartTop < scrollUpThreshold)\n      ) {\n        return this._scrollOffset;\n      } else if (edgeLessThanOneViewportAway) {\n        // Possibly less than one viewport away, scroll so that it becomes visible (including the margin)\n        align = 'auto';\n      } else {\n        // More than one viewport away, scroll so that it is centered within the list,\n        // unless the widget is larger than the viewport, in which case only scroll to\n        // align with the top or bottom edge (automatically)\n        if (itemMetadata.size > size) {\n          align = 'auto';\n        } else {\n          align = 'center';\n        }\n      }\n    }\n\n    if (align === 'auto') {\n      if (bottomEdge > itemBottom && topEdge < itemTop) {\n        // No need to change the position, return the current offset.\n        return this._scrollOffset;\n      } else if (crossingBottomEdge || bottomEdge <= itemBottom) {\n        align = 'end';\n      } else {\n        align = 'start';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        // Align to the top edge.\n        return Math.max(0, topOffset - boundedMargin * size) + this.paddingTop;\n      case 'end':\n        // Align to the bottom edge.\n        return bottomOffset + boundedMargin * size + this.paddingTop;\n      case 'center':\n        return Math.round(bottomOffset + (topOffset - bottomOffset) / 2);\n    }\n  }\n\n  /**\n   * Compute the items range to display.\n   *\n   * It returns ``null`` if the range does not need to be updated.\n   *\n   * @returns The current items range to display\n   */\n  getRangeToRender(): WindowedList.WindowIndex | null {\n    let newWindowIndex: [number, number, number, number] = [\n      0,\n      Math.max(this.widgetCount - 1, -1),\n      0,\n      Math.max(this.widgetCount - 1, -1)\n    ];\n\n    const previousLastMeasuredIndex = this._lastMeasuredIndex;\n    if (this.windowingActive) {\n      newWindowIndex = this._getRangeToRender();\n    }\n    const [startIndex, stopIndex] = newWindowIndex;\n\n    if (\n      previousLastMeasuredIndex <= stopIndex ||\n      this._currentWindow[0] !== startIndex ||\n      this._currentWindow[1] !== stopIndex\n    ) {\n      this._currentWindow = newWindowIndex;\n      return newWindowIndex;\n    }\n\n    return null;\n  }\n\n  /**\n   * Return the viewport top position and height for range spanning from\n   * ``startIndex`` to ``stopIndex``.\n   *\n   * @param startIndex First item in viewport index\n   * @param stopIndex Last item in viewport index\n   * @returns The viewport top position and its height\n   */\n  getSpan(startIndex: number, stopIndex: number): [number, number] {\n    const startSize = this._getItemMetadata(startIndex);\n    const top = startSize.offset;\n    const stopSize = this._getItemMetadata(stopIndex);\n    const height = stopSize.offset - startSize.offset + stopSize.size;\n    return [top, height];\n  }\n\n  /**\n   * WindowedListModel caches offsets and measurements for each index for performance purposes.\n   * This method clears that cached data for all items after (and including) the specified index.\n   *\n   * The list will automatically re-render after the index is reset.\n   *\n   * @param index\n   */\n  resetAfterIndex(index: number): void {\n    const oldValue = this._lastMeasuredIndex;\n    this._lastMeasuredIndex = Math.min(index, this._lastMeasuredIndex);\n    if (this._lastMeasuredIndex !== oldValue) {\n      this._stateChanged.emit({ name: 'index', newValue: index, oldValue });\n    }\n  }\n\n  /**\n   * Update item sizes.\n   *\n   * This should be called when the real item sizes has been\n   * measured.\n   *\n   * @param sizes New sizes per item index\n   * @returns Whether some sizes changed or not\n   */\n  setWidgetSize(sizes: { index: number; size: number }[]): boolean {\n    if (this._currentWindow[0] >= 0) {\n      let minIndex = Infinity;\n      for (const item of sizes) {\n        const key = item.index;\n        const size = item.size;\n\n        if (this._widgetSizers[key].size != size) {\n          this._widgetSizers[key].size = size;\n          minIndex = Math.min(minIndex, key);\n        }\n        // Always set the flag in case the size estimator provides perfect result\n        this._widgetSizers[key].measured = true;\n      }\n\n      // If some sizes changed\n      if (minIndex != Infinity) {\n        // Invalid follow-up index\n        this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, minIndex);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Callback on list changes\n   *\n   * @param list List items\n   * @param changes List change\n   */\n  protected onListChanged(\n    list: IObservableList<Widget>,\n    changes: IObservableList.IChangedArgs<Widget>\n  ): void {\n    switch (changes.type) {\n      case 'add':\n        this._widgetSizers.splice(\n          changes.newIndex,\n          0,\n          ...new Array(changes.newValues.length).map(() => {\n            return { offset: 0, size: this._estimatedWidgetSize };\n          })\n        );\n        this.resetAfterIndex(changes.newIndex - 1);\n        break;\n      case 'move':\n        ArrayExt.move(this._widgetSizers, changes.oldIndex, changes.newIndex);\n        this.resetAfterIndex(Math.min(changes.newIndex, changes.oldIndex) - 1);\n        break;\n      case 'remove':\n        this._widgetSizers.splice(changes.oldIndex, changes.oldValues.length);\n        this.resetAfterIndex(changes.oldIndex - 1);\n        break;\n      case 'set':\n        this.resetAfterIndex(changes.newIndex - 1);\n        break;\n    }\n  }\n\n  private _getItemMetadata(index: number): WindowedList.ItemMetadata {\n    if (index > this._lastMeasuredIndex) {\n      let offset = 0;\n      if (this._lastMeasuredIndex >= 0) {\n        const itemMetadata = this._widgetSizers[this._lastMeasuredIndex];\n        offset = itemMetadata.offset + itemMetadata.size;\n      }\n\n      for (let i = this._lastMeasuredIndex + 1; i <= index; i++) {\n        let size = this._widgetSizers[i]?.measured\n          ? this._widgetSizers[i].size\n          : this.estimateWidgetSize(i);\n\n        this._widgetSizers[i] = {\n          offset,\n          size,\n          measured: this._widgetSizers[i]?.measured\n        };\n\n        offset += size;\n      }\n\n      this._lastMeasuredIndex = index;\n    }\n\n    for (let i = 0; i <= this._lastMeasuredIndex; i++) {\n      const sizer = this._widgetSizers[i];\n      if (i === 0) {\n        if (sizer.offset !== 0) {\n          throw new Error('First offset is not null');\n        }\n      } else {\n        const previous = this._widgetSizers[i - 1];\n        if (sizer.offset !== previous.offset + previous.size) {\n          throw new Error(`Sizer ${i} has incorrect offset.`);\n        }\n      }\n    }\n\n    return this._widgetSizers[index];\n  }\n\n  private _findNearestItem(offset: number): number {\n    const lastMeasuredItemOffset =\n      this._lastMeasuredIndex > 0\n        ? this._widgetSizers[this._lastMeasuredIndex].offset\n        : 0;\n\n    if (lastMeasuredItemOffset >= offset) {\n      // If we've already measured items within this range just use a binary search as it's faster.\n      return this._findNearestItemBinarySearch(\n        this._lastMeasuredIndex,\n        0,\n        offset\n      );\n    } else {\n      // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n      // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n      // The overall complexity for this approach is O(log n).\n      return this._findNearestItemExponentialSearch(\n        Math.max(0, this._lastMeasuredIndex),\n        offset\n      );\n    }\n  }\n\n  private _findNearestItemBinarySearch(\n    high: number,\n    low: number,\n    offset: number\n  ): number {\n    while (low <= high) {\n      const middle = low + Math.floor((high - low) / 2);\n      const currentOffset = this._getItemMetadata(middle).offset;\n\n      if (currentOffset === offset) {\n        return middle;\n      } else if (currentOffset < offset) {\n        low = middle + 1;\n      } else if (currentOffset > offset) {\n        high = middle - 1;\n      }\n    }\n\n    if (low > 0) {\n      return low - 1;\n    } else {\n      return 0;\n    }\n  }\n\n  private _findNearestItemExponentialSearch(\n    index: number,\n    offset: number\n  ): number {\n    let interval = 1;\n\n    while (\n      index < this.widgetCount &&\n      this._getItemMetadata(index).offset < offset\n    ) {\n      index += interval;\n      interval *= 2;\n    }\n\n    return this._findNearestItemBinarySearch(\n      Math.min(index, this.widgetCount - 1),\n      Math.floor(index / 2),\n      offset\n    );\n  }\n\n  private _getRangeToRender(): WindowedList.WindowIndex {\n    const widgetCount = this.widgetCount;\n\n    if (widgetCount === 0) {\n      return [-1, -1, -1, -1];\n    }\n\n    const startIndex = this._getStartIndexForOffset(this._scrollOffset);\n    const stopIndex = this._getStopIndexForStartIndex(\n      startIndex,\n      this._scrollOffset\n    );\n\n    const overscanBackward = Math.max(1, this.overscanCount);\n    const overscanForward = Math.max(1, this.overscanCount);\n\n    return [\n      Math.max(0, startIndex - overscanBackward),\n      Math.max(0, Math.min(widgetCount - 1, stopIndex + overscanForward)),\n      startIndex,\n      stopIndex\n    ];\n  }\n\n  private _getStartIndexForOffset(offset: number): number {\n    return this._findNearestItem(offset);\n  }\n\n  private _getStopIndexForStartIndex(\n    startIndex: number,\n    scrollOffset: number\n  ): number {\n    const size = this._height;\n    const itemMetadata = this._getItemMetadata(startIndex);\n    const maxOffset = scrollOffset + size;\n\n    let offset = itemMetadata.offset + itemMetadata.size;\n    let stopIndex = startIndex;\n\n    while (stopIndex < this.widgetCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += this._getItemMetadata(stopIndex).size;\n    }\n\n    return stopIndex;\n  }\n\n  /**\n   * Default widget size estimation\n   */\n  protected _estimatedWidgetSize: number = WindowedList.DEFAULT_WIDGET_SIZE;\n  protected _stateChanged = new Signal<\n    WindowedListModel,\n    IChangedArgs<\n      any,\n      any,\n      'count' | 'index' | 'list' | 'overscanCount' | 'windowingActive'\n    >\n  >(this);\n\n  private _currentWindow: WindowedList.WindowIndex = [-1, -1, -1, -1];\n  private _height: number = 0;\n  private _isDisposed = false;\n  private _itemsList: IObservableList<any> | null = null;\n  private _lastMeasuredIndex: number = -1;\n  private _overscanCount = 1;\n  private _scrollOffset: number = 0;\n  private _widgetCount = 0;\n  private _widgetSizers: WindowedList.ItemMetadata[] = [];\n  private _windowingActive = true;\n}\n\n/**\n * Windowed list widget\n */\nexport class WindowedList<\n  T extends WindowedList.IModel = WindowedList.IModel\n> extends Widget {\n  /**\n   * Default widget size\n   */\n  static readonly DEFAULT_WIDGET_SIZE = 50;\n\n  /**\n   * Constructor\n   *\n   * @param options Constructor options\n   */\n  constructor(options: WindowedList.IOptions<T>) {\n    // TODO probably needs to be able to customize outer HTML tag (could be ul / ol / table, ...)\n    const node = document.createElement('div');\n    node.className = 'jp-WindowedPanel-outer';\n    const innerElement = node.appendChild(document.createElement('div'));\n    innerElement.className = 'jp-WindowedPanel-inner';\n    const windowContainer = innerElement.appendChild(\n      document.createElement('div')\n    );\n    windowContainer.className = 'jp-WindowedPanel-window';\n    super({ node });\n    super.layout = options.layout ?? new WindowedLayout();\n    this._viewModel = options.model;\n    this._innerElement = innerElement;\n    this._isScrolling = null;\n    this._windowElement = windowContainer;\n    this._scrollToItem = null;\n    this._scrollRepaint = null;\n    this._scrollUpdateWasRequested = false;\n    this._updater = new Throttler(() => this.update(), 50);\n    this._resizeObserver = null;\n\n    this._viewModel.stateChanged.connect(this.onStateChanged, this);\n  }\n\n  /**\n   * Whether the parent is hidden or not.\n   *\n   * This should be set externally if a container is hidden to\n   * stop updating the widget size when hidden.\n   */\n  get isParentHidden(): boolean {\n    return this._isParentHidden;\n  }\n  set isParentHidden(v: boolean) {\n    this._isParentHidden = v;\n  }\n\n  /**\n   * Widget layout\n   */\n  get layout(): WindowedLayout {\n    return super.layout as WindowedLayout;\n  }\n\n  /**\n   * Viewport\n   */\n  get viewportNode(): HTMLDivElement {\n    return this._windowElement;\n  }\n\n  /**\n   * Windowed list view model\n   */\n  protected get viewModel(): T {\n    return this._viewModel;\n  }\n\n  /**\n   * Dispose the windowed list.\n   */\n  dispose(): void {\n    this._updater.dispose();\n    super.dispose();\n  }\n\n  /**\n   * Callback on event.\n   *\n   * @param event Event\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'scroll':\n        this.onScroll(event);\n        break;\n    }\n  }\n\n  /**\n   * Scroll to the specified offset `scrollTop`.\n   *\n   * @param scrollOffset Offset to scroll\n   *\n   * @deprecated since v4 This is an internal helper. Prefer calling `scrollToItem`.\n   */\n  scrollTo(scrollOffset: number): void {\n    if (!this.viewModel.windowingActive) {\n      this.node.scrollTo({ top: scrollOffset });\n      return;\n    }\n\n    scrollOffset = Math.max(0, scrollOffset);\n\n    if (scrollOffset !== this.viewModel.scrollOffset) {\n      this.viewModel.scrollOffset = scrollOffset;\n      this._scrollUpdateWasRequested = true;\n\n      this.update();\n    }\n  }\n\n  /**\n   * Scroll to the specified item.\n   *\n   * By default, the list will scroll as little as possible to ensure the item is visible. You can control the alignment of the item though by specifying a second alignment parameter. Acceptable values are:\n   *\n   *   auto (default) - Scroll as little as possible to ensure the item is visible. (If the item is already visible, it won't scroll at all.)\n   *   smart - If the item is already visible (including the margin), don't scroll at all. If it is less than one viewport away, scroll so that it becomes visible (including the margin). If it is more than one viewport away, scroll so that it is centered within the list.\n   *   center - Center align the item within the list.\n   *   end - Align the item to the end of the list\n   *   start - Align the item to the beginning of the list\n   *\n   * @param index Item index to scroll to\n   * @param align Type of alignment\n   * @param margin In 'smart' mode the viewport proportion to add\n   */\n  scrollToItem(\n    index: number,\n    align: WindowedList.ScrollToAlign = 'auto',\n    margin: number = 0.25\n  ): Promise<void> {\n    if (!this.viewModel.windowingActive) {\n      const widget = this.layout.widgets[index];\n      if (widget?.node.scrollIntoView) {\n        widget.node.scrollIntoView({\n          block: ['auto', 'smart'].includes(align)\n            ? 'nearest'\n            : (align as ScrollLogicalPosition)\n        });\n      }\n      return Promise.resolve();\n    }\n\n    if (\n      !this._isScrolling ||\n      this._scrollToItem === null ||\n      this._scrollToItem[0] !== index ||\n      this._scrollToItem[1] !== align\n    ) {\n      if (this._isScrolling) {\n        this._isScrolling.reject('Scrolling to a new item is requested.');\n      }\n\n      this._isScrolling = new PromiseDelegate<void>();\n    }\n\n    this._scrollToItem = [index, align];\n    this._resetScrollToItem();\n    this.scrollTo(\n      this.viewModel.getOffsetForIndexAndAlignment(\n        Math.max(0, Math.min(index, this._viewModel.widgetCount - 1)),\n        align,\n        margin\n      )\n    );\n\n    return this._isScrolling.promise;\n  }\n\n  /**\n   * A message handler invoked on an `'after-attach'` message.\n   */\n  protected onAfterAttach(msg: Message): void {\n    super.onAfterAttach(msg);\n    if (this._viewModel.windowingActive) {\n      this._addListeners();\n    } else {\n      this._applyNoWindowingStyles();\n    }\n    this.viewModel.height = this.node.getBoundingClientRect().height;\n    const style = window.getComputedStyle(this.node);\n    this.viewModel.paddingTop = parseFloat(style.paddingTop);\n  }\n\n  /**\n   * A message handler invoked on an `'before-detach'` message.\n   */\n  protected onBeforeDetach(msg: Message): void {\n    if (this._viewModel.windowingActive) {\n      this._removeListeners();\n    }\n  }\n\n  /**\n   * Callback on scroll event\n   *\n   * @param event Scroll event\n   */\n  protected onScroll(event: Event): void {\n    const { clientHeight, scrollHeight, scrollTop } =\n      event.currentTarget as HTMLDivElement;\n\n    // TBC Firefox is emitting two events one with 1px diff then the _real_ scroll\n    if (\n      !this._scrollUpdateWasRequested &&\n      Math.abs(this.viewModel.scrollOffset - scrollTop) > 1\n    ) {\n      // Test if the scroll event is jumping to the list bottom\n      // if (Math.abs(scrollHeight - clientHeight - scrollTop) < 1) {\n      //   // FIXME Does not work because it happens in multiple segments in between which the sizing is changing\n      //   // due to widget resizing. A possible fix would be to keep track of the \"old\" scrollHeight - clientHeight\n      //   // up to some quiet activity.\n      //   this.scrollToItem(this.widgetCount, 'end');\n      // } else {\n      const scrollOffset = Math.max(\n        0,\n        Math.min(scrollTop, scrollHeight - clientHeight)\n      );\n      this.viewModel.scrollOffset = scrollOffset;\n      this._scrollUpdateWasRequested = false;\n\n      this.update();\n      // }\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'resize-request'` message.\n   */\n  protected onResize(msg: Widget.ResizeMessage): void {\n    const previousHeight = this.viewModel.height;\n    this.viewModel.height =\n      msg.height >= 0 ? msg.height : this.node.getBoundingClientRect().height;\n    if (this.viewModel.height !== previousHeight) {\n      void this._updater.invoke();\n    }\n    super.onResize(msg);\n  }\n\n  /**\n   * Callback on view model change\n   *\n   * @param model Windowed list model\n   * @param changes Change\n   */\n  protected onStateChanged(\n    model: WindowedList.IModel,\n    changes: IChangedArgs<number | boolean, number | boolean, string>\n  ): void {\n    switch (changes.name) {\n      case 'windowingActive':\n        if (this.viewModel.windowingActive) {\n          this._addListeners();\n          this.onScroll({ currentTarget: this.node } as any);\n          // Bail as onScroll will trigger update\n          return;\n        } else {\n          this._removeListeners();\n        }\n        break;\n    }\n    this.update();\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   *\n   * #### Notes\n   * The default implementation of this handler is a no-op.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    if (this.viewModel.windowingActive) {\n      // Throttle update request\n      if (this._scrollRepaint === null) {\n        this._needsUpdate = false;\n        this._scrollRepaint = window.requestAnimationFrame(() => {\n          this._scrollRepaint = null;\n          this._update();\n          if (this._needsUpdate) {\n            this.update();\n          }\n        });\n      } else {\n        // Force re rendering if some changes happen during rendering.\n        this._needsUpdate = true;\n      }\n    } else {\n      this._update();\n    }\n  }\n\n  private _addListeners() {\n    if (!this._resizeObserver) {\n      this._resizeObserver = new ResizeObserver(\n        this._onWidgetResize.bind(this)\n      );\n    }\n    for (const widget of this.layout.widgets) {\n      this._resizeObserver.observe(widget.node);\n      widget.disposed.connect(\n        () => this._resizeObserver?.unobserve(widget.node)\n      );\n    }\n    this.node.addEventListener('scroll', this, passiveIfSupported);\n    this._windowElement.style.position = 'absolute';\n  }\n\n  private _applyNoWindowingStyles() {\n    this._windowElement.style.position = 'relative';\n    this._windowElement.style.top = '0px';\n  }\n\n  private _removeListeners() {\n    this.node.removeEventListener('scroll', this);\n    this._resizeObserver?.disconnect();\n    this._resizeObserver = null;\n    this._applyNoWindowingStyles();\n  }\n\n  private _update(): void {\n    if (this.isDisposed || !this.layout) {\n      return;\n    }\n\n    const newWindowIndex = this.viewModel.getRangeToRender();\n\n    if (newWindowIndex !== null) {\n      const [startIndex, stopIndex] = newWindowIndex;\n      const toAdd: Widget[] = [];\n      if (stopIndex >= 0) {\n        for (let index = startIndex; index <= stopIndex; index++) {\n          const widget = this.viewModel.widgetRenderer(index);\n          widget.dataset.windowedListIndex = `${index}`;\n          toAdd.push(widget);\n        }\n      }\n      const nWidgets = this.layout.widgets.length;\n      // Remove not needed widgets\n      for (let itemIdx = nWidgets - 1; itemIdx >= 0; itemIdx--) {\n        if (!toAdd.includes(this.layout.widgets[itemIdx])) {\n          this._resizeObserver?.unobserve(this.layout.widgets[itemIdx].node);\n          this.layout.removeWidget(this.layout.widgets[itemIdx]);\n        }\n      }\n\n      for (let index = 0; index < toAdd.length; index++) {\n        const item = toAdd[index];\n        if (this._resizeObserver && !this.layout.widgets.includes(item)) {\n          this._resizeObserver.observe(item.node);\n          item.disposed.connect(\n            () => this._resizeObserver?.unobserve(item.node)\n          );\n        }\n\n        // The widget may have moved due to drag-and-drop\n        this.layout.insertWidget(index, item);\n      }\n\n      if (this.viewModel.windowingActive) {\n        if (stopIndex >= 0) {\n          // Read this value after creating the cells.\n          // So their actual sizes are taken into account\n          const estimatedTotalHeight = this.viewModel.getEstimatedTotalSize();\n\n          // Update inner container height\n          this._innerElement.style.height = `${estimatedTotalHeight}px`;\n\n          // Update position of window container\n          const [top, minHeight] = this.viewModel.getSpan(\n            startIndex,\n            stopIndex\n          );\n          this._windowElement.style.top = `${top}px`;\n          this._windowElement.style.minHeight = `${minHeight}px`;\n        } else {\n          // Update inner container height\n          this._innerElement.style.height = `0px`;\n\n          // Update position of window container\n          this._windowElement.style.top = `0px`;\n          this._windowElement.style.minHeight = `0px`;\n        }\n\n        // Update scroll\n        if (this._scrollUpdateWasRequested) {\n          this.node.scrollTop = this.viewModel.scrollOffset;\n          this._scrollUpdateWasRequested = false;\n        }\n      }\n    }\n\n    let index2 = -1;\n    for (const w of this.viewportNode.children) {\n      const currentIdx = parseInt(\n        (w as HTMLElement).dataset.windowedListIndex!,\n        10\n      );\n      if (currentIdx < index2) {\n        throw new Error('Inconsistent dataset index');\n      } else {\n        index2 = currentIdx;\n      }\n    }\n  }\n\n  private _onWidgetResize(entries: ResizeObserverEntry[]): void {\n    this._resetScrollToItem();\n\n    if (this.isHidden || this.isParentHidden) {\n      return;\n    }\n\n    const newSizes: { index: number; size: number }[] = [];\n    for (let entry of entries) {\n      // Update size only if item is attached to the DOM\n      if (entry.target.isConnected) {\n        // Rely on the data attribute as some nodes may be hidden instead of detach\n        // to preserve state.\n        newSizes.push({\n          index: parseInt(\n            (entry.target as HTMLElement).dataset.windowedListIndex!,\n            10\n          ),\n          size: entry.borderBoxSize[0].blockSize\n        });\n      }\n    }\n\n    // If some sizes changed\n    if (this.viewModel.setWidgetSize(newSizes)) {\n      // Update the list\n      if (this._scrollToItem) {\n        this.scrollToItem(...this._scrollToItem).catch(reason => {\n          console.log(reason);\n        });\n      }\n\n      this.update();\n    }\n  }\n\n  private _resetScrollToItem(): void {\n    if (this._resetScrollToItemTimeout) {\n      clearTimeout(this._resetScrollToItemTimeout);\n    }\n\n    if (this._scrollToItem) {\n      this._resetScrollToItemTimeout = window.setTimeout(() => {\n        this._scrollToItem = null;\n        if (this._isScrolling) {\n          this._isScrolling.resolve();\n          this._isScrolling = null;\n        }\n      }, MAXIMUM_TIME_REMAINING);\n    }\n  }\n\n  protected _viewModel: T;\n  private _innerElement: HTMLDivElement;\n  private _isParentHidden: boolean;\n  private _isScrolling: PromiseDelegate<void> | null;\n  private _needsUpdate = false;\n  private _windowElement: HTMLDivElement;\n  private _resetScrollToItemTimeout: number | null;\n  private _resizeObserver: ResizeObserver | null;\n  private _scrollRepaint: number | null;\n  private _scrollToItem: [number, WindowedList.ScrollToAlign] | null;\n  private _scrollUpdateWasRequested: boolean;\n  private _updater: Throttler;\n}\n\n/**\n * Customized layout for windowed list container.\n */\nexport class WindowedLayout extends PanelLayout {\n  /**\n   * Constructor\n   */\n  constructor() {\n    super({ fitPolicy: 'set-no-constraint' });\n  }\n\n  /**\n   * Specialized parent type definition\n   */\n  get parent(): WindowedList | null {\n    return super.parent as WindowedList | null;\n  }\n  set parent(value: WindowedList | null) {\n    super.parent = value;\n  }\n\n  /**\n   * Attach a widget to the parent's DOM node.\n   *\n   * @param index - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to attach to the parent.\n   *\n   * #### Notes\n   * This method is called automatically by the panel layout at the\n   * appropriate time. It should not be called directly by user code.\n   *\n   * The default implementation adds the widgets's node to the parent's\n   * node at the proper location, and sends the appropriate attach\n   * messages to the widget if the parent is attached to the DOM.\n   *\n   * Subclasses may reimplement this method to control how the widget's\n   * node is added to the parent's node.\n   */\n  protected attachWidget(index: number, widget: Widget): void {\n    // Look up the next sibling reference node.\n    let ref = this.parent!.viewportNode.children[index];\n\n    // Send a `'before-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\n    }\n\n    // Insert the widget's node before the sibling.\n    this.parent!.viewportNode.insertBefore(widget.node, ref);\n\n    // Send an `'after-attach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\n    }\n  }\n\n  /**\n   * Detach a widget from the parent's DOM node.\n   *\n   * @param index - The previous index of the widget in the layout.\n   *\n   * @param widget - The widget to detach from the parent.\n   *\n   * #### Notes\n   * This method is called automatically by the panel layout at the\n   * appropriate time. It should not be called directly by user code.\n   *\n   * The default implementation removes the widget's node from the\n   * parent's node, and sends the appropriate detach messages to the\n   * widget if the parent is attached to the DOM.\n   *\n   * Subclasses may reimplement this method to control how the widget's\n   * node is removed from the parent's node.\n   */\n  protected detachWidget(index: number, widget: Widget): void {\n    // Send a `'before-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\n    }\n\n    // Remove the widget's node from the parent.\n    this.parent!.viewportNode.removeChild(widget.node);\n\n    // Send an `'after-detach'` message if the parent is attached.\n    if (this.parent!.isAttached) {\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\n    }\n  }\n\n  /**\n   * Move a widget in the parent's DOM node.\n   *\n   * @param fromIndex - The previous index of the widget in the layout.\n   *\n   * @param toIndex - The current index of the widget in the layout.\n   *\n   * @param widget - The widget to move in the parent.\n   *\n   * #### Notes\n   * This method is called automatically by the panel layout at the\n   * appropriate time. It should not be called directly by user code.\n   *\n   * The default implementation moves the widget's node to the proper\n   * location in the parent's node and sends the appropriate attach and\n   * detach messages to the widget if the parent is attached to the DOM.\n   *\n   * Subclasses may reimplement this method to control how the widget's\n   * node is moved in the parent's node.\n   */\n  protected moveWidget(\n    fromIndex: number,\n    toIndex: number,\n    widget: Widget\n  ): void {\n    // Optimize move without de-/attaching as motion appends with parent attached\n\n    // Case fromIndex === toIndex, already checked in PanelLayout.insertWidget\n\n    // Look up the next sibling reference node.\n    let ref = this.parent!.viewportNode.children[toIndex];\n    if (fromIndex < toIndex) {\n      ref.insertAdjacentElement('afterend', widget.node);\n    } else {\n      ref.insertAdjacentElement('beforebegin', widget.node);\n    }\n  }\n\n  /**\n   * A message handler invoked on an `'update-request'` message.\n   *\n   * #### Notes\n   * This is a reimplementation of the base class method,\n   * and is a no-op.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    // This is a no-op.\n  }\n}\n\n/**\n * A namespace for windowed list\n */\nexport namespace WindowedList {\n  /**\n   * Windowed list model interface\n   */\n  export interface IModel extends IDisposable {\n    /**\n     * Provide a best guess for the widget size at position index\n     *\n     * #### Notes\n     *\n     * This function should be very light to compute especially when\n     * returning the default size.\n     * The default value should be constant (i.e. two calls with `null` should\n     * return the same value). But it can change for a given `index`.\n     *\n     * @param index Widget position\n     * @returns Estimated widget size\n     */\n    estimateWidgetSize: (index: number) => number;\n\n    /**\n     * Get the total list size.\n     *\n     * @returns Total estimated size\n     */\n    getEstimatedTotalSize(): number;\n\n    /**\n     * Get the scroll offset to display an item in the viewport.\n     *\n     * By default, the list will scroll as little as possible to ensure the item is visible. You can control the alignment of the item though by specifying a second alignment parameter. Acceptable values are:\n     *\n     *   auto (default) - Scroll as little as possible to ensure the item is visible. (If the item is already visible, it won't scroll at all.)\n     *   smart - If the item is already visible (including the margin), don't scroll at all. If it is less than one viewport away, scroll so that it becomes visible (including the margin). If it is more than one viewport away, scroll so that it is centered within the list.\n     *   center - Center align the item within the list.\n     *   end - Align the item to the end of the list\n     *   start - Align the item to the beginning of the list\n     *\n     * @param index Item index\n     * @param align Where to align the item in the viewport\n     * @param margin In 'smart' mode the viewport proportion to add\n     * @returns The needed scroll offset\n     */\n    getOffsetForIndexAndAlignment(\n      index: number,\n      align?: ScrollToAlign,\n      margin?: number\n    ): number;\n    /**\n     * Compute the items range to display.\n     *\n     * It returns ``null`` if the range does not need to be updated.\n     *\n     * @returns The current items range to display\n     */\n    getRangeToRender(): WindowIndex | null;\n\n    /**\n     * Return the viewport top position and height for range spanning from\n     * ``startIndex`` to ``stopIndex``.\n     *\n     * @param start First item in viewport index\n     * @param stop Last item in viewport index\n     * @returns The viewport top position and its height\n     */\n    getSpan(start: number, stop: number): [number, number];\n\n    /**\n     * List widget height\n     */\n    height: number;\n\n    /**\n     * Top padding of the the outer window node.\n     */\n    paddingTop?: number;\n\n    /**\n     * Items list to be rendered\n     */\n    itemsList: {\n      length: number;\n      changed: ISignal<any, IObservableList.IChangedArgs<any>>;\n    } | null;\n\n    /**\n     * Number of widgets to render in addition to those\n     * visible in the viewport.\n     */\n    overscanCount: number;\n\n    /**\n     * WindowedListModel caches offsets and measurements for each index for performance purposes.\n     * This method clears that cached data for all items after (and including) the specified index.\n     *\n     * The list will automatically re-render after the index is reset.\n     *\n     * @param index\n     */\n    resetAfterIndex(index: number): void;\n\n    /**\n     * Viewport scroll offset.\n     */\n    scrollOffset: number;\n\n    /**\n     * Update item sizes.\n     *\n     * This should be called when the real item sizes has been\n     * measured.\n     *\n     * @param sizes New sizes per item index\n     * @returns Whether some sizes changed or not\n     */\n    setWidgetSize(sizes: { index: number; size: number }[]): boolean;\n\n    /**\n     * A signal emitted when any model state changes.\n     */\n    readonly stateChanged: ISignal<\n      IModel,\n      IChangedArgs<\n        any,\n        any,\n        'count' | 'index' | 'list' | 'overscanCount' | 'windowingActive'\n      >\n    >;\n\n    /**\n     * Total number of widgets in the list\n     */\n    widgetCount: number;\n\n    /**\n     * Whether windowing is active or not.\n     */\n    windowingActive: boolean;\n\n    /**\n     * Widget factory for the list items.\n     *\n     * Caching the resulting widgets should be done by the callee.\n     *\n     * @param index List index\n     * @returns The widget at the given position\n     */\n    widgetRenderer: (index: number) => Widget;\n  }\n\n  /**\n   * Windowed list model constructor options\n   */\n  export interface IModelOptions {\n    /**\n     * Total number of widgets in the list.\n     *\n     * #### Notes\n     * If an observable list is provided this will be ignored.\n     */\n    count?: number;\n\n    /**\n     * Dynamic list of items\n     */\n    itemsList?: IObservableList<any>;\n\n    /**\n     * Number of widgets to render in addition to those\n     * visible in the viewport.\n     */\n    overscanCount?: number;\n\n    /**\n     * Whether windowing is active or not.\n     *\n     * This is true by default.\n     */\n    windowingActive?: boolean;\n  }\n\n  /**\n   * Windowed list view constructor options\n   */\n  export interface IOptions<\n    T extends WindowedList.IModel = WindowedList.IModel\n  > {\n    /**\n     * Windowed list model to display\n     */\n    model: T;\n    /**\n     * Windowed list layout\n     */\n    layout?: WindowedLayout;\n  }\n\n  /**\n   * Item list metadata\n   */\n  export type ItemMetadata = {\n    /**\n     * Item vertical offset in the container\n     */\n    offset: number;\n    /**\n     * Item height\n     */\n    size: number;\n    /**\n     * Whether the size is an estimation or a measurement.\n     */\n    measured?: boolean;\n  };\n\n  /**\n   * Type of scroll\n   */\n  export type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\n  /**\n   * Widget range in view port\n   */\n  export type WindowIndex = [number, number, number, number];\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nexport * from './button';\nexport * from './collapser';\nexport * from './form';\nexport * from './htmlselect';\nexport * from './iframe';\nexport * from './inputgroup';\nexport * from './interface';\nexport * from './menu';\nexport * from './panelwithtoolbar';\nexport * from './search';\nexport * from './sidepanel';\nexport * from './spinner';\nexport * from './styling';\nexport * from './switch';\nexport * from './toolbar';\nexport * from './vdom';\nexport * from './windowedlist';\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n/**\n * The class name added to all hover boxes.\n */\nconst HOVERBOX_CLASS = 'jp-HoverBox';\n\n/**\n * The z-index used to hide hovering node that is scrolled out of view.\n */\nconst OUTOFVIEW_Z_INDEX = '-1000';\n\ntype OutOfViewDisplay =\n  | 'hidden-inside'\n  | 'hidden-outside'\n  | 'stick-inside'\n  | 'stick-outside';\n\n/**\n * A namespace for `HoverBox` members.\n */\nexport namespace HoverBox {\n  /**\n   * Options for setting the geometry of a hovering node and its anchor node.\n   */\n  export interface IOptions {\n    /**\n     * The referent anchor rectangle to which the hover box is bound.\n     *\n     * #### Notes\n     * In an editor context, this value will typically be the cursor's\n     * coordinate position, which can be retrieved via calling the\n     * `getCoordinateForPosition` method.\n     */\n    anchor: DOMRect;\n\n    /**\n     * The node that hosts the anchor.\n     *\n     * #### Notes\n     * The visibility of the elements under hover box edges within this host\n     * node is the heuristic that determines whether the hover box ought to be\n     * visible.\n     */\n    host: HTMLElement;\n\n    /**\n     * The maximum height of a hover box.\n     *\n     * #### Notes\n     * This value is only used if a CSS max-height attribute is not set for the\n     * hover box. It is a fallback value.\n     */\n    maxHeight: number;\n\n    /**\n     * The minimum height of a hover box.\n     */\n    minHeight: number;\n\n    /**\n     * The hover box node.\n     */\n    node: HTMLElement;\n\n    /**\n     * Optional pixel offset values added to where the hover box should render.\n     *\n     * #### Notes\n     * This option is useful for passing in values that may pertain to CSS\n     * borders or padding in cases where the text inside the hover box may need\n     * to align with the text of the referent editor.\n     *\n     * Because the hover box calculation may render a box either above or below\n     * the cursor, the `vertical` offset accepts `above` and `below` values for\n     * the different render modes.\n     */\n    offset?: {\n      horizontal?: number;\n      vertical?: { above?: number; below?: number };\n    };\n\n    /**\n     * If space is available both above and below the anchor, denote which\n     * location is privileged. Use forceBelow and forceAbove to mandate where\n     * hover box should render relative to anchor.\n     *\n     * #### Notes\n     * The default value is `'below'`.\n     */\n    privilege?: 'above' | 'below' | 'forceAbove' | 'forceBelow';\n\n    /**\n     * If the style of the node has already been computed, it can be passed into\n     * the hover box for geometry calculation.\n     */\n    style?: CSSStyleDeclaration;\n\n    /**\n     * How to position the hover box if its edges extend beyond the view of the\n     * host element. Value 'sticky' positions the box at the (inner or outer)\n     * edge of the host element.\n     *\n     * #### Notes\n     * The default value for each edge is `'hidden-inside'` for left and top,\n     * and `hidden-outside` for right and bottom edges.\n     */\n    outOfViewDisplay?: {\n      top?: OutOfViewDisplay;\n      bottom?: OutOfViewDisplay;\n      left?: OutOfViewDisplay;\n      right?: OutOfViewDisplay;\n    };\n\n    /**\n     * Exact size of the hover box. Pass it for faster rendering (allowing the\n     * positioning algorithm to to place it immediately at requested position).\n     */\n    size?: {\n      width: number;\n      height: number;\n    };\n  }\n\n  /**\n   * Set the visible dimensions of a hovering box anchored to an editor cursor.\n   *\n   * @param options - The hover box geometry calculation options.\n   */\n  export function setGeometry(options: IOptions): void {\n    const { anchor, host, node, privilege, outOfViewDisplay } = options;\n\n    const hostRect = host.getBoundingClientRect();\n\n    // Add hover box class if it does not exist.\n    if (!node.classList.contains(HOVERBOX_CLASS)) {\n      node.classList.add(HOVERBOX_CLASS);\n    }\n\n    // Start with the node displayed as if it was in view.\n    if (node.style.visibility) {\n      node.style.visibility = '';\n    }\n    if (node.style.zIndex === '') {\n      node.style.zIndex = '';\n    }\n\n    // Clear any previously set max-height.\n    node.style.maxHeight = '';\n\n    // Clear any programmatically set margin-top.\n    node.style.marginTop = '';\n\n    const style = options.style || window.getComputedStyle(node);\n    const spaceAbove = anchor.top - hostRect.top;\n    const spaceBelow = hostRect.bottom - anchor.bottom;\n\n    const marginTop = parseInt(style.marginTop!, 10) || 0;\n    const marginLeft = parseInt(style.marginLeft!, 10) || 0;\n    const minHeight = parseInt(style.minHeight!, 10) || options.minHeight;\n\n    let maxHeight = parseInt(style.maxHeight!, 10) || options.maxHeight;\n\n    // Determine whether to render above or below; check privilege.\n    const renderBelow =\n      privilege === 'forceAbove'\n        ? false\n        : privilege === 'forceBelow'\n        ? true\n        : privilege === 'above'\n        ? spaceAbove < maxHeight && spaceAbove < spaceBelow\n        : spaceBelow >= maxHeight || spaceBelow >= spaceAbove;\n\n    if (renderBelow) {\n      maxHeight = Math.min(spaceBelow - marginTop, maxHeight);\n    } else {\n      maxHeight = Math.min(spaceAbove, maxHeight);\n      // If the box renders above the text, its top margin is irrelevant.\n      node.style.marginTop = '0px';\n    }\n    node.style.maxHeight = `${maxHeight}px`;\n\n    // Make sure the box ought to be visible.\n    const withinBounds =\n      maxHeight >= minHeight &&\n      (spaceBelow >= minHeight || spaceAbove >= minHeight);\n\n    if (!withinBounds) {\n      node.style.zIndex = OUTOFVIEW_Z_INDEX;\n      node.style.visibility = 'hidden';\n      return;\n    }\n\n    if (options.size) {\n      node.style.width = `${options.size.width}px`;\n      node.style.height = `${options.size.height}px`;\n      node.style.contain = 'strict';\n    } else {\n      node.style.contain = '';\n      node.style.width = 'auto';\n      node.style.height = '';\n    }\n\n    // Position the box vertically.\n    const initialHeight = options.size\n      ? options.size.height\n      : node.getBoundingClientRect().height;\n    const offsetAbove =\n      (options.offset &&\n        options.offset.vertical &&\n        options.offset.vertical.above) ||\n      0;\n    const offsetBelow =\n      (options.offset &&\n        options.offset.vertical &&\n        options.offset.vertical.below) ||\n      0;\n    let top = renderBelow\n      ? hostRect.bottom - spaceBelow + offsetBelow\n      : hostRect.top + spaceAbove - initialHeight + offsetAbove;\n    node.style.top = `${Math.floor(top)}px`;\n\n    // Position the box horizontally.\n    const offsetHorizontal = (options.offset && options.offset.horizontal) || 0;\n    let left = anchor.left + offsetHorizontal;\n\n    node.style.left = `${Math.ceil(left)}px`;\n\n    let rect = node.getBoundingClientRect();\n\n    // Move left to fit in the window.\n    let right = rect.right;\n    if (right > window.innerWidth) {\n      left -= right - window.innerWidth;\n      right = window.innerWidth;\n      node.style.left = `${Math.ceil(left)}px`;\n    }\n\n    // Move right to fit in the window\n    if (left < offsetHorizontal - marginLeft) {\n      left = offsetHorizontal - marginLeft;\n      node.style.left = `${Math.ceil(left)}px`;\n    }\n\n    // Hide the hover box before querying the DOM for the anchor coordinates.\n    // Using z-index set directly for performance.\n    node.style.zIndex = '-1000';\n\n    const bottom = rect.bottom;\n\n    const includesLeftTop = host.contains(document.elementFromPoint(left, top));\n    const includesRightTop = host.contains(\n      document.elementFromPoint(right, top)\n    );\n    const includesRightBottom = host.contains(\n      document.elementFromPoint(right, bottom)\n    );\n    const includesLeftBottom = host.contains(\n      document.elementFromPoint(left, bottom)\n    );\n\n    node.style.zIndex = '';\n\n    const topEdgeInside = includesLeftTop || includesRightTop;\n    const bottomEdgeInside = includesLeftBottom || includesRightBottom;\n    const leftEdgeInside = includesLeftTop || includesLeftBottom;\n    const rightEdgeInside = includesRightBottom || includesRightTop;\n\n    const height = bottom - top;\n    const width = right - left;\n\n    const overTheTop = top < hostRect.top;\n    const belowTheBottom = bottom > hostRect.bottom;\n    const beforeTheLeft = left + marginLeft < hostRect.left;\n    const afterTheRight = right > hostRect.right;\n\n    let hide = false;\n    let leftChanged = false;\n    let topChanged = false;\n\n    if (overTheTop) {\n      switch (outOfViewDisplay?.top || 'hidden-inside') {\n        case 'hidden-inside':\n          if (!topEdgeInside) {\n            hide = true;\n          }\n          break;\n        case 'hidden-outside':\n          if (!bottomEdgeInside) {\n            hide = true;\n          }\n          break;\n        case 'stick-inside':\n          if (hostRect.top > top) {\n            top = hostRect.top;\n            topChanged = true;\n          }\n          break;\n        case 'stick-outside':\n          if (hostRect.top > bottom) {\n            top = hostRect.top - height;\n            topChanged = true;\n          }\n          break;\n      }\n    }\n\n    if (belowTheBottom) {\n      switch (outOfViewDisplay?.bottom || 'hidden-outside') {\n        case 'hidden-inside':\n          if (!bottomEdgeInside) {\n            hide = true;\n          }\n          break;\n        case 'hidden-outside':\n          if (!topEdgeInside) {\n            hide = true;\n          }\n          break;\n        case 'stick-inside':\n          if (hostRect.bottom < bottom) {\n            top = hostRect.bottom - height;\n            topChanged = true;\n          }\n          break;\n        case 'stick-outside':\n          if (hostRect.bottom < top) {\n            top = hostRect.bottom;\n            topChanged = true;\n          }\n          break;\n      }\n    }\n\n    if (beforeTheLeft) {\n      switch (outOfViewDisplay?.left || 'hidden-inside') {\n        case 'hidden-inside':\n          if (!leftEdgeInside) {\n            hide = true;\n          }\n          break;\n        case 'hidden-outside':\n          if (!rightEdgeInside) {\n            hide = true;\n          }\n          break;\n        case 'stick-inside':\n          if (hostRect.left > left + marginLeft) {\n            left = hostRect.left - marginLeft;\n            leftChanged = true;\n          }\n          break;\n        case 'stick-outside':\n          if (hostRect.left > right) {\n            left = hostRect.left - marginLeft - width;\n            leftChanged = true;\n          }\n          break;\n      }\n    }\n\n    if (afterTheRight) {\n      switch (outOfViewDisplay?.right || 'hidden-outside') {\n        case 'hidden-inside':\n          if (!rightEdgeInside) {\n            hide = true;\n          }\n          break;\n        case 'hidden-outside':\n          if (!leftEdgeInside) {\n            hide = true;\n          }\n          break;\n        case 'stick-inside':\n          if (hostRect.right < right) {\n            left = hostRect.right - width;\n            leftChanged = true;\n          }\n          break;\n        case 'stick-outside':\n          if (hostRect.right < left) {\n            left = hostRect.right;\n            leftChanged = true;\n          }\n          break;\n      }\n    }\n\n    if (hide) {\n      node.style.zIndex = OUTOFVIEW_Z_INDEX;\n      node.style.visibility = 'hidden';\n    }\n\n    if (leftChanged) {\n      node.style.left = `${Math.ceil(left)}px`;\n    }\n    if (topChanged) {\n      node.style.top = `${Math.ceil(top)}px`;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { Token } from '@lumino/coreutils';\nimport type { Field, Widget } from '@rjsf/utils';\n\n/**\n * Form renderer interface.\n */\nexport interface IFormRenderer {\n  /**\n   * A React component with properties FieldProps.\n   */\n  fieldRenderer?: Field;\n\n  /**\n   * A React component with properties WidgetProps.\n   */\n  widgetRenderer?: Widget;\n}\n\n/**\n * A registry for rendering fields used in the FormEditor component.\n */\nexport interface IFormRendererRegistry {\n  /**\n   * Adds a renderer for a given property of a given settings plugin.\n   *\n   * The id must follow that structure `<ISettingRegistry.IPlugin.id>.<propertyName>`\n   *\n   * @param id - Unique ID for the given renderer.\n   * @param renderer - A renderer interfacing IFormRenderer.\n   */\n  addRenderer: (id: string, renderer: IFormRenderer) => void;\n\n  /**\n   * Returns the component for the given id\n   * @param id - The unique id for the component.\n   * @returns - A component interfacing IFormComponent.\n   */\n  getRenderer: (id: string) => IFormRenderer;\n\n  /**\n   * Returns all registered renderers in dictionary form.\n   * @returns - A dictionary that maps an id to a renderer.\n   */\n  renderers: { [id: string]: IFormRenderer };\n}\n\n/**\n * The token for the form component registry.\n */\nexport const IFormRendererRegistry = new Token<IFormRendererRegistry>(\n  '@jupyterlab/ui-components:IFormRendererRegistry',\n  'A service for settings form renderer registration.'\n);\n\n/**\n * Placeholder for future icon manager class to assist with\n * overriding/replacing particular sets of icons\n */\nexport interface ILabIconManager {}\n\n/**\n * The ILabIconManager token.\n */\nexport const ILabIconManager = new Token<ILabIconManager>(\n  '@jupyterlab/ui-components:ILabIconManager',\n  'A service to register and request icons.'\n);\n", "/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n\nimport { IFormRenderer, IFormRendererRegistry } from './tokens';\n\n/**\n * A registry for property renderers used in the FormEditor component.\n */\nexport class FormRendererRegistry implements IFormRendererRegistry {\n  /**\n   * Adds a renderer for a given property of a given settings plugin.\n   *\n   * The id must follow that structure `<ISettingRegistry.IPlugin.id>.<propertyName>`\n   *\n   * @param id - Unique ID for the given renderer.\n   * @param renderer - A renderer interfacing IFormRenderer.\n   */\n  addRenderer(id: string, renderer: IFormRenderer): void {\n    if (this._renderers[id]) {\n      throw new Error(`A renderer with id '${id}' is already registered.`);\n    }\n    if (!renderer.fieldRenderer && !renderer.widgetRenderer) {\n      throw new Error(\n        `The component for '${id}' cannot be registered as it does not define 'fieldRenderer' nor 'widgetRenderer'.`\n      );\n    }\n\n    const splitPosition = id.lastIndexOf('.');\n    const pluginId = id.substring(0, splitPosition);\n    const propertyName = id.substring(splitPosition + 1);\n    if (pluginId.length == 0 || propertyName.length == 0) {\n      throw new Error(\n        `Form renderer id must follows the structure '<ISettingRegistry.IPlugin.id>.<propertyName>'; got ${id}.`\n      );\n    }\n\n    this._renderers[id] = renderer;\n  }\n\n  /**\n   * Returns all registered renderers in dictionary form.\n   * @returns - A dictionary that maps an id to a renderer.\n   */\n  get renderers(): { [id: string]: IFormRenderer } {\n    return this._renderers;\n  }\n\n  /**\n   * Returns the renderer for the given id\n   * @param id - The unique id for the renderer.\n   * @returns - A renderer interfacing IFormRenderer.\n   */\n  getRenderer(id: string): IFormRenderer {\n    return this._renderers[id];\n  }\n\n  private _renderers: { [id: string]: IFormRenderer } = {};\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module ui-components\n */\n\nexport * from './components';\nexport * from './icon';\nexport * from './hoverbox';\nexport * from './tokens';\nexport * from './utils';\nexport * from './FormRendererRegistry';\n", "export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}", "export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}", "import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}", "import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}", "import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}", "export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}", "import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { IDisposable } from '@lumino/disposable';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { IObservable } from './modeldb';\n\n/**\n * A map which can be observed for changes.\n */\nexport interface IObservableMap<T> extends IDisposable, IObservable {\n  /**\n   * The type of the Observable.\n   */\n  type: 'Map';\n\n  /**\n   * A signal emitted when the map has changed.\n   */\n  readonly changed: ISignal<this, IObservableMap.IChangedArgs<T>>;\n\n  /**\n   * The number of key-value pairs in the map.\n   */\n  readonly size: number;\n\n  /**\n   * Set a key-value pair in the map\n   *\n   * @param key - The key to set.\n   *\n   * @param value - The value for the key.\n   *\n   * @returns the old value for the key, or undefined\n   *   if that did not exist.\n   */\n  set(key: string, value: T): T | undefined;\n\n  /**\n   * Get a value for a given key.\n   *\n   * @param key - the key.\n   *\n   * @returns the value for that key.\n   */\n  get(key: string): T | undefined;\n\n  /**\n   * Check whether the map has a key.\n   *\n   * @param key - the key to check.\n   *\n   * @returns `true` if the map has the key, `false` otherwise.\n   */\n  has(key: string): boolean;\n\n  /**\n   * Get a list of the keys in the map.\n   *\n   * @returns - a list of keys.\n   */\n  keys(): string[];\n\n  /**\n   * Get a list of the values in the map.\n   *\n   * @returns - a list of values.\n   */\n  values(): T[];\n\n  /**\n   * Remove a key from the map\n   *\n   * @param key - the key to remove.\n   *\n   * @returns the value of the given key,\n   *   or undefined if that does not exist.\n   */\n  delete(key: string): T | undefined;\n\n  /**\n   * Set the ObservableMap to an empty map.\n   */\n  clear(): void;\n\n  /**\n   * Dispose of the resources held by the map.\n   */\n  dispose(): void;\n}\n\n/**\n * The interfaces associated with an IObservableMap.\n */\nexport namespace IObservableMap {\n  /**\n   * The change types which occur on an observable map.\n   */\n  export type ChangeType =\n    /**\n     * An entry was added.\n     */\n    | 'add'\n\n    /**\n     * An entry was removed.\n     */\n    | 'remove'\n\n    /**\n     * An entry was changed.\n     */\n    | 'change';\n\n  /**\n   * The changed args object which is emitted by an observable map.\n   */\n  export interface IChangedArgs<T> {\n    /**\n     * The type of change undergone by the map.\n     */\n    type: ChangeType;\n\n    /**\n     * The key of the change.\n     */\n    key: string;\n\n    /**\n     * The old value of the change.\n     */\n    oldValue: T | undefined;\n\n    /**\n     * The new value of the change.\n     */\n    newValue: T | undefined;\n  }\n}\n\n/**\n * A concrete implementation of IObservableMap<T>.\n */\nexport class ObservableMap<T> implements IObservableMap<T> {\n  /**\n   * Construct a new observable map.\n   */\n  constructor(options: ObservableMap.IOptions<T> = {}) {\n    this._itemCmp = options.itemCmp || Private.itemCmp;\n    if (options.values) {\n      for (const key in options.values) {\n        this._map.set(key, options.values[key]);\n      }\n    }\n  }\n\n  /**\n   * The type of the Observable.\n   */\n  get type(): 'Map' {\n    return 'Map';\n  }\n\n  /**\n   * A signal emitted when the map has changed.\n   */\n  get changed(): ISignal<this, IObservableMap.IChangedArgs<T>> {\n    return this._changed;\n  }\n\n  /**\n   * Whether this map has been disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * The number of key-value pairs in the map.\n   */\n  get size(): number {\n    return this._map.size;\n  }\n\n  /**\n   * Set a key-value pair in the map\n   *\n   * @param key - The key to set.\n   *\n   * @param value - The value for the key.\n   *\n   * @returns the old value for the key, or undefined\n   *   if that did not exist.\n   *\n   * @throws if the new value is undefined.\n   *\n   * #### Notes\n   * This is a no-op if the value does not change.\n   */\n  set(key: string, value: T): T | undefined {\n    const oldVal = this._map.get(key);\n    if (value === undefined) {\n      throw Error('Cannot set an undefined value, use remove');\n    }\n    // Bail if the value does not change.\n    const itemCmp = this._itemCmp;\n    if (oldVal !== undefined && itemCmp(oldVal, value)) {\n      return oldVal;\n    }\n    this._map.set(key, value);\n    this._changed.emit({\n      type: oldVal ? 'change' : 'add',\n      key: key,\n      oldValue: oldVal,\n      newValue: value\n    });\n    return oldVal;\n  }\n\n  /**\n   * Get a value for a given key.\n   *\n   * @param key - the key.\n   *\n   * @returns the value for that key.\n   */\n  get(key: string): T | undefined {\n    return this._map.get(key);\n  }\n\n  /**\n   * Check whether the map has a key.\n   *\n   * @param key - the key to check.\n   *\n   * @returns `true` if the map has the key, `false` otherwise.\n   */\n  has(key: string): boolean {\n    return this._map.has(key);\n  }\n\n  /**\n   * Get a list of the keys in the map.\n   *\n   * @returns - a list of keys.\n   */\n  keys(): string[] {\n    const keyList: string[] = [];\n    this._map.forEach((v: T, k: string) => {\n      keyList.push(k);\n    });\n    return keyList;\n  }\n\n  /**\n   * Get a list of the values in the map.\n   *\n   * @returns - a list of values.\n   */\n  values(): T[] {\n    const valList: T[] = [];\n    this._map.forEach((v: T, k: string) => {\n      valList.push(v);\n    });\n    return valList;\n  }\n\n  /**\n   * Remove a key from the map\n   *\n   * @param key - the key to remove.\n   *\n   * @returns the value of the given key,\n   *   or undefined if that does not exist.\n   *\n   * #### Notes\n   * This is a no-op if the value does not change.\n   */\n  delete(key: string): T | undefined {\n    const oldVal = this._map.get(key);\n    const removed = this._map.delete(key);\n    if (removed) {\n      this._changed.emit({\n        type: 'remove',\n        key: key,\n        oldValue: oldVal,\n        newValue: undefined\n      });\n    }\n    return oldVal;\n  }\n\n  /**\n   * Set the ObservableMap to an empty map.\n   */\n  clear(): void {\n    // Delete one by one to emit the correct signals.\n    const keyList = this.keys();\n    for (let i = 0; i < keyList.length; i++) {\n      this.delete(keyList[i]);\n    }\n  }\n\n  /**\n   * Dispose of the resources held by the map.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    Signal.clearData(this);\n    this._map.clear();\n  }\n\n  private _map: Map<string, T> = new Map<string, T>();\n  private _itemCmp: (first: T, second: T) => boolean;\n  private _changed = new Signal<this, IObservableMap.IChangedArgs<T>>(this);\n  private _isDisposed = false;\n}\n\n/**\n * The namespace for `ObservableMap` class statics.\n */\nexport namespace ObservableMap {\n  /**\n   * The options used to initialize an observable map.\n   */\n  export interface IOptions<T> {\n    /**\n     * An optional initial set of values.\n     */\n    values?: { [key: string]: T };\n\n    /**\n     * The item comparison function for change detection on `set`.\n     *\n     * If not given, strict `===` equality will be used.\n     */\n    itemCmp?: (first: T, second: T) => boolean;\n  }\n}\n\n/**\n * The namespace for module private data.\n */\nnamespace Private {\n  /**\n   * The default strict equality item comparator.\n   */\n  export function itemCmp<T>(first: T, second: T): boolean {\n    return first === second;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for array-specific algorithms.\n */\nexport namespace ArrayExt {\n  /**\n   * Find the index of the first occurrence of a value in an array.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param value - The value to locate in the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first occurrence of the value, or `-1`\n   *   if the value is not found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four', 'one'];\n   * ArrayExt.firstIndexOf(data, 'red');        // -1\n   * ArrayExt.firstIndexOf(data, 'one');        // 0\n   * ArrayExt.firstIndexOf(data, 'one', 1);     // 4\n   * ArrayExt.firstIndexOf(data, 'two', 2);     // -1\n   * ArrayExt.firstIndexOf(data, 'two', 2, 1);  // 1\n   * ```\n   */\n  export function firstIndexOf<T>(\n    array: ArrayLike<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start + i) % n;\n      if (array[j] === value) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the last occurrence of a value in an array.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param value - The value to locate in the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the last occurrence of the value, or `-1`\n   *   if the value is not found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four', 'one'];\n   * ArrayExt.lastIndexOf(data, 'red');        // -1\n   * ArrayExt.lastIndexOf(data, 'one');        // 4\n   * ArrayExt.lastIndexOf(data, 'one', 1);     // 0\n   * ArrayExt.lastIndexOf(data, 'two', 0);     // -1\n   * ArrayExt.lastIndexOf(data, 'two', 0, 1);  // 1\n   * ```\n   */\n  export function lastIndexOf<T>(\n    array: ArrayLike<T>,\n    value: T,\n    start = -1,\n    stop = 0\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (start < stop) {\n      span = start + 1 + (n - stop);\n    } else {\n      span = start - stop + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start - i + n) % n;\n      if (array[j] === value) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the first value which matches a predicate.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first matching value, or `-1` if no\n   *   matching value is found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findFirstIndex(data, isEven);       // 1\n   * ArrayExt.findFirstIndex(data, isEven, 4);    // 5\n   * ArrayExt.findFirstIndex(data, isEven, 6);    // -1\n   * ArrayExt.findFirstIndex(data, isEven, 6, 5); // 1\n   * ```\n   */\n  export function findFirstIndex<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start + i) % n;\n      if (fn(array[j], j)) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the last value which matches a predicate.\n   *\n   * @param object - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the last matching value, or `-1` if no\n   *   matching value is found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findLastIndex(data, isEven);        // 5\n   * ArrayExt.findLastIndex(data, isEven, 4);     // 3\n   * ArrayExt.findLastIndex(data, isEven, 0);     // -1\n   * ArrayExt.findLastIndex(data, isEven, 0, 1);  // 5\n   * ```\n   */\n  export function findLastIndex<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let d: number;\n    if (start < stop) {\n      d = start + 1 + (n - stop);\n    } else {\n      d = start - stop + 1;\n    }\n    for (let i = 0; i < d; ++i) {\n      let j = (start - i + n) % n;\n      if (fn(array[j], j)) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the first value which matches a predicate.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The first matching value, or `undefined` if no matching\n   *   value is found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findFirstValue(data, isEven);       // 2\n   * ArrayExt.findFirstValue(data, isEven, 2);    // 4\n   * ArrayExt.findFirstValue(data, isEven, 6);    // undefined\n   * ArrayExt.findFirstValue(data, isEven, 6, 5); // 2\n   * ```\n   */\n  export function findFirstValue<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): T | undefined {\n    let index = findFirstIndex(array, fn, start, stop);\n    return index !== -1 ? array[index] : undefined;\n  }\n\n  /**\n   * Find the last value which matches a predicate.\n   *\n   * @param object - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The last matching value, or `undefined` if no matching\n   *   value is found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findLastValue(data, isEven);        // 2\n   * ArrayExt.findLastValue(data, isEven, 4);     // 4\n   * ArrayExt.findLastValue(data, isEven, 0);     // undefined\n   * ArrayExt.findLastValue(data, isEven, 0, 1);  // 2\n   * ```\n   */\n  export function findLastValue<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): T | undefined {\n    let index = findLastIndex(array, fn, start, stop);\n    return index !== -1 ? array[index] : undefined;\n  }\n\n  /**\n   * Find the index of the first element which compares `>=` to a value.\n   *\n   * @param array - The sorted array-like object to search.\n   *\n   * @param value - The value to locate in the array.\n   *\n   * @param fn - The 3-way comparison function to apply to the values.\n   *   It should return `< 0` if an element is less than a value, `0` if\n   *   an element is equal to a value, or `> 0` if an element is greater\n   *   than a value.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first element which compares `>=` to the\n   *   value, or `length` if there is no such element. If the computed\n   *   index for `stop` is less than `start`, then the computed index\n   *   for `start` is returned.\n   *\n   * #### Notes\n   * The array must already be sorted in ascending order according to\n   * the comparison function.\n   *\n   * #### Complexity\n   * Logarithmic.\n   *\n   * #### Undefined Behavior\n   * Searching a range which is not sorted in ascending order.\n   *\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function numberCmp(a: number, b: number): number {\n   *   return a - b;\n   * }\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.lowerBound(data, 0, numberCmp);   // 0\n   * ArrayExt.lowerBound(data, 6, numberCmp);   // 3\n   * ArrayExt.lowerBound(data, 7, numberCmp);   // 3\n   * ArrayExt.lowerBound(data, -1, numberCmp);  // 0\n   * ArrayExt.lowerBound(data, 10, numberCmp);  // 6\n   * ```\n   */\n  export function lowerBound<T, U>(\n    array: ArrayLike<T>,\n    value: U,\n    fn: (element: T, value: U) => number,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let begin = start;\n    let span = stop - start + 1;\n    while (span > 0) {\n      let half = span >> 1;\n      let middle = begin + half;\n      if (fn(array[middle], value) < 0) {\n        begin = middle + 1;\n        span -= half + 1;\n      } else {\n        span = half;\n      }\n    }\n    return begin;\n  }\n\n  /**\n   * Find the index of the first element which compares `>` than a value.\n   *\n   * @param array - The sorted array-like object to search.\n   *\n   * @param value - The value to locate in the array.\n   *\n   * @param fn - The 3-way comparison function to apply to the values.\n   *   It should return `< 0` if an element is less than a value, `0` if\n   *   an element is equal to a value, or `> 0` if an element is greater\n   *   than a value.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first element which compares `>` than the\n   *   value, or `length` if there is no such element. If the computed\n   *   index for `stop` is less than `start`, then the computed index\n   *   for `start` is returned.\n   *\n   * #### Notes\n   * The array must already be sorted in ascending order according to\n   * the comparison function.\n   *\n   * #### Complexity\n   * Logarithmic.\n   *\n   * #### Undefined Behavior\n   * Searching a range which is not sorted in ascending order.\n   *\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function numberCmp(a: number, b: number): number {\n   *   return a - b;\n   * }\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.upperBound(data, 0, numberCmp);   // 1\n   * ArrayExt.upperBound(data, 6, numberCmp);   // 3\n   * ArrayExt.upperBound(data, 7, numberCmp);   // 5\n   * ArrayExt.upperBound(data, -1, numberCmp);  // 0\n   * ArrayExt.upperBound(data, 10, numberCmp);  // 6\n   * ```\n   */\n  export function upperBound<T, U>(\n    array: ArrayLike<T>,\n    value: U,\n    fn: (element: T, value: U) => number,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let begin = start;\n    let span = stop - start + 1;\n    while (span > 0) {\n      let half = span >> 1;\n      let middle = begin + half;\n      if (fn(array[middle], value) > 0) {\n        span = half;\n      } else {\n        begin = middle + 1;\n        span -= half + 1;\n      }\n    }\n    return begin;\n  }\n\n  /**\n   * Test whether two arrays are shallowly equal.\n   *\n   * @param a - The first array-like object to compare.\n   *\n   * @param b - The second array-like object to compare.\n   *\n   * @param fn - The comparison function to apply to the elements. It\n   *   should return `true` if the elements are \"equal\". The default\n   *   compares elements using strict `===` equality.\n   *\n   * @returns Whether the two arrays are shallowly equal.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * Modifying the length of the arrays while comparing.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let d1 = [0, 3, 4, 7, 7, 9];\n   * let d2 = [0, 3, 4, 7, 7, 9];\n   * let d3 = [42];\n   * ArrayExt.shallowEqual(d1, d2);  // true\n   * ArrayExt.shallowEqual(d2, d3);  // false\n   * ```\n   */\n  export function shallowEqual<T>(\n    a: ArrayLike<T>,\n    b: ArrayLike<T>,\n    fn?: (a: T, b: T) => boolean\n  ): boolean {\n    // Check for object identity first.\n    if (a === b) {\n      return true;\n    }\n\n    // Bail early if the lengths are different.\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    // Compare each element for equality.\n    for (let i = 0, n = a.length; i < n; ++i) {\n      if (fn ? !fn(a[i], b[i]) : a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    // The array are shallowly equal.\n    return true;\n  }\n\n  /**\n   * Create a slice of an array subject to an optional step.\n   *\n   * @param array - The array-like object of interest.\n   *\n   * @param options - The options for configuring the slice.\n   *\n   * @returns A new array with the specified values.\n   *\n   * @throws An exception if the slice `step` is `0`.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start`, `stop`, or `step` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.slice(data);                         // [0, 3, 4, 7, 7, 9]\n   * ArrayExt.slice(data, { start: 2 });           // [4, 7, 7, 9]\n   * ArrayExt.slice(data, { start: 0, stop: 4 });  // [0, 3, 4, 7]\n   * ArrayExt.slice(data, { step: 2 });            // [0, 4, 7]\n   * ArrayExt.slice(data, { step: -1 });           // [9, 7, 7, 4, 3, 0]\n   * ```\n   */\n  export function slice<T>(\n    array: ArrayLike<T>,\n    options: slice.IOptions = {}\n  ): T[] {\n    // Extract the options.\n    let { start, stop, step } = options;\n\n    // Set up the `step` value.\n    if (step === undefined) {\n      step = 1;\n    }\n\n    // Validate the step size.\n    if (step === 0) {\n      throw new Error('Slice `step` cannot be zero.');\n    }\n\n    // Look up the length of the array.\n    let n = array.length;\n\n    // Set up the `start` value.\n    if (start === undefined) {\n      start = step < 0 ? n - 1 : 0;\n    } else if (start < 0) {\n      start = Math.max(start + n, step < 0 ? -1 : 0);\n    } else if (start >= n) {\n      start = step < 0 ? n - 1 : n;\n    }\n\n    // Set up the `stop` value.\n    if (stop === undefined) {\n      stop = step < 0 ? -1 : n;\n    } else if (stop < 0) {\n      stop = Math.max(stop + n, step < 0 ? -1 : 0);\n    } else if (stop >= n) {\n      stop = step < 0 ? n - 1 : n;\n    }\n\n    // Compute the slice length.\n    let length;\n    if ((step < 0 && stop >= start) || (step > 0 && start >= stop)) {\n      length = 0;\n    } else if (step < 0) {\n      length = Math.floor((stop - start + 1) / step + 1);\n    } else {\n      length = Math.floor((stop - start - 1) / step + 1);\n    }\n\n    // Compute the sliced result.\n    let result: T[] = [];\n    for (let i = 0; i < length; ++i) {\n      result[i] = array[start + i * step];\n    }\n\n    // Return the result.\n    return result;\n  }\n\n  /**\n   * The namespace for the `slice` function statics.\n   */\n  export namespace slice {\n    /**\n     * The options for the `slice` function.\n     */\n    export interface IOptions {\n      /**\n       * The starting index of the slice, inclusive.\n       *\n       * Negative values are taken as an offset from the end\n       * of the array.\n       *\n       * The default is `0` if `step > 0` else `n - 1`.\n       */\n      start?: number;\n\n      /**\n       * The stopping index of the slice, exclusive.\n       *\n       * Negative values are taken as an offset from the end\n       * of the array.\n       *\n       * The default is `n` if `step > 0` else `-n - 1`.\n       */\n      stop?: number;\n\n      /**\n       * The step value for the slice.\n       *\n       * This must not be `0`.\n       *\n       * The default is `1`.\n       */\n      step?: number;\n    }\n  }\n\n  /**\n   * An array-like object which supports item assignment.\n   */\n  export type MutableArrayLike<T> = {\n    readonly length: number;\n    [index: number]: T;\n  };\n\n  /**\n   * Move an element in an array from one index to another.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param fromIndex - The index of the element to move. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * @param toIndex - The target index of the element. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `fromIndex` or `toIndex` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.move(data, 1, 2);  // [0, 2, 1, 3, 4]\n   * ArrayExt.move(data, 4, 2);  // [0, 2, 4, 1, 3]\n   * ```\n   */\n  export function move<T>(\n    array: MutableArrayLike<T>,\n    fromIndex: number,\n    toIndex: number\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (fromIndex < 0) {\n      fromIndex = Math.max(0, fromIndex + n);\n    } else {\n      fromIndex = Math.min(fromIndex, n - 1);\n    }\n    if (toIndex < 0) {\n      toIndex = Math.max(0, toIndex + n);\n    } else {\n      toIndex = Math.min(toIndex, n - 1);\n    }\n    if (fromIndex === toIndex) {\n      return;\n    }\n    let value = array[fromIndex];\n    let d = fromIndex < toIndex ? 1 : -1;\n    for (let i = fromIndex; i !== toIndex; i += d) {\n      array[i] = array[i + d];\n    }\n    array[toIndex] = value;\n  }\n\n  /**\n   * Reverse an array in-place.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param start - The index of the first element in the range to be\n   *   reversed, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   reversed, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or  `stop` index which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.reverse(data, 1, 3);  // [0, 3, 2, 1, 4]\n   * ArrayExt.reverse(data, 3);     // [0, 3, 2, 4, 1]\n   * ArrayExt.reverse(data);        // [1, 4, 2, 3, 0]\n   * ```\n   */\n  export function reverse<T>(\n    array: MutableArrayLike<T>,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    while (start < stop) {\n      let a = array[start];\n      let b = array[stop];\n      array[start++] = b;\n      array[stop--] = a;\n    }\n  }\n\n  /**\n   * Rotate the elements of an array in-place.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param delta - The amount of rotation to apply to the elements. A\n   *   positive value will rotate the elements to the left. A negative\n   *   value will rotate the elements to the right.\n   *\n   * @param start - The index of the first element in the range to be\n   *   rotated, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   rotated, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `delta`, `start`, or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.rotate(data, 2);        // [2, 3, 4, 0, 1]\n   * ArrayExt.rotate(data, -2);       // [0, 1, 2, 3, 4]\n   * ArrayExt.rotate(data, 10);       // [0, 1, 2, 3, 4]\n   * ArrayExt.rotate(data, 9);        // [4, 0, 1, 2, 3]\n   * ArrayExt.rotate(data, 2, 1, 3);  // [4, 2, 0, 1, 3]\n   * ```\n   */\n  export function rotate<T>(\n    array: MutableArrayLike<T>,\n    delta: number,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    if (start >= stop) {\n      return;\n    }\n    let length = stop - start + 1;\n    if (delta > 0) {\n      delta = delta % length;\n    } else if (delta < 0) {\n      delta = ((delta % length) + length) % length;\n    }\n    if (delta === 0) {\n      return;\n    }\n    let pivot = start + delta;\n    reverse(array, start, pivot - 1);\n    reverse(array, pivot, stop);\n    reverse(array, start, stop);\n  }\n\n  /**\n   * Fill an array with a static value.\n   *\n   * @param array - The mutable array-like object to fill.\n   *\n   * @param value - The static value to use to fill the array.\n   *\n   * @param start - The index of the first element in the range to be\n   *   filled, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   filled, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Notes\n   * If `stop < start` the fill will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four'];\n   * ArrayExt.fill(data, 'r');        // ['r', 'r', 'r', 'r']\n   * ArrayExt.fill(data, 'g', 1);     // ['r', 'g', 'g', 'g']\n   * ArrayExt.fill(data, 'b', 2, 3);  // ['r', 'g', 'b', 'b']\n   * ArrayExt.fill(data, 'z', 3, 1);  // ['z', 'z', 'b', 'z']\n   * ```\n   */\n  export function fill<T>(\n    array: MutableArrayLike<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n === 0) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      array[(start + i) % n] = value;\n    }\n  }\n\n  /**\n   * Insert a value into an array at a specific index.\n   *\n   * @param array - The array of interest.\n   *\n   * @param index - The index at which to insert the value. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * @param value - The value to set at the specified index.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2];\n   * ArrayExt.insert(data, 0, -1);  // [-1, 0, 1, 2]\n   * ArrayExt.insert(data, 2, 12);  // [-1, 0, 12, 1, 2]\n   * ArrayExt.insert(data, -1, 7);  // [-1, 0, 12, 1, 7, 2]\n   * ArrayExt.insert(data, 6, 19);  // [-1, 0, 12, 1, 7, 2, 19]\n   * ```\n   */\n  export function insert<T>(array: Array<T>, index: number, value: T): void {\n    let n = array.length;\n    if (index < 0) {\n      index = Math.max(0, index + n);\n    } else {\n      index = Math.min(index, n);\n    }\n    for (let i = n; i > index; --i) {\n      array[i] = array[i - 1];\n    }\n    array[index] = value;\n  }\n\n  /**\n   * Remove and return a value at a specific index in an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param index - The index of the value to remove. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The value at the specified index, or `undefined` if the\n   *   index is out of range.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeAt(data, 2);   // 23\n   * ArrayExt.removeAt(data, -2);  // 12\n   * ArrayExt.removeAt(data, 10);  // undefined;\n   * ```\n   */\n  export function removeAt<T>(array: Array<T>, index: number): T | undefined {\n    let n = array.length;\n    if (index < 0) {\n      index += n;\n    }\n    if (index < 0 || index >= n) {\n      return undefined;\n    }\n    let value = array[index];\n    for (let i = index + 1; i < n; ++i) {\n      array[i - 1] = array[i];\n    }\n    array.length = n - 1;\n    return value;\n  }\n\n  /**\n   * Remove the first occurrence of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the removed value, or `-1` if the value\n   *   is not contained in the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeFirstOf(data, 12);        // 1\n   * ArrayExt.removeFirstOf(data, 17);        // -1\n   * ArrayExt.removeFirstOf(data, 39, 3);     // -1\n   * ArrayExt.removeFirstOf(data, 39, 3, 2);  // 2\n   * ```\n   */\n  export function removeFirstOf<T>(\n    array: Array<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let index = firstIndexOf(array, value, start, stop);\n    if (index !== -1) {\n      removeAt(array, index);\n    }\n    return index;\n  }\n\n  /**\n   * Remove the last occurrence of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the removed value, or `-1` if the value\n   *   is not contained in the array.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeLastOf(data, 12);        // 5\n   * ArrayExt.removeLastOf(data, 17);        // -1\n   * ArrayExt.removeLastOf(data, 39, 2);     // -1\n   * ArrayExt.removeLastOf(data, 39, 2, 3);  // 3\n   * ```\n   */\n  export function removeLastOf<T>(\n    array: Array<T>,\n    value: T,\n    start = -1,\n    stop = 0\n  ): number {\n    let index = lastIndexOf(array, value, start, stop);\n    if (index !== -1) {\n      removeAt(array, index);\n    }\n    return index;\n  }\n\n  /**\n   * Remove all occurrences of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The number of elements removed from the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will conceptually wrap at the end of\n   * the array, however the array will be traversed front-to-back.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [14, 12, 23, 39, 14, 12, 19, 14];\n   * ArrayExt.removeAllOf(data, 12);        // 2\n   * ArrayExt.removeAllOf(data, 17);        // 0\n   * ArrayExt.removeAllOf(data, 14, 1, 4);  // 1\n   * ```\n   */\n  export function removeAllOf<T>(\n    array: Array<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let count = 0;\n    for (let i = 0; i < n; ++i) {\n      if (start <= stop && i >= start && i <= stop && array[i] === value) {\n        count++;\n      } else if (\n        stop < start &&\n        (i <= stop || i >= start) &&\n        array[i] === value\n      ) {\n        count++;\n      } else if (count > 0) {\n        array[i - count] = array[i];\n      }\n    }\n    if (count > 0) {\n      array.length = n - count;\n    }\n    return count;\n  }\n\n  /**\n   * Remove the first occurrence of a value which matches a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The removed `{ index, value }`, which will be `-1` and\n   *   `undefined` if the value is not contained in the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeFirstWhere(data, isEven);     // { index: 0, value: 0 }\n   * ArrayExt.removeFirstWhere(data, isEven, 2);  // { index: 3, value: 14 }\n   * ArrayExt.removeFirstWhere(data, isEven, 4);  // { index: -1, value: undefined }\n   * ```\n   */\n  export function removeFirstWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): { index: number; value: T | undefined } {\n    let value: T | undefined;\n    let index = findFirstIndex(array, fn, start, stop);\n    if (index !== -1) {\n      value = removeAt(array, index);\n    }\n    return { index, value };\n  }\n\n  /**\n   * Remove the last occurrence of a value which matches a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The removed `{ index, value }`, which will be `-1` and\n   *   `undefined` if the value is not contained in the array.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeLastWhere(data, isEven);        // { index: 5, value: 12 }\n   * ArrayExt.removeLastWhere(data, isEven, 2);     // { index: 1, value: 12 }\n   * ArrayExt.removeLastWhere(data, isEven, 2, 1);  // { index: -1, value: undefined }\n   * ```\n   */\n  export function removeLastWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): { index: number; value: T | undefined } {\n    let value: T | undefined;\n    let index = findLastIndex(array, fn, start, stop);\n    if (index !== -1) {\n      value = removeAt(array, index);\n    }\n    return { index, value };\n  }\n\n  /**\n   * Remove all occurrences of values which match a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The number of elements removed from the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will conceptually wrap at the end of\n   * the array, however the array will be traversed front-to-back.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * function isNegative(value: number): boolean {\n   *   return value < 0;\n   * }\n   *\n   * let data = [0, 12, -13, -9, 23, 39, 14, -15, 12, 75];\n   * ArrayExt.removeAllWhere(data, isEven);            // 4\n   * ArrayExt.removeAllWhere(data, isNegative, 0, 3);  // 2\n   * ```\n   */\n  export function removeAllWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let count = 0;\n    for (let i = 0; i < n; ++i) {\n      if (start <= stop && i >= start && i <= stop && fn(array[i], i)) {\n        count++;\n      } else if (stop < start && (i <= stop || i >= start) && fn(array[i], i)) {\n        count++;\n      } else if (count > 0) {\n        array[i - count] = array[i];\n      }\n    }\n    if (count > 0) {\n      array.length = n - count;\n    }\n    return count;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Chain together several iterables.\n *\n * @deprecated\n *\n * @param objects - The iterable objects of interest.\n *\n * @returns An iterator which yields the values of the iterables\n *   in the order in which they are supplied.\n *\n * #### Example\n * ```typescript\n * import { chain } from '@lumino/algorithm';\n *\n * let data1 = [1, 2, 3];\n * let data2 = [4, 5, 6];\n *\n * let stream = chain(data1, data2);\n *\n * Array.from(stream);  // [1, 2, 3, 4, 5, 6]\n * ```\n */\nexport function* chain<T>(...objects: Iterable<T>[]): IterableIterator<T> {\n  for (const object of objects) {\n    yield* object;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an empty iterator.\n *\n * @returns A new iterator which yields nothing.\n *\n * #### Example\n * ```typescript\n * import { empty } from '@lumino/algorithm';\n *\n * let stream = empty<number>();\n *\n * Array.from(stream);  // []\n * ```\n */\n// eslint-disable-next-line require-yield\nexport function* empty<T>(): IterableIterator<T> {\n  return;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Enumerate an iterable object.\n *\n * @param object - The iterable object of interest.\n *\n * @param start - The starting enum value. The default is `0`.\n *\n * @returns An iterator which yields the enumerated values.\n *\n * #### Example\n * ```typescript\n * import { enumerate } from '@lumino/algorithm';\n *\n * let data = ['foo', 'bar', 'baz'];\n *\n * let stream = enumerate(data, 1);\n *\n * Array.from(stream);  // [[1, 'foo'], [2, 'bar'], [3, 'baz']]\n * ```\n */\nexport function* enumerate<T>(\n  object: Iterable<T>,\n  start = 0\n): IterableIterator<[number, T]> {\n  for (const value of object) {\n    yield [start++, value];\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Filter an iterable for values which pass a test.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns An iterator which yields the values which pass the test.\n *\n * #### Example\n * ```typescript\n * import { filter } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = filter(data, value => value % 2 === 0);\n *\n * Array.from(stream);  // [2, 4, 6]\n * ```\n */\nexport function* filter<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): IterableIterator<T> {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      yield value;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Find the first value in an iterable which matches a predicate.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The predicate function to apply to the values.\n *\n * @returns The first matching value, or `undefined` if no matching\n *   value is found.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { find } from '@lumino/algorithm';\n *\n * interface IAnimal { species: string, name: string };\n *\n * function isCat(value: IAnimal): boolean {\n *   return value.species === 'cat';\n * }\n *\n * let data: IAnimal[] = [\n *   { species: 'dog', name: 'spot' },\n *   { species: 'cat', name: 'fluffy' },\n *   { species: 'alligator', name: 'pocho' }\n * ];\n *\n * find(data, isCat).name;  // 'fluffy'\n * ```\n */\nexport function find<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): T | undefined {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return value;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Find the index of the first value which matches a predicate.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The predicate function to apply to the values.\n *\n * @returns The index of the first matching value, or `-1` if no\n *   matching value is found.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { findIndex } from '@lumino/algorithm';\n *\n * interface IAnimal { species: string, name: string };\n *\n * function isCat(value: IAnimal): boolean {\n *   return value.species === 'cat';\n * }\n *\n * let data: IAnimal[] = [\n *   { species: 'dog', name: 'spot' },\n *   { species: 'cat', name: 'fluffy' },\n *   { species: 'alligator', name: 'pocho' }\n * ];\n *\n * findIndex(data, isCat);  // 1\n * ```\n */\nexport function findIndex<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): number {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return index - 1;\n    }\n  }\n  return -1;\n}\n\n/**\n * Find the minimum value in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns The minimum value in the iterable. If multiple values are\n *   equivalent to the minimum, the left-most value is returned. If\n *   the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { min } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * min([7, 4, 0, 3, 9, 4], numberCmp);  // 0\n * ```\n */\nexport function min<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): T | undefined {\n  let result: T | undefined = undefined;\n  for (const value of object) {\n    if (result === undefined) {\n      result = value;\n      continue;\n    }\n    if (fn(value, result) < 0) {\n      result = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Find the maximum value in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns The maximum value in the iterable. If multiple values are\n *   equivalent to the maximum, the left-most value is returned. If\n *   the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { max } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * max([7, 4, 0, 3, 9, 4], numberCmp);  // 9\n * ```\n */\nexport function max<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): T | undefined {\n  let result: T | undefined = undefined;\n  for (const value of object) {\n    if (result === undefined) {\n      result = value;\n      continue;\n    }\n    if (fn(value, result) > 0) {\n      result = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Find the minimum and maximum values in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns A 2-tuple of the `[min, max]` values in the iterable. If\n *   multiple values are equivalent, the left-most values are returned.\n *   If the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { minmax } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * minmax([7, 4, 0, 3, 9, 4], numberCmp);  // [0, 9]\n * ```\n */\nexport function minmax<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): [T, T] | undefined {\n  let empty = true;\n  let vmin: T;\n  let vmax: T;\n  for (const value of object) {\n    if (empty) {\n      vmin = value;\n      vmax = value;\n      empty = false;\n    } else if (fn(value, vmin!) < 0) {\n      vmin = value;\n    } else if (fn(value, vmax!) > 0) {\n      vmax = value;\n    }\n  }\n  return empty ? undefined : [vmin!, vmax!];\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an array from an iterable of values.\n *\n * @deprecated\n *\n * @param object - The iterable object of interest.\n *\n * @returns A new array of values from the given object.\n *\n * #### Example\n * ```typescript\n * import { toArray } from '@lumino/algorithm';\n *\n * let stream = [1, 2, 3, 4, 5, 6][Symbol.iterator]();\n *\n * toArray(stream);  // [1, 2, 3, 4, 5, 6];\n * ```\n */\nexport function toArray<T>(object: Iterable<T>): T[] {\n  return Array.from(object);\n}\n\n/**\n * Create an object from an iterable of key/value pairs.\n *\n * @param object - The iterable object of interest.\n *\n * @returns A new object mapping keys to values.\n *\n * #### Example\n * ```typescript\n * import { toObject } from '@lumino/algorithm';\n *\n * let data: [string, number][] = [['one', 1], ['two', 2], ['three', 3]];\n *\n * toObject(data);  // { one: 1, two: 2, three: 3 }\n * ```\n */\nexport function toObject<T>(object: Iterable<[string, T]>): {\n  [key: string]: T;\n} {\n  const result: { [key: string]: T } = {};\n  for (const [key, value] of object) {\n    result[key] = value;\n  }\n  return result;\n}\n\n/**\n * Invoke a function for each value in an iterable.\n *\n * @deprecated\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The callback function to invoke for each value.\n *\n * #### Notes\n * Iteration can be terminated early by returning `false` from the\n * callback function.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { each } from '@lumino/algorithm';\n *\n * let data = [5, 7, 0, -2, 9];\n *\n * each(data, value => { console.log(value); });\n * ```\n */\nexport function each<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean | void\n): void {\n  let index = 0;\n  for (const value of object) {\n    if (false === fn(value, index++)) {\n      return;\n    }\n  }\n}\n\n/**\n * Test whether all values in an iterable satisfy a predicate.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns `true` if all values pass the test, `false` otherwise.\n *\n * #### Notes\n * Iteration terminates on the first `false` predicate result.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { every } from '@lumino/algorithm';\n *\n * let data = [5, 7, 1];\n *\n * every(data, value => value % 2 === 0);  // false\n * every(data, value => value % 2 === 1);  // true\n * ```\n */\nexport function every<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): boolean {\n  let index = 0;\n  for (const value of object) {\n    if (false === fn(value, index++)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Test whether any value in an iterable satisfies a predicate.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns `true` if any value passes the test, `false` otherwise.\n *\n * #### Notes\n * Iteration terminates on the first `true` predicate result.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { some } from '@lumino/algorithm';\n *\n * let data = [5, 7, 1];\n *\n * some(data, value => value === 7);  // true\n * some(data, value => value === 3);  // false\n * ```\n */\nexport function some<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): boolean {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return true;\n    }\n  }\n  return false;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Transform the values of an iterable with a mapping function.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The mapping function to invoke for each value.\n *\n * @returns An iterator which yields the transformed values.\n *\n * #### Example\n * ```typescript\n * import { map } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3];\n *\n * let stream = map(data, value => value * 2);\n *\n * Array.from(stream);  // [2, 4, 6]\n * ```\n */\nexport function* map<T, U>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => U\n): IterableIterator<U> {\n  let index = 0;\n  for (const value of object) {\n    yield fn(value, index++);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Create an iterator of evenly spaced values.\n *\n * @param start - The starting value for the range, inclusive.\n *\n * @param stop - The stopping value for the range, exclusive.\n *\n * @param step - The distance between each value.\n *\n * @returns An iterator which produces evenly spaced values.\n *\n * #### Notes\n * In the single argument form of `range(stop)`, `start` defaults to\n * `0` and `step` defaults to `1`.\n *\n * In the two argument form of `range(start, stop)`, `step` defaults\n * to `1`.\n *\n * #### Example\n * ```typescript\n * import { range } from '@lumino/algorithm';\n *\n * let stream = range(2, 4);\n *\n * Array.from(stream);  // [2, 3]\n * ```\n */\nexport function* range(\n  start: number,\n  stop?: number,\n  step?: number\n): IterableIterator<number> {\n  if (stop === undefined) {\n    stop = start;\n    start = 0;\n    step = 1;\n  } else if (step === undefined) {\n    step = 1;\n  }\n  const length = Private.rangeLength(start, stop, step);\n  for (let index = 0; index < length; index++) {\n    yield start + step * index;\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Compute the effective length of a range.\n   *\n   * @param start - The starting value for the range, inclusive.\n   *\n   * @param stop - The stopping value for the range, exclusive.\n   *\n   * @param step - The distance between each value.\n   *\n   * @returns The number of steps need to traverse the range.\n   */\n  export function rangeLength(\n    start: number,\n    stop: number,\n    step: number\n  ): number {\n    if (step === 0) {\n      return Infinity;\n    }\n    if (start > stop && step > 0) {\n      return 0;\n    }\n    if (start < stop && step < 0) {\n      return 0;\n    }\n    return Math.ceil((stop - start) / step);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Summarize all values in an iterable using a reducer function.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The reducer function to invoke for each value.\n *\n * @param initial - The initial value to start accumulation.\n *\n * @returns The final accumulated value.\n *\n * #### Notes\n * The `reduce` function follows the conventions of `Array#reduce`.\n *\n * If the iterator is empty, an initial value is required. That value\n * will be used as the return value. If no initial value is provided,\n * an error will be thrown.\n *\n * If the iterator contains a single item and no initial value is\n * provided, the single item is used as the return value.\n *\n * Otherwise, the reducer is invoked for each element in the iterable.\n * If an initial value is not provided, the first element will be used\n * as the initial accumulated value.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { reduce } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5];\n *\n * let sum = reduce(data, (a, value) => a + value);  // 15\n * ```\n */\nexport function reduce<T>(\n  object: Iterable<T>,\n  fn: (accumulator: T, value: T, index: number) => T\n): T;\nexport function reduce<T, U>(\n  object: Iterable<T>,\n  fn: (accumulator: U, value: T, index: number) => U,\n  initial: U\n): U;\nexport function reduce<T>(\n  object: Iterable<T>,\n  fn: (accumulator: any, value: T, index: number) => any,\n  initial?: unknown\n): any {\n  // Setup the iterator and fetch the first value.\n  const it = object[Symbol.iterator]();\n  let index = 0;\n  let first = it.next();\n\n  // An empty iterator and no initial value is an error.\n  if (first.done && initial === undefined) {\n    throw new TypeError('Reduce of empty iterable with no initial value.');\n  }\n\n  // If the iterator is empty, return the initial value.\n  if (first.done) {\n    return initial;\n  }\n\n  // If the iterator has a single item and no initial value, the\n  // reducer is not invoked and the first item is the return value.\n  let second = it.next();\n  if (second.done && initial === undefined) {\n    return first.value;\n  }\n\n  // If iterator has a single item and an initial value is provided,\n  // the reducer is invoked and that result is the return value.\n  if (second.done) {\n    return fn(initial, first.value, index++);\n  }\n\n  // Setup the initial accumlated value.\n  let accumulator: any;\n  if (initial === undefined) {\n    accumulator = fn(first.value, second.value, index++);\n  } else {\n    accumulator = fn(fn(initial, first.value, index++), second.value, index++);\n  }\n\n  // Iterate the rest of the values, updating the accumulator.\n  let next: IteratorResult<T>;\n  while (!(next = it.next()).done) {\n    accumulator = fn(accumulator, next.value, index++);\n  }\n\n  // Return the final accumulated value.\n  return accumulator;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an iterator which repeats a value a number of times.\n *\n * @deprecated\n *\n * @param value - The value to repeat.\n *\n * @param count - The number of times to repeat the value.\n *\n * @returns A new iterator which repeats the specified value.\n *\n * #### Example\n * ```typescript\n * import { repeat } from '@lumino/algorithm';\n *\n * let stream = repeat(7, 3);\n *\n * Array.from(stream);  // [7, 7, 7]\n * ```\n */\nexport function* repeat<T>(value: T, count: number): IterableIterator<T> {\n  while (0 < count--) {\n    yield value;\n  }\n}\n\n/**\n * Create an iterator which yields a value a single time.\n *\n * @deprecated\n *\n * @param value - The value to wrap in an iterator.\n *\n * @returns A new iterator which yields the value a single time.\n *\n * #### Example\n * ```typescript\n * import { once } from '@lumino/algorithm';\n *\n * let stream = once(7);\n *\n * Array.from(stream);  // [7]\n * ```\n */\nexport function* once<T>(value: T): IterableIterator<T> {\n  yield value;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * An object which can produce a reverse iterator over its values.\n */\nexport interface IRetroable<T> {\n  /**\n   * Get a reverse iterator over the object's values.\n   *\n   * @returns An iterator which yields the object's values in reverse.\n   */\n  retro(): IterableIterator<T>;\n}\n\n/**\n * Create an iterator for a retroable object.\n *\n * @param object - The retroable or array-like object of interest.\n *\n * @returns An iterator which traverses the object's values in reverse.\n *\n * #### Example\n * ```typescript\n * import { retro } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = retro(data);\n *\n * Array.from(stream);  // [6, 5, 4, 3, 2, 1]\n * ```\n */\nexport function* retro<T>(\n  object: IRetroable<T> | ArrayLike<T>\n): IterableIterator<T> {\n  if (typeof (object as IRetroable<T>).retro === 'function') {\n    yield* (object as IRetroable<T>).retro();\n  } else {\n    for (let index = (object as ArrayLike<T>).length - 1; index > -1; index--) {\n      yield (object as ArrayLike<T>)[index];\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Topologically sort an iterable of edges.\n *\n * @param edges - The iterable object of edges to sort.\n *   An edge is represented as a 2-tuple of `[fromNode, toNode]`.\n *\n * @returns The topologically sorted array of nodes.\n *\n * #### Notes\n * If a cycle is present in the graph, the cycle will be ignored and\n * the return value will be only approximately sorted.\n *\n * #### Example\n * ```typescript\n * import { topologicSort } from '@lumino/algorithm';\n *\n * let data = [\n *   ['d', 'e'],\n *   ['c', 'd'],\n *   ['a', 'b'],\n *   ['b', 'c']\n * ];\n *\n * topologicSort(data);  // ['a', 'b', 'c', 'd', 'e']\n * ```\n */\nexport function topologicSort<T>(edges: Iterable<[T, T]>): T[] {\n  // Setup the shared sorting state.\n  let sorted: T[] = [];\n  let visited = new Set<T>();\n  let graph = new Map<T, T[]>();\n\n  // Add the edges to the graph.\n  for (const edge of edges) {\n    addEdge(edge);\n  }\n\n  // Visit each node in the graph.\n  for (const [k] of graph) {\n    visit(k);\n  }\n\n  // Return the sorted results.\n  return sorted;\n\n  // Add an edge to the graph.\n  function addEdge(edge: [T, T]): void {\n    let [fromNode, toNode] = edge;\n    let children = graph.get(toNode);\n    if (children) {\n      children.push(fromNode);\n    } else {\n      graph.set(toNode, [fromNode]);\n    }\n  }\n\n  // Recursively visit the node.\n  function visit(node: T): void {\n    if (visited.has(node)) {\n      return;\n    }\n    visited.add(node);\n    let children = graph.get(node);\n    if (children) {\n      for (const child of children) {\n        visit(child);\n      }\n    }\n    sorted.push(node);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Iterate over an iterable using a stepped increment.\n *\n * @param object - The iterable object of interest.\n *\n * @param step - The distance to step on each iteration. A value\n *   of less than `1` will behave the same as a value of `1`.\n *\n * @returns An iterator which traverses the iterable step-wise.\n *\n * #### Example\n * ```typescript\n * import { stride } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = stride(data, 2);\n *\n * Array.from(stream);  // [1, 3, 5];\n * ```\n */\nexport function* stride<T>(\n  object: Iterable<T>,\n  step: number\n): IterableIterator<T> {\n  let count = 0;\n  for (const value of object) {\n    if (0 === count++ % step) {\n      yield value;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for string-specific algorithms.\n */\nexport namespace StringExt {\n  /**\n   * Find the indices of characters in a source text.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The matched indices, or `null` if there is no match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * In order for there to be a match, all of the characters in `query`\n   * **must** appear in `source` in the order given by `query`.\n   *\n   * Characters are matched using strict `===` equality.\n   */\n  export function findIndices(\n    source: string,\n    query: string,\n    start = 0\n  ): number[] | null {\n    let indices = new Array<number>(query.length);\n    for (let i = 0, j = start, n = query.length; i < n; ++i, ++j) {\n      j = source.indexOf(query[i], j);\n      if (j === -1) {\n        return null;\n      }\n      indices[i] = j;\n    }\n    return indices;\n  }\n\n  /**\n   * The result of a string match function.\n   */\n  export interface IMatchResult {\n    /**\n     * A score which indicates the strength of the match.\n     *\n     * The documentation of a given match function should specify\n     * whether a lower or higher score is a stronger match.\n     */\n    score: number;\n\n    /**\n     * The indices of the matched characters in the source text.\n     *\n     * The indices will appear in increasing order.\n     */\n    indices: number[];\n  }\n\n  /**\n   * A string matcher which uses a sum-of-squares algorithm.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The match result, or `null` if there is no match.\n   *   A lower `score` represents a stronger match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * This scoring algorithm uses a sum-of-squares approach to determine\n   * the score. In order for there to be a match, all of the characters\n   * in `query` **must** appear in `source` in order. The index of each\n   * matching character is squared and added to the score. This means\n   * that early and consecutive character matches are preferred, while\n   * late matches are heavily penalized.\n   */\n  export function matchSumOfSquares(\n    source: string,\n    query: string,\n    start = 0\n  ): IMatchResult | null {\n    let indices = findIndices(source, query, start);\n    if (!indices) {\n      return null;\n    }\n    let score = 0;\n    for (let i = 0, n = indices.length; i < n; ++i) {\n      let j = indices[i] - start;\n      score += j * j;\n    }\n    return { score, indices };\n  }\n\n  /**\n   * A string matcher which uses a sum-of-deltas algorithm.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The match result, or `null` if there is no match.\n   *   A lower `score` represents a stronger match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * This scoring algorithm uses a sum-of-deltas approach to determine\n   * the score. In order for there to be a match, all of the characters\n   * in `query` **must** appear in `source` in order. The delta between\n   * the indices are summed to create the score. This means that groups\n   * of matched characters are preferred, while fragmented matches are\n   * penalized.\n   */\n  export function matchSumOfDeltas(\n    source: string,\n    query: string,\n    start = 0\n  ): IMatchResult | null {\n    let indices = findIndices(source, query, start);\n    if (!indices) {\n      return null;\n    }\n    let score = 0;\n    let last = start - 1;\n    for (let i = 0, n = indices.length; i < n; ++i) {\n      let j = indices[i];\n      score += j - last - 1;\n      last = j;\n    }\n    return { score, indices };\n  }\n\n  /**\n   * Highlight the matched characters of a source text.\n   *\n   * @param source - The text which should be highlighted.\n   *\n   * @param indices - The indices of the matched characters. They must\n   *   appear in increasing order and must be in bounds of the source.\n   *\n   * @param fn - The function to apply to the matched chunks.\n   *\n   * @returns An array of unmatched and highlighted chunks.\n   */\n  export function highlight<T>(\n    source: string,\n    indices: ReadonlyArray<number>,\n    fn: (chunk: string) => T\n  ): Array<string | T> {\n    // Set up the result array.\n    let result: Array<string | T> = [];\n\n    // Set up the counter variables.\n    let k = 0;\n    let last = 0;\n    let n = indices.length;\n\n    // Iterator over each index.\n    while (k < n) {\n      // Set up the chunk indices.\n      let i = indices[k];\n      let j = indices[k];\n\n      // Advance the right chunk index until it's non-contiguous.\n      while (++k < n && indices[k] === j + 1) {\n        j++;\n      }\n\n      // Extract the unmatched text.\n      if (last < i) {\n        result.push(source.slice(last, i));\n      }\n\n      // Extract and highlight the matched text.\n      if (i < j + 1) {\n        result.push(fn(source.slice(i, j + 1)));\n      }\n\n      // Update the last visited index.\n      last = j + 1;\n    }\n\n    // Extract any remaining unmatched text.\n    if (last < source.length) {\n      result.push(source.slice(last));\n    }\n\n    // Return the highlighted result.\n    return result;\n  }\n\n  /**\n   * A 3-way string comparison function.\n   *\n   * @param a - The first string of interest.\n   *\n   * @param b - The second string of interest.\n   *\n   * @returns `-1` if `a < b`, else `1` if `a > b`, else `0`.\n   */\n  export function cmp(a: string, b: string): number {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Take a fixed number of items from an iterable.\n *\n * @param object - The iterable object of interest.\n *\n * @param count - The number of items to take from the iterable.\n *\n * @returns An iterator which yields the specified number of items\n *   from the source iterable.\n *\n * #### Notes\n * The returned iterator will exhaust early if the source iterable\n * contains an insufficient number of items.\n *\n * #### Example\n * ```typescript\n * import { take } from '@lumino/algorithm';\n *\n * let stream = take([5, 4, 3, 2, 1, 0, -1], 3);\n *\n * Array.from(stream);  // [5, 4, 3]\n * ```\n */\nexport function* take<T>(\n  object: Iterable<T>,\n  count: number\n): IterableIterator<T> {\n  if (count < 1) {\n    return;\n  }\n  const it = object[Symbol.iterator]();\n  let item: IteratorResult<T>;\n  while (0 < count-- && !(item = it.next()).done) {\n    yield item.value;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { every } from './iter';\n\n/**\n * Iterate several iterables in lockstep.\n *\n * @param objects - The iterable objects of interest.\n *\n * @returns An iterator which yields successive tuples of values where\n *   each value is taken in turn from the provided iterables. It will\n *   be as long as the shortest provided iterable.\n *\n * #### Example\n * ```typescript\n * import { zip } from '@lumino/algorithm';\n *\n * let data1 = [1, 2, 3];\n * let data2 = [4, 5, 6];\n *\n * let stream = zip(data1, data2);\n *\n * Array.from(stream);  // [[1, 4], [2, 5], [3, 6]]\n * ```\n */\nexport function* zip<T>(...objects: Iterable<T>[]): IterableIterator<T[]> {\n  const iters = objects.map(obj => obj[Symbol.iterator]());\n  let tuple = iters.map(it => it.next());\n  for (; every(tuple, item => !item.done); tuple = iters.map(it => it.next())) {\n    yield tuple.map(item => item.value);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { IRetroable } from '@lumino/algorithm';\n\n/**\n * A generic doubly-linked list.\n */\nexport class LinkedList<T> implements Iterable<T>, IRetroable<T> {\n  /**\n   * Whether the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  get isEmpty(): boolean {\n    return this._size === 0;\n  }\n\n  /**\n   * The size of the list.\n   *\n   * #### Complexity\n   * `O(1)`\n   *\n   * #### Notes\n   * This is equivalent to `length`.\n   */\n  get size(): number {\n    return this._size;\n  }\n\n  /**\n   * The length of the list.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Notes\n   * This is equivalent to `size`.\n   *\n   * This property is deprecated.\n   */\n  get length(): number {\n    return this._size;\n  }\n\n  /**\n   * The first value in the list.\n   *\n   * This is `undefined` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  get first(): T | undefined {\n    return this._first ? this._first.value : undefined;\n  }\n\n  /**\n   * The last value in the list.\n   *\n   * This is `undefined` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  get last(): T | undefined {\n    return this._last ? this._last.value : undefined;\n  }\n\n  /**\n   * The first node in the list.\n   *\n   * This is `null` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  get firstNode(): LinkedList.INode<T> | null {\n    return this._first;\n  }\n\n  /**\n   * The last node in the list.\n   *\n   * This is `null` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  get lastNode(): LinkedList.INode<T> | null {\n    return this._last;\n  }\n\n  /**\n   * Create an iterator over the values in the list.\n   *\n   * @returns A new iterator starting with the first value.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  *[Symbol.iterator](): IterableIterator<T> {\n    let node = this._first;\n    while (node) {\n      yield node.value;\n      node = node.next;\n    }\n  }\n\n  /**\n   * Create a reverse iterator over the values in the list.\n   *\n   * @returns A new iterator starting with the last value.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  *retro(): IterableIterator<T> {\n    let node = this._last;\n    while (node) {\n      yield node.value;\n      node = node.prev;\n    }\n  }\n\n  /**\n   * Create an iterator over the nodes in the list.\n   *\n   * @returns A new iterator starting with the first node.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  *nodes(): IterableIterator<LinkedList.INode<T>> {\n    let node = this._first;\n    while (node) {\n      yield node;\n      node = node.next;\n    }\n  }\n\n  /**\n   * Create a reverse iterator over the nodes in the list.\n   *\n   * @returns A new iterator starting with the last node.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  *retroNodes(): IterableIterator<LinkedList.INode<T>> {\n    let node = this._last;\n    while (node) {\n      yield node;\n      node = node.prev;\n    }\n  }\n\n  /**\n   * Assign new values to the list, replacing all current values.\n   *\n   * @param values - The values to assign to the list.\n   *\n   * #### Complexity\n   * Linear.\n   */\n  assign(values: Iterable<T>): void {\n    this.clear();\n    for (const value of values) {\n      this.addLast(value);\n    }\n  }\n\n  /**\n   * Add a value to the end of the list.\n   *\n   * @param value - The value to add to the end of the list.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Notes\n   * This is equivalent to `addLast`.\n   */\n  push(value: T): void {\n    this.addLast(value);\n  }\n\n  /**\n   * Remove and return the value at the end of the list.\n   *\n   * @returns The removed value, or `undefined` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Notes\n   * This is equivalent to `removeLast`.\n   */\n  pop(): T | undefined {\n    return this.removeLast();\n  }\n\n  /**\n   * Add a value to the beginning of the list.\n   *\n   * @param value - The value to add to the beginning of the list.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Notes\n   * This is equivalent to `addFirst`.\n   */\n  shift(value: T): void {\n    this.addFirst(value);\n  }\n\n  /**\n   * Remove and return the value at the beginning of the list.\n   *\n   * @returns The removed value, or `undefined` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Notes\n   * This is equivalent to `removeFirst`.\n   */\n  unshift(): T | undefined {\n    return this.removeFirst();\n  }\n\n  /**\n   * Add a value to the beginning of the list.\n   *\n   * @param value - The value to add to the beginning of the list.\n   *\n   * @returns The list node which holds the value.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  addFirst(value: T): LinkedList.INode<T> {\n    let node = new Private.LinkedListNode<T>(this, value);\n    if (!this._first) {\n      this._first = node;\n      this._last = node;\n    } else {\n      node.next = this._first;\n      this._first.prev = node;\n      this._first = node;\n    }\n    this._size++;\n    return node;\n  }\n\n  /**\n   * Add a value to the end of the list.\n   *\n   * @param value - The value to add to the end of the list.\n   *\n   * @returns The list node which holds the value.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  addLast(value: T): LinkedList.INode<T> {\n    let node = new Private.LinkedListNode<T>(this, value);\n    if (!this._last) {\n      this._first = node;\n      this._last = node;\n    } else {\n      node.prev = this._last;\n      this._last.next = node;\n      this._last = node;\n    }\n    this._size++;\n    return node;\n  }\n\n  /**\n   * Insert a value before a specific node in the list.\n   *\n   * @param value - The value to insert before the reference node.\n   *\n   * @param ref - The reference node of interest. If this is `null`,\n   *   the value will be added to the beginning of the list.\n   *\n   * @returns The list node which holds the value.\n   *\n   * #### Notes\n   * The reference node must be owned by the list.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  insertBefore(value: T, ref: LinkedList.INode<T> | null): LinkedList.INode<T> {\n    if (!ref || ref === this._first) {\n      return this.addFirst(value);\n    }\n    if (!(ref instanceof Private.LinkedListNode) || ref.list !== this) {\n      throw new Error('Reference node is not owned by the list.');\n    }\n    let node = new Private.LinkedListNode<T>(this, value);\n    let _ref = ref as Private.LinkedListNode<T>;\n    let prev = _ref.prev!;\n    node.next = _ref;\n    node.prev = prev;\n    _ref.prev = node;\n    prev.next = node;\n    this._size++;\n    return node;\n  }\n\n  /**\n   * Insert a value after a specific node in the list.\n   *\n   * @param value - The value to insert after the reference node.\n   *\n   * @param ref - The reference node of interest. If this is `null`,\n   *   the value will be added to the end of the list.\n   *\n   * @returns The list node which holds the value.\n   *\n   * #### Notes\n   * The reference node must be owned by the list.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  insertAfter(value: T, ref: LinkedList.INode<T> | null): LinkedList.INode<T> {\n    if (!ref || ref === this._last) {\n      return this.addLast(value);\n    }\n    if (!(ref instanceof Private.LinkedListNode) || ref.list !== this) {\n      throw new Error('Reference node is not owned by the list.');\n    }\n    let node = new Private.LinkedListNode<T>(this, value);\n    let _ref = ref as Private.LinkedListNode<T>;\n    let next = _ref.next!;\n    node.next = next;\n    node.prev = _ref;\n    _ref.next = node;\n    next.prev = node;\n    this._size++;\n    return node;\n  }\n\n  /**\n   * Remove and return the value at the beginning of the list.\n   *\n   * @returns The removed value, or `undefined` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  removeFirst(): T | undefined {\n    let node = this._first;\n    if (!node) {\n      return undefined;\n    }\n    if (node === this._last) {\n      this._first = null;\n      this._last = null;\n    } else {\n      this._first = node.next;\n      this._first!.prev = null;\n    }\n    node.list = null;\n    node.next = null;\n    node.prev = null;\n    this._size--;\n    return node.value;\n  }\n\n  /**\n   * Remove and return the value at the end of the list.\n   *\n   * @returns The removed value, or `undefined` if the list is empty.\n   *\n   * #### Complexity\n   * Constant.\n   */\n  removeLast(): T | undefined {\n    let node = this._last;\n    if (!node) {\n      return undefined;\n    }\n    if (node === this._first) {\n      this._first = null;\n      this._last = null;\n    } else {\n      this._last = node.prev;\n      this._last!.next = null;\n    }\n    node.list = null;\n    node.next = null;\n    node.prev = null;\n    this._size--;\n    return node.value;\n  }\n\n  /**\n   * Remove a specific node from the list.\n   *\n   * @param node - The node to remove from the list.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Notes\n   * The node must be owned by the list.\n   */\n  removeNode(node: LinkedList.INode<T>): void {\n    if (!(node instanceof Private.LinkedListNode) || node.list !== this) {\n      throw new Error('Node is not owned by the list.');\n    }\n    let _node = node as Private.LinkedListNode<T>;\n    if (_node === this._first && _node === this._last) {\n      this._first = null;\n      this._last = null;\n    } else if (_node === this._first) {\n      this._first = _node.next;\n      this._first!.prev = null;\n    } else if (_node === this._last) {\n      this._last = _node.prev;\n      this._last!.next = null;\n    } else {\n      _node.next!.prev = _node.prev;\n      _node.prev!.next = _node.next;\n    }\n    _node.list = null;\n    _node.next = null;\n    _node.prev = null;\n    this._size--;\n  }\n\n  /**\n   * Remove all values from the list.\n   *\n   * #### Complexity\n   * Linear.\n   */\n  clear(): void {\n    let node = this._first;\n    while (node) {\n      let next = node.next;\n      node.list = null;\n      node.prev = null;\n      node.next = null;\n      node = next;\n    }\n    this._first = null;\n    this._last = null;\n    this._size = 0;\n  }\n\n  private _first: Private.LinkedListNode<T> | null = null;\n  private _last: Private.LinkedListNode<T> | null = null;\n  private _size = 0;\n}\n\n/**\n * The namespace for the `LinkedList` class statics.\n */\nexport namespace LinkedList {\n  /**\n   * An object which represents a node in a linked list.\n   *\n   * #### Notes\n   * User code will not create linked list nodes directly. Nodes\n   * are created automatically when values are added to a list.\n   */\n  export interface INode<T> {\n    /**\n     * The linked list which created and owns the node.\n     *\n     * This will be `null` when the node is removed from the list.\n     */\n    readonly list: LinkedList<T> | null;\n\n    /**\n     * The next node in the list.\n     *\n     * This will be `null` when the node is the last node in the list\n     * or when the node is removed from the list.\n     */\n    readonly next: INode<T> | null;\n\n    /**\n     * The previous node in the list.\n     *\n     * This will be `null` when the node is the first node in the list\n     * or when the node is removed from the list.\n     */\n    readonly prev: INode<T> | null;\n\n    /**\n     * The user value stored in the node.\n     */\n    readonly value: T;\n  }\n\n  /**\n   * Create a linked list from an iterable of values.\n   *\n   * @param values - The iterable object of interest.\n   *\n   * @returns A new linked list initialized with the given values.\n   *\n   * #### Complexity\n   * Linear.\n   */\n  export function from<T>(values: Iterable<T>): LinkedList<T> {\n    let list = new LinkedList<T>();\n    list.assign(values);\n    return list;\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * The internal linked list node implementation.\n   */\n  export class LinkedListNode<T> {\n    /**\n     * The linked list which created and owns the node.\n     */\n    list: LinkedList<T> | null = null;\n\n    /**\n     * The next node in the list.\n     */\n    next: LinkedListNode<T> | null = null;\n\n    /**\n     * The previous node in the list.\n     */\n    prev: LinkedListNode<T> | null = null;\n\n    /**\n     * The user value stored in the node.\n     */\n    readonly value: T;\n\n    /**\n     * Construct a new linked list node.\n     *\n     * @param list - The list which owns the node.\n     *\n     * @param value - The value for the link.\n     */\n    constructor(list: LinkedList<T>, value: T) {\n      this.list = list;\n      this.value = value;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * @packageDocumentation\n * @module messaging\n */\nimport { ArrayExt, every, retro, some } from '@lumino/algorithm';\n\nimport { LinkedList } from '@lumino/collections';\n\n/**\n * A message which can be delivered to a message handler.\n *\n * #### Notes\n * This class may be subclassed to create complex message types.\n */\nexport class Message {\n  /**\n   * Construct a new message.\n   *\n   * @param type - The type of the message.\n   */\n  constructor(type: string) {\n    this.type = type;\n  }\n\n  /**\n   * The type of the message.\n   *\n   * #### Notes\n   * The `type` of a message should be related directly to its actual\n   * runtime type. This means that `type` can and will be used to cast\n   * the message to the relevant derived `Message` subtype.\n   */\n  readonly type: string;\n\n  /**\n   * Test whether the message is conflatable.\n   *\n   * #### Notes\n   * Message conflation is an advanced topic. Most message types will\n   * not make use of this feature.\n   *\n   * If a conflatable message is posted to a handler while another\n   * conflatable message of the same `type` has already been posted\n   * to the handler, the `conflate()` method of the existing message\n   * will be invoked. If that method returns `true`, the new message\n   * will not be enqueued. This allows messages to be compressed, so\n   * that only a single instance of the message type is processed per\n   * cycle, no matter how many times messages of that type are posted.\n   *\n   * Custom message types may reimplement this property.\n   *\n   * The default implementation is always `false`.\n   */\n  get isConflatable(): boolean {\n    return false;\n  }\n\n  /**\n   * Conflate this message with another message of the same `type`.\n   *\n   * @param other - A conflatable message of the same `type`.\n   *\n   * @returns `true` if the message was successfully conflated, or\n   *   `false` otherwise.\n   *\n   * #### Notes\n   * Message conflation is an advanced topic. Most message types will\n   * not make use of this feature.\n   *\n   * This method is called automatically by the message loop when the\n   * given message is posted to the handler paired with this message.\n   * This message will already be enqueued and conflatable, and the\n   * given message will have the same `type` and also be conflatable.\n   *\n   * This method should merge the state of the other message into this\n   * message as needed so that when this message is finally delivered\n   * to the handler, it receives the most up-to-date information.\n   *\n   * If this method returns `true`, it signals that the other message\n   * was successfully conflated and that message will not be enqueued.\n   *\n   * If this method returns `false`, the other message will be enqueued\n   * for normal delivery.\n   *\n   * Custom message types may reimplement this method.\n   *\n   * The default implementation always returns `false`.\n   */\n  conflate(other: Message): boolean {\n    return false;\n  }\n}\n\n/**\n * A convenience message class which conflates automatically.\n *\n * #### Notes\n * Message conflation is an advanced topic. Most user code will not\n * make use of this class.\n *\n * This message class is useful for creating message instances which\n * should be conflated, but which have no state other than `type`.\n *\n * If conflation of stateful messages is required, a custom `Message`\n * subclass should be created.\n */\nexport class ConflatableMessage extends Message {\n  /**\n   * Test whether the message is conflatable.\n   *\n   * #### Notes\n   * This property is always `true`.\n   */\n  get isConflatable(): boolean {\n    return true;\n  }\n\n  /**\n   * Conflate this message with another message of the same `type`.\n   *\n   * #### Notes\n   * This method always returns `true`.\n   */\n  conflate(other: ConflatableMessage): boolean {\n    return true;\n  }\n}\n\n/**\n * An object which handles messages.\n *\n * #### Notes\n * A message handler is a simple way of defining a type which can act\n * upon on a large variety of external input without requiring a large\n * abstract API surface. This is particularly useful in the context of\n * widget frameworks where the number of distinct message types can be\n * unbounded.\n */\nexport interface IMessageHandler {\n  /**\n   * Process a message sent to the handler.\n   *\n   * @param msg - The message to be processed.\n   */\n  processMessage(msg: Message): void;\n}\n\n/**\n * An object which intercepts messages sent to a message handler.\n *\n * #### Notes\n * A message hook is useful for intercepting or spying on messages\n * sent to message handlers which were either not created by the\n * consumer, or when subclassing the handler is not feasible.\n *\n * If `messageHook` returns `false`, no other message hooks will be\n * invoked and the message will not be delivered to the handler.\n *\n * If all installed message hooks return `true`, the message will\n * be delivered to the handler for processing.\n *\n * **See also:** {@link MessageLoop.installMessageHook} and {@link MessageLoop.removeMessageHook}\n */\nexport interface IMessageHook {\n  /**\n   * Intercept a message sent to a message handler.\n   *\n   * @param handler - The target handler of the message.\n   *\n   * @param msg - The message to be sent to the handler.\n   *\n   * @returns `true` if the message should continue to be processed\n   *   as normal, or `false` if processing should cease immediately.\n   */\n  messageHook(handler: IMessageHandler, msg: Message): boolean;\n}\n\n/**\n * A type alias for message hook object or function.\n *\n * #### Notes\n * The signature and semantics of a message hook function are the same\n * as the `messageHook` method of {@link IMessageHook}.\n */\nexport type MessageHook =\n  | IMessageHook\n  | ((handler: IMessageHandler, msg: Message) => boolean);\n\n/**\n * The namespace for the global singleton message loop.\n */\nexport namespace MessageLoop {\n  /**\n   * A function that cancels the pending loop task; `null` if unavailable.\n   */\n  let pending: (() => void) | null = null;\n\n  /**\n   * Schedules a function for invocation as soon as possible asynchronously.\n   *\n   * @param fn The function to invoke when called back.\n   *\n   * @returns An anonymous function that will unschedule invocation if possible.\n   */\n  const schedule = (\n    resolved =>\n    (fn: () => unknown): (() => void) => {\n      let rejected = false;\n      resolved.then(() => !rejected && fn());\n      return () => {\n        rejected = true;\n      };\n    }\n  )(Promise.resolve());\n\n  /**\n   * Send a message to a message handler to process immediately.\n   *\n   * @param handler - The handler which should process the message.\n   *\n   * @param msg - The message to deliver to the handler.\n   *\n   * #### Notes\n   * The message will first be sent through any installed message hooks\n   * for the handler. If the message passes all hooks, it will then be\n   * delivered to the `processMessage` method of the handler.\n   *\n   * The message will not be conflated with pending posted messages.\n   *\n   * Exceptions in hooks and handlers will be caught and logged.\n   */\n  export function sendMessage(handler: IMessageHandler, msg: Message): void {\n    // Lookup the message hooks for the handler.\n    let hooks = messageHooks.get(handler);\n\n    // Handle the common case of no installed hooks.\n    if (!hooks || hooks.length === 0) {\n      invokeHandler(handler, msg);\n      return;\n    }\n\n    // Invoke the message hooks starting with the newest first.\n    let passed = every(retro(hooks), hook => {\n      return hook ? invokeHook(hook, handler, msg) : true;\n    });\n\n    // Invoke the handler if the message passes all hooks.\n    if (passed) {\n      invokeHandler(handler, msg);\n    }\n  }\n\n  /**\n   * Post a message to a message handler to process in the future.\n   *\n   * @param handler - The handler which should process the message.\n   *\n   * @param msg - The message to post to the handler.\n   *\n   * #### Notes\n   * The message will be conflated with the pending posted messages for\n   * the handler, if possible. If the message is not conflated, it will\n   * be queued for normal delivery on the next cycle of the event loop.\n   *\n   * Exceptions in hooks and handlers will be caught and logged.\n   */\n  export function postMessage(handler: IMessageHandler, msg: Message): void {\n    // Handle the common case of a non-conflatable message.\n    if (!msg.isConflatable) {\n      enqueueMessage(handler, msg);\n      return;\n    }\n\n    // Conflate the message with an existing message if possible.\n    let conflated = some(messageQueue, posted => {\n      if (posted.handler !== handler) {\n        return false;\n      }\n      if (!posted.msg) {\n        return false;\n      }\n      if (posted.msg.type !== msg.type) {\n        return false;\n      }\n      if (!posted.msg.isConflatable) {\n        return false;\n      }\n      return posted.msg.conflate(msg);\n    });\n\n    // Enqueue the message if it was not conflated.\n    if (!conflated) {\n      enqueueMessage(handler, msg);\n    }\n  }\n\n  /**\n   * Install a message hook for a message handler.\n   *\n   * @param handler - The message handler of interest.\n   *\n   * @param hook - The message hook to install.\n   *\n   * #### Notes\n   * A message hook is invoked before a message is delivered to the\n   * handler. If the hook returns `false`, no other hooks will be\n   * invoked and the message will not be delivered to the handler.\n   *\n   * The most recently installed message hook is executed first.\n   *\n   * If the hook is already installed, this is a no-op.\n   */\n  export function installMessageHook(\n    handler: IMessageHandler,\n    hook: MessageHook\n  ): void {\n    // Look up the hooks for the handler.\n    let hooks = messageHooks.get(handler);\n\n    // Bail early if the hook is already installed.\n    if (hooks && hooks.indexOf(hook) !== -1) {\n      return;\n    }\n\n    // Add the hook to the end, so it will be the first to execute.\n    if (!hooks) {\n      messageHooks.set(handler, [hook]);\n    } else {\n      hooks.push(hook);\n    }\n  }\n\n  /**\n   * Remove an installed message hook for a message handler.\n   *\n   * @param handler - The message handler of interest.\n   *\n   * @param hook - The message hook to remove.\n   *\n   * #### Notes\n   * It is safe to call this function while the hook is executing.\n   *\n   * If the hook is not installed, this is a no-op.\n   */\n  export function removeMessageHook(\n    handler: IMessageHandler,\n    hook: MessageHook\n  ): void {\n    // Lookup the hooks for the handler.\n    let hooks = messageHooks.get(handler);\n\n    // Bail early if the hooks do not exist.\n    if (!hooks) {\n      return;\n    }\n\n    // Lookup the index of the hook and bail if not found.\n    let i = hooks.indexOf(hook);\n    if (i === -1) {\n      return;\n    }\n\n    // Clear the hook and schedule a cleanup of the array.\n    hooks[i] = null;\n    scheduleCleanup(hooks);\n  }\n\n  /**\n   * Clear all message data associated with a message handler.\n   *\n   * @param handler - The message handler of interest.\n   *\n   * #### Notes\n   * This will clear all posted messages and hooks for the handler.\n   */\n  export function clearData(handler: IMessageHandler): void {\n    // Lookup the hooks for the handler.\n    let hooks = messageHooks.get(handler);\n\n    // Clear all messsage hooks for the handler.\n    if (hooks && hooks.length > 0) {\n      ArrayExt.fill(hooks, null);\n      scheduleCleanup(hooks);\n    }\n\n    // Clear all posted messages for the handler.\n    for (const posted of messageQueue) {\n      if (posted.handler === handler) {\n        posted.handler = null;\n        posted.msg = null;\n      }\n    }\n  }\n\n  /**\n   * Process the pending posted messages in the queue immediately.\n   *\n   * #### Notes\n   * This function is useful when posted messages must be processed immediately.\n   *\n   * This function should normally not be needed, but it may be\n   * required to work around certain browser idiosyncrasies.\n   *\n   * Recursing into this function is a no-op.\n   */\n  export function flush(): void {\n    // Bail if recursion is detected or if there is no pending task.\n    if (flushGuard || pending === null) {\n      return;\n    }\n\n    // Unschedule the pending loop task.\n    pending();\n    pending = null;\n\n    // Run the message loop within the recursion guard.\n    flushGuard = true;\n    runMessageLoop();\n    flushGuard = false;\n  }\n\n  /**\n   * A type alias for the exception handler function.\n   */\n  export type ExceptionHandler = (err: Error) => void;\n\n  /**\n   * Get the message loop exception handler.\n   *\n   * @returns The current exception handler.\n   *\n   * #### Notes\n   * The default exception handler is `console.error`.\n   */\n  export function getExceptionHandler(): ExceptionHandler {\n    return exceptionHandler;\n  }\n\n  /**\n   * Set the message loop exception handler.\n   *\n   * @param handler - The function to use as the exception handler.\n   *\n   * @returns The old exception handler.\n   *\n   * #### Notes\n   * The exception handler is invoked when a message handler or a\n   * message hook throws an exception.\n   */\n  export function setExceptionHandler(\n    handler: ExceptionHandler\n  ): ExceptionHandler {\n    let old = exceptionHandler;\n    exceptionHandler = handler;\n    return old;\n  }\n\n  /**\n   * A type alias for a posted message pair.\n   */\n  type PostedMessage = { handler: IMessageHandler | null; msg: Message | null };\n\n  /**\n   * The queue of posted message pairs.\n   */\n  const messageQueue = new LinkedList<PostedMessage>();\n\n  /**\n   * A mapping of handler to array of installed message hooks.\n   */\n  const messageHooks = new WeakMap<\n    IMessageHandler,\n    Array<MessageHook | null>\n  >();\n\n  /**\n   * A set of message hook arrays which are pending cleanup.\n   */\n  const dirtySet = new Set<Array<MessageHook | null>>();\n\n  /**\n   * The message loop exception handler.\n   */\n  let exceptionHandler: ExceptionHandler = (err: Error) => {\n    console.error(err);\n  };\n\n  /**\n   * A guard flag to prevent flush recursion.\n   */\n  let flushGuard = false;\n\n  /**\n   * Invoke a message hook with the specified handler and message.\n   *\n   * Returns the result of the hook, or `true` if the hook throws.\n   *\n   * Exceptions in the hook will be caught and logged.\n   */\n  function invokeHook(\n    hook: MessageHook,\n    handler: IMessageHandler,\n    msg: Message\n  ): boolean {\n    let result = true;\n    try {\n      if (typeof hook === 'function') {\n        result = hook(handler, msg);\n      } else {\n        result = hook.messageHook(handler, msg);\n      }\n    } catch (err) {\n      exceptionHandler(err);\n    }\n    return result;\n  }\n\n  /**\n   * Invoke a message handler with the specified message.\n   *\n   * Exceptions in the handler will be caught and logged.\n   */\n  function invokeHandler(handler: IMessageHandler, msg: Message): void {\n    try {\n      handler.processMessage(msg);\n    } catch (err) {\n      exceptionHandler(err);\n    }\n  }\n\n  /**\n   * Add a message to the end of the message queue.\n   *\n   * This will automatically schedule a run of the message loop.\n   */\n  function enqueueMessage(handler: IMessageHandler, msg: Message): void {\n    // Add the posted message to the queue.\n    messageQueue.addLast({ handler, msg });\n\n    // Bail if a loop task is already pending.\n    if (pending !== null) {\n      return;\n    }\n\n    // Schedule a run of the message loop.\n    pending = schedule(runMessageLoop);\n  }\n\n  /**\n   * Run an iteration of the message loop.\n   *\n   * This will process all pending messages in the queue. If a message\n   * is added to the queue while the message loop is running, it will\n   * be processed on the next cycle of the loop.\n   */\n  function runMessageLoop(): void {\n    // Clear the task so the next loop can be scheduled.\n    pending = null;\n\n    // If the message queue is empty, there is nothing else to do.\n    if (messageQueue.isEmpty) {\n      return;\n    }\n\n    // Add a sentinel value to the end of the queue. The queue will\n    // only be processed up to the sentinel. Messages posted during\n    // this cycle will execute on the next cycle.\n    let sentinel: PostedMessage = { handler: null, msg: null };\n    messageQueue.addLast(sentinel);\n\n    // Enter the message loop.\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      // Remove the first posted message in the queue.\n      let posted = messageQueue.removeFirst()!;\n\n      // If the value is the sentinel, exit the loop.\n      if (posted === sentinel) {\n        return;\n      }\n\n      // Dispatch the message if it has not been cleared.\n      if (posted.handler && posted.msg) {\n        sendMessage(posted.handler, posted.msg);\n      }\n    }\n  }\n\n  /**\n   * Schedule a cleanup of a message hooks array.\n   *\n   * This will add the array to the dirty set and schedule a deferred\n   * cleanup of the array contents. On cleanup, any `null` hook will\n   * be removed from the array.\n   */\n  function scheduleCleanup(hooks: Array<MessageHook | null>): void {\n    if (dirtySet.size === 0) {\n      schedule(cleanupDirtySet);\n    }\n    dirtySet.add(hooks);\n  }\n\n  /**\n   * Cleanup the message hook arrays in the dirty set.\n   *\n   * This function should only be invoked asynchronously, when the\n   * stack frame is guaranteed to not be on the path of user code.\n   */\n  function cleanupDirtySet(): void {\n    dirtySet.forEach(cleanupHooks);\n    dirtySet.clear();\n  }\n\n  /**\n   * Cleanup the dirty hooks in a message hooks array.\n   *\n   * This will remove any `null` hook from the array.\n   *\n   * This function should only be invoked asynchronously, when the\n   * stack frame is guaranteed to not be on the path of user code.\n   */\n  function cleanupHooks(hooks: Array<MessageHook | null>): void {\n    ArrayExt.removeAllWhere(hooks, isNull);\n  }\n\n  /**\n   * Test whether a value is `null`.\n   */\n  function isNull<T>(value: T | null): boolean {\n    return value === null;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport {\n  JSONExt,\n  JSONObject,\n  PartialJSONObject,\n  ReadonlyPartialJSONValue\n} from '@lumino/coreutils';\nimport { Message } from '@lumino/messaging';\nimport { IObservableMap, ObservableMap } from './observablemap';\n\n/**\n * An observable JSON value.\n */\nexport interface IObservableJSON\n  extends IObservableMap<ReadonlyPartialJSONValue | undefined> {\n  /**\n   * Serialize the model to JSON.\n   */\n  toJSON(): PartialJSONObject;\n}\n\n/**\n * The namespace for IObservableJSON related interfaces.\n */\nexport namespace IObservableJSON {\n  /**\n   * A type alias for observable JSON changed args.\n   */\n  export type IChangedArgs =\n    IObservableMap.IChangedArgs<ReadonlyPartialJSONValue>;\n}\n\n/**\n * A concrete Observable map for JSON data.\n */\nexport class ObservableJSON extends ObservableMap<ReadonlyPartialJSONValue> {\n  /**\n   * Construct a new observable JSON object.\n   */\n  constructor(options: ObservableJSON.IOptions = {}) {\n    super({\n      itemCmp: JSONExt.deepEqual,\n      values: options.values\n    });\n  }\n\n  /**\n   * Serialize the model to JSON.\n   */\n  toJSON(): PartialJSONObject {\n    const out: PartialJSONObject = Object.create(null);\n    const keys = this.keys();\n\n    for (const key of keys) {\n      const value = this.get(key);\n\n      if (value !== undefined) {\n        out[key] = JSONExt.deepCopy(value) as PartialJSONObject;\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * The namespace for ObservableJSON static data.\n */\nexport namespace ObservableJSON {\n  /**\n   * The options use to initialize an observable JSON object.\n   */\n  export interface IOptions {\n    /**\n     * The optional initial value for the object.\n     */\n    values?: JSONObject;\n  }\n\n  /**\n   * An observable JSON change message.\n   */\n  export class ChangeMessage extends Message {\n    /**\n     * Create a new metadata changed message.\n     */\n    constructor(type: string, args: IObservableJSON.IChangedArgs) {\n      super(type);\n      this.args = args;\n    }\n\n    /**\n     * The arguments of the change.\n     */\n    readonly args: IObservableJSON.IChangedArgs;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { IDisposable } from '@lumino/disposable';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { IObservable } from './modeldb';\n\n/**\n * A string which can be observed for changes.\n */\nexport interface IObservableString extends IDisposable, IObservable {\n  /**\n   * The type of the Observable.\n   */\n  type: 'String';\n\n  /**\n   * A signal emitted when the string has changed.\n   */\n  readonly changed: ISignal<this, IObservableString.IChangedArgs>;\n\n  /**\n   * The value of the string.\n   */\n  text: string;\n\n  /**\n   * Insert a substring.\n   *\n   * @param index - The starting index.\n   *\n   * @param text - The substring to insert.\n   */\n  insert(index: number, text: string): void;\n\n  /**\n   * Remove a substring.\n   *\n   * @param start - The starting index.\n   *\n   * @param end - The ending index.\n   */\n  remove(start: number, end: number): void;\n\n  /**\n   * Set the ObservableString to an empty string.\n   */\n  clear(): void;\n\n  /**\n   * Dispose of the resources held by the string.\n   */\n  dispose(): void;\n}\n\n/**\n * The namespace for `IObservableString` associate interfaces.\n */\nexport namespace IObservableString {\n  /**\n   * The change types which occur on an observable string.\n   */\n  export type ChangeType =\n    /**\n     * Text was inserted.\n     */\n    | 'insert'\n\n    /**\n     * Text was removed.\n     */\n    | 'remove'\n\n    /**\n     * Text was set.\n     */\n    | 'set';\n\n  /**\n   * The changed args object which is emitted by an observable string.\n   */\n  export interface IChangedArgs {\n    /**\n     * The type of change undergone by the list.\n     */\n    type: ChangeType;\n\n    /**\n     * The starting index of the change.\n     */\n    start: number;\n\n    /**\n     * The end index of the change.\n     */\n    end: number;\n\n    /**\n     * The value of the change.\n     *\n     * ### Notes\n     * If `ChangeType` is `set`, then\n     * this is the new value of the string.\n     *\n     * If `ChangeType` is `insert` this is\n     * the value of the inserted string.\n     *\n     * If `ChangeType` is remove this is the\n     * value of the removed substring.\n     */\n    value: string;\n  }\n}\n\n/**\n * A concrete implementation of [[IObservableString]]\n */\nexport class ObservableString implements IObservableString {\n  /**\n   * Construct a new observable string.\n   */\n  constructor(initialText: string = '') {\n    this._text = initialText;\n  }\n\n  /**\n   * The type of the Observable.\n   */\n  get type(): 'String' {\n    return 'String';\n  }\n\n  /**\n   * A signal emitted when the string has changed.\n   */\n  get changed(): ISignal<this, IObservableString.IChangedArgs> {\n    return this._changed;\n  }\n\n  /**\n   * Set the value of the string.\n   */\n  set text(value: string) {\n    if (value.length === this._text.length && value === this._text) {\n      return;\n    }\n    this._text = value;\n    this._changed.emit({\n      type: 'set',\n      start: 0,\n      end: value.length,\n      value: value\n    });\n  }\n\n  /**\n   * Get the value of the string.\n   */\n  get text(): string {\n    return this._text;\n  }\n\n  /**\n   * Insert a substring.\n   *\n   * @param index - The starting index.\n   *\n   * @param text - The substring to insert.\n   */\n  insert(index: number, text: string): void {\n    this._text = this._text.slice(0, index) + text + this._text.slice(index);\n    this._changed.emit({\n      type: 'insert',\n      start: index,\n      end: index + text.length,\n      value: text\n    });\n  }\n\n  /**\n   * Remove a substring.\n   *\n   * @param start - The starting index.\n   *\n   * @param end - The ending index.\n   */\n  remove(start: number, end: number): void {\n    const oldValue: string = this._text.slice(start, end);\n    this._text = this._text.slice(0, start) + this._text.slice(end);\n    this._changed.emit({\n      type: 'remove',\n      start: start,\n      end: end,\n      value: oldValue\n    });\n  }\n\n  /**\n   * Set the ObservableString to an empty string.\n   */\n  clear(): void {\n    this.text = '';\n  }\n\n  /**\n   * Test whether the string has been disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * Dispose of the resources held by the string.\n   */\n  dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    Signal.clearData(this);\n    this.clear();\n  }\n\n  private _text = '';\n  private _isDisposed: boolean = false;\n  private _changed = new Signal<this, IObservableString.IChangedArgs>(this);\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { ArrayExt } from '@lumino/algorithm';\nimport { IDisposable } from '@lumino/disposable';\nimport { ISignal, Signal } from '@lumino/signaling';\n\n/**\n * A list which can be observed for changes.\n */\nexport interface IObservableList<T> extends IDisposable, Iterable<T> {\n  /**\n   * A signal emitted when the list has changed.\n   */\n  readonly changed: ISignal<this, IObservableList.IChangedArgs<T>>;\n\n  /**\n   * The type of this object.\n   */\n  readonly type: 'List';\n\n  /**\n   * The length of the list.\n   *\n   * #### Notes\n   * This is a read-only property.\n   */\n  length: number;\n\n  /**\n   * Remove all values from the list.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Iterator Validity\n   * All current iterators are invalidated.\n   */\n  clear(): void;\n\n  /**\n   * Get the value at the specified index.\n   *\n   * @param index - The positive integer index of interest.\n   *\n   * @returns The value at the specified index.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral or out of range.\n   */\n  get(index: number): T;\n\n  /**\n   * Insert a value into the list at a specific index.\n   *\n   * @param index - The index at which to insert the value.\n   *\n   * @param value - The value to set at the specified index.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Iterator Validity\n   * No changes.\n   *\n   * #### Notes\n   * The `index` will be clamped to the bounds of the list.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   */\n  insert(index: number, value: T): void;\n\n  /**\n   * Insert a set of items into the list at the specified index.\n   *\n   * @param index - The index at which to insert the values.\n   *\n   * @param values - The values to insert at the specified index.\n   *\n   * #### Complexity.\n   * Linear.\n   *\n   * #### Iterator Validity\n   * No changes.\n   *\n   * #### Notes\n   * The `index` will be clamped to the bounds of the list.\n   *\n   * #### Undefined Behavior.\n   * An `index` which is non-integral.\n   */\n  insertAll(index: number, values: Iterable<T>): void;\n\n  /**\n   * Move a value from one index to another.\n   *\n   * @param fromIndex - The index of the element to move.\n   *\n   * @param toIndex - The index to move the element to.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Iterator Validity\n   * Iterators pointing at the lesser of the `fromIndex` and the `toIndex`\n   * and beyond are invalidated.\n   *\n   * #### Undefined Behavior\n   * A `fromIndex` or a `toIndex` which is non-integral.\n   */\n  move(fromIndex: number, toIndex: number): void;\n\n  /**\n   * Add a value to the back of the list.\n   *\n   * @param value - The value to add to the back of the list.\n   *\n   * @returns The new length of the list.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Iterator Validity\n   * No changes.\n   */\n  push(value: T): number;\n\n  /**\n   * Push a set of values to the back of the list.\n   *\n   * @param values - An iterable set of values to add.\n   *\n   * @returns The new length of the list.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Iterator Validity\n   * No changes.\n   */\n  pushAll(values: Iterable<T>): number;\n\n  /**\n   * Remove and return the value at a specific index.\n   *\n   * @param index - The index of the value of interest.\n   *\n   * @returns The value at the specified index, or `undefined` if the\n   *   index is out of range.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Iterator Validity\n   * Iterators pointing at the removed value and beyond are invalidated.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   */\n  remove(index: number): T | undefined;\n\n  /**\n   * Remove a range of items from the list.\n   *\n   * @param startIndex - The start index of the range to remove (inclusive).\n   *\n   * @param endIndex - The end index of the range to remove (exclusive).\n   *\n   * @returns The new length of the list.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Iterator Validity\n   * Iterators pointing to the first removed value and beyond are invalid.\n   *\n   * #### Undefined Behavior\n   * A `startIndex` or `endIndex` which is non-integral.\n   */\n  removeRange(startIndex: number, endIndex: number): number;\n\n  /**\n   * Remove the first occurrence of a value from the list.\n   *\n   * @param value - The value of interest.\n   *\n   * @returns The index of the removed value, or `-1` if the value\n   *   is not contained in the list.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Iterator Validity\n   * Iterators pointing at the removed value and beyond are invalidated.\n   */\n  removeValue(value: T): number;\n\n  /**\n   * Set the value at the specified index.\n   *\n   * @param index - The positive integer index of interest.\n   *\n   * @param value - The value to set at the specified index.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Iterator Validity\n   * No changes.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral or out of range.\n   */\n  set(index: number, value: T): void;\n}\n\n/**\n * The namespace for IObservableList related interfaces.\n */\nexport namespace IObservableList {\n  /**\n   * The change types which occur on an observable list.\n   */\n  export type ChangeType =\n    /**\n     * Item(s) were added to the list.\n     */\n    | 'add'\n\n    /**\n     * An item was moved within the list.\n     */\n    | 'move'\n\n    /**\n     * Item(s) were removed from the list.\n     */\n    | 'remove'\n\n    /**\n     * An item was set in the list.\n     */\n    | 'set';\n\n  /**\n   * The changed args object which is emitted by an observable list.\n   */\n  export interface IChangedArgs<T> {\n    /**\n     * The type of change undergone by the vector.\n     */\n    type: ChangeType;\n\n    /**\n     * The new index associated with the change.\n     */\n    newIndex: number;\n\n    /**\n     * The new values associated with the change.\n     *\n     * #### Notes\n     * The values will be contiguous starting at the `newIndex`.\n     */\n    newValues: T[];\n\n    /**\n     * The old index associated with the change.\n     */\n    oldIndex: number;\n\n    /**\n     * The old values associated with the change.\n     *\n     * #### Notes\n     * The values will be contiguous starting at the `oldIndex`.\n     */\n    oldValues: T[];\n  }\n}\n\n/**\n * A concrete implementation of [[IObservableList]].\n */\nexport class ObservableList<T> implements IObservableList<T> {\n  /**\n   * Construct a new observable map.\n   */\n  constructor(options: ObservableList.IOptions<T> = {}) {\n    if (options.values) {\n      for (const value of options.values) {\n        this._array.push(value);\n      }\n    }\n    this._itemCmp = options.itemCmp || Private.itemCmp;\n  }\n\n  /**\n   * The type of this object.\n   */\n  get type(): 'List' {\n    return 'List';\n  }\n\n  /**\n   * A signal emitted when the list has changed.\n   */\n  get changed(): ISignal<this, IObservableList.IChangedArgs<T>> {\n    return this._changed;\n  }\n\n  /**\n   * The length of the list.\n   */\n  get length(): number {\n    return this._array.length;\n  }\n\n  /**\n   * Test whether the list has been disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * Dispose of the resources held by the list.\n   */\n  dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    Signal.clearData(this);\n    this.clear();\n  }\n\n  /**\n   * Create an iterator over the values in the list.\n   *\n   * @returns A new iterator starting at the front of the list.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Iterator Validity\n   * No changes.\n   */\n  [Symbol.iterator](): IterableIterator<T> {\n    return this._array[Symbol.iterator]();\n  }\n\n  /**\n   * Get the value at the specified index.\n   *\n   * @param index - The positive integer index of interest.\n   *\n   * @returns The value at the specified index.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral or out of range.\n   */\n  get(index: number): T {\n    return this._array[index];\n  }\n\n  /**\n   * Set the value at the specified index.\n   *\n   * @param index - The positive integer index of interest.\n   *\n   * @param value - The value to set at the specified index.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Iterator Validity\n   * No changes.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral or out of range.\n   */\n  set(index: number, value: T): void {\n    const oldValue = this._array[index];\n    if (value === undefined) {\n      throw new Error('Cannot set an undefined item');\n    }\n    // Bail if the value does not change.\n    const itemCmp = this._itemCmp;\n    if (itemCmp(oldValue, value)) {\n      return;\n    }\n    this._array[index] = value;\n    this._changed.emit({\n      type: 'set',\n      oldIndex: index,\n      newIndex: index,\n      oldValues: [oldValue],\n      newValues: [value]\n    });\n  }\n\n  /**\n   * Add a value to the end of the list.\n   *\n   * @param value - The value to add to the end of the list.\n   *\n   * @returns The new length of the list.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Notes\n   * By convention, the oldIndex is set to -1 to indicate\n   * an push operation.\n   *\n   * #### Iterator Validity\n   * No changes.\n   */\n  push(value: T): number {\n    const num = this._array.push(value);\n    this._changed.emit({\n      type: 'add',\n      oldIndex: -1,\n      newIndex: this.length - 1,\n      oldValues: [],\n      newValues: [value]\n    });\n    return num;\n  }\n\n  /**\n   * Insert a value into the list at a specific index.\n   *\n   * @param index - The index at which to insert the value.\n   *\n   * @param value - The value to set at the specified index.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Iterator Validity\n   * No changes.\n   *\n   * #### Notes\n   * The `index` will be clamped to the bounds of the list.\n   *\n   * By convention, the oldIndex is set to -2 to indicate\n   * an insert operation.\n   *\n   * The value -2 as oldIndex can be used to distinguish from the push\n   * method which will use a value -1.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   */\n  insert(index: number, value: T): void {\n    if (index === this._array.length) {\n      this._array.push(value);\n    } else {\n      ArrayExt.insert(this._array, index, value);\n    }\n    this._changed.emit({\n      type: 'add',\n      oldIndex: -2,\n      newIndex: index,\n      oldValues: [],\n      newValues: [value]\n    });\n  }\n\n  /**\n   * Remove the first occurrence of a value from the list.\n   *\n   * @param value - The value of interest.\n   *\n   * @returns The index of the removed value, or `-1` if the value\n   *   is not contained in the list.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Iterator Validity\n   * Iterators pointing at the removed value and beyond are invalidated.\n   */\n  removeValue(value: T): number {\n    const itemCmp = this._itemCmp;\n    const index = ArrayExt.findFirstIndex(this._array, item => {\n      return itemCmp(item, value);\n    });\n    this.remove(index);\n    return index;\n  }\n\n  /**\n   * Remove and return the value at a specific index.\n   *\n   * @param index - The index of the value of interest.\n   *\n   * @returns The value at the specified index, or `undefined` if the\n   *   index is out of range.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Iterator Validity\n   * Iterators pointing at the removed value and beyond are invalidated.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   */\n  remove(index: number): T | undefined {\n    const value = ArrayExt.removeAt(this._array, index);\n    if (value === undefined) {\n      return;\n    }\n    this._changed.emit({\n      type: 'remove',\n      oldIndex: index,\n      newIndex: -1,\n      newValues: [],\n      oldValues: [value]\n    });\n    return value;\n  }\n\n  /**\n   * Remove all values from the list.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Iterator Validity\n   * All current iterators are invalidated.\n   */\n  clear(): void {\n    const copy = this._array.slice();\n    this._array.length = 0;\n    this._changed.emit({\n      type: 'remove',\n      oldIndex: 0,\n      newIndex: 0,\n      newValues: [],\n      oldValues: copy\n    });\n  }\n\n  /**\n   * Move a value from one index to another.\n   *\n   * @param fromIndex - The index of the element to move.\n   *\n   * @param toIndex - The index to move the element to.\n   *\n   * #### Complexity\n   * Constant.\n   *\n   * #### Iterator Validity\n   * Iterators pointing at the lesser of the `fromIndex` and the `toIndex`\n   * and beyond are invalidated.\n   *\n   * #### Undefined Behavior\n   * A `fromIndex` or a `toIndex` which is non-integral.\n   */\n  move(fromIndex: number, toIndex: number): void {\n    if (this.length <= 1 || fromIndex === toIndex) {\n      return;\n    }\n    const values = [this._array[fromIndex]];\n    ArrayExt.move(this._array, fromIndex, toIndex);\n    this._changed.emit({\n      type: 'move',\n      oldIndex: fromIndex,\n      newIndex: toIndex,\n      oldValues: values,\n      newValues: values\n    });\n  }\n\n  /**\n   * Push a set of values to the back of the list.\n   *\n   * @param values - An iterable set of values to add.\n   *\n   * @returns The new length of the list.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Notes\n   * By convention, the oldIndex is set to -1 to indicate\n   * an push operation.\n   *\n   * #### Iterator Validity\n   * No changes.\n   */\n  pushAll(values: Iterable<T>): number {\n    const newIndex = this.length;\n    for (const value of values) {\n      this._array.push(value);\n    }\n    this._changed.emit({\n      type: 'add',\n      oldIndex: -1,\n      newIndex,\n      oldValues: [],\n      newValues: Array.from(values)\n    });\n    return this.length;\n  }\n\n  /**\n   * Insert a set of items into the list at the specified index.\n   *\n   * @param index - The index at which to insert the values.\n   *\n   * @param values - The values to insert at the specified index.\n   *\n   * #### Complexity.\n   * Linear.\n   *\n   * #### Iterator Validity\n   * No changes.\n   *\n   * #### Notes\n   * The `index` will be clamped to the bounds of the list.\n   * By convention, the oldIndex is set to -2 to indicate\n   * an insert operation.\n   *\n   * #### Undefined Behavior.\n   * An `index` which is non-integral.\n   */\n  insertAll(index: number, values: Iterable<T>): void {\n    const newIndex = index;\n    for (const value of values) {\n      ArrayExt.insert(this._array, index++, value);\n    }\n    this._changed.emit({\n      type: 'add',\n      oldIndex: -2,\n      newIndex,\n      oldValues: [],\n      newValues: Array.from(values)\n    });\n  }\n\n  /**\n   * Remove a range of items from the list.\n   *\n   * @param startIndex - The start index of the range to remove (inclusive).\n   *\n   * @param endIndex - The end index of the range to remove (exclusive).\n   *\n   * @returns The new length of the list.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Iterator Validity\n   * Iterators pointing to the first removed value and beyond are invalid.\n   *\n   * #### Undefined Behavior\n   * A `startIndex` or `endIndex` which is non-integral.\n   */\n  removeRange(startIndex: number, endIndex: number): number {\n    const oldValues = this._array.slice(startIndex, endIndex);\n    for (let i = startIndex; i < endIndex; i++) {\n      ArrayExt.removeAt(this._array, startIndex);\n    }\n    this._changed.emit({\n      type: 'remove',\n      oldIndex: startIndex,\n      newIndex: -1,\n      oldValues,\n      newValues: []\n    });\n    return this.length;\n  }\n\n  private _array: Array<T> = [];\n  private _isDisposed = false;\n  private _itemCmp: (first: T, second: T) => boolean;\n  private _changed = new Signal<this, IObservableList.IChangedArgs<T>>(this);\n}\n\n/**\n * The namespace for `ObservableList` class statics.\n */\nexport namespace ObservableList {\n  /**\n   * The options used to initialize an observable map.\n   */\n  export interface IOptions<T> {\n    /**\n     * An optional initial set of values.\n     */\n    values?: Iterable<T>;\n\n    /**\n     * The item comparison function for change detection on `set`.\n     *\n     * If not given, strict `===` equality will be used.\n     */\n    itemCmp?: (first: T, second: T) => boolean;\n  }\n}\n\n/**\n * The namespace for module private data.\n */\nnamespace Private {\n  /**\n   * The default strict equality item cmp.\n   */\n  export function itemCmp<T>(first: T, second: T): boolean {\n    return first === second;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { JSONValue } from '@lumino/coreutils';\nimport { IObservableList, ObservableList } from './observablelist';\n\n/**\n * An object which knows how to serialize and\n * deserialize the type T.\n */\nexport interface ISerializer<T> {\n  /**\n   * Convert the object to JSON.\n   */\n  toJSON(value: T): JSONValue;\n\n  /**\n   * Deserialize the object from JSON.\n   */\n  fromJSON(value: JSONValue): T;\n}\n\n/**\n * An observable list that supports undo/redo.\n */\nexport interface IObservableUndoableList<T> extends IObservableList<T> {\n  /**\n   * Whether the object can redo changes.\n   */\n  readonly canRedo: boolean;\n\n  /**\n   * Whether the object can undo changes.\n   */\n  readonly canUndo: boolean;\n\n  /**\n   * Begin a compound operation.\n   *\n   * @param isUndoAble - Whether the operation is undoable.\n   *   The default is `false`.\n   */\n  beginCompoundOperation(isUndoAble?: boolean): void;\n\n  /**\n   * End a compound operation.\n   */\n  endCompoundOperation(): void;\n\n  /**\n   * Undo an operation.\n   */\n  undo(): void;\n\n  /**\n   * Redo an operation.\n   */\n  redo(): void;\n\n  /**\n   * Clear the change stack.\n   */\n  clearUndo(): void;\n}\n\n/**\n * A concrete implementation of an observable undoable list.\n */\nexport class ObservableUndoableList<T>\n  extends ObservableList<T>\n  implements IObservableUndoableList<T>\n{\n  /**\n   * Construct a new undoable observable list.\n   */\n  constructor(serializer: ISerializer<T>) {\n    super();\n    this._serializer = serializer;\n    this.changed.connect(this._onListChanged, this);\n  }\n\n  /**\n   * Whether the object can redo changes.\n   */\n  get canRedo(): boolean {\n    return this._index < this._stack.length - 1;\n  }\n\n  /**\n   * Whether the object can undo changes.\n   */\n  get canUndo(): boolean {\n    return this._index >= 0;\n  }\n\n  /**\n   * Begin a compound operation.\n   *\n   * @param isUndoAble - Whether the operation is undoable.\n   *   The default is `true`.\n   */\n  beginCompoundOperation(isUndoAble?: boolean): void {\n    this._inCompound = true;\n    this._isUndoable = isUndoAble !== false;\n    this._madeCompoundChange = false;\n  }\n\n  /**\n   * End a compound operation.\n   */\n  endCompoundOperation(): void {\n    this._inCompound = false;\n    this._isUndoable = true;\n    if (this._madeCompoundChange) {\n      this._index++;\n    }\n  }\n\n  /**\n   * Undo an operation.\n   */\n  undo(): void {\n    if (!this.canUndo) {\n      return;\n    }\n    const changes = this._stack[this._index];\n    this._isUndoable = false;\n    for (const change of changes.reverse()) {\n      this._undoChange(change);\n    }\n    this._isUndoable = true;\n    this._index--;\n  }\n\n  /**\n   * Redo an operation.\n   */\n  redo(): void {\n    if (!this.canRedo) {\n      return;\n    }\n    this._index++;\n    const changes = this._stack[this._index];\n    this._isUndoable = false;\n    for (const change of changes) {\n      this._redoChange(change);\n    }\n    this._isUndoable = true;\n  }\n\n  /**\n   * Clear the change stack.\n   */\n  clearUndo(): void {\n    this._index = -1;\n    this._stack = [];\n  }\n\n  /**\n   * Handle a change in the list.\n   */\n  private _onListChanged(\n    list: IObservableList<T>,\n    change: IObservableList.IChangedArgs<T>\n  ): void {\n    if (this.isDisposed || !this._isUndoable) {\n      return;\n    }\n    // Clear everything after this position if necessary.\n    if (!this._inCompound || !this._madeCompoundChange) {\n      this._stack = this._stack.slice(0, this._index + 1);\n    }\n    // Copy the change.\n    const evt = this._copyChange(change);\n    // Put the change in the stack.\n    if (this._stack[this._index + 1]) {\n      this._stack[this._index + 1].push(evt);\n    } else {\n      this._stack.push([evt]);\n    }\n    // If not in a compound operation, increase index.\n    if (!this._inCompound) {\n      this._index++;\n    } else {\n      this._madeCompoundChange = true;\n    }\n  }\n\n  /**\n   * Undo a change event.\n   */\n  private _undoChange(change: IObservableList.IChangedArgs<JSONValue>): void {\n    let index = 0;\n    const serializer = this._serializer;\n    switch (change.type) {\n      case 'add':\n        for (let length = change.newValues.length; length > 0; length--) {\n          this.remove(change.newIndex);\n        }\n        break;\n      case 'set':\n        index = change.oldIndex;\n        for (const value of change.oldValues) {\n          this.set(index++, serializer.fromJSON(value));\n        }\n        break;\n      case 'remove':\n        index = change.oldIndex;\n        for (const value of change.oldValues) {\n          this.insert(index++, serializer.fromJSON(value));\n        }\n        break;\n      case 'move':\n        this.move(change.newIndex, change.oldIndex);\n        break;\n      default:\n        return;\n    }\n  }\n\n  /**\n   * Redo a change event.\n   */\n  private _redoChange(change: IObservableList.IChangedArgs<JSONValue>): void {\n    let index = 0;\n    const serializer = this._serializer;\n    switch (change.type) {\n      case 'add':\n        index = change.newIndex;\n        for (const value of change.newValues) {\n          this.insert(index++, serializer.fromJSON(value));\n        }\n        break;\n      case 'set':\n        index = change.newIndex;\n        for (const value of change.newValues) {\n          this.set(change.newIndex++, serializer.fromJSON(value));\n        }\n        break;\n      case 'remove':\n        for (let length = change.oldValues.length; length > 0; length--) {\n          this.remove(change.oldIndex);\n        }\n        break;\n      case 'move':\n        this.move(change.oldIndex, change.newIndex);\n        break;\n      default:\n        return;\n    }\n  }\n\n  /**\n   * Copy a change as JSON.\n   */\n  private _copyChange(\n    change: IObservableList.IChangedArgs<T>\n  ): IObservableList.IChangedArgs<JSONValue> {\n    const oldValues: JSONValue[] = [];\n    for (const value of change.oldValues) {\n      oldValues.push(this._serializer.toJSON(value));\n    }\n    const newValues: JSONValue[] = [];\n    for (const value of change.newValues) {\n      newValues.push(this._serializer.toJSON(value));\n    }\n    return {\n      type: change.type,\n      oldIndex: change.oldIndex,\n      newIndex: change.newIndex,\n      oldValues,\n      newValues\n    };\n  }\n\n  private _inCompound = false;\n  private _isUndoable = true;\n  private _madeCompoundChange = false;\n  private _index = -1;\n  private _stack: IObservableList.IChangedArgs<JSONValue>[][] = [];\n  private _serializer: ISerializer<T>;\n}\n\n/**\n * Namespace for ObservableUndoableList utilities.\n */\nexport namespace ObservableUndoableList {\n  /**\n   * A default, identity serializer.\n   */\n  export class IdentitySerializer<T extends JSONValue>\n    implements ISerializer<T>\n  {\n    /**\n     * Identity serialize.\n     */\n    toJSON(value: T): JSONValue {\n      return value;\n    }\n\n    /**\n     * Identity deserialize.\n     */\n    fromJSON(value: JSONValue): T {\n      return value as T;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport {\n  JSONExt,\n  JSONObject,\n  JSONValue,\n  PartialJSONValue\n} from '@lumino/coreutils';\nimport { DisposableSet, IDisposable } from '@lumino/disposable';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { IObservableJSON, ObservableJSON } from './observablejson';\nimport { IObservableMap, ObservableMap } from './observablemap';\nimport { IObservableString, ObservableString } from './observablestring';\nimport {\n  IObservableUndoableList,\n  ObservableUndoableList\n} from './undoablelist';\n\n/**\n * String type annotations for Observable objects that can be\n * created and placed in the IModelDB interface.\n */\nexport type ObservableType = 'Map' | 'List' | 'String' | 'Value';\n\n/**\n * Base interface for Observable objects.\n */\nexport interface IObservable extends IDisposable {\n  /**\n   * The type of this object.\n   */\n  readonly type: ObservableType;\n}\n\n/**\n * Interface for an Observable object that represents\n * an opaque JSON value.\n */\nexport interface IObservableValue extends IObservable {\n  /**\n   * The type of this object.\n   */\n  readonly type: 'Value';\n\n  /**\n   * The changed signal.\n   */\n  readonly changed: ISignal<IObservableValue, ObservableValue.IChangedArgs>;\n\n  /**\n   * Get the current value, or `undefined` if it has not been set.\n   */\n  get(): PartialJSONValue | undefined;\n\n  /**\n   * Set the value.\n   */\n  set(value: PartialJSONValue): void;\n}\n\n/**\n * Interface for an object representing a single collaborator\n * on a realtime model.\n */\nexport interface ICollaborator extends JSONObject {\n  /**\n   * A user id for the collaborator.\n   * This might not be unique, if the user has more than\n   * one editing session at a time.\n   */\n  readonly userId: string;\n\n  /**\n   * A session id, which should be unique to a\n   * particular view on a collaborative model.\n   */\n  readonly sessionId: string;\n\n  /**\n   * A human-readable display name for a collaborator.\n   */\n  readonly displayName: string;\n\n  /**\n   * A color to be used to identify the collaborator in\n   * UI elements.\n   */\n  readonly color: string;\n\n  /**\n   * A human-readable short name for a collaborator, for\n   * use in places where the full `displayName` would take\n   * too much space.\n   */\n  readonly shortName: string;\n}\n\n/**\n * Interface for an IObservableMap that tracks collaborators.\n */\nexport interface ICollaboratorMap extends IObservableMap<ICollaborator> {\n  /**\n   * The local collaborator on a model.\n   */\n  readonly localCollaborator: ICollaborator;\n}\n\n/**\n * An interface for a path based database for\n * creating and storing values, which is agnostic\n * to the particular type of store in the backend.\n */\nexport interface IModelDB extends IDisposable {\n  /**\n   * The base path for the `IModelDB`. This is prepended\n   * to all the paths that are passed in to the member\n   * functions of the object.\n   */\n  readonly basePath: string;\n\n  /**\n   * Whether the database has been disposed.\n   */\n  readonly isDisposed: boolean;\n\n  /**\n   * Whether the database has been populated\n   * with model values prior to connection.\n   */\n  readonly isPrepopulated: boolean;\n\n  /**\n   * Whether the database is collaborative.\n   */\n  readonly isCollaborative: boolean;\n\n  /**\n   * A promise that resolves when the database\n   * has connected to its backend, if any.\n   */\n  readonly connected: Promise<void>;\n\n  /**\n   * A map of the currently active collaborators\n   * for the database, including the local user.\n   */\n  readonly collaborators?: ICollaboratorMap;\n\n  /**\n   * Get a value for a path.\n   *\n   * @param path: the path for the object.\n   *\n   * @returns an `IObservable`.\n   */\n  get(path: string): IObservable | undefined;\n\n  /**\n   * Whether the `IModelDB` has an object at this path.\n   *\n   * @param path: the path for the object.\n   *\n   * @returns a boolean for whether an object is at `path`.\n   */\n  has(path: string): boolean;\n\n  /**\n   * Create a string and insert it in the database.\n   *\n   * @param path: the path for the string.\n   *\n   * @returns the string that was created.\n   */\n  createString(path: string): IObservableString;\n\n  /**\n   * Create an undoable list and insert it in the database.\n   *\n   * @param path: the path for the list.\n   *\n   * @returns the list that was created.\n   *\n   * #### Notes\n   * The list can only store objects that are simple\n   * JSON Objects and primitives.\n   */\n  createList<T extends JSONValue>(path: string): IObservableUndoableList<T>;\n\n  /**\n   * Create a map and insert it in the database.\n   *\n   * @param path: the path for the map.\n   *\n   * @returns the map that was created.\n   *\n   * #### Notes\n   * The map can only store objects that are simple\n   * JSON Objects and primitives.\n   */\n  createMap(path: string): IObservableJSON;\n\n  /**\n   * Create an opaque value and insert it in the database.\n   *\n   * @param path: the path for the value.\n   *\n   * @returns the value that was created.\n   */\n  createValue(path: string): IObservableValue;\n\n  /**\n   * Get a value at a path, or `undefined if it has not been set\n   * That value must already have been created using `createValue`.\n   *\n   * @param path: the path for the value.\n   */\n  getValue(path: string): JSONValue | undefined;\n\n  /**\n   * Set a value at a path. That value must already have\n   * been created using `createValue`.\n   *\n   * @param path: the path for the value.\n   *\n   * @param value: the new value.\n   */\n  setValue(path: string, value: JSONValue): void;\n\n  /**\n   * Create a view onto a subtree of the model database.\n   *\n   * @param basePath: the path for the root of the subtree.\n   *\n   * @returns an `IModelDB` with a view onto the original\n   *   `IModelDB`, with `basePath` prepended to all paths.\n   */\n  view(basePath: string): IModelDB;\n\n  /**\n   * Dispose of the resources held by the database.\n   */\n  dispose(): void;\n}\n\n/**\n * A concrete implementation of an `IObservableValue`.\n */\nexport class ObservableValue implements IObservableValue {\n  /**\n   * Constructor for the value.\n   *\n   * @param initialValue: the starting value for the `ObservableValue`.\n   */\n  constructor(initialValue: JSONValue = null) {\n    this._value = initialValue;\n  }\n\n  /**\n   * The observable type.\n   */\n  get type(): 'Value' {\n    return 'Value';\n  }\n\n  /**\n   * Whether the value has been disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * The changed signal.\n   */\n  get changed(): ISignal<this, ObservableValue.IChangedArgs> {\n    return this._changed;\n  }\n\n  /**\n   * Get the current value, or `undefined` if it has not been set.\n   */\n  get(): JSONValue {\n    return this._value;\n  }\n\n  /**\n   * Set the current value.\n   */\n  set(value: JSONValue): void {\n    const oldValue = this._value;\n    if (JSONExt.deepEqual(oldValue, value)) {\n      return;\n    }\n    this._value = value;\n    this._changed.emit({\n      oldValue: oldValue,\n      newValue: value\n    });\n  }\n\n  /**\n   * Dispose of the resources held by the value.\n   */\n  dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    Signal.clearData(this);\n    this._value = null;\n  }\n\n  private _value: JSONValue = null;\n  private _changed = new Signal<this, ObservableValue.IChangedArgs>(this);\n  private _isDisposed = false;\n}\n\n/**\n * The namespace for the `ObservableValue` class statics.\n */\nexport namespace ObservableValue {\n  /**\n   * The changed args object emitted by the `IObservableValue`.\n   */\n  export class IChangedArgs {\n    /**\n     * The old value.\n     */\n    oldValue: JSONValue | undefined;\n\n    /**\n     * The new value.\n     */\n    newValue: JSONValue | undefined;\n  }\n}\n\n/**\n * A concrete implementation of an `IModelDB`.\n */\nexport class ModelDB implements IModelDB {\n  /**\n   * Constructor for the `ModelDB`.\n   */\n  constructor(options: ModelDB.ICreateOptions = {}) {\n    this._basePath = options.basePath || '';\n    if (options.baseDB) {\n      this._db = options.baseDB;\n    } else {\n      this._db = new ObservableMap<IObservable>();\n      this._toDispose = true;\n    }\n  }\n\n  /**\n   * The base path for the `ModelDB`. This is prepended\n   * to all the paths that are passed in to the member\n   * functions of the object.\n   */\n  get basePath(): string {\n    return this._basePath;\n  }\n\n  /**\n   * Whether the database is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * Whether the model has been populated with\n   * any model values.\n   */\n  readonly isPrepopulated: boolean = false;\n\n  /**\n   * Whether the model is collaborative.\n   */\n  readonly isCollaborative: boolean = false;\n\n  /**\n   * A promise resolved when the model is connected\n   * to its backend. For the in-memory ModelDB it\n   * is immediately resolved.\n   */\n  readonly connected: Promise<void> = Promise.resolve(void 0);\n\n  /**\n   * Get a value for a path.\n   *\n   * @param path: the path for the object.\n   *\n   * @returns an `IObservable`.\n   */\n  get(path: string): IObservable | undefined {\n    return this._db.get(this._resolvePath(path));\n  }\n\n  /**\n   * Whether the `IModelDB` has an object at this path.\n   *\n   * @param path: the path for the object.\n   *\n   * @returns a boolean for whether an object is at `path`.\n   */\n  has(path: string): boolean {\n    return this._db.has(this._resolvePath(path));\n  }\n\n  /**\n   * Create a string and insert it in the database.\n   *\n   * @param path: the path for the string.\n   *\n   * @returns the string that was created.\n   */\n  createString(path: string): IObservableString {\n    const str = new ObservableString();\n    this._disposables.add(str);\n    this.set(path, str);\n    return str;\n  }\n\n  /**\n   * Create an undoable list and insert it in the database.\n   *\n   * @param path: the path for the list.\n   *\n   * @returns the list that was created.\n   *\n   * #### Notes\n   * The list can only store objects that are simple\n   * JSON Objects and primitives.\n   */\n  createList<T extends JSONValue>(path: string): IObservableUndoableList<T> {\n    const vec = new ObservableUndoableList<T>(\n      new ObservableUndoableList.IdentitySerializer<T>()\n    );\n    this._disposables.add(vec);\n    this.set(path, vec);\n    return vec;\n  }\n\n  /**\n   * Create a map and insert it in the database.\n   *\n   * @param path: the path for the map.\n   *\n   * @returns the map that was created.\n   *\n   * #### Notes\n   * The map can only store objects that are simple\n   * JSON Objects and primitives.\n   */\n  createMap(path: string): IObservableJSON {\n    const map = new ObservableJSON();\n    this._disposables.add(map);\n    this.set(path, map);\n    return map;\n  }\n\n  /**\n   * Create an opaque value and insert it in the database.\n   *\n   * @param path: the path for the value.\n   *\n   * @returns the value that was created.\n   */\n  createValue(path: string): IObservableValue {\n    const val = new ObservableValue();\n    this._disposables.add(val);\n    this.set(path, val);\n    return val;\n  }\n\n  /**\n   * Get a value at a path, or `undefined if it has not been set\n   * That value must already have been created using `createValue`.\n   *\n   * @param path: the path for the value.\n   */\n  getValue(path: string): JSONValue | undefined {\n    const val = this.get(path);\n    if (!val || val.type !== 'Value') {\n      throw Error('Can only call getValue for an ObservableValue');\n    }\n    return (val as ObservableValue).get();\n  }\n\n  /**\n   * Set a value at a path. That value must already have\n   * been created using `createValue`.\n   *\n   * @param path: the path for the value.\n   *\n   * @param value: the new value.\n   */\n  setValue(path: string, value: JSONValue): void {\n    const val = this.get(path);\n    if (!val || val.type !== 'Value') {\n      throw Error('Can only call setValue on an ObservableValue');\n    }\n    (val as ObservableValue).set(value);\n  }\n\n  /**\n   * Create a view onto a subtree of the model database.\n   *\n   * @param basePath: the path for the root of the subtree.\n   *\n   * @returns an `IModelDB` with a view onto the original\n   *   `IModelDB`, with `basePath` prepended to all paths.\n   */\n  view(basePath: string): ModelDB {\n    const view = new ModelDB({ basePath, baseDB: this });\n    this._disposables.add(view);\n    return view;\n  }\n\n  /**\n   * Set a value at a path. Not intended to\n   * be called by user code, instead use the\n   * `create*` factory methods.\n   *\n   * @param path: the path to set the value at.\n   *\n   * @param value: the value to set at the path.\n   */\n  set(path: string, value: IObservable): void {\n    this._db.set(this._resolvePath(path), value);\n  }\n\n  /**\n   * Dispose of the resources held by the database.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    if (this._toDispose) {\n      this._db.dispose();\n    }\n    this._disposables.dispose();\n  }\n\n  /**\n   * Compute the fully resolved path for a path argument.\n   */\n  private _resolvePath(path: string): string {\n    if (this._basePath) {\n      path = this._basePath + '.' + path;\n    }\n    return path;\n  }\n\n  private _basePath: string;\n  private _db: ModelDB | ObservableMap<IObservable>;\n  private _toDispose = false;\n  private _isDisposed = false;\n  private _disposables = new DisposableSet();\n}\n\n/**\n * A namespace for the `ModelDB` class statics.\n */\nexport namespace ModelDB {\n  /**\n   * Options for creating a `ModelDB` object.\n   */\n  export interface ICreateOptions {\n    /**\n     * The base path to prepend to all the path arguments.\n     */\n    basePath?: string;\n\n    /**\n     * A ModelDB to use as the store for this\n     * ModelDB. If none is given, it uses its own store.\n     */\n    baseDB?: ModelDB;\n  }\n\n  /**\n   * A factory interface for creating `IModelDB` objects.\n   */\n  export interface IFactory {\n    /**\n     * Create a new `IModelDB` instance.\n     */\n    createNew(path: string): IModelDB;\n  }\n}\n", "/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n/**\n * @packageDocumentation\n * @module observables\n */\n\nexport * from './modeldb';\nexport * from './observablejson';\nexport * from './observablelist';\nexport * from './observablemap';\nexport * from './observablestring';\nexport * from './undoablelist';\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { HoverBox } from '@jupyterlab/ui-components';\nimport { Message } from '@lumino/messaging';\nimport { PanelLayout, Widget } from '@lumino/widgets';\n\n/**\n * Create and show a popup component.\n *\n * @param options - options for the popup\n *\n * @returns the popup that was created.\n */\nexport function showPopup(options: Popup.IOptions): Popup {\n  const dialog = new Popup(options);\n  if (!options.startHidden) {\n    dialog.launch();\n  }\n  return dialog;\n}\n\n/**\n * A class for a Popup widget.\n */\nexport class Popup extends Widget {\n  /**\n   * Construct a new Popup.\n   */\n  constructor(options: Omit<Popup.IOptions, 'startHidden'>) {\n    super();\n    this._body = options.body;\n    this._body.addClass('jp-StatusBar-HoverItem');\n    this._anchor = options.anchor;\n    this._align = options.align;\n    if (options.hasDynamicSize) {\n      this._observer = new ResizeObserver(() => {\n        this.update();\n      });\n    }\n    const layout = (this.layout = new PanelLayout());\n    layout.addWidget(options.body);\n    this._body.node.addEventListener('resize', () => {\n      this.update();\n    });\n  }\n\n  /**\n   * Attach the popup widget to the page.\n   */\n  launch(): void {\n    this._setGeometry();\n    Widget.attach(this, document.body);\n    this.update();\n    this._anchor.addClass('jp-mod-clicked');\n    this._anchor.removeClass('jp-mod-highlight');\n  }\n\n  /**\n   * Handle `'update'` messages for the widget.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    this._setGeometry();\n    super.onUpdateRequest(msg);\n  }\n\n  /**\n   * Handle `'after-attach'` messages for the widget.\n   */\n  protected onAfterAttach(msg: Message): void {\n    document.addEventListener('click', this, false);\n    this.node.addEventListener('keydown', this, false);\n    window.addEventListener('resize', this, false);\n    this._observer?.observe(this._body.node);\n  }\n\n  /**\n   * Handle `'before-detach'` messages for the widget.\n   */\n  protected onBeforeDetach(msg: Message): void {\n    this._observer?.disconnect();\n    document.removeEventListener('click', this, false);\n    this.node.removeEventListener('keydown', this, false);\n    window.removeEventListener('resize', this, false);\n  }\n\n  /**\n   * Handle `'resize'` messages for the widget.\n   */\n  protected onResize(): void {\n    this.update();\n  }\n\n  /**\n   * Dispose of the widget.\n   */\n  dispose(): void {\n    this._observer?.disconnect();\n    super.dispose();\n    this._anchor.removeClass('jp-mod-clicked');\n    this._anchor.addClass('jp-mod-highlight');\n  }\n\n  /**\n   * Handle DOM events for the widget.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'keydown':\n        this._evtKeydown(event as KeyboardEvent);\n        break;\n      case 'click':\n        this._evtClick(event as MouseEvent);\n        break;\n      case 'resize':\n        this.onResize();\n        break;\n      default:\n        break;\n    }\n  }\n\n  private _evtClick(event: MouseEvent): void {\n    if (\n      !!event.target &&\n      !(\n        this._body.node.contains(event.target as HTMLElement) ||\n        this._anchor.node.contains(event.target as HTMLElement)\n      )\n    ) {\n      this.dispose();\n    }\n  }\n\n  private _evtKeydown(event: KeyboardEvent): void {\n    // Check for escape key\n    switch (event.keyCode) {\n      case 27: // Escape.\n        event.stopPropagation();\n        event.preventDefault();\n        this.dispose();\n        break;\n      default:\n        break;\n    }\n  }\n\n  private _setGeometry(): void {\n    let aligned = 0;\n    const anchorRect = this._anchor.node.getBoundingClientRect();\n    const bodyRect = this._body.node.getBoundingClientRect();\n    if (this._align === 'right') {\n      aligned = -(bodyRect.width - anchorRect.width);\n    }\n    const style = window.getComputedStyle(this._body.node);\n    HoverBox.setGeometry({\n      anchor: anchorRect,\n      host: document.body,\n      maxHeight: 500,\n      minHeight: 20,\n      node: this._body.node,\n      offset: {\n        horizontal: aligned\n      },\n      privilege: 'forceAbove',\n      style\n    });\n  }\n\n  private _body: Widget;\n  private _anchor: Widget;\n  private _align: 'left' | 'right' | undefined;\n  private _observer: ResizeObserver | null;\n}\n\n/**\n * A namespace for Popup statics.\n */\nexport namespace Popup {\n  /**\n   * Options for creating a Popup widget.\n   */\n  export interface IOptions {\n    /**\n     * The content of the popup.\n     */\n    body: Widget;\n\n    /**\n     * The widget to which we are attaching the popup.\n     */\n    anchor: Widget;\n\n    /**\n     * Whether to align the popup to the left or the right of the anchor.\n     */\n    align?: 'left' | 'right';\n\n    /**\n     * Whether the body has dynamic size or not.\n     * By default, this is `false`.\n     */\n    hasDynamicSize?: boolean;\n\n    /**\n     * Whether to start the popup in hidden mode or not.\n     * By default, this is `false`.\n     *\n     * ### Note\n     * The popup can be displayed using `launch` method.\n     */\n    startHidden?: boolean;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport * as React from 'react';\n\n/**\n * A namespace for TextItem statics.\n */\nexport namespace TextItem {\n  /**\n   * Props for a TextItem.\n   */\n  export interface IProps {\n    /**\n     * The content of the text item.\n     */\n    source: string | number;\n\n    /**\n     * Hover text to give to the node.\n     */\n    title?: string;\n  }\n}\n\n/**\n * A functional tsx component for a text item.\n */\nexport function TextItem(\n  props: TextItem.IProps & React.HTMLAttributes<HTMLSpanElement>\n): React.ReactElement<TextItem.IProps> {\n  const { title, source, className, ...rest } = props;\n  return (\n    <span\n      className={`jp-StatusBar-TextItem ${className}`}\n      title={title}\n      {...rest}\n    >\n      {source}\n    </span>\n  );\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport * as React from 'react';\n\n/**\n * A tsx component for a set of items logically grouped together.\n */\nexport function GroupItem(\n  props: GroupItem.IProps & React.HTMLAttributes<HTMLDivElement>\n): React.ReactElement<GroupItem.IProps> {\n  const { spacing, children, className, ...rest } = props;\n  const numChildren = React.Children.count(children);\n\n  return (\n    <div className={`jp-StatusBar-GroupItem ${className || ''}`} {...rest}>\n      {React.Children.map(children, (child, i) => {\n        if (i === 0) {\n          return <div style={{ marginRight: `${spacing}px` }}>{child}</div>;\n        } else if (i === numChildren - 1) {\n          return <div style={{ marginLeft: `${spacing}px` }}>{child}</div>;\n        } else {\n          return <div style={{ margin: `0px ${spacing}px` }}>{child}</div>;\n        }\n      })}\n    </div>\n  );\n}\n\n/**\n * A namespace for GroupItem statics.\n */\nexport namespace GroupItem {\n  /**\n   * Props for the GroupItem.\n   */\n  export interface IProps {\n    /**\n     * The spacing, in px, between the items in the group.\n     */\n    spacing: number;\n\n    /**\n     * The items to arrange in a group.\n     */\n    children: JSX.Element[];\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport * as React from 'react';\n\n/**\n * A namespace for ProgressBar statics.\n */\nexport namespace ProgressBar {\n  /**\n   * Props for the ProgressBar.\n   */\n  export interface IProps {\n    /**\n     * The current progress percentage, from 0 to 100\n     */\n    percentage: number;\n\n    /**\n     * Width of progress bar in pixel.\n     */\n    width?: number;\n\n    /**\n     * Text to show inside progress bar.\n     */\n    content?: string;\n  }\n}\n\n/**\n * A functional tsx component for a progress bar.\n */\nexport function ProgressBar(props: ProgressBar.IProps): JSX.Element {\n  const { width, percentage, ...rest } = props;\n  return (\n    <div\n      className={'jp-Statusbar-ProgressBar-progress-bar'}\n      role=\"progressbar\"\n      aria-valuemin={0}\n      aria-valuemax={100}\n      aria-valuenow={percentage}\n    >\n      <Filler {...{ percentage, ...rest }} contentWidth={width} />\n    </div>\n  );\n}\n\n/**\n * A namespace for Filler statics.\n */\nnamespace Filler {\n  /**\n   * Props for the Filler component.\n   */\n  export interface IProps {\n    /**\n     * The current percentage filled, from 0 to 100\n     */\n    percentage: number;\n\n    /**\n     * Width of content inside filler.\n     */\n    contentWidth?: number;\n\n    /**\n     * Text to show inside filler.\n     */\n    content?: string;\n  }\n}\n\n/**\n * A functional tsx component for a partially filled div.\n */\nfunction Filler(props: Filler.IProps) {\n  return (\n    <div\n      style={{\n        width: `${props.percentage}%`\n      }}\n    >\n      <p>{props.content}</p>\n    </div>\n  );\n}\n", "/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n\nimport React from 'react';\nexport namespace ProgressCircle {\n  /**\n   * Props for the ProgressBar.\n   */\n  export interface IProps {\n    /**\n     * The current progress percentage, from 0 to 100\n     */\n    progress: number;\n    /**\n     * The aria-label for the widget\n     */\n    label?: string;\n    /**\n     * Element width\n     */\n    width?: number;\n    /**\n     * Element height\n     */\n    height?: number;\n  }\n}\n\nexport function ProgressCircle(props: ProgressCircle.IProps): JSX.Element {\n  const radius = 104;\n  const d = (progress: number): string => {\n    const angle = Math.max(progress * 3.6, 0.1);\n    const rad = (angle * Math.PI) / 180,\n      x = Math.sin(rad) * radius,\n      y = Math.cos(rad) * -radius,\n      mid = angle < 180 ? 1 : 0,\n      shape =\n        `M 0 0 v -${radius} A ${radius} ${radius} 1 ` +\n        mid +\n        ' 0 ' +\n        x.toFixed(4) +\n        ' ' +\n        y.toFixed(4) +\n        ' z';\n    return shape;\n  };\n  return (\n    <div\n      className={'jp-Statusbar-ProgressCircle'}\n      role=\"progressbar\"\n      aria-label={props.label || 'Unlabelled progress circle'}\n      aria-valuemin={0}\n      aria-valuemax={100}\n      aria-valuenow={props.progress}\n    >\n      <svg viewBox=\"0 0 250 250\">\n        <circle\n          cx=\"125\"\n          cy=\"125\"\n          r={`${radius}`}\n          stroke=\"var(--jp-inverse-layout-color3)\"\n          strokeWidth=\"20\"\n          fill=\"none\"\n        />\n        <path\n          transform=\"translate(125,125) scale(.9)\"\n          d={d(props.progress)}\n          fill={'var(--jp-inverse-layout-color3)'}\n        />\n      </svg>\n    </div>\n  );\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nexport * from './group';\nexport * from './hover';\nexport * from './progressBar';\nexport * from './text';\nexport * from './progressCircle';\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for array-specific algorithms.\n */\nexport namespace ArrayExt {\n  /**\n   * Find the index of the first occurrence of a value in an array.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param value - The value to locate in the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first occurrence of the value, or `-1`\n   *   if the value is not found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four', 'one'];\n   * ArrayExt.firstIndexOf(data, 'red');        // -1\n   * ArrayExt.firstIndexOf(data, 'one');        // 0\n   * ArrayExt.firstIndexOf(data, 'one', 1);     // 4\n   * ArrayExt.firstIndexOf(data, 'two', 2);     // -1\n   * ArrayExt.firstIndexOf(data, 'two', 2, 1);  // 1\n   * ```\n   */\n  export function firstIndexOf<T>(\n    array: ArrayLike<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start + i) % n;\n      if (array[j] === value) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the last occurrence of a value in an array.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param value - The value to locate in the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the last occurrence of the value, or `-1`\n   *   if the value is not found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four', 'one'];\n   * ArrayExt.lastIndexOf(data, 'red');        // -1\n   * ArrayExt.lastIndexOf(data, 'one');        // 4\n   * ArrayExt.lastIndexOf(data, 'one', 1);     // 0\n   * ArrayExt.lastIndexOf(data, 'two', 0);     // -1\n   * ArrayExt.lastIndexOf(data, 'two', 0, 1);  // 1\n   * ```\n   */\n  export function lastIndexOf<T>(\n    array: ArrayLike<T>,\n    value: T,\n    start = -1,\n    stop = 0\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (start < stop) {\n      span = start + 1 + (n - stop);\n    } else {\n      span = start - stop + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start - i + n) % n;\n      if (array[j] === value) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the first value which matches a predicate.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first matching value, or `-1` if no\n   *   matching value is found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findFirstIndex(data, isEven);       // 1\n   * ArrayExt.findFirstIndex(data, isEven, 4);    // 5\n   * ArrayExt.findFirstIndex(data, isEven, 6);    // -1\n   * ArrayExt.findFirstIndex(data, isEven, 6, 5); // 1\n   * ```\n   */\n  export function findFirstIndex<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      let j = (start + i) % n;\n      if (fn(array[j], j)) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the index of the last value which matches a predicate.\n   *\n   * @param object - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the last matching value, or `-1` if no\n   *   matching value is found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findLastIndex(data, isEven);        // 5\n   * ArrayExt.findLastIndex(data, isEven, 4);     // 3\n   * ArrayExt.findLastIndex(data, isEven, 0);     // -1\n   * ArrayExt.findLastIndex(data, isEven, 0, 1);  // 5\n   * ```\n   */\n  export function findLastIndex<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return -1;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let d: number;\n    if (start < stop) {\n      d = start + 1 + (n - stop);\n    } else {\n      d = start - stop + 1;\n    }\n    for (let i = 0; i < d; ++i) {\n      let j = (start - i + n) % n;\n      if (fn(array[j], j)) {\n        return j;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Find the first value which matches a predicate.\n   *\n   * @param array - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The first matching value, or `undefined` if no matching\n   *   value is found.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findFirstValue(data, isEven);       // 2\n   * ArrayExt.findFirstValue(data, isEven, 2);    // 4\n   * ArrayExt.findFirstValue(data, isEven, 6);    // undefined\n   * ArrayExt.findFirstValue(data, isEven, 6, 5); // 2\n   * ```\n   */\n  export function findFirstValue<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): T | undefined {\n    let index = findFirstIndex(array, fn, start, stop);\n    return index !== -1 ? array[index] : undefined;\n  }\n\n  /**\n   * Find the last value which matches a predicate.\n   *\n   * @param object - The array-like object to search.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The last matching value, or `undefined` if no matching\n   *   value is found.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the front of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [1, 2, 3, 4, 3, 2, 1];\n   * ArrayExt.findLastValue(data, isEven);        // 2\n   * ArrayExt.findLastValue(data, isEven, 4);     // 4\n   * ArrayExt.findLastValue(data, isEven, 0);     // undefined\n   * ArrayExt.findLastValue(data, isEven, 0, 1);  // 2\n   * ```\n   */\n  export function findLastValue<T>(\n    array: ArrayLike<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): T | undefined {\n    let index = findLastIndex(array, fn, start, stop);\n    return index !== -1 ? array[index] : undefined;\n  }\n\n  /**\n   * Find the index of the first element which compares `>=` to a value.\n   *\n   * @param array - The sorted array-like object to search.\n   *\n   * @param value - The value to locate in the array.\n   *\n   * @param fn - The 3-way comparison function to apply to the values.\n   *   It should return `< 0` if an element is less than a value, `0` if\n   *   an element is equal to a value, or `> 0` if an element is greater\n   *   than a value.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first element which compares `>=` to the\n   *   value, or `length` if there is no such element. If the computed\n   *   index for `stop` is less than `start`, then the computed index\n   *   for `start` is returned.\n   *\n   * #### Notes\n   * The array must already be sorted in ascending order according to\n   * the comparison function.\n   *\n   * #### Complexity\n   * Logarithmic.\n   *\n   * #### Undefined Behavior\n   * Searching a range which is not sorted in ascending order.\n   *\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function numberCmp(a: number, b: number): number {\n   *   return a - b;\n   * }\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.lowerBound(data, 0, numberCmp);   // 0\n   * ArrayExt.lowerBound(data, 6, numberCmp);   // 3\n   * ArrayExt.lowerBound(data, 7, numberCmp);   // 3\n   * ArrayExt.lowerBound(data, -1, numberCmp);  // 0\n   * ArrayExt.lowerBound(data, 10, numberCmp);  // 6\n   * ```\n   */\n  export function lowerBound<T, U>(\n    array: ArrayLike<T>,\n    value: U,\n    fn: (element: T, value: U) => number,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let begin = start;\n    let span = stop - start + 1;\n    while (span > 0) {\n      let half = span >> 1;\n      let middle = begin + half;\n      if (fn(array[middle], value) < 0) {\n        begin = middle + 1;\n        span -= half + 1;\n      } else {\n        span = half;\n      }\n    }\n    return begin;\n  }\n\n  /**\n   * Find the index of the first element which compares `>` than a value.\n   *\n   * @param array - The sorted array-like object to search.\n   *\n   * @param value - The value to locate in the array.\n   *\n   * @param fn - The 3-way comparison function to apply to the values.\n   *   It should return `< 0` if an element is less than a value, `0` if\n   *   an element is equal to a value, or `> 0` if an element is greater\n   *   than a value.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the first element which compares `>` than the\n   *   value, or `length` if there is no such element. If the computed\n   *   index for `stop` is less than `start`, then the computed index\n   *   for `start` is returned.\n   *\n   * #### Notes\n   * The array must already be sorted in ascending order according to\n   * the comparison function.\n   *\n   * #### Complexity\n   * Logarithmic.\n   *\n   * #### Undefined Behavior\n   * Searching a range which is not sorted in ascending order.\n   *\n   * A `start` or `stop` which is non-integral.\n   *\n   * Modifying the length of the array while searching.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function numberCmp(a: number, b: number): number {\n   *   return a - b;\n   * }\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.upperBound(data, 0, numberCmp);   // 1\n   * ArrayExt.upperBound(data, 6, numberCmp);   // 3\n   * ArrayExt.upperBound(data, 7, numberCmp);   // 5\n   * ArrayExt.upperBound(data, -1, numberCmp);  // 0\n   * ArrayExt.upperBound(data, 10, numberCmp);  // 6\n   * ```\n   */\n  export function upperBound<T, U>(\n    array: ArrayLike<T>,\n    value: U,\n    fn: (element: T, value: U) => number,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let begin = start;\n    let span = stop - start + 1;\n    while (span > 0) {\n      let half = span >> 1;\n      let middle = begin + half;\n      if (fn(array[middle], value) > 0) {\n        span = half;\n      } else {\n        begin = middle + 1;\n        span -= half + 1;\n      }\n    }\n    return begin;\n  }\n\n  /**\n   * Test whether two arrays are shallowly equal.\n   *\n   * @param a - The first array-like object to compare.\n   *\n   * @param b - The second array-like object to compare.\n   *\n   * @param fn - The comparison function to apply to the elements. It\n   *   should return `true` if the elements are \"equal\". The default\n   *   compares elements using strict `===` equality.\n   *\n   * @returns Whether the two arrays are shallowly equal.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * Modifying the length of the arrays while comparing.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let d1 = [0, 3, 4, 7, 7, 9];\n   * let d2 = [0, 3, 4, 7, 7, 9];\n   * let d3 = [42];\n   * ArrayExt.shallowEqual(d1, d2);  // true\n   * ArrayExt.shallowEqual(d2, d3);  // false\n   * ```\n   */\n  export function shallowEqual<T>(\n    a: ArrayLike<T>,\n    b: ArrayLike<T>,\n    fn?: (a: T, b: T) => boolean\n  ): boolean {\n    // Check for object identity first.\n    if (a === b) {\n      return true;\n    }\n\n    // Bail early if the lengths are different.\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    // Compare each element for equality.\n    for (let i = 0, n = a.length; i < n; ++i) {\n      if (fn ? !fn(a[i], b[i]) : a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    // The array are shallowly equal.\n    return true;\n  }\n\n  /**\n   * Create a slice of an array subject to an optional step.\n   *\n   * @param array - The array-like object of interest.\n   *\n   * @param options - The options for configuring the slice.\n   *\n   * @returns A new array with the specified values.\n   *\n   * @throws An exception if the slice `step` is `0`.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start`, `stop`, or `step` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 3, 4, 7, 7, 9];\n   * ArrayExt.slice(data);                         // [0, 3, 4, 7, 7, 9]\n   * ArrayExt.slice(data, { start: 2 });           // [4, 7, 7, 9]\n   * ArrayExt.slice(data, { start: 0, stop: 4 });  // [0, 3, 4, 7]\n   * ArrayExt.slice(data, { step: 2 });            // [0, 4, 7]\n   * ArrayExt.slice(data, { step: -1 });           // [9, 7, 7, 4, 3, 0]\n   * ```\n   */\n  export function slice<T>(\n    array: ArrayLike<T>,\n    options: slice.IOptions = {}\n  ): T[] {\n    // Extract the options.\n    let { start, stop, step } = options;\n\n    // Set up the `step` value.\n    if (step === undefined) {\n      step = 1;\n    }\n\n    // Validate the step size.\n    if (step === 0) {\n      throw new Error('Slice `step` cannot be zero.');\n    }\n\n    // Look up the length of the array.\n    let n = array.length;\n\n    // Set up the `start` value.\n    if (start === undefined) {\n      start = step < 0 ? n - 1 : 0;\n    } else if (start < 0) {\n      start = Math.max(start + n, step < 0 ? -1 : 0);\n    } else if (start >= n) {\n      start = step < 0 ? n - 1 : n;\n    }\n\n    // Set up the `stop` value.\n    if (stop === undefined) {\n      stop = step < 0 ? -1 : n;\n    } else if (stop < 0) {\n      stop = Math.max(stop + n, step < 0 ? -1 : 0);\n    } else if (stop >= n) {\n      stop = step < 0 ? n - 1 : n;\n    }\n\n    // Compute the slice length.\n    let length;\n    if ((step < 0 && stop >= start) || (step > 0 && start >= stop)) {\n      length = 0;\n    } else if (step < 0) {\n      length = Math.floor((stop - start + 1) / step + 1);\n    } else {\n      length = Math.floor((stop - start - 1) / step + 1);\n    }\n\n    // Compute the sliced result.\n    let result: T[] = [];\n    for (let i = 0; i < length; ++i) {\n      result[i] = array[start + i * step];\n    }\n\n    // Return the result.\n    return result;\n  }\n\n  /**\n   * The namespace for the `slice` function statics.\n   */\n  export namespace slice {\n    /**\n     * The options for the `slice` function.\n     */\n    export interface IOptions {\n      /**\n       * The starting index of the slice, inclusive.\n       *\n       * Negative values are taken as an offset from the end\n       * of the array.\n       *\n       * The default is `0` if `step > 0` else `n - 1`.\n       */\n      start?: number;\n\n      /**\n       * The stopping index of the slice, exclusive.\n       *\n       * Negative values are taken as an offset from the end\n       * of the array.\n       *\n       * The default is `n` if `step > 0` else `-n - 1`.\n       */\n      stop?: number;\n\n      /**\n       * The step value for the slice.\n       *\n       * This must not be `0`.\n       *\n       * The default is `1`.\n       */\n      step?: number;\n    }\n  }\n\n  /**\n   * An array-like object which supports item assignment.\n   */\n  export type MutableArrayLike<T> = {\n    readonly length: number;\n    [index: number]: T;\n  };\n\n  /**\n   * Move an element in an array from one index to another.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param fromIndex - The index of the element to move. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * @param toIndex - The target index of the element. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `fromIndex` or `toIndex` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.move(data, 1, 2);  // [0, 2, 1, 3, 4]\n   * ArrayExt.move(data, 4, 2);  // [0, 2, 4, 1, 3]\n   * ```\n   */\n  export function move<T>(\n    array: MutableArrayLike<T>,\n    fromIndex: number,\n    toIndex: number\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (fromIndex < 0) {\n      fromIndex = Math.max(0, fromIndex + n);\n    } else {\n      fromIndex = Math.min(fromIndex, n - 1);\n    }\n    if (toIndex < 0) {\n      toIndex = Math.max(0, toIndex + n);\n    } else {\n      toIndex = Math.min(toIndex, n - 1);\n    }\n    if (fromIndex === toIndex) {\n      return;\n    }\n    let value = array[fromIndex];\n    let d = fromIndex < toIndex ? 1 : -1;\n    for (let i = fromIndex; i !== toIndex; i += d) {\n      array[i] = array[i + d];\n    }\n    array[toIndex] = value;\n  }\n\n  /**\n   * Reverse an array in-place.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param start - The index of the first element in the range to be\n   *   reversed, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   reversed, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or  `stop` index which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.reverse(data, 1, 3);  // [0, 3, 2, 1, 4]\n   * ArrayExt.reverse(data, 3);     // [0, 3, 2, 4, 1]\n   * ArrayExt.reverse(data);        // [1, 4, 2, 3, 0]\n   * ```\n   */\n  export function reverse<T>(\n    array: MutableArrayLike<T>,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    while (start < stop) {\n      let a = array[start];\n      let b = array[stop];\n      array[start++] = b;\n      array[stop--] = a;\n    }\n  }\n\n  /**\n   * Rotate the elements of an array in-place.\n   *\n   * @param array - The mutable array-like object of interest.\n   *\n   * @param delta - The amount of rotation to apply to the elements. A\n   *   positive value will rotate the elements to the left. A negative\n   *   value will rotate the elements to the right.\n   *\n   * @param start - The index of the first element in the range to be\n   *   rotated, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   rotated, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `delta`, `start`, or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2, 3, 4];\n   * ArrayExt.rotate(data, 2);        // [2, 3, 4, 0, 1]\n   * ArrayExt.rotate(data, -2);       // [0, 1, 2, 3, 4]\n   * ArrayExt.rotate(data, 10);       // [0, 1, 2, 3, 4]\n   * ArrayExt.rotate(data, 9);        // [4, 0, 1, 2, 3]\n   * ArrayExt.rotate(data, 2, 1, 3);  // [4, 2, 0, 1, 3]\n   * ```\n   */\n  export function rotate<T>(\n    array: MutableArrayLike<T>,\n    delta: number,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n <= 1) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    if (start >= stop) {\n      return;\n    }\n    let length = stop - start + 1;\n    if (delta > 0) {\n      delta = delta % length;\n    } else if (delta < 0) {\n      delta = ((delta % length) + length) % length;\n    }\n    if (delta === 0) {\n      return;\n    }\n    let pivot = start + delta;\n    reverse(array, start, pivot - 1);\n    reverse(array, pivot, stop);\n    reverse(array, start, stop);\n  }\n\n  /**\n   * Fill an array with a static value.\n   *\n   * @param array - The mutable array-like object to fill.\n   *\n   * @param value - The static value to use to fill the array.\n   *\n   * @param start - The index of the first element in the range to be\n   *   filled, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   filled, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * #### Notes\n   * If `stop < start` the fill will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * A `start` or `stop` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = ['one', 'two', 'three', 'four'];\n   * ArrayExt.fill(data, 'r');        // ['r', 'r', 'r', 'r']\n   * ArrayExt.fill(data, 'g', 1);     // ['r', 'g', 'g', 'g']\n   * ArrayExt.fill(data, 'b', 2, 3);  // ['r', 'g', 'b', 'b']\n   * ArrayExt.fill(data, 'z', 3, 1);  // ['z', 'z', 'b', 'z']\n   * ```\n   */\n  export function fill<T>(\n    array: MutableArrayLike<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): void {\n    let n = array.length;\n    if (n === 0) {\n      return;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let span: number;\n    if (stop < start) {\n      span = stop + 1 + (n - start);\n    } else {\n      span = stop - start + 1;\n    }\n    for (let i = 0; i < span; ++i) {\n      array[(start + i) % n] = value;\n    }\n  }\n\n  /**\n   * Insert a value into an array at a specific index.\n   *\n   * @param array - The array of interest.\n   *\n   * @param index - The index at which to insert the value. Negative\n   *   values are taken as an offset from the end of the array.\n   *\n   * @param value - The value to set at the specified index.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 1, 2];\n   * ArrayExt.insert(data, 0, -1);  // [-1, 0, 1, 2]\n   * ArrayExt.insert(data, 2, 12);  // [-1, 0, 12, 1, 2]\n   * ArrayExt.insert(data, -1, 7);  // [-1, 0, 12, 1, 7, 2]\n   * ArrayExt.insert(data, 6, 19);  // [-1, 0, 12, 1, 7, 2, 19]\n   * ```\n   */\n  export function insert<T>(array: Array<T>, index: number, value: T): void {\n    let n = array.length;\n    if (index < 0) {\n      index = Math.max(0, index + n);\n    } else {\n      index = Math.min(index, n);\n    }\n    for (let i = n; i > index; --i) {\n      array[i] = array[i - 1];\n    }\n    array[index] = value;\n  }\n\n  /**\n   * Remove and return a value at a specific index in an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param index - The index of the value to remove. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The value at the specified index, or `undefined` if the\n   *   index is out of range.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Undefined Behavior\n   * An `index` which is non-integral.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeAt(data, 2);   // 23\n   * ArrayExt.removeAt(data, -2);  // 12\n   * ArrayExt.removeAt(data, 10);  // undefined;\n   * ```\n   */\n  export function removeAt<T>(array: Array<T>, index: number): T | undefined {\n    let n = array.length;\n    if (index < 0) {\n      index += n;\n    }\n    if (index < 0 || index >= n) {\n      return undefined;\n    }\n    let value = array[index];\n    for (let i = index + 1; i < n; ++i) {\n      array[i - 1] = array[i];\n    }\n    array.length = n - 1;\n    return value;\n  }\n\n  /**\n   * Remove the first occurrence of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the removed value, or `-1` if the value\n   *   is not contained in the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeFirstOf(data, 12);        // 1\n   * ArrayExt.removeFirstOf(data, 17);        // -1\n   * ArrayExt.removeFirstOf(data, 39, 3);     // -1\n   * ArrayExt.removeFirstOf(data, 39, 3, 2);  // 2\n   * ```\n   */\n  export function removeFirstOf<T>(\n    array: Array<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let index = firstIndexOf(array, value, start, stop);\n    if (index !== -1) {\n      removeAt(array, index);\n    }\n    return index;\n  }\n\n  /**\n   * Remove the last occurrence of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The index of the removed value, or `-1` if the value\n   *   is not contained in the array.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeLastOf(data, 12);        // 5\n   * ArrayExt.removeLastOf(data, 17);        // -1\n   * ArrayExt.removeLastOf(data, 39, 2);     // -1\n   * ArrayExt.removeLastOf(data, 39, 2, 3);  // 3\n   * ```\n   */\n  export function removeLastOf<T>(\n    array: Array<T>,\n    value: T,\n    start = -1,\n    stop = 0\n  ): number {\n    let index = lastIndexOf(array, value, start, stop);\n    if (index !== -1) {\n      removeAt(array, index);\n    }\n    return index;\n  }\n\n  /**\n   * Remove all occurrences of a value from an array.\n   *\n   * @param array - The array of interest.\n   *\n   * @param value - The value to remove from the array. Values are\n   *   compared using strict `===` equality.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The number of elements removed from the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will conceptually wrap at the end of\n   * the array, however the array will be traversed front-to-back.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * let data = [14, 12, 23, 39, 14, 12, 19, 14];\n   * ArrayExt.removeAllOf(data, 12);        // 2\n   * ArrayExt.removeAllOf(data, 17);        // 0\n   * ArrayExt.removeAllOf(data, 14, 1, 4);  // 1\n   * ```\n   */\n  export function removeAllOf<T>(\n    array: Array<T>,\n    value: T,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let count = 0;\n    for (let i = 0; i < n; ++i) {\n      if (start <= stop && i >= start && i <= stop && array[i] === value) {\n        count++;\n      } else if (\n        stop < start &&\n        (i <= stop || i >= start) &&\n        array[i] === value\n      ) {\n        count++;\n      } else if (count > 0) {\n        array[i - count] = array[i];\n      }\n    }\n    if (count > 0) {\n      array.length = n - count;\n    }\n    return count;\n  }\n\n  /**\n   * Remove the first occurrence of a value which matches a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The removed `{ index, value }`, which will be `-1` and\n   *   `undefined` if the value is not contained in the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeFirstWhere(data, isEven);     // { index: 0, value: 0 }\n   * ArrayExt.removeFirstWhere(data, isEven, 2);  // { index: 3, value: 14 }\n   * ArrayExt.removeFirstWhere(data, isEven, 4);  // { index: -1, value: undefined }\n   * ```\n   */\n  export function removeFirstWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): { index: number; value: T | undefined } {\n    let value: T | undefined;\n    let index = findFirstIndex(array, fn, start, stop);\n    if (index !== -1) {\n      value = removeAt(array, index);\n    }\n    return { index, value };\n  }\n\n  /**\n   * Remove the last occurrence of a value which matches a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The removed `{ index, value }`, which will be `-1` and\n   *   `undefined` if the value is not contained in the array.\n   *\n   * #### Notes\n   * If `start < stop` the search will wrap at the end of the array.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * let data = [0, 12, 23, 39, 14, 12, 75];\n   * ArrayExt.removeLastWhere(data, isEven);        // { index: 5, value: 12 }\n   * ArrayExt.removeLastWhere(data, isEven, 2);     // { index: 1, value: 12 }\n   * ArrayExt.removeLastWhere(data, isEven, 2, 1);  // { index: -1, value: undefined }\n   * ```\n   */\n  export function removeLastWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = -1,\n    stop = 0\n  ): { index: number; value: T | undefined } {\n    let value: T | undefined;\n    let index = findLastIndex(array, fn, start, stop);\n    if (index !== -1) {\n      value = removeAt(array, index);\n    }\n    return { index, value };\n  }\n\n  /**\n   * Remove all occurrences of values which match a predicate.\n   *\n   * @param array - The array of interest.\n   *\n   * @param fn - The predicate function to apply to the values.\n   *\n   * @param start - The index of the first element in the range to be\n   *   searched, inclusive. The default value is `0`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @param stop - The index of the last element in the range to be\n   *   searched, inclusive. The default value is `-1`. Negative values\n   *   are taken as an offset from the end of the array.\n   *\n   * @returns The number of elements removed from the array.\n   *\n   * #### Notes\n   * If `stop < start` the search will conceptually wrap at the end of\n   * the array, however the array will be traversed front-to-back.\n   *\n   * #### Complexity\n   * Linear.\n   *\n   * #### Example\n   * ```typescript\n   * import { ArrayExt } from '@lumino/algorithm';\n   *\n   * function isEven(value: number): boolean {\n   *   return value % 2 === 0;\n   * }\n   *\n   * function isNegative(value: number): boolean {\n   *   return value < 0;\n   * }\n   *\n   * let data = [0, 12, -13, -9, 23, 39, 14, -15, 12, 75];\n   * ArrayExt.removeAllWhere(data, isEven);            // 4\n   * ArrayExt.removeAllWhere(data, isNegative, 0, 3);  // 2\n   * ```\n   */\n  export function removeAllWhere<T>(\n    array: Array<T>,\n    fn: (value: T, index: number) => boolean,\n    start = 0,\n    stop = -1\n  ): number {\n    let n = array.length;\n    if (n === 0) {\n      return 0;\n    }\n    if (start < 0) {\n      start = Math.max(0, start + n);\n    } else {\n      start = Math.min(start, n - 1);\n    }\n    if (stop < 0) {\n      stop = Math.max(0, stop + n);\n    } else {\n      stop = Math.min(stop, n - 1);\n    }\n    let count = 0;\n    for (let i = 0; i < n; ++i) {\n      if (start <= stop && i >= start && i <= stop && fn(array[i], i)) {\n        count++;\n      } else if (stop < start && (i <= stop || i >= start) && fn(array[i], i)) {\n        count++;\n      } else if (count > 0) {\n        array[i - count] = array[i];\n      }\n    }\n    if (count > 0) {\n      array.length = n - count;\n    }\n    return count;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Chain together several iterables.\n *\n * @deprecated\n *\n * @param objects - The iterable objects of interest.\n *\n * @returns An iterator which yields the values of the iterables\n *   in the order in which they are supplied.\n *\n * #### Example\n * ```typescript\n * import { chain } from '@lumino/algorithm';\n *\n * let data1 = [1, 2, 3];\n * let data2 = [4, 5, 6];\n *\n * let stream = chain(data1, data2);\n *\n * Array.from(stream);  // [1, 2, 3, 4, 5, 6]\n * ```\n */\nexport function* chain<T>(...objects: Iterable<T>[]): IterableIterator<T> {\n  for (const object of objects) {\n    yield* object;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an empty iterator.\n *\n * @returns A new iterator which yields nothing.\n *\n * #### Example\n * ```typescript\n * import { empty } from '@lumino/algorithm';\n *\n * let stream = empty<number>();\n *\n * Array.from(stream);  // []\n * ```\n */\n// eslint-disable-next-line require-yield\nexport function* empty<T>(): IterableIterator<T> {\n  return;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Enumerate an iterable object.\n *\n * @param object - The iterable object of interest.\n *\n * @param start - The starting enum value. The default is `0`.\n *\n * @returns An iterator which yields the enumerated values.\n *\n * #### Example\n * ```typescript\n * import { enumerate } from '@lumino/algorithm';\n *\n * let data = ['foo', 'bar', 'baz'];\n *\n * let stream = enumerate(data, 1);\n *\n * Array.from(stream);  // [[1, 'foo'], [2, 'bar'], [3, 'baz']]\n * ```\n */\nexport function* enumerate<T>(\n  object: Iterable<T>,\n  start = 0\n): IterableIterator<[number, T]> {\n  for (const value of object) {\n    yield [start++, value];\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Filter an iterable for values which pass a test.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns An iterator which yields the values which pass the test.\n *\n * #### Example\n * ```typescript\n * import { filter } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = filter(data, value => value % 2 === 0);\n *\n * Array.from(stream);  // [2, 4, 6]\n * ```\n */\nexport function* filter<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): IterableIterator<T> {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      yield value;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Find the first value in an iterable which matches a predicate.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The predicate function to apply to the values.\n *\n * @returns The first matching value, or `undefined` if no matching\n *   value is found.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { find } from '@lumino/algorithm';\n *\n * interface IAnimal { species: string, name: string };\n *\n * function isCat(value: IAnimal): boolean {\n *   return value.species === 'cat';\n * }\n *\n * let data: IAnimal[] = [\n *   { species: 'dog', name: 'spot' },\n *   { species: 'cat', name: 'fluffy' },\n *   { species: 'alligator', name: 'pocho' }\n * ];\n *\n * find(data, isCat).name;  // 'fluffy'\n * ```\n */\nexport function find<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): T | undefined {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return value;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Find the index of the first value which matches a predicate.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The predicate function to apply to the values.\n *\n * @returns The index of the first matching value, or `-1` if no\n *   matching value is found.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { findIndex } from '@lumino/algorithm';\n *\n * interface IAnimal { species: string, name: string };\n *\n * function isCat(value: IAnimal): boolean {\n *   return value.species === 'cat';\n * }\n *\n * let data: IAnimal[] = [\n *   { species: 'dog', name: 'spot' },\n *   { species: 'cat', name: 'fluffy' },\n *   { species: 'alligator', name: 'pocho' }\n * ];\n *\n * findIndex(data, isCat);  // 1\n * ```\n */\nexport function findIndex<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): number {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return index - 1;\n    }\n  }\n  return -1;\n}\n\n/**\n * Find the minimum value in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns The minimum value in the iterable. If multiple values are\n *   equivalent to the minimum, the left-most value is returned. If\n *   the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { min } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * min([7, 4, 0, 3, 9, 4], numberCmp);  // 0\n * ```\n */\nexport function min<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): T | undefined {\n  let result: T | undefined = undefined;\n  for (const value of object) {\n    if (result === undefined) {\n      result = value;\n      continue;\n    }\n    if (fn(value, result) < 0) {\n      result = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Find the maximum value in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns The maximum value in the iterable. If multiple values are\n *   equivalent to the maximum, the left-most value is returned. If\n *   the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { max } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * max([7, 4, 0, 3, 9, 4], numberCmp);  // 9\n * ```\n */\nexport function max<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): T | undefined {\n  let result: T | undefined = undefined;\n  for (const value of object) {\n    if (result === undefined) {\n      result = value;\n      continue;\n    }\n    if (fn(value, result) > 0) {\n      result = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Find the minimum and maximum values in an iterable.\n *\n * @param object - The iterable object to search.\n *\n * @param fn - The 3-way comparison function to apply to the values.\n *   It should return `< 0` if the first value is less than the second.\n *   `0` if the values are equivalent, or `> 0` if the first value is\n *   greater than the second.\n *\n * @returns A 2-tuple of the `[min, max]` values in the iterable. If\n *   multiple values are equivalent, the left-most values are returned.\n *   If the iterable is empty, this returns `undefined`.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { minmax } from '@lumino/algorithm';\n *\n * function numberCmp(a: number, b: number): number {\n *   return a - b;\n * }\n *\n * minmax([7, 4, 0, 3, 9, 4], numberCmp);  // [0, 9]\n * ```\n */\nexport function minmax<T>(\n  object: Iterable<T>,\n  fn: (first: T, second: T) => number\n): [T, T] | undefined {\n  let empty = true;\n  let vmin: T;\n  let vmax: T;\n  for (const value of object) {\n    if (empty) {\n      vmin = value;\n      vmax = value;\n      empty = false;\n    } else if (fn(value, vmin!) < 0) {\n      vmin = value;\n    } else if (fn(value, vmax!) > 0) {\n      vmax = value;\n    }\n  }\n  return empty ? undefined : [vmin!, vmax!];\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an array from an iterable of values.\n *\n * @deprecated\n *\n * @param object - The iterable object of interest.\n *\n * @returns A new array of values from the given object.\n *\n * #### Example\n * ```typescript\n * import { toArray } from '@lumino/algorithm';\n *\n * let stream = [1, 2, 3, 4, 5, 6][Symbol.iterator]();\n *\n * toArray(stream);  // [1, 2, 3, 4, 5, 6];\n * ```\n */\nexport function toArray<T>(object: Iterable<T>): T[] {\n  return Array.from(object);\n}\n\n/**\n * Create an object from an iterable of key/value pairs.\n *\n * @param object - The iterable object of interest.\n *\n * @returns A new object mapping keys to values.\n *\n * #### Example\n * ```typescript\n * import { toObject } from '@lumino/algorithm';\n *\n * let data: [string, number][] = [['one', 1], ['two', 2], ['three', 3]];\n *\n * toObject(data);  // { one: 1, two: 2, three: 3 }\n * ```\n */\nexport function toObject<T>(object: Iterable<[string, T]>): {\n  [key: string]: T;\n} {\n  const result: { [key: string]: T } = {};\n  for (const [key, value] of object) {\n    result[key] = value;\n  }\n  return result;\n}\n\n/**\n * Invoke a function for each value in an iterable.\n *\n * @deprecated\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The callback function to invoke for each value.\n *\n * #### Notes\n * Iteration can be terminated early by returning `false` from the\n * callback function.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { each } from '@lumino/algorithm';\n *\n * let data = [5, 7, 0, -2, 9];\n *\n * each(data, value => { console.log(value); });\n * ```\n */\nexport function each<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean | void\n): void {\n  let index = 0;\n  for (const value of object) {\n    if (false === fn(value, index++)) {\n      return;\n    }\n  }\n}\n\n/**\n * Test whether all values in an iterable satisfy a predicate.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns `true` if all values pass the test, `false` otherwise.\n *\n * #### Notes\n * Iteration terminates on the first `false` predicate result.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { every } from '@lumino/algorithm';\n *\n * let data = [5, 7, 1];\n *\n * every(data, value => value % 2 === 0);  // false\n * every(data, value => value % 2 === 1);  // true\n * ```\n */\nexport function every<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): boolean {\n  let index = 0;\n  for (const value of object) {\n    if (false === fn(value, index++)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Test whether any value in an iterable satisfies a predicate.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The predicate function to invoke for each value.\n *\n * @returns `true` if any value passes the test, `false` otherwise.\n *\n * #### Notes\n * Iteration terminates on the first `true` predicate result.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { some } from '@lumino/algorithm';\n *\n * let data = [5, 7, 1];\n *\n * some(data, value => value === 7);  // true\n * some(data, value => value === 3);  // false\n * ```\n */\nexport function some<T>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => boolean\n): boolean {\n  let index = 0;\n  for (const value of object) {\n    if (fn(value, index++)) {\n      return true;\n    }\n  }\n  return false;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Transform the values of an iterable with a mapping function.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The mapping function to invoke for each value.\n *\n * @returns An iterator which yields the transformed values.\n *\n * #### Example\n * ```typescript\n * import { map } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3];\n *\n * let stream = map(data, value => value * 2);\n *\n * Array.from(stream);  // [2, 4, 6]\n * ```\n */\nexport function* map<T, U>(\n  object: Iterable<T>,\n  fn: (value: T, index: number) => U\n): IterableIterator<U> {\n  let index = 0;\n  for (const value of object) {\n    yield fn(value, index++);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n/**\n * Create an iterator of evenly spaced values.\n *\n * @param start - The starting value for the range, inclusive.\n *\n * @param stop - The stopping value for the range, exclusive.\n *\n * @param step - The distance between each value.\n *\n * @returns An iterator which produces evenly spaced values.\n *\n * #### Notes\n * In the single argument form of `range(stop)`, `start` defaults to\n * `0` and `step` defaults to `1`.\n *\n * In the two argument form of `range(start, stop)`, `step` defaults\n * to `1`.\n *\n * #### Example\n * ```typescript\n * import { range } from '@lumino/algorithm';\n *\n * let stream = range(2, 4);\n *\n * Array.from(stream);  // [2, 3]\n * ```\n */\nexport function* range(\n  start: number,\n  stop?: number,\n  step?: number\n): IterableIterator<number> {\n  if (stop === undefined) {\n    stop = start;\n    start = 0;\n    step = 1;\n  } else if (step === undefined) {\n    step = 1;\n  }\n  const length = Private.rangeLength(start, stop, step);\n  for (let index = 0; index < length; index++) {\n    yield start + step * index;\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * Compute the effective length of a range.\n   *\n   * @param start - The starting value for the range, inclusive.\n   *\n   * @param stop - The stopping value for the range, exclusive.\n   *\n   * @param step - The distance between each value.\n   *\n   * @returns The number of steps need to traverse the range.\n   */\n  export function rangeLength(\n    start: number,\n    stop: number,\n    step: number\n  ): number {\n    if (step === 0) {\n      return Infinity;\n    }\n    if (start > stop && step > 0) {\n      return 0;\n    }\n    if (start < stop && step < 0) {\n      return 0;\n    }\n    return Math.ceil((stop - start) / step);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Summarize all values in an iterable using a reducer function.\n *\n * @param object - The iterable object of interest.\n *\n * @param fn - The reducer function to invoke for each value.\n *\n * @param initial - The initial value to start accumulation.\n *\n * @returns The final accumulated value.\n *\n * #### Notes\n * The `reduce` function follows the conventions of `Array#reduce`.\n *\n * If the iterator is empty, an initial value is required. That value\n * will be used as the return value. If no initial value is provided,\n * an error will be thrown.\n *\n * If the iterator contains a single item and no initial value is\n * provided, the single item is used as the return value.\n *\n * Otherwise, the reducer is invoked for each element in the iterable.\n * If an initial value is not provided, the first element will be used\n * as the initial accumulated value.\n *\n * #### Complexity\n * Linear.\n *\n * #### Example\n * ```typescript\n * import { reduce } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5];\n *\n * let sum = reduce(data, (a, value) => a + value);  // 15\n * ```\n */\nexport function reduce<T>(\n  object: Iterable<T>,\n  fn: (accumulator: T, value: T, index: number) => T\n): T;\nexport function reduce<T, U>(\n  object: Iterable<T>,\n  fn: (accumulator: U, value: T, index: number) => U,\n  initial: U\n): U;\nexport function reduce<T>(\n  object: Iterable<T>,\n  fn: (accumulator: any, value: T, index: number) => any,\n  initial?: unknown\n): any {\n  // Setup the iterator and fetch the first value.\n  const it = object[Symbol.iterator]();\n  let index = 0;\n  let first = it.next();\n\n  // An empty iterator and no initial value is an error.\n  if (first.done && initial === undefined) {\n    throw new TypeError('Reduce of empty iterable with no initial value.');\n  }\n\n  // If the iterator is empty, return the initial value.\n  if (first.done) {\n    return initial;\n  }\n\n  // If the iterator has a single item and no initial value, the\n  // reducer is not invoked and the first item is the return value.\n  let second = it.next();\n  if (second.done && initial === undefined) {\n    return first.value;\n  }\n\n  // If iterator has a single item and an initial value is provided,\n  // the reducer is invoked and that result is the return value.\n  if (second.done) {\n    return fn(initial, first.value, index++);\n  }\n\n  // Setup the initial accumlated value.\n  let accumulator: any;\n  if (initial === undefined) {\n    accumulator = fn(first.value, second.value, index++);\n  } else {\n    accumulator = fn(fn(initial, first.value, index++), second.value, index++);\n  }\n\n  // Iterate the rest of the values, updating the accumulator.\n  let next: IteratorResult<T>;\n  while (!(next = it.next()).done) {\n    accumulator = fn(accumulator, next.value, index++);\n  }\n\n  // Return the final accumulated value.\n  return accumulator;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Create an iterator which repeats a value a number of times.\n *\n * @deprecated\n *\n * @param value - The value to repeat.\n *\n * @param count - The number of times to repeat the value.\n *\n * @returns A new iterator which repeats the specified value.\n *\n * #### Example\n * ```typescript\n * import { repeat } from '@lumino/algorithm';\n *\n * let stream = repeat(7, 3);\n *\n * Array.from(stream);  // [7, 7, 7]\n * ```\n */\nexport function* repeat<T>(value: T, count: number): IterableIterator<T> {\n  while (0 < count--) {\n    yield value;\n  }\n}\n\n/**\n * Create an iterator which yields a value a single time.\n *\n * @deprecated\n *\n * @param value - The value to wrap in an iterator.\n *\n * @returns A new iterator which yields the value a single time.\n *\n * #### Example\n * ```typescript\n * import { once } from '@lumino/algorithm';\n *\n * let stream = once(7);\n *\n * Array.from(stream);  // [7]\n * ```\n */\nexport function* once<T>(value: T): IterableIterator<T> {\n  yield value;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * An object which can produce a reverse iterator over its values.\n */\nexport interface IRetroable<T> {\n  /**\n   * Get a reverse iterator over the object's values.\n   *\n   * @returns An iterator which yields the object's values in reverse.\n   */\n  retro(): IterableIterator<T>;\n}\n\n/**\n * Create an iterator for a retroable object.\n *\n * @param object - The retroable or array-like object of interest.\n *\n * @returns An iterator which traverses the object's values in reverse.\n *\n * #### Example\n * ```typescript\n * import { retro } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = retro(data);\n *\n * Array.from(stream);  // [6, 5, 4, 3, 2, 1]\n * ```\n */\nexport function* retro<T>(\n  object: IRetroable<T> | ArrayLike<T>\n): IterableIterator<T> {\n  if (typeof (object as IRetroable<T>).retro === 'function') {\n    yield* (object as IRetroable<T>).retro();\n  } else {\n    for (let index = (object as ArrayLike<T>).length - 1; index > -1; index--) {\n      yield (object as ArrayLike<T>)[index];\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Topologically sort an iterable of edges.\n *\n * @param edges - The iterable object of edges to sort.\n *   An edge is represented as a 2-tuple of `[fromNode, toNode]`.\n *\n * @returns The topologically sorted array of nodes.\n *\n * #### Notes\n * If a cycle is present in the graph, the cycle will be ignored and\n * the return value will be only approximately sorted.\n *\n * #### Example\n * ```typescript\n * import { topologicSort } from '@lumino/algorithm';\n *\n * let data = [\n *   ['d', 'e'],\n *   ['c', 'd'],\n *   ['a', 'b'],\n *   ['b', 'c']\n * ];\n *\n * topologicSort(data);  // ['a', 'b', 'c', 'd', 'e']\n * ```\n */\nexport function topologicSort<T>(edges: Iterable<[T, T]>): T[] {\n  // Setup the shared sorting state.\n  let sorted: T[] = [];\n  let visited = new Set<T>();\n  let graph = new Map<T, T[]>();\n\n  // Add the edges to the graph.\n  for (const edge of edges) {\n    addEdge(edge);\n  }\n\n  // Visit each node in the graph.\n  for (const [k] of graph) {\n    visit(k);\n  }\n\n  // Return the sorted results.\n  return sorted;\n\n  // Add an edge to the graph.\n  function addEdge(edge: [T, T]): void {\n    let [fromNode, toNode] = edge;\n    let children = graph.get(toNode);\n    if (children) {\n      children.push(fromNode);\n    } else {\n      graph.set(toNode, [fromNode]);\n    }\n  }\n\n  // Recursively visit the node.\n  function visit(node: T): void {\n    if (visited.has(node)) {\n      return;\n    }\n    visited.add(node);\n    let children = graph.get(node);\n    if (children) {\n      for (const child of children) {\n        visit(child);\n      }\n    }\n    sorted.push(node);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Iterate over an iterable using a stepped increment.\n *\n * @param object - The iterable object of interest.\n *\n * @param step - The distance to step on each iteration. A value\n *   of less than `1` will behave the same as a value of `1`.\n *\n * @returns An iterator which traverses the iterable step-wise.\n *\n * #### Example\n * ```typescript\n * import { stride } from '@lumino/algorithm';\n *\n * let data = [1, 2, 3, 4, 5, 6];\n *\n * let stream = stride(data, 2);\n *\n * Array.from(stream);  // [1, 3, 5];\n * ```\n */\nexport function* stride<T>(\n  object: Iterable<T>,\n  step: number\n): IterableIterator<T> {\n  let count = 0;\n  for (const value of object) {\n    if (0 === count++ % step) {\n      yield value;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for string-specific algorithms.\n */\nexport namespace StringExt {\n  /**\n   * Find the indices of characters in a source text.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The matched indices, or `null` if there is no match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * In order for there to be a match, all of the characters in `query`\n   * **must** appear in `source` in the order given by `query`.\n   *\n   * Characters are matched using strict `===` equality.\n   */\n  export function findIndices(\n    source: string,\n    query: string,\n    start = 0\n  ): number[] | null {\n    let indices = new Array<number>(query.length);\n    for (let i = 0, j = start, n = query.length; i < n; ++i, ++j) {\n      j = source.indexOf(query[i], j);\n      if (j === -1) {\n        return null;\n      }\n      indices[i] = j;\n    }\n    return indices;\n  }\n\n  /**\n   * The result of a string match function.\n   */\n  export interface IMatchResult {\n    /**\n     * A score which indicates the strength of the match.\n     *\n     * The documentation of a given match function should specify\n     * whether a lower or higher score is a stronger match.\n     */\n    score: number;\n\n    /**\n     * The indices of the matched characters in the source text.\n     *\n     * The indices will appear in increasing order.\n     */\n    indices: number[];\n  }\n\n  /**\n   * A string matcher which uses a sum-of-squares algorithm.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The match result, or `null` if there is no match.\n   *   A lower `score` represents a stronger match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * This scoring algorithm uses a sum-of-squares approach to determine\n   * the score. In order for there to be a match, all of the characters\n   * in `query` **must** appear in `source` in order. The index of each\n   * matching character is squared and added to the score. This means\n   * that early and consecutive character matches are preferred, while\n   * late matches are heavily penalized.\n   */\n  export function matchSumOfSquares(\n    source: string,\n    query: string,\n    start = 0\n  ): IMatchResult | null {\n    let indices = findIndices(source, query, start);\n    if (!indices) {\n      return null;\n    }\n    let score = 0;\n    for (let i = 0, n = indices.length; i < n; ++i) {\n      let j = indices[i] - start;\n      score += j * j;\n    }\n    return { score, indices };\n  }\n\n  /**\n   * A string matcher which uses a sum-of-deltas algorithm.\n   *\n   * @param source - The source text which should be searched.\n   *\n   * @param query - The characters to locate in the source text.\n   *\n   * @param start - The index to start the search.\n   *\n   * @returns The match result, or `null` if there is no match.\n   *   A lower `score` represents a stronger match.\n   *\n   * #### Complexity\n   * Linear on `sourceText`.\n   *\n   * #### Notes\n   * This scoring algorithm uses a sum-of-deltas approach to determine\n   * the score. In order for there to be a match, all of the characters\n   * in `query` **must** appear in `source` in order. The delta between\n   * the indices are summed to create the score. This means that groups\n   * of matched characters are preferred, while fragmented matches are\n   * penalized.\n   */\n  export function matchSumOfDeltas(\n    source: string,\n    query: string,\n    start = 0\n  ): IMatchResult | null {\n    let indices = findIndices(source, query, start);\n    if (!indices) {\n      return null;\n    }\n    let score = 0;\n    let last = start - 1;\n    for (let i = 0, n = indices.length; i < n; ++i) {\n      let j = indices[i];\n      score += j - last - 1;\n      last = j;\n    }\n    return { score, indices };\n  }\n\n  /**\n   * Highlight the matched characters of a source text.\n   *\n   * @param source - The text which should be highlighted.\n   *\n   * @param indices - The indices of the matched characters. They must\n   *   appear in increasing order and must be in bounds of the source.\n   *\n   * @param fn - The function to apply to the matched chunks.\n   *\n   * @returns An array of unmatched and highlighted chunks.\n   */\n  export function highlight<T>(\n    source: string,\n    indices: ReadonlyArray<number>,\n    fn: (chunk: string) => T\n  ): Array<string | T> {\n    // Set up the result array.\n    let result: Array<string | T> = [];\n\n    // Set up the counter variables.\n    let k = 0;\n    let last = 0;\n    let n = indices.length;\n\n    // Iterator over each index.\n    while (k < n) {\n      // Set up the chunk indices.\n      let i = indices[k];\n      let j = indices[k];\n\n      // Advance the right chunk index until it's non-contiguous.\n      while (++k < n && indices[k] === j + 1) {\n        j++;\n      }\n\n      // Extract the unmatched text.\n      if (last < i) {\n        result.push(source.slice(last, i));\n      }\n\n      // Extract and highlight the matched text.\n      if (i < j + 1) {\n        result.push(fn(source.slice(i, j + 1)));\n      }\n\n      // Update the last visited index.\n      last = j + 1;\n    }\n\n    // Extract any remaining unmatched text.\n    if (last < source.length) {\n      result.push(source.slice(last));\n    }\n\n    // Return the highlighted result.\n    return result;\n  }\n\n  /**\n   * A 3-way string comparison function.\n   *\n   * @param a - The first string of interest.\n   *\n   * @param b - The second string of interest.\n   *\n   * @returns `-1` if `a < b`, else `1` if `a > b`, else `0`.\n   */\n  export function cmp(a: string, b: string): number {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * Take a fixed number of items from an iterable.\n *\n * @param object - The iterable object of interest.\n *\n * @param count - The number of items to take from the iterable.\n *\n * @returns An iterator which yields the specified number of items\n *   from the source iterable.\n *\n * #### Notes\n * The returned iterator will exhaust early if the source iterable\n * contains an insufficient number of items.\n *\n * #### Example\n * ```typescript\n * import { take } from '@lumino/algorithm';\n *\n * let stream = take([5, 4, 3, 2, 1, 0, -1], 3);\n *\n * Array.from(stream);  // [5, 4, 3]\n * ```\n */\nexport function* take<T>(\n  object: Iterable<T>,\n  count: number\n): IterableIterator<T> {\n  if (count < 1) {\n    return;\n  }\n  const it = object[Symbol.iterator]();\n  let item: IteratorResult<T>;\n  while (0 < count-- && !(item = it.next()).done) {\n    yield item.value;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\nimport { every } from './iter';\n\n/**\n * Iterate several iterables in lockstep.\n *\n * @param objects - The iterable objects of interest.\n *\n * @returns An iterator which yields successive tuples of values where\n *   each value is taken in turn from the provided iterables. It will\n *   be as long as the shortest provided iterable.\n *\n * #### Example\n * ```typescript\n * import { zip } from '@lumino/algorithm';\n *\n * let data1 = [1, 2, 3];\n * let data2 = [4, 5, 6];\n *\n * let stream = zip(data1, data2);\n *\n * Array.from(stream);  // [[1, 4], [2, 5], [3, 6]]\n * ```\n */\nexport function* zip<T>(...objects: Iterable<T>[]): IterableIterator<T[]> {\n  const iters = objects.map(obj => obj[Symbol.iterator]());\n  let tuple = iters.map(it => it.next());\n  for (; every(tuple, item => !item.done); tuple = iters.map(it => it.next())) {\n    yield tuple.map(item => item.value);\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { ArrayExt } from '@lumino/algorithm';\nimport {\n  DisposableDelegate,\n  DisposableSet,\n  IDisposable\n} from '@lumino/disposable';\nimport { Message } from '@lumino/messaging';\nimport { Panel, PanelLayout, Widget } from '@lumino/widgets';\nimport { IStatusBar } from './tokens';\n\n/**\n * Main status bar object which contains all items.\n */\nexport class StatusBar extends Widget implements IStatusBar {\n  constructor() {\n    super();\n    this.addClass('jp-StatusBar-Widget');\n\n    const rootLayout = (this.layout = new PanelLayout());\n\n    const leftPanel = (this._leftSide = new Panel());\n    const middlePanel = (this._middlePanel = new Panel());\n    const rightPanel = (this._rightSide = new Panel());\n\n    leftPanel.addClass('jp-StatusBar-Left');\n    middlePanel.addClass('jp-StatusBar-Middle');\n    rightPanel.addClass('jp-StatusBar-Right');\n\n    rootLayout.addWidget(leftPanel);\n    rootLayout.addWidget(middlePanel);\n    rootLayout.addWidget(rightPanel);\n  }\n\n  /**\n   * Register a new status item.\n   *\n   * @param id - a unique id for the status item.\n   *\n   * @param statusItem - The item to add to the status bar.\n   */\n  registerStatusItem(id: string, statusItem: IStatusBar.IItem): IDisposable {\n    if (id in this._statusItems) {\n      throw new Error(`Status item ${id} already registered.`);\n    }\n\n    // Populate defaults for the optional properties of the status item.\n    const fullStatusItem = {\n      ...Private.statusItemDefaults,\n      ...statusItem\n    } as Private.IFullItem;\n    const { align, item, rank } = fullStatusItem;\n\n    // Connect the activeStateChanged signal to refreshing the status item,\n    // if the signal was provided.\n    const onActiveStateChanged = () => {\n      this._refreshItem(id);\n    };\n    if (fullStatusItem.activeStateChanged) {\n      fullStatusItem.activeStateChanged.connect(onActiveStateChanged);\n    }\n\n    const rankItem = { id, rank };\n\n    fullStatusItem.item.addClass('jp-StatusBar-Item');\n    this._statusItems[id] = fullStatusItem;\n\n    if (align === 'left') {\n      const insertIndex = this._findInsertIndex(this._leftRankItems, rankItem);\n      if (insertIndex === -1) {\n        this._leftSide.addWidget(item);\n        this._leftRankItems.push(rankItem);\n      } else {\n        ArrayExt.insert(this._leftRankItems, insertIndex, rankItem);\n        this._leftSide.insertWidget(insertIndex, item);\n      }\n    } else if (align === 'right') {\n      const insertIndex = this._findInsertIndex(this._rightRankItems, rankItem);\n      if (insertIndex === -1) {\n        this._rightSide.addWidget(item);\n        this._rightRankItems.push(rankItem);\n      } else {\n        ArrayExt.insert(this._rightRankItems, insertIndex, rankItem);\n        this._rightSide.insertWidget(insertIndex, item);\n      }\n    } else {\n      this._middlePanel.addWidget(item);\n    }\n    this._refreshItem(id); // Initially refresh the status item.\n\n    const disposable = new DisposableDelegate(() => {\n      delete this._statusItems[id];\n      if (fullStatusItem.activeStateChanged) {\n        fullStatusItem.activeStateChanged.disconnect(onActiveStateChanged);\n      }\n      item.parent = null;\n      item.dispose();\n    });\n    this._disposables.add(disposable);\n    return disposable;\n  }\n\n  /**\n   * Dispose of the status bar.\n   */\n  dispose(): void {\n    this._leftRankItems.length = 0;\n    this._rightRankItems.length = 0;\n    this._disposables.dispose();\n    super.dispose();\n  }\n\n  /**\n   * Handle an 'update-request' message to the status bar.\n   */\n  protected onUpdateRequest(msg: Message): void {\n    this._refreshAll();\n    super.onUpdateRequest(msg);\n  }\n\n  private _findInsertIndex(\n    side: Private.IRankItem[],\n    newItem: Private.IRankItem\n  ): number {\n    return ArrayExt.findFirstIndex(side, item => item.rank > newItem.rank);\n  }\n\n  private _refreshItem(id: string) {\n    const statusItem = this._statusItems[id];\n    if (statusItem.isActive()) {\n      statusItem.item.show();\n      statusItem.item.update();\n    } else {\n      statusItem.item.hide();\n    }\n  }\n\n  private _refreshAll(): void {\n    Object.keys(this._statusItems).forEach(id => {\n      this._refreshItem(id);\n    });\n  }\n\n  private _leftRankItems: Private.IRankItem[] = [];\n  private _rightRankItems: Private.IRankItem[] = [];\n  private _statusItems: { [id: string]: Private.IFullItem } = {};\n  private _disposables = new DisposableSet();\n  private _leftSide: Panel;\n  private _middlePanel: Panel;\n  private _rightSide: Panel;\n}\n\n/**\n * A namespace for private functionality.\n */\nnamespace Private {\n  type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n  /**\n   * Default options for a status item, less the item itself.\n   */\n  export const statusItemDefaults: Omit<IStatusBar.IItem, 'item'> = {\n    align: 'left',\n    rank: 0,\n    isActive: () => true,\n    activeStateChanged: undefined\n  };\n\n  /**\n   * An interface for storing the rank of a status item.\n   */\n  export interface IRankItem {\n    id: string;\n    rank: number;\n  }\n\n  export type DefaultKeys = 'align' | 'rank' | 'isActive';\n\n  /**\n   * Type of statusbar item with defaults filled in.\n   */\n  export type IFullItem = Required<Pick<IStatusBar.IItem, DefaultKeys>> &\n    Omit<IStatusBar.IItem, DefaultKeys>;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { Token } from '@lumino/coreutils';\nimport { IDisposable } from '@lumino/disposable';\nimport { ISignal } from '@lumino/signaling';\nimport { Widget } from '@lumino/widgets';\n\n// tslint:disable-next-line:variable-name\nexport const IStatusBar = new Token<IStatusBar>(\n  '@jupyterlab/statusbar:IStatusBar',\n  'A service for the status bar on the application. Use this if you want to add new status bar items.'\n);\n\n/**\n * Main status bar object which contains all widgets.\n */\nexport interface IStatusBar {\n  /**\n   * Register a new status item.\n   *\n   * @param id - a unique id for the status item.\n   *\n   * @param options - The options for how to add the status item.\n   *\n   * @returns an `IDisposable` that can be disposed to remove the item.\n   */\n  registerStatusItem(id: string, statusItem: IStatusBar.IItem): IDisposable;\n}\n\n/**\n * A namespace for status bar statics.\n */\nexport namespace IStatusBar {\n  export type Alignment = 'right' | 'left' | 'middle';\n\n  /**\n   * Options for status bar items.\n   */\n  export interface IItem {\n    /**\n     * The item to add to the status bar.\n     */\n    item: Widget;\n\n    /**\n     * Which side to place item.\n     * Permanent items are intended for the right and left side,\n     * with more transient items in the middle.\n     */\n    align?: Alignment;\n\n    /**\n     *  Ordering of Items -- higher rank items are closer to the middle.\n     */\n    rank?: number;\n\n    /**\n     * Whether the item is shown or hidden.\n     */\n    isActive?: () => boolean;\n\n    /**\n     * A signal that is fired when the item active state changes.\n     */\n    activeStateChanged?: ISignal<any, void>;\n  }\n}\n", "/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n/**\n * @packageDocumentation\n * @module statusbar\n */\n\nexport * from './components';\nexport * from './statusbar';\nexport * from './tokens';\n"],
  "mappings": "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",
  "names": ["JSONExt", "isObject", "i", "key", "MimeData", "PromiseDelegate", "Token", "name", "Random", "UUID", "key", "i", "exports", "map", "create", "AttachedProperty", "Private", "Private", "init_index_es6", "ArrayExt", "i", "d", "StringExt", "Private", "Signal", "i", "coreutils_1", "Private", "name", "exports", "transform", "key", "exports", "StateDB", "coreutils_1", "exports", "__exportStar", "exports", "exports", "key", "exports", "MarkdownCodeBlocks", "exports", "exports", "module", "key", "isNumber", "arg", "value", "i", "exports", "module", "exports", "has", "key", "exports", "module", "key", "path", "i", "set", "__importDefault", "URLExt", "join", "path", "key", "value", "exports", "key", "name", "path", "Extension", "PathExt", "join", "path", "exports", "coreutils_1", "exports", "Text", "i", "exports", "Time", "exports", "__exportStar", "exports", "exports", "key", "exports", "MarkdownCodeBlocks", "exports", "__importDefault", "URLExt", "join", "path", "key", "value", "exports", "key", "name", "path", "Extension", "PathExt", "join", "path", "exports", "coreutils_1", "exports", "Text", "i", "exports", "Time", "format", "exports", "__exportStar", "exports", "coreutils_1", "exports", "supportedKernelWebSocketProtocols", "__importStar", "Private", "exports", "i", "exports", "coreutils_1", "ServerConnection", "Private", "exports", "name", "exports", "coreutils_1", "ConfigSection", "create", "exports", "key", "d", "d2", "name", "valid", "v", "exports", "exports", "coreutils_1", "__importStar", "Contents", "exports", "path", "path2", "Private", "i", "Private", "max", "Poll", "_", "coreutils_1", "WebSocket", "exports", "i", "exports", "d", "coreutils_1", "exports", "DisposableSet", "set", "ObservableDisposableSet", "__importStar", "exports", "coreutils_1", "__importStar", "Private", "process", "exports", "i", "KernelFutureFlag", "exports", "i", "coreutils_1", "exports", "coreutils_1", "__importStar", "exports", "__importStar", "exports", "__exportStar", "coreutils_1", "__importStar", "_a", "_b", "Private", "p", "exports", "name", "max", "exports", "KernelManager", "__importStar", "exports", "__exportStar", "coreutils_1", "exports", "coreutils_1", "key", "exports", "exports", "d", "coreutils_1", "exports", "coreutils_1", "path", "name", "exports", "options", "path", "_a", "_b", "exports", "SessionManager", "__importStar", "exports", "__exportStar", "exports", "index_es6_exports", "AttachedProperty", "Private", "init_index_es6", "map", "create", "coreutils_1", "Private", "name", "exports", "transform", "key", "exports", "StateDB", "coreutils_1", "exports", "__exportStar", "exports", "coreutils_1", "Private", "exports", "coreutils_1", "exports", "name", "Private", "exports", "coreutils_1", "name", "Private", "exports", "max", "name", "exports", "TerminalManager", "__importStar", "exports", "__exportStar", "coreutils_1", "Private", "exports", "coreutils_1", "Private", "exports", "exports", "__exportStar", "exports", "import_coreutils", "key", "name", "i", "exports", "key", "exports", "classes", "key", "exports", "FreeStyle", "TypeStyle", "freeStyle", "_a", "classes", "exports", "require_lib", "exports", "LabIconStyle", "typestyleClass", "classes", "key", "d", "name", "import_coreutils", "init_utils", "import_coreutils", "Private", "init_index_es6", "init_utils", "React", "name", "ArrayExt", "Private", "StringExt", "init_index_es6", "i", "d", "i", "Private", "h", "VirtualDOM", "ArrayExt", "name", "find", "ArrayExt", "Private", "StringExt", "init_index_es6", "i", "d", "Selector", "Private", "init_index_es6", "ClipboardExt", "ElementExt", "pt", "Platform", "match", "Private", "init_index_es6", "LinkedList", "MessageLoop", "i", "ArrayExt", "AttachedProperty", "Private", "init_index_es6", "map", "create", "Private", "d", "Drag", "Event", "transform", "r", "dt", "ArrayExt", "Private", "StringExt", "init_index_es6", "i", "d", "ClipboardExt", "ElementExt", "Platform", "Selector", "Private", "init_index_es6", "pt", "match", "Private", "init_index_es6", "name", "key", "KeycodeLayout", "i", "Private", "ArrayExt", "CommandRegistry", "key", "Platform", "i", "Selector", "Private", "BoxEngine", "i", "max", "AttachedProperty", "name", "Widget", "ResizeMessage", "Layout", "ArrayExt", "Utils", "SplitLayout", "v", "handle", "SplitPanel", "AccordionPanel", "key", "BoxLayout", "BoxPanel", "content", "CommandPalette", "StringExt", "search", "item", "Menu", "Selector", "pt", "ct", "event", "TabBar", "document", "merge", "tabNode", "j", "find", "DockPanel", "at", "it", "h", "GridLayout", "start", "MenuBar", "init_index_es6", "init_utils", "CommandPaletteSvg", "name", "init_index_es6", "init_utils", "MenuSvg", "name", "init_index_es6", "init_utils", "TabBarSvg", "DockPanelSvg", "init_icon", "React", "import_react", "init_icon", "init_utils", "React", "import_react", "init_utils", "init_index_es6", "exports", "React", "ReactDebugCurrentFrame", "name", "Component", "has", "self", "key", "i", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Symbol", "exports", "module", "Symbol", "exports", "module", "exports", "module", "Symbol", "exports", "module", "transform", "exports", "module", "exports", "module", "exports", "module", "isPlainObject", "exports", "module", "exports", "module", "exports", "module", "key", "exports", "module", "key", "exports", "module", "key", "exports", "module", "key", "exports", "module", "key", "exports", "module", "exports", "module", "exports", "module", "key", "exports", "module", "key", "exports", "module", "key", "exports", "module", "isObject", "exports", "module", "isObject", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "isObject", "exports", "module", "key", "exports", "module", "key", "exports", "module", "Map", "exports", "module", "exports", "module", "exports", "module", "key", "exports", "module", "key", "exports", "module", "key", "exports", "module", "key", "exports", "module", "exports", "module", "Map", "exports", "module", "exports", "module", "map", "key", "exports", "module", "key", "exports", "module", "key", "exports", "module", "key", "exports", "module", "key", "exports", "module", "exports", "module", "Map", "key", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "key", "exports", "module", "othValue", "exports", "module", "Uint8Array", "exports", "module", "map", "key", "exports", "module", "set", "exports", "module", "Symbol", "Uint8Array", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "key", "exports", "module", "exports", "module", "exports", "module", "key", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "key", "exports", "module", "DataView", "exports", "module", "Promise", "exports", "module", "Set", "exports", "module", "WeakMap", "exports", "module", "DataView", "Map", "Promise", "Set", "WeakMap", "exports", "module", "exports", "module", "exports", "module", "isEqualWith", "exports", "module", "exports", "module", "exports", "module", "key", "exports", "module", "key", "exports", "module", "exports", "module", "exports", "module", "Symbol", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "path", "exports", "module", "get", "path", "exports", "module", "isEmpty", "key", "exports", "p", "get", "set", "exports", "module", "exports", "module", "exports", "module", "key", "exports", "module", "key", "exports", "module", "key", "exports", "module", "exports", "module", "key", "exports", "module", "isObject", "key", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Uint8Array", "exports", "module", "exports", "module", "exports", "module", "Symbol", "exports", "module", "exports", "module", "exports", "module", "isObject", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "isObject", "key", "exports", "module", "exports", "module", "exports", "module", "path", "exports", "module", "path", "exports", "module", "isPlainObject", "exports", "module", "Symbol", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "transform", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "omit", "path", "exports", "module", "key", "exports", "module", "path", "key", "exports", "module", "has", "path", "exports", "module", "isNumber", "exports", "module", "isString", "exports", "module", "exports", "module", "key", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "key", "exports", "module", "isObject", "exports", "module", "key", "exports", "module", "key", "exports", "module", "exports", "module", "key", "exports", "module", "path", "exports", "module", "get", "path", "exports", "module", "key", "exports", "module", "path", "exports", "module", "path", "exports", "module", "exports", "module", "collection", "exports", "module", "reduce", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "isObject", "exports", "module", "exports", "module", "exports", "module", "times", "import_get", "exports", "module", "isEqual", "exports", "module", "isObject", "path", "key", "exports", "module", "set", "path", "exports", "module", "isObject", "transform", "object", "exports", "module", "key", "exports", "module", "exports", "module", "key", "exports", "module", "exports", "module", "isObject", "isPlainObject", "key", "exports", "module", "isObject", "key", "exports", "module", "exports", "module", "isObject", "exports", "module", "exports", "module", "merge", "exports", "module", "flattenDeep", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "Set", "exports", "module", "set", "exports", "module", "uniq", "exports", "module", "cloneDeep", "exports", "module", "key", "collection", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "key", "collection", "exports", "module", "exports", "module", "exports", "module", "key", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "isEqual", "uniq", "isPlainObject", "has", "key", "compare", "a", "b", "require_lib", "exports", "module", "require_lib", "exports", "module", "isNumber", "require_lib", "exports", "module", "isNumber", "require_lib", "exports", "module", "i", "require_lib", "exports", "module", "require_lib", "exports", "module", "t", "i", "require_lib", "exports", "module", "i", "exports", "module", "isObject", "key", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "forEach", "exports", "module", "exports", "module", "exports", "module", "flattenDeep", "isPlainObject", "uniq", "has", "key", "exports", "module", "forEach", "mergeSchemas", "key", "exports", "module", "forEach", "has", "key", "mergeSchemas", "require_src", "exports", "module", "cloneDeep", "flattenDeep", "isEqual", "isPlainObject", "uniq", "key", "mergeSchemas", "schemas", "r", "merged", "keys", "merger", "import_get", "exports", "module", "union", "import_get", "import_get", "import_has", "import_isNumber", "import_isObject", "import_isString", "import_times", "import_get", "import_get", "AdditionalItemsHandling", "import_isEmpty", "import_get", "import_has", "import_get", "import_isEqual", "import_get", "import_isEqual", "import_set", "import_isEqual", "import_isEqual", "exports", "module", "isNil", "import_get", "import_set", "exports", "Element", "exports", "module", "import_react", "import_get", "import_set", "isString", "import_isString", "import_isPlainObject", "exports", "module", "toPath", "import_isPlainObject", "import_isEmpty", "import_isObject", "TranslatableString", "import_get", "import_isEqual", "import_isEqual", "init_lib", "exports", "module", "path", "exports", "module", "path", "exports", "module", "__importDefault", "d", "t", "p", "i", "key", "r", "name", "v", "b", "__assign", "import_react", "import_cloneDeep", "import_get", "import_isObject", "import_set", "init_lib", "import_isObject", "init_lib", "import_react", "import_get", "import_isEmpty", "import_omit", "init_lib", "import_react", "init_lib", "generateListItemPrefix", "type", "ORDERED_LIST_BULLET", "UNORDERED_LIST_BULLET", "generateListItemPrefixRegex", "RegExp", "ORDERED_LIST_ITEM_PREFIX", "UNORDERED_LIST_ITEM_PREFIX", "generateListItemRegex", "generateListRegex", "bullet", "ATTRIBUTE_TO_JSX_PROP_MAP", "BLOCKQUOTE_R", "CODE_BLOCK_FENCED_R", "CODE_BLOCK_R", "HEADING_R", "HEADING_ATX_COMPLIANT_R", "HEADING_SETEXT_R", "HTML_BLOCK_ELEMENT_R", "HTML_COMMENT_R", "HTML_SELF_CLOSING_ELEMENT_R", "NP_TABLE_R", "ORDERED_LIST_ITEM_PREFIX_R", "UNORDERED_LIST_ITEM_PREFIX_R", "ORDERED_LIST_ITEM_R", "UNORDERED_LIST_ITEM_R", "ORDERED_LIST_R", "UNORDERED_LIST_R", "NON_PARAGRAPH_BLOCK_SYNTAXES", "BLOCK_SYNTAXES", "Priority", "reduce", "obj", "x", "toLowerCase", "for", "exports", "module", "unset", "path", "import_react", "import_get", "import_has", "import_isObject", "import_set", "init_lib", "import_react", "import_isObject", "import_omit", "init_lib", "init_lib", "import_react", "init_lib", "init_lib", "init_lib", "import_react", "init_lib", "init_lib", "init_lib", "init_lib", "init_lib", "init_lib", "init_FieldTemplate", "init_lib", "init_lib", "init_lib", "init_lib", "init_lib", "init_FieldTemplate", "import_react", "init_lib", "import_react", "init_lib", "import_react", "init_lib", "init_lib", "import_react", "init_lib", "init_lib", "init_lib", "import_react", "init_lib", "init_lib", "import_react", "init_lib", "import_react", "init_lib", "value", "_jsx", "import_react", "init_lib", "init_lib", "import_react", "init_lib", "init_lib", "init_lib", "init_widgets", "init_lib", "init_widgets", "import_react", "import_get", "import_isEmpty", "import_toPath", "init_lib", "import_react", "init_lib", "import_coreutils", "import_react", "init_lib", "React", "Private", "init_index_es6", "find", "every", "some", "retro", "ArrayExt", "Private", "StringExt", "init_index_es6", "i", "d", "init_index_es6", "IRankedMenu", "LinkedList", "Private", "init_index_es6", "MessageLoop", "every", "retro", "some", "i", "ArrayExt", "LinkedList", "AttachedProperty", "Private", "init_index_es6", "map", "create", "React", "import_client", "init_index_es6", "MessageLoop", "_a", "key", "React", "Private", "init_index_es6", "init_icon", "init_utils", "some", "MessageLoop", "name", "find", "at", "i", "index", "widget", "Toolbar", "AttachedProperty", "init_index_es6", "import_react", "init_search", "init_index_es6", "init_index_es6", "init_index_es6", "Private", "init_icon", "Styling", "i", "init_index_es6", "import_coreutils", "init_index_es6", "v", "_a", "MessageLoop", "init_search", "HoverBox", "import_coreutils", "init_tokens", "init_lib", "init_icon", "init_tokens", "init_utils", "i", "key", "o", "key", "key", "i", "Private", "init_index_es6", "key", "v", "i", "every", "some", "retro", "ArrayExt", "Private", "StringExt", "init_index_es6", "i", "d", "LinkedList", "Private", "init_index_es6", "Message", "MessageLoop", "every", "retro", "some", "i", "ArrayExt", "LinkedList", "import_coreutils", "init_index_es6", "key", "ObservableJSON", "Message", "init_index_es6", "Private", "init_index_es6", "ArrayExt", "i", "ObservableUndoableList", "import_coreutils", "init_index_es6", "ObservableValue", "init_lib", "init_lib", "init_index_es6", "React", "i", "React", "React", "import_react", "init_components", "ArrayExt", "Private", "StringExt", "init_index_es6", "i", "d", "Private", "init_index_es6", "import_coreutils", "init_tokens", "init_lib", "init_components", "init_tokens"]
}

{
  "version": 3,
  "sources": ["../../../../../node_modules/@codemirror/legacy-modes/mode/textile.js"],
  "sourcesContent": ["var TOKEN_STYLES = {\n  addition: \"inserted\",\n  attributes: \"propertyName\",\n  bold: \"strong\",\n  cite: \"keyword\",\n  code: \"monospace\",\n  definitionList: \"list\",\n  deletion: \"deleted\",\n  div: \"punctuation\",\n  em: \"emphasis\",\n  footnote: \"variable\",\n  footCite: \"qualifier\",\n  header: \"heading\",\n  html: \"comment\",\n  image: \"atom\",\n  italic: \"emphasis\",\n  link: \"link\",\n  linkDefinition: \"link\",\n  list1: \"list\",\n  list2: \"list.special\",\n  list3: \"list\",\n  notextile: \"string.special\",\n  pre: \"operator\",\n  p: \"content\",\n  quote: \"bracket\",\n  span: \"quote\",\n  specialChar: \"character\",\n  strong: \"strong\",\n  sub: \"content.special\",\n  sup: \"content.special\",\n  table: \"variableName.special\",\n  tableHeading: \"operator\"\n};\n\nfunction startNewLine(stream, state) {\n  state.mode = Modes.newLayout;\n  state.tableHeading = false;\n\n  if (state.layoutType === \"definitionList\" && state.spanningLayout &&\n  stream.match(RE(\"definitionListEnd\"), false))\n  state.spanningLayout = false;\n}\n\nfunction handlePhraseModifier(stream, state, ch) {\n  if (ch === \"_\") {\n    if (stream.eat(\"_\"))\n    return togglePhraseModifier(stream, state, \"italic\", /__/, 2);else\n\n    return togglePhraseModifier(stream, state, \"em\", /_/, 1);\n  }\n\n  if (ch === \"*\") {\n    if (stream.eat(\"*\")) {\n      return togglePhraseModifier(stream, state, \"bold\", /\\*\\*/, 2);\n    }\n    return togglePhraseModifier(stream, state, \"strong\", /\\*/, 1);\n  }\n\n  if (ch === \"[\") {\n    if (stream.match(/\\d+\\]/)) state.footCite = true;\n    return tokenStyles(state);\n  }\n\n  if (ch === \"(\") {\n    var spec = stream.match(/^(r|tm|c)\\)/);\n    if (spec)\n    return TOKEN_STYLES.specialChar;\n  }\n\n  if (ch === \"<\" && stream.match(/(\\w+)[^>]+>[^<]+<\\/\\1>/))\n  return TOKEN_STYLES.html;\n\n  if (ch === \"?\" && stream.eat(\"?\"))\n  return togglePhraseModifier(stream, state, \"cite\", /\\?\\?/, 2);\n\n  if (ch === \"=\" && stream.eat(\"=\"))\n  return togglePhraseModifier(stream, state, \"notextile\", /==/, 2);\n\n  if (ch === \"-\" && !stream.eat(\"-\"))\n  return togglePhraseModifier(stream, state, \"deletion\", /-/, 1);\n\n  if (ch === \"+\")\n  return togglePhraseModifier(stream, state, \"addition\", /\\+/, 1);\n\n  if (ch === \"~\")\n  return togglePhraseModifier(stream, state, \"sub\", /~/, 1);\n\n  if (ch === \"^\")\n  return togglePhraseModifier(stream, state, \"sup\", /\\^/, 1);\n\n  if (ch === \"%\")\n  return togglePhraseModifier(stream, state, \"span\", /%/, 1);\n\n  if (ch === \"@\")\n  return togglePhraseModifier(stream, state, \"code\", /@/, 1);\n\n  if (ch === \"!\") {\n    var type = togglePhraseModifier(stream, state, \"image\", /(?:\\([^\\)]+\\))?!/, 1);\n    stream.match(/^:\\S+/); // optional Url portion\n    return type;\n  }\n  return tokenStyles(state);\n}\n\nfunction togglePhraseModifier(stream, state, phraseModifier, closeRE, openSize) {\n  var charBefore = stream.pos > openSize ? stream.string.charAt(stream.pos - openSize - 1) : null;\n  var charAfter = stream.peek();\n  if (state[phraseModifier]) {\n    if ((!charAfter || /\\W/.test(charAfter)) && charBefore && /\\S/.test(charBefore)) {\n      var type = tokenStyles(state);\n      state[phraseModifier] = false;\n      return type;\n    }\n  } else if ((!charBefore || /\\W/.test(charBefore)) && charAfter && /\\S/.test(charAfter) &&\n  stream.match(new RegExp(\"^.*\\\\S\" + closeRE.source + \"(?:\\\\W|$)\"), false)) {\n    state[phraseModifier] = true;\n    state.mode = Modes.attributes;\n  }\n  return tokenStyles(state);\n};\n\nfunction tokenStyles(state) {\n  var disabled = textileDisabled(state);\n  if (disabled) return disabled;\n\n  var styles = [];\n  if (state.layoutType) styles.push(TOKEN_STYLES[state.layoutType]);\n\n  styles = styles.concat(activeStyles(\n    state, \"addition\", \"bold\", \"cite\", \"code\", \"deletion\", \"em\", \"footCite\",\n    \"image\", \"italic\", \"link\", \"span\", \"strong\", \"sub\", \"sup\", \"table\", \"tableHeading\"));\n\n  if (state.layoutType === \"header\")\n  styles.push(TOKEN_STYLES.header + \"-\" + state.header);\n\n  return styles.length ? styles.join(\" \") : null;\n}\n\nfunction textileDisabled(state) {\n  var type = state.layoutType;\n\n  switch (type) {\n    case \"notextile\":\n    case \"code\":\n    case \"pre\":\n      return TOKEN_STYLES[type];\n    default:\n      if (state.notextile)\n      return TOKEN_STYLES.notextile + (type ? \" \" + TOKEN_STYLES[type] : \"\");\n      return null;\n  }\n}\n\nfunction activeStyles(state) {\n  var styles = [];\n  for (var i = 1; i < arguments.length; ++i) {\n    if (state[arguments[i]])\n    styles.push(TOKEN_STYLES[arguments[i]]);\n  }\n  return styles;\n}\n\nfunction blankLine(state) {\n  var spanningLayout = state.spanningLayout,type = state.layoutType;\n\n  for (var key in state) if (state.hasOwnProperty(key))\n  delete state[key];\n\n  state.mode = Modes.newLayout;\n  if (spanningLayout) {\n    state.layoutType = type;\n    state.spanningLayout = true;\n  }\n}\n\nvar REs = {\n  cache: {},\n  single: {\n    bc: \"bc\",\n    bq: \"bq\",\n    definitionList: /- .*?:=+/,\n    definitionListEnd: /.*=:\\s*$/,\n    div: \"div\",\n    drawTable: /\\|.*\\|/,\n    foot: /fn\\d+/,\n    header: /h[1-6]/,\n    html: /\\s*<(?:\\/)?(\\w+)(?:[^>]+)?>(?:[^<]+<\\/\\1>)?/,\n    link: /[^\"]+\":\\S/,\n    linkDefinition: /\\[[^\\s\\]]+\\]\\S+/,\n    list: /(?:#+|\\*+)/,\n    notextile: \"notextile\",\n    para: \"p\",\n    pre: \"pre\",\n    table: \"table\",\n    tableCellAttributes: /[\\/\\\\]\\d+/,\n    tableHeading: /\\|_\\./,\n    tableText: /[^\"_\\*\\[\\(\\?\\+~\\^%@|-]+/,\n    text: /[^!\"_=\\*\\[\\(<\\?\\+~\\^%@-]+/\n  },\n  attributes: {\n    align: /(?:<>|<|>|=)/,\n    selector: /\\([^\\(][^\\)]+\\)/,\n    lang: /\\[[^\\[\\]]+\\]/,\n    pad: /(?:\\(+|\\)+){1,2}/,\n    css: /\\{[^\\}]+\\}/\n  },\n  createRe: function (name) {\n    switch (name) {\n      case \"drawTable\":\n        return REs.makeRe(\"^\", REs.single.drawTable, \"$\");\n      case \"html\":\n        return REs.makeRe(\"^\", REs.single.html, \"(?:\", REs.single.html, \")*\", \"$\");\n      case \"linkDefinition\":\n        return REs.makeRe(\"^\", REs.single.linkDefinition, \"$\");\n      case \"listLayout\":\n        return REs.makeRe(\"^\", REs.single.list, RE(\"allAttributes\"), \"*\\\\s+\");\n      case \"tableCellAttributes\":\n        return REs.makeRe(\"^\", REs.choiceRe(REs.single.tableCellAttributes,\n        RE(\"allAttributes\")), \"+\\\\.\");\n      case \"type\":\n        return REs.makeRe(\"^\", RE(\"allTypes\"));\n      case \"typeLayout\":\n        return REs.makeRe(\"^\", RE(\"allTypes\"), RE(\"allAttributes\"),\n        \"*\\\\.\\\\.?\", \"(\\\\s+|$)\");\n      case \"attributes\":\n        return REs.makeRe(\"^\", RE(\"allAttributes\"), \"+\");\n\n      case \"allTypes\":\n        return REs.choiceRe(REs.single.div, REs.single.foot,\n        REs.single.header, REs.single.bc, REs.single.bq,\n        REs.single.notextile, REs.single.pre, REs.single.table,\n        REs.single.para);\n\n      case \"allAttributes\":\n        return REs.choiceRe(REs.attributes.selector, REs.attributes.css,\n        REs.attributes.lang, REs.attributes.align, REs.attributes.pad);\n\n      default:\n        return REs.makeRe(\"^\", REs.single[name]);\n    }\n  },\n  makeRe: function () {\n    var pattern = \"\";\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      pattern += typeof arg === \"string\" ? arg : arg.source;\n    }\n    return new RegExp(pattern);\n  },\n  choiceRe: function () {\n    var parts = [arguments[0]];\n    for (var i = 1; i < arguments.length; ++i) {\n      parts[i * 2 - 1] = \"|\";\n      parts[i * 2] = arguments[i];\n    }\n\n    parts.unshift(\"(?:\");\n    parts.push(\")\");\n    return REs.makeRe.apply(null, parts);\n  }\n};\n\nfunction RE(name) {\n  return REs.cache[name] || (REs.cache[name] = REs.createRe(name));\n}\n\nvar Modes = {\n  newLayout: function (stream, state) {\n    if (stream.match(RE(\"typeLayout\"), false)) {\n      state.spanningLayout = false;\n      return (state.mode = Modes.blockType)(stream, state);\n    }\n    var newMode;\n    if (!textileDisabled(state)) {\n      if (stream.match(RE(\"listLayout\"), false))\n      newMode = Modes.list;else\n      if (stream.match(RE(\"drawTable\"), false))\n      newMode = Modes.table;else\n      if (stream.match(RE(\"linkDefinition\"), false))\n      newMode = Modes.linkDefinition;else\n      if (stream.match(RE(\"definitionList\")))\n      newMode = Modes.definitionList;else\n      if (stream.match(RE(\"html\"), false))\n      newMode = Modes.html;\n    }\n    return (state.mode = newMode || Modes.text)(stream, state);\n  },\n\n  blockType: function (stream, state) {\n    var match, type;\n    state.layoutType = null;\n\n    if (match = stream.match(RE(\"type\")))\n    type = match[0];else\n\n    return (state.mode = Modes.text)(stream, state);\n\n    if (match = type.match(RE(\"header\"))) {\n      state.layoutType = \"header\";\n      state.header = parseInt(match[0][1]);\n    } else if (type.match(RE(\"bq\"))) {\n      state.layoutType = \"quote\";\n    } else if (type.match(RE(\"bc\"))) {\n      state.layoutType = \"code\";\n    } else if (type.match(RE(\"foot\"))) {\n      state.layoutType = \"footnote\";\n    } else if (type.match(RE(\"notextile\"))) {\n      state.layoutType = \"notextile\";\n    } else if (type.match(RE(\"pre\"))) {\n      state.layoutType = \"pre\";\n    } else if (type.match(RE(\"div\"))) {\n      state.layoutType = \"div\";\n    } else if (type.match(RE(\"table\"))) {\n      state.layoutType = \"table\";\n    }\n\n    state.mode = Modes.attributes;\n    return tokenStyles(state);\n  },\n\n  text: function (stream, state) {\n    if (stream.match(RE(\"text\"))) return tokenStyles(state);\n\n    var ch = stream.next();\n    if (ch === '\"')\n    return (state.mode = Modes.link)(stream, state);\n    return handlePhraseModifier(stream, state, ch);\n  },\n\n  attributes: function (stream, state) {\n    state.mode = Modes.layoutLength;\n\n    if (stream.match(RE(\"attributes\")))\n    return TOKEN_STYLES.attributes;else\n\n    return tokenStyles(state);\n  },\n\n  layoutLength: function (stream, state) {\n    if (stream.eat(\".\") && stream.eat(\".\"))\n    state.spanningLayout = true;\n\n    state.mode = Modes.text;\n    return tokenStyles(state);\n  },\n\n  list: function (stream, state) {\n    var match = stream.match(RE(\"list\"));\n    state.listDepth = match[0].length;\n    var listMod = (state.listDepth - 1) % 3;\n    if (!listMod)\n    state.layoutType = \"list1\";else\n    if (listMod === 1)\n    state.layoutType = \"list2\";else\n\n    state.layoutType = \"list3\";\n\n    state.mode = Modes.attributes;\n    return tokenStyles(state);\n  },\n\n  link: function (stream, state) {\n    state.mode = Modes.text;\n    if (stream.match(RE(\"link\"))) {\n      stream.match(/\\S+/);\n      return TOKEN_STYLES.link;\n    }\n    return tokenStyles(state);\n  },\n\n  linkDefinition: function (stream) {\n    stream.skipToEnd();\n    return TOKEN_STYLES.linkDefinition;\n  },\n\n  definitionList: function (stream, state) {\n    stream.match(RE(\"definitionList\"));\n\n    state.layoutType = \"definitionList\";\n\n    if (stream.match(/\\s*$/))\n    state.spanningLayout = true;else\n\n    state.mode = Modes.attributes;\n\n    return tokenStyles(state);\n  },\n\n  html: function (stream) {\n    stream.skipToEnd();\n    return TOKEN_STYLES.html;\n  },\n\n  table: function (stream, state) {\n    state.layoutType = \"table\";\n    return (state.mode = Modes.tableCell)(stream, state);\n  },\n\n  tableCell: function (stream, state) {\n    if (stream.match(RE(\"tableHeading\")))\n    state.tableHeading = true;else\n\n    stream.eat(\"|\");\n\n    state.mode = Modes.tableCellAttributes;\n    return tokenStyles(state);\n  },\n\n  tableCellAttributes: function (stream, state) {\n    state.mode = Modes.tableText;\n\n    if (stream.match(RE(\"tableCellAttributes\")))\n    return TOKEN_STYLES.attributes;else\n\n    return tokenStyles(state);\n  },\n\n  tableText: function (stream, state) {\n    if (stream.match(RE(\"tableText\")))\n    return tokenStyles(state);\n\n    if (stream.peek() === \"|\") {// end of cell\n      state.mode = Modes.tableCell;\n      return tokenStyles(state);\n    }\n    return handlePhraseModifier(stream, state, stream.next());\n  }\n};\n\nexport const textile = {\n  name: \"textile\",\n  startState: function () {\n    return { mode: Modes.newLayout };\n  },\n  token: function (stream, state) {\n    if (stream.sol()) startNewLine(stream, state);\n    return state.mode(stream, state);\n  },\n  blankLine: blankLine\n};"],
  "mappings": "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",
  "names": []
}

{
  "version": 3,
  "sources": ["../../../../../node_modules/myst-ext-exercise/dist/exercise.js"],
  "sourcesContent": ["import { createId, normalizeLabel } from 'myst-common';\nexport const exerciseDirective = {\n    name: 'exercise',\n    alias: ['exercise-start'],\n    arg: {\n        type: 'myst',\n    },\n    options: {\n        label: {\n            type: String,\n        },\n        class: {\n            type: String,\n        },\n        nonumber: {\n            type: Boolean,\n        },\n        hidden: {\n            type: Boolean,\n        },\n    },\n    body: {\n        type: 'myst',\n    },\n    run(data) {\n        var _a, _b, _c, _d, _e;\n        const children = [];\n        if (data.arg) {\n            children.push({\n                type: 'admonitionTitle',\n                children: data.arg,\n            });\n        }\n        if (data.body) {\n            children.push(...data.body);\n        }\n        const nonumber = (_b = (_a = data.options) === null || _a === void 0 ? void 0 : _a.nonumber) !== null && _b !== void 0 ? _b : false;\n        // Numbered, unlabeled exercises still need a label\n        const backupLabel = nonumber ? undefined : `exercise-${createId()}`;\n        const rawLabel = ((_c = data.options) === null || _c === void 0 ? void 0 : _c.label) || backupLabel;\n        const { label, identifier } = normalizeLabel(rawLabel) || {};\n        const exercise = {\n            type: 'exercise',\n            label,\n            identifier,\n            class: (_d = data.options) === null || _d === void 0 ? void 0 : _d.class,\n            hidden: (_e = data.options) === null || _e === void 0 ? void 0 : _e.hidden,\n            enumerated: !nonumber,\n            children: children,\n        };\n        if (data.name.endsWith('-start')) {\n            exercise.gate = 'start';\n        }\n        return [exercise];\n    },\n};\nexport const solutionDirective = {\n    name: 'solution',\n    alias: ['solution-start'],\n    arg: {\n        type: String,\n        required: true,\n    },\n    options: {\n        label: {\n            type: String,\n        },\n        class: {\n            type: String,\n        },\n        hidden: {\n            type: Boolean,\n        },\n    },\n    body: {\n        type: 'myst',\n    },\n    run(data) {\n        var _a, _b, _c;\n        const children = [];\n        if (data.arg) {\n            const { label, identifier } = normalizeLabel(data.arg) || {};\n            children.push({\n                type: 'admonitionTitle',\n                children: [\n                    { type: 'text', value: 'Solution to ' },\n                    { type: 'crossReference', label, identifier },\n                ],\n            });\n        }\n        if (data.body) {\n            children.push(...data.body);\n        }\n        const rawLabel = (_a = data.options) === null || _a === void 0 ? void 0 : _a.label;\n        const { label, identifier } = normalizeLabel(rawLabel) || {};\n        const solution = {\n            type: 'solution',\n            label,\n            identifier,\n            class: (_b = data.options) === null || _b === void 0 ? void 0 : _b.class,\n            hidden: (_c = data.options) === null || _c === void 0 ? void 0 : _c.hidden,\n            children: children,\n        };\n        if (data.name.endsWith('-start')) {\n            solution.gate = 'start';\n        }\n        return [solution];\n    },\n};\nexport const solutionEndDirective = {\n    name: 'solution-end',\n    run: () => [{ type: 'solution', gate: 'end' }],\n};\nexport const exerciseEndDirective = {\n    name: 'exercise-end',\n    run: () => [{ type: 'exercise', gate: 'end' }],\n};\nexport const exerciseDirectives = [\n    exerciseDirective,\n    exerciseEndDirective,\n    solutionDirective,\n    solutionEndDirective,\n];\n"],
  "mappings": "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",
  "names": ["label", "identifier"]
}

{
  "version": 3,
  "sources": ["../../../../../node_modules/myst-to-html/node_modules/entities/lib/maps/entities.json", "../../../../../node_modules/myst-to-html/node_modules/markdown-it/lib/common/entities.js", "../../../../../node_modules/myst-to-html/node_modules/markdown-it/lib/common/utils.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/common/unicode.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/common/error-codes.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/tokenizer/preprocessor.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/tokenizer/named-entity-data.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/tokenizer/index.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/common/html.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/parser/open-element-stack.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/parser/formatting-element-list.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/utils/mixin.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/extensions/position-tracking/preprocessor-mixin.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/extensions/location-info/tokenizer-mixin.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/extensions/location-info/open-element-stack-mixin.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/extensions/location-info/parser-mixin.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/extensions/error-reporting/mixin-base.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/extensions/error-reporting/preprocessor-mixin.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/extensions/error-reporting/tokenizer-mixin.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/extensions/error-reporting/parser-mixin.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/tree-adapters/default.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/utils/merge-options.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/common/doctype.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/common/foreign-content.js", "../../../../../node_modules/rehype-parse/node_modules/parse5/lib/parser/index.js", "../../../../../node_modules/hast-util-is-element/index.js", "../../../../../node_modules/hast-util-embedded/lib/index.js", "../../../../../node_modules/hast-util-whitespace/index.js", "../../../../../node_modules/rehype-minify-whitespace/block.js", "../../../../../node_modules/rehype-minify-whitespace/content.js", "../../../../../node_modules/rehype-minify-whitespace/skippable.js", "../../../../../node_modules/rehype-minify-whitespace/index.js", "../../../../../node_modules/hast-util-has-property/lib/index.js", "../../../../../node_modules/hast-util-is-body-ok-link/index.js", "../../../../../node_modules/hast-util-phrasing/lib/index.js", "../../../../../node_modules/html-whitespace-sensitive-tag-names/index.js", "../../../../../node_modules/rehype-format/index.js", "../../../../../node_modules/myst-to-html/dist/format.js", "../../../../../node_modules/myst-to-html/dist/utils.js", "../../../../../node_modules/myst-to-html/dist/renderer.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/break.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/code.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/delete.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js", "../../../../../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js", "../../../../../node_modules/micromark-util-character/index.js", "../../../../../node_modules/micromark-util-sanitize-uri/index.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/footnote.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/heading.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/html.js", "../../../../../node_modules/mdast-util-to-hast/lib/revert.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/image.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/link.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/list-item.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/list.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/root.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/strong.js", "../../../../../node_modules/unist-util-position/lib/index.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/table.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/table-row.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js", "../../../../../node_modules/trim-lines/index.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/text.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js", "../../../../../node_modules/mdast-util-to-hast/lib/handlers/index.js", "../../../../../node_modules/unist-util-generated/lib/index.js", "../../../../../node_modules/mdast-util-definitions/lib/index.js", "../../../../../node_modules/mdast-util-to-hast/lib/state.js", "../../../../../node_modules/mdast-util-to-hast/lib/footer.js", "../../../../../node_modules/mdast-util-to-hast/lib/index.js", "../../../../../node_modules/myst-to-html/dist/schema.js", "../../../../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js", "../../../../../node_modules/mdast-util-find-and-replace/lib/index.js", "../../../../../node_modules/myst-to-html/dist/state.js", "../../../../../node_modules/rehype-parse/lib/index.js", "../../../../../node_modules/property-information/lib/util/schema.js", "../../../../../node_modules/property-information/lib/util/merge.js", "../../../../../node_modules/property-information/lib/normalize.js", "../../../../../node_modules/property-information/lib/util/info.js", "../../../../../node_modules/property-information/lib/util/types.js", "../../../../../node_modules/property-information/lib/util/defined-info.js", "../../../../../node_modules/property-information/lib/util/create.js", "../../../../../node_modules/property-information/lib/xlink.js", "../../../../../node_modules/property-information/lib/xml.js", "../../../../../node_modules/property-information/lib/util/case-sensitive-transform.js", "../../../../../node_modules/property-information/lib/util/case-insensitive-transform.js", "../../../../../node_modules/property-information/lib/xmlns.js", "../../../../../node_modules/property-information/lib/aria.js", "../../../../../node_modules/property-information/lib/html.js", "../../../../../node_modules/property-information/lib/svg.js", "../../../../../node_modules/property-information/lib/find.js", "../../../../../node_modules/property-information/index.js", "../../../../../node_modules/rehype-parse/node_modules/hast-util-parse-selector/lib/index.js", "../../../../../node_modules/space-separated-tokens/index.js", "../../../../../node_modules/comma-separated-tokens/index.js", "../../../../../node_modules/rehype-parse/node_modules/hastscript/lib/core.js", "../../../../../node_modules/rehype-parse/node_modules/hastscript/lib/html.js", "../../../../../node_modules/rehype-parse/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js", "../../../../../node_modules/rehype-parse/node_modules/hastscript/lib/svg.js", "../../../../../node_modules/rehype-parse/node_modules/vfile-location/lib/index.js", "../../../../../node_modules/web-namespaces/index.js", "../../../../../node_modules/rehype-parse/node_modules/hast-util-from-parse5/lib/index.js", "../../../../../node_modules/rehype-parse/lib/errors.js", "../../../../../node_modules/hast-util-to-mdast/lib/all.js", "../../../../../node_modules/hast-util-to-mdast/lib/util/own.js", "../../../../../node_modules/hast-util-to-mdast/lib/util/wrap-text.js", "../../../../../node_modules/hast-util-to-mdast/lib/one.js", "../../../../../node_modules/hast-util-to-mdast/lib/util/wrap.js", "../../../../../node_modules/mdast-util-phrasing/lib/index.js", "../../../../../node_modules/hast-util-to-mdast/lib/util/wrap-children.js", "../../../../../node_modules/hast-util-to-mdast/lib/util/resolve.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/a.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/base.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/blockquote.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/br.js", "../../../../../node_modules/unist-util-find-after/lib/index.js", "../../../../../node_modules/hast-util-to-text/lib/index.js", "../../../../../node_modules/trim-trailing-lines/index.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/code.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/comment.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/del.js", "../../../../../node_modules/hast-util-to-mdast/lib/util/list-items-spread.js", "../../../../../node_modules/hast-util-to-mdast/lib/util/wrap-list-items.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/dl.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/em.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/heading.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/hr.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/iframe.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/img.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/inline-code.js", "../../../../../node_modules/hast-util-to-mdast/lib/util/find-selected-options.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/input.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/li.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/list.js", "../../../../../node_modules/mdast-util-to-string/lib/index.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/media.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/p.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/q.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/root.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/select.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/strong.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/table-cell.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/table-row.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/table.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/text.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/textarea.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/wbr.js", "../../../../../node_modules/hast-util-to-mdast/lib/handlers/index.js", "../../../../../node_modules/hast-util-to-mdast/lib/index.js", "../../../../../node_modules/rehype-remark/lib/index.js", "../../../../../node_modules/myst-to-html/dist/transforms.js", "../../../../../node_modules/html-void-elements/index.js", "../../../../../node_modules/stringify-entities/lib/core.js", "../../../../../node_modules/stringify-entities/lib/util/to-hexadecimal.js", "../../../../../node_modules/stringify-entities/lib/util/to-decimal.js", "../../../../../node_modules/character-entities-legacy/index.js", "../../../../../node_modules/character-entities-html4/index.js", "../../../../../node_modules/stringify-entities/lib/constant/dangerous.js", "../../../../../node_modules/stringify-entities/lib/util/to-named.js", "../../../../../node_modules/stringify-entities/lib/util/format-smart.js", "../../../../../node_modules/stringify-entities/lib/index.js", "../../../../../node_modules/hast-util-to-html/lib/handle/comment.js", "../../../../../node_modules/hast-util-to-html/lib/handle/doctype.js", "../../../../../node_modules/ccount/index.js", "../../../../../node_modules/hast-util-to-html/lib/omission/util/siblings.js", "../../../../../node_modules/hast-util-to-html/lib/omission/omission.js", "../../../../../node_modules/hast-util-to-html/lib/omission/closing.js", "../../../../../node_modules/hast-util-to-html/lib/omission/opening.js", "../../../../../node_modules/hast-util-to-html/lib/handle/element.js", "../../../../../node_modules/hast-util-to-html/lib/handle/text.js", "../../../../../node_modules/hast-util-to-html/lib/handle/raw.js", "../../../../../node_modules/hast-util-to-html/lib/handle/root.js", "../../../../../node_modules/hast-util-to-html/lib/handle/index.js", "../../../../../node_modules/hast-util-to-html/lib/index.js", "../../../../../node_modules/rehype-stringify/lib/index.js", "../../../../../node_modules/myst-to-html/dist/renderMdast.js"],
  "sourcesContent": ["{\"Aacute\":\"\u00C1\",\"aacute\":\"\u00E1\",\"Abreve\":\"\u0102\",\"abreve\":\"\u0103\",\"ac\":\"\u223E\",\"acd\":\"\u223F\",\"acE\":\"\u223E\u0333\",\"Acirc\":\"\u00C2\",\"acirc\":\"\u00E2\",\"acute\":\"\u00B4\",\"Acy\":\"\u0410\",\"acy\":\"\u0430\",\"AElig\":\"\u00C6\",\"aelig\":\"\u00E6\",\"af\":\"\u2061\",\"Afr\":\"\uD835\uDD04\",\"afr\":\"\uD835\uDD1E\",\"Agrave\":\"\u00C0\",\"agrave\":\"\u00E0\",\"alefsym\":\"\u2135\",\"aleph\":\"\u2135\",\"Alpha\":\"\u0391\",\"alpha\":\"\u03B1\",\"Amacr\":\"\u0100\",\"amacr\":\"\u0101\",\"amalg\":\"\u2A3F\",\"amp\":\"&\",\"AMP\":\"&\",\"andand\":\"\u2A55\",\"And\":\"\u2A53\",\"and\":\"\u2227\",\"andd\":\"\u2A5C\",\"andslope\":\"\u2A58\",\"andv\":\"\u2A5A\",\"ang\":\"\u2220\",\"ange\":\"\u29A4\",\"angle\":\"\u2220\",\"angmsdaa\":\"\u29A8\",\"angmsdab\":\"\u29A9\",\"angmsdac\":\"\u29AA\",\"angmsdad\":\"\u29AB\",\"angmsdae\":\"\u29AC\",\"angmsdaf\":\"\u29AD\",\"angmsdag\":\"\u29AE\",\"angmsdah\":\"\u29AF\",\"angmsd\":\"\u2221\",\"angrt\":\"\u221F\",\"angrtvb\":\"\u22BE\",\"angrtvbd\":\"\u299D\",\"angsph\":\"\u2222\",\"angst\":\"\u00C5\",\"angzarr\":\"\u237C\",\"Aogon\":\"\u0104\",\"aogon\":\"\u0105\",\"Aopf\":\"\uD835\uDD38\",\"aopf\":\"\uD835\uDD52\",\"apacir\":\"\u2A6F\",\"ap\":\"\u2248\",\"apE\":\"\u2A70\",\"ape\":\"\u224A\",\"apid\":\"\u224B\",\"apos\":\"'\",\"ApplyFunction\":\"\u2061\",\"approx\":\"\u2248\",\"approxeq\":\"\u224A\",\"Aring\":\"\u00C5\",\"aring\":\"\u00E5\",\"Ascr\":\"\uD835\uDC9C\",\"ascr\":\"\uD835\uDCB6\",\"Assign\":\"\u2254\",\"ast\":\"*\",\"asymp\":\"\u2248\",\"asympeq\":\"\u224D\",\"Atilde\":\"\u00C3\",\"atilde\":\"\u00E3\",\"Auml\":\"\u00C4\",\"auml\":\"\u00E4\",\"awconint\":\"\u2233\",\"awint\":\"\u2A11\",\"backcong\":\"\u224C\",\"backepsilon\":\"\u03F6\",\"backprime\":\"\u2035\",\"backsim\":\"\u223D\",\"backsimeq\":\"\u22CD\",\"Backslash\":\"\u2216\",\"Barv\":\"\u2AE7\",\"barvee\":\"\u22BD\",\"barwed\":\"\u2305\",\"Barwed\":\"\u2306\",\"barwedge\":\"\u2305\",\"bbrk\":\"\u23B5\",\"bbrktbrk\":\"\u23B6\",\"bcong\":\"\u224C\",\"Bcy\":\"\u0411\",\"bcy\":\"\u0431\",\"bdquo\":\"\u201E\",\"becaus\":\"\u2235\",\"because\":\"\u2235\",\"Because\":\"\u2235\",\"bemptyv\":\"\u29B0\",\"bepsi\":\"\u03F6\",\"bernou\":\"\u212C\",\"Bernoullis\":\"\u212C\",\"Beta\":\"\u0392\",\"beta\":\"\u03B2\",\"beth\":\"\u2136\",\"between\":\"\u226C\",\"Bfr\":\"\uD835\uDD05\",\"bfr\":\"\uD835\uDD1F\",\"bigcap\":\"\u22C2\",\"bigcirc\":\"\u25EF\",\"bigcup\":\"\u22C3\",\"bigodot\":\"\u2A00\",\"bigoplus\":\"\u2A01\",\"bigotimes\":\"\u2A02\",\"bigsqcup\":\"\u2A06\",\"bigstar\":\"\u2605\",\"bigtriangledown\":\"\u25BD\",\"bigtriangleup\":\"\u25B3\",\"biguplus\":\"\u2A04\",\"bigvee\":\"\u22C1\",\"bigwedge\":\"\u22C0\",\"bkarow\":\"\u290D\",\"blacklozenge\":\"\u29EB\",\"blacksquare\":\"\u25AA\",\"blacktriangle\":\"\u25B4\",\"blacktriangledown\":\"\u25BE\",\"blacktriangleleft\":\"\u25C2\",\"blacktriangleright\":\"\u25B8\",\"blank\":\"\u2423\",\"blk12\":\"\u2592\",\"blk14\":\"\u2591\",\"blk34\":\"\u2593\",\"block\":\"\u2588\",\"bne\":\"=\u20E5\",\"bnequiv\":\"\u2261\u20E5\",\"bNot\":\"\u2AED\",\"bnot\":\"\u2310\",\"Bopf\":\"\uD835\uDD39\",\"bopf\":\"\uD835\uDD53\",\"bot\":\"\u22A5\",\"bottom\":\"\u22A5\",\"bowtie\":\"\u22C8\",\"boxbox\":\"\u29C9\",\"boxdl\":\"\u2510\",\"boxdL\":\"\u2555\",\"boxDl\":\"\u2556\",\"boxDL\":\"\u2557\",\"boxdr\":\"\u250C\",\"boxdR\":\"\u2552\",\"boxDr\":\"\u2553\",\"boxDR\":\"\u2554\",\"boxh\":\"\u2500\",\"boxH\":\"\u2550\",\"boxhd\":\"\u252C\",\"boxHd\":\"\u2564\",\"boxhD\":\"\u2565\",\"boxHD\":\"\u2566\",\"boxhu\":\"\u2534\",\"boxHu\":\"\u2567\",\"boxhU\":\"\u2568\",\"boxHU\":\"\u2569\",\"boxminus\":\"\u229F\",\"boxplus\":\"\u229E\",\"boxtimes\":\"\u22A0\",\"boxul\":\"\u2518\",\"boxuL\":\"\u255B\",\"boxUl\":\"\u255C\",\"boxUL\":\"\u255D\",\"boxur\":\"\u2514\",\"boxuR\":\"\u2558\",\"boxUr\":\"\u2559\",\"boxUR\":\"\u255A\",\"boxv\":\"\u2502\",\"boxV\":\"\u2551\",\"boxvh\":\"\u253C\",\"boxvH\":\"\u256A\",\"boxVh\":\"\u256B\",\"boxVH\":\"\u256C\",\"boxvl\":\"\u2524\",\"boxvL\":\"\u2561\",\"boxVl\":\"\u2562\",\"boxVL\":\"\u2563\",\"boxvr\":\"\u251C\",\"boxvR\":\"\u255E\",\"boxVr\":\"\u255F\",\"boxVR\":\"\u2560\",\"bprime\":\"\u2035\",\"breve\":\"\u02D8\",\"Breve\":\"\u02D8\",\"brvbar\":\"\u00A6\",\"bscr\":\"\uD835\uDCB7\",\"Bscr\":\"\u212C\",\"bsemi\":\"\u204F\",\"bsim\":\"\u223D\",\"bsime\":\"\u22CD\",\"bsolb\":\"\u29C5\",\"bsol\":\"\\\\\",\"bsolhsub\":\"\u27C8\",\"bull\":\"\u2022\",\"bullet\":\"\u2022\",\"bump\":\"\u224E\",\"bumpE\":\"\u2AAE\",\"bumpe\":\"\u224F\",\"Bumpeq\":\"\u224E\",\"bumpeq\":\"\u224F\",\"Cacute\":\"\u0106\",\"cacute\":\"\u0107\",\"capand\":\"\u2A44\",\"capbrcup\":\"\u2A49\",\"capcap\":\"\u2A4B\",\"cap\":\"\u2229\",\"Cap\":\"\u22D2\",\"capcup\":\"\u2A47\",\"capdot\":\"\u2A40\",\"CapitalDifferentialD\":\"\u2145\",\"caps\":\"\u2229\uFE00\",\"caret\":\"\u2041\",\"caron\":\"\u02C7\",\"Cayleys\":\"\u212D\",\"ccaps\":\"\u2A4D\",\"Ccaron\":\"\u010C\",\"ccaron\":\"\u010D\",\"Ccedil\":\"\u00C7\",\"ccedil\":\"\u00E7\",\"Ccirc\":\"\u0108\",\"ccirc\":\"\u0109\",\"Cconint\":\"\u2230\",\"ccups\":\"\u2A4C\",\"ccupssm\":\"\u2A50\",\"Cdot\":\"\u010A\",\"cdot\":\"\u010B\",\"cedil\":\"\u00B8\",\"Cedilla\":\"\u00B8\",\"cemptyv\":\"\u29B2\",\"cent\":\"\u00A2\",\"centerdot\":\"\u00B7\",\"CenterDot\":\"\u00B7\",\"cfr\":\"\uD835\uDD20\",\"Cfr\":\"\u212D\",\"CHcy\":\"\u0427\",\"chcy\":\"\u0447\",\"check\":\"\u2713\",\"checkmark\":\"\u2713\",\"Chi\":\"\u03A7\",\"chi\":\"\u03C7\",\"circ\":\"\u02C6\",\"circeq\":\"\u2257\",\"circlearrowleft\":\"\u21BA\",\"circlearrowright\":\"\u21BB\",\"circledast\":\"\u229B\",\"circledcirc\":\"\u229A\",\"circleddash\":\"\u229D\",\"CircleDot\":\"\u2299\",\"circledR\":\"\u00AE\",\"circledS\":\"\u24C8\",\"CircleMinus\":\"\u2296\",\"CirclePlus\":\"\u2295\",\"CircleTimes\":\"\u2297\",\"cir\":\"\u25CB\",\"cirE\":\"\u29C3\",\"cire\":\"\u2257\",\"cirfnint\":\"\u2A10\",\"cirmid\":\"\u2AEF\",\"cirscir\":\"\u29C2\",\"ClockwiseContourIntegral\":\"\u2232\",\"CloseCurlyDoubleQuote\":\"\u201D\",\"CloseCurlyQuote\":\"\u2019\",\"clubs\":\"\u2663\",\"clubsuit\":\"\u2663\",\"colon\":\":\",\"Colon\":\"\u2237\",\"Colone\":\"\u2A74\",\"colone\":\"\u2254\",\"coloneq\":\"\u2254\",\"comma\":\",\",\"commat\":\"@\",\"comp\":\"\u2201\",\"compfn\":\"\u2218\",\"complement\":\"\u2201\",\"complexes\":\"\u2102\",\"cong\":\"\u2245\",\"congdot\":\"\u2A6D\",\"Congruent\":\"\u2261\",\"conint\":\"\u222E\",\"Conint\":\"\u222F\",\"ContourIntegral\":\"\u222E\",\"copf\":\"\uD835\uDD54\",\"Copf\":\"\u2102\",\"coprod\":\"\u2210\",\"Coproduct\":\"\u2210\",\"copy\":\"\u00A9\",\"COPY\":\"\u00A9\",\"copysr\":\"\u2117\",\"CounterClockwiseContourIntegral\":\"\u2233\",\"crarr\":\"\u21B5\",\"cross\":\"\u2717\",\"Cross\":\"\u2A2F\",\"Cscr\":\"\uD835\uDC9E\",\"cscr\":\"\uD835\uDCB8\",\"csub\":\"\u2ACF\",\"csube\":\"\u2AD1\",\"csup\":\"\u2AD0\",\"csupe\":\"\u2AD2\",\"ctdot\":\"\u22EF\",\"cudarrl\":\"\u2938\",\"cudarrr\":\"\u2935\",\"cuepr\":\"\u22DE\",\"cuesc\":\"\u22DF\",\"cularr\":\"\u21B6\",\"cularrp\":\"\u293D\",\"cupbrcap\":\"\u2A48\",\"cupcap\":\"\u2A46\",\"CupCap\":\"\u224D\",\"cup\":\"\u222A\",\"Cup\":\"\u22D3\",\"cupcup\":\"\u2A4A\",\"cupdot\":\"\u228D\",\"cupor\":\"\u2A45\",\"cups\":\"\u222A\uFE00\",\"curarr\":\"\u21B7\",\"curarrm\":\"\u293C\",\"curlyeqprec\":\"\u22DE\",\"curlyeqsucc\":\"\u22DF\",\"curlyvee\":\"\u22CE\",\"curlywedge\":\"\u22CF\",\"curren\":\"\u00A4\",\"curvearrowleft\":\"\u21B6\",\"curvearrowright\":\"\u21B7\",\"cuvee\":\"\u22CE\",\"cuwed\":\"\u22CF\",\"cwconint\":\"\u2232\",\"cwint\":\"\u2231\",\"cylcty\":\"\u232D\",\"dagger\":\"\u2020\",\"Dagger\":\"\u2021\",\"daleth\":\"\u2138\",\"darr\":\"\u2193\",\"Darr\":\"\u21A1\",\"dArr\":\"\u21D3\",\"dash\":\"\u2010\",\"Dashv\":\"\u2AE4\",\"dashv\":\"\u22A3\",\"dbkarow\":\"\u290F\",\"dblac\":\"\u02DD\",\"Dcaron\":\"\u010E\",\"dcaron\":\"\u010F\",\"Dcy\":\"\u0414\",\"dcy\":\"\u0434\",\"ddagger\":\"\u2021\",\"ddarr\":\"\u21CA\",\"DD\":\"\u2145\",\"dd\":\"\u2146\",\"DDotrahd\":\"\u2911\",\"ddotseq\":\"\u2A77\",\"deg\":\"\u00B0\",\"Del\":\"\u2207\",\"Delta\":\"\u0394\",\"delta\":\"\u03B4\",\"demptyv\":\"\u29B1\",\"dfisht\":\"\u297F\",\"Dfr\":\"\uD835\uDD07\",\"dfr\":\"\uD835\uDD21\",\"dHar\":\"\u2965\",\"dharl\":\"\u21C3\",\"dharr\":\"\u21C2\",\"DiacriticalAcute\":\"\u00B4\",\"DiacriticalDot\":\"\u02D9\",\"DiacriticalDoubleAcute\":\"\u02DD\",\"DiacriticalGrave\":\"`\",\"DiacriticalTilde\":\"\u02DC\",\"diam\":\"\u22C4\",\"diamond\":\"\u22C4\",\"Diamond\":\"\u22C4\",\"diamondsuit\":\"\u2666\",\"diams\":\"\u2666\",\"die\":\"\u00A8\",\"DifferentialD\":\"\u2146\",\"digamma\":\"\u03DD\",\"disin\":\"\u22F2\",\"div\":\"\u00F7\",\"divide\":\"\u00F7\",\"divideontimes\":\"\u22C7\",\"divonx\":\"\u22C7\",\"DJcy\":\"\u0402\",\"djcy\":\"\u0452\",\"dlcorn\":\"\u231E\",\"dlcrop\":\"\u230D\",\"dollar\":\"$\",\"Dopf\":\"\uD835\uDD3B\",\"dopf\":\"\uD835\uDD55\",\"Dot\":\"\u00A8\",\"dot\":\"\u02D9\",\"DotDot\":\"\u20DC\",\"doteq\":\"\u2250\",\"doteqdot\":\"\u2251\",\"DotEqual\":\"\u2250\",\"dotminus\":\"\u2238\",\"dotplus\":\"\u2214\",\"dotsquare\":\"\u22A1\",\"doublebarwedge\":\"\u2306\",\"DoubleContourIntegral\":\"\u222F\",\"DoubleDot\":\"\u00A8\",\"DoubleDownArrow\":\"\u21D3\",\"DoubleLeftArrow\":\"\u21D0\",\"DoubleLeftRightArrow\":\"\u21D4\",\"DoubleLeftTee\":\"\u2AE4\",\"DoubleLongLeftArrow\":\"\u27F8\",\"DoubleLongLeftRightArrow\":\"\u27FA\",\"DoubleLongRightArrow\":\"\u27F9\",\"DoubleRightArrow\":\"\u21D2\",\"DoubleRightTee\":\"\u22A8\",\"DoubleUpArrow\":\"\u21D1\",\"DoubleUpDownArrow\":\"\u21D5\",\"DoubleVerticalBar\":\"\u2225\",\"DownArrowBar\":\"\u2913\",\"downarrow\":\"\u2193\",\"DownArrow\":\"\u2193\",\"Downarrow\":\"\u21D3\",\"DownArrowUpArrow\":\"\u21F5\",\"DownBreve\":\"\u0311\",\"downdownarrows\":\"\u21CA\",\"downharpoonleft\":\"\u21C3\",\"downharpoonright\":\"\u21C2\",\"DownLeftRightVector\":\"\u2950\",\"DownLeftTeeVector\":\"\u295E\",\"DownLeftVectorBar\":\"\u2956\",\"DownLeftVector\":\"\u21BD\",\"DownRightTeeVector\":\"\u295F\",\"DownRightVectorBar\":\"\u2957\",\"DownRightVector\":\"\u21C1\",\"DownTeeArrow\":\"\u21A7\",\"DownTee\":\"\u22A4\",\"drbkarow\":\"\u2910\",\"drcorn\":\"\u231F\",\"drcrop\":\"\u230C\",\"Dscr\":\"\uD835\uDC9F\",\"dscr\":\"\uD835\uDCB9\",\"DScy\":\"\u0405\",\"dscy\":\"\u0455\",\"dsol\":\"\u29F6\",\"Dstrok\":\"\u0110\",\"dstrok\":\"\u0111\",\"dtdot\":\"\u22F1\",\"dtri\":\"\u25BF\",\"dtrif\":\"\u25BE\",\"duarr\":\"\u21F5\",\"duhar\":\"\u296F\",\"dwangle\":\"\u29A6\",\"DZcy\":\"\u040F\",\"dzcy\":\"\u045F\",\"dzigrarr\":\"\u27FF\",\"Eacute\":\"\u00C9\",\"eacute\":\"\u00E9\",\"easter\":\"\u2A6E\",\"Ecaron\":\"\u011A\",\"ecaron\":\"\u011B\",\"Ecirc\":\"\u00CA\",\"ecirc\":\"\u00EA\",\"ecir\":\"\u2256\",\"ecolon\":\"\u2255\",\"Ecy\":\"\u042D\",\"ecy\":\"\u044D\",\"eDDot\":\"\u2A77\",\"Edot\":\"\u0116\",\"edot\":\"\u0117\",\"eDot\":\"\u2251\",\"ee\":\"\u2147\",\"efDot\":\"\u2252\",\"Efr\":\"\uD835\uDD08\",\"efr\":\"\uD835\uDD22\",\"eg\":\"\u2A9A\",\"Egrave\":\"\u00C8\",\"egrave\":\"\u00E8\",\"egs\":\"\u2A96\",\"egsdot\":\"\u2A98\",\"el\":\"\u2A99\",\"Element\":\"\u2208\",\"elinters\":\"\u23E7\",\"ell\":\"\u2113\",\"els\":\"\u2A95\",\"elsdot\":\"\u2A97\",\"Emacr\":\"\u0112\",\"emacr\":\"\u0113\",\"empty\":\"\u2205\",\"emptyset\":\"\u2205\",\"EmptySmallSquare\":\"\u25FB\",\"emptyv\":\"\u2205\",\"EmptyVerySmallSquare\":\"\u25AB\",\"emsp13\":\"\u2004\",\"emsp14\":\"\u2005\",\"emsp\":\"\u2003\",\"ENG\":\"\u014A\",\"eng\":\"\u014B\",\"ensp\":\"\u2002\",\"Eogon\":\"\u0118\",\"eogon\":\"\u0119\",\"Eopf\":\"\uD835\uDD3C\",\"eopf\":\"\uD835\uDD56\",\"epar\":\"\u22D5\",\"eparsl\":\"\u29E3\",\"eplus\":\"\u2A71\",\"epsi\":\"\u03B5\",\"Epsilon\":\"\u0395\",\"epsilon\":\"\u03B5\",\"epsiv\":\"\u03F5\",\"eqcirc\":\"\u2256\",\"eqcolon\":\"\u2255\",\"eqsim\":\"\u2242\",\"eqslantgtr\":\"\u2A96\",\"eqslantless\":\"\u2A95\",\"Equal\":\"\u2A75\",\"equals\":\"=\",\"EqualTilde\":\"\u2242\",\"equest\":\"\u225F\",\"Equilibrium\":\"\u21CC\",\"equiv\":\"\u2261\",\"equivDD\":\"\u2A78\",\"eqvparsl\":\"\u29E5\",\"erarr\":\"\u2971\",\"erDot\":\"\u2253\",\"escr\":\"\u212F\",\"Escr\":\"\u2130\",\"esdot\":\"\u2250\",\"Esim\":\"\u2A73\",\"esim\":\"\u2242\",\"Eta\":\"\u0397\",\"eta\":\"\u03B7\",\"ETH\":\"\u00D0\",\"eth\":\"\u00F0\",\"Euml\":\"\u00CB\",\"euml\":\"\u00EB\",\"euro\":\"\u20AC\",\"excl\":\"!\",\"exist\":\"\u2203\",\"Exists\":\"\u2203\",\"expectation\":\"\u2130\",\"exponentiale\":\"\u2147\",\"ExponentialE\":\"\u2147\",\"fallingdotseq\":\"\u2252\",\"Fcy\":\"\u0424\",\"fcy\":\"\u0444\",\"female\":\"\u2640\",\"ffilig\":\"\uFB03\",\"fflig\":\"\uFB00\",\"ffllig\":\"\uFB04\",\"Ffr\":\"\uD835\uDD09\",\"ffr\":\"\uD835\uDD23\",\"filig\":\"\uFB01\",\"FilledSmallSquare\":\"\u25FC\",\"FilledVerySmallSquare\":\"\u25AA\",\"fjlig\":\"fj\",\"flat\":\"\u266D\",\"fllig\":\"\uFB02\",\"fltns\":\"\u25B1\",\"fnof\":\"\u0192\",\"Fopf\":\"\uD835\uDD3D\",\"fopf\":\"\uD835\uDD57\",\"forall\":\"\u2200\",\"ForAll\":\"\u2200\",\"fork\":\"\u22D4\",\"forkv\":\"\u2AD9\",\"Fouriertrf\":\"\u2131\",\"fpartint\":\"\u2A0D\",\"frac12\":\"\u00BD\",\"frac13\":\"\u2153\",\"frac14\":\"\u00BC\",\"frac15\":\"\u2155\",\"frac16\":\"\u2159\",\"frac18\":\"\u215B\",\"frac23\":\"\u2154\",\"frac25\":\"\u2156\",\"frac34\":\"\u00BE\",\"frac35\":\"\u2157\",\"frac38\":\"\u215C\",\"frac45\":\"\u2158\",\"frac56\":\"\u215A\",\"frac58\":\"\u215D\",\"frac78\":\"\u215E\",\"frasl\":\"\u2044\",\"frown\":\"\u2322\",\"fscr\":\"\uD835\uDCBB\",\"Fscr\":\"\u2131\",\"gacute\":\"\u01F5\",\"Gamma\":\"\u0393\",\"gamma\":\"\u03B3\",\"Gammad\":\"\u03DC\",\"gammad\":\"\u03DD\",\"gap\":\"\u2A86\",\"Gbreve\":\"\u011E\",\"gbreve\":\"\u011F\",\"Gcedil\":\"\u0122\",\"Gcirc\":\"\u011C\",\"gcirc\":\"\u011D\",\"Gcy\":\"\u0413\",\"gcy\":\"\u0433\",\"Gdot\":\"\u0120\",\"gdot\":\"\u0121\",\"ge\":\"\u2265\",\"gE\":\"\u2267\",\"gEl\":\"\u2A8C\",\"gel\":\"\u22DB\",\"geq\":\"\u2265\",\"geqq\":\"\u2267\",\"geqslant\":\"\u2A7E\",\"gescc\":\"\u2AA9\",\"ges\":\"\u2A7E\",\"gesdot\":\"\u2A80\",\"gesdoto\":\"\u2A82\",\"gesdotol\":\"\u2A84\",\"gesl\":\"\u22DB\uFE00\",\"gesles\":\"\u2A94\",\"Gfr\":\"\uD835\uDD0A\",\"gfr\":\"\uD835\uDD24\",\"gg\":\"\u226B\",\"Gg\":\"\u22D9\",\"ggg\":\"\u22D9\",\"gimel\":\"\u2137\",\"GJcy\":\"\u0403\",\"gjcy\":\"\u0453\",\"gla\":\"\u2AA5\",\"gl\":\"\u2277\",\"glE\":\"\u2A92\",\"glj\":\"\u2AA4\",\"gnap\":\"\u2A8A\",\"gnapprox\":\"\u2A8A\",\"gne\":\"\u2A88\",\"gnE\":\"\u2269\",\"gneq\":\"\u2A88\",\"gneqq\":\"\u2269\",\"gnsim\":\"\u22E7\",\"Gopf\":\"\uD835\uDD3E\",\"gopf\":\"\uD835\uDD58\",\"grave\":\"`\",\"GreaterEqual\":\"\u2265\",\"GreaterEqualLess\":\"\u22DB\",\"GreaterFullEqual\":\"\u2267\",\"GreaterGreater\":\"\u2AA2\",\"GreaterLess\":\"\u2277\",\"GreaterSlantEqual\":\"\u2A7E\",\"GreaterTilde\":\"\u2273\",\"Gscr\":\"\uD835\uDCA2\",\"gscr\":\"\u210A\",\"gsim\":\"\u2273\",\"gsime\":\"\u2A8E\",\"gsiml\":\"\u2A90\",\"gtcc\":\"\u2AA7\",\"gtcir\":\"\u2A7A\",\"gt\":\">\",\"GT\":\">\",\"Gt\":\"\u226B\",\"gtdot\":\"\u22D7\",\"gtlPar\":\"\u2995\",\"gtquest\":\"\u2A7C\",\"gtrapprox\":\"\u2A86\",\"gtrarr\":\"\u2978\",\"gtrdot\":\"\u22D7\",\"gtreqless\":\"\u22DB\",\"gtreqqless\":\"\u2A8C\",\"gtrless\":\"\u2277\",\"gtrsim\":\"\u2273\",\"gvertneqq\":\"\u2269\uFE00\",\"gvnE\":\"\u2269\uFE00\",\"Hacek\":\"\u02C7\",\"hairsp\":\"\u200A\",\"half\":\"\u00BD\",\"hamilt\":\"\u210B\",\"HARDcy\":\"\u042A\",\"hardcy\":\"\u044A\",\"harrcir\":\"\u2948\",\"harr\":\"\u2194\",\"hArr\":\"\u21D4\",\"harrw\":\"\u21AD\",\"Hat\":\"^\",\"hbar\":\"\u210F\",\"Hcirc\":\"\u0124\",\"hcirc\":\"\u0125\",\"hearts\":\"\u2665\",\"heartsuit\":\"\u2665\",\"hellip\":\"\u2026\",\"hercon\":\"\u22B9\",\"hfr\":\"\uD835\uDD25\",\"Hfr\":\"\u210C\",\"HilbertSpace\":\"\u210B\",\"hksearow\":\"\u2925\",\"hkswarow\":\"\u2926\",\"hoarr\":\"\u21FF\",\"homtht\":\"\u223B\",\"hookleftarrow\":\"\u21A9\",\"hookrightarrow\":\"\u21AA\",\"hopf\":\"\uD835\uDD59\",\"Hopf\":\"\u210D\",\"horbar\":\"\u2015\",\"HorizontalLine\":\"\u2500\",\"hscr\":\"\uD835\uDCBD\",\"Hscr\":\"\u210B\",\"hslash\":\"\u210F\",\"Hstrok\":\"\u0126\",\"hstrok\":\"\u0127\",\"HumpDownHump\":\"\u224E\",\"HumpEqual\":\"\u224F\",\"hybull\":\"\u2043\",\"hyphen\":\"\u2010\",\"Iacute\":\"\u00CD\",\"iacute\":\"\u00ED\",\"ic\":\"\u2063\",\"Icirc\":\"\u00CE\",\"icirc\":\"\u00EE\",\"Icy\":\"\u0418\",\"icy\":\"\u0438\",\"Idot\":\"\u0130\",\"IEcy\":\"\u0415\",\"iecy\":\"\u0435\",\"iexcl\":\"\u00A1\",\"iff\":\"\u21D4\",\"ifr\":\"\uD835\uDD26\",\"Ifr\":\"\u2111\",\"Igrave\":\"\u00CC\",\"igrave\":\"\u00EC\",\"ii\":\"\u2148\",\"iiiint\":\"\u2A0C\",\"iiint\":\"\u222D\",\"iinfin\":\"\u29DC\",\"iiota\":\"\u2129\",\"IJlig\":\"\u0132\",\"ijlig\":\"\u0133\",\"Imacr\":\"\u012A\",\"imacr\":\"\u012B\",\"image\":\"\u2111\",\"ImaginaryI\":\"\u2148\",\"imagline\":\"\u2110\",\"imagpart\":\"\u2111\",\"imath\":\"\u0131\",\"Im\":\"\u2111\",\"imof\":\"\u22B7\",\"imped\":\"\u01B5\",\"Implies\":\"\u21D2\",\"incare\":\"\u2105\",\"in\":\"\u2208\",\"infin\":\"\u221E\",\"infintie\":\"\u29DD\",\"inodot\":\"\u0131\",\"intcal\":\"\u22BA\",\"int\":\"\u222B\",\"Int\":\"\u222C\",\"integers\":\"\u2124\",\"Integral\":\"\u222B\",\"intercal\":\"\u22BA\",\"Intersection\":\"\u22C2\",\"intlarhk\":\"\u2A17\",\"intprod\":\"\u2A3C\",\"InvisibleComma\":\"\u2063\",\"InvisibleTimes\":\"\u2062\",\"IOcy\":\"\u0401\",\"iocy\":\"\u0451\",\"Iogon\":\"\u012E\",\"iogon\":\"\u012F\",\"Iopf\":\"\uD835\uDD40\",\"iopf\":\"\uD835\uDD5A\",\"Iota\":\"\u0399\",\"iota\":\"\u03B9\",\"iprod\":\"\u2A3C\",\"iquest\":\"\u00BF\",\"iscr\":\"\uD835\uDCBE\",\"Iscr\":\"\u2110\",\"isin\":\"\u2208\",\"isindot\":\"\u22F5\",\"isinE\":\"\u22F9\",\"isins\":\"\u22F4\",\"isinsv\":\"\u22F3\",\"isinv\":\"\u2208\",\"it\":\"\u2062\",\"Itilde\":\"\u0128\",\"itilde\":\"\u0129\",\"Iukcy\":\"\u0406\",\"iukcy\":\"\u0456\",\"Iuml\":\"\u00CF\",\"iuml\":\"\u00EF\",\"Jcirc\":\"\u0134\",\"jcirc\":\"\u0135\",\"Jcy\":\"\u0419\",\"jcy\":\"\u0439\",\"Jfr\":\"\uD835\uDD0D\",\"jfr\":\"\uD835\uDD27\",\"jmath\":\"\u0237\",\"Jopf\":\"\uD835\uDD41\",\"jopf\":\"\uD835\uDD5B\",\"Jscr\":\"\uD835\uDCA5\",\"jscr\":\"\uD835\uDCBF\",\"Jsercy\":\"\u0408\",\"jsercy\":\"\u0458\",\"Jukcy\":\"\u0404\",\"jukcy\":\"\u0454\",\"Kappa\":\"\u039A\",\"kappa\":\"\u03BA\",\"kappav\":\"\u03F0\",\"Kcedil\":\"\u0136\",\"kcedil\":\"\u0137\",\"Kcy\":\"\u041A\",\"kcy\":\"\u043A\",\"Kfr\":\"\uD835\uDD0E\",\"kfr\":\"\uD835\uDD28\",\"kgreen\":\"\u0138\",\"KHcy\":\"\u0425\",\"khcy\":\"\u0445\",\"KJcy\":\"\u040C\",\"kjcy\":\"\u045C\",\"Kopf\":\"\uD835\uDD42\",\"kopf\":\"\uD835\uDD5C\",\"Kscr\":\"\uD835\uDCA6\",\"kscr\":\"\uD835\uDCC0\",\"lAarr\":\"\u21DA\",\"Lacute\":\"\u0139\",\"lacute\":\"\u013A\",\"laemptyv\":\"\u29B4\",\"lagran\":\"\u2112\",\"Lambda\":\"\u039B\",\"lambda\":\"\u03BB\",\"lang\":\"\u27E8\",\"Lang\":\"\u27EA\",\"langd\":\"\u2991\",\"langle\":\"\u27E8\",\"lap\":\"\u2A85\",\"Laplacetrf\":\"\u2112\",\"laquo\":\"\u00AB\",\"larrb\":\"\u21E4\",\"larrbfs\":\"\u291F\",\"larr\":\"\u2190\",\"Larr\":\"\u219E\",\"lArr\":\"\u21D0\",\"larrfs\":\"\u291D\",\"larrhk\":\"\u21A9\",\"larrlp\":\"\u21AB\",\"larrpl\":\"\u2939\",\"larrsim\":\"\u2973\",\"larrtl\":\"\u21A2\",\"latail\":\"\u2919\",\"lAtail\":\"\u291B\",\"lat\":\"\u2AAB\",\"late\":\"\u2AAD\",\"lates\":\"\u2AAD\uFE00\",\"lbarr\":\"\u290C\",\"lBarr\":\"\u290E\",\"lbbrk\":\"\u2772\",\"lbrace\":\"{\",\"lbrack\":\"[\",\"lbrke\":\"\u298B\",\"lbrksld\":\"\u298F\",\"lbrkslu\":\"\u298D\",\"Lcaron\":\"\u013D\",\"lcaron\":\"\u013E\",\"Lcedil\":\"\u013B\",\"lcedil\":\"\u013C\",\"lceil\":\"\u2308\",\"lcub\":\"{\",\"Lcy\":\"\u041B\",\"lcy\":\"\u043B\",\"ldca\":\"\u2936\",\"ldquo\":\"\u201C\",\"ldquor\":\"\u201E\",\"ldrdhar\":\"\u2967\",\"ldrushar\":\"\u294B\",\"ldsh\":\"\u21B2\",\"le\":\"\u2264\",\"lE\":\"\u2266\",\"LeftAngleBracket\":\"\u27E8\",\"LeftArrowBar\":\"\u21E4\",\"leftarrow\":\"\u2190\",\"LeftArrow\":\"\u2190\",\"Leftarrow\":\"\u21D0\",\"LeftArrowRightArrow\":\"\u21C6\",\"leftarrowtail\":\"\u21A2\",\"LeftCeiling\":\"\u2308\",\"LeftDoubleBracket\":\"\u27E6\",\"LeftDownTeeVector\":\"\u2961\",\"LeftDownVectorBar\":\"\u2959\",\"LeftDownVector\":\"\u21C3\",\"LeftFloor\":\"\u230A\",\"leftharpoondown\":\"\u21BD\",\"leftharpoonup\":\"\u21BC\",\"leftleftarrows\":\"\u21C7\",\"leftrightarrow\":\"\u2194\",\"LeftRightArrow\":\"\u2194\",\"Leftrightarrow\":\"\u21D4\",\"leftrightarrows\":\"\u21C6\",\"leftrightharpoons\":\"\u21CB\",\"leftrightsquigarrow\":\"\u21AD\",\"LeftRightVector\":\"\u294E\",\"LeftTeeArrow\":\"\u21A4\",\"LeftTee\":\"\u22A3\",\"LeftTeeVector\":\"\u295A\",\"leftthreetimes\":\"\u22CB\",\"LeftTriangleBar\":\"\u29CF\",\"LeftTriangle\":\"\u22B2\",\"LeftTriangleEqual\":\"\u22B4\",\"LeftUpDownVector\":\"\u2951\",\"LeftUpTeeVector\":\"\u2960\",\"LeftUpVectorBar\":\"\u2958\",\"LeftUpVector\":\"\u21BF\",\"LeftVectorBar\":\"\u2952\",\"LeftVector\":\"\u21BC\",\"lEg\":\"\u2A8B\",\"leg\":\"\u22DA\",\"leq\":\"\u2264\",\"leqq\":\"\u2266\",\"leqslant\":\"\u2A7D\",\"lescc\":\"\u2AA8\",\"les\":\"\u2A7D\",\"lesdot\":\"\u2A7F\",\"lesdoto\":\"\u2A81\",\"lesdotor\":\"\u2A83\",\"lesg\":\"\u22DA\uFE00\",\"lesges\":\"\u2A93\",\"lessapprox\":\"\u2A85\",\"lessdot\":\"\u22D6\",\"lesseqgtr\":\"\u22DA\",\"lesseqqgtr\":\"\u2A8B\",\"LessEqualGreater\":\"\u22DA\",\"LessFullEqual\":\"\u2266\",\"LessGreater\":\"\u2276\",\"lessgtr\":\"\u2276\",\"LessLess\":\"\u2AA1\",\"lesssim\":\"\u2272\",\"LessSlantEqual\":\"\u2A7D\",\"LessTilde\":\"\u2272\",\"lfisht\":\"\u297C\",\"lfloor\":\"\u230A\",\"Lfr\":\"\uD835\uDD0F\",\"lfr\":\"\uD835\uDD29\",\"lg\":\"\u2276\",\"lgE\":\"\u2A91\",\"lHar\":\"\u2962\",\"lhard\":\"\u21BD\",\"lharu\":\"\u21BC\",\"lharul\":\"\u296A\",\"lhblk\":\"\u2584\",\"LJcy\":\"\u0409\",\"ljcy\":\"\u0459\",\"llarr\":\"\u21C7\",\"ll\":\"\u226A\",\"Ll\":\"\u22D8\",\"llcorner\":\"\u231E\",\"Lleftarrow\":\"\u21DA\",\"llhard\":\"\u296B\",\"lltri\":\"\u25FA\",\"Lmidot\":\"\u013F\",\"lmidot\":\"\u0140\",\"lmoustache\":\"\u23B0\",\"lmoust\":\"\u23B0\",\"lnap\":\"\u2A89\",\"lnapprox\":\"\u2A89\",\"lne\":\"\u2A87\",\"lnE\":\"\u2268\",\"lneq\":\"\u2A87\",\"lneqq\":\"\u2268\",\"lnsim\":\"\u22E6\",\"loang\":\"\u27EC\",\"loarr\":\"\u21FD\",\"lobrk\":\"\u27E6\",\"longleftarrow\":\"\u27F5\",\"LongLeftArrow\":\"\u27F5\",\"Longleftarrow\":\"\u27F8\",\"longleftrightarrow\":\"\u27F7\",\"LongLeftRightArrow\":\"\u27F7\",\"Longleftrightarrow\":\"\u27FA\",\"longmapsto\":\"\u27FC\",\"longrightarrow\":\"\u27F6\",\"LongRightArrow\":\"\u27F6\",\"Longrightarrow\":\"\u27F9\",\"looparrowleft\":\"\u21AB\",\"looparrowright\":\"\u21AC\",\"lopar\":\"\u2985\",\"Lopf\":\"\uD835\uDD43\",\"lopf\":\"\uD835\uDD5D\",\"loplus\":\"\u2A2D\",\"lotimes\":\"\u2A34\",\"lowast\":\"\u2217\",\"lowbar\":\"_\",\"LowerLeftArrow\":\"\u2199\",\"LowerRightArrow\":\"\u2198\",\"loz\":\"\u25CA\",\"lozenge\":\"\u25CA\",\"lozf\":\"\u29EB\",\"lpar\":\"(\",\"lparlt\":\"\u2993\",\"lrarr\":\"\u21C6\",\"lrcorner\":\"\u231F\",\"lrhar\":\"\u21CB\",\"lrhard\":\"\u296D\",\"lrm\":\"\u200E\",\"lrtri\":\"\u22BF\",\"lsaquo\":\"\u2039\",\"lscr\":\"\uD835\uDCC1\",\"Lscr\":\"\u2112\",\"lsh\":\"\u21B0\",\"Lsh\":\"\u21B0\",\"lsim\":\"\u2272\",\"lsime\":\"\u2A8D\",\"lsimg\":\"\u2A8F\",\"lsqb\":\"[\",\"lsquo\":\"\u2018\",\"lsquor\":\"\u201A\",\"Lstrok\":\"\u0141\",\"lstrok\":\"\u0142\",\"ltcc\":\"\u2AA6\",\"ltcir\":\"\u2A79\",\"lt\":\"<\",\"LT\":\"<\",\"Lt\":\"\u226A\",\"ltdot\":\"\u22D6\",\"lthree\":\"\u22CB\",\"ltimes\":\"\u22C9\",\"ltlarr\":\"\u2976\",\"ltquest\":\"\u2A7B\",\"ltri\":\"\u25C3\",\"ltrie\":\"\u22B4\",\"ltrif\":\"\u25C2\",\"ltrPar\":\"\u2996\",\"lurdshar\":\"\u294A\",\"luruhar\":\"\u2966\",\"lvertneqq\":\"\u2268\uFE00\",\"lvnE\":\"\u2268\uFE00\",\"macr\":\"\u00AF\",\"male\":\"\u2642\",\"malt\":\"\u2720\",\"maltese\":\"\u2720\",\"Map\":\"\u2905\",\"map\":\"\u21A6\",\"mapsto\":\"\u21A6\",\"mapstodown\":\"\u21A7\",\"mapstoleft\":\"\u21A4\",\"mapstoup\":\"\u21A5\",\"marker\":\"\u25AE\",\"mcomma\":\"\u2A29\",\"Mcy\":\"\u041C\",\"mcy\":\"\u043C\",\"mdash\":\"\u2014\",\"mDDot\":\"\u223A\",\"measuredangle\":\"\u2221\",\"MediumSpace\":\"\u205F\",\"Mellintrf\":\"\u2133\",\"Mfr\":\"\uD835\uDD10\",\"mfr\":\"\uD835\uDD2A\",\"mho\":\"\u2127\",\"micro\":\"\u00B5\",\"midast\":\"*\",\"midcir\":\"\u2AF0\",\"mid\":\"\u2223\",\"middot\":\"\u00B7\",\"minusb\":\"\u229F\",\"minus\":\"\u2212\",\"minusd\":\"\u2238\",\"minusdu\":\"\u2A2A\",\"MinusPlus\":\"\u2213\",\"mlcp\":\"\u2ADB\",\"mldr\":\"\u2026\",\"mnplus\":\"\u2213\",\"models\":\"\u22A7\",\"Mopf\":\"\uD835\uDD44\",\"mopf\":\"\uD835\uDD5E\",\"mp\":\"\u2213\",\"mscr\":\"\uD835\uDCC2\",\"Mscr\":\"\u2133\",\"mstpos\":\"\u223E\",\"Mu\":\"\u039C\",\"mu\":\"\u03BC\",\"multimap\":\"\u22B8\",\"mumap\":\"\u22B8\",\"nabla\":\"\u2207\",\"Nacute\":\"\u0143\",\"nacute\":\"\u0144\",\"nang\":\"\u2220\u20D2\",\"nap\":\"\u2249\",\"napE\":\"\u2A70\u0338\",\"napid\":\"\u224B\u0338\",\"napos\":\"\u0149\",\"napprox\":\"\u2249\",\"natural\":\"\u266E\",\"naturals\":\"\u2115\",\"natur\":\"\u266E\",\"nbsp\":\"\u00A0\",\"nbump\":\"\u224E\u0338\",\"nbumpe\":\"\u224F\u0338\",\"ncap\":\"\u2A43\",\"Ncaron\":\"\u0147\",\"ncaron\":\"\u0148\",\"Ncedil\":\"\u0145\",\"ncedil\":\"\u0146\",\"ncong\":\"\u2247\",\"ncongdot\":\"\u2A6D\u0338\",\"ncup\":\"\u2A42\",\"Ncy\":\"\u041D\",\"ncy\":\"\u043D\",\"ndash\":\"\u2013\",\"nearhk\":\"\u2924\",\"nearr\":\"\u2197\",\"neArr\":\"\u21D7\",\"nearrow\":\"\u2197\",\"ne\":\"\u2260\",\"nedot\":\"\u2250\u0338\",\"NegativeMediumSpace\":\"\u200B\",\"NegativeThickSpace\":\"\u200B\",\"NegativeThinSpace\":\"\u200B\",\"NegativeVeryThinSpace\":\"\u200B\",\"nequiv\":\"\u2262\",\"nesear\":\"\u2928\",\"nesim\":\"\u2242\u0338\",\"NestedGreaterGreater\":\"\u226B\",\"NestedLessLess\":\"\u226A\",\"NewLine\":\"\\n\",\"nexist\":\"\u2204\",\"nexists\":\"\u2204\",\"Nfr\":\"\uD835\uDD11\",\"nfr\":\"\uD835\uDD2B\",\"ngE\":\"\u2267\u0338\",\"nge\":\"\u2271\",\"ngeq\":\"\u2271\",\"ngeqq\":\"\u2267\u0338\",\"ngeqslant\":\"\u2A7E\u0338\",\"nges\":\"\u2A7E\u0338\",\"nGg\":\"\u22D9\u0338\",\"ngsim\":\"\u2275\",\"nGt\":\"\u226B\u20D2\",\"ngt\":\"\u226F\",\"ngtr\":\"\u226F\",\"nGtv\":\"\u226B\u0338\",\"nharr\":\"\u21AE\",\"nhArr\":\"\u21CE\",\"nhpar\":\"\u2AF2\",\"ni\":\"\u220B\",\"nis\":\"\u22FC\",\"nisd\":\"\u22FA\",\"niv\":\"\u220B\",\"NJcy\":\"\u040A\",\"njcy\":\"\u045A\",\"nlarr\":\"\u219A\",\"nlArr\":\"\u21CD\",\"nldr\":\"\u2025\",\"nlE\":\"\u2266\u0338\",\"nle\":\"\u2270\",\"nleftarrow\":\"\u219A\",\"nLeftarrow\":\"\u21CD\",\"nleftrightarrow\":\"\u21AE\",\"nLeftrightarrow\":\"\u21CE\",\"nleq\":\"\u2270\",\"nleqq\":\"\u2266\u0338\",\"nleqslant\":\"\u2A7D\u0338\",\"nles\":\"\u2A7D\u0338\",\"nless\":\"\u226E\",\"nLl\":\"\u22D8\u0338\",\"nlsim\":\"\u2274\",\"nLt\":\"\u226A\u20D2\",\"nlt\":\"\u226E\",\"nltri\":\"\u22EA\",\"nltrie\":\"\u22EC\",\"nLtv\":\"\u226A\u0338\",\"nmid\":\"\u2224\",\"NoBreak\":\"\u2060\",\"NonBreakingSpace\":\"\u00A0\",\"nopf\":\"\uD835\uDD5F\",\"Nopf\":\"\u2115\",\"Not\":\"\u2AEC\",\"not\":\"\u00AC\",\"NotCongruent\":\"\u2262\",\"NotCupCap\":\"\u226D\",\"NotDoubleVerticalBar\":\"\u2226\",\"NotElement\":\"\u2209\",\"NotEqual\":\"\u2260\",\"NotEqualTilde\":\"\u2242\u0338\",\"NotExists\":\"\u2204\",\"NotGreater\":\"\u226F\",\"NotGreaterEqual\":\"\u2271\",\"NotGreaterFullEqual\":\"\u2267\u0338\",\"NotGreaterGreater\":\"\u226B\u0338\",\"NotGreaterLess\":\"\u2279\",\"NotGreaterSlantEqual\":\"\u2A7E\u0338\",\"NotGreaterTilde\":\"\u2275\",\"NotHumpDownHump\":\"\u224E\u0338\",\"NotHumpEqual\":\"\u224F\u0338\",\"notin\":\"\u2209\",\"notindot\":\"\u22F5\u0338\",\"notinE\":\"\u22F9\u0338\",\"notinva\":\"\u2209\",\"notinvb\":\"\u22F7\",\"notinvc\":\"\u22F6\",\"NotLeftTriangleBar\":\"\u29CF\u0338\",\"NotLeftTriangle\":\"\u22EA\",\"NotLeftTriangleEqual\":\"\u22EC\",\"NotLess\":\"\u226E\",\"NotLessEqual\":\"\u2270\",\"NotLessGreater\":\"\u2278\",\"NotLessLess\":\"\u226A\u0338\",\"NotLessSlantEqual\":\"\u2A7D\u0338\",\"NotLessTilde\":\"\u2274\",\"NotNestedGreaterGreater\":\"\u2AA2\u0338\",\"NotNestedLessLess\":\"\u2AA1\u0338\",\"notni\":\"\u220C\",\"notniva\":\"\u220C\",\"notnivb\":\"\u22FE\",\"notnivc\":\"\u22FD\",\"NotPrecedes\":\"\u2280\",\"NotPrecedesEqual\":\"\u2AAF\u0338\",\"NotPrecedesSlantEqual\":\"\u22E0\",\"NotReverseElement\":\"\u220C\",\"NotRightTriangleBar\":\"\u29D0\u0338\",\"NotRightTriangle\":\"\u22EB\",\"NotRightTriangleEqual\":\"\u22ED\",\"NotSquareSubset\":\"\u228F\u0338\",\"NotSquareSubsetEqual\":\"\u22E2\",\"NotSquareSuperset\":\"\u2290\u0338\",\"NotSquareSupersetEqual\":\"\u22E3\",\"NotSubset\":\"\u2282\u20D2\",\"NotSubsetEqual\":\"\u2288\",\"NotSucceeds\":\"\u2281\",\"NotSucceedsEqual\":\"\u2AB0\u0338\",\"NotSucceedsSlantEqual\":\"\u22E1\",\"NotSucceedsTilde\":\"\u227F\u0338\",\"NotSuperset\":\"\u2283\u20D2\",\"NotSupersetEqual\":\"\u2289\",\"NotTilde\":\"\u2241\",\"NotTildeEqual\":\"\u2244\",\"NotTildeFullEqual\":\"\u2247\",\"NotTildeTilde\":\"\u2249\",\"NotVerticalBar\":\"\u2224\",\"nparallel\":\"\u2226\",\"npar\":\"\u2226\",\"nparsl\":\"\u2AFD\u20E5\",\"npart\":\"\u2202\u0338\",\"npolint\":\"\u2A14\",\"npr\":\"\u2280\",\"nprcue\":\"\u22E0\",\"nprec\":\"\u2280\",\"npreceq\":\"\u2AAF\u0338\",\"npre\":\"\u2AAF\u0338\",\"nrarrc\":\"\u2933\u0338\",\"nrarr\":\"\u219B\",\"nrArr\":\"\u21CF\",\"nrarrw\":\"\u219D\u0338\",\"nrightarrow\":\"\u219B\",\"nRightarrow\":\"\u21CF\",\"nrtri\":\"\u22EB\",\"nrtrie\":\"\u22ED\",\"nsc\":\"\u2281\",\"nsccue\":\"\u22E1\",\"nsce\":\"\u2AB0\u0338\",\"Nscr\":\"\uD835\uDCA9\",\"nscr\":\"\uD835\uDCC3\",\"nshortmid\":\"\u2224\",\"nshortparallel\":\"\u2226\",\"nsim\":\"\u2241\",\"nsime\":\"\u2244\",\"nsimeq\":\"\u2244\",\"nsmid\":\"\u2224\",\"nspar\":\"\u2226\",\"nsqsube\":\"\u22E2\",\"nsqsupe\":\"\u22E3\",\"nsub\":\"\u2284\",\"nsubE\":\"\u2AC5\u0338\",\"nsube\":\"\u2288\",\"nsubset\":\"\u2282\u20D2\",\"nsubseteq\":\"\u2288\",\"nsubseteqq\":\"\u2AC5\u0338\",\"nsucc\":\"\u2281\",\"nsucceq\":\"\u2AB0\u0338\",\"nsup\":\"\u2285\",\"nsupE\":\"\u2AC6\u0338\",\"nsupe\":\"\u2289\",\"nsupset\":\"\u2283\u20D2\",\"nsupseteq\":\"\u2289\",\"nsupseteqq\":\"\u2AC6\u0338\",\"ntgl\":\"\u2279\",\"Ntilde\":\"\u00D1\",\"ntilde\":\"\u00F1\",\"ntlg\":\"\u2278\",\"ntriangleleft\":\"\u22EA\",\"ntrianglelefteq\":\"\u22EC\",\"ntriangleright\":\"\u22EB\",\"ntrianglerighteq\":\"\u22ED\",\"Nu\":\"\u039D\",\"nu\":\"\u03BD\",\"num\":\"#\",\"numero\":\"\u2116\",\"numsp\":\"\u2007\",\"nvap\":\"\u224D\u20D2\",\"nvdash\":\"\u22AC\",\"nvDash\":\"\u22AD\",\"nVdash\":\"\u22AE\",\"nVDash\":\"\u22AF\",\"nvge\":\"\u2265\u20D2\",\"nvgt\":\">\u20D2\",\"nvHarr\":\"\u2904\",\"nvinfin\":\"\u29DE\",\"nvlArr\":\"\u2902\",\"nvle\":\"\u2264\u20D2\",\"nvlt\":\"<\u20D2\",\"nvltrie\":\"\u22B4\u20D2\",\"nvrArr\":\"\u2903\",\"nvrtrie\":\"\u22B5\u20D2\",\"nvsim\":\"\u223C\u20D2\",\"nwarhk\":\"\u2923\",\"nwarr\":\"\u2196\",\"nwArr\":\"\u21D6\",\"nwarrow\":\"\u2196\",\"nwnear\":\"\u2927\",\"Oacute\":\"\u00D3\",\"oacute\":\"\u00F3\",\"oast\":\"\u229B\",\"Ocirc\":\"\u00D4\",\"ocirc\":\"\u00F4\",\"ocir\":\"\u229A\",\"Ocy\":\"\u041E\",\"ocy\":\"\u043E\",\"odash\":\"\u229D\",\"Odblac\":\"\u0150\",\"odblac\":\"\u0151\",\"odiv\":\"\u2A38\",\"odot\":\"\u2299\",\"odsold\":\"\u29BC\",\"OElig\":\"\u0152\",\"oelig\":\"\u0153\",\"ofcir\":\"\u29BF\",\"Ofr\":\"\uD835\uDD12\",\"ofr\":\"\uD835\uDD2C\",\"ogon\":\"\u02DB\",\"Ograve\":\"\u00D2\",\"ograve\":\"\u00F2\",\"ogt\":\"\u29C1\",\"ohbar\":\"\u29B5\",\"ohm\":\"\u03A9\",\"oint\":\"\u222E\",\"olarr\":\"\u21BA\",\"olcir\":\"\u29BE\",\"olcross\":\"\u29BB\",\"oline\":\"\u203E\",\"olt\":\"\u29C0\",\"Omacr\":\"\u014C\",\"omacr\":\"\u014D\",\"Omega\":\"\u03A9\",\"omega\":\"\u03C9\",\"Omicron\":\"\u039F\",\"omicron\":\"\u03BF\",\"omid\":\"\u29B6\",\"ominus\":\"\u2296\",\"Oopf\":\"\uD835\uDD46\",\"oopf\":\"\uD835\uDD60\",\"opar\":\"\u29B7\",\"OpenCurlyDoubleQuote\":\"\u201C\",\"OpenCurlyQuote\":\"\u2018\",\"operp\":\"\u29B9\",\"oplus\":\"\u2295\",\"orarr\":\"\u21BB\",\"Or\":\"\u2A54\",\"or\":\"\u2228\",\"ord\":\"\u2A5D\",\"order\":\"\u2134\",\"orderof\":\"\u2134\",\"ordf\":\"\u00AA\",\"ordm\":\"\u00BA\",\"origof\":\"\u22B6\",\"oror\":\"\u2A56\",\"orslope\":\"\u2A57\",\"orv\":\"\u2A5B\",\"oS\":\"\u24C8\",\"Oscr\":\"\uD835\uDCAA\",\"oscr\":\"\u2134\",\"Oslash\":\"\u00D8\",\"oslash\":\"\u00F8\",\"osol\":\"\u2298\",\"Otilde\":\"\u00D5\",\"otilde\":\"\u00F5\",\"otimesas\":\"\u2A36\",\"Otimes\":\"\u2A37\",\"otimes\":\"\u2297\",\"Ouml\":\"\u00D6\",\"ouml\":\"\u00F6\",\"ovbar\":\"\u233D\",\"OverBar\":\"\u203E\",\"OverBrace\":\"\u23DE\",\"OverBracket\":\"\u23B4\",\"OverParenthesis\":\"\u23DC\",\"para\":\"\u00B6\",\"parallel\":\"\u2225\",\"par\":\"\u2225\",\"parsim\":\"\u2AF3\",\"parsl\":\"\u2AFD\",\"part\":\"\u2202\",\"PartialD\":\"\u2202\",\"Pcy\":\"\u041F\",\"pcy\":\"\u043F\",\"percnt\":\"%\",\"period\":\".\",\"permil\":\"\u2030\",\"perp\":\"\u22A5\",\"pertenk\":\"\u2031\",\"Pfr\":\"\uD835\uDD13\",\"pfr\":\"\uD835\uDD2D\",\"Phi\":\"\u03A6\",\"phi\":\"\u03C6\",\"phiv\":\"\u03D5\",\"phmmat\":\"\u2133\",\"phone\":\"\u260E\",\"Pi\":\"\u03A0\",\"pi\":\"\u03C0\",\"pitchfork\":\"\u22D4\",\"piv\":\"\u03D6\",\"planck\":\"\u210F\",\"planckh\":\"\u210E\",\"plankv\":\"\u210F\",\"plusacir\":\"\u2A23\",\"plusb\":\"\u229E\",\"pluscir\":\"\u2A22\",\"plus\":\"+\",\"plusdo\":\"\u2214\",\"plusdu\":\"\u2A25\",\"pluse\":\"\u2A72\",\"PlusMinus\":\"\u00B1\",\"plusmn\":\"\u00B1\",\"plussim\":\"\u2A26\",\"plustwo\":\"\u2A27\",\"pm\":\"\u00B1\",\"Poincareplane\":\"\u210C\",\"pointint\":\"\u2A15\",\"popf\":\"\uD835\uDD61\",\"Popf\":\"\u2119\",\"pound\":\"\u00A3\",\"prap\":\"\u2AB7\",\"Pr\":\"\u2ABB\",\"pr\":\"\u227A\",\"prcue\":\"\u227C\",\"precapprox\":\"\u2AB7\",\"prec\":\"\u227A\",\"preccurlyeq\":\"\u227C\",\"Precedes\":\"\u227A\",\"PrecedesEqual\":\"\u2AAF\",\"PrecedesSlantEqual\":\"\u227C\",\"PrecedesTilde\":\"\u227E\",\"preceq\":\"\u2AAF\",\"precnapprox\":\"\u2AB9\",\"precneqq\":\"\u2AB5\",\"precnsim\":\"\u22E8\",\"pre\":\"\u2AAF\",\"prE\":\"\u2AB3\",\"precsim\":\"\u227E\",\"prime\":\"\u2032\",\"Prime\":\"\u2033\",\"primes\":\"\u2119\",\"prnap\":\"\u2AB9\",\"prnE\":\"\u2AB5\",\"prnsim\":\"\u22E8\",\"prod\":\"\u220F\",\"Product\":\"\u220F\",\"profalar\":\"\u232E\",\"profline\":\"\u2312\",\"profsurf\":\"\u2313\",\"prop\":\"\u221D\",\"Proportional\":\"\u221D\",\"Proportion\":\"\u2237\",\"propto\":\"\u221D\",\"prsim\":\"\u227E\",\"prurel\":\"\u22B0\",\"Pscr\":\"\uD835\uDCAB\",\"pscr\":\"\uD835\uDCC5\",\"Psi\":\"\u03A8\",\"psi\":\"\u03C8\",\"puncsp\":\"\u2008\",\"Qfr\":\"\uD835\uDD14\",\"qfr\":\"\uD835\uDD2E\",\"qint\":\"\u2A0C\",\"qopf\":\"\uD835\uDD62\",\"Qopf\":\"\u211A\",\"qprime\":\"\u2057\",\"Qscr\":\"\uD835\uDCAC\",\"qscr\":\"\uD835\uDCC6\",\"quaternions\":\"\u210D\",\"quatint\":\"\u2A16\",\"quest\":\"?\",\"questeq\":\"\u225F\",\"quot\":\"\\\"\",\"QUOT\":\"\\\"\",\"rAarr\":\"\u21DB\",\"race\":\"\u223D\u0331\",\"Racute\":\"\u0154\",\"racute\":\"\u0155\",\"radic\":\"\u221A\",\"raemptyv\":\"\u29B3\",\"rang\":\"\u27E9\",\"Rang\":\"\u27EB\",\"rangd\":\"\u2992\",\"range\":\"\u29A5\",\"rangle\":\"\u27E9\",\"raquo\":\"\u00BB\",\"rarrap\":\"\u2975\",\"rarrb\":\"\u21E5\",\"rarrbfs\":\"\u2920\",\"rarrc\":\"\u2933\",\"rarr\":\"\u2192\",\"Rarr\":\"\u21A0\",\"rArr\":\"\u21D2\",\"rarrfs\":\"\u291E\",\"rarrhk\":\"\u21AA\",\"rarrlp\":\"\u21AC\",\"rarrpl\":\"\u2945\",\"rarrsim\":\"\u2974\",\"Rarrtl\":\"\u2916\",\"rarrtl\":\"\u21A3\",\"rarrw\":\"\u219D\",\"ratail\":\"\u291A\",\"rAtail\":\"\u291C\",\"ratio\":\"\u2236\",\"rationals\":\"\u211A\",\"rbarr\":\"\u290D\",\"rBarr\":\"\u290F\",\"RBarr\":\"\u2910\",\"rbbrk\":\"\u2773\",\"rbrace\":\"}\",\"rbrack\":\"]\",\"rbrke\":\"\u298C\",\"rbrksld\":\"\u298E\",\"rbrkslu\":\"\u2990\",\"Rcaron\":\"\u0158\",\"rcaron\":\"\u0159\",\"Rcedil\":\"\u0156\",\"rcedil\":\"\u0157\",\"rceil\":\"\u2309\",\"rcub\":\"}\",\"Rcy\":\"\u0420\",\"rcy\":\"\u0440\",\"rdca\":\"\u2937\",\"rdldhar\":\"\u2969\",\"rdquo\":\"\u201D\",\"rdquor\":\"\u201D\",\"rdsh\":\"\u21B3\",\"real\":\"\u211C\",\"realine\":\"\u211B\",\"realpart\":\"\u211C\",\"reals\":\"\u211D\",\"Re\":\"\u211C\",\"rect\":\"\u25AD\",\"reg\":\"\u00AE\",\"REG\":\"\u00AE\",\"ReverseElement\":\"\u220B\",\"ReverseEquilibrium\":\"\u21CB\",\"ReverseUpEquilibrium\":\"\u296F\",\"rfisht\":\"\u297D\",\"rfloor\":\"\u230B\",\"rfr\":\"\uD835\uDD2F\",\"Rfr\":\"\u211C\",\"rHar\":\"\u2964\",\"rhard\":\"\u21C1\",\"rharu\":\"\u21C0\",\"rharul\":\"\u296C\",\"Rho\":\"\u03A1\",\"rho\":\"\u03C1\",\"rhov\":\"\u03F1\",\"RightAngleBracket\":\"\u27E9\",\"RightArrowBar\":\"\u21E5\",\"rightarrow\":\"\u2192\",\"RightArrow\":\"\u2192\",\"Rightarrow\":\"\u21D2\",\"RightArrowLeftArrow\":\"\u21C4\",\"rightarrowtail\":\"\u21A3\",\"RightCeiling\":\"\u2309\",\"RightDoubleBracket\":\"\u27E7\",\"RightDownTeeVector\":\"\u295D\",\"RightDownVectorBar\":\"\u2955\",\"RightDownVector\":\"\u21C2\",\"RightFloor\":\"\u230B\",\"rightharpoondown\":\"\u21C1\",\"rightharpoonup\":\"\u21C0\",\"rightleftarrows\":\"\u21C4\",\"rightleftharpoons\":\"\u21CC\",\"rightrightarrows\":\"\u21C9\",\"rightsquigarrow\":\"\u219D\",\"RightTeeArrow\":\"\u21A6\",\"RightTee\":\"\u22A2\",\"RightTeeVector\":\"\u295B\",\"rightthreetimes\":\"\u22CC\",\"RightTriangleBar\":\"\u29D0\",\"RightTriangle\":\"\u22B3\",\"RightTriangleEqual\":\"\u22B5\",\"RightUpDownVector\":\"\u294F\",\"RightUpTeeVector\":\"\u295C\",\"RightUpVectorBar\":\"\u2954\",\"RightUpVector\":\"\u21BE\",\"RightVectorBar\":\"\u2953\",\"RightVector\":\"\u21C0\",\"ring\":\"\u02DA\",\"risingdotseq\":\"\u2253\",\"rlarr\":\"\u21C4\",\"rlhar\":\"\u21CC\",\"rlm\":\"\u200F\",\"rmoustache\":\"\u23B1\",\"rmoust\":\"\u23B1\",\"rnmid\":\"\u2AEE\",\"roang\":\"\u27ED\",\"roarr\":\"\u21FE\",\"robrk\":\"\u27E7\",\"ropar\":\"\u2986\",\"ropf\":\"\uD835\uDD63\",\"Ropf\":\"\u211D\",\"roplus\":\"\u2A2E\",\"rotimes\":\"\u2A35\",\"RoundImplies\":\"\u2970\",\"rpar\":\")\",\"rpargt\":\"\u2994\",\"rppolint\":\"\u2A12\",\"rrarr\":\"\u21C9\",\"Rrightarrow\":\"\u21DB\",\"rsaquo\":\"\u203A\",\"rscr\":\"\uD835\uDCC7\",\"Rscr\":\"\u211B\",\"rsh\":\"\u21B1\",\"Rsh\":\"\u21B1\",\"rsqb\":\"]\",\"rsquo\":\"\u2019\",\"rsquor\":\"\u2019\",\"rthree\":\"\u22CC\",\"rtimes\":\"\u22CA\",\"rtri\":\"\u25B9\",\"rtrie\":\"\u22B5\",\"rtrif\":\"\u25B8\",\"rtriltri\":\"\u29CE\",\"RuleDelayed\":\"\u29F4\",\"ruluhar\":\"\u2968\",\"rx\":\"\u211E\",\"Sacute\":\"\u015A\",\"sacute\":\"\u015B\",\"sbquo\":\"\u201A\",\"scap\":\"\u2AB8\",\"Scaron\":\"\u0160\",\"scaron\":\"\u0161\",\"Sc\":\"\u2ABC\",\"sc\":\"\u227B\",\"sccue\":\"\u227D\",\"sce\":\"\u2AB0\",\"scE\":\"\u2AB4\",\"Scedil\":\"\u015E\",\"scedil\":\"\u015F\",\"Scirc\":\"\u015C\",\"scirc\":\"\u015D\",\"scnap\":\"\u2ABA\",\"scnE\":\"\u2AB6\",\"scnsim\":\"\u22E9\",\"scpolint\":\"\u2A13\",\"scsim\":\"\u227F\",\"Scy\":\"\u0421\",\"scy\":\"\u0441\",\"sdotb\":\"\u22A1\",\"sdot\":\"\u22C5\",\"sdote\":\"\u2A66\",\"searhk\":\"\u2925\",\"searr\":\"\u2198\",\"seArr\":\"\u21D8\",\"searrow\":\"\u2198\",\"sect\":\"\u00A7\",\"semi\":\";\",\"seswar\":\"\u2929\",\"setminus\":\"\u2216\",\"setmn\":\"\u2216\",\"sext\":\"\u2736\",\"Sfr\":\"\uD835\uDD16\",\"sfr\":\"\uD835\uDD30\",\"sfrown\":\"\u2322\",\"sharp\":\"\u266F\",\"SHCHcy\":\"\u0429\",\"shchcy\":\"\u0449\",\"SHcy\":\"\u0428\",\"shcy\":\"\u0448\",\"ShortDownArrow\":\"\u2193\",\"ShortLeftArrow\":\"\u2190\",\"shortmid\":\"\u2223\",\"shortparallel\":\"\u2225\",\"ShortRightArrow\":\"\u2192\",\"ShortUpArrow\":\"\u2191\",\"shy\":\"\u00AD\",\"Sigma\":\"\u03A3\",\"sigma\":\"\u03C3\",\"sigmaf\":\"\u03C2\",\"sigmav\":\"\u03C2\",\"sim\":\"\u223C\",\"simdot\":\"\u2A6A\",\"sime\":\"\u2243\",\"simeq\":\"\u2243\",\"simg\":\"\u2A9E\",\"simgE\":\"\u2AA0\",\"siml\":\"\u2A9D\",\"simlE\":\"\u2A9F\",\"simne\":\"\u2246\",\"simplus\":\"\u2A24\",\"simrarr\":\"\u2972\",\"slarr\":\"\u2190\",\"SmallCircle\":\"\u2218\",\"smallsetminus\":\"\u2216\",\"smashp\":\"\u2A33\",\"smeparsl\":\"\u29E4\",\"smid\":\"\u2223\",\"smile\":\"\u2323\",\"smt\":\"\u2AAA\",\"smte\":\"\u2AAC\",\"smtes\":\"\u2AAC\uFE00\",\"SOFTcy\":\"\u042C\",\"softcy\":\"\u044C\",\"solbar\":\"\u233F\",\"solb\":\"\u29C4\",\"sol\":\"/\",\"Sopf\":\"\uD835\uDD4A\",\"sopf\":\"\uD835\uDD64\",\"spades\":\"\u2660\",\"spadesuit\":\"\u2660\",\"spar\":\"\u2225\",\"sqcap\":\"\u2293\",\"sqcaps\":\"\u2293\uFE00\",\"sqcup\":\"\u2294\",\"sqcups\":\"\u2294\uFE00\",\"Sqrt\":\"\u221A\",\"sqsub\":\"\u228F\",\"sqsube\":\"\u2291\",\"sqsubset\":\"\u228F\",\"sqsubseteq\":\"\u2291\",\"sqsup\":\"\u2290\",\"sqsupe\":\"\u2292\",\"sqsupset\":\"\u2290\",\"sqsupseteq\":\"\u2292\",\"square\":\"\u25A1\",\"Square\":\"\u25A1\",\"SquareIntersection\":\"\u2293\",\"SquareSubset\":\"\u228F\",\"SquareSubsetEqual\":\"\u2291\",\"SquareSuperset\":\"\u2290\",\"SquareSupersetEqual\":\"\u2292\",\"SquareUnion\":\"\u2294\",\"squarf\":\"\u25AA\",\"squ\":\"\u25A1\",\"squf\":\"\u25AA\",\"srarr\":\"\u2192\",\"Sscr\":\"\uD835\uDCAE\",\"sscr\":\"\uD835\uDCC8\",\"ssetmn\":\"\u2216\",\"ssmile\":\"\u2323\",\"sstarf\":\"\u22C6\",\"Star\":\"\u22C6\",\"star\":\"\u2606\",\"starf\":\"\u2605\",\"straightepsilon\":\"\u03F5\",\"straightphi\":\"\u03D5\",\"strns\":\"\u00AF\",\"sub\":\"\u2282\",\"Sub\":\"\u22D0\",\"subdot\":\"\u2ABD\",\"subE\":\"\u2AC5\",\"sube\":\"\u2286\",\"subedot\":\"\u2AC3\",\"submult\":\"\u2AC1\",\"subnE\":\"\u2ACB\",\"subne\":\"\u228A\",\"subplus\":\"\u2ABF\",\"subrarr\":\"\u2979\",\"subset\":\"\u2282\",\"Subset\":\"\u22D0\",\"subseteq\":\"\u2286\",\"subseteqq\":\"\u2AC5\",\"SubsetEqual\":\"\u2286\",\"subsetneq\":\"\u228A\",\"subsetneqq\":\"\u2ACB\",\"subsim\":\"\u2AC7\",\"subsub\":\"\u2AD5\",\"subsup\":\"\u2AD3\",\"succapprox\":\"\u2AB8\",\"succ\":\"\u227B\",\"succcurlyeq\":\"\u227D\",\"Succeeds\":\"\u227B\",\"SucceedsEqual\":\"\u2AB0\",\"SucceedsSlantEqual\":\"\u227D\",\"SucceedsTilde\":\"\u227F\",\"succeq\":\"\u2AB0\",\"succnapprox\":\"\u2ABA\",\"succneqq\":\"\u2AB6\",\"succnsim\":\"\u22E9\",\"succsim\":\"\u227F\",\"SuchThat\":\"\u220B\",\"sum\":\"\u2211\",\"Sum\":\"\u2211\",\"sung\":\"\u266A\",\"sup1\":\"\u00B9\",\"sup2\":\"\u00B2\",\"sup3\":\"\u00B3\",\"sup\":\"\u2283\",\"Sup\":\"\u22D1\",\"supdot\":\"\u2ABE\",\"supdsub\":\"\u2AD8\",\"supE\":\"\u2AC6\",\"supe\":\"\u2287\",\"supedot\":\"\u2AC4\",\"Superset\":\"\u2283\",\"SupersetEqual\":\"\u2287\",\"suphsol\":\"\u27C9\",\"suphsub\":\"\u2AD7\",\"suplarr\":\"\u297B\",\"supmult\":\"\u2AC2\",\"supnE\":\"\u2ACC\",\"supne\":\"\u228B\",\"supplus\":\"\u2AC0\",\"supset\":\"\u2283\",\"Supset\":\"\u22D1\",\"supseteq\":\"\u2287\",\"supseteqq\":\"\u2AC6\",\"supsetneq\":\"\u228B\",\"supsetneqq\":\"\u2ACC\",\"supsim\":\"\u2AC8\",\"supsub\":\"\u2AD4\",\"supsup\":\"\u2AD6\",\"swarhk\":\"\u2926\",\"swarr\":\"\u2199\",\"swArr\":\"\u21D9\",\"swarrow\":\"\u2199\",\"swnwar\":\"\u292A\",\"szlig\":\"\u00DF\",\"Tab\":\"\\t\",\"target\":\"\u2316\",\"Tau\":\"\u03A4\",\"tau\":\"\u03C4\",\"tbrk\":\"\u23B4\",\"Tcaron\":\"\u0164\",\"tcaron\":\"\u0165\",\"Tcedil\":\"\u0162\",\"tcedil\":\"\u0163\",\"Tcy\":\"\u0422\",\"tcy\":\"\u0442\",\"tdot\":\"\u20DB\",\"telrec\":\"\u2315\",\"Tfr\":\"\uD835\uDD17\",\"tfr\":\"\uD835\uDD31\",\"there4\":\"\u2234\",\"therefore\":\"\u2234\",\"Therefore\":\"\u2234\",\"Theta\":\"\u0398\",\"theta\":\"\u03B8\",\"thetasym\":\"\u03D1\",\"thetav\":\"\u03D1\",\"thickapprox\":\"\u2248\",\"thicksim\":\"\u223C\",\"ThickSpace\":\"\u205F\u200A\",\"ThinSpace\":\"\u2009\",\"thinsp\":\"\u2009\",\"thkap\":\"\u2248\",\"thksim\":\"\u223C\",\"THORN\":\"\u00DE\",\"thorn\":\"\u00FE\",\"tilde\":\"\u02DC\",\"Tilde\":\"\u223C\",\"TildeEqual\":\"\u2243\",\"TildeFullEqual\":\"\u2245\",\"TildeTilde\":\"\u2248\",\"timesbar\":\"\u2A31\",\"timesb\":\"\u22A0\",\"times\":\"\u00D7\",\"timesd\":\"\u2A30\",\"tint\":\"\u222D\",\"toea\":\"\u2928\",\"topbot\":\"\u2336\",\"topcir\":\"\u2AF1\",\"top\":\"\u22A4\",\"Topf\":\"\uD835\uDD4B\",\"topf\":\"\uD835\uDD65\",\"topfork\":\"\u2ADA\",\"tosa\":\"\u2929\",\"tprime\":\"\u2034\",\"trade\":\"\u2122\",\"TRADE\":\"\u2122\",\"triangle\":\"\u25B5\",\"triangledown\":\"\u25BF\",\"triangleleft\":\"\u25C3\",\"trianglelefteq\":\"\u22B4\",\"triangleq\":\"\u225C\",\"triangleright\":\"\u25B9\",\"trianglerighteq\":\"\u22B5\",\"tridot\":\"\u25EC\",\"trie\":\"\u225C\",\"triminus\":\"\u2A3A\",\"TripleDot\":\"\u20DB\",\"triplus\":\"\u2A39\",\"trisb\":\"\u29CD\",\"tritime\":\"\u2A3B\",\"trpezium\":\"\u23E2\",\"Tscr\":\"\uD835\uDCAF\",\"tscr\":\"\uD835\uDCC9\",\"TScy\":\"\u0426\",\"tscy\":\"\u0446\",\"TSHcy\":\"\u040B\",\"tshcy\":\"\u045B\",\"Tstrok\":\"\u0166\",\"tstrok\":\"\u0167\",\"twixt\":\"\u226C\",\"twoheadleftarrow\":\"\u219E\",\"twoheadrightarrow\":\"\u21A0\",\"Uacute\":\"\u00DA\",\"uacute\":\"\u00FA\",\"uarr\":\"\u2191\",\"Uarr\":\"\u219F\",\"uArr\":\"\u21D1\",\"Uarrocir\":\"\u2949\",\"Ubrcy\":\"\u040E\",\"ubrcy\":\"\u045E\",\"Ubreve\":\"\u016C\",\"ubreve\":\"\u016D\",\"Ucirc\":\"\u00DB\",\"ucirc\":\"\u00FB\",\"Ucy\":\"\u0423\",\"ucy\":\"\u0443\",\"udarr\":\"\u21C5\",\"Udblac\":\"\u0170\",\"udblac\":\"\u0171\",\"udhar\":\"\u296E\",\"ufisht\":\"\u297E\",\"Ufr\":\"\uD835\uDD18\",\"ufr\":\"\uD835\uDD32\",\"Ugrave\":\"\u00D9\",\"ugrave\":\"\u00F9\",\"uHar\":\"\u2963\",\"uharl\":\"\u21BF\",\"uharr\":\"\u21BE\",\"uhblk\":\"\u2580\",\"ulcorn\":\"\u231C\",\"ulcorner\":\"\u231C\",\"ulcrop\":\"\u230F\",\"ultri\":\"\u25F8\",\"Umacr\":\"\u016A\",\"umacr\":\"\u016B\",\"uml\":\"\u00A8\",\"UnderBar\":\"_\",\"UnderBrace\":\"\u23DF\",\"UnderBracket\":\"\u23B5\",\"UnderParenthesis\":\"\u23DD\",\"Union\":\"\u22C3\",\"UnionPlus\":\"\u228E\",\"Uogon\":\"\u0172\",\"uogon\":\"\u0173\",\"Uopf\":\"\uD835\uDD4C\",\"uopf\":\"\uD835\uDD66\",\"UpArrowBar\":\"\u2912\",\"uparrow\":\"\u2191\",\"UpArrow\":\"\u2191\",\"Uparrow\":\"\u21D1\",\"UpArrowDownArrow\":\"\u21C5\",\"updownarrow\":\"\u2195\",\"UpDownArrow\":\"\u2195\",\"Updownarrow\":\"\u21D5\",\"UpEquilibrium\":\"\u296E\",\"upharpoonleft\":\"\u21BF\",\"upharpoonright\":\"\u21BE\",\"uplus\":\"\u228E\",\"UpperLeftArrow\":\"\u2196\",\"UpperRightArrow\":\"\u2197\",\"upsi\":\"\u03C5\",\"Upsi\":\"\u03D2\",\"upsih\":\"\u03D2\",\"Upsilon\":\"\u03A5\",\"upsilon\":\"\u03C5\",\"UpTeeArrow\":\"\u21A5\",\"UpTee\":\"\u22A5\",\"upuparrows\":\"\u21C8\",\"urcorn\":\"\u231D\",\"urcorner\":\"\u231D\",\"urcrop\":\"\u230E\",\"Uring\":\"\u016E\",\"uring\":\"\u016F\",\"urtri\":\"\u25F9\",\"Uscr\":\"\uD835\uDCB0\",\"uscr\":\"\uD835\uDCCA\",\"utdot\":\"\u22F0\",\"Utilde\":\"\u0168\",\"utilde\":\"\u0169\",\"utri\":\"\u25B5\",\"utrif\":\"\u25B4\",\"uuarr\":\"\u21C8\",\"Uuml\":\"\u00DC\",\"uuml\":\"\u00FC\",\"uwangle\":\"\u29A7\",\"vangrt\":\"\u299C\",\"varepsilon\":\"\u03F5\",\"varkappa\":\"\u03F0\",\"varnothing\":\"\u2205\",\"varphi\":\"\u03D5\",\"varpi\":\"\u03D6\",\"varpropto\":\"\u221D\",\"varr\":\"\u2195\",\"vArr\":\"\u21D5\",\"varrho\":\"\u03F1\",\"varsigma\":\"\u03C2\",\"varsubsetneq\":\"\u228A\uFE00\",\"varsubsetneqq\":\"\u2ACB\uFE00\",\"varsupsetneq\":\"\u228B\uFE00\",\"varsupsetneqq\":\"\u2ACC\uFE00\",\"vartheta\":\"\u03D1\",\"vartriangleleft\":\"\u22B2\",\"vartriangleright\":\"\u22B3\",\"vBar\":\"\u2AE8\",\"Vbar\":\"\u2AEB\",\"vBarv\":\"\u2AE9\",\"Vcy\":\"\u0412\",\"vcy\":\"\u0432\",\"vdash\":\"\u22A2\",\"vDash\":\"\u22A8\",\"Vdash\":\"\u22A9\",\"VDash\":\"\u22AB\",\"Vdashl\":\"\u2AE6\",\"veebar\":\"\u22BB\",\"vee\":\"\u2228\",\"Vee\":\"\u22C1\",\"veeeq\":\"\u225A\",\"vellip\":\"\u22EE\",\"verbar\":\"|\",\"Verbar\":\"\u2016\",\"vert\":\"|\",\"Vert\":\"\u2016\",\"VerticalBar\":\"\u2223\",\"VerticalLine\":\"|\",\"VerticalSeparator\":\"\u2758\",\"VerticalTilde\":\"\u2240\",\"VeryThinSpace\":\"\u200A\",\"Vfr\":\"\uD835\uDD19\",\"vfr\":\"\uD835\uDD33\",\"vltri\":\"\u22B2\",\"vnsub\":\"\u2282\u20D2\",\"vnsup\":\"\u2283\u20D2\",\"Vopf\":\"\uD835\uDD4D\",\"vopf\":\"\uD835\uDD67\",\"vprop\":\"\u221D\",\"vrtri\":\"\u22B3\",\"Vscr\":\"\uD835\uDCB1\",\"vscr\":\"\uD835\uDCCB\",\"vsubnE\":\"\u2ACB\uFE00\",\"vsubne\":\"\u228A\uFE00\",\"vsupnE\":\"\u2ACC\uFE00\",\"vsupne\":\"\u228B\uFE00\",\"Vvdash\":\"\u22AA\",\"vzigzag\":\"\u299A\",\"Wcirc\":\"\u0174\",\"wcirc\":\"\u0175\",\"wedbar\":\"\u2A5F\",\"wedge\":\"\u2227\",\"Wedge\":\"\u22C0\",\"wedgeq\":\"\u2259\",\"weierp\":\"\u2118\",\"Wfr\":\"\uD835\uDD1A\",\"wfr\":\"\uD835\uDD34\",\"Wopf\":\"\uD835\uDD4E\",\"wopf\":\"\uD835\uDD68\",\"wp\":\"\u2118\",\"wr\":\"\u2240\",\"wreath\":\"\u2240\",\"Wscr\":\"\uD835\uDCB2\",\"wscr\":\"\uD835\uDCCC\",\"xcap\":\"\u22C2\",\"xcirc\":\"\u25EF\",\"xcup\":\"\u22C3\",\"xdtri\":\"\u25BD\",\"Xfr\":\"\uD835\uDD1B\",\"xfr\":\"\uD835\uDD35\",\"xharr\":\"\u27F7\",\"xhArr\":\"\u27FA\",\"Xi\":\"\u039E\",\"xi\":\"\u03BE\",\"xlarr\":\"\u27F5\",\"xlArr\":\"\u27F8\",\"xmap\":\"\u27FC\",\"xnis\":\"\u22FB\",\"xodot\":\"\u2A00\",\"Xopf\":\"\uD835\uDD4F\",\"xopf\":\"\uD835\uDD69\",\"xoplus\":\"\u2A01\",\"xotime\":\"\u2A02\",\"xrarr\":\"\u27F6\",\"xrArr\":\"\u27F9\",\"Xscr\":\"\uD835\uDCB3\",\"xscr\":\"\uD835\uDCCD\",\"xsqcup\":\"\u2A06\",\"xuplus\":\"\u2A04\",\"xutri\":\"\u25B3\",\"xvee\":\"\u22C1\",\"xwedge\":\"\u22C0\",\"Yacute\":\"\u00DD\",\"yacute\":\"\u00FD\",\"YAcy\":\"\u042F\",\"yacy\":\"\u044F\",\"Ycirc\":\"\u0176\",\"ycirc\":\"\u0177\",\"Ycy\":\"\u042B\",\"ycy\":\"\u044B\",\"yen\":\"\u00A5\",\"Yfr\":\"\uD835\uDD1C\",\"yfr\":\"\uD835\uDD36\",\"YIcy\":\"\u0407\",\"yicy\":\"\u0457\",\"Yopf\":\"\uD835\uDD50\",\"yopf\":\"\uD835\uDD6A\",\"Yscr\":\"\uD835\uDCB4\",\"yscr\":\"\uD835\uDCCE\",\"YUcy\":\"\u042E\",\"yucy\":\"\u044E\",\"yuml\":\"\u00FF\",\"Yuml\":\"\u0178\",\"Zacute\":\"\u0179\",\"zacute\":\"\u017A\",\"Zcaron\":\"\u017D\",\"zcaron\":\"\u017E\",\"Zcy\":\"\u0417\",\"zcy\":\"\u0437\",\"Zdot\":\"\u017B\",\"zdot\":\"\u017C\",\"zeetrf\":\"\u2128\",\"ZeroWidthSpace\":\"\u200B\",\"Zeta\":\"\u0396\",\"zeta\":\"\u03B6\",\"zfr\":\"\uD835\uDD37\",\"Zfr\":\"\u2128\",\"ZHcy\":\"\u0416\",\"zhcy\":\"\u0436\",\"zigrarr\":\"\u21DD\",\"zopf\":\"\uD835\uDD6B\",\"Zopf\":\"\u2124\",\"Zscr\":\"\uD835\uDCB5\",\"zscr\":\"\uD835\uDCCF\",\"zwj\":\"\u200D\",\"zwnj\":\"\u200C\"}\n", "// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n", "// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 '\u1E9E'.toLowerCase() === '\u1E7E', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('\u1E9E'.toLowerCase() === '\u1E7E') {\n    str = str.replace(/\u1E9E/g, '\u00DF');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // \u0130, \u03F4, \u1E9E, \u2126, \u212A, \u212B - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (\u0398), U+03f4 (\u03F4) and lowercase U+03b8 (\u03B8), U+03d1 (\u03D1)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change \u03D1 (it's already lowercase),\n  // and .toUpperCase() doesn't change \u03F4 (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n", "'use strict';\n\nconst UNDEFINED_CODE_POINTS = [\n    0xfffe,\n    0xffff,\n    0x1fffe,\n    0x1ffff,\n    0x2fffe,\n    0x2ffff,\n    0x3fffe,\n    0x3ffff,\n    0x4fffe,\n    0x4ffff,\n    0x5fffe,\n    0x5ffff,\n    0x6fffe,\n    0x6ffff,\n    0x7fffe,\n    0x7ffff,\n    0x8fffe,\n    0x8ffff,\n    0x9fffe,\n    0x9ffff,\n    0xafffe,\n    0xaffff,\n    0xbfffe,\n    0xbffff,\n    0xcfffe,\n    0xcffff,\n    0xdfffe,\n    0xdffff,\n    0xefffe,\n    0xeffff,\n    0xffffe,\n    0xfffff,\n    0x10fffe,\n    0x10ffff\n];\n\nexports.REPLACEMENT_CHARACTER = '\\uFFFD';\n\nexports.CODE_POINTS = {\n    EOF: -1,\n    NULL: 0x00,\n    TABULATION: 0x09,\n    CARRIAGE_RETURN: 0x0d,\n    LINE_FEED: 0x0a,\n    FORM_FEED: 0x0c,\n    SPACE: 0x20,\n    EXCLAMATION_MARK: 0x21,\n    QUOTATION_MARK: 0x22,\n    NUMBER_SIGN: 0x23,\n    AMPERSAND: 0x26,\n    APOSTROPHE: 0x27,\n    HYPHEN_MINUS: 0x2d,\n    SOLIDUS: 0x2f,\n    DIGIT_0: 0x30,\n    DIGIT_9: 0x39,\n    SEMICOLON: 0x3b,\n    LESS_THAN_SIGN: 0x3c,\n    EQUALS_SIGN: 0x3d,\n    GREATER_THAN_SIGN: 0x3e,\n    QUESTION_MARK: 0x3f,\n    LATIN_CAPITAL_A: 0x41,\n    LATIN_CAPITAL_F: 0x46,\n    LATIN_CAPITAL_X: 0x58,\n    LATIN_CAPITAL_Z: 0x5a,\n    RIGHT_SQUARE_BRACKET: 0x5d,\n    GRAVE_ACCENT: 0x60,\n    LATIN_SMALL_A: 0x61,\n    LATIN_SMALL_F: 0x66,\n    LATIN_SMALL_X: 0x78,\n    LATIN_SMALL_Z: 0x7a,\n    REPLACEMENT_CHARACTER: 0xfffd\n};\n\nexports.CODE_POINT_SEQUENCES = {\n    DASH_DASH_STRING: [0x2d, 0x2d], //--\n    DOCTYPE_STRING: [0x44, 0x4f, 0x43, 0x54, 0x59, 0x50, 0x45], //DOCTYPE\n    CDATA_START_STRING: [0x5b, 0x43, 0x44, 0x41, 0x54, 0x41, 0x5b], //[CDATA[\n    SCRIPT_STRING: [0x73, 0x63, 0x72, 0x69, 0x70, 0x74], //script\n    PUBLIC_STRING: [0x50, 0x55, 0x42, 0x4c, 0x49, 0x43], //PUBLIC\n    SYSTEM_STRING: [0x53, 0x59, 0x53, 0x54, 0x45, 0x4d] //SYSTEM\n};\n\n//Surrogates\nexports.isSurrogate = function(cp) {\n    return cp >= 0xd800 && cp <= 0xdfff;\n};\n\nexports.isSurrogatePair = function(cp) {\n    return cp >= 0xdc00 && cp <= 0xdfff;\n};\n\nexports.getSurrogatePairCodePoint = function(cp1, cp2) {\n    return (cp1 - 0xd800) * 0x400 + 0x2400 + cp2;\n};\n\n//NOTE: excluding NULL and ASCII whitespace\nexports.isControlCodePoint = function(cp) {\n    return (\n        (cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f)\n    );\n};\n\nexports.isUndefinedCodePoint = function(cp) {\n    return (cp >= 0xfdd0 && cp <= 0xfdef) || UNDEFINED_CODE_POINTS.indexOf(cp) > -1;\n};\n", "'use strict';\n\nmodule.exports = {\n    controlCharacterInInputStream: 'control-character-in-input-stream',\n    noncharacterInInputStream: 'noncharacter-in-input-stream',\n    surrogateInInputStream: 'surrogate-in-input-stream',\n    nonVoidHtmlElementStartTagWithTrailingSolidus: 'non-void-html-element-start-tag-with-trailing-solidus',\n    endTagWithAttributes: 'end-tag-with-attributes',\n    endTagWithTrailingSolidus: 'end-tag-with-trailing-solidus',\n    unexpectedSolidusInTag: 'unexpected-solidus-in-tag',\n    unexpectedNullCharacter: 'unexpected-null-character',\n    unexpectedQuestionMarkInsteadOfTagName: 'unexpected-question-mark-instead-of-tag-name',\n    invalidFirstCharacterOfTagName: 'invalid-first-character-of-tag-name',\n    unexpectedEqualsSignBeforeAttributeName: 'unexpected-equals-sign-before-attribute-name',\n    missingEndTagName: 'missing-end-tag-name',\n    unexpectedCharacterInAttributeName: 'unexpected-character-in-attribute-name',\n    unknownNamedCharacterReference: 'unknown-named-character-reference',\n    missingSemicolonAfterCharacterReference: 'missing-semicolon-after-character-reference',\n    unexpectedCharacterAfterDoctypeSystemIdentifier: 'unexpected-character-after-doctype-system-identifier',\n    unexpectedCharacterInUnquotedAttributeValue: 'unexpected-character-in-unquoted-attribute-value',\n    eofBeforeTagName: 'eof-before-tag-name',\n    eofInTag: 'eof-in-tag',\n    missingAttributeValue: 'missing-attribute-value',\n    missingWhitespaceBetweenAttributes: 'missing-whitespace-between-attributes',\n    missingWhitespaceAfterDoctypePublicKeyword: 'missing-whitespace-after-doctype-public-keyword',\n    missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers:\n        'missing-whitespace-between-doctype-public-and-system-identifiers',\n    missingWhitespaceAfterDoctypeSystemKeyword: 'missing-whitespace-after-doctype-system-keyword',\n    missingQuoteBeforeDoctypePublicIdentifier: 'missing-quote-before-doctype-public-identifier',\n    missingQuoteBeforeDoctypeSystemIdentifier: 'missing-quote-before-doctype-system-identifier',\n    missingDoctypePublicIdentifier: 'missing-doctype-public-identifier',\n    missingDoctypeSystemIdentifier: 'missing-doctype-system-identifier',\n    abruptDoctypePublicIdentifier: 'abrupt-doctype-public-identifier',\n    abruptDoctypeSystemIdentifier: 'abrupt-doctype-system-identifier',\n    cdataInHtmlContent: 'cdata-in-html-content',\n    incorrectlyOpenedComment: 'incorrectly-opened-comment',\n    eofInScriptHtmlCommentLikeText: 'eof-in-script-html-comment-like-text',\n    eofInDoctype: 'eof-in-doctype',\n    nestedComment: 'nested-comment',\n    abruptClosingOfEmptyComment: 'abrupt-closing-of-empty-comment',\n    eofInComment: 'eof-in-comment',\n    incorrectlyClosedComment: 'incorrectly-closed-comment',\n    eofInCdata: 'eof-in-cdata',\n    absenceOfDigitsInNumericCharacterReference: 'absence-of-digits-in-numeric-character-reference',\n    nullCharacterReference: 'null-character-reference',\n    surrogateCharacterReference: 'surrogate-character-reference',\n    characterReferenceOutsideUnicodeRange: 'character-reference-outside-unicode-range',\n    controlCharacterReference: 'control-character-reference',\n    noncharacterCharacterReference: 'noncharacter-character-reference',\n    missingWhitespaceBeforeDoctypeName: 'missing-whitespace-before-doctype-name',\n    missingDoctypeName: 'missing-doctype-name',\n    invalidCharacterSequenceAfterDoctypeName: 'invalid-character-sequence-after-doctype-name',\n    duplicateAttribute: 'duplicate-attribute',\n    nonConformingDoctype: 'non-conforming-doctype',\n    missingDoctype: 'missing-doctype',\n    misplacedDoctype: 'misplaced-doctype',\n    endTagWithoutMatchingOpenElement: 'end-tag-without-matching-open-element',\n    closingOfElementWithOpenChildElements: 'closing-of-element-with-open-child-elements',\n    disallowedContentInNoscriptInHead: 'disallowed-content-in-noscript-in-head',\n    openElementsLeftAfterEof: 'open-elements-left-after-eof',\n    abandonedHeadElementChild: 'abandoned-head-element-child',\n    misplacedStartTagForHeadElement: 'misplaced-start-tag-for-head-element',\n    nestedNoscriptInHead: 'nested-noscript-in-head',\n    eofInElementThatCanContainOnlyText: 'eof-in-element-that-can-contain-only-text'\n};\n", "'use strict';\n\nconst unicode = require('../common/unicode');\nconst ERR = require('../common/error-codes');\n\n//Aliases\nconst $ = unicode.CODE_POINTS;\n\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nclass Preprocessor {\n    constructor() {\n        this.html = null;\n\n        this.pos = -1;\n        this.lastGapPos = -1;\n        this.lastCharPos = -1;\n\n        this.gapStack = [];\n\n        this.skipNextNewLine = false;\n\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n    }\n\n    _err() {\n        // NOTE: err reporting is noop by default. Enabled by mixin.\n    }\n\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.lastCharPos) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n\n            if (unicode.isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n\n                //NOTE: add gap that should be avoided during retreat\n                this._addGap();\n\n                return unicode.getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n\n        //NOTE: we are at the end of a chunk, therefore we can't infer surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n\n        return cp;\n    }\n\n    dropParsedChunk() {\n        if (this.pos > this.bufferWaterline) {\n            this.lastCharPos -= this.pos;\n            this.html = this.html.substring(this.pos);\n            this.pos = 0;\n            this.lastGapPos = -1;\n            this.gapStack = [];\n        }\n    }\n\n    write(chunk, isLastChunk) {\n        if (this.html) {\n            this.html += chunk;\n        } else {\n            this.html = chunk;\n        }\n\n        this.lastCharPos = this.html.length - 1;\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1, this.html.length);\n\n        this.lastCharPos = this.html.length - 1;\n        this.endOfChunkHit = false;\n    }\n\n    advance() {\n        this.pos++;\n\n        if (this.pos > this.lastCharPos) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n\n        let cp = this.html.charCodeAt(this.pos);\n\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (this.skipNextNewLine && cp === $.LINE_FEED) {\n            this.skipNextNewLine = false;\n            this._addGap();\n            return this.advance();\n        }\n\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n\n        this.skipNextNewLine = false;\n\n        if (unicode.isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange =\n            (cp > 0x1f && cp < 0x7f) || cp === $.LINE_FEED || cp === $.CARRIAGE_RETURN || (cp > 0x9f && cp < 0xfdd0);\n\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n\n        return cp;\n    }\n\n    _checkForProblematicCharacters(cp) {\n        if (unicode.isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        } else if (unicode.isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n\n    retreat() {\n        if (this.pos === this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n\n        this.pos--;\n    }\n}\n\nmodule.exports = Preprocessor;\n", "'use strict';\n\n//NOTE: this file contains auto-generated array mapped radix tree that is used for the named entity references consumption\n//(details: https://github.com/inikulin/parse5/tree/master/scripts/generate-named-entity-data/README.md)\nmodule.exports = new Uint16Array([4,52,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,106,303,412,810,1432,1701,1796,1987,2114,2360,2420,2484,3170,3251,4140,4393,4575,4610,5106,5512,5728,6117,6274,6315,6345,6427,6516,7002,7910,8733,9323,9870,10170,10631,10893,11318,11386,11467,12773,13092,14474,14922,15448,15542,16419,17666,18166,18611,19004,19095,19298,19397,4,16,69,77,97,98,99,102,103,108,109,110,111,112,114,115,116,117,140,150,158,169,176,194,199,210,216,222,226,242,256,266,283,294,108,105,103,5,198,1,59,148,1,198,80,5,38,1,59,156,1,38,99,117,116,101,5,193,1,59,167,1,193,114,101,118,101,59,1,258,4,2,105,121,182,191,114,99,5,194,1,59,189,1,194,59,1,1040,114,59,3,55349,56580,114,97,118,101,5,192,1,59,208,1,192,112,104,97,59,1,913,97,99,114,59,1,256,100,59,1,10835,4,2,103,112,232,237,111,110,59,1,260,102,59,3,55349,56632,112,108,121,70,117,110,99,116,105,111,110,59,1,8289,105,110,103,5,197,1,59,264,1,197,4,2,99,115,272,277,114,59,3,55349,56476,105,103,110,59,1,8788,105,108,100,101,5,195,1,59,292,1,195,109,108,5,196,1,59,301,1,196,4,8,97,99,101,102,111,114,115,117,321,350,354,383,388,394,400,405,4,2,99,114,327,336,107,115,108,97,115,104,59,1,8726,4,2,118,119,342,345,59,1,10983,101,100,59,1,8966,121,59,1,1041,4,3,99,114,116,362,369,379,97,117,115,101,59,1,8757,110,111,117,108,108,105,115,59,1,8492,97,59,1,914,114,59,3,55349,56581,112,102,59,3,55349,56633,101,118,101,59,1,728,99,114,59,1,8492,109,112,101,113,59,1,8782,4,14,72,79,97,99,100,101,102,104,105,108,111,114,115,117,442,447,456,504,542,547,569,573,577,616,678,784,790,796,99,121,59,1,1063,80,89,5,169,1,59,454,1,169,4,3,99,112,121,464,470,497,117,116,101,59,1,262,4,2,59,105,476,478,1,8914,116,97,108,68,105,102,102,101,114,101,110,116,105,97,108,68,59,1,8517,108,101,121,115,59,1,8493,4,4,97,101,105,111,514,520,530,535,114,111,110,59,1,268,100,105,108,5,199,1,59,528,1,199,114,99,59,1,264,110,105,110,116,59,1,8752,111,116,59,1,266,4,2,100,110,553,560,105,108,108,97,59,1,184,116,101,114,68,111,116,59,1,183,114,59,1,8493,105,59,1,935,114,99,108,101,4,4,68,77,80,84,591,596,603,609,111,116,59,1,8857,105,110,117,115,59,1,8854,108,117,115,59,1,8853,105,109,101,115,59,1,8855,111,4,2,99,115,623,646,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8754,101,67,117,114,108,121,4,2,68,81,658,671,111,117,98,108,101,81,117,111,116,101,59,1,8221,117,111,116,101,59,1,8217,4,4,108,110,112,117,688,701,736,753,111,110,4,2,59,101,696,698,1,8759,59,1,10868,4,3,103,105,116,709,717,722,114,117,101,110,116,59,1,8801,110,116,59,1,8751,111,117,114,73,110,116,101,103,114,97,108,59,1,8750,4,2,102,114,742,745,59,1,8450,111,100,117,99,116,59,1,8720,110,116,101,114,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8755,111,115,115,59,1,10799,99,114,59,3,55349,56478,112,4,2,59,67,803,805,1,8915,97,112,59,1,8781,4,11,68,74,83,90,97,99,101,102,105,111,115,834,850,855,860,865,888,903,916,921,1011,1415,4,2,59,111,840,842,1,8517,116,114,97,104,100,59,1,10513,99,121,59,1,1026,99,121,59,1,1029,99,121,59,1,1039,4,3,103,114,115,873,879,883,103,101,114,59,1,8225,114,59,1,8609,104,118,59,1,10980,4,2,97,121,894,900,114,111,110,59,1,270,59,1,1044,108,4,2,59,116,910,912,1,8711,97,59,1,916,114,59,3,55349,56583,4,2,97,102,927,998,4,2,99,109,933,992,114,105,116,105,99,97,108,4,4,65,68,71,84,950,957,978,985,99,117,116,101,59,1,180,111,4,2,116,117,964,967,59,1,729,98,108,101,65,99,117,116,101,59,1,733,114,97,118,101,59,1,96,105,108,100,101,59,1,732,111,110,100,59,1,8900,102,101,114,101,110,116,105,97,108,68,59,1,8518,4,4,112,116,117,119,1021,1026,1048,1249,102,59,3,55349,56635,4,3,59,68,69,1034,1036,1041,1,168,111,116,59,1,8412,113,117,97,108,59,1,8784,98,108,101,4,6,67,68,76,82,85,86,1065,1082,1101,1189,1211,1236,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8751,111,4,2,116,119,1089,1092,59,1,168,110,65,114,114,111,119,59,1,8659,4,2,101,111,1107,1141,102,116,4,3,65,82,84,1117,1124,1136,114,114,111,119,59,1,8656,105,103,104,116,65,114,114,111,119,59,1,8660,101,101,59,1,10980,110,103,4,2,76,82,1149,1177,101,102,116,4,2,65,82,1158,1165,114,114,111,119,59,1,10232,105,103,104,116,65,114,114,111,119,59,1,10234,105,103,104,116,65,114,114,111,119,59,1,10233,105,103,104,116,4,2,65,84,1199,1206,114,114,111,119,59,1,8658,101,101,59,1,8872,112,4,2,65,68,1218,1225,114,114,111,119,59,1,8657,111,119,110,65,114,114,111,119,59,1,8661,101,114,116,105,99,97,108,66,97,114,59,1,8741,110,4,6,65,66,76,82,84,97,1264,1292,1299,1352,1391,1408,114,114,111,119,4,3,59,66,85,1276,1278,1283,1,8595,97,114,59,1,10515,112,65,114,114,111,119,59,1,8693,114,101,118,101,59,1,785,101,102,116,4,3,82,84,86,1310,1323,1334,105,103,104,116,86,101,99,116,111,114,59,1,10576,101,101,86,101,99,116,111,114,59,1,10590,101,99,116,111,114,4,2,59,66,1345,1347,1,8637,97,114,59,1,10582,105,103,104,116,4,2,84,86,1362,1373,101,101,86,101,99,116,111,114,59,1,10591,101,99,116,111,114,4,2,59,66,1384,1386,1,8641,97,114,59,1,10583,101,101,4,2,59,65,1399,1401,1,8868,114,114,111,119,59,1,8615,114,114,111,119,59,1,8659,4,2,99,116,1421,1426,114,59,3,55349,56479,114,111,107,59,1,272,4,16,78,84,97,99,100,102,103,108,109,111,112,113,115,116,117,120,1466,1470,1478,1489,1515,1520,1525,1536,1544,1593,1609,1617,1650,1664,1668,1677,71,59,1,330,72,5,208,1,59,1476,1,208,99,117,116,101,5,201,1,59,1487,1,201,4,3,97,105,121,1497,1503,1512,114,111,110,59,1,282,114,99,5,202,1,59,1510,1,202,59,1,1069,111,116,59,1,278,114,59,3,55349,56584,114,97,118,101,5,200,1,59,1534,1,200,101,109,101,110,116,59,1,8712,4,2,97,112,1550,1555,99,114,59,1,274,116,121,4,2,83,86,1563,1576,109,97,108,108,83,113,117,97,114,101,59,1,9723,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9643,4,2,103,112,1599,1604,111,110,59,1,280,102,59,3,55349,56636,115,105,108,111,110,59,1,917,117,4,2,97,105,1624,1640,108,4,2,59,84,1631,1633,1,10869,105,108,100,101,59,1,8770,108,105,98,114,105,117,109,59,1,8652,4,2,99,105,1656,1660,114,59,1,8496,109,59,1,10867,97,59,1,919,109,108,5,203,1,59,1675,1,203,4,2,105,112,1683,1689,115,116,115,59,1,8707,111,110,101,110,116,105,97,108,69,59,1,8519,4,5,99,102,105,111,115,1713,1717,1722,1762,1791,121,59,1,1060,114,59,3,55349,56585,108,108,101,100,4,2,83,86,1732,1745,109,97,108,108,83,113,117,97,114,101,59,1,9724,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9642,4,3,112,114,117,1770,1775,1781,102,59,3,55349,56637,65,108,108,59,1,8704,114,105,101,114,116,114,102,59,1,8497,99,114,59,1,8497,4,12,74,84,97,98,99,100,102,103,111,114,115,116,1822,1827,1834,1848,1855,1877,1882,1887,1890,1896,1978,1984,99,121,59,1,1027,5,62,1,59,1832,1,62,109,109,97,4,2,59,100,1843,1845,1,915,59,1,988,114,101,118,101,59,1,286,4,3,101,105,121,1863,1869,1874,100,105,108,59,1,290,114,99,59,1,284,59,1,1043,111,116,59,1,288,114,59,3,55349,56586,59,1,8921,112,102,59,3,55349,56638,101,97,116,101,114,4,6,69,70,71,76,83,84,1915,1933,1944,1953,1959,1971,113,117,97,108,4,2,59,76,1925,1927,1,8805,101,115,115,59,1,8923,117,108,108,69,113,117,97,108,59,1,8807,114,101,97,116,101,114,59,1,10914,101,115,115,59,1,8823,108,97,110,116,69,113,117,97,108,59,1,10878,105,108,100,101,59,1,8819,99,114,59,3,55349,56482,59,1,8811,4,8,65,97,99,102,105,111,115,117,2005,2012,2026,2032,2036,2049,2073,2089,82,68,99,121,59,1,1066,4,2,99,116,2018,2023,101,107,59,1,711,59,1,94,105,114,99,59,1,292,114,59,1,8460,108,98,101,114,116,83,112,97,99,101,59,1,8459,4,2,112,114,2055,2059,102,59,1,8461,105,122,111,110,116,97,108,76,105,110,101,59,1,9472,4,2,99,116,2079,2083,114,59,1,8459,114,111,107,59,1,294,109,112,4,2,68,69,2097,2107,111,119,110,72,117,109,112,59,1,8782,113,117,97,108,59,1,8783,4,14,69,74,79,97,99,100,102,103,109,110,111,115,116,117,2144,2149,2155,2160,2171,2189,2194,2198,2209,2245,2307,2329,2334,2341,99,121,59,1,1045,108,105,103,59,1,306,99,121,59,1,1025,99,117,116,101,5,205,1,59,2169,1,205,4,2,105,121,2177,2186,114,99,5,206,1,59,2184,1,206,59,1,1048,111,116,59,1,304,114,59,1,8465,114,97,118,101,5,204,1,59,2207,1,204,4,3,59,97,112,2217,2219,2238,1,8465,4,2,99,103,2225,2229,114,59,1,298,105,110,97,114,121,73,59,1,8520,108,105,101,115,59,1,8658,4,2,116,118,2251,2281,4,2,59,101,2257,2259,1,8748,4,2,103,114,2265,2271,114,97,108,59,1,8747,115,101,99,116,105,111,110,59,1,8898,105,115,105,98,108,101,4,2,67,84,2293,2300,111,109,109,97,59,1,8291,105,109,101,115,59,1,8290,4,3,103,112,116,2315,2320,2325,111,110,59,1,302,102,59,3,55349,56640,97,59,1,921,99,114,59,1,8464,105,108,100,101,59,1,296,4,2,107,109,2347,2352,99,121,59,1,1030,108,5,207,1,59,2358,1,207,4,5,99,102,111,115,117,2372,2386,2391,2397,2414,4,2,105,121,2378,2383,114,99,59,1,308,59,1,1049,114,59,3,55349,56589,112,102,59,3,55349,56641,4,2,99,101,2403,2408,114,59,3,55349,56485,114,99,121,59,1,1032,107,99,121,59,1,1028,4,7,72,74,97,99,102,111,115,2436,2441,2446,2452,2467,2472,2478,99,121,59,1,1061,99,121,59,1,1036,112,112,97,59,1,922,4,2,101,121,2458,2464,100,105,108,59,1,310,59,1,1050,114,59,3,55349,56590,112,102,59,3,55349,56642,99,114,59,3,55349,56486,4,11,74,84,97,99,101,102,108,109,111,115,116,2508,2513,2520,2562,2585,2981,2986,3004,3011,3146,3167,99,121,59,1,1033,5,60,1,59,2518,1,60,4,5,99,109,110,112,114,2532,2538,2544,2548,2558,117,116,101,59,1,313,98,100,97,59,1,923,103,59,1,10218,108,97,99,101,116,114,102,59,1,8466,114,59,1,8606,4,3,97,101,121,2570,2576,2582,114,111,110,59,1,317,100,105,108,59,1,315,59,1,1051,4,2,102,115,2591,2907,116,4,10,65,67,68,70,82,84,85,86,97,114,2614,2663,2672,2728,2735,2760,2820,2870,2888,2895,4,2,110,114,2620,2633,103,108,101,66,114,97,99,107,101,116,59,1,10216,114,111,119,4,3,59,66,82,2644,2646,2651,1,8592,97,114,59,1,8676,105,103,104,116,65,114,114,111,119,59,1,8646,101,105,108,105,110,103,59,1,8968,111,4,2,117,119,2679,2692,98,108,101,66,114,97,99,107,101,116,59,1,10214,110,4,2,84,86,2699,2710,101,101,86,101,99,116,111,114,59,1,10593,101,99,116,111,114,4,2,59,66,2721,2723,1,8643,97,114,59,1,10585,108,111,111,114,59,1,8970,105,103,104,116,4,2,65,86,2745,2752,114,114,111,119,59,1,8596,101,99,116,111,114,59,1,10574,4,2,101,114,2766,2792,101,4,3,59,65,86,2775,2777,2784,1,8867,114,114,111,119,59,1,8612,101,99,116,111,114,59,1,10586,105,97,110,103,108,101,4,3,59,66,69,2806,2808,2813,1,8882,97,114,59,1,10703,113,117,97,108,59,1,8884,112,4,3,68,84,86,2829,2841,2852,111,119,110,86,101,99,116,111,114,59,1,10577,101,101,86,101,99,116,111,114,59,1,10592,101,99,116,111,114,4,2,59,66,2863,2865,1,8639,97,114,59,1,10584,101,99,116,111,114,4,2,59,66,2881,2883,1,8636,97,114,59,1,10578,114,114,111,119,59,1,8656,105,103,104,116,97,114,114,111,119,59,1,8660,115,4,6,69,70,71,76,83,84,2922,2936,2947,2956,2962,2974,113,117,97,108,71,114,101,97,116,101,114,59,1,8922,117,108,108,69,113,117,97,108,59,1,8806,114,101,97,116,101,114,59,1,8822,101,115,115,59,1,10913,108,97,110,116,69,113,117,97,108,59,1,10877,105,108,100,101,59,1,8818,114,59,3,55349,56591,4,2,59,101,2992,2994,1,8920,102,116,97,114,114,111,119,59,1,8666,105,100,111,116,59,1,319,4,3,110,112,119,3019,3110,3115,103,4,4,76,82,108,114,3030,3058,3070,3098,101,102,116,4,2,65,82,3039,3046,114,114,111,119,59,1,10229,105,103,104,116,65,114,114,111,119,59,1,10231,105,103,104,116,65,114,114,111,119,59,1,10230,101,102,116,4,2,97,114,3079,3086,114,114,111,119,59,1,10232,105,103,104,116,97,114,114,111,119,59,1,10234,105,103,104,116,97,114,114,111,119,59,1,10233,102,59,3,55349,56643,101,114,4,2,76,82,3123,3134,101,102,116,65,114,114,111,119,59,1,8601,105,103,104,116,65,114,114,111,119,59,1,8600,4,3,99,104,116,3154,3158,3161,114,59,1,8466,59,1,8624,114,111,107,59,1,321,59,1,8810,4,8,97,99,101,102,105,111,115,117,3188,3192,3196,3222,3227,3237,3243,3248,112,59,1,10501,121,59,1,1052,4,2,100,108,3202,3213,105,117,109,83,112,97,99,101,59,1,8287,108,105,110,116,114,102,59,1,8499,114,59,3,55349,56592,110,117,115,80,108,117,115,59,1,8723,112,102,59,3,55349,56644,99,114,59,1,8499,59,1,924,4,9,74,97,99,101,102,111,115,116,117,3271,3276,3283,3306,3422,3427,4120,4126,4137,99,121,59,1,1034,99,117,116,101,59,1,323,4,3,97,101,121,3291,3297,3303,114,111,110,59,1,327,100,105,108,59,1,325,59,1,1053,4,3,103,115,119,3314,3380,3415,97,116,105,118,101,4,3,77,84,86,3327,3340,3365,101,100,105,117,109,83,112,97,99,101,59,1,8203,104,105,4,2,99,110,3348,3357,107,83,112,97,99,101,59,1,8203,83,112,97,99,101,59,1,8203,101,114,121,84,104,105,110,83,112,97,99,101,59,1,8203,116,101,100,4,2,71,76,3389,3405,114,101,97,116,101,114,71,114,101,97,116,101,114,59,1,8811,101,115,115,76,101,115,115,59,1,8810,76,105,110,101,59,1,10,114,59,3,55349,56593,4,4,66,110,112,116,3437,3444,3460,3464,114,101,97,107,59,1,8288,66,114,101,97,107,105,110,103,83,112,97,99,101,59,1,160,102,59,1,8469,4,13,59,67,68,69,71,72,76,78,80,82,83,84,86,3492,3494,3517,3536,3578,3657,3685,3784,3823,3860,3915,4066,4107,1,10988,4,2,111,117,3500,3510,110,103,114,117,101,110,116,59,1,8802,112,67,97,112,59,1,8813,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114,59,1,8742,4,3,108,113,120,3544,3552,3571,101,109,101,110,116,59,1,8713,117,97,108,4,2,59,84,3561,3563,1,8800,105,108,100,101,59,3,8770,824,105,115,116,115,59,1,8708,114,101,97,116,101,114,4,7,59,69,70,71,76,83,84,3600,3602,3609,3621,3631,3637,3650,1,8815,113,117,97,108,59,1,8817,117,108,108,69,113,117,97,108,59,3,8807,824,114,101,97,116,101,114,59,3,8811,824,101,115,115,59,1,8825,108,97,110,116,69,113,117,97,108,59,3,10878,824,105,108,100,101,59,1,8821,117,109,112,4,2,68,69,3666,3677,111,119,110,72,117,109,112,59,3,8782,824,113,117,97,108,59,3,8783,824,101,4,2,102,115,3692,3724,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3709,3711,3717,1,8938,97,114,59,3,10703,824,113,117,97,108,59,1,8940,115,4,6,59,69,71,76,83,84,3739,3741,3748,3757,3764,3777,1,8814,113,117,97,108,59,1,8816,114,101,97,116,101,114,59,1,8824,101,115,115,59,3,8810,824,108,97,110,116,69,113,117,97,108,59,3,10877,824,105,108,100,101,59,1,8820,101,115,116,101,100,4,2,71,76,3795,3812,114,101,97,116,101,114,71,114,101,97,116,101,114,59,3,10914,824,101,115,115,76,101,115,115,59,3,10913,824,114,101,99,101,100,101,115,4,3,59,69,83,3838,3840,3848,1,8832,113,117,97,108,59,3,10927,824,108,97,110,116,69,113,117,97,108,59,1,8928,4,2,101,105,3866,3881,118,101,114,115,101,69,108,101,109,101,110,116,59,1,8716,103,104,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3900,3902,3908,1,8939,97,114,59,3,10704,824,113,117,97,108,59,1,8941,4,2,113,117,3921,3973,117,97,114,101,83,117,4,2,98,112,3933,3952,115,101,116,4,2,59,69,3942,3945,3,8847,824,113,117,97,108,59,1,8930,101,114,115,101,116,4,2,59,69,3963,3966,3,8848,824,113,117,97,108,59,1,8931,4,3,98,99,112,3981,4000,4045,115,101,116,4,2,59,69,3990,3993,3,8834,8402,113,117,97,108,59,1,8840,99,101,101,100,115,4,4,59,69,83,84,4015,4017,4025,4037,1,8833,113,117,97,108,59,3,10928,824,108,97,110,116,69,113,117,97,108,59,1,8929,105,108,100,101,59,3,8831,824,101,114,115,101,116,4,2,59,69,4056,4059,3,8835,8402,113,117,97,108,59,1,8841,105,108,100,101,4,4,59,69,70,84,4080,4082,4089,4100,1,8769,113,117,97,108,59,1,8772,117,108,108,69,113,117,97,108,59,1,8775,105,108,100,101,59,1,8777,101,114,116,105,99,97,108,66,97,114,59,1,8740,99,114,59,3,55349,56489,105,108,100,101,5,209,1,59,4135,1,209,59,1,925,4,14,69,97,99,100,102,103,109,111,112,114,115,116,117,118,4170,4176,4187,4205,4212,4217,4228,4253,4259,4292,4295,4316,4337,4346,108,105,103,59,1,338,99,117,116,101,5,211,1,59,4185,1,211,4,2,105,121,4193,4202,114,99,5,212,1,59,4200,1,212,59,1,1054,98,108,97,99,59,1,336,114,59,3,55349,56594,114,97,118,101,5,210,1,59,4226,1,210,4,3,97,101,105,4236,4241,4246,99,114,59,1,332,103,97,59,1,937,99,114,111,110,59,1,927,112,102,59,3,55349,56646,101,110,67,117,114,108,121,4,2,68,81,4272,4285,111,117,98,108,101,81,117,111,116,101,59,1,8220,117,111,116,101,59,1,8216,59,1,10836,4,2,99,108,4301,4306,114,59,3,55349,56490,97,115,104,5,216,1,59,4314,1,216,105,4,2,108,109,4323,4332,100,101,5,213,1,59,4330,1,213,101,115,59,1,10807,109,108,5,214,1,59,4344,1,214,101,114,4,2,66,80,4354,4380,4,2,97,114,4360,4364,114,59,1,8254,97,99,4,2,101,107,4372,4375,59,1,9182,101,116,59,1,9140,97,114,101,110,116,104,101,115,105,115,59,1,9180,4,9,97,99,102,104,105,108,111,114,115,4413,4422,4426,4431,4435,4438,4448,4471,4561,114,116,105,97,108,68,59,1,8706,121,59,1,1055,114,59,3,55349,56595,105,59,1,934,59,1,928,117,115,77,105,110,117,115,59,1,177,4,2,105,112,4454,4467,110,99,97,114,101,112,108,97,110,101,59,1,8460,102,59,1,8473,4,4,59,101,105,111,4481,4483,4526,4531,1,10939,99,101,100,101,115,4,4,59,69,83,84,4498,4500,4507,4519,1,8826,113,117,97,108,59,1,10927,108,97,110,116,69,113,117,97,108,59,1,8828,105,108,100,101,59,1,8830,109,101,59,1,8243,4,2,100,112,4537,4543,117,99,116,59,1,8719,111,114,116,105,111,110,4,2,59,97,4555,4557,1,8759,108,59,1,8733,4,2,99,105,4567,4572,114,59,3,55349,56491,59,1,936,4,4,85,102,111,115,4585,4594,4599,4604,79,84,5,34,1,59,4592,1,34,114,59,3,55349,56596,112,102,59,1,8474,99,114,59,3,55349,56492,4,12,66,69,97,99,101,102,104,105,111,114,115,117,4636,4642,4650,4681,4704,4763,4767,4771,5047,5069,5081,5094,97,114,114,59,1,10512,71,5,174,1,59,4648,1,174,4,3,99,110,114,4658,4664,4668,117,116,101,59,1,340,103,59,1,10219,114,4,2,59,116,4675,4677,1,8608,108,59,1,10518,4,3,97,101,121,4689,4695,4701,114,111,110,59,1,344,100,105,108,59,1,342,59,1,1056,4,2,59,118,4710,4712,1,8476,101,114,115,101,4,2,69,85,4722,4748,4,2,108,113,4728,4736,101,109,101,110,116,59,1,8715,117,105,108,105,98,114,105,117,109,59,1,8651,112,69,113,117,105,108,105,98,114,105,117,109,59,1,10607,114,59,1,8476,111,59,1,929,103,104,116,4,8,65,67,68,70,84,85,86,97,4792,4840,4849,4905,4912,4972,5022,5040,4,2,110,114,4798,4811,103,108,101,66,114,97,99,107,101,116,59,1,10217,114,111,119,4,3,59,66,76,4822,4824,4829,1,8594,97,114,59,1,8677,101,102,116,65,114,114,111,119,59,1,8644,101,105,108,105,110,103,59,1,8969,111,4,2,117,119,4856,4869,98,108,101,66,114,97,99,107,101,116,59,1,10215,110,4,2,84,86,4876,4887,101,101,86,101,99,116,111,114,59,1,10589,101,99,116,111,114,4,2,59,66,4898,4900,1,8642,97,114,59,1,10581,108,111,111,114,59,1,8971,4,2,101,114,4918,4944,101,4,3,59,65,86,4927,4929,4936,1,8866,114,114,111,119,59,1,8614,101,99,116,111,114,59,1,10587,105,97,110,103,108,101,4,3,59,66,69,4958,4960,4965,1,8883,97,114,59,1,10704,113,117,97,108,59,1,8885,112,4,3,68,84,86,4981,4993,5004,111,119,110,86,101,99,116,111,114,59,1,10575,101,101,86,101,99,116,111,114,59,1,10588,101,99,116,111,114,4,2,59,66,5015,5017,1,8638,97,114,59,1,10580,101,99,116,111,114,4,2,59,66,5033,5035,1,8640,97,114,59,1,10579,114,114,111,119,59,1,8658,4,2,112,117,5053,5057,102,59,1,8477,110,100,73,109,112,108,105,101,115,59,1,10608,105,103,104,116,97,114,114,111,119,59,1,8667,4,2,99,104,5087,5091,114,59,1,8475,59,1,8625,108,101,68,101,108,97,121,101,100,59,1,10740,4,13,72,79,97,99,102,104,105,109,111,113,115,116,117,5134,5150,5157,5164,5198,5203,5259,5265,5277,5283,5374,5380,5385,4,2,67,99,5140,5146,72,99,121,59,1,1065,121,59,1,1064,70,84,99,121,59,1,1068,99,117,116,101,59,1,346,4,5,59,97,101,105,121,5176,5178,5184,5190,5195,1,10940,114,111,110,59,1,352,100,105,108,59,1,350,114,99,59,1,348,59,1,1057,114,59,3,55349,56598,111,114,116,4,4,68,76,82,85,5216,5227,5238,5250,111,119,110,65,114,114,111,119,59,1,8595,101,102,116,65,114,114,111,119,59,1,8592,105,103,104,116,65,114,114,111,119,59,1,8594,112,65,114,114,111,119,59,1,8593,103,109,97,59,1,931,97,108,108,67,105,114,99,108,101,59,1,8728,112,102,59,3,55349,56650,4,2,114,117,5289,5293,116,59,1,8730,97,114,101,4,4,59,73,83,85,5306,5308,5322,5367,1,9633,110,116,101,114,115,101,99,116,105,111,110,59,1,8851,117,4,2,98,112,5329,5347,115,101,116,4,2,59,69,5338,5340,1,8847,113,117,97,108,59,1,8849,101,114,115,101,116,4,2,59,69,5358,5360,1,8848,113,117,97,108,59,1,8850,110,105,111,110,59,1,8852,99,114,59,3,55349,56494,97,114,59,1,8902,4,4,98,99,109,112,5395,5420,5475,5478,4,2,59,115,5401,5403,1,8912,101,116,4,2,59,69,5411,5413,1,8912,113,117,97,108,59,1,8838,4,2,99,104,5426,5468,101,101,100,115,4,4,59,69,83,84,5440,5442,5449,5461,1,8827,113,117,97,108,59,1,10928,108,97,110,116,69,113,117,97,108,59,1,8829,105,108,100,101,59,1,8831,84,104,97,116,59,1,8715,59,1,8721,4,3,59,101,115,5486,5488,5507,1,8913,114,115,101,116,4,2,59,69,5498,5500,1,8835,113,117,97,108,59,1,8839,101,116,59,1,8913,4,11,72,82,83,97,99,102,104,105,111,114,115,5536,5546,5552,5567,5579,5602,5607,5655,5695,5701,5711,79,82,78,5,222,1,59,5544,1,222,65,68,69,59,1,8482,4,2,72,99,5558,5563,99,121,59,1,1035,121,59,1,1062,4,2,98,117,5573,5576,59,1,9,59,1,932,4,3,97,101,121,5587,5593,5599,114,111,110,59,1,356,100,105,108,59,1,354,59,1,1058,114,59,3,55349,56599,4,2,101,105,5613,5631,4,2,114,116,5619,5627,101,102,111,114,101,59,1,8756,97,59,1,920,4,2,99,110,5637,5647,107,83,112,97,99,101,59,3,8287,8202,83,112,97,99,101,59,1,8201,108,100,101,4,4,59,69,70,84,5668,5670,5677,5688,1,8764,113,117,97,108,59,1,8771,117,108,108,69,113,117,97,108,59,1,8773,105,108,100,101,59,1,8776,112,102,59,3,55349,56651,105,112,108,101,68,111,116,59,1,8411,4,2,99,116,5717,5722,114,59,3,55349,56495,114,111,107,59,1,358,4,14,97,98,99,100,102,103,109,110,111,112,114,115,116,117,5758,5789,5805,5823,5830,5835,5846,5852,5921,5937,6089,6095,6101,6108,4,2,99,114,5764,5774,117,116,101,5,218,1,59,5772,1,218,114,4,2,59,111,5781,5783,1,8607,99,105,114,59,1,10569,114,4,2,99,101,5796,5800,121,59,1,1038,118,101,59,1,364,4,2,105,121,5811,5820,114,99,5,219,1,59,5818,1,219,59,1,1059,98,108,97,99,59,1,368,114,59,3,55349,56600,114,97,118,101,5,217,1,59,5844,1,217,97,99,114,59,1,362,4,2,100,105,5858,5905,101,114,4,2,66,80,5866,5892,4,2,97,114,5872,5876,114,59,1,95,97,99,4,2,101,107,5884,5887,59,1,9183,101,116,59,1,9141,97,114,101,110,116,104,101,115,105,115,59,1,9181,111,110,4,2,59,80,5913,5915,1,8899,108,117,115,59,1,8846,4,2,103,112,5927,5932,111,110,59,1,370,102,59,3,55349,56652,4,8,65,68,69,84,97,100,112,115,5955,5985,5996,6009,6026,6033,6044,6075,114,114,111,119,4,3,59,66,68,5967,5969,5974,1,8593,97,114,59,1,10514,111,119,110,65,114,114,111,119,59,1,8645,111,119,110,65,114,114,111,119,59,1,8597,113,117,105,108,105,98,114,105,117,109,59,1,10606,101,101,4,2,59,65,6017,6019,1,8869,114,114,111,119,59,1,8613,114,114,111,119,59,1,8657,111,119,110,97,114,114,111,119,59,1,8661,101,114,4,2,76,82,6052,6063,101,102,116,65,114,114,111,119,59,1,8598,105,103,104,116,65,114,114,111,119,59,1,8599,105,4,2,59,108,6082,6084,1,978,111,110,59,1,933,105,110,103,59,1,366,99,114,59,3,55349,56496,105,108,100,101,59,1,360,109,108,5,220,1,59,6115,1,220,4,9,68,98,99,100,101,102,111,115,118,6137,6143,6148,6152,6166,6250,6255,6261,6267,97,115,104,59,1,8875,97,114,59,1,10987,121,59,1,1042,97,115,104,4,2,59,108,6161,6163,1,8873,59,1,10982,4,2,101,114,6172,6175,59,1,8897,4,3,98,116,121,6183,6188,6238,97,114,59,1,8214,4,2,59,105,6194,6196,1,8214,99,97,108,4,4,66,76,83,84,6209,6214,6220,6231,97,114,59,1,8739,105,110,101,59,1,124,101,112,97,114,97,116,111,114,59,1,10072,105,108,100,101,59,1,8768,84,104,105,110,83,112,97,99,101,59,1,8202,114,59,3,55349,56601,112,102,59,3,55349,56653,99,114,59,3,55349,56497,100,97,115,104,59,1,8874,4,5,99,101,102,111,115,6286,6292,6298,6303,6309,105,114,99,59,1,372,100,103,101,59,1,8896,114,59,3,55349,56602,112,102,59,3,55349,56654,99,114,59,3,55349,56498,4,4,102,105,111,115,6325,6330,6333,6339,114,59,3,55349,56603,59,1,926,112,102,59,3,55349,56655,99,114,59,3,55349,56499,4,9,65,73,85,97,99,102,111,115,117,6365,6370,6375,6380,6391,6405,6410,6416,6422,99,121,59,1,1071,99,121,59,1,1031,99,121,59,1,1070,99,117,116,101,5,221,1,59,6389,1,221,4,2,105,121,6397,6402,114,99,59,1,374,59,1,1067,114,59,3,55349,56604,112,102,59,3,55349,56656,99,114,59,3,55349,56500,109,108,59,1,376,4,8,72,97,99,100,101,102,111,115,6445,6450,6457,6472,6477,6501,6505,6510,99,121,59,1,1046,99,117,116,101,59,1,377,4,2,97,121,6463,6469,114,111,110,59,1,381,59,1,1047,111,116,59,1,379,4,2,114,116,6483,6497,111,87,105,100,116,104,83,112,97,99,101,59,1,8203,97,59,1,918,114,59,1,8488,112,102,59,1,8484,99,114,59,3,55349,56501,4,16,97,98,99,101,102,103,108,109,110,111,112,114,115,116,117,119,6550,6561,6568,6612,6622,6634,6645,6672,6699,6854,6870,6923,6933,6963,6974,6983,99,117,116,101,5,225,1,59,6559,1,225,114,101,118,101,59,1,259,4,6,59,69,100,105,117,121,6582,6584,6588,6591,6600,6609,1,8766,59,3,8766,819,59,1,8767,114,99,5,226,1,59,6598,1,226,116,101,5,180,1,59,6607,1,180,59,1,1072,108,105,103,5,230,1,59,6620,1,230,4,2,59,114,6628,6630,1,8289,59,3,55349,56606,114,97,118,101,5,224,1,59,6643,1,224,4,2,101,112,6651,6667,4,2,102,112,6657,6663,115,121,109,59,1,8501,104,59,1,8501,104,97,59,1,945,4,2,97,112,6678,6692,4,2,99,108,6684,6688,114,59,1,257,103,59,1,10815,5,38,1,59,6697,1,38,4,2,100,103,6705,6737,4,5,59,97,100,115,118,6717,6719,6724,6727,6734,1,8743,110,100,59,1,10837,59,1,10844,108,111,112,101,59,1,10840,59,1,10842,4,7,59,101,108,109,114,115,122,6753,6755,6758,6762,6814,6835,6848,1,8736,59,1,10660,101,59,1,8736,115,100,4,2,59,97,6770,6772,1,8737,4,8,97,98,99,100,101,102,103,104,6790,6793,6796,6799,6802,6805,6808,6811,59,1,10664,59,1,10665,59,1,10666,59,1,10667,59,1,10668,59,1,10669,59,1,10670,59,1,10671,116,4,2,59,118,6821,6823,1,8735,98,4,2,59,100,6830,6832,1,8894,59,1,10653,4,2,112,116,6841,6845,104,59,1,8738,59,1,197,97,114,114,59,1,9084,4,2,103,112,6860,6865,111,110,59,1,261,102,59,3,55349,56658,4,7,59,69,97,101,105,111,112,6886,6888,6891,6897,6900,6904,6908,1,8776,59,1,10864,99,105,114,59,1,10863,59,1,8778,100,59,1,8779,115,59,1,39,114,111,120,4,2,59,101,6917,6919,1,8776,113,59,1,8778,105,110,103,5,229,1,59,6931,1,229,4,3,99,116,121,6941,6946,6949,114,59,3,55349,56502,59,1,42,109,112,4,2,59,101,6957,6959,1,8776,113,59,1,8781,105,108,100,101,5,227,1,59,6972,1,227,109,108,5,228,1,59,6981,1,228,4,2,99,105,6989,6997,111,110,105,110,116,59,1,8755,110,116,59,1,10769,4,16,78,97,98,99,100,101,102,105,107,108,110,111,112,114,115,117,7036,7041,7119,7135,7149,7155,7219,7224,7347,7354,7463,7489,7786,7793,7814,7866,111,116,59,1,10989,4,2,99,114,7047,7094,107,4,4,99,101,112,115,7058,7064,7073,7080,111,110,103,59,1,8780,112,115,105,108,111,110,59,1,1014,114,105,109,101,59,1,8245,105,109,4,2,59,101,7088,7090,1,8765,113,59,1,8909,4,2,118,119,7100,7105,101,101,59,1,8893,101,100,4,2,59,103,7113,7115,1,8965,101,59,1,8965,114,107,4,2,59,116,7127,7129,1,9141,98,114,107,59,1,9142,4,2,111,121,7141,7146,110,103,59,1,8780,59,1,1073,113,117,111,59,1,8222,4,5,99,109,112,114,116,7167,7181,7188,7193,7199,97,117,115,4,2,59,101,7176,7178,1,8757,59,1,8757,112,116,121,118,59,1,10672,115,105,59,1,1014,110,111,117,59,1,8492,4,3,97,104,119,7207,7210,7213,59,1,946,59,1,8502,101,101,110,59,1,8812,114,59,3,55349,56607,103,4,7,99,111,115,116,117,118,119,7241,7262,7288,7305,7328,7335,7340,4,3,97,105,117,7249,7253,7258,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,4,3,100,112,116,7270,7275,7281,111,116,59,1,10752,108,117,115,59,1,10753,105,109,101,115,59,1,10754,4,2,113,116,7294,7300,99,117,112,59,1,10758,97,114,59,1,9733,114,105,97,110,103,108,101,4,2,100,117,7318,7324,111,119,110,59,1,9661,112,59,1,9651,112,108,117,115,59,1,10756,101,101,59,1,8897,101,100,103,101,59,1,8896,97,114,111,119,59,1,10509,4,3,97,107,111,7362,7436,7458,4,2,99,110,7368,7432,107,4,3,108,115,116,7377,7386,7394,111,122,101,110,103,101,59,1,10731,113,117,97,114,101,59,1,9642,114,105,97,110,103,108,101,4,4,59,100,108,114,7411,7413,7419,7425,1,9652,111,119,110,59,1,9662,101,102,116,59,1,9666,105,103,104,116,59,1,9656,107,59,1,9251,4,2,49,51,7442,7454,4,2,50,52,7448,7451,59,1,9618,59,1,9617,52,59,1,9619,99,107,59,1,9608,4,2,101,111,7469,7485,4,2,59,113,7475,7478,3,61,8421,117,105,118,59,3,8801,8421,116,59,1,8976,4,4,112,116,119,120,7499,7504,7517,7523,102,59,3,55349,56659,4,2,59,116,7510,7512,1,8869,111,109,59,1,8869,116,105,101,59,1,8904,4,12,68,72,85,86,98,100,104,109,112,116,117,118,7549,7571,7597,7619,7655,7660,7682,7708,7715,7721,7728,7750,4,4,76,82,108,114,7559,7562,7565,7568,59,1,9559,59,1,9556,59,1,9558,59,1,9555,4,5,59,68,85,100,117,7583,7585,7588,7591,7594,1,9552,59,1,9574,59,1,9577,59,1,9572,59,1,9575,4,4,76,82,108,114,7607,7610,7613,7616,59,1,9565,59,1,9562,59,1,9564,59,1,9561,4,7,59,72,76,82,104,108,114,7635,7637,7640,7643,7646,7649,7652,1,9553,59,1,9580,59,1,9571,59,1,9568,59,1,9579,59,1,9570,59,1,9567,111,120,59,1,10697,4,4,76,82,108,114,7670,7673,7676,7679,59,1,9557,59,1,9554,59,1,9488,59,1,9484,4,5,59,68,85,100,117,7694,7696,7699,7702,7705,1,9472,59,1,9573,59,1,9576,59,1,9516,59,1,9524,105,110,117,115,59,1,8863,108,117,115,59,1,8862,105,109,101,115,59,1,8864,4,4,76,82,108,114,7738,7741,7744,7747,59,1,9563,59,1,9560,59,1,9496,59,1,9492,4,7,59,72,76,82,104,108,114,7766,7768,7771,7774,7777,7780,7783,1,9474,59,1,9578,59,1,9569,59,1,9566,59,1,9532,59,1,9508,59,1,9500,114,105,109,101,59,1,8245,4,2,101,118,7799,7804,118,101,59,1,728,98,97,114,5,166,1,59,7812,1,166,4,4,99,101,105,111,7824,7829,7834,7846,114,59,3,55349,56503,109,105,59,1,8271,109,4,2,59,101,7841,7843,1,8765,59,1,8909,108,4,3,59,98,104,7855,7857,7860,1,92,59,1,10693,115,117,98,59,1,10184,4,2,108,109,7872,7885,108,4,2,59,101,7879,7881,1,8226,116,59,1,8226,112,4,3,59,69,101,7894,7896,7899,1,8782,59,1,10926,4,2,59,113,7905,7907,1,8783,59,1,8783,4,15,97,99,100,101,102,104,105,108,111,114,115,116,117,119,121,7942,8021,8075,8080,8121,8126,8157,8279,8295,8430,8446,8485,8491,8707,8726,4,3,99,112,114,7950,7956,8007,117,116,101,59,1,263,4,6,59,97,98,99,100,115,7970,7972,7977,7984,7998,8003,1,8745,110,100,59,1,10820,114,99,117,112,59,1,10825,4,2,97,117,7990,7994,112,59,1,10827,112,59,1,10823,111,116,59,1,10816,59,3,8745,65024,4,2,101,111,8013,8017,116,59,1,8257,110,59,1,711,4,4,97,101,105,117,8031,8046,8056,8061,4,2,112,114,8037,8041,115,59,1,10829,111,110,59,1,269,100,105,108,5,231,1,59,8054,1,231,114,99,59,1,265,112,115,4,2,59,115,8069,8071,1,10828,109,59,1,10832,111,116,59,1,267,4,3,100,109,110,8088,8097,8104,105,108,5,184,1,59,8095,1,184,112,116,121,118,59,1,10674,116,5,162,2,59,101,8112,8114,1,162,114,100,111,116,59,1,183,114,59,3,55349,56608,4,3,99,101,105,8134,8138,8154,121,59,1,1095,99,107,4,2,59,109,8146,8148,1,10003,97,114,107,59,1,10003,59,1,967,114,4,7,59,69,99,101,102,109,115,8174,8176,8179,8258,8261,8268,8273,1,9675,59,1,10691,4,3,59,101,108,8187,8189,8193,1,710,113,59,1,8791,101,4,2,97,100,8200,8223,114,114,111,119,4,2,108,114,8210,8216,101,102,116,59,1,8634,105,103,104,116,59,1,8635,4,5,82,83,97,99,100,8235,8238,8241,8246,8252,59,1,174,59,1,9416,115,116,59,1,8859,105,114,99,59,1,8858,97,115,104,59,1,8861,59,1,8791,110,105,110,116,59,1,10768,105,100,59,1,10991,99,105,114,59,1,10690,117,98,115,4,2,59,117,8288,8290,1,9827,105,116,59,1,9827,4,4,108,109,110,112,8305,8326,8376,8400,111,110,4,2,59,101,8313,8315,1,58,4,2,59,113,8321,8323,1,8788,59,1,8788,4,2,109,112,8332,8344,97,4,2,59,116,8339,8341,1,44,59,1,64,4,3,59,102,108,8352,8354,8358,1,8705,110,59,1,8728,101,4,2,109,120,8365,8371,101,110,116,59,1,8705,101,115,59,1,8450,4,2,103,105,8382,8395,4,2,59,100,8388,8390,1,8773,111,116,59,1,10861,110,116,59,1,8750,4,3,102,114,121,8408,8412,8417,59,3,55349,56660,111,100,59,1,8720,5,169,2,59,115,8424,8426,1,169,114,59,1,8471,4,2,97,111,8436,8441,114,114,59,1,8629,115,115,59,1,10007,4,2,99,117,8452,8457,114,59,3,55349,56504,4,2,98,112,8463,8474,4,2,59,101,8469,8471,1,10959,59,1,10961,4,2,59,101,8480,8482,1,10960,59,1,10962,100,111,116,59,1,8943,4,7,100,101,108,112,114,118,119,8507,8522,8536,8550,8600,8697,8702,97,114,114,4,2,108,114,8516,8519,59,1,10552,59,1,10549,4,2,112,115,8528,8532,114,59,1,8926,99,59,1,8927,97,114,114,4,2,59,112,8545,8547,1,8630,59,1,10557,4,6,59,98,99,100,111,115,8564,8566,8573,8587,8592,8596,1,8746,114,99,97,112,59,1,10824,4,2,97,117,8579,8583,112,59,1,10822,112,59,1,10826,111,116,59,1,8845,114,59,1,10821,59,3,8746,65024,4,4,97,108,114,118,8610,8623,8663,8672,114,114,4,2,59,109,8618,8620,1,8631,59,1,10556,121,4,3,101,118,119,8632,8651,8656,113,4,2,112,115,8639,8645,114,101,99,59,1,8926,117,99,99,59,1,8927,101,101,59,1,8910,101,100,103,101,59,1,8911,101,110,5,164,1,59,8670,1,164,101,97,114,114,111,119,4,2,108,114,8684,8690,101,102,116,59,1,8630,105,103,104,116,59,1,8631,101,101,59,1,8910,101,100,59,1,8911,4,2,99,105,8713,8721,111,110,105,110,116,59,1,8754,110,116,59,1,8753,108,99,116,121,59,1,9005,4,19,65,72,97,98,99,100,101,102,104,105,106,108,111,114,115,116,117,119,122,8773,8778,8783,8821,8839,8854,8887,8914,8930,8944,9036,9041,9058,9197,9227,9258,9281,9297,9305,114,114,59,1,8659,97,114,59,1,10597,4,4,103,108,114,115,8793,8799,8805,8809,103,101,114,59,1,8224,101,116,104,59,1,8504,114,59,1,8595,104,4,2,59,118,8816,8818,1,8208,59,1,8867,4,2,107,108,8827,8834,97,114,111,119,59,1,10511,97,99,59,1,733,4,2,97,121,8845,8851,114,111,110,59,1,271,59,1,1076,4,3,59,97,111,8862,8864,8880,1,8518,4,2,103,114,8870,8876,103,101,114,59,1,8225,114,59,1,8650,116,115,101,113,59,1,10871,4,3,103,108,109,8895,8902,8907,5,176,1,59,8900,1,176,116,97,59,1,948,112,116,121,118,59,1,10673,4,2,105,114,8920,8926,115,104,116,59,1,10623,59,3,55349,56609,97,114,4,2,108,114,8938,8941,59,1,8643,59,1,8642,4,5,97,101,103,115,118,8956,8986,8989,8996,9001,109,4,3,59,111,115,8965,8967,8983,1,8900,110,100,4,2,59,115,8975,8977,1,8900,117,105,116,59,1,9830,59,1,9830,59,1,168,97,109,109,97,59,1,989,105,110,59,1,8946,4,3,59,105,111,9009,9011,9031,1,247,100,101,5,247,2,59,111,9020,9022,1,247,110,116,105,109,101,115,59,1,8903,110,120,59,1,8903,99,121,59,1,1106,99,4,2,111,114,9048,9053,114,110,59,1,8990,111,112,59,1,8973,4,5,108,112,116,117,119,9070,9076,9081,9130,9144,108,97,114,59,1,36,102,59,3,55349,56661,4,5,59,101,109,112,115,9093,9095,9109,9116,9122,1,729,113,4,2,59,100,9102,9104,1,8784,111,116,59,1,8785,105,110,117,115,59,1,8760,108,117,115,59,1,8724,113,117,97,114,101,59,1,8865,98,108,101,98,97,114,119,101,100,103,101,59,1,8966,110,4,3,97,100,104,9153,9160,9172,114,114,111,119,59,1,8595,111,119,110,97,114,114,111,119,115,59,1,8650,97,114,112,111,111,110,4,2,108,114,9184,9190,101,102,116,59,1,8643,105,103,104,116,59,1,8642,4,2,98,99,9203,9211,107,97,114,111,119,59,1,10512,4,2,111,114,9217,9222,114,110,59,1,8991,111,112,59,1,8972,4,3,99,111,116,9235,9248,9252,4,2,114,121,9241,9245,59,3,55349,56505,59,1,1109,108,59,1,10742,114,111,107,59,1,273,4,2,100,114,9264,9269,111,116,59,1,8945,105,4,2,59,102,9276,9278,1,9663,59,1,9662,4,2,97,104,9287,9292,114,114,59,1,8693,97,114,59,1,10607,97,110,103,108,101,59,1,10662,4,2,99,105,9311,9315,121,59,1,1119,103,114,97,114,114,59,1,10239,4,18,68,97,99,100,101,102,103,108,109,110,111,112,113,114,115,116,117,120,9361,9376,9398,9439,9444,9447,9462,9495,9531,9585,9598,9614,9659,9755,9771,9792,9808,9826,4,2,68,111,9367,9372,111,116,59,1,10871,116,59,1,8785,4,2,99,115,9382,9392,117,116,101,5,233,1,59,9390,1,233,116,101,114,59,1,10862,4,4,97,105,111,121,9408,9414,9430,9436,114,111,110,59,1,283,114,4,2,59,99,9421,9423,1,8790,5,234,1,59,9428,1,234,108,111,110,59,1,8789,59,1,1101,111,116,59,1,279,59,1,8519,4,2,68,114,9453,9458,111,116,59,1,8786,59,3,55349,56610,4,3,59,114,115,9470,9472,9482,1,10906,97,118,101,5,232,1,59,9480,1,232,4,2,59,100,9488,9490,1,10902,111,116,59,1,10904,4,4,59,105,108,115,9505,9507,9515,9518,1,10905,110,116,101,114,115,59,1,9191,59,1,8467,4,2,59,100,9524,9526,1,10901,111,116,59,1,10903,4,3,97,112,115,9539,9544,9564,99,114,59,1,275,116,121,4,3,59,115,118,9554,9556,9561,1,8709,101,116,59,1,8709,59,1,8709,112,4,2,49,59,9571,9583,4,2,51,52,9577,9580,59,1,8196,59,1,8197,1,8195,4,2,103,115,9591,9594,59,1,331,112,59,1,8194,4,2,103,112,9604,9609,111,110,59,1,281,102,59,3,55349,56662,4,3,97,108,115,9622,9635,9640,114,4,2,59,115,9629,9631,1,8917,108,59,1,10723,117,115,59,1,10865,105,4,3,59,108,118,9649,9651,9656,1,949,111,110,59,1,949,59,1,1013,4,4,99,115,117,118,9669,9686,9716,9747,4,2,105,111,9675,9680,114,99,59,1,8790,108,111,110,59,1,8789,4,2,105,108,9692,9696,109,59,1,8770,97,110,116,4,2,103,108,9705,9710,116,114,59,1,10902,101,115,115,59,1,10901,4,3,97,101,105,9724,9729,9734,108,115,59,1,61,115,116,59,1,8799,118,4,2,59,68,9741,9743,1,8801,68,59,1,10872,112,97,114,115,108,59,1,10725,4,2,68,97,9761,9766,111,116,59,1,8787,114,114,59,1,10609,4,3,99,100,105,9779,9783,9788,114,59,1,8495,111,116,59,1,8784,109,59,1,8770,4,2,97,104,9798,9801,59,1,951,5,240,1,59,9806,1,240,4,2,109,114,9814,9822,108,5,235,1,59,9820,1,235,111,59,1,8364,4,3,99,105,112,9834,9838,9843,108,59,1,33,115,116,59,1,8707,4,2,101,111,9849,9859,99,116,97,116,105,111,110,59,1,8496,110,101,110,116,105,97,108,101,59,1,8519,4,12,97,99,101,102,105,106,108,110,111,112,114,115,9896,9910,9914,9921,9954,9960,9967,9989,9994,10027,10036,10164,108,108,105,110,103,100,111,116,115,101,113,59,1,8786,121,59,1,1092,109,97,108,101,59,1,9792,4,3,105,108,114,9929,9935,9950,108,105,103,59,1,64259,4,2,105,108,9941,9945,103,59,1,64256,105,103,59,1,64260,59,3,55349,56611,108,105,103,59,1,64257,108,105,103,59,3,102,106,4,3,97,108,116,9975,9979,9984,116,59,1,9837,105,103,59,1,64258,110,115,59,1,9649,111,102,59,1,402,4,2,112,114,10000,10005,102,59,3,55349,56663,4,2,97,107,10011,10016,108,108,59,1,8704,4,2,59,118,10022,10024,1,8916,59,1,10969,97,114,116,105,110,116,59,1,10765,4,2,97,111,10042,10159,4,2,99,115,10048,10155,4,6,49,50,51,52,53,55,10062,10102,10114,10135,10139,10151,4,6,50,51,52,53,54,56,10076,10083,10086,10093,10096,10099,5,189,1,59,10081,1,189,59,1,8531,5,188,1,59,10091,1,188,59,1,8533,59,1,8537,59,1,8539,4,2,51,53,10108,10111,59,1,8532,59,1,8534,4,3,52,53,56,10122,10129,10132,5,190,1,59,10127,1,190,59,1,8535,59,1,8540,53,59,1,8536,4,2,54,56,10145,10148,59,1,8538,59,1,8541,56,59,1,8542,108,59,1,8260,119,110,59,1,8994,99,114,59,3,55349,56507,4,17,69,97,98,99,100,101,102,103,105,106,108,110,111,114,115,116,118,10206,10217,10247,10254,10268,10273,10358,10363,10374,10380,10385,10406,10458,10464,10470,10497,10610,4,2,59,108,10212,10214,1,8807,59,1,10892,4,3,99,109,112,10225,10231,10244,117,116,101,59,1,501,109,97,4,2,59,100,10239,10241,1,947,59,1,989,59,1,10886,114,101,118,101,59,1,287,4,2,105,121,10260,10265,114,99,59,1,285,59,1,1075,111,116,59,1,289,4,4,59,108,113,115,10283,10285,10288,10308,1,8805,59,1,8923,4,3,59,113,115,10296,10298,10301,1,8805,59,1,8807,108,97,110,116,59,1,10878,4,4,59,99,100,108,10318,10320,10324,10345,1,10878,99,59,1,10921,111,116,4,2,59,111,10332,10334,1,10880,4,2,59,108,10340,10342,1,10882,59,1,10884,4,2,59,101,10351,10354,3,8923,65024,115,59,1,10900,114,59,3,55349,56612,4,2,59,103,10369,10371,1,8811,59,1,8921,109,101,108,59,1,8503,99,121,59,1,1107,4,4,59,69,97,106,10395,10397,10400,10403,1,8823,59,1,10898,59,1,10917,59,1,10916,4,4,69,97,101,115,10416,10419,10434,10453,59,1,8809,112,4,2,59,112,10426,10428,1,10890,114,111,120,59,1,10890,4,2,59,113,10440,10442,1,10888,4,2,59,113,10448,10450,1,10888,59,1,8809,105,109,59,1,8935,112,102,59,3,55349,56664,97,118,101,59,1,96,4,2,99,105,10476,10480,114,59,1,8458,109,4,3,59,101,108,10489,10491,10494,1,8819,59,1,10894,59,1,10896,5,62,6,59,99,100,108,113,114,10512,10514,10527,10532,10538,10545,1,62,4,2,99,105,10520,10523,59,1,10919,114,59,1,10874,111,116,59,1,8919,80,97,114,59,1,10645,117,101,115,116,59,1,10876,4,5,97,100,101,108,115,10557,10574,10579,10599,10605,4,2,112,114,10563,10570,112,114,111,120,59,1,10886,114,59,1,10616,111,116,59,1,8919,113,4,2,108,113,10586,10592,101,115,115,59,1,8923,108,101,115,115,59,1,10892,101,115,115,59,1,8823,105,109,59,1,8819,4,2,101,110,10616,10626,114,116,110,101,113,113,59,3,8809,65024,69,59,3,8809,65024,4,10,65,97,98,99,101,102,107,111,115,121,10653,10658,10713,10718,10724,10760,10765,10786,10850,10875,114,114,59,1,8660,4,4,105,108,109,114,10668,10674,10678,10684,114,115,112,59,1,8202,102,59,1,189,105,108,116,59,1,8459,4,2,100,114,10690,10695,99,121,59,1,1098,4,3,59,99,119,10703,10705,10710,1,8596,105,114,59,1,10568,59,1,8621,97,114,59,1,8463,105,114,99,59,1,293,4,3,97,108,114,10732,10748,10754,114,116,115,4,2,59,117,10741,10743,1,9829,105,116,59,1,9829,108,105,112,59,1,8230,99,111,110,59,1,8889,114,59,3,55349,56613,115,4,2,101,119,10772,10779,97,114,111,119,59,1,10533,97,114,111,119,59,1,10534,4,5,97,109,111,112,114,10798,10803,10809,10839,10844,114,114,59,1,8703,116,104,116,59,1,8763,107,4,2,108,114,10816,10827,101,102,116,97,114,114,111,119,59,1,8617,105,103,104,116,97,114,114,111,119,59,1,8618,102,59,3,55349,56665,98,97,114,59,1,8213,4,3,99,108,116,10858,10863,10869,114,59,3,55349,56509,97,115,104,59,1,8463,114,111,107,59,1,295,4,2,98,112,10881,10887,117,108,108,59,1,8259,104,101,110,59,1,8208,4,15,97,99,101,102,103,105,106,109,110,111,112,113,115,116,117,10925,10936,10958,10977,10990,11001,11039,11045,11101,11192,11220,11226,11237,11285,11299,99,117,116,101,5,237,1,59,10934,1,237,4,3,59,105,121,10944,10946,10955,1,8291,114,99,5,238,1,59,10953,1,238,59,1,1080,4,2,99,120,10964,10968,121,59,1,1077,99,108,5,161,1,59,10975,1,161,4,2,102,114,10983,10986,59,1,8660,59,3,55349,56614,114,97,118,101,5,236,1,59,10999,1,236,4,4,59,105,110,111,11011,11013,11028,11034,1,8520,4,2,105,110,11019,11024,110,116,59,1,10764,116,59,1,8749,102,105,110,59,1,10716,116,97,59,1,8489,108,105,103,59,1,307,4,3,97,111,112,11053,11092,11096,4,3,99,103,116,11061,11065,11088,114,59,1,299,4,3,101,108,112,11073,11076,11082,59,1,8465,105,110,101,59,1,8464,97,114,116,59,1,8465,104,59,1,305,102,59,1,8887,101,100,59,1,437,4,5,59,99,102,111,116,11113,11115,11121,11136,11142,1,8712,97,114,101,59,1,8453,105,110,4,2,59,116,11129,11131,1,8734,105,101,59,1,10717,100,111,116,59,1,305,4,5,59,99,101,108,112,11154,11156,11161,11179,11186,1,8747,97,108,59,1,8890,4,2,103,114,11167,11173,101,114,115,59,1,8484,99,97,108,59,1,8890,97,114,104,107,59,1,10775,114,111,100,59,1,10812,4,4,99,103,112,116,11202,11206,11211,11216,121,59,1,1105,111,110,59,1,303,102,59,3,55349,56666,97,59,1,953,114,111,100,59,1,10812,117,101,115,116,5,191,1,59,11235,1,191,4,2,99,105,11243,11248,114,59,3,55349,56510,110,4,5,59,69,100,115,118,11261,11263,11266,11271,11282,1,8712,59,1,8953,111,116,59,1,8949,4,2,59,118,11277,11279,1,8948,59,1,8947,59,1,8712,4,2,59,105,11291,11293,1,8290,108,100,101,59,1,297,4,2,107,109,11305,11310,99,121,59,1,1110,108,5,239,1,59,11316,1,239,4,6,99,102,109,111,115,117,11332,11346,11351,11357,11363,11380,4,2,105,121,11338,11343,114,99,59,1,309,59,1,1081,114,59,3,55349,56615,97,116,104,59,1,567,112,102,59,3,55349,56667,4,2,99,101,11369,11374,114,59,3,55349,56511,114,99,121,59,1,1112,107,99,121,59,1,1108,4,8,97,99,102,103,104,106,111,115,11404,11418,11433,11438,11445,11450,11455,11461,112,112,97,4,2,59,118,11413,11415,1,954,59,1,1008,4,2,101,121,11424,11430,100,105,108,59,1,311,59,1,1082,114,59,3,55349,56616,114,101,101,110,59,1,312,99,121,59,1,1093,99,121,59,1,1116,112,102,59,3,55349,56668,99,114,59,3,55349,56512,4,23,65,66,69,72,97,98,99,100,101,102,103,104,106,108,109,110,111,112,114,115,116,117,118,11515,11538,11544,11555,11560,11721,11780,11818,11868,12136,12160,12171,12203,12208,12246,12275,12327,12509,12523,12569,12641,12732,12752,4,3,97,114,116,11523,11528,11532,114,114,59,1,8666,114,59,1,8656,97,105,108,59,1,10523,97,114,114,59,1,10510,4,2,59,103,11550,11552,1,8806,59,1,10891,97,114,59,1,10594,4,9,99,101,103,109,110,112,113,114,116,11580,11586,11594,11600,11606,11624,11627,11636,11694,117,116,101,59,1,314,109,112,116,121,118,59,1,10676,114,97,110,59,1,8466,98,100,97,59,1,955,103,4,3,59,100,108,11615,11617,11620,1,10216,59,1,10641,101,59,1,10216,59,1,10885,117,111,5,171,1,59,11634,1,171,114,4,8,59,98,102,104,108,112,115,116,11655,11657,11669,11673,11677,11681,11685,11690,1,8592,4,2,59,102,11663,11665,1,8676,115,59,1,10527,115,59,1,10525,107,59,1,8617,112,59,1,8619,108,59,1,10553,105,109,59,1,10611,108,59,1,8610,4,3,59,97,101,11702,11704,11709,1,10923,105,108,59,1,10521,4,2,59,115,11715,11717,1,10925,59,3,10925,65024,4,3,97,98,114,11729,11734,11739,114,114,59,1,10508,114,107,59,1,10098,4,2,97,107,11745,11758,99,4,2,101,107,11752,11755,59,1,123,59,1,91,4,2,101,115,11764,11767,59,1,10635,108,4,2,100,117,11774,11777,59,1,10639,59,1,10637,4,4,97,101,117,121,11790,11796,11811,11815,114,111,110,59,1,318,4,2,100,105,11802,11807,105,108,59,1,316,108,59,1,8968,98,59,1,123,59,1,1083,4,4,99,113,114,115,11828,11832,11845,11864,97,59,1,10550,117,111,4,2,59,114,11840,11842,1,8220,59,1,8222,4,2,100,117,11851,11857,104,97,114,59,1,10599,115,104,97,114,59,1,10571,104,59,1,8626,4,5,59,102,103,113,115,11880,11882,12008,12011,12031,1,8804,116,4,5,97,104,108,114,116,11895,11913,11935,11947,11996,114,114,111,119,4,2,59,116,11905,11907,1,8592,97,105,108,59,1,8610,97,114,112,111,111,110,4,2,100,117,11925,11931,111,119,110,59,1,8637,112,59,1,8636,101,102,116,97,114,114,111,119,115,59,1,8647,105,103,104,116,4,3,97,104,115,11959,11974,11984,114,114,111,119,4,2,59,115,11969,11971,1,8596,59,1,8646,97,114,112,111,111,110,115,59,1,8651,113,117,105,103,97,114,114,111,119,59,1,8621,104,114,101,101,116,105,109,101,115,59,1,8907,59,1,8922,4,3,59,113,115,12019,12021,12024,1,8804,59,1,8806,108,97,110,116,59,1,10877,4,5,59,99,100,103,115,12043,12045,12049,12070,12083,1,10877,99,59,1,10920,111,116,4,2,59,111,12057,12059,1,10879,4,2,59,114,12065,12067,1,10881,59,1,10883,4,2,59,101,12076,12079,3,8922,65024,115,59,1,10899,4,5,97,100,101,103,115,12095,12103,12108,12126,12131,112,112,114,111,120,59,1,10885,111,116,59,1,8918,113,4,2,103,113,12115,12120,116,114,59,1,8922,103,116,114,59,1,10891,116,114,59,1,8822,105,109,59,1,8818,4,3,105,108,114,12144,12150,12156,115,104,116,59,1,10620,111,111,114,59,1,8970,59,3,55349,56617,4,2,59,69,12166,12168,1,8822,59,1,10897,4,2,97,98,12177,12198,114,4,2,100,117,12184,12187,59,1,8637,4,2,59,108,12193,12195,1,8636,59,1,10602,108,107,59,1,9604,99,121,59,1,1113,4,5,59,97,99,104,116,12220,12222,12227,12235,12241,1,8810,114,114,59,1,8647,111,114,110,101,114,59,1,8990,97,114,100,59,1,10603,114,105,59,1,9722,4,2,105,111,12252,12258,100,111,116,59,1,320,117,115,116,4,2,59,97,12267,12269,1,9136,99,104,101,59,1,9136,4,4,69,97,101,115,12285,12288,12303,12322,59,1,8808,112,4,2,59,112,12295,12297,1,10889,114,111,120,59,1,10889,4,2,59,113,12309,12311,1,10887,4,2,59,113,12317,12319,1,10887,59,1,8808,105,109,59,1,8934,4,8,97,98,110,111,112,116,119,122,12345,12359,12364,12421,12446,12467,12474,12490,4,2,110,114,12351,12355,103,59,1,10220,114,59,1,8701,114,107,59,1,10214,103,4,3,108,109,114,12373,12401,12409,101,102,116,4,2,97,114,12382,12389,114,114,111,119,59,1,10229,105,103,104,116,97,114,114,111,119,59,1,10231,97,112,115,116,111,59,1,10236,105,103,104,116,97,114,114,111,119,59,1,10230,112,97,114,114,111,119,4,2,108,114,12433,12439,101,102,116,59,1,8619,105,103,104,116,59,1,8620,4,3,97,102,108,12454,12458,12462,114,59,1,10629,59,3,55349,56669,117,115,59,1,10797,105,109,101,115,59,1,10804,4,2,97,98,12480,12485,115,116,59,1,8727,97,114,59,1,95,4,3,59,101,102,12498,12500,12506,1,9674,110,103,101,59,1,9674,59,1,10731,97,114,4,2,59,108,12517,12519,1,40,116,59,1,10643,4,5,97,99,104,109,116,12535,12540,12548,12561,12564,114,114,59,1,8646,111,114,110,101,114,59,1,8991,97,114,4,2,59,100,12556,12558,1,8651,59,1,10605,59,1,8206,114,105,59,1,8895,4,6,97,99,104,105,113,116,12583,12589,12594,12597,12614,12635,113,117,111,59,1,8249,114,59,3,55349,56513,59,1,8624,109,4,3,59,101,103,12606,12608,12611,1,8818,59,1,10893,59,1,10895,4,2,98,117,12620,12623,59,1,91,111,4,2,59,114,12630,12632,1,8216,59,1,8218,114,111,107,59,1,322,5,60,8,59,99,100,104,105,108,113,114,12660,12662,12675,12680,12686,12692,12698,12705,1,60,4,2,99,105,12668,12671,59,1,10918,114,59,1,10873,111,116,59,1,8918,114,101,101,59,1,8907,109,101,115,59,1,8905,97,114,114,59,1,10614,117,101,115,116,59,1,10875,4,2,80,105,12711,12716,97,114,59,1,10646,4,3,59,101,102,12724,12726,12729,1,9667,59,1,8884,59,1,9666,114,4,2,100,117,12739,12746,115,104,97,114,59,1,10570,104,97,114,59,1,10598,4,2,101,110,12758,12768,114,116,110,101,113,113,59,3,8808,65024,69,59,3,8808,65024,4,14,68,97,99,100,101,102,104,105,108,110,111,112,115,117,12803,12809,12893,12908,12914,12928,12933,12937,13011,13025,13032,13049,13052,13069,68,111,116,59,1,8762,4,4,99,108,112,114,12819,12827,12849,12887,114,5,175,1,59,12825,1,175,4,2,101,116,12833,12836,59,1,9794,4,2,59,101,12842,12844,1,10016,115,101,59,1,10016,4,2,59,115,12855,12857,1,8614,116,111,4,4,59,100,108,117,12869,12871,12877,12883,1,8614,111,119,110,59,1,8615,101,102,116,59,1,8612,112,59,1,8613,107,101,114,59,1,9646,4,2,111,121,12899,12905,109,109,97,59,1,10793,59,1,1084,97,115,104,59,1,8212,97,115,117,114,101,100,97,110,103,108,101,59,1,8737,114,59,3,55349,56618,111,59,1,8487,4,3,99,100,110,12945,12954,12985,114,111,5,181,1,59,12952,1,181,4,4,59,97,99,100,12964,12966,12971,12976,1,8739,115,116,59,1,42,105,114,59,1,10992,111,116,5,183,1,59,12983,1,183,117,115,4,3,59,98,100,12995,12997,13000,1,8722,59,1,8863,4,2,59,117,13006,13008,1,8760,59,1,10794,4,2,99,100,13017,13021,112,59,1,10971,114,59,1,8230,112,108,117,115,59,1,8723,4,2,100,112,13038,13044,101,108,115,59,1,8871,102,59,3,55349,56670,59,1,8723,4,2,99,116,13058,13063,114,59,3,55349,56514,112,111,115,59,1,8766,4,3,59,108,109,13077,13079,13087,1,956,116,105,109,97,112,59,1,8888,97,112,59,1,8888,4,24,71,76,82,86,97,98,99,100,101,102,103,104,105,106,108,109,111,112,114,115,116,117,118,119,13142,13165,13217,13229,13247,13330,13359,13414,13420,13508,13513,13579,13602,13626,13631,13762,13767,13855,13936,13995,14214,14285,14312,14432,4,2,103,116,13148,13152,59,3,8921,824,4,2,59,118,13158,13161,3,8811,8402,59,3,8811,824,4,3,101,108,116,13173,13200,13204,102,116,4,2,97,114,13181,13188,114,114,111,119,59,1,8653,105,103,104,116,97,114,114,111,119,59,1,8654,59,3,8920,824,4,2,59,118,13210,13213,3,8810,8402,59,3,8810,824,105,103,104,116,97,114,114,111,119,59,1,8655,4,2,68,100,13235,13241,97,115,104,59,1,8879,97,115,104,59,1,8878,4,5,98,99,110,112,116,13259,13264,13270,13275,13308,108,97,59,1,8711,117,116,101,59,1,324,103,59,3,8736,8402,4,5,59,69,105,111,112,13287,13289,13293,13298,13302,1,8777,59,3,10864,824,100,59,3,8779,824,115,59,1,329,114,111,120,59,1,8777,117,114,4,2,59,97,13316,13318,1,9838,108,4,2,59,115,13325,13327,1,9838,59,1,8469,4,2,115,117,13336,13344,112,5,160,1,59,13342,1,160,109,112,4,2,59,101,13352,13355,3,8782,824,59,3,8783,824,4,5,97,101,111,117,121,13371,13385,13391,13407,13411,4,2,112,114,13377,13380,59,1,10819,111,110,59,1,328,100,105,108,59,1,326,110,103,4,2,59,100,13399,13401,1,8775,111,116,59,3,10861,824,112,59,1,10818,59,1,1085,97,115,104,59,1,8211,4,7,59,65,97,100,113,115,120,13436,13438,13443,13466,13472,13478,13494,1,8800,114,114,59,1,8663,114,4,2,104,114,13450,13454,107,59,1,10532,4,2,59,111,13460,13462,1,8599,119,59,1,8599,111,116,59,3,8784,824,117,105,118,59,1,8802,4,2,101,105,13484,13489,97,114,59,1,10536,109,59,3,8770,824,105,115,116,4,2,59,115,13503,13505,1,8708,59,1,8708,114,59,3,55349,56619,4,4,69,101,115,116,13523,13527,13563,13568,59,3,8807,824,4,3,59,113,115,13535,13537,13559,1,8817,4,3,59,113,115,13545,13547,13551,1,8817,59,3,8807,824,108,97,110,116,59,3,10878,824,59,3,10878,824,105,109,59,1,8821,4,2,59,114,13574,13576,1,8815,59,1,8815,4,3,65,97,112,13587,13592,13597,114,114,59,1,8654,114,114,59,1,8622,97,114,59,1,10994,4,3,59,115,118,13610,13612,13623,1,8715,4,2,59,100,13618,13620,1,8956,59,1,8954,59,1,8715,99,121,59,1,1114,4,7,65,69,97,100,101,115,116,13647,13652,13656,13661,13665,13737,13742,114,114,59,1,8653,59,3,8806,824,114,114,59,1,8602,114,59,1,8229,4,4,59,102,113,115,13675,13677,13703,13725,1,8816,116,4,2,97,114,13684,13691,114,114,111,119,59,1,8602,105,103,104,116,97,114,114,111,119,59,1,8622,4,3,59,113,115,13711,13713,13717,1,8816,59,3,8806,824,108,97,110,116,59,3,10877,824,4,2,59,115,13731,13734,3,10877,824,59,1,8814,105,109,59,1,8820,4,2,59,114,13748,13750,1,8814,105,4,2,59,101,13757,13759,1,8938,59,1,8940,105,100,59,1,8740,4,2,112,116,13773,13778,102,59,3,55349,56671,5,172,3,59,105,110,13787,13789,13829,1,172,110,4,4,59,69,100,118,13800,13802,13806,13812,1,8713,59,3,8953,824,111,116,59,3,8949,824,4,3,97,98,99,13820,13823,13826,59,1,8713,59,1,8951,59,1,8950,105,4,2,59,118,13836,13838,1,8716,4,3,97,98,99,13846,13849,13852,59,1,8716,59,1,8958,59,1,8957,4,3,97,111,114,13863,13892,13899,114,4,4,59,97,115,116,13874,13876,13883,13888,1,8742,108,108,101,108,59,1,8742,108,59,3,11005,8421,59,3,8706,824,108,105,110,116,59,1,10772,4,3,59,99,101,13907,13909,13914,1,8832,117,101,59,1,8928,4,2,59,99,13920,13923,3,10927,824,4,2,59,101,13929,13931,1,8832,113,59,3,10927,824,4,4,65,97,105,116,13946,13951,13971,13982,114,114,59,1,8655,114,114,4,3,59,99,119,13961,13963,13967,1,8603,59,3,10547,824,59,3,8605,824,103,104,116,97,114,114,111,119,59,1,8603,114,105,4,2,59,101,13990,13992,1,8939,59,1,8941,4,7,99,104,105,109,112,113,117,14011,14036,14060,14080,14085,14090,14106,4,4,59,99,101,114,14021,14023,14028,14032,1,8833,117,101,59,1,8929,59,3,10928,824,59,3,55349,56515,111,114,116,4,2,109,112,14045,14050,105,100,59,1,8740,97,114,97,108,108,101,108,59,1,8742,109,4,2,59,101,14067,14069,1,8769,4,2,59,113,14075,14077,1,8772,59,1,8772,105,100,59,1,8740,97,114,59,1,8742,115,117,4,2,98,112,14098,14102,101,59,1,8930,101,59,1,8931,4,3,98,99,112,14114,14157,14171,4,4,59,69,101,115,14124,14126,14130,14133,1,8836,59,3,10949,824,59,1,8840,101,116,4,2,59,101,14141,14144,3,8834,8402,113,4,2,59,113,14151,14153,1,8840,59,3,10949,824,99,4,2,59,101,14164,14166,1,8833,113,59,3,10928,824,4,4,59,69,101,115,14181,14183,14187,14190,1,8837,59,3,10950,824,59,1,8841,101,116,4,2,59,101,14198,14201,3,8835,8402,113,4,2,59,113,14208,14210,1,8841,59,3,10950,824,4,4,103,105,108,114,14224,14228,14238,14242,108,59,1,8825,108,100,101,5,241,1,59,14236,1,241,103,59,1,8824,105,97,110,103,108,101,4,2,108,114,14254,14269,101,102,116,4,2,59,101,14263,14265,1,8938,113,59,1,8940,105,103,104,116,4,2,59,101,14279,14281,1,8939,113,59,1,8941,4,2,59,109,14291,14293,1,957,4,3,59,101,115,14301,14303,14308,1,35,114,111,59,1,8470,112,59,1,8199,4,9,68,72,97,100,103,105,108,114,115,14332,14338,14344,14349,14355,14369,14376,14408,14426,97,115,104,59,1,8877,97,114,114,59,1,10500,112,59,3,8781,8402,97,115,104,59,1,8876,4,2,101,116,14361,14365,59,3,8805,8402,59,3,62,8402,110,102,105,110,59,1,10718,4,3,65,101,116,14384,14389,14393,114,114,59,1,10498,59,3,8804,8402,4,2,59,114,14399,14402,3,60,8402,105,101,59,3,8884,8402,4,2,65,116,14414,14419,114,114,59,1,10499,114,105,101,59,3,8885,8402,105,109,59,3,8764,8402,4,3,65,97,110,14440,14445,14468,114,114,59,1,8662,114,4,2,104,114,14452,14456,107,59,1,10531,4,2,59,111,14462,14464,1,8598,119,59,1,8598,101,97,114,59,1,10535,4,18,83,97,99,100,101,102,103,104,105,108,109,111,112,114,115,116,117,118,14512,14515,14535,14560,14597,14603,14618,14643,14657,14662,14701,14741,14747,14769,14851,14877,14907,14916,59,1,9416,4,2,99,115,14521,14531,117,116,101,5,243,1,59,14529,1,243,116,59,1,8859,4,2,105,121,14541,14557,114,4,2,59,99,14548,14550,1,8858,5,244,1,59,14555,1,244,59,1,1086,4,5,97,98,105,111,115,14572,14577,14583,14587,14591,115,104,59,1,8861,108,97,99,59,1,337,118,59,1,10808,116,59,1,8857,111,108,100,59,1,10684,108,105,103,59,1,339,4,2,99,114,14609,14614,105,114,59,1,10687,59,3,55349,56620,4,3,111,114,116,14626,14630,14640,110,59,1,731,97,118,101,5,242,1,59,14638,1,242,59,1,10689,4,2,98,109,14649,14654,97,114,59,1,10677,59,1,937,110,116,59,1,8750,4,4,97,99,105,116,14672,14677,14693,14698,114,114,59,1,8634,4,2,105,114,14683,14687,114,59,1,10686,111,115,115,59,1,10683,110,101,59,1,8254,59,1,10688,4,3,97,101,105,14709,14714,14719,99,114,59,1,333,103,97,59,1,969,4,3,99,100,110,14727,14733,14736,114,111,110,59,1,959,59,1,10678,117,115,59,1,8854,112,102,59,3,55349,56672,4,3,97,101,108,14755,14759,14764,114,59,1,10679,114,112,59,1,10681,117,115,59,1,8853,4,7,59,97,100,105,111,115,118,14785,14787,14792,14831,14837,14841,14848,1,8744,114,114,59,1,8635,4,4,59,101,102,109,14802,14804,14817,14824,1,10845,114,4,2,59,111,14811,14813,1,8500,102,59,1,8500,5,170,1,59,14822,1,170,5,186,1,59,14829,1,186,103,111,102,59,1,8886,114,59,1,10838,108,111,112,101,59,1,10839,59,1,10843,4,3,99,108,111,14859,14863,14873,114,59,1,8500,97,115,104,5,248,1,59,14871,1,248,108,59,1,8856,105,4,2,108,109,14884,14893,100,101,5,245,1,59,14891,1,245,101,115,4,2,59,97,14901,14903,1,8855,115,59,1,10806,109,108,5,246,1,59,14914,1,246,98,97,114,59,1,9021,4,12,97,99,101,102,104,105,108,109,111,114,115,117,14948,14992,14996,15033,15038,15068,15090,15189,15192,15222,15427,15441,114,4,4,59,97,115,116,14959,14961,14976,14989,1,8741,5,182,2,59,108,14968,14970,1,182,108,101,108,59,1,8741,4,2,105,108,14982,14986,109,59,1,10995,59,1,11005,59,1,8706,121,59,1,1087,114,4,5,99,105,109,112,116,15009,15014,15019,15024,15027,110,116,59,1,37,111,100,59,1,46,105,108,59,1,8240,59,1,8869,101,110,107,59,1,8241,114,59,3,55349,56621,4,3,105,109,111,15046,15057,15063,4,2,59,118,15052,15054,1,966,59,1,981,109,97,116,59,1,8499,110,101,59,1,9742,4,3,59,116,118,15076,15078,15087,1,960,99,104,102,111,114,107,59,1,8916,59,1,982,4,2,97,117,15096,15119,110,4,2,99,107,15103,15115,107,4,2,59,104,15110,15112,1,8463,59,1,8462,118,59,1,8463,115,4,9,59,97,98,99,100,101,109,115,116,15140,15142,15148,15151,15156,15168,15171,15179,15184,1,43,99,105,114,59,1,10787,59,1,8862,105,114,59,1,10786,4,2,111,117,15162,15165,59,1,8724,59,1,10789,59,1,10866,110,5,177,1,59,15177,1,177,105,109,59,1,10790,119,111,59,1,10791,59,1,177,4,3,105,112,117,15200,15208,15213,110,116,105,110,116,59,1,10773,102,59,3,55349,56673,110,100,5,163,1,59,15220,1,163,4,10,59,69,97,99,101,105,110,111,115,117,15244,15246,15249,15253,15258,15334,15347,15367,15416,15421,1,8826,59,1,10931,112,59,1,10935,117,101,59,1,8828,4,2,59,99,15264,15266,1,10927,4,6,59,97,99,101,110,115,15280,15282,15290,15299,15303,15329,1,8826,112,112,114,111,120,59,1,10935,117,114,108,121,101,113,59,1,8828,113,59,1,10927,4,3,97,101,115,15311,15319,15324,112,112,114,111,120,59,1,10937,113,113,59,1,10933,105,109,59,1,8936,105,109,59,1,8830,109,101,4,2,59,115,15342,15344,1,8242,59,1,8473,4,3,69,97,115,15355,15358,15362,59,1,10933,112,59,1,10937,105,109,59,1,8936,4,3,100,102,112,15375,15378,15404,59,1,8719,4,3,97,108,115,15386,15392,15398,108,97,114,59,1,9006,105,110,101,59,1,8978,117,114,102,59,1,8979,4,2,59,116,15410,15412,1,8733,111,59,1,8733,105,109,59,1,8830,114,101,108,59,1,8880,4,2,99,105,15433,15438,114,59,3,55349,56517,59,1,968,110,99,115,112,59,1,8200,4,6,102,105,111,112,115,117,15462,15467,15472,15478,15485,15491,114,59,3,55349,56622,110,116,59,1,10764,112,102,59,3,55349,56674,114,105,109,101,59,1,8279,99,114,59,3,55349,56518,4,3,97,101,111,15499,15520,15534,116,4,2,101,105,15506,15515,114,110,105,111,110,115,59,1,8461,110,116,59,1,10774,115,116,4,2,59,101,15528,15530,1,63,113,59,1,8799,116,5,34,1,59,15540,1,34,4,21,65,66,72,97,98,99,100,101,102,104,105,108,109,110,111,112,114,115,116,117,120,15586,15609,15615,15620,15796,15855,15893,15931,15977,16001,16039,16183,16204,16222,16228,16285,16312,16318,16363,16408,16416,4,3,97,114,116,15594,15599,15603,114,114,59,1,8667,114,59,1,8658,97,105,108,59,1,10524,97,114,114,59,1,10511,97,114,59,1,10596,4,7,99,100,101,110,113,114,116,15636,15651,15656,15664,15687,15696,15770,4,2,101,117,15642,15646,59,3,8765,817,116,101,59,1,341,105,99,59,1,8730,109,112,116,121,118,59,1,10675,103,4,4,59,100,101,108,15675,15677,15680,15683,1,10217,59,1,10642,59,1,10661,101,59,1,10217,117,111,5,187,1,59,15694,1,187,114,4,11,59,97,98,99,102,104,108,112,115,116,119,15721,15723,15727,15739,15742,15746,15750,15754,15758,15763,15767,1,8594,112,59,1,10613,4,2,59,102,15733,15735,1,8677,115,59,1,10528,59,1,10547,115,59,1,10526,107,59,1,8618,112,59,1,8620,108,59,1,10565,105,109,59,1,10612,108,59,1,8611,59,1,8605,4,2,97,105,15776,15781,105,108,59,1,10522,111,4,2,59,110,15788,15790,1,8758,97,108,115,59,1,8474,4,3,97,98,114,15804,15809,15814,114,114,59,1,10509,114,107,59,1,10099,4,2,97,107,15820,15833,99,4,2,101,107,15827,15830,59,1,125,59,1,93,4,2,101,115,15839,15842,59,1,10636,108,4,2,100,117,15849,15852,59,1,10638,59,1,10640,4,4,97,101,117,121,15865,15871,15886,15890,114,111,110,59,1,345,4,2,100,105,15877,15882,105,108,59,1,343,108,59,1,8969,98,59,1,125,59,1,1088,4,4,99,108,113,115,15903,15907,15914,15927,97,59,1,10551,100,104,97,114,59,1,10601,117,111,4,2,59,114,15922,15924,1,8221,59,1,8221,104,59,1,8627,4,3,97,99,103,15939,15966,15970,108,4,4,59,105,112,115,15950,15952,15957,15963,1,8476,110,101,59,1,8475,97,114,116,59,1,8476,59,1,8477,116,59,1,9645,5,174,1,59,15975,1,174,4,3,105,108,114,15985,15991,15997,115,104,116,59,1,10621,111,111,114,59,1,8971,59,3,55349,56623,4,2,97,111,16007,16028,114,4,2,100,117,16014,16017,59,1,8641,4,2,59,108,16023,16025,1,8640,59,1,10604,4,2,59,118,16034,16036,1,961,59,1,1009,4,3,103,110,115,16047,16167,16171,104,116,4,6,97,104,108,114,115,116,16063,16081,16103,16130,16143,16155,114,114,111,119,4,2,59,116,16073,16075,1,8594,97,105,108,59,1,8611,97,114,112,111,111,110,4,2,100,117,16093,16099,111,119,110,59,1,8641,112,59,1,8640,101,102,116,4,2,97,104,16112,16120,114,114,111,119,115,59,1,8644,97,114,112,111,111,110,115,59,1,8652,105,103,104,116,97,114,114,111,119,115,59,1,8649,113,117,105,103,97,114,114,111,119,59,1,8605,104,114,101,101,116,105,109,101,115,59,1,8908,103,59,1,730,105,110,103,100,111,116,115,101,113,59,1,8787,4,3,97,104,109,16191,16196,16201,114,114,59,1,8644,97,114,59,1,8652,59,1,8207,111,117,115,116,4,2,59,97,16214,16216,1,9137,99,104,101,59,1,9137,109,105,100,59,1,10990,4,4,97,98,112,116,16238,16252,16257,16278,4,2,110,114,16244,16248,103,59,1,10221,114,59,1,8702,114,107,59,1,10215,4,3,97,102,108,16265,16269,16273,114,59,1,10630,59,3,55349,56675,117,115,59,1,10798,105,109,101,115,59,1,10805,4,2,97,112,16291,16304,114,4,2,59,103,16298,16300,1,41,116,59,1,10644,111,108,105,110,116,59,1,10770,97,114,114,59,1,8649,4,4,97,99,104,113,16328,16334,16339,16342,113,117,111,59,1,8250,114,59,3,55349,56519,59,1,8625,4,2,98,117,16348,16351,59,1,93,111,4,2,59,114,16358,16360,1,8217,59,1,8217,4,3,104,105,114,16371,16377,16383,114,101,101,59,1,8908,109,101,115,59,1,8906,105,4,4,59,101,102,108,16394,16396,16399,16402,1,9657,59,1,8885,59,1,9656,116,114,105,59,1,10702,108,117,104,97,114,59,1,10600,59,1,8478,4,19,97,98,99,100,101,102,104,105,108,109,111,112,113,114,115,116,117,119,122,16459,16466,16472,16572,16590,16672,16687,16746,16844,16850,16924,16963,16988,17115,17121,17154,17206,17614,17656,99,117,116,101,59,1,347,113,117,111,59,1,8218,4,10,59,69,97,99,101,105,110,112,115,121,16494,16496,16499,16513,16518,16531,16536,16556,16564,16569,1,8827,59,1,10932,4,2,112,114,16505,16508,59,1,10936,111,110,59,1,353,117,101,59,1,8829,4,2,59,100,16524,16526,1,10928,105,108,59,1,351,114,99,59,1,349,4,3,69,97,115,16544,16547,16551,59,1,10934,112,59,1,10938,105,109,59,1,8937,111,108,105,110,116,59,1,10771,105,109,59,1,8831,59,1,1089,111,116,4,3,59,98,101,16582,16584,16587,1,8901,59,1,8865,59,1,10854,4,7,65,97,99,109,115,116,120,16606,16611,16634,16642,16646,16652,16668,114,114,59,1,8664,114,4,2,104,114,16618,16622,107,59,1,10533,4,2,59,111,16628,16630,1,8600,119,59,1,8600,116,5,167,1,59,16640,1,167,105,59,1,59,119,97,114,59,1,10537,109,4,2,105,110,16659,16665,110,117,115,59,1,8726,59,1,8726,116,59,1,10038,114,4,2,59,111,16679,16682,3,55349,56624,119,110,59,1,8994,4,4,97,99,111,121,16697,16702,16716,16739,114,112,59,1,9839,4,2,104,121,16708,16713,99,121,59,1,1097,59,1,1096,114,116,4,2,109,112,16724,16729,105,100,59,1,8739,97,114,97,108,108,101,108,59,1,8741,5,173,1,59,16744,1,173,4,2,103,109,16752,16770,109,97,4,3,59,102,118,16762,16764,16767,1,963,59,1,962,59,1,962,4,8,59,100,101,103,108,110,112,114,16788,16790,16795,16806,16817,16828,16832,16838,1,8764,111,116,59,1,10858,4,2,59,113,16801,16803,1,8771,59,1,8771,4,2,59,69,16812,16814,1,10910,59,1,10912,4,2,59,69,16823,16825,1,10909,59,1,10911,101,59,1,8774,108,117,115,59,1,10788,97,114,114,59,1,10610,97,114,114,59,1,8592,4,4,97,101,105,116,16860,16883,16891,16904,4,2,108,115,16866,16878,108,115,101,116,109,105,110,117,115,59,1,8726,104,112,59,1,10803,112,97,114,115,108,59,1,10724,4,2,100,108,16897,16900,59,1,8739,101,59,1,8995,4,2,59,101,16910,16912,1,10922,4,2,59,115,16918,16920,1,10924,59,3,10924,65024,4,3,102,108,112,16932,16938,16958,116,99,121,59,1,1100,4,2,59,98,16944,16946,1,47,4,2,59,97,16952,16954,1,10692,114,59,1,9023,102,59,3,55349,56676,97,4,2,100,114,16970,16985,101,115,4,2,59,117,16978,16980,1,9824,105,116,59,1,9824,59,1,8741,4,3,99,115,117,16996,17028,17089,4,2,97,117,17002,17015,112,4,2,59,115,17009,17011,1,8851,59,3,8851,65024,112,4,2,59,115,17022,17024,1,8852,59,3,8852,65024,117,4,2,98,112,17035,17062,4,3,59,101,115,17043,17045,17048,1,8847,59,1,8849,101,116,4,2,59,101,17056,17058,1,8847,113,59,1,8849,4,3,59,101,115,17070,17072,17075,1,8848,59,1,8850,101,116,4,2,59,101,17083,17085,1,8848,113,59,1,8850,4,3,59,97,102,17097,17099,17112,1,9633,114,4,2,101,102,17106,17109,59,1,9633,59,1,9642,59,1,9642,97,114,114,59,1,8594,4,4,99,101,109,116,17131,17136,17142,17148,114,59,3,55349,56520,116,109,110,59,1,8726,105,108,101,59,1,8995,97,114,102,59,1,8902,4,2,97,114,17160,17172,114,4,2,59,102,17167,17169,1,9734,59,1,9733,4,2,97,110,17178,17202,105,103,104,116,4,2,101,112,17188,17197,112,115,105,108,111,110,59,1,1013,104,105,59,1,981,115,59,1,175,4,5,98,99,109,110,112,17218,17351,17420,17423,17427,4,9,59,69,100,101,109,110,112,114,115,17238,17240,17243,17248,17261,17267,17279,17285,17291,1,8834,59,1,10949,111,116,59,1,10941,4,2,59,100,17254,17256,1,8838,111,116,59,1,10947,117,108,116,59,1,10945,4,2,69,101,17273,17276,59,1,10955,59,1,8842,108,117,115,59,1,10943,97,114,114,59,1,10617,4,3,101,105,117,17299,17335,17339,116,4,3,59,101,110,17308,17310,17322,1,8834,113,4,2,59,113,17317,17319,1,8838,59,1,10949,101,113,4,2,59,113,17330,17332,1,8842,59,1,10955,109,59,1,10951,4,2,98,112,17345,17348,59,1,10965,59,1,10963,99,4,6,59,97,99,101,110,115,17366,17368,17376,17385,17389,17415,1,8827,112,112,114,111,120,59,1,10936,117,114,108,121,101,113,59,1,8829,113,59,1,10928,4,3,97,101,115,17397,17405,17410,112,112,114,111,120,59,1,10938,113,113,59,1,10934,105,109,59,1,8937,105,109,59,1,8831,59,1,8721,103,59,1,9834,4,13,49,50,51,59,69,100,101,104,108,109,110,112,115,17455,17462,17469,17476,17478,17481,17496,17509,17524,17530,17536,17548,17554,5,185,1,59,17460,1,185,5,178,1,59,17467,1,178,5,179,1,59,17474,1,179,1,8835,59,1,10950,4,2,111,115,17487,17491,116,59,1,10942,117,98,59,1,10968,4,2,59,100,17502,17504,1,8839,111,116,59,1,10948,115,4,2,111,117,17516,17520,108,59,1,10185,98,59,1,10967,97,114,114,59,1,10619,117,108,116,59,1,10946,4,2,69,101,17542,17545,59,1,10956,59,1,8843,108,117,115,59,1,10944,4,3,101,105,117,17562,17598,17602,116,4,3,59,101,110,17571,17573,17585,1,8835,113,4,2,59,113,17580,17582,1,8839,59,1,10950,101,113,4,2,59,113,17593,17595,1,8843,59,1,10956,109,59,1,10952,4,2,98,112,17608,17611,59,1,10964,59,1,10966,4,3,65,97,110,17622,17627,17650,114,114,59,1,8665,114,4,2,104,114,17634,17638,107,59,1,10534,4,2,59,111,17644,17646,1,8601,119,59,1,8601,119,97,114,59,1,10538,108,105,103,5,223,1,59,17664,1,223,4,13,97,98,99,100,101,102,104,105,111,112,114,115,119,17694,17709,17714,17737,17742,17749,17754,17860,17905,17957,17964,18090,18122,4,2,114,117,17700,17706,103,101,116,59,1,8982,59,1,964,114,107,59,1,9140,4,3,97,101,121,17722,17728,17734,114,111,110,59,1,357,100,105,108,59,1,355,59,1,1090,111,116,59,1,8411,108,114,101,99,59,1,8981,114,59,3,55349,56625,4,4,101,105,107,111,17764,17805,17836,17851,4,2,114,116,17770,17786,101,4,2,52,102,17777,17780,59,1,8756,111,114,101,59,1,8756,97,4,3,59,115,118,17795,17797,17802,1,952,121,109,59,1,977,59,1,977,4,2,99,110,17811,17831,107,4,2,97,115,17818,17826,112,112,114,111,120,59,1,8776,105,109,59,1,8764,115,112,59,1,8201,4,2,97,115,17842,17846,112,59,1,8776,105,109,59,1,8764,114,110,5,254,1,59,17858,1,254,4,3,108,109,110,17868,17873,17901,100,101,59,1,732,101,115,5,215,3,59,98,100,17884,17886,17898,1,215,4,2,59,97,17892,17894,1,8864,114,59,1,10801,59,1,10800,116,59,1,8749,4,3,101,112,115,17913,17917,17953,97,59,1,10536,4,4,59,98,99,102,17927,17929,17934,17939,1,8868,111,116,59,1,9014,105,114,59,1,10993,4,2,59,111,17945,17948,3,55349,56677,114,107,59,1,10970,97,59,1,10537,114,105,109,101,59,1,8244,4,3,97,105,112,17972,17977,18082,100,101,59,1,8482,4,7,97,100,101,109,112,115,116,17993,18051,18056,18059,18066,18072,18076,110,103,108,101,4,5,59,100,108,113,114,18009,18011,18017,18032,18035,1,9653,111,119,110,59,1,9663,101,102,116,4,2,59,101,18026,18028,1,9667,113,59,1,8884,59,1,8796,105,103,104,116,4,2,59,101,18045,18047,1,9657,113,59,1,8885,111,116,59,1,9708,59,1,8796,105,110,117,115,59,1,10810,108,117,115,59,1,10809,98,59,1,10701,105,109,101,59,1,10811,101,122,105,117,109,59,1,9186,4,3,99,104,116,18098,18111,18116,4,2,114,121,18104,18108,59,3,55349,56521,59,1,1094,99,121,59,1,1115,114,111,107,59,1,359,4,2,105,111,18128,18133,120,116,59,1,8812,104,101,97,100,4,2,108,114,18143,18154,101,102,116,97,114,114,111,119,59,1,8606,105,103,104,116,97,114,114,111,119,59,1,8608,4,18,65,72,97,98,99,100,102,103,104,108,109,111,112,114,115,116,117,119,18204,18209,18214,18234,18250,18268,18292,18308,18319,18343,18379,18397,18413,18504,18547,18553,18584,18603,114,114,59,1,8657,97,114,59,1,10595,4,2,99,114,18220,18230,117,116,101,5,250,1,59,18228,1,250,114,59,1,8593,114,4,2,99,101,18241,18245,121,59,1,1118,118,101,59,1,365,4,2,105,121,18256,18265,114,99,5,251,1,59,18263,1,251,59,1,1091,4,3,97,98,104,18276,18281,18287,114,114,59,1,8645,108,97,99,59,1,369,97,114,59,1,10606,4,2,105,114,18298,18304,115,104,116,59,1,10622,59,3,55349,56626,114,97,118,101,5,249,1,59,18317,1,249,4,2,97,98,18325,18338,114,4,2,108,114,18332,18335,59,1,8639,59,1,8638,108,107,59,1,9600,4,2,99,116,18349,18374,4,2,111,114,18355,18369,114,110,4,2,59,101,18363,18365,1,8988,114,59,1,8988,111,112,59,1,8975,114,105,59,1,9720,4,2,97,108,18385,18390,99,114,59,1,363,5,168,1,59,18395,1,168,4,2,103,112,18403,18408,111,110,59,1,371,102,59,3,55349,56678,4,6,97,100,104,108,115,117,18427,18434,18445,18470,18475,18494,114,114,111,119,59,1,8593,111,119,110,97,114,114,111,119,59,1,8597,97,114,112,111,111,110,4,2,108,114,18457,18463,101,102,116,59,1,8639,105,103,104,116,59,1,8638,117,115,59,1,8846,105,4,3,59,104,108,18484,18486,18489,1,965,59,1,978,111,110,59,1,965,112,97,114,114,111,119,115,59,1,8648,4,3,99,105,116,18512,18537,18542,4,2,111,114,18518,18532,114,110,4,2,59,101,18526,18528,1,8989,114,59,1,8989,111,112,59,1,8974,110,103,59,1,367,114,105,59,1,9721,99,114,59,3,55349,56522,4,3,100,105,114,18561,18566,18572,111,116,59,1,8944,108,100,101,59,1,361,105,4,2,59,102,18579,18581,1,9653,59,1,9652,4,2,97,109,18590,18595,114,114,59,1,8648,108,5,252,1,59,18601,1,252,97,110,103,108,101,59,1,10663,4,15,65,66,68,97,99,100,101,102,108,110,111,112,114,115,122,18643,18648,18661,18667,18847,18851,18857,18904,18909,18915,18931,18937,18943,18949,18996,114,114,59,1,8661,97,114,4,2,59,118,18656,18658,1,10984,59,1,10985,97,115,104,59,1,8872,4,2,110,114,18673,18679,103,114,116,59,1,10652,4,7,101,107,110,112,114,115,116,18695,18704,18711,18720,18742,18754,18810,112,115,105,108,111,110,59,1,1013,97,112,112,97,59,1,1008,111,116,104,105,110,103,59,1,8709,4,3,104,105,114,18728,18732,18735,105,59,1,981,59,1,982,111,112,116,111,59,1,8733,4,2,59,104,18748,18750,1,8597,111,59,1,1009,4,2,105,117,18760,18766,103,109,97,59,1,962,4,2,98,112,18772,18791,115,101,116,110,101,113,4,2,59,113,18784,18787,3,8842,65024,59,3,10955,65024,115,101,116,110,101,113,4,2,59,113,18803,18806,3,8843,65024,59,3,10956,65024,4,2,104,114,18816,18822,101,116,97,59,1,977,105,97,110,103,108,101,4,2,108,114,18834,18840,101,102,116,59,1,8882,105,103,104,116,59,1,8883,121,59,1,1074,97,115,104,59,1,8866,4,3,101,108,114,18865,18884,18890,4,3,59,98,101,18873,18875,18880,1,8744,97,114,59,1,8891,113,59,1,8794,108,105,112,59,1,8942,4,2,98,116,18896,18901,97,114,59,1,124,59,1,124,114,59,3,55349,56627,116,114,105,59,1,8882,115,117,4,2,98,112,18923,18927,59,3,8834,8402,59,3,8835,8402,112,102,59,3,55349,56679,114,111,112,59,1,8733,116,114,105,59,1,8883,4,2,99,117,18955,18960,114,59,3,55349,56523,4,2,98,112,18966,18981,110,4,2,69,101,18973,18977,59,3,10955,65024,59,3,8842,65024,110,4,2,69,101,18988,18992,59,3,10956,65024,59,3,8843,65024,105,103,122,97,103,59,1,10650,4,7,99,101,102,111,112,114,115,19020,19026,19061,19066,19072,19075,19089,105,114,99,59,1,373,4,2,100,105,19032,19055,4,2,98,103,19038,19043,97,114,59,1,10847,101,4,2,59,113,19050,19052,1,8743,59,1,8793,101,114,112,59,1,8472,114,59,3,55349,56628,112,102,59,3,55349,56680,59,1,8472,4,2,59,101,19081,19083,1,8768,97,116,104,59,1,8768,99,114,59,3,55349,56524,4,14,99,100,102,104,105,108,109,110,111,114,115,117,118,119,19125,19146,19152,19157,19173,19176,19192,19197,19202,19236,19252,19269,19286,19291,4,3,97,105,117,19133,19137,19142,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,116,114,105,59,1,9661,114,59,3,55349,56629,4,2,65,97,19163,19168,114,114,59,1,10234,114,114,59,1,10231,59,1,958,4,2,65,97,19182,19187,114,114,59,1,10232,114,114,59,1,10229,97,112,59,1,10236,105,115,59,1,8955,4,3,100,112,116,19210,19215,19230,111,116,59,1,10752,4,2,102,108,19221,19225,59,3,55349,56681,117,115,59,1,10753,105,109,101,59,1,10754,4,2,65,97,19242,19247,114,114,59,1,10233,114,114,59,1,10230,4,2,99,113,19258,19263,114,59,3,55349,56525,99,117,112,59,1,10758,4,2,112,116,19275,19281,108,117,115,59,1,10756,114,105,59,1,9651,101,101,59,1,8897,101,100,103,101,59,1,8896,4,8,97,99,101,102,105,111,115,117,19316,19335,19349,19357,19362,19367,19373,19379,99,4,2,117,121,19323,19332,116,101,5,253,1,59,19330,1,253,59,1,1103,4,2,105,121,19341,19346,114,99,59,1,375,59,1,1099,110,5,165,1,59,19355,1,165,114,59,3,55349,56630,99,121,59,1,1111,112,102,59,3,55349,56682,99,114,59,3,55349,56526,4,2,99,109,19385,19389,121,59,1,1102,108,5,255,1,59,19395,1,255,4,10,97,99,100,101,102,104,105,111,115,119,19419,19426,19441,19446,19462,19467,19472,19480,19486,19492,99,117,116,101,59,1,378,4,2,97,121,19432,19438,114,111,110,59,1,382,59,1,1079,111,116,59,1,380,4,2,101,116,19452,19458,116,114,102,59,1,8488,97,59,1,950,114,59,3,55349,56631,99,121,59,1,1078,103,114,97,114,114,59,1,8669,112,102,59,3,55349,56683,99,114,59,3,55349,56527,4,2,106,110,19498,19501,59,1,8205,106,59,1,8204]);", "'use strict';\n\nconst Preprocessor = require('./preprocessor');\nconst unicode = require('../common/unicode');\nconst neTree = require('./named-entity-data');\nconst ERR = require('../common/error-codes');\n\n//Aliases\nconst $ = unicode.CODE_POINTS;\nconst $$ = unicode.CODE_POINT_SEQUENCES;\n\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = {\n    0x80: 0x20ac,\n    0x82: 0x201a,\n    0x83: 0x0192,\n    0x84: 0x201e,\n    0x85: 0x2026,\n    0x86: 0x2020,\n    0x87: 0x2021,\n    0x88: 0x02c6,\n    0x89: 0x2030,\n    0x8a: 0x0160,\n    0x8b: 0x2039,\n    0x8c: 0x0152,\n    0x8e: 0x017d,\n    0x91: 0x2018,\n    0x92: 0x2019,\n    0x93: 0x201c,\n    0x94: 0x201d,\n    0x95: 0x2022,\n    0x96: 0x2013,\n    0x97: 0x2014,\n    0x98: 0x02dc,\n    0x99: 0x2122,\n    0x9a: 0x0161,\n    0x9b: 0x203a,\n    0x9c: 0x0153,\n    0x9e: 0x017e,\n    0x9f: 0x0178\n};\n\n// Named entity tree flags\nconst HAS_DATA_FLAG = 1 << 0;\nconst DATA_DUPLET_FLAG = 1 << 1;\nconst HAS_BRANCHES_FLAG = 1 << 2;\nconst MAX_BRANCH_MARKER_VALUE = HAS_DATA_FLAG | DATA_DUPLET_FLAG | HAS_BRANCHES_FLAG;\n\n//States\nconst DATA_STATE = 'DATA_STATE';\nconst RCDATA_STATE = 'RCDATA_STATE';\nconst RAWTEXT_STATE = 'RAWTEXT_STATE';\nconst SCRIPT_DATA_STATE = 'SCRIPT_DATA_STATE';\nconst PLAINTEXT_STATE = 'PLAINTEXT_STATE';\nconst TAG_OPEN_STATE = 'TAG_OPEN_STATE';\nconst END_TAG_OPEN_STATE = 'END_TAG_OPEN_STATE';\nconst TAG_NAME_STATE = 'TAG_NAME_STATE';\nconst RCDATA_LESS_THAN_SIGN_STATE = 'RCDATA_LESS_THAN_SIGN_STATE';\nconst RCDATA_END_TAG_OPEN_STATE = 'RCDATA_END_TAG_OPEN_STATE';\nconst RCDATA_END_TAG_NAME_STATE = 'RCDATA_END_TAG_NAME_STATE';\nconst RAWTEXT_LESS_THAN_SIGN_STATE = 'RAWTEXT_LESS_THAN_SIGN_STATE';\nconst RAWTEXT_END_TAG_OPEN_STATE = 'RAWTEXT_END_TAG_OPEN_STATE';\nconst RAWTEXT_END_TAG_NAME_STATE = 'RAWTEXT_END_TAG_NAME_STATE';\nconst SCRIPT_DATA_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_LESS_THAN_SIGN_STATE';\nconst SCRIPT_DATA_END_TAG_OPEN_STATE = 'SCRIPT_DATA_END_TAG_OPEN_STATE';\nconst SCRIPT_DATA_END_TAG_NAME_STATE = 'SCRIPT_DATA_END_TAG_NAME_STATE';\nconst SCRIPT_DATA_ESCAPE_START_STATE = 'SCRIPT_DATA_ESCAPE_START_STATE';\nconst SCRIPT_DATA_ESCAPE_START_DASH_STATE = 'SCRIPT_DATA_ESCAPE_START_DASH_STATE';\nconst SCRIPT_DATA_ESCAPED_STATE = 'SCRIPT_DATA_ESCAPED_STATE';\nconst SCRIPT_DATA_ESCAPED_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_STATE';\nconst SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_DASH_STATE';\nconst SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE';\nconst SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE';\nconst SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPED_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE';\nconst SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE';\nconst BEFORE_ATTRIBUTE_NAME_STATE = 'BEFORE_ATTRIBUTE_NAME_STATE';\nconst ATTRIBUTE_NAME_STATE = 'ATTRIBUTE_NAME_STATE';\nconst AFTER_ATTRIBUTE_NAME_STATE = 'AFTER_ATTRIBUTE_NAME_STATE';\nconst BEFORE_ATTRIBUTE_VALUE_STATE = 'BEFORE_ATTRIBUTE_VALUE_STATE';\nconst ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE';\nconst ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE';\nconst ATTRIBUTE_VALUE_UNQUOTED_STATE = 'ATTRIBUTE_VALUE_UNQUOTED_STATE';\nconst AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = 'AFTER_ATTRIBUTE_VALUE_QUOTED_STATE';\nconst SELF_CLOSING_START_TAG_STATE = 'SELF_CLOSING_START_TAG_STATE';\nconst BOGUS_COMMENT_STATE = 'BOGUS_COMMENT_STATE';\nconst MARKUP_DECLARATION_OPEN_STATE = 'MARKUP_DECLARATION_OPEN_STATE';\nconst COMMENT_START_STATE = 'COMMENT_START_STATE';\nconst COMMENT_START_DASH_STATE = 'COMMENT_START_DASH_STATE';\nconst COMMENT_STATE = 'COMMENT_STATE';\nconst COMMENT_LESS_THAN_SIGN_STATE = 'COMMENT_LESS_THAN_SIGN_STATE';\nconst COMMENT_LESS_THAN_SIGN_BANG_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_STATE';\nconst COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE';\nconst COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE';\nconst COMMENT_END_DASH_STATE = 'COMMENT_END_DASH_STATE';\nconst COMMENT_END_STATE = 'COMMENT_END_STATE';\nconst COMMENT_END_BANG_STATE = 'COMMENT_END_BANG_STATE';\nconst DOCTYPE_STATE = 'DOCTYPE_STATE';\nconst BEFORE_DOCTYPE_NAME_STATE = 'BEFORE_DOCTYPE_NAME_STATE';\nconst DOCTYPE_NAME_STATE = 'DOCTYPE_NAME_STATE';\nconst AFTER_DOCTYPE_NAME_STATE = 'AFTER_DOCTYPE_NAME_STATE';\nconst AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE = 'AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE';\nconst BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE';\nconst DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE';\nconst DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE';\nconst AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE';\nconst BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = 'BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE';\nconst AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE = 'AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE';\nconst BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE';\nconst DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE';\nconst DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE';\nconst AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE';\nconst BOGUS_DOCTYPE_STATE = 'BOGUS_DOCTYPE_STATE';\nconst CDATA_SECTION_STATE = 'CDATA_SECTION_STATE';\nconst CDATA_SECTION_BRACKET_STATE = 'CDATA_SECTION_BRACKET_STATE';\nconst CDATA_SECTION_END_STATE = 'CDATA_SECTION_END_STATE';\nconst CHARACTER_REFERENCE_STATE = 'CHARACTER_REFERENCE_STATE';\nconst NAMED_CHARACTER_REFERENCE_STATE = 'NAMED_CHARACTER_REFERENCE_STATE';\nconst AMBIGUOUS_AMPERSAND_STATE = 'AMBIGUOS_AMPERSAND_STATE';\nconst NUMERIC_CHARACTER_REFERENCE_STATE = 'NUMERIC_CHARACTER_REFERENCE_STATE';\nconst HEXADEMICAL_CHARACTER_REFERENCE_START_STATE = 'HEXADEMICAL_CHARACTER_REFERENCE_START_STATE';\nconst DECIMAL_CHARACTER_REFERENCE_START_STATE = 'DECIMAL_CHARACTER_REFERENCE_START_STATE';\nconst HEXADEMICAL_CHARACTER_REFERENCE_STATE = 'HEXADEMICAL_CHARACTER_REFERENCE_STATE';\nconst DECIMAL_CHARACTER_REFERENCE_STATE = 'DECIMAL_CHARACTER_REFERENCE_STATE';\nconst NUMERIC_CHARACTER_REFERENCE_END_STATE = 'NUMERIC_CHARACTER_REFERENCE_END_STATE';\n\n//Utils\n\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\n\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\n\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\n\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\n\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\n\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\n\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\n\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\n\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\n\nfunction toAsciiLowerCodePoint(cp) {\n    return cp + 0x0020;\n}\n\n//NOTE: String.fromCharCode() function can handle only characters from BMP subset.\n//So, we need to workaround this manually.\n//(see: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/fromCharCode#Getting_it_to_work_with_higher_values)\nfunction toChar(cp) {\n    if (cp <= 0xffff) {\n        return String.fromCharCode(cp);\n    }\n\n    cp -= 0x10000;\n    return String.fromCharCode(((cp >>> 10) & 0x3ff) | 0xd800) + String.fromCharCode(0xdc00 | (cp & 0x3ff));\n}\n\nfunction toAsciiLowerChar(cp) {\n    return String.fromCharCode(toAsciiLowerCodePoint(cp));\n}\n\nfunction findNamedEntityTreeBranch(nodeIx, cp) {\n    const branchCount = neTree[++nodeIx];\n    let lo = ++nodeIx;\n    let hi = lo + branchCount - 1;\n\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midCp = neTree[mid];\n\n        if (midCp < cp) {\n            lo = mid + 1;\n        } else if (midCp > cp) {\n            hi = mid - 1;\n        } else {\n            return neTree[mid + branchCount];\n        }\n    }\n\n    return -1;\n}\n\n//Tokenizer\nclass Tokenizer {\n    constructor() {\n        this.preprocessor = new Preprocessor();\n\n        this.tokenQueue = [];\n\n        this.allowCDATA = false;\n\n        this.state = DATA_STATE;\n        this.returnState = '';\n\n        this.charRefCode = -1;\n        this.tempBuff = [];\n        this.lastStartTagName = '';\n\n        this.consumedAfterSnapshot = -1;\n        this.active = false;\n\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = null;\n    }\n\n    //Errors\n    _err() {\n        // NOTE: err reporting is noop by default. Enabled by mixin.\n    }\n\n    _errOnNextCodePoint(err) {\n        this._consume();\n        this._err(err);\n        this._unconsume();\n    }\n\n    //API\n    getNextToken() {\n        while (!this.tokenQueue.length && this.active) {\n            this.consumedAfterSnapshot = 0;\n\n            const cp = this._consume();\n\n            if (!this._ensureHibernation()) {\n                this[this.state](cp);\n            }\n        }\n\n        return this.tokenQueue.shift();\n    }\n\n    write(chunk, isLastChunk) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n    }\n\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n    }\n\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--) {\n                this.preprocessor.retreat();\n            }\n\n            this.active = false;\n            this.tokenQueue.push({ type: Tokenizer.HIBERNATION_TOKEN });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n\n    _unconsume() {\n        this.consumedAfterSnapshot--;\n        this.preprocessor.retreat();\n    }\n\n    _reconsumeInState(state) {\n        this.state = state;\n        this._unconsume();\n    }\n\n    _consumeSequenceIfMatch(pattern, startCp, caseSensitive) {\n        let consumedCount = 0;\n        let isMatch = true;\n        const patternLength = pattern.length;\n        let patternPos = 0;\n        let cp = startCp;\n        let patternCp = void 0;\n\n        for (; patternPos < patternLength; patternPos++) {\n            if (patternPos > 0) {\n                cp = this._consume();\n                consumedCount++;\n            }\n\n            if (cp === $.EOF) {\n                isMatch = false;\n                break;\n            }\n\n            patternCp = pattern[patternPos];\n\n            if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {\n                isMatch = false;\n                break;\n            }\n        }\n\n        if (!isMatch) {\n            while (consumedCount--) {\n                this._unconsume();\n            }\n        }\n\n        return isMatch;\n    }\n\n    //Temp buffer\n    _isTempBufferEqualToScriptString() {\n        if (this.tempBuff.length !== $$.SCRIPT_STRING.length) {\n            return false;\n        }\n\n        for (let i = 0; i < this.tempBuff.length; i++) {\n            if (this.tempBuff[i] !== $$.SCRIPT_STRING[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: Tokenizer.START_TAG_TOKEN,\n            tagName: '',\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: []\n        };\n    }\n\n    _createEndTagToken() {\n        this.currentToken = {\n            type: Tokenizer.END_TAG_TOKEN,\n            tagName: '',\n            selfClosing: false,\n            attrs: []\n        };\n    }\n\n    _createCommentToken() {\n        this.currentToken = {\n            type: Tokenizer.COMMENT_TOKEN,\n            data: ''\n        };\n    }\n\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: Tokenizer.DOCTYPE_TOKEN,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null\n        };\n    }\n\n    _createCharacterToken(type, ch) {\n        this.currentCharacterToken = {\n            type: type,\n            chars: ch\n        };\n    }\n\n    _createEOFToken() {\n        this.currentToken = { type: Tokenizer.EOF_TOKEN };\n    }\n\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: ''\n        };\n    }\n\n    _leaveAttrName(toState) {\n        if (Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) === null) {\n            this.currentToken.attrs.push(this.currentAttr);\n        } else {\n            this._err(ERR.duplicateAttribute);\n        }\n\n        this.state = toState;\n    }\n\n    _leaveAttrValue(toState) {\n        this.state = toState;\n    }\n\n    //Token emission\n    _emitCurrentToken() {\n        this._emitCurrentCharacterToken();\n\n        const ct = this.currentToken;\n\n        this.currentToken = null;\n\n        //NOTE: store emited start tag's tagName to determine is the following end tag token is appropriate.\n        if (ct.type === Tokenizer.START_TAG_TOKEN) {\n            this.lastStartTagName = ct.tagName;\n        } else if (ct.type === Tokenizer.END_TAG_TOKEN) {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n        }\n\n        this.tokenQueue.push(ct);\n    }\n\n    _emitCurrentCharacterToken() {\n        if (this.currentCharacterToken) {\n            this.tokenQueue.push(this.currentCharacterToken);\n            this.currentCharacterToken = null;\n        }\n    }\n\n    _emitEOFToken() {\n        this._createEOFToken();\n        this._emitCurrentToken();\n    }\n\n    //Characters emission\n\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)NULL_CHARACTER_TOKEN - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken && this.currentCharacterToken.type !== type) {\n            this._emitCurrentCharacterToken();\n        }\n\n        if (this.currentCharacterToken) {\n            this.currentCharacterToken.chars += ch;\n        } else {\n            this._createCharacterToken(type, ch);\n        }\n    }\n\n    _emitCodePoint(cp) {\n        let type = Tokenizer.CHARACTER_TOKEN;\n\n        if (isWhitespace(cp)) {\n            type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;\n        } else if (cp === $.NULL) {\n            type = Tokenizer.NULL_CHARACTER_TOKEN;\n        }\n\n        this._appendCharToCurrentCharacterToken(type, toChar(cp));\n    }\n\n    _emitSeveralCodePoints(codePoints) {\n        for (let i = 0; i < codePoints.length; i++) {\n            this._emitCodePoint(codePoints[i]);\n        }\n    }\n\n    //NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.\n    //So we can avoid additional checks here.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);\n    }\n\n    // Character reference helpers\n    _matchNamedCharacterReference(startCp) {\n        let result = null;\n        let excess = 1;\n        let i = findNamedEntityTreeBranch(0, startCp);\n\n        this.tempBuff.push(startCp);\n\n        while (i > -1) {\n            const current = neTree[i];\n            const inNode = current < MAX_BRANCH_MARKER_VALUE;\n            const nodeWithData = inNode && current & HAS_DATA_FLAG;\n\n            if (nodeWithData) {\n                //NOTE: we use greedy search, so we continue lookup at this point\n                result = current & DATA_DUPLET_FLAG ? [neTree[++i], neTree[++i]] : [neTree[++i]];\n                excess = 0;\n            }\n\n            const cp = this._consume();\n\n            this.tempBuff.push(cp);\n            excess++;\n\n            if (cp === $.EOF) {\n                break;\n            }\n\n            if (inNode) {\n                i = current & HAS_BRANCHES_FLAG ? findNamedEntityTreeBranch(i, cp) : -1;\n            } else {\n                i = cp === current ? ++i : -1;\n            }\n        }\n\n        while (excess--) {\n            this.tempBuff.pop();\n            this._unconsume();\n        }\n\n        return result;\n    }\n\n    _isCharacterReferenceInAttribute() {\n        return (\n            this.returnState === ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE ||\n            this.returnState === ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE ||\n            this.returnState === ATTRIBUTE_VALUE_UNQUOTED_STATE\n        );\n    }\n\n    _isCharacterReferenceAttributeQuirk(withSemicolon) {\n        if (!withSemicolon && this._isCharacterReferenceInAttribute()) {\n            const nextCp = this._consume();\n\n            this._unconsume();\n\n            return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n        }\n\n        return false;\n    }\n\n    _flushCodePointsConsumedAsCharacterReference() {\n        if (this._isCharacterReferenceInAttribute()) {\n            for (let i = 0; i < this.tempBuff.length; i++) {\n                this.currentAttr.value += toChar(this.tempBuff[i]);\n            }\n        } else {\n            this._emitSeveralCodePoints(this.tempBuff);\n        }\n\n        this.tempBuff = [];\n    }\n\n    // State machine\n\n    // Data state\n    //------------------------------------------------------------------\n    [DATA_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.LESS_THAN_SIGN) {\n            this.state = TAG_OPEN_STATE;\n        } else if (cp === $.AMPERSAND) {\n            this.returnState = DATA_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitCodePoint(cp);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    //  RCDATA state\n    //------------------------------------------------------------------\n    [RCDATA_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.AMPERSAND) {\n            this.returnState = RCDATA_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = RCDATA_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    [RAWTEXT_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.LESS_THAN_SIGN) {\n            this.state = RAWTEXT_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    [PLAINTEXT_STATE](cp) {\n        this.preprocessor.dropParsedChunk();\n\n        if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Tag open state\n    //------------------------------------------------------------------\n    [TAG_OPEN_STATE](cp) {\n        if (cp === $.EXCLAMATION_MARK) {\n            this.state = MARKUP_DECLARATION_OPEN_STATE;\n        } else if (cp === $.SOLIDUS) {\n            this.state = END_TAG_OPEN_STATE;\n        } else if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this._reconsumeInState(TAG_NAME_STATE);\n        } else if (cp === $.QUESTION_MARK) {\n            this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n            this._createCommentToken();\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofBeforeTagName);\n            this._emitChars('<');\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.invalidFirstCharacterOfTagName);\n            this._emitChars('<');\n            this._reconsumeInState(DATA_STATE);\n        }\n    }\n\n    // End tag open state\n    //------------------------------------------------------------------\n    [END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(TAG_NAME_STATE);\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingEndTagName);\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofBeforeTagName);\n            this._emitChars('</');\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.invalidFirstCharacterOfTagName);\n            this._createCommentToken();\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\n        }\n    }\n\n    // Tag name state\n    //------------------------------------------------------------------\n    [TAG_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        } else if (cp === $.SOLIDUS) {\n            this.state = SELF_CLOSING_START_TAG_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.tagName += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this.currentToken.tagName += toChar(cp);\n        }\n    }\n\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    [RCDATA_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = RCDATA_END_TAG_OPEN_STATE;\n        } else {\n            this._emitChars('<');\n            this._reconsumeInState(RCDATA_STATE);\n        }\n    }\n\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    [RCDATA_END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(RCDATA_END_TAG_NAME_STATE);\n        } else {\n            this._emitChars('</');\n            this._reconsumeInState(RCDATA_STATE);\n        }\n    }\n\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    [RCDATA_END_TAG_NAME_STATE](cp) {\n        if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n            this.tempBuff.push(cp);\n        } else if (isAsciiLower(cp)) {\n            this.currentToken.tagName += toChar(cp);\n            this.tempBuff.push(cp);\n        } else {\n            if (this.lastStartTagName === this.currentToken.tagName) {\n                if (isWhitespace(cp)) {\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                    return;\n                }\n\n                if (cp === $.SOLIDUS) {\n                    this.state = SELF_CLOSING_START_TAG_STATE;\n                    return;\n                }\n\n                if (cp === $.GREATER_THAN_SIGN) {\n                    this.state = DATA_STATE;\n                    this._emitCurrentToken();\n                    return;\n                }\n            }\n\n            this._emitChars('</');\n            this._emitSeveralCodePoints(this.tempBuff);\n            this._reconsumeInState(RCDATA_STATE);\n        }\n    }\n\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    [RAWTEXT_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = RAWTEXT_END_TAG_OPEN_STATE;\n        } else {\n            this._emitChars('<');\n            this._reconsumeInState(RAWTEXT_STATE);\n        }\n    }\n\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    [RAWTEXT_END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(RAWTEXT_END_TAG_NAME_STATE);\n        } else {\n            this._emitChars('</');\n            this._reconsumeInState(RAWTEXT_STATE);\n        }\n    }\n\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    [RAWTEXT_END_TAG_NAME_STATE](cp) {\n        if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n            this.tempBuff.push(cp);\n        } else if (isAsciiLower(cp)) {\n            this.currentToken.tagName += toChar(cp);\n            this.tempBuff.push(cp);\n        } else {\n            if (this.lastStartTagName === this.currentToken.tagName) {\n                if (isWhitespace(cp)) {\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                    return;\n                }\n\n                if (cp === $.SOLIDUS) {\n                    this.state = SELF_CLOSING_START_TAG_STATE;\n                    return;\n                }\n\n                if (cp === $.GREATER_THAN_SIGN) {\n                    this._emitCurrentToken();\n                    this.state = DATA_STATE;\n                    return;\n                }\n            }\n\n            this._emitChars('</');\n            this._emitSeveralCodePoints(this.tempBuff);\n            this._reconsumeInState(RAWTEXT_STATE);\n        }\n    }\n\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;\n        } else if (cp === $.EXCLAMATION_MARK) {\n            this.state = SCRIPT_DATA_ESCAPE_START_STATE;\n            this._emitChars('<!');\n        } else {\n            this._emitChars('<');\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(SCRIPT_DATA_END_TAG_NAME_STATE);\n        } else {\n            this._emitChars('</');\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_END_TAG_NAME_STATE](cp) {\n        if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n            this.tempBuff.push(cp);\n        } else if (isAsciiLower(cp)) {\n            this.currentToken.tagName += toChar(cp);\n            this.tempBuff.push(cp);\n        } else {\n            if (this.lastStartTagName === this.currentToken.tagName) {\n                if (isWhitespace(cp)) {\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                    return;\n                } else if (cp === $.SOLIDUS) {\n                    this.state = SELF_CLOSING_START_TAG_STATE;\n                    return;\n                } else if (cp === $.GREATER_THAN_SIGN) {\n                    this._emitCurrentToken();\n                    this.state = DATA_STATE;\n                    return;\n                }\n            }\n\n            this._emitChars('</');\n            this._emitSeveralCodePoints(this.tempBuff);\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data escape start state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPE_START_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;\n            this._emitChars('-');\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPE_START_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n            this._emitChars('-');\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_STATE);\n        }\n    }\n\n    // Script data escaped state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_DASH_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = SCRIPT_DATA_STATE;\n            this._emitChars('>');\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this.state = SCRIPT_DATA_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;\n        } else if (isAsciiLetter(cp)) {\n            this.tempBuff = [];\n            this._emitChars('<');\n            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE);\n        } else {\n            this._emitChars('<');\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n        }\n    }\n\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE](cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE);\n        } else {\n            this._emitChars('</');\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n        }\n    }\n\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE](cp) {\n        if (isAsciiUpper(cp)) {\n            this.currentToken.tagName += toAsciiLowerChar(cp);\n            this.tempBuff.push(cp);\n        } else if (isAsciiLower(cp)) {\n            this.currentToken.tagName += toChar(cp);\n            this.tempBuff.push(cp);\n        } else {\n            if (this.lastStartTagName === this.currentToken.tagName) {\n                if (isWhitespace(cp)) {\n                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                    return;\n                }\n\n                if (cp === $.SOLIDUS) {\n                    this.state = SELF_CLOSING_START_TAG_STATE;\n                    return;\n                }\n\n                if (cp === $.GREATER_THAN_SIGN) {\n                    this._emitCurrentToken();\n                    this.state = DATA_STATE;\n                    return;\n                }\n            }\n\n            this._emitChars('</');\n            this._emitSeveralCodePoints(this.tempBuff);\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n        }\n    }\n\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE](cp) {\n        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n            this.state = this._isTempBufferEqualToScriptString()\n                ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE\n                : SCRIPT_DATA_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        } else if (isAsciiUpper(cp)) {\n            this.tempBuff.push(toAsciiLowerCodePoint(cp));\n            this._emitCodePoint(cp);\n        } else if (isAsciiLower(cp)) {\n            this.tempBuff.push(cp);\n            this._emitCodePoint(cp);\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n        }\n    }\n\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPED_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n            this._emitChars('<');\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n            this._emitChars('<');\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this._emitChars('-');\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n            this._emitChars('<');\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = SCRIPT_DATA_STATE;\n            this._emitChars('>');\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n            this._emitChars(unicode.REPLACEMENT_CHARACTER);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInScriptHtmlCommentLikeText);\n            this._emitEOFToken();\n        } else {\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.SOLIDUS) {\n            this.tempBuff = [];\n            this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;\n            this._emitChars('/');\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n        }\n    }\n\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    [SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE](cp) {\n        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n            this.state = this._isTempBufferEqualToScriptString()\n                ? SCRIPT_DATA_ESCAPED_STATE\n                : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n            this._emitCodePoint(cp);\n        } else if (isAsciiUpper(cp)) {\n            this.tempBuff.push(toAsciiLowerCodePoint(cp));\n            this._emitCodePoint(cp);\n        } else if (isAsciiLower(cp)) {\n            this.tempBuff.push(cp);\n            this._emitCodePoint(cp);\n        } else {\n            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n        }\n    }\n\n    // Before attribute name state\n    //------------------------------------------------------------------\n    [BEFORE_ATTRIBUTE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {\n            this._reconsumeInState(AFTER_ATTRIBUTE_NAME_STATE);\n        } else if (cp === $.EQUALS_SIGN) {\n            this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n            this._createAttr('=');\n            this.state = ATTRIBUTE_NAME_STATE;\n        } else {\n            this._createAttr('');\n            this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n        }\n    }\n\n    // Attribute name state\n    //------------------------------------------------------------------\n    [ATTRIBUTE_NAME_STATE](cp) {\n        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {\n            this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);\n            this._unconsume();\n        } else if (cp === $.EQUALS_SIGN) {\n            this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);\n        } else if (isAsciiUpper(cp)) {\n            this.currentAttr.name += toAsciiLowerChar(cp);\n        } else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN) {\n            this._err(ERR.unexpectedCharacterInAttributeName);\n            this.currentAttr.name += toChar(cp);\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentAttr.name += unicode.REPLACEMENT_CHARACTER;\n        } else {\n            this.currentAttr.name += toChar(cp);\n        }\n    }\n\n    // After attribute name state\n    //------------------------------------------------------------------\n    [AFTER_ATTRIBUTE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.SOLIDUS) {\n            this.state = SELF_CLOSING_START_TAG_STATE;\n        } else if (cp === $.EQUALS_SIGN) {\n            this.state = BEFORE_ATTRIBUTE_VALUE_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this._createAttr('');\n            this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n        }\n    }\n\n    // Before attribute value state\n    //------------------------------------------------------------------\n    [BEFORE_ATTRIBUTE_VALUE_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.QUOTATION_MARK) {\n            this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingAttributeValue);\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else {\n            this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);\n        }\n    }\n\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    [ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE](cp) {\n        if (cp === $.QUOTATION_MARK) {\n            this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\n        } else if (cp === $.AMPERSAND) {\n            this.returnState = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this.currentAttr.value += toChar(cp);\n        }\n    }\n\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    [ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE](cp) {\n        if (cp === $.APOSTROPHE) {\n            this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\n        } else if (cp === $.AMPERSAND) {\n            this.returnState = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this.currentAttr.value += toChar(cp);\n        }\n    }\n\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    [ATTRIBUTE_VALUE_UNQUOTED_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);\n        } else if (cp === $.AMPERSAND) {\n            this.returnState = ATTRIBUTE_VALUE_UNQUOTED_STATE;\n            this.state = CHARACTER_REFERENCE_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._leaveAttrValue(DATA_STATE);\n            this._emitCurrentToken();\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;\n        } else if (\n            cp === $.QUOTATION_MARK ||\n            cp === $.APOSTROPHE ||\n            cp === $.LESS_THAN_SIGN ||\n            cp === $.EQUALS_SIGN ||\n            cp === $.GRAVE_ACCENT\n        ) {\n            this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n            this.currentAttr.value += toChar(cp);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this.currentAttr.value += toChar(cp);\n        }\n    }\n\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    [AFTER_ATTRIBUTE_VALUE_QUOTED_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);\n        } else if (cp === $.SOLIDUS) {\n            this._leaveAttrValue(SELF_CLOSING_START_TAG_STATE);\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._leaveAttrValue(DATA_STATE);\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingWhitespaceBetweenAttributes);\n            this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n        }\n    }\n\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    [SELF_CLOSING_START_TAG_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.currentToken.selfClosing = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInTag);\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.unexpectedSolidusInTag);\n            this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n        }\n    }\n\n    // Bogus comment state\n    //------------------------------------------------------------------\n    [BOGUS_COMMENT_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.data += unicode.REPLACEMENT_CHARACTER;\n        } else {\n            this.currentToken.data += toChar(cp);\n        }\n    }\n\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    [MARKUP_DECLARATION_OPEN_STATE](cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH_STRING, cp, true)) {\n            this._createCommentToken();\n            this.state = COMMENT_START_STATE;\n        } else if (this._consumeSequenceIfMatch($$.DOCTYPE_STRING, cp, false)) {\n            this.state = DOCTYPE_STATE;\n        } else if (this._consumeSequenceIfMatch($$.CDATA_START_STRING, cp, true)) {\n            if (this.allowCDATA) {\n                this.state = CDATA_SECTION_STATE;\n            } else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken();\n                this.currentToken.data = '[CDATA[';\n                this.state = BOGUS_COMMENT_STATE;\n            }\n        }\n\n        //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken();\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\n        }\n    }\n\n    // Comment start state\n    //------------------------------------------------------------------\n    [COMMENT_START_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_START_DASH_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptClosingOfEmptyComment);\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else {\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment start dash state\n    //------------------------------------------------------------------\n    [COMMENT_START_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_END_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptClosingOfEmptyComment);\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += '-';\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment state\n    //------------------------------------------------------------------\n    [COMMENT_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_END_DASH_STATE;\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.currentToken.data += '<';\n            this.state = COMMENT_LESS_THAN_SIGN_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.data += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += toChar(cp);\n        }\n    }\n\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    [COMMENT_LESS_THAN_SIGN_STATE](cp) {\n        if (cp === $.EXCLAMATION_MARK) {\n            this.currentToken.data += '!';\n            this.state = COMMENT_LESS_THAN_SIGN_BANG_STATE;\n        } else if (cp === $.LESS_THAN_SIGN) {\n            this.currentToken.data += '!';\n        } else {\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    [COMMENT_LESS_THAN_SIGN_BANG_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE;\n        } else {\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    [COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE;\n        } else {\n            this._reconsumeInState(COMMENT_END_DASH_STATE);\n        }\n    }\n\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    [COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE](cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n\n        this._reconsumeInState(COMMENT_END_STATE);\n    }\n\n    // Comment end dash state\n    //------------------------------------------------------------------\n    [COMMENT_END_DASH_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = COMMENT_END_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += '-';\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment end state\n    //------------------------------------------------------------------\n    [COMMENT_END_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EXCLAMATION_MARK) {\n            this.state = COMMENT_END_BANG_STATE;\n        } else if (cp === $.HYPHEN_MINUS) {\n            this.currentToken.data += '-';\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += '--';\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // Comment end bang state\n    //------------------------------------------------------------------\n    [COMMENT_END_BANG_STATE](cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.currentToken.data += '--!';\n            this.state = COMMENT_END_DASH_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.incorrectlyClosedComment);\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInComment);\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.data += '--!';\n            this._reconsumeInState(COMMENT_STATE);\n        }\n    }\n\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    [DOCTYPE_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BEFORE_DOCTYPE_NAME_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this._createDoctypeToken(null);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingWhitespaceBeforeDoctypeName);\n            this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);\n        }\n    }\n\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    [BEFORE_DOCTYPE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(toAsciiLowerChar(cp));\n            this.state = DOCTYPE_NAME_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this._createDoctypeToken(unicode.REPLACEMENT_CHARACTER);\n            this.state = DOCTYPE_NAME_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypeName);\n            this._createDoctypeToken(null);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this._createDoctypeToken(null);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._createDoctypeToken(toChar(cp));\n            this.state = DOCTYPE_NAME_STATE;\n        }\n    }\n\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    [DOCTYPE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = AFTER_DOCTYPE_NAME_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (isAsciiUpper(cp)) {\n            this.currentToken.name += toAsciiLowerChar(cp);\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.name += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.name += toChar(cp);\n        }\n    }\n\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_NAME_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else if (this._consumeSequenceIfMatch($$.PUBLIC_STRING, cp, false)) {\n            this.state = AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE;\n        } else if (this._consumeSequenceIfMatch($$.SYSTEM_STRING, cp, false)) {\n            this.state = AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE;\n        }\n        //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\n        } else if (cp === $.QUOTATION_MARK) {\n            this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n            this.currentToken.publicId = '';\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n            this.currentToken.publicId = '';\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    [BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.QUOTATION_MARK) {\n            this.currentToken.publicId = '';\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this.currentToken.publicId = '';\n            this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    [DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {\n        if (cp === $.QUOTATION_MARK) {\n            this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.publicId += toChar(cp);\n        }\n    }\n\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    [DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {\n        if (cp === $.APOSTROPHE) {\n            this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptDoctypePublicIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.publicId += toChar(cp);\n        }\n    }\n\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.QUOTATION_MARK) {\n            this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    [BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.GREATER_THAN_SIGN) {\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.QUOTATION_MARK) {\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE](cp) {\n        if (isWhitespace(cp)) {\n            this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n        } else if (cp === $.QUOTATION_MARK) {\n            this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    [BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.QUOTATION_MARK) {\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n        } else if (cp === $.APOSTROPHE) {\n            this.currentToken.systemId = '';\n            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.missingDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this.state = DATA_STATE;\n            this._emitCurrentToken();\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    [DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {\n        if (cp === $.QUOTATION_MARK) {\n            this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.systemId += toChar(cp);\n        }\n    }\n\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    [DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {\n        if (cp === $.APOSTROPHE) {\n            this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n            this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER;\n        } else if (cp === $.GREATER_THAN_SIGN) {\n            this._err(ERR.abruptDoctypeSystemIdentifier);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this.currentToken.systemId += toChar(cp);\n        }\n    }\n\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    [AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {\n        if (isWhitespace(cp)) {\n            return;\n        }\n\n        if (cp === $.GREATER_THAN_SIGN) {\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInDoctype);\n            this.currentToken.forceQuirks = true;\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        } else {\n            this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n            this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n        }\n    }\n\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    [BOGUS_DOCTYPE_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this._emitCurrentToken();\n            this.state = DATA_STATE;\n        } else if (cp === $.NULL) {\n            this._err(ERR.unexpectedNullCharacter);\n        } else if (cp === $.EOF) {\n            this._emitCurrentToken();\n            this._emitEOFToken();\n        }\n    }\n\n    // CDATA section state\n    //------------------------------------------------------------------\n    [CDATA_SECTION_STATE](cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = CDATA_SECTION_BRACKET_STATE;\n        } else if (cp === $.EOF) {\n            this._err(ERR.eofInCdata);\n            this._emitEOFToken();\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    [CDATA_SECTION_BRACKET_STATE](cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = CDATA_SECTION_END_STATE;\n        } else {\n            this._emitChars(']');\n            this._reconsumeInState(CDATA_SECTION_STATE);\n        }\n    }\n\n    // CDATA section end state\n    //------------------------------------------------------------------\n    [CDATA_SECTION_END_STATE](cp) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n        } else if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this._emitChars(']');\n        } else {\n            this._emitChars(']]');\n            this._reconsumeInState(CDATA_SECTION_STATE);\n        }\n    }\n\n    // Character reference state\n    //------------------------------------------------------------------\n    [CHARACTER_REFERENCE_STATE](cp) {\n        this.tempBuff = [$.AMPERSAND];\n\n        if (cp === $.NUMBER_SIGN) {\n            this.tempBuff.push(cp);\n            this.state = NUMERIC_CHARACTER_REFERENCE_STATE;\n        } else if (isAsciiAlphaNumeric(cp)) {\n            this._reconsumeInState(NAMED_CHARACTER_REFERENCE_STATE);\n        } else {\n            this._flushCodePointsConsumedAsCharacterReference();\n            this._reconsumeInState(this.returnState);\n        }\n    }\n\n    // Named character reference state\n    //------------------------------------------------------------------\n    [NAMED_CHARACTER_REFERENCE_STATE](cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n\n        //NOTE: matching can be abrupted by hibernation. In that case match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            this.tempBuff = [$.AMPERSAND];\n        } else if (matchResult) {\n            const withSemicolon = this.tempBuff[this.tempBuff.length - 1] === $.SEMICOLON;\n\n            if (!this._isCharacterReferenceAttributeQuirk(withSemicolon)) {\n                if (!withSemicolon) {\n                    this._errOnNextCodePoint(ERR.missingSemicolonAfterCharacterReference);\n                }\n\n                this.tempBuff = matchResult;\n            }\n\n            this._flushCodePointsConsumedAsCharacterReference();\n            this.state = this.returnState;\n        } else {\n            this._flushCodePointsConsumedAsCharacterReference();\n            this.state = AMBIGUOUS_AMPERSAND_STATE;\n        }\n    }\n\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    [AMBIGUOUS_AMPERSAND_STATE](cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            if (this._isCharacterReferenceInAttribute()) {\n                this.currentAttr.value += toChar(cp);\n            } else {\n                this._emitCodePoint(cp);\n            }\n        } else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n\n            this._reconsumeInState(this.returnState);\n        }\n    }\n\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    [NUMERIC_CHARACTER_REFERENCE_STATE](cp) {\n        this.charRefCode = 0;\n\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.tempBuff.push(cp);\n            this.state = HEXADEMICAL_CHARACTER_REFERENCE_START_STATE;\n        } else {\n            this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_START_STATE);\n        }\n    }\n\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    [HEXADEMICAL_CHARACTER_REFERENCE_START_STATE](cp) {\n        if (isAsciiHexDigit(cp)) {\n            this._reconsumeInState(HEXADEMICAL_CHARACTER_REFERENCE_STATE);\n        } else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointsConsumedAsCharacterReference();\n            this._reconsumeInState(this.returnState);\n        }\n    }\n\n    // Decimal character reference start state\n    //------------------------------------------------------------------\n    [DECIMAL_CHARACTER_REFERENCE_START_STATE](cp) {\n        if (isAsciiDigit(cp)) {\n            this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_STATE);\n        } else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointsConsumedAsCharacterReference();\n            this._reconsumeInState(this.returnState);\n        }\n    }\n\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    [HEXADEMICAL_CHARACTER_REFERENCE_STATE](cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        } else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        } else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        } else if (cp === $.SEMICOLON) {\n            this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE;\n        } else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE);\n        }\n    }\n\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    [DECIMAL_CHARACTER_REFERENCE_STATE](cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        } else if (cp === $.SEMICOLON) {\n            this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE;\n        } else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE);\n        }\n    }\n\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    [NUMERIC_CHARACTER_REFERENCE_END_STATE]() {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        } else if (this.charRefCode > 0x10ffff) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        } else if (unicode.isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        } else if (unicode.isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        } else if (unicode.isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS[this.charRefCode];\n\n            if (replacement) {\n                this.charRefCode = replacement;\n            }\n        }\n\n        this.tempBuff = [this.charRefCode];\n\n        this._flushCodePointsConsumedAsCharacterReference();\n        this._reconsumeInState(this.returnState);\n    }\n}\n\n//Token types\nTokenizer.CHARACTER_TOKEN = 'CHARACTER_TOKEN';\nTokenizer.NULL_CHARACTER_TOKEN = 'NULL_CHARACTER_TOKEN';\nTokenizer.WHITESPACE_CHARACTER_TOKEN = 'WHITESPACE_CHARACTER_TOKEN';\nTokenizer.START_TAG_TOKEN = 'START_TAG_TOKEN';\nTokenizer.END_TAG_TOKEN = 'END_TAG_TOKEN';\nTokenizer.COMMENT_TOKEN = 'COMMENT_TOKEN';\nTokenizer.DOCTYPE_TOKEN = 'DOCTYPE_TOKEN';\nTokenizer.EOF_TOKEN = 'EOF_TOKEN';\nTokenizer.HIBERNATION_TOKEN = 'HIBERNATION_TOKEN';\n\n//Tokenizer initial states for different modes\nTokenizer.MODE = {\n    DATA: DATA_STATE,\n    RCDATA: RCDATA_STATE,\n    RAWTEXT: RAWTEXT_STATE,\n    SCRIPT_DATA: SCRIPT_DATA_STATE,\n    PLAINTEXT: PLAINTEXT_STATE\n};\n\n//Static\nTokenizer.getTokenAttr = function(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n\n    return null;\n};\n\nmodule.exports = Tokenizer;\n", "'use strict';\n\nconst NS = (exports.NAMESPACES = {\n    HTML: 'http://www.w3.org/1999/xhtml',\n    MATHML: 'http://www.w3.org/1998/Math/MathML',\n    SVG: 'http://www.w3.org/2000/svg',\n    XLINK: 'http://www.w3.org/1999/xlink',\n    XML: 'http://www.w3.org/XML/1998/namespace',\n    XMLNS: 'http://www.w3.org/2000/xmlns/'\n});\n\nexports.ATTRS = {\n    TYPE: 'type',\n    ACTION: 'action',\n    ENCODING: 'encoding',\n    PROMPT: 'prompt',\n    NAME: 'name',\n    COLOR: 'color',\n    FACE: 'face',\n    SIZE: 'size'\n};\n\nexports.DOCUMENT_MODE = {\n    NO_QUIRKS: 'no-quirks',\n    QUIRKS: 'quirks',\n    LIMITED_QUIRKS: 'limited-quirks'\n};\n\nconst $ = (exports.TAG_NAMES = {\n    A: 'a',\n    ADDRESS: 'address',\n    ANNOTATION_XML: 'annotation-xml',\n    APPLET: 'applet',\n    AREA: 'area',\n    ARTICLE: 'article',\n    ASIDE: 'aside',\n\n    B: 'b',\n    BASE: 'base',\n    BASEFONT: 'basefont',\n    BGSOUND: 'bgsound',\n    BIG: 'big',\n    BLOCKQUOTE: 'blockquote',\n    BODY: 'body',\n    BR: 'br',\n    BUTTON: 'button',\n\n    CAPTION: 'caption',\n    CENTER: 'center',\n    CODE: 'code',\n    COL: 'col',\n    COLGROUP: 'colgroup',\n\n    DD: 'dd',\n    DESC: 'desc',\n    DETAILS: 'details',\n    DIALOG: 'dialog',\n    DIR: 'dir',\n    DIV: 'div',\n    DL: 'dl',\n    DT: 'dt',\n\n    EM: 'em',\n    EMBED: 'embed',\n\n    FIELDSET: 'fieldset',\n    FIGCAPTION: 'figcaption',\n    FIGURE: 'figure',\n    FONT: 'font',\n    FOOTER: 'footer',\n    FOREIGN_OBJECT: 'foreignObject',\n    FORM: 'form',\n    FRAME: 'frame',\n    FRAMESET: 'frameset',\n\n    H1: 'h1',\n    H2: 'h2',\n    H3: 'h3',\n    H4: 'h4',\n    H5: 'h5',\n    H6: 'h6',\n    HEAD: 'head',\n    HEADER: 'header',\n    HGROUP: 'hgroup',\n    HR: 'hr',\n    HTML: 'html',\n\n    I: 'i',\n    IMG: 'img',\n    IMAGE: 'image',\n    INPUT: 'input',\n    IFRAME: 'iframe',\n\n    KEYGEN: 'keygen',\n\n    LABEL: 'label',\n    LI: 'li',\n    LINK: 'link',\n    LISTING: 'listing',\n\n    MAIN: 'main',\n    MALIGNMARK: 'malignmark',\n    MARQUEE: 'marquee',\n    MATH: 'math',\n    MENU: 'menu',\n    META: 'meta',\n    MGLYPH: 'mglyph',\n    MI: 'mi',\n    MO: 'mo',\n    MN: 'mn',\n    MS: 'ms',\n    MTEXT: 'mtext',\n\n    NAV: 'nav',\n    NOBR: 'nobr',\n    NOFRAMES: 'noframes',\n    NOEMBED: 'noembed',\n    NOSCRIPT: 'noscript',\n\n    OBJECT: 'object',\n    OL: 'ol',\n    OPTGROUP: 'optgroup',\n    OPTION: 'option',\n\n    P: 'p',\n    PARAM: 'param',\n    PLAINTEXT: 'plaintext',\n    PRE: 'pre',\n\n    RB: 'rb',\n    RP: 'rp',\n    RT: 'rt',\n    RTC: 'rtc',\n    RUBY: 'ruby',\n\n    S: 's',\n    SCRIPT: 'script',\n    SECTION: 'section',\n    SELECT: 'select',\n    SOURCE: 'source',\n    SMALL: 'small',\n    SPAN: 'span',\n    STRIKE: 'strike',\n    STRONG: 'strong',\n    STYLE: 'style',\n    SUB: 'sub',\n    SUMMARY: 'summary',\n    SUP: 'sup',\n\n    TABLE: 'table',\n    TBODY: 'tbody',\n    TEMPLATE: 'template',\n    TEXTAREA: 'textarea',\n    TFOOT: 'tfoot',\n    TD: 'td',\n    TH: 'th',\n    THEAD: 'thead',\n    TITLE: 'title',\n    TR: 'tr',\n    TRACK: 'track',\n    TT: 'tt',\n\n    U: 'u',\n    UL: 'ul',\n\n    SVG: 'svg',\n\n    VAR: 'var',\n\n    WBR: 'wbr',\n\n    XMP: 'xmp'\n});\n\nexports.SPECIAL_ELEMENTS = {\n    [NS.HTML]: {\n        [$.ADDRESS]: true,\n        [$.APPLET]: true,\n        [$.AREA]: true,\n        [$.ARTICLE]: true,\n        [$.ASIDE]: true,\n        [$.BASE]: true,\n        [$.BASEFONT]: true,\n        [$.BGSOUND]: true,\n        [$.BLOCKQUOTE]: true,\n        [$.BODY]: true,\n        [$.BR]: true,\n        [$.BUTTON]: true,\n        [$.CAPTION]: true,\n        [$.CENTER]: true,\n        [$.COL]: true,\n        [$.COLGROUP]: true,\n        [$.DD]: true,\n        [$.DETAILS]: true,\n        [$.DIR]: true,\n        [$.DIV]: true,\n        [$.DL]: true,\n        [$.DT]: true,\n        [$.EMBED]: true,\n        [$.FIELDSET]: true,\n        [$.FIGCAPTION]: true,\n        [$.FIGURE]: true,\n        [$.FOOTER]: true,\n        [$.FORM]: true,\n        [$.FRAME]: true,\n        [$.FRAMESET]: true,\n        [$.H1]: true,\n        [$.H2]: true,\n        [$.H3]: true,\n        [$.H4]: true,\n        [$.H5]: true,\n        [$.H6]: true,\n        [$.HEAD]: true,\n        [$.HEADER]: true,\n        [$.HGROUP]: true,\n        [$.HR]: true,\n        [$.HTML]: true,\n        [$.IFRAME]: true,\n        [$.IMG]: true,\n        [$.INPUT]: true,\n        [$.LI]: true,\n        [$.LINK]: true,\n        [$.LISTING]: true,\n        [$.MAIN]: true,\n        [$.MARQUEE]: true,\n        [$.MENU]: true,\n        [$.META]: true,\n        [$.NAV]: true,\n        [$.NOEMBED]: true,\n        [$.NOFRAMES]: true,\n        [$.NOSCRIPT]: true,\n        [$.OBJECT]: true,\n        [$.OL]: true,\n        [$.P]: true,\n        [$.PARAM]: true,\n        [$.PLAINTEXT]: true,\n        [$.PRE]: true,\n        [$.SCRIPT]: true,\n        [$.SECTION]: true,\n        [$.SELECT]: true,\n        [$.SOURCE]: true,\n        [$.STYLE]: true,\n        [$.SUMMARY]: true,\n        [$.TABLE]: true,\n        [$.TBODY]: true,\n        [$.TD]: true,\n        [$.TEMPLATE]: true,\n        [$.TEXTAREA]: true,\n        [$.TFOOT]: true,\n        [$.TH]: true,\n        [$.THEAD]: true,\n        [$.TITLE]: true,\n        [$.TR]: true,\n        [$.TRACK]: true,\n        [$.UL]: true,\n        [$.WBR]: true,\n        [$.XMP]: true\n    },\n    [NS.MATHML]: {\n        [$.MI]: true,\n        [$.MO]: true,\n        [$.MN]: true,\n        [$.MS]: true,\n        [$.MTEXT]: true,\n        [$.ANNOTATION_XML]: true\n    },\n    [NS.SVG]: {\n        [$.TITLE]: true,\n        [$.FOREIGN_OBJECT]: true,\n        [$.DESC]: true\n    }\n};\n", "'use strict';\n\nconst HTML = require('../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\n\n//Element utils\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction isImpliedEndTagRequired(tn) {\n    switch (tn.length) {\n        case 1:\n            return tn === $.P;\n\n        case 2:\n            return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;\n\n        case 3:\n            return tn === $.RTC;\n\n        case 6:\n            return tn === $.OPTION;\n\n        case 8:\n            return tn === $.OPTGROUP;\n    }\n\n    return false;\n}\n\nfunction isImpliedEndTagRequiredThoroughly(tn) {\n    switch (tn.length) {\n        case 1:\n            return tn === $.P;\n\n        case 2:\n            return (\n                tn === $.RB ||\n                tn === $.RP ||\n                tn === $.RT ||\n                tn === $.DD ||\n                tn === $.DT ||\n                tn === $.LI ||\n                tn === $.TD ||\n                tn === $.TH ||\n                tn === $.TR\n            );\n\n        case 3:\n            return tn === $.RTC;\n\n        case 5:\n            return tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD;\n\n        case 6:\n            return tn === $.OPTION;\n\n        case 7:\n            return tn === $.CAPTION;\n\n        case 8:\n            return tn === $.OPTGROUP || tn === $.COLGROUP;\n    }\n\n    return false;\n}\n\nfunction isScopingElement(tn, ns) {\n    switch (tn.length) {\n        case 2:\n            if (tn === $.TD || tn === $.TH) {\n                return ns === NS.HTML;\n            } else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS) {\n                return ns === NS.MATHML;\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.HTML) {\n                return ns === NS.HTML;\n            } else if (tn === $.DESC) {\n                return ns === NS.SVG;\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.TABLE) {\n                return ns === NS.HTML;\n            } else if (tn === $.MTEXT) {\n                return ns === NS.MATHML;\n            } else if (tn === $.TITLE) {\n                return ns === NS.SVG;\n            }\n\n            break;\n\n        case 6:\n            return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;\n\n        case 7:\n            return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;\n\n        case 8:\n            return tn === $.TEMPLATE && ns === NS.HTML;\n\n        case 13:\n            return tn === $.FOREIGN_OBJECT && ns === NS.SVG;\n\n        case 14:\n            return tn === $.ANNOTATION_XML && ns === NS.MATHML;\n    }\n\n    return false;\n}\n\n//Stack of open elements\nclass OpenElementStack {\n    constructor(document, treeAdapter) {\n        this.stackTop = -1;\n        this.items = [];\n        this.current = document;\n        this.currentTagName = null;\n        this.currentTmplContent = null;\n        this.tmplCount = 0;\n        this.treeAdapter = treeAdapter;\n    }\n\n    //Index of element\n    _indexOf(element) {\n        let idx = -1;\n\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.items[i] === element) {\n                idx = i;\n                break;\n            }\n        }\n        return idx;\n    }\n\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);\n\n        this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;\n    }\n\n    //Mutations\n    push(element) {\n        this.items[++this.stackTop] = element;\n        this._updateCurrentElement();\n\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n    }\n\n    pop() {\n        this.stackTop--;\n\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n\n        this._updateCurrentElement();\n    }\n\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n\n        this.items[idx] = newElement;\n\n        if (idx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n    }\n\n    insertAfter(referenceElement, newElement) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n\n        this.items.splice(insertionIdx, 0, newElement);\n\n        if (insertionIdx === ++this.stackTop) {\n            this._updateCurrentElement();\n        }\n    }\n\n    popUntilTagNamePopped(tagName) {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (tn === tagName && ns === NS.HTML) {\n                break;\n            }\n        }\n    }\n\n    popUntilElementPopped(element) {\n        while (this.stackTop > -1) {\n            const poppedElement = this.current;\n\n            this.pop();\n\n            if (poppedElement === element) {\n                break;\n            }\n        }\n    }\n\n    popUntilNumberedHeaderPopped() {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (\n                tn === $.H1 ||\n                tn === $.H2 ||\n                tn === $.H3 ||\n                tn === $.H4 ||\n                tn === $.H5 ||\n                (tn === $.H6 && ns === NS.HTML)\n            ) {\n                break;\n            }\n        }\n    }\n\n    popUntilTableCellPopped() {\n        while (this.stackTop > -1) {\n            const tn = this.currentTagName;\n            const ns = this.treeAdapter.getNamespaceURI(this.current);\n\n            this.pop();\n\n            if (tn === $.TD || (tn === $.TH && ns === NS.HTML)) {\n                break;\n            }\n        }\n    }\n\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.stackTop = 0;\n        this._updateCurrentElement();\n    }\n\n    clearBackToTableContext() {\n        while (\n            (this.currentTagName !== $.TABLE && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    clearBackToTableBodyContext() {\n        while (\n            (this.currentTagName !== $.TBODY &&\n                this.currentTagName !== $.TFOOT &&\n                this.currentTagName !== $.THEAD &&\n                this.currentTagName !== $.TEMPLATE &&\n                this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    clearBackToTableRowContext() {\n        while (\n            (this.currentTagName !== $.TR && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||\n            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML\n        ) {\n            this.pop();\n        }\n    }\n\n    remove(element) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.items[i] === element) {\n                this.items.splice(i, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                break;\n            }\n        }\n    }\n\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        const element = this.items[1];\n\n        return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;\n    }\n\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n\n    getCommonAncestor(element) {\n        let elementIdx = this._indexOf(element);\n\n        return --elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.currentTagName === $.HTML;\n    }\n\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if (isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (\n                (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) &&\n                ns === NS.HTML\n            ) {\n                return true;\n            }\n\n            if (isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n\n            if ((tn === $.BUTTON && ns === NS.HTML) || isScopingElement(tn, ns)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === tagName) {\n                return true;\n            }\n\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.treeAdapter.getTagName(this.items[i]);\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n\n            if (ns !== NS.HTML) {\n                continue;\n            }\n\n            if (tn === tagName) {\n                return true;\n            }\n\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (isImpliedEndTagRequired(this.currentTagName)) {\n            this.pop();\n        }\n    }\n\n    generateImpliedEndTagsThoroughly() {\n        while (isImpliedEndTagRequiredThoroughly(this.currentTagName)) {\n            this.pop();\n        }\n    }\n\n    generateImpliedEndTagsWithExclusion(exclusionTagName) {\n        while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName) {\n            this.pop();\n        }\n    }\n}\n\nmodule.exports = OpenElementStack;\n", "'use strict';\n\n//Const\nconst NOAH_ARK_CAPACITY = 3;\n\n//List of formatting elements\nclass FormattingElementList {\n    constructor(treeAdapter) {\n        this.length = 0;\n        this.entries = [];\n        this.treeAdapter = treeAdapter;\n        this.bookmark = null;\n    }\n\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement) {\n        const candidates = [];\n\n        if (this.length >= NOAH_ARK_CAPACITY) {\n            const neAttrsLength = this.treeAdapter.getAttrList(newElement).length;\n            const neTagName = this.treeAdapter.getTagName(newElement);\n            const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n\n            for (let i = this.length - 1; i >= 0; i--) {\n                const entry = this.entries[i];\n\n                if (entry.type === FormattingElementList.MARKER_ENTRY) {\n                    break;\n                }\n\n                const element = entry.element;\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n\n                const isCandidate =\n                    this.treeAdapter.getTagName(element) === neTagName &&\n                    this.treeAdapter.getNamespaceURI(element) === neNamespaceURI &&\n                    elementAttrs.length === neAttrsLength;\n\n                if (isCandidate) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n\n        return candidates.length < NOAH_ARK_CAPACITY ? [] : candidates;\n    }\n\n    _ensureNoahArkCondition(newElement) {\n        const candidates = this._getNoahArkConditionCandidates(newElement);\n        let cLength = candidates.length;\n\n        if (cLength) {\n            const neAttrs = this.treeAdapter.getAttrList(newElement);\n            const neAttrsLength = neAttrs.length;\n            const neAttrsMap = Object.create(null);\n\n            //NOTE: build attrs map for the new element so we can perform fast lookups\n            for (let i = 0; i < neAttrsLength; i++) {\n                const neAttr = neAttrs[i];\n\n                neAttrsMap[neAttr.name] = neAttr.value;\n            }\n\n            for (let i = 0; i < neAttrsLength; i++) {\n                for (let j = 0; j < cLength; j++) {\n                    const cAttr = candidates[j].attrs[i];\n\n                    if (neAttrsMap[cAttr.name] !== cAttr.value) {\n                        candidates.splice(j, 1);\n                        cLength--;\n                    }\n\n                    if (candidates.length < NOAH_ARK_CAPACITY) {\n                        return;\n                    }\n                }\n            }\n\n            //NOTE: remove bottommost candidates until Noah's Ark condition will not be met\n            for (let i = cLength - 1; i >= NOAH_ARK_CAPACITY - 1; i--) {\n                this.entries.splice(candidates[i].idx, 1);\n                this.length--;\n            }\n        }\n    }\n\n    //Mutations\n    insertMarker() {\n        this.entries.push({ type: FormattingElementList.MARKER_ENTRY });\n        this.length++;\n    }\n\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n\n        this.entries.push({\n            type: FormattingElementList.ELEMENT_ENTRY,\n            element: element,\n            token: token\n        });\n\n        this.length++;\n    }\n\n    insertElementAfterBookmark(element, token) {\n        let bookmarkIdx = this.length - 1;\n\n        for (; bookmarkIdx >= 0; bookmarkIdx--) {\n            if (this.entries[bookmarkIdx] === this.bookmark) {\n                break;\n            }\n        }\n\n        this.entries.splice(bookmarkIdx + 1, 0, {\n            type: FormattingElementList.ELEMENT_ENTRY,\n            element: element,\n            token: token\n        });\n\n        this.length++;\n    }\n\n    removeEntry(entry) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            if (this.entries[i] === entry) {\n                this.entries.splice(i, 1);\n                this.length--;\n                break;\n            }\n        }\n    }\n\n    clearToLastMarker() {\n        while (this.length) {\n            const entry = this.entries.pop();\n\n            this.length--;\n\n            if (entry.type === FormattingElementList.MARKER_ENTRY) {\n                break;\n            }\n        }\n    }\n\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            const entry = this.entries[i];\n\n            if (entry.type === FormattingElementList.MARKER_ENTRY) {\n                return null;\n            }\n\n            if (this.treeAdapter.getTagName(entry.element) === tagName) {\n                return entry;\n            }\n        }\n\n        return null;\n    }\n\n    getElementEntry(element) {\n        for (let i = this.length - 1; i >= 0; i--) {\n            const entry = this.entries[i];\n\n            if (entry.type === FormattingElementList.ELEMENT_ENTRY && entry.element === element) {\n                return entry;\n            }\n        }\n\n        return null;\n    }\n}\n\n//Entry types\nFormattingElementList.MARKER_ENTRY = 'MARKER_ENTRY';\nFormattingElementList.ELEMENT_ENTRY = 'ELEMENT_ENTRY';\n\nmodule.exports = FormattingElementList;\n", "'use strict';\n\nclass Mixin {\n    constructor(host) {\n        const originalMethods = {};\n        const overriddenMethods = this._getOverriddenMethods(this, originalMethods);\n\n        for (const key of Object.keys(overriddenMethods)) {\n            if (typeof overriddenMethods[key] === 'function') {\n                originalMethods[key] = host[key];\n                host[key] = overriddenMethods[key];\n            }\n        }\n    }\n\n    _getOverriddenMethods() {\n        throw new Error('Not implemented');\n    }\n}\n\nMixin.install = function(host, Ctor, opts) {\n    if (!host.__mixins) {\n        host.__mixins = [];\n    }\n\n    for (let i = 0; i < host.__mixins.length; i++) {\n        if (host.__mixins[i].constructor === Ctor) {\n            return host.__mixins[i];\n        }\n    }\n\n    const mixin = new Ctor(host, opts);\n\n    host.__mixins.push(mixin);\n\n    return mixin;\n};\n\nmodule.exports = Mixin;\n", "'use strict';\n\nconst Mixin = require('../../utils/mixin');\n\nclass PositionTrackingPreprocessorMixin extends Mixin {\n    constructor(preprocessor) {\n        super(preprocessor);\n\n        this.preprocessor = preprocessor;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n\n        this.offset = 0;\n        this.col = 0;\n        this.line = 1;\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            advance() {\n                const pos = this.pos + 1;\n                const ch = this.html[pos];\n\n                //NOTE: LF should be in the last column of the line\n                if (mxn.isEol) {\n                    mxn.isEol = false;\n                    mxn.line++;\n                    mxn.lineStartPos = pos;\n                }\n\n                if (ch === '\\n' || (ch === '\\r' && this.html[pos + 1] !== '\\n')) {\n                    mxn.isEol = true;\n                }\n\n                mxn.col = pos - mxn.lineStartPos + 1;\n                mxn.offset = mxn.droppedBufferSize + pos;\n\n                return orig.advance.call(this);\n            },\n\n            retreat() {\n                orig.retreat.call(this);\n\n                mxn.isEol = false;\n                mxn.col = this.pos - mxn.lineStartPos + 1;\n            },\n\n            dropParsedChunk() {\n                const prevPos = this.pos;\n\n                orig.dropParsedChunk.call(this);\n\n                const reduction = prevPos - this.pos;\n\n                mxn.lineStartPos -= reduction;\n                mxn.droppedBufferSize += reduction;\n                mxn.offset = mxn.droppedBufferSize + this.pos;\n            }\n        };\n    }\n}\n\nmodule.exports = PositionTrackingPreprocessorMixin;\n", "'use strict';\n\nconst Mixin = require('../../utils/mixin');\nconst Tokenizer = require('../../tokenizer');\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\n\nclass LocationInfoTokenizerMixin extends Mixin {\n    constructor(tokenizer) {\n        super(tokenizer);\n\n        this.tokenizer = tokenizer;\n        this.posTracker = Mixin.install(tokenizer.preprocessor, PositionTrackingPreprocessorMixin);\n        this.currentAttrLocation = null;\n        this.ctLoc = null;\n    }\n\n    _getCurrentLocation() {\n        return {\n            startLine: this.posTracker.line,\n            startCol: this.posTracker.col,\n            startOffset: this.posTracker.offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1\n        };\n    }\n\n    _attachCurrentAttrLocationInfo() {\n        this.currentAttrLocation.endLine = this.posTracker.line;\n        this.currentAttrLocation.endCol = this.posTracker.col;\n        this.currentAttrLocation.endOffset = this.posTracker.offset;\n\n        const currentToken = this.tokenizer.currentToken;\n        const currentAttr = this.tokenizer.currentAttr;\n\n        if (!currentToken.location.attrs) {\n            currentToken.location.attrs = Object.create(null);\n        }\n\n        currentToken.location.attrs[currentAttr.name] = this.currentAttrLocation;\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        const methods = {\n            _createStartTagToken() {\n                orig._createStartTagToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createEndTagToken() {\n                orig._createEndTagToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createCommentToken() {\n                orig._createCommentToken.call(this);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createDoctypeToken(initialName) {\n                orig._createDoctypeToken.call(this, initialName);\n                this.currentToken.location = mxn.ctLoc;\n            },\n\n            _createCharacterToken(type, ch) {\n                orig._createCharacterToken.call(this, type, ch);\n                this.currentCharacterToken.location = mxn.ctLoc;\n            },\n\n            _createEOFToken() {\n                orig._createEOFToken.call(this);\n                this.currentToken.location = mxn._getCurrentLocation();\n            },\n\n            _createAttr(attrNameFirstCh) {\n                orig._createAttr.call(this, attrNameFirstCh);\n                mxn.currentAttrLocation = mxn._getCurrentLocation();\n            },\n\n            _leaveAttrName(toState) {\n                orig._leaveAttrName.call(this, toState);\n                mxn._attachCurrentAttrLocationInfo();\n            },\n\n            _leaveAttrValue(toState) {\n                orig._leaveAttrValue.call(this, toState);\n                mxn._attachCurrentAttrLocationInfo();\n            },\n\n            _emitCurrentToken() {\n                const ctLoc = this.currentToken.location;\n\n                //NOTE: if we have pending character token make it's end location equal to the\n                //current token's start location.\n                if (this.currentCharacterToken) {\n                    this.currentCharacterToken.location.endLine = ctLoc.startLine;\n                    this.currentCharacterToken.location.endCol = ctLoc.startCol;\n                    this.currentCharacterToken.location.endOffset = ctLoc.startOffset;\n                }\n\n                if (this.currentToken.type === Tokenizer.EOF_TOKEN) {\n                    ctLoc.endLine = ctLoc.startLine;\n                    ctLoc.endCol = ctLoc.startCol;\n                    ctLoc.endOffset = ctLoc.startOffset;\n                } else {\n                    ctLoc.endLine = mxn.posTracker.line;\n                    ctLoc.endCol = mxn.posTracker.col + 1;\n                    ctLoc.endOffset = mxn.posTracker.offset + 1;\n                }\n\n                orig._emitCurrentToken.call(this);\n            },\n\n            _emitCurrentCharacterToken() {\n                const ctLoc = this.currentCharacterToken && this.currentCharacterToken.location;\n\n                //NOTE: if we have character token and it's location wasn't set in the _emitCurrentToken(),\n                //then set it's location at the current preprocessor position.\n                //We don't need to increment preprocessor position, since character token\n                //emission is always forced by the start of the next character token here.\n                //So, we already have advanced position.\n                if (ctLoc && ctLoc.endOffset === -1) {\n                    ctLoc.endLine = mxn.posTracker.line;\n                    ctLoc.endCol = mxn.posTracker.col;\n                    ctLoc.endOffset = mxn.posTracker.offset;\n                }\n\n                orig._emitCurrentCharacterToken.call(this);\n            }\n        };\n\n        //NOTE: patch initial states for each mode to obtain token start position\n        Object.keys(Tokenizer.MODE).forEach(modeName => {\n            const state = Tokenizer.MODE[modeName];\n\n            methods[state] = function(cp) {\n                mxn.ctLoc = mxn._getCurrentLocation();\n                orig[state].call(this, cp);\n            };\n        });\n\n        return methods;\n    }\n}\n\nmodule.exports = LocationInfoTokenizerMixin;\n", "'use strict';\n\nconst Mixin = require('../../utils/mixin');\n\nclass LocationInfoOpenElementStackMixin extends Mixin {\n    constructor(stack, opts) {\n        super(stack);\n\n        this.onItemPop = opts.onItemPop;\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            pop() {\n                mxn.onItemPop(this.current);\n                orig.pop.call(this);\n            },\n\n            popAllUpToHtmlElement() {\n                for (let i = this.stackTop; i > 0; i--) {\n                    mxn.onItemPop(this.items[i]);\n                }\n\n                orig.popAllUpToHtmlElement.call(this);\n            },\n\n            remove(element) {\n                mxn.onItemPop(this.current);\n                orig.remove.call(this, element);\n            }\n        };\n    }\n}\n\nmodule.exports = LocationInfoOpenElementStackMixin;\n", "'use strict';\n\nconst Mixin = require('../../utils/mixin');\nconst Tokenizer = require('../../tokenizer');\nconst LocationInfoTokenizerMixin = require('./tokenizer-mixin');\nconst LocationInfoOpenElementStackMixin = require('./open-element-stack-mixin');\nconst HTML = require('../../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\n\nclass LocationInfoParserMixin extends Mixin {\n    constructor(parser) {\n        super(parser);\n\n        this.parser = parser;\n        this.treeAdapter = this.parser.treeAdapter;\n        this.posTracker = null;\n        this.lastStartTagToken = null;\n        this.lastFosterParentingLocation = null;\n        this.currentToken = null;\n    }\n\n    _setStartLocation(element) {\n        let loc = null;\n\n        if (this.lastStartTagToken) {\n            loc = Object.assign({}, this.lastStartTagToken.location);\n            loc.startTag = this.lastStartTagToken.location;\n        }\n\n        this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n    }\n\n    _setEndLocation(element, closingToken) {\n        const loc = this.treeAdapter.getNodeSourceCodeLocation(element);\n\n        if (loc) {\n            if (closingToken.location) {\n                const ctLoc = closingToken.location;\n                const tn = this.treeAdapter.getTagName(element);\n\n                // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n                // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n                const isClosingEndTag = closingToken.type === Tokenizer.END_TAG_TOKEN && tn === closingToken.tagName;\n                const endLoc = {};\n                if (isClosingEndTag) {\n                    endLoc.endTag = Object.assign({}, ctLoc);\n                    endLoc.endLine = ctLoc.endLine;\n                    endLoc.endCol = ctLoc.endCol;\n                    endLoc.endOffset = ctLoc.endOffset;\n                } else {\n                    endLoc.endLine = ctLoc.startLine;\n                    endLoc.endCol = ctLoc.startCol;\n                    endLoc.endOffset = ctLoc.startOffset;\n                }\n\n                this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n            }\n        }\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            _bootstrap(document, fragmentContext) {\n                orig._bootstrap.call(this, document, fragmentContext);\n\n                mxn.lastStartTagToken = null;\n                mxn.lastFosterParentingLocation = null;\n                mxn.currentToken = null;\n\n                const tokenizerMixin = Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);\n\n                mxn.posTracker = tokenizerMixin.posTracker;\n\n                Mixin.install(this.openElements, LocationInfoOpenElementStackMixin, {\n                    onItemPop: function(element) {\n                        mxn._setEndLocation(element, mxn.currentToken);\n                    }\n                });\n            },\n\n            _runParsingLoop(scriptHandler) {\n                orig._runParsingLoop.call(this, scriptHandler);\n\n                // NOTE: generate location info for elements\n                // that remains on open element stack\n                for (let i = this.openElements.stackTop; i >= 0; i--) {\n                    mxn._setEndLocation(this.openElements.items[i], mxn.currentToken);\n                }\n            },\n\n            //Token processing\n            _processTokenInForeignContent(token) {\n                mxn.currentToken = token;\n                orig._processTokenInForeignContent.call(this, token);\n            },\n\n            _processToken(token) {\n                mxn.currentToken = token;\n                orig._processToken.call(this, token);\n\n                //NOTE: <body> and <html> are never popped from the stack, so we need to updated\n                //their end location explicitly.\n                const requireExplicitUpdate =\n                    token.type === Tokenizer.END_TAG_TOKEN &&\n                    (token.tagName === $.HTML || (token.tagName === $.BODY && this.openElements.hasInScope($.BODY)));\n\n                if (requireExplicitUpdate) {\n                    for (let i = this.openElements.stackTop; i >= 0; i--) {\n                        const element = this.openElements.items[i];\n\n                        if (this.treeAdapter.getTagName(element) === token.tagName) {\n                            mxn._setEndLocation(element, token);\n                            break;\n                        }\n                    }\n                }\n            },\n\n            //Doctype\n            _setDocumentType(token) {\n                orig._setDocumentType.call(this, token);\n\n                const documentChildren = this.treeAdapter.getChildNodes(this.document);\n                const cnLength = documentChildren.length;\n\n                for (let i = 0; i < cnLength; i++) {\n                    const node = documentChildren[i];\n\n                    if (this.treeAdapter.isDocumentTypeNode(node)) {\n                        this.treeAdapter.setNodeSourceCodeLocation(node, token.location);\n                        break;\n                    }\n                }\n            },\n\n            //Elements\n            _attachElementToTree(element) {\n                //NOTE: _attachElementToTree is called from _appendElement, _insertElement and _insertTemplate methods.\n                //So we will use token location stored in this methods for the element.\n                mxn._setStartLocation(element);\n                mxn.lastStartTagToken = null;\n                orig._attachElementToTree.call(this, element);\n            },\n\n            _appendElement(token, namespaceURI) {\n                mxn.lastStartTagToken = token;\n                orig._appendElement.call(this, token, namespaceURI);\n            },\n\n            _insertElement(token, namespaceURI) {\n                mxn.lastStartTagToken = token;\n                orig._insertElement.call(this, token, namespaceURI);\n            },\n\n            _insertTemplate(token) {\n                mxn.lastStartTagToken = token;\n                orig._insertTemplate.call(this, token);\n\n                const tmplContent = this.treeAdapter.getTemplateContent(this.openElements.current);\n\n                this.treeAdapter.setNodeSourceCodeLocation(tmplContent, null);\n            },\n\n            _insertFakeRootElement() {\n                orig._insertFakeRootElement.call(this);\n                this.treeAdapter.setNodeSourceCodeLocation(this.openElements.current, null);\n            },\n\n            //Comments\n            _appendCommentNode(token, parent) {\n                orig._appendCommentNode.call(this, token, parent);\n\n                const children = this.treeAdapter.getChildNodes(parent);\n                const commentNode = children[children.length - 1];\n\n                this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n            },\n\n            //Text\n            _findFosterParentingLocation() {\n                //NOTE: store last foster parenting location, so we will be able to find inserted text\n                //in case of foster parenting\n                mxn.lastFosterParentingLocation = orig._findFosterParentingLocation.call(this);\n\n                return mxn.lastFosterParentingLocation;\n            },\n\n            _insertCharacters(token) {\n                orig._insertCharacters.call(this, token);\n\n                const hasFosterParent = this._shouldFosterParentOnInsertion();\n\n                const parent =\n                    (hasFosterParent && mxn.lastFosterParentingLocation.parent) ||\n                    this.openElements.currentTmplContent ||\n                    this.openElements.current;\n\n                const siblings = this.treeAdapter.getChildNodes(parent);\n\n                const textNodeIdx =\n                    hasFosterParent && mxn.lastFosterParentingLocation.beforeElement\n                        ? siblings.indexOf(mxn.lastFosterParentingLocation.beforeElement) - 1\n                        : siblings.length - 1;\n\n                const textNode = siblings[textNodeIdx];\n\n                //NOTE: if we have location assigned by another token, then just update end position\n                const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n\n                if (tnLoc) {\n                    const { endLine, endCol, endOffset } = token.location;\n                    this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n                } else {\n                    this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n                }\n            }\n        };\n    }\n}\n\nmodule.exports = LocationInfoParserMixin;\n", "'use strict';\n\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingMixinBase extends Mixin {\n    constructor(host, opts) {\n        super(host);\n\n        this.posTracker = null;\n        this.onParseError = opts.onParseError;\n    }\n\n    _setErrorLocation(err) {\n        err.startLine = err.endLine = this.posTracker.line;\n        err.startCol = err.endCol = this.posTracker.col;\n        err.startOffset = err.endOffset = this.posTracker.offset;\n    }\n\n    _reportError(code) {\n        const err = {\n            code: code,\n            startLine: -1,\n            startCol: -1,\n            startOffset: -1,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1\n        };\n\n        this._setErrorLocation(err);\n        this.onParseError(err);\n    }\n\n    _getOverriddenMethods(mxn) {\n        return {\n            _err(code) {\n                mxn._reportError(code);\n            }\n        };\n    }\n}\n\nmodule.exports = ErrorReportingMixinBase;\n", "'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingPreprocessorMixin extends ErrorReportingMixinBase {\n    constructor(preprocessor, opts) {\n        super(preprocessor, opts);\n\n        this.posTracker = Mixin.install(preprocessor, PositionTrackingPreprocessorMixin);\n        this.lastErrOffset = -1;\n    }\n\n    _reportError(code) {\n        //NOTE: avoid reporting error twice on advance/retreat\n        if (this.lastErrOffset !== this.posTracker.offset) {\n            this.lastErrOffset = this.posTracker.offset;\n            super._reportError(code);\n        }\n    }\n}\n\nmodule.exports = ErrorReportingPreprocessorMixin;\n", "'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst ErrorReportingPreprocessorMixin = require('./preprocessor-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingTokenizerMixin extends ErrorReportingMixinBase {\n    constructor(tokenizer, opts) {\n        super(tokenizer, opts);\n\n        const preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);\n\n        this.posTracker = preprocessorMixin.posTracker;\n    }\n}\n\nmodule.exports = ErrorReportingTokenizerMixin;\n", "'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst ErrorReportingTokenizerMixin = require('./tokenizer-mixin');\nconst LocationInfoTokenizerMixin = require('../location-info/tokenizer-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingParserMixin extends ErrorReportingMixinBase {\n    constructor(parser, opts) {\n        super(parser, opts);\n\n        this.opts = opts;\n        this.ctLoc = null;\n        this.locBeforeToken = false;\n    }\n\n    _setErrorLocation(err) {\n        if (this.ctLoc) {\n            err.startLine = this.ctLoc.startLine;\n            err.startCol = this.ctLoc.startCol;\n            err.startOffset = this.ctLoc.startOffset;\n\n            err.endLine = this.locBeforeToken ? this.ctLoc.startLine : this.ctLoc.endLine;\n            err.endCol = this.locBeforeToken ? this.ctLoc.startCol : this.ctLoc.endCol;\n            err.endOffset = this.locBeforeToken ? this.ctLoc.startOffset : this.ctLoc.endOffset;\n        }\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            _bootstrap(document, fragmentContext) {\n                orig._bootstrap.call(this, document, fragmentContext);\n\n                Mixin.install(this.tokenizer, ErrorReportingTokenizerMixin, mxn.opts);\n                Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);\n            },\n\n            _processInputToken(token) {\n                mxn.ctLoc = token.location;\n\n                orig._processInputToken.call(this, token);\n            },\n\n            _err(code, options) {\n                mxn.locBeforeToken = options && options.beforeToken;\n                mxn._reportError(code);\n            }\n        };\n    }\n}\n\nmodule.exports = ErrorReportingParserMixin;\n", "'use strict';\n\nconst { DOCUMENT_MODE } = require('../common/html');\n\n//Node construction\nexports.createDocument = function() {\n    return {\n        nodeName: '#document',\n        mode: DOCUMENT_MODE.NO_QUIRKS,\n        childNodes: []\n    };\n};\n\nexports.createDocumentFragment = function() {\n    return {\n        nodeName: '#document-fragment',\n        childNodes: []\n    };\n};\n\nexports.createElement = function(tagName, namespaceURI, attrs) {\n    return {\n        nodeName: tagName,\n        tagName: tagName,\n        attrs: attrs,\n        namespaceURI: namespaceURI,\n        childNodes: [],\n        parentNode: null\n    };\n};\n\nexports.createCommentNode = function(data) {\n    return {\n        nodeName: '#comment',\n        data: data,\n        parentNode: null\n    };\n};\n\nconst createTextNode = function(value) {\n    return {\n        nodeName: '#text',\n        value: value,\n        parentNode: null\n    };\n};\n\n//Tree mutation\nconst appendChild = (exports.appendChild = function(parentNode, newNode) {\n    parentNode.childNodes.push(newNode);\n    newNode.parentNode = parentNode;\n});\n\nconst insertBefore = (exports.insertBefore = function(parentNode, newNode, referenceNode) {\n    const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n\n    parentNode.childNodes.splice(insertionIdx, 0, newNode);\n    newNode.parentNode = parentNode;\n});\n\nexports.setTemplateContent = function(templateElement, contentElement) {\n    templateElement.content = contentElement;\n};\n\nexports.getTemplateContent = function(templateElement) {\n    return templateElement.content;\n};\n\nexports.setDocumentType = function(document, name, publicId, systemId) {\n    let doctypeNode = null;\n\n    for (let i = 0; i < document.childNodes.length; i++) {\n        if (document.childNodes[i].nodeName === '#documentType') {\n            doctypeNode = document.childNodes[i];\n            break;\n        }\n    }\n\n    if (doctypeNode) {\n        doctypeNode.name = name;\n        doctypeNode.publicId = publicId;\n        doctypeNode.systemId = systemId;\n    } else {\n        appendChild(document, {\n            nodeName: '#documentType',\n            name: name,\n            publicId: publicId,\n            systemId: systemId\n        });\n    }\n};\n\nexports.setDocumentMode = function(document, mode) {\n    document.mode = mode;\n};\n\nexports.getDocumentMode = function(document) {\n    return document.mode;\n};\n\nexports.detachNode = function(node) {\n    if (node.parentNode) {\n        const idx = node.parentNode.childNodes.indexOf(node);\n\n        node.parentNode.childNodes.splice(idx, 1);\n        node.parentNode = null;\n    }\n};\n\nexports.insertText = function(parentNode, text) {\n    if (parentNode.childNodes.length) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n\n        if (prevNode.nodeName === '#text') {\n            prevNode.value += text;\n            return;\n        }\n    }\n\n    appendChild(parentNode, createTextNode(text));\n};\n\nexports.insertTextBefore = function(parentNode, text, referenceNode) {\n    const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n\n    if (prevNode && prevNode.nodeName === '#text') {\n        prevNode.value += text;\n    } else {\n        insertBefore(parentNode, createTextNode(text), referenceNode);\n    }\n};\n\nexports.adoptAttributes = function(recipient, attrs) {\n    const recipientAttrsMap = [];\n\n    for (let i = 0; i < recipient.attrs.length; i++) {\n        recipientAttrsMap.push(recipient.attrs[i].name);\n    }\n\n    for (let j = 0; j < attrs.length; j++) {\n        if (recipientAttrsMap.indexOf(attrs[j].name) === -1) {\n            recipient.attrs.push(attrs[j]);\n        }\n    }\n};\n\n//Tree traversing\nexports.getFirstChild = function(node) {\n    return node.childNodes[0];\n};\n\nexports.getChildNodes = function(node) {\n    return node.childNodes;\n};\n\nexports.getParentNode = function(node) {\n    return node.parentNode;\n};\n\nexports.getAttrList = function(element) {\n    return element.attrs;\n};\n\n//Node data\nexports.getTagName = function(element) {\n    return element.tagName;\n};\n\nexports.getNamespaceURI = function(element) {\n    return element.namespaceURI;\n};\n\nexports.getTextNodeContent = function(textNode) {\n    return textNode.value;\n};\n\nexports.getCommentNodeContent = function(commentNode) {\n    return commentNode.data;\n};\n\nexports.getDocumentTypeNodeName = function(doctypeNode) {\n    return doctypeNode.name;\n};\n\nexports.getDocumentTypeNodePublicId = function(doctypeNode) {\n    return doctypeNode.publicId;\n};\n\nexports.getDocumentTypeNodeSystemId = function(doctypeNode) {\n    return doctypeNode.systemId;\n};\n\n//Node types\nexports.isTextNode = function(node) {\n    return node.nodeName === '#text';\n};\n\nexports.isCommentNode = function(node) {\n    return node.nodeName === '#comment';\n};\n\nexports.isDocumentTypeNode = function(node) {\n    return node.nodeName === '#documentType';\n};\n\nexports.isElementNode = function(node) {\n    return !!node.tagName;\n};\n\n// Source code location\nexports.setNodeSourceCodeLocation = function(node, location) {\n    node.sourceCodeLocation = location;\n};\n\nexports.getNodeSourceCodeLocation = function(node) {\n    return node.sourceCodeLocation;\n};\n\nexports.updateNodeSourceCodeLocation = function(node, endLocation) {\n    node.sourceCodeLocation = Object.assign(node.sourceCodeLocation, endLocation);\n};\n", "'use strict';\n\nmodule.exports = function mergeOptions(defaults, options) {\n    options = options || Object.create(null);\n\n    return [defaults, options].reduce((merged, optObj) => {\n        Object.keys(optObj).forEach(key => {\n            merged[key] = optObj[key];\n        });\n\n        return merged;\n    }, Object.create(null));\n};\n", "'use strict';\n\nconst { DOCUMENT_MODE } = require('./html');\n\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\n\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//'\n];\n\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = QUIRKS_MODE_PUBLIC_ID_PREFIXES.concat([\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//'\n]);\n\nconst QUIRKS_MODE_PUBLIC_IDS = ['-//w3o//dtd w3 html strict 3.0//en//', '-/w3c/dtd html 4.0 transitional/en', 'html'];\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\n\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = LIMITED_QUIRKS_PUBLIC_ID_PREFIXES.concat([\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//'\n]);\n\n//Utils\nfunction enquoteDoctypeId(id) {\n    const quote = id.indexOf('\"') !== -1 ? \"'\" : '\"';\n\n    return quote + id + quote;\n}\n\nfunction hasPrefix(publicId, prefixes) {\n    for (let i = 0; i < prefixes.length; i++) {\n        if (publicId.indexOf(prefixes[i]) === 0) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n//API\nexports.isConforming = function(token) {\n    return (\n        token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID)\n    );\n};\n\nexports.getDocumentMode = function(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n\n    const systemId = token.systemId;\n\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n\n    let publicId = token.publicId;\n\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n\n        if (QUIRKS_MODE_PUBLIC_IDS.indexOf(publicId) > -1) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n\n    return DOCUMENT_MODE.NO_QUIRKS;\n};\n\nexports.serializeContent = function(name, publicId, systemId) {\n    let str = '!DOCTYPE ';\n\n    if (name) {\n        str += name;\n    }\n\n    if (publicId) {\n        str += ' PUBLIC ' + enquoteDoctypeId(publicId);\n    } else if (systemId) {\n        str += ' SYSTEM';\n    }\n\n    if (systemId !== null) {\n        str += ' ' + enquoteDoctypeId(systemId);\n    }\n\n    return str;\n};\n", "'use strict';\n\nconst Tokenizer = require('../tokenizer');\nconst HTML = require('./html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\nconst ATTRS = HTML.ATTRS;\n\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml'\n};\n\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = {\n    attributename: 'attributeName',\n    attributetype: 'attributeType',\n    basefrequency: 'baseFrequency',\n    baseprofile: 'baseProfile',\n    calcmode: 'calcMode',\n    clippathunits: 'clipPathUnits',\n    diffuseconstant: 'diffuseConstant',\n    edgemode: 'edgeMode',\n    filterunits: 'filterUnits',\n    glyphref: 'glyphRef',\n    gradienttransform: 'gradientTransform',\n    gradientunits: 'gradientUnits',\n    kernelmatrix: 'kernelMatrix',\n    kernelunitlength: 'kernelUnitLength',\n    keypoints: 'keyPoints',\n    keysplines: 'keySplines',\n    keytimes: 'keyTimes',\n    lengthadjust: 'lengthAdjust',\n    limitingconeangle: 'limitingConeAngle',\n    markerheight: 'markerHeight',\n    markerunits: 'markerUnits',\n    markerwidth: 'markerWidth',\n    maskcontentunits: 'maskContentUnits',\n    maskunits: 'maskUnits',\n    numoctaves: 'numOctaves',\n    pathlength: 'pathLength',\n    patterncontentunits: 'patternContentUnits',\n    patterntransform: 'patternTransform',\n    patternunits: 'patternUnits',\n    pointsatx: 'pointsAtX',\n    pointsaty: 'pointsAtY',\n    pointsatz: 'pointsAtZ',\n    preservealpha: 'preserveAlpha',\n    preserveaspectratio: 'preserveAspectRatio',\n    primitiveunits: 'primitiveUnits',\n    refx: 'refX',\n    refy: 'refY',\n    repeatcount: 'repeatCount',\n    repeatdur: 'repeatDur',\n    requiredextensions: 'requiredExtensions',\n    requiredfeatures: 'requiredFeatures',\n    specularconstant: 'specularConstant',\n    specularexponent: 'specularExponent',\n    spreadmethod: 'spreadMethod',\n    startoffset: 'startOffset',\n    stddeviation: 'stdDeviation',\n    stitchtiles: 'stitchTiles',\n    surfacescale: 'surfaceScale',\n    systemlanguage: 'systemLanguage',\n    tablevalues: 'tableValues',\n    targetx: 'targetX',\n    targety: 'targetY',\n    textlength: 'textLength',\n    viewbox: 'viewBox',\n    viewtarget: 'viewTarget',\n    xchannelselector: 'xChannelSelector',\n    ychannelselector: 'yChannelSelector',\n    zoomandpan: 'zoomAndPan'\n};\n\nconst XML_ATTRS_ADJUSTMENT_MAP = {\n    'xlink:actuate': { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK },\n    'xlink:arcrole': { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK },\n    'xlink:href': { prefix: 'xlink', name: 'href', namespace: NS.XLINK },\n    'xlink:role': { prefix: 'xlink', name: 'role', namespace: NS.XLINK },\n    'xlink:show': { prefix: 'xlink', name: 'show', namespace: NS.XLINK },\n    'xlink:title': { prefix: 'xlink', name: 'title', namespace: NS.XLINK },\n    'xlink:type': { prefix: 'xlink', name: 'type', namespace: NS.XLINK },\n    'xml:base': { prefix: 'xml', name: 'base', namespace: NS.XML },\n    'xml:lang': { prefix: 'xml', name: 'lang', namespace: NS.XML },\n    'xml:space': { prefix: 'xml', name: 'space', namespace: NS.XML },\n    xmlns: { prefix: '', name: 'xmlns', namespace: NS.XMLNS },\n    'xmlns:xlink': { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }\n};\n\n//SVG tag names adjustment map\nconst SVG_TAG_NAMES_ADJUSTMENT_MAP = (exports.SVG_TAG_NAMES_ADJUSTMENT_MAP = {\n    altglyph: 'altGlyph',\n    altglyphdef: 'altGlyphDef',\n    altglyphitem: 'altGlyphItem',\n    animatecolor: 'animateColor',\n    animatemotion: 'animateMotion',\n    animatetransform: 'animateTransform',\n    clippath: 'clipPath',\n    feblend: 'feBlend',\n    fecolormatrix: 'feColorMatrix',\n    fecomponenttransfer: 'feComponentTransfer',\n    fecomposite: 'feComposite',\n    feconvolvematrix: 'feConvolveMatrix',\n    fediffuselighting: 'feDiffuseLighting',\n    fedisplacementmap: 'feDisplacementMap',\n    fedistantlight: 'feDistantLight',\n    feflood: 'feFlood',\n    fefunca: 'feFuncA',\n    fefuncb: 'feFuncB',\n    fefuncg: 'feFuncG',\n    fefuncr: 'feFuncR',\n    fegaussianblur: 'feGaussianBlur',\n    feimage: 'feImage',\n    femerge: 'feMerge',\n    femergenode: 'feMergeNode',\n    femorphology: 'feMorphology',\n    feoffset: 'feOffset',\n    fepointlight: 'fePointLight',\n    fespecularlighting: 'feSpecularLighting',\n    fespotlight: 'feSpotLight',\n    fetile: 'feTile',\n    feturbulence: 'feTurbulence',\n    foreignobject: 'foreignObject',\n    glyphref: 'glyphRef',\n    lineargradient: 'linearGradient',\n    radialgradient: 'radialGradient',\n    textpath: 'textPath'\n});\n\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = {\n    [$.B]: true,\n    [$.BIG]: true,\n    [$.BLOCKQUOTE]: true,\n    [$.BODY]: true,\n    [$.BR]: true,\n    [$.CENTER]: true,\n    [$.CODE]: true,\n    [$.DD]: true,\n    [$.DIV]: true,\n    [$.DL]: true,\n    [$.DT]: true,\n    [$.EM]: true,\n    [$.EMBED]: true,\n    [$.H1]: true,\n    [$.H2]: true,\n    [$.H3]: true,\n    [$.H4]: true,\n    [$.H5]: true,\n    [$.H6]: true,\n    [$.HEAD]: true,\n    [$.HR]: true,\n    [$.I]: true,\n    [$.IMG]: true,\n    [$.LI]: true,\n    [$.LISTING]: true,\n    [$.MENU]: true,\n    [$.META]: true,\n    [$.NOBR]: true,\n    [$.OL]: true,\n    [$.P]: true,\n    [$.PRE]: true,\n    [$.RUBY]: true,\n    [$.S]: true,\n    [$.SMALL]: true,\n    [$.SPAN]: true,\n    [$.STRONG]: true,\n    [$.STRIKE]: true,\n    [$.SUB]: true,\n    [$.SUP]: true,\n    [$.TABLE]: true,\n    [$.TT]: true,\n    [$.U]: true,\n    [$.UL]: true,\n    [$.VAR]: true\n};\n\n//Check exit from foreign content\nexports.causesExit = function(startTagToken) {\n    const tn = startTagToken.tagName;\n    const isFontWithAttrs =\n        tn === $.FONT &&\n        (Tokenizer.getTokenAttr(startTagToken, ATTRS.COLOR) !== null ||\n            Tokenizer.getTokenAttr(startTagToken, ATTRS.SIZE) !== null ||\n            Tokenizer.getTokenAttr(startTagToken, ATTRS.FACE) !== null);\n\n    return isFontWithAttrs ? true : EXITS_FOREIGN_CONTENT[tn];\n};\n\n//Token adjustments\nexports.adjustTokenMathMLAttrs = function(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n};\n\nexports.adjustTokenSVGAttrs = function(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];\n\n        if (adjustedAttrName) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n};\n\nexports.adjustTokenXMLAttrs = function(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];\n\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n};\n\nexports.adjustTokenSVGTagName = function(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP[token.tagName];\n\n    if (adjustedTagName) {\n        token.tagName = adjustedTagName;\n    }\n};\n\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\n\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\n\nexports.isIntegrationPoint = function(tn, ns, attrs, foreignNS) {\n    if ((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) {\n        return true;\n    }\n\n    if ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)) {\n        return true;\n    }\n\n    return false;\n};\n", "'use strict';\n\nconst Tokenizer = require('../tokenizer');\nconst OpenElementStack = require('./open-element-stack');\nconst FormattingElementList = require('./formatting-element-list');\nconst LocationInfoParserMixin = require('../extensions/location-info/parser-mixin');\nconst ErrorReportingParserMixin = require('../extensions/error-reporting/parser-mixin');\nconst Mixin = require('../utils/mixin');\nconst defaultTreeAdapter = require('../tree-adapters/default');\nconst mergeOptions = require('../utils/merge-options');\nconst doctype = require('../common/doctype');\nconst foreignContent = require('../common/foreign-content');\nconst ERR = require('../common/error-codes');\nconst unicode = require('../common/unicode');\nconst HTML = require('../common/html');\n\n//Aliases\nconst $ = HTML.TAG_NAMES;\nconst NS = HTML.NAMESPACES;\nconst ATTRS = HTML.ATTRS;\n\nconst DEFAULT_OPTIONS = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    onParseError: null,\n    treeAdapter: defaultTreeAdapter\n};\n\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n\n//Insertion modes\nconst INITIAL_MODE = 'INITIAL_MODE';\nconst BEFORE_HTML_MODE = 'BEFORE_HTML_MODE';\nconst BEFORE_HEAD_MODE = 'BEFORE_HEAD_MODE';\nconst IN_HEAD_MODE = 'IN_HEAD_MODE';\nconst IN_HEAD_NO_SCRIPT_MODE = 'IN_HEAD_NO_SCRIPT_MODE';\nconst AFTER_HEAD_MODE = 'AFTER_HEAD_MODE';\nconst IN_BODY_MODE = 'IN_BODY_MODE';\nconst TEXT_MODE = 'TEXT_MODE';\nconst IN_TABLE_MODE = 'IN_TABLE_MODE';\nconst IN_TABLE_TEXT_MODE = 'IN_TABLE_TEXT_MODE';\nconst IN_CAPTION_MODE = 'IN_CAPTION_MODE';\nconst IN_COLUMN_GROUP_MODE = 'IN_COLUMN_GROUP_MODE';\nconst IN_TABLE_BODY_MODE = 'IN_TABLE_BODY_MODE';\nconst IN_ROW_MODE = 'IN_ROW_MODE';\nconst IN_CELL_MODE = 'IN_CELL_MODE';\nconst IN_SELECT_MODE = 'IN_SELECT_MODE';\nconst IN_SELECT_IN_TABLE_MODE = 'IN_SELECT_IN_TABLE_MODE';\nconst IN_TEMPLATE_MODE = 'IN_TEMPLATE_MODE';\nconst AFTER_BODY_MODE = 'AFTER_BODY_MODE';\nconst IN_FRAMESET_MODE = 'IN_FRAMESET_MODE';\nconst AFTER_FRAMESET_MODE = 'AFTER_FRAMESET_MODE';\nconst AFTER_AFTER_BODY_MODE = 'AFTER_AFTER_BODY_MODE';\nconst AFTER_AFTER_FRAMESET_MODE = 'AFTER_AFTER_FRAMESET_MODE';\n\n//Insertion mode reset map\nconst INSERTION_MODE_RESET_MAP = {\n    [$.TR]: IN_ROW_MODE,\n    [$.TBODY]: IN_TABLE_BODY_MODE,\n    [$.THEAD]: IN_TABLE_BODY_MODE,\n    [$.TFOOT]: IN_TABLE_BODY_MODE,\n    [$.CAPTION]: IN_CAPTION_MODE,\n    [$.COLGROUP]: IN_COLUMN_GROUP_MODE,\n    [$.TABLE]: IN_TABLE_MODE,\n    [$.BODY]: IN_BODY_MODE,\n    [$.FRAMESET]: IN_FRAMESET_MODE\n};\n\n//Template insertion mode switch map\nconst TEMPLATE_INSERTION_MODE_SWITCH_MAP = {\n    [$.CAPTION]: IN_TABLE_MODE,\n    [$.COLGROUP]: IN_TABLE_MODE,\n    [$.TBODY]: IN_TABLE_MODE,\n    [$.TFOOT]: IN_TABLE_MODE,\n    [$.THEAD]: IN_TABLE_MODE,\n    [$.COL]: IN_COLUMN_GROUP_MODE,\n    [$.TR]: IN_TABLE_BODY_MODE,\n    [$.TD]: IN_ROW_MODE,\n    [$.TH]: IN_ROW_MODE\n};\n\n//Token handlers map for insertion modes\nconst TOKEN_HANDLERS = {\n    [INITIAL_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenInInitialMode,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInInitialMode,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: doctypeInInitialMode,\n        [Tokenizer.START_TAG_TOKEN]: tokenInInitialMode,\n        [Tokenizer.END_TAG_TOKEN]: tokenInInitialMode,\n        [Tokenizer.EOF_TOKEN]: tokenInInitialMode\n    },\n    [BEFORE_HTML_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenBeforeHtml,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenBeforeHtml,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagBeforeHtml,\n        [Tokenizer.END_TAG_TOKEN]: endTagBeforeHtml,\n        [Tokenizer.EOF_TOKEN]: tokenBeforeHtml\n    },\n    [BEFORE_HEAD_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenBeforeHead,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenBeforeHead,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\n        [Tokenizer.START_TAG_TOKEN]: startTagBeforeHead,\n        [Tokenizer.END_TAG_TOKEN]: endTagBeforeHead,\n        [Tokenizer.EOF_TOKEN]: tokenBeforeHead\n    },\n    [IN_HEAD_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenInHead,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInHead,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\n        [Tokenizer.START_TAG_TOKEN]: startTagInHead,\n        [Tokenizer.END_TAG_TOKEN]: endTagInHead,\n        [Tokenizer.EOF_TOKEN]: tokenInHead\n    },\n    [IN_HEAD_NO_SCRIPT_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenInHeadNoScript,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInHeadNoScript,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\n        [Tokenizer.START_TAG_TOKEN]: startTagInHeadNoScript,\n        [Tokenizer.END_TAG_TOKEN]: endTagInHeadNoScript,\n        [Tokenizer.EOF_TOKEN]: tokenInHeadNoScript\n    },\n    [AFTER_HEAD_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenAfterHead,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterHead,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterHead,\n        [Tokenizer.END_TAG_TOKEN]: endTagAfterHead,\n        [Tokenizer.EOF_TOKEN]: tokenAfterHead\n    },\n    [IN_BODY_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInBody,\n        [Tokenizer.END_TAG_TOKEN]: endTagInBody,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [TEXT_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: ignoreToken,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: ignoreToken,\n        [Tokenizer.END_TAG_TOKEN]: endTagInText,\n        [Tokenizer.EOF_TOKEN]: eofInText\n    },\n    [IN_TABLE_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInTable,\n        [Tokenizer.END_TAG_TOKEN]: endTagInTable,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_TABLE_TEXT_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInTableText,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInTableText,\n        [Tokenizer.COMMENT_TOKEN]: tokenInTableText,\n        [Tokenizer.DOCTYPE_TOKEN]: tokenInTableText,\n        [Tokenizer.START_TAG_TOKEN]: tokenInTableText,\n        [Tokenizer.END_TAG_TOKEN]: tokenInTableText,\n        [Tokenizer.EOF_TOKEN]: tokenInTableText\n    },\n    [IN_CAPTION_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInCaption,\n        [Tokenizer.END_TAG_TOKEN]: endTagInCaption,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_COLUMN_GROUP_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenInColumnGroup,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInColumnGroup,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInColumnGroup,\n        [Tokenizer.END_TAG_TOKEN]: endTagInColumnGroup,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_TABLE_BODY_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInTableBody,\n        [Tokenizer.END_TAG_TOKEN]: endTagInTableBody,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_ROW_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInRow,\n        [Tokenizer.END_TAG_TOKEN]: endTagInRow,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_CELL_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInCell,\n        [Tokenizer.END_TAG_TOKEN]: endTagInCell,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_SELECT_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInSelect,\n        [Tokenizer.END_TAG_TOKEN]: endTagInSelect,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_SELECT_IN_TABLE_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInSelectInTable,\n        [Tokenizer.END_TAG_TOKEN]: endTagInSelectInTable,\n        [Tokenizer.EOF_TOKEN]: eofInBody\n    },\n    [IN_TEMPLATE_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: characterInBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInTemplate,\n        [Tokenizer.END_TAG_TOKEN]: endTagInTemplate,\n        [Tokenizer.EOF_TOKEN]: eofInTemplate\n    },\n    [AFTER_BODY_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenAfterBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterBody,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendCommentToRootHtmlElement,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterBody,\n        [Tokenizer.END_TAG_TOKEN]: endTagAfterBody,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    },\n    [IN_FRAMESET_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagInFrameset,\n        [Tokenizer.END_TAG_TOKEN]: endTagInFrameset,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    },\n    [AFTER_FRAMESET_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,\n        [Tokenizer.COMMENT_TOKEN]: appendComment,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterFrameset,\n        [Tokenizer.END_TAG_TOKEN]: endTagAfterFrameset,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    },\n    [AFTER_AFTER_BODY_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: tokenAfterAfterBody,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterAfterBody,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendCommentToDocument,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterAfterBody,\n        [Tokenizer.END_TAG_TOKEN]: tokenAfterAfterBody,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    },\n    [AFTER_AFTER_FRAMESET_MODE]: {\n        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,\n        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,\n        [Tokenizer.COMMENT_TOKEN]: appendCommentToDocument,\n        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,\n        [Tokenizer.START_TAG_TOKEN]: startTagAfterAfterFrameset,\n        [Tokenizer.END_TAG_TOKEN]: ignoreToken,\n        [Tokenizer.EOF_TOKEN]: stopParsing\n    }\n};\n\n//Parser\nclass Parser {\n    constructor(options) {\n        this.options = mergeOptions(DEFAULT_OPTIONS, options);\n\n        this.treeAdapter = this.options.treeAdapter;\n        this.pendingScript = null;\n\n        if (this.options.sourceCodeLocationInfo) {\n            Mixin.install(this, LocationInfoParserMixin);\n        }\n\n        if (this.options.onParseError) {\n            Mixin.install(this, ErrorReportingParserMixin, { onParseError: this.options.onParseError });\n        }\n    }\n\n    // API\n    parse(html) {\n        const document = this.treeAdapter.createDocument();\n\n        this._bootstrap(document, null);\n        this.tokenizer.write(html, true);\n        this._runParsingLoop(null);\n\n        return document;\n    }\n\n    parseFragment(html, fragmentContext) {\n        //NOTE: use <template> element as a fragment context if context element was not provided,\n        //so we will parse in \"forgiving\" manner\n        if (!fragmentContext) {\n            fragmentContext = this.treeAdapter.createElement($.TEMPLATE, NS.HTML, []);\n        }\n\n        //NOTE: create fake element which will be used as 'document' for fragment parsing.\n        //This is important for jsdom there 'document' can't be recreated, therefore\n        //fragment parsing causes messing of the main `document`.\n        const documentMock = this.treeAdapter.createElement('documentmock', NS.HTML, []);\n\n        this._bootstrap(documentMock, fragmentContext);\n\n        if (this.treeAdapter.getTagName(fragmentContext) === $.TEMPLATE) {\n            this._pushTmplInsertionMode(IN_TEMPLATE_MODE);\n        }\n\n        this._initTokenizerForFragmentParsing();\n        this._insertFakeRootElement();\n        this._resetInsertionMode();\n        this._findFormInFragmentContext();\n        this.tokenizer.write(html, true);\n        this._runParsingLoop(null);\n\n        const rootElement = this.treeAdapter.getFirstChild(documentMock);\n        const fragment = this.treeAdapter.createDocumentFragment();\n\n        this._adoptNodes(rootElement, fragment);\n\n        return fragment;\n    }\n\n    //Bootstrap parser\n    _bootstrap(document, fragmentContext) {\n        this.tokenizer = new Tokenizer(this.options);\n\n        this.stopped = false;\n\n        this.insertionMode = INITIAL_MODE;\n        this.originalInsertionMode = '';\n\n        this.document = document;\n        this.fragmentContext = fragmentContext;\n\n        this.headElement = null;\n        this.formElement = null;\n\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n\n        this.tmplInsertionModeStack = [];\n        this.tmplInsertionModeStackTop = -1;\n        this.currentTmplInsertionMode = null;\n\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n    }\n\n    //Errors\n    _err() {\n        // NOTE: err reporting is noop by default. Enabled by mixin.\n    }\n\n    //Parsing loop\n    _runParsingLoop(scriptHandler) {\n        while (!this.stopped) {\n            this._setupTokenizerCDATAMode();\n\n            const token = this.tokenizer.getNextToken();\n\n            if (token.type === Tokenizer.HIBERNATION_TOKEN) {\n                break;\n            }\n\n            if (this.skipNextNewLine) {\n                this.skipNextNewLine = false;\n\n                if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN && token.chars[0] === '\\n') {\n                    if (token.chars.length === 1) {\n                        continue;\n                    }\n\n                    token.chars = token.chars.substr(1);\n                }\n            }\n\n            this._processInputToken(token);\n\n            if (scriptHandler && this.pendingScript) {\n                break;\n            }\n        }\n    }\n\n    runParsingLoopForCurrentChunk(writeCallback, scriptHandler) {\n        this._runParsingLoop(scriptHandler);\n\n        if (scriptHandler && this.pendingScript) {\n            const script = this.pendingScript;\n\n            this.pendingScript = null;\n\n            scriptHandler(script);\n\n            return;\n        }\n\n        if (writeCallback) {\n            writeCallback();\n        }\n    }\n\n    //Text parsing\n    _setupTokenizerCDATAMode() {\n        const current = this._getAdjustedCurrentElement();\n\n        this.tokenizer.allowCDATA =\n            current &&\n            current !== this.document &&\n            this.treeAdapter.getNamespaceURI(current) !== NS.HTML &&\n            !this._isIntegrationPoint(current);\n    }\n\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = TEXT_MODE;\n    }\n\n    switchToPlaintextParsing() {\n        this.insertionMode = TEXT_MODE;\n        this.originalInsertionMode = IN_BODY_MODE;\n        this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n    }\n\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n\n        do {\n            if (this.treeAdapter.getTagName(node) === $.FORM) {\n                this.formElement = node;\n                break;\n            }\n\n            node = this.treeAdapter.getParentNode(node);\n        } while (node);\n    }\n\n    _initTokenizerForFragmentParsing() {\n        if (this.treeAdapter.getNamespaceURI(this.fragmentContext) === NS.HTML) {\n            const tn = this.treeAdapter.getTagName(this.fragmentContext);\n\n            if (tn === $.TITLE || tn === $.TEXTAREA) {\n                this.tokenizer.state = Tokenizer.MODE.RCDATA;\n            } else if (\n                tn === $.STYLE ||\n                tn === $.XMP ||\n                tn === $.IFRAME ||\n                tn === $.NOEMBED ||\n                tn === $.NOFRAMES ||\n                tn === $.NOSCRIPT\n            ) {\n                this.tokenizer.state = Tokenizer.MODE.RAWTEXT;\n            } else if (tn === $.SCRIPT) {\n                this.tokenizer.state = Tokenizer.MODE.SCRIPT_DATA;\n            } else if (tn === $.PLAINTEXT) {\n                this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n            }\n        }\n    }\n\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n    }\n\n    _attachElementToTree(element) {\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        } else {\n            const parent = this.openElements.currentTmplContent || this.openElements.current;\n\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n\n        this._attachElementToTree(element);\n    }\n\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n\n        this._attachElementToTree(element);\n        this.openElements.push(element);\n    }\n\n    _insertFakeElement(tagName) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n\n        this._attachElementToTree(element);\n        this.openElements.push(element);\n    }\n\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl);\n        this.openElements.push(tmpl);\n    }\n\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement($.HTML, NS.HTML, []);\n\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element);\n    }\n\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n\n        this.treeAdapter.appendChild(parent, commentNode);\n    }\n\n    _insertCharacters(token) {\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentText(token.chars);\n        } else {\n            const parent = this.openElements.currentTmplContent || this.openElements.current;\n\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n    }\n\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n\n    //Token processing\n    _shouldProcessTokenInForeignContent(token) {\n        const current = this._getAdjustedCurrentElement();\n\n        if (!current || current === this.document) {\n            return false;\n        }\n\n        const ns = this.treeAdapter.getNamespaceURI(current);\n\n        if (ns === NS.HTML) {\n            return false;\n        }\n\n        if (\n            this.treeAdapter.getTagName(current) === $.ANNOTATION_XML &&\n            ns === NS.MATHML &&\n            token.type === Tokenizer.START_TAG_TOKEN &&\n            token.tagName === $.SVG\n        ) {\n            return false;\n        }\n\n        const isCharacterToken =\n            token.type === Tokenizer.CHARACTER_TOKEN ||\n            token.type === Tokenizer.NULL_CHARACTER_TOKEN ||\n            token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN;\n\n        const isMathMLTextStartTag =\n            token.type === Tokenizer.START_TAG_TOKEN && token.tagName !== $.MGLYPH && token.tagName !== $.MALIGNMARK;\n\n        if ((isMathMLTextStartTag || isCharacterToken) && this._isIntegrationPoint(current, NS.MATHML)) {\n            return false;\n        }\n\n        if (\n            (token.type === Tokenizer.START_TAG_TOKEN || isCharacterToken) &&\n            this._isIntegrationPoint(current, NS.HTML)\n        ) {\n            return false;\n        }\n\n        return token.type !== Tokenizer.EOF_TOKEN;\n    }\n\n    _processToken(token) {\n        TOKEN_HANDLERS[this.insertionMode][token.type](this, token);\n    }\n\n    _processTokenInBodyMode(token) {\n        TOKEN_HANDLERS[IN_BODY_MODE][token.type](this, token);\n    }\n\n    _processTokenInForeignContent(token) {\n        if (token.type === Tokenizer.CHARACTER_TOKEN) {\n            characterInForeignContent(this, token);\n        } else if (token.type === Tokenizer.NULL_CHARACTER_TOKEN) {\n            nullCharacterInForeignContent(this, token);\n        } else if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN) {\n            insertCharacters(this, token);\n        } else if (token.type === Tokenizer.COMMENT_TOKEN) {\n            appendComment(this, token);\n        } else if (token.type === Tokenizer.START_TAG_TOKEN) {\n            startTagInForeignContent(this, token);\n        } else if (token.type === Tokenizer.END_TAG_TOKEN) {\n            endTagInForeignContent(this, token);\n        }\n    }\n\n    _processInputToken(token) {\n        if (this._shouldProcessTokenInForeignContent(token)) {\n            this._processTokenInForeignContent(token);\n        } else {\n            this._processToken(token);\n        }\n\n        if (token.type === Tokenizer.START_TAG_TOKEN && token.selfClosing && !token.ackSelfClosing) {\n            this._err(ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n\n    //Integration points\n    _isIntegrationPoint(element, foreignNS) {\n        const tn = this.treeAdapter.getTagName(element);\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n\n        return foreignContent.isIntegrationPoint(tn, ns, attrs, foreignNS);\n    }\n\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.length;\n\n        if (listLength) {\n            let unopenIdx = listLength;\n            let entry = null;\n\n            do {\n                unopenIdx--;\n                entry = this.activeFormattingElements.entries[unopenIdx];\n\n                if (entry.type === FormattingElementList.MARKER_ENTRY || this.openElements.contains(entry.element)) {\n                    unopenIdx++;\n                    break;\n                }\n            } while (unopenIdx > 0);\n\n            for (let i = unopenIdx; i < listLength; i++) {\n                entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = IN_ROW_MODE;\n    }\n\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop, last = false; i >= 0; i--) {\n            let element = this.openElements.items[i];\n\n            if (i === 0) {\n                last = true;\n\n                if (this.fragmentContext) {\n                    element = this.fragmentContext;\n                }\n            }\n\n            const tn = this.treeAdapter.getTagName(element);\n            const newInsertionMode = INSERTION_MODE_RESET_MAP[tn];\n\n            if (newInsertionMode) {\n                this.insertionMode = newInsertionMode;\n                break;\n            } else if (!last && (tn === $.TD || tn === $.TH)) {\n                this.insertionMode = IN_CELL_MODE;\n                break;\n            } else if (!last && tn === $.HEAD) {\n                this.insertionMode = IN_HEAD_MODE;\n                break;\n            } else if (tn === $.SELECT) {\n                this._resetInsertionModeForSelect(i);\n                break;\n            } else if (tn === $.TEMPLATE) {\n                this.insertionMode = this.currentTmplInsertionMode;\n                break;\n            } else if (tn === $.HTML) {\n                this.insertionMode = this.headElement ? AFTER_HEAD_MODE : BEFORE_HEAD_MODE;\n                break;\n            } else if (last) {\n                this.insertionMode = IN_BODY_MODE;\n                break;\n            }\n        }\n    }\n\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const ancestor = this.openElements.items[i];\n                const tn = this.treeAdapter.getTagName(ancestor);\n\n                if (tn === $.TEMPLATE) {\n                    break;\n                } else if (tn === $.TABLE) {\n                    this.insertionMode = IN_SELECT_IN_TABLE_MODE;\n                    return;\n                }\n            }\n        }\n\n        this.insertionMode = IN_SELECT_MODE;\n    }\n\n    _pushTmplInsertionMode(mode) {\n        this.tmplInsertionModeStack.push(mode);\n        this.tmplInsertionModeStackTop++;\n        this.currentTmplInsertionMode = mode;\n    }\n\n    _popTmplInsertionMode() {\n        this.tmplInsertionModeStack.pop();\n        this.tmplInsertionModeStackTop--;\n        this.currentTmplInsertionMode = this.tmplInsertionModeStack[this.tmplInsertionModeStackTop];\n    }\n\n    //Foster parenting\n    _isElementCausesFosterParenting(element) {\n        const tn = this.treeAdapter.getTagName(element);\n\n        return tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR;\n    }\n\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.current);\n    }\n\n    _findFosterParentingLocation() {\n        const location = {\n            parent: null,\n            beforeElement: null\n        };\n\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            const tn = this.treeAdapter.getTagName(openElement);\n            const ns = this.treeAdapter.getNamespaceURI(openElement);\n\n            if (tn === $.TEMPLATE && ns === NS.HTML) {\n                location.parent = this.treeAdapter.getTemplateContent(openElement);\n                break;\n            } else if (tn === $.TABLE) {\n                location.parent = this.treeAdapter.getParentNode(openElement);\n\n                if (location.parent) {\n                    location.beforeElement = openElement;\n                } else {\n                    location.parent = this.openElements.items[i - 1];\n                }\n\n                break;\n            }\n        }\n\n        if (!location.parent) {\n            location.parent = this.openElements.items[0];\n        }\n\n        return location;\n    }\n\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        } else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n\n    _fosterParentText(chars) {\n        const location = this._findFosterParentingLocation();\n\n        if (location.beforeElement) {\n            this.treeAdapter.insertTextBefore(location.parent, chars, location.beforeElement);\n        } else {\n            this.treeAdapter.insertText(location.parent, chars);\n        }\n    }\n\n    //Special elements\n    _isSpecialElement(element) {\n        const tn = this.treeAdapter.getTagName(element);\n        const ns = this.treeAdapter.getNamespaceURI(element);\n\n        return HTML.SPECIAL_ELEMENTS[ns][tn];\n    }\n}\n\nmodule.exports = Parser;\n\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        } else if (!p.openElements.hasInScope(token.tagName)) {\n            formattingElementEntry = null;\n        }\n    } else {\n        genericEndTagInBody(p, token);\n    }\n\n    return formattingElementEntry;\n}\n\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const element = p.openElements.items[i];\n\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n\n        if (p._isSpecialElement(element)) {\n            furthestBlock = element;\n        }\n    }\n\n    if (!furthestBlock) {\n        p.openElements.popUntilElementPopped(formattingElementEntry.element);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n\n    return furthestBlock;\n}\n\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n\n            p.openElements.remove(element);\n        } else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n\n    return lastElement;\n}\n\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n\n    return newElement;\n}\n\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    if (p._isElementCausesFosterParenting(commonAncestor)) {\n        p._fosterParentElement(lastElement);\n    } else {\n        const tn = p.treeAdapter.getTagName(commonAncestor);\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n\n        if (tn === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const token = formattingElementEntry.token;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, formattingElementEntry.token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement);\n}\n\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    let formattingElementEntry;\n\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        formattingElementEntry = aaObtainFormattingElementEntry(p, token, formattingElementEntry);\n\n        if (!formattingElementEntry) {\n            break;\n        }\n\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n\n        if (!furthestBlock) {\n            break;\n        }\n\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n\n        p.treeAdapter.detachNode(lastElement);\n        aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n\n//Generic token handlers\n//------------------------------------------------------------------\nfunction ignoreToken() {\n    //NOTE: do nothing =)\n}\n\nfunction misplacedDoctype(p) {\n    p._err(ERR.misplacedDoctype);\n}\n\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContent || p.openElements.current);\n}\n\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\n\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\n\nfunction insertCharacters(p, token) {\n    p._insertCharacters(token);\n}\n\nfunction stopParsing(p) {\n    p.stopped = true;\n}\n\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n\n    const mode = token.forceQuirks ? HTML.DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n\n    if (!doctype.isConforming(token)) {\n        p._err(ERR.nonConformingDoctype);\n    }\n\n    p.treeAdapter.setDocumentMode(p.document, mode);\n\n    p.insertionMode = BEFORE_HTML_MODE;\n}\n\nfunction tokenInInitialMode(p, token) {\n    p._err(ERR.missingDoctype, { beforeToken: true });\n    p.treeAdapter.setDocumentMode(p.document, HTML.DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = BEFORE_HTML_MODE;\n    p._processToken(token);\n}\n\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagName === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = BEFORE_HEAD_MODE;\n    } else {\n        tokenBeforeHtml(p, token);\n    }\n}\n\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\n\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = BEFORE_HEAD_MODE;\n    p._processToken(token);\n}\n\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.HEAD) {\n        p._insertElement(token, NS.HTML);\n        p.headElement = p.openElements.current;\n        p.insertionMode = IN_HEAD_MODE;\n    } else {\n        tokenBeforeHead(p, token);\n    }\n}\n\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    } else {\n        p._err(ERR.endTagWithoutMatchingOpenElement);\n    }\n}\n\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement($.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = IN_HEAD_MODE;\n    p._processToken(token);\n}\n\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.BASE || tn === $.BASEFONT || tn === $.BGSOUND || tn === $.LINK || tn === $.META) {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n    } else if (tn === $.TITLE) {\n        p._switchToTextParsing(token, Tokenizer.MODE.RCDATA);\n    } else if (tn === $.NOSCRIPT) {\n        if (p.options.scriptingEnabled) {\n            p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n        } else {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = IN_HEAD_NO_SCRIPT_MODE;\n        }\n    } else if (tn === $.NOFRAMES || tn === $.STYLE) {\n        p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n    } else if (tn === $.SCRIPT) {\n        p._switchToTextParsing(token, Tokenizer.MODE.SCRIPT_DATA);\n    } else if (tn === $.TEMPLATE) {\n        p._insertTemplate(token, NS.HTML);\n        p.activeFormattingElements.insertMarker();\n        p.framesetOk = false;\n        p.insertionMode = IN_TEMPLATE_MODE;\n        p._pushTmplInsertionMode(IN_TEMPLATE_MODE);\n    } else if (tn === $.HEAD) {\n        p._err(ERR.misplacedStartTagForHeadElement);\n    } else {\n        tokenInHead(p, token);\n    }\n}\n\nfunction endTagInHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HEAD) {\n        p.openElements.pop();\n        p.insertionMode = AFTER_HEAD_MODE;\n    } else if (tn === $.BODY || tn === $.BR || tn === $.HTML) {\n        tokenInHead(p, token);\n    } else if (tn === $.TEMPLATE) {\n        if (p.openElements.tmplCount > 0) {\n            p.openElements.generateImpliedEndTagsThoroughly();\n\n            if (p.openElements.currentTagName !== $.TEMPLATE) {\n                p._err(ERR.closingOfElementWithOpenChildElements);\n            }\n\n            p.openElements.popUntilTagNamePopped($.TEMPLATE);\n            p.activeFormattingElements.clearToLastMarker();\n            p._popTmplInsertionMode();\n            p._resetInsertionMode();\n        } else {\n            p._err(ERR.endTagWithoutMatchingOpenElement);\n        }\n    } else {\n        p._err(ERR.endTagWithoutMatchingOpenElement);\n    }\n}\n\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = AFTER_HEAD_MODE;\n    p._processToken(token);\n}\n\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (\n        tn === $.BASEFONT ||\n        tn === $.BGSOUND ||\n        tn === $.HEAD ||\n        tn === $.LINK ||\n        tn === $.META ||\n        tn === $.NOFRAMES ||\n        tn === $.STYLE\n    ) {\n        startTagInHead(p, token);\n    } else if (tn === $.NOSCRIPT) {\n        p._err(ERR.nestedNoscriptInHead);\n    } else {\n        tokenInHeadNoScript(p, token);\n    }\n}\n\nfunction endTagInHeadNoScript(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.NOSCRIPT) {\n        p.openElements.pop();\n        p.insertionMode = IN_HEAD_MODE;\n    } else if (tn === $.BR) {\n        tokenInHeadNoScript(p, token);\n    } else {\n        p._err(ERR.endTagWithoutMatchingOpenElement);\n    }\n}\n\nfunction tokenInHeadNoScript(p, token) {\n    const errCode =\n        token.type === Tokenizer.EOF_TOKEN ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n\n    p._err(errCode);\n    p.openElements.pop();\n    p.insertionMode = IN_HEAD_MODE;\n    p._processToken(token);\n}\n\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.BODY) {\n        p._insertElement(token, NS.HTML);\n        p.framesetOk = false;\n        p.insertionMode = IN_BODY_MODE;\n    } else if (tn === $.FRAMESET) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_FRAMESET_MODE;\n    } else if (\n        tn === $.BASE ||\n        tn === $.BASEFONT ||\n        tn === $.BGSOUND ||\n        tn === $.LINK ||\n        tn === $.META ||\n        tn === $.NOFRAMES ||\n        tn === $.SCRIPT ||\n        tn === $.STYLE ||\n        tn === $.TEMPLATE ||\n        tn === $.TITLE\n    ) {\n        p._err(ERR.abandonedHeadElementChild);\n        p.openElements.push(p.headElement);\n        startTagInHead(p, token);\n        p.openElements.remove(p.headElement);\n    } else if (tn === $.HEAD) {\n        p._err(ERR.misplacedStartTagForHeadElement);\n    } else {\n        tokenAfterHead(p, token);\n    }\n}\n\nfunction endTagAfterHead(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenAfterHead(p, token);\n    } else if (tn === $.TEMPLATE) {\n        endTagInHead(p, token);\n    } else {\n        p._err(ERR.endTagWithoutMatchingOpenElement);\n    }\n}\n\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement($.BODY);\n    p.insertionMode = IN_BODY_MODE;\n    p._processToken(token);\n}\n\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\n\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\n\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\n\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\n\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_FRAMESET_MODE;\n    }\n}\n\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    const tn = p.openElements.currentTagName;\n\n    if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {\n        p.openElements.pop();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\n\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n\n        p._insertElement(token, NS.HTML);\n\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\n\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n\n    const tn = token.tagName;\n\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const element = p.openElements.items[i];\n        const elementTn = p.treeAdapter.getTagName(element);\n        let closeTn = null;\n\n        if (tn === $.LI && elementTn === $.LI) {\n            closeTn = $.LI;\n        } else if ((tn === $.DD || tn === $.DT) && (elementTn === $.DD || elementTn === $.DT)) {\n            closeTn = elementTn;\n        }\n\n        if (closeTn) {\n            p.openElements.generateImpliedEndTagsWithExclusion(closeTn);\n            p.openElements.popUntilTagNamePopped(closeTn);\n            break;\n        }\n\n        if (elementTn !== $.ADDRESS && elementTn !== $.DIV && elementTn !== $.P && p._isSpecialElement(element)) {\n            break;\n        }\n    }\n\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\n}\n\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\n\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName($.A);\n\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\n\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\n\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\n\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\n\nfunction tableStartTagInBody(p, token) {\n    if (\n        p.treeAdapter.getDocumentMode(p.document) !== HTML.DOCUMENT_MODE.QUIRKS &&\n        p.openElements.hasInButtonScope($.P)\n    ) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = IN_TABLE_MODE;\n}\n\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\n\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n\n    const inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);\n\n    if (!inputType || inputType.toLowerCase() !== HIDDEN_INPUT_TYPE) {\n        p.framesetOk = false;\n    }\n\n    token.ackSelfClosing = true;\n}\n\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\n\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\n\nfunction imageStartTagInBody(p, token) {\n    token.tagName = $.IMG;\n    areaStartTagInBody(p, token);\n}\n\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = Tokenizer.MODE.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = TEXT_MODE;\n}\n\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n}\n\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n}\n\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as a rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);\n}\n\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n\n    if (\n        p.insertionMode === IN_TABLE_MODE ||\n        p.insertionMode === IN_CAPTION_MODE ||\n        p.insertionMode === IN_TABLE_BODY_MODE ||\n        p.insertionMode === IN_ROW_MODE ||\n        p.insertionMode === IN_CELL_MODE\n    ) {\n        p.insertionMode = IN_SELECT_IN_TABLE_MODE;\n    } else {\n        p.insertionMode = IN_SELECT_MODE;\n    }\n}\n\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagName === $.OPTION) {\n        p.openElements.pop();\n    }\n\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\n\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction menuStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n\n    p._insertElement(token, NS.HTML);\n}\n\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    } else {\n        p._insertElement(token, NS.MATHML);\n    }\n\n    token.ackSelfClosing = true;\n}\n\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    } else {\n        p._insertElement(token, NS.SVG);\n    }\n\n    token.ackSelfClosing = true;\n}\n\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction startTagInBody(p, token) {\n    const tn = token.tagName;\n\n    switch (tn.length) {\n        case 1:\n            if (tn === $.I || tn === $.S || tn === $.B || tn === $.U) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.P) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.A) {\n                aStartTagInBody(p, token);\n            } else {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 2:\n            if (tn === $.DL || tn === $.OL || tn === $.UL) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {\n                numberedHeaderStartTagInBody(p, token);\n            } else if (tn === $.LI || tn === $.DD || tn === $.DT) {\n                listItemStartTagInBody(p, token);\n            } else if (tn === $.EM || tn === $.TT) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.BR) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.HR) {\n                hrStartTagInBody(p, token);\n            } else if (tn === $.RB) {\n                rbStartTagInBody(p, token);\n            } else if (tn === $.RT || tn === $.RP) {\n                rtStartTagInBody(p, token);\n            } else if (tn !== $.TH && tn !== $.TD && tn !== $.TR) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 3:\n            if (tn === $.DIV || tn === $.DIR || tn === $.NAV) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.PRE) {\n                preStartTagInBody(p, token);\n            } else if (tn === $.BIG) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.IMG || tn === $.WBR) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.XMP) {\n                xmpStartTagInBody(p, token);\n            } else if (tn === $.SVG) {\n                svgStartTagInBody(p, token);\n            } else if (tn === $.RTC) {\n                rbStartTagInBody(p, token);\n            } else if (tn !== $.COL) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.HTML) {\n                htmlStartTagInBody(p, token);\n            } else if (tn === $.BASE || tn === $.LINK || tn === $.META) {\n                startTagInHead(p, token);\n            } else if (tn === $.BODY) {\n                bodyStartTagInBody(p, token);\n            } else if (tn === $.MAIN || tn === $.MENU) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.FORM) {\n                formStartTagInBody(p, token);\n            } else if (tn === $.CODE || tn === $.FONT) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.NOBR) {\n                nobrStartTagInBody(p, token);\n            } else if (tn === $.AREA) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.MATH) {\n                mathStartTagInBody(p, token);\n            } else if (tn === $.MENU) {\n                menuStartTagInBody(p, token);\n            } else if (tn !== $.HEAD) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.STYLE || tn === $.TITLE) {\n                startTagInHead(p, token);\n            } else if (tn === $.ASIDE) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.SMALL) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.TABLE) {\n                tableStartTagInBody(p, token);\n            } else if (tn === $.EMBED) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.INPUT) {\n                inputStartTagInBody(p, token);\n            } else if (tn === $.PARAM || tn === $.TRACK) {\n                paramStartTagInBody(p, token);\n            } else if (tn === $.IMAGE) {\n                imageStartTagInBody(p, token);\n            } else if (tn !== $.FRAME && tn !== $.TBODY && tn !== $.TFOOT && tn !== $.THEAD) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 6:\n            if (tn === $.SCRIPT) {\n                startTagInHead(p, token);\n            } else if (\n                tn === $.CENTER ||\n                tn === $.FIGURE ||\n                tn === $.FOOTER ||\n                tn === $.HEADER ||\n                tn === $.HGROUP ||\n                tn === $.DIALOG\n            ) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.BUTTON) {\n                buttonStartTagInBody(p, token);\n            } else if (tn === $.STRIKE || tn === $.STRONG) {\n                bStartTagInBody(p, token);\n            } else if (tn === $.APPLET || tn === $.OBJECT) {\n                appletStartTagInBody(p, token);\n            } else if (tn === $.KEYGEN) {\n                areaStartTagInBody(p, token);\n            } else if (tn === $.SOURCE) {\n                paramStartTagInBody(p, token);\n            } else if (tn === $.IFRAME) {\n                iframeStartTagInBody(p, token);\n            } else if (tn === $.SELECT) {\n                selectStartTagInBody(p, token);\n            } else if (tn === $.OPTION) {\n                optgroupStartTagInBody(p, token);\n            } else {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 7:\n            if (tn === $.BGSOUND) {\n                startTagInHead(p, token);\n            } else if (\n                tn === $.DETAILS ||\n                tn === $.ADDRESS ||\n                tn === $.ARTICLE ||\n                tn === $.SECTION ||\n                tn === $.SUMMARY\n            ) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.LISTING) {\n                preStartTagInBody(p, token);\n            } else if (tn === $.MARQUEE) {\n                appletStartTagInBody(p, token);\n            } else if (tn === $.NOEMBED) {\n                noembedStartTagInBody(p, token);\n            } else if (tn !== $.CAPTION) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 8:\n            if (tn === $.BASEFONT) {\n                startTagInHead(p, token);\n            } else if (tn === $.FRAMESET) {\n                framesetStartTagInBody(p, token);\n            } else if (tn === $.FIELDSET) {\n                addressStartTagInBody(p, token);\n            } else if (tn === $.TEXTAREA) {\n                textareaStartTagInBody(p, token);\n            } else if (tn === $.TEMPLATE) {\n                startTagInHead(p, token);\n            } else if (tn === $.NOSCRIPT) {\n                if (p.options.scriptingEnabled) {\n                    noembedStartTagInBody(p, token);\n                } else {\n                    genericStartTagInBody(p, token);\n                }\n            } else if (tn === $.OPTGROUP) {\n                optgroupStartTagInBody(p, token);\n            } else if (tn !== $.COLGROUP) {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 9:\n            if (tn === $.PLAINTEXT) {\n                plaintextStartTagInBody(p, token);\n            } else {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        case 10:\n            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION) {\n                addressStartTagInBody(p, token);\n            } else {\n                genericStartTagInBody(p, token);\n            }\n\n            break;\n\n        default:\n            genericStartTagInBody(p, token);\n    }\n}\n\nfunction bodyEndTagInBody(p) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = AFTER_BODY_MODE;\n    }\n}\n\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = AFTER_BODY_MODE;\n        p._processToken(token);\n    }\n}\n\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagName;\n\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\n\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const formElement = p.formElement;\n\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        } else {\n            p.openElements.remove(formElement);\n        }\n    }\n}\n\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement($.P);\n    }\n\n    p._closePElement();\n}\n\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\n\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagName;\n\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\n\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\n\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagName;\n\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\n\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement($.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\n\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n\n        if (p.treeAdapter.getTagName(element) === tn) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tn);\n            p.openElements.popUntilElementPopped(element);\n            break;\n        }\n\n        if (p._isSpecialElement(element)) {\n            break;\n        }\n    }\n}\n\n//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.\n//It's faster than using dictionary.\nfunction endTagInBody(p, token) {\n    const tn = token.tagName;\n\n    switch (tn.length) {\n        case 1:\n            if (tn === $.A || tn === $.B || tn === $.I || tn === $.S || tn === $.U) {\n                callAdoptionAgency(p, token);\n            } else if (tn === $.P) {\n                pEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 2:\n            if (tn === $.DL || tn === $.UL || tn === $.OL) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.LI) {\n                liEndTagInBody(p, token);\n            } else if (tn === $.DD || tn === $.DT) {\n                ddEndTagInBody(p, token);\n            } else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {\n                numberedHeaderEndTagInBody(p, token);\n            } else if (tn === $.BR) {\n                brEndTagInBody(p, token);\n            } else if (tn === $.EM || tn === $.TT) {\n                callAdoptionAgency(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 3:\n            if (tn === $.BIG) {\n                callAdoptionAgency(p, token);\n            } else if (tn === $.DIR || tn === $.DIV || tn === $.NAV || tn === $.PRE) {\n                addressEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.BODY) {\n                bodyEndTagInBody(p, token);\n            } else if (tn === $.HTML) {\n                htmlEndTagInBody(p, token);\n            } else if (tn === $.FORM) {\n                formEndTagInBody(p, token);\n            } else if (tn === $.CODE || tn === $.FONT || tn === $.NOBR) {\n                callAdoptionAgency(p, token);\n            } else if (tn === $.MAIN || tn === $.MENU) {\n                addressEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.ASIDE) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.SMALL) {\n                callAdoptionAgency(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 6:\n            if (\n                tn === $.CENTER ||\n                tn === $.FIGURE ||\n                tn === $.FOOTER ||\n                tn === $.HEADER ||\n                tn === $.HGROUP ||\n                tn === $.DIALOG\n            ) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.APPLET || tn === $.OBJECT) {\n                appletEndTagInBody(p, token);\n            } else if (tn === $.STRIKE || tn === $.STRONG) {\n                callAdoptionAgency(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 7:\n            if (\n                tn === $.ADDRESS ||\n                tn === $.ARTICLE ||\n                tn === $.DETAILS ||\n                tn === $.SECTION ||\n                tn === $.SUMMARY ||\n                tn === $.LISTING\n            ) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.MARQUEE) {\n                appletEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 8:\n            if (tn === $.FIELDSET) {\n                addressEndTagInBody(p, token);\n            } else if (tn === $.TEMPLATE) {\n                endTagInHead(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        case 10:\n            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION) {\n                addressEndTagInBody(p, token);\n            } else {\n                genericEndTagInBody(p, token);\n            }\n\n            break;\n\n        default:\n            genericEndTagInBody(p, token);\n    }\n}\n\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStackTop > -1) {\n        eofInTemplate(p, token);\n    } else {\n        p.stopped = true;\n    }\n}\n\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    if (token.tagName === $.SCRIPT) {\n        p.pendingScript = p.openElements.current;\n    }\n\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\n\nfunction eofInText(p, token) {\n    p._err(ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    const curTn = p.openElements.currentTagName;\n\n    if (curTn === $.TABLE || curTn === $.TBODY || curTn === $.TFOOT || curTn === $.THEAD || curTn === $.TR) {\n        p.pendingCharacterTokens = [];\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = IN_TABLE_TEXT_MODE;\n        p._processToken(token);\n    } else {\n        tokenInTable(p, token);\n    }\n}\n\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = IN_CAPTION_MODE;\n}\n\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = IN_COLUMN_GROUP_MODE;\n}\n\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement($.COLGROUP);\n    p.insertionMode = IN_COLUMN_GROUP_MODE;\n    p._processToken(token);\n}\n\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = IN_TABLE_BODY_MODE;\n}\n\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement($.TBODY);\n    p.insertionMode = IN_TABLE_BODY_MODE;\n    p._processToken(token);\n}\n\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processToken(token);\n    }\n}\n\nfunction inputStartTagInTable(p, token) {\n    const inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);\n\n    if (inputType && inputType.toLowerCase() === HIDDEN_INPUT_TYPE) {\n        p._appendElement(token, NS.HTML);\n    } else {\n        tokenInTable(p, token);\n    }\n\n    token.ackSelfClosing = true;\n}\n\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\n\nfunction startTagInTable(p, token) {\n    const tn = token.tagName;\n\n    switch (tn.length) {\n        case 2:\n            if (tn === $.TD || tn === $.TH || tn === $.TR) {\n                tdStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 3:\n            if (tn === $.COL) {\n                colStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 4:\n            if (tn === $.FORM) {\n                formStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 5:\n            if (tn === $.TABLE) {\n                tableStartTagInTable(p, token);\n            } else if (tn === $.STYLE) {\n                startTagInHead(p, token);\n            } else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\n                tbodyStartTagInTable(p, token);\n            } else if (tn === $.INPUT) {\n                inputStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 6:\n            if (tn === $.SCRIPT) {\n                startTagInHead(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 7:\n            if (tn === $.CAPTION) {\n                captionStartTagInTable(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        case 8:\n            if (tn === $.COLGROUP) {\n                colgroupStartTagInTable(p, token);\n            } else if (tn === $.TEMPLATE) {\n                startTagInHead(p, token);\n            } else {\n                tokenInTable(p, token);\n            }\n\n            break;\n\n        default:\n            tokenInTable(p, token);\n    }\n}\n\nfunction endTagInTable(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TABLE) {\n        if (p.openElements.hasInTableScope($.TABLE)) {\n            p.openElements.popUntilTagNamePopped($.TABLE);\n            p._resetInsertionMode();\n        }\n    } else if (tn === $.TEMPLATE) {\n        endTagInHead(p, token);\n    } else if (\n        tn !== $.BODY &&\n        tn !== $.CAPTION &&\n        tn !== $.COL &&\n        tn !== $.COLGROUP &&\n        tn !== $.HTML &&\n        tn !== $.TBODY &&\n        tn !== $.TD &&\n        tn !== $.TFOOT &&\n        tn !== $.TH &&\n        tn !== $.THEAD &&\n        tn !== $.TR\n    ) {\n        tokenInTable(p, token);\n    }\n}\n\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n\n    p.fosterParentingEnabled = true;\n    p._processTokenInBodyMode(token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\n\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\n\nfunction tokenInTableText(p, token) {\n    let i = 0;\n\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    } else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCaption(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.CAPTION ||\n        tn === $.COL ||\n        tn === $.COLGROUP ||\n        tn === $.TBODY ||\n        tn === $.TD ||\n        tn === $.TFOOT ||\n        tn === $.TH ||\n        tn === $.THEAD ||\n        tn === $.TR\n    ) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = IN_TABLE_MODE;\n            p._processToken(token);\n        }\n    } else {\n        startTagInBody(p, token);\n    }\n}\n\nfunction endTagInCaption(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.CAPTION || tn === $.TABLE) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = IN_TABLE_MODE;\n\n            if (tn === $.TABLE) {\n                p._processToken(token);\n            }\n        }\n    } else if (\n        tn !== $.BODY &&\n        tn !== $.COL &&\n        tn !== $.COLGROUP &&\n        tn !== $.HTML &&\n        tn !== $.TBODY &&\n        tn !== $.TD &&\n        tn !== $.TFOOT &&\n        tn !== $.TH &&\n        tn !== $.THEAD &&\n        tn !== $.TR\n    ) {\n        endTagInBody(p, token);\n    }\n}\n\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.COL) {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n    } else if (tn === $.TEMPLATE) {\n        startTagInHead(p, token);\n    } else {\n        tokenInColumnGroup(p, token);\n    }\n}\n\nfunction endTagInColumnGroup(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.COLGROUP) {\n        if (p.openElements.currentTagName === $.COLGROUP) {\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n        }\n    } else if (tn === $.TEMPLATE) {\n        endTagInHead(p, token);\n    } else if (tn !== $.COL) {\n        tokenInColumnGroup(p, token);\n    }\n}\n\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagName === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = IN_TABLE_MODE;\n        p._processToken(token);\n    }\n}\n\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TR) {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_ROW_MODE;\n    } else if (tn === $.TH || tn === $.TD) {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertFakeElement($.TR);\n        p.insertionMode = IN_ROW_MODE;\n        p._processToken(token);\n    } else if (\n        tn === $.CAPTION ||\n        tn === $.COL ||\n        tn === $.COLGROUP ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD\n    ) {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n            p.openElements.clearBackToTableBodyContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n            p._processToken(token);\n        }\n    } else {\n        startTagInTable(p, token);\n    }\n}\n\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.clearBackToTableBodyContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n        }\n    } else if (tn === $.TABLE) {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n            p.openElements.clearBackToTableBodyContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_MODE;\n            p._processToken(token);\n        }\n    } else if (\n        (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP) ||\n        (tn !== $.HTML && tn !== $.TD && tn !== $.TH && tn !== $.TR)\n    ) {\n        endTagInTable(p, token);\n    }\n}\n\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TH || tn === $.TD) {\n        p.openElements.clearBackToTableRowContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = IN_CELL_MODE;\n        p.activeFormattingElements.insertMarker();\n    } else if (\n        tn === $.CAPTION ||\n        tn === $.COL ||\n        tn === $.COLGROUP ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR\n    ) {\n        if (p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n            p._processToken(token);\n        }\n    } else {\n        startTagInTable(p, token);\n    }\n}\n\nfunction endTagInRow(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TR) {\n        if (p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n        }\n    } else if (tn === $.TABLE) {\n        if (p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n            p._processToken(token);\n        }\n    } else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {\n        if (p.openElements.hasInTableScope(tn) || p.openElements.hasInTableScope($.TR)) {\n            p.openElements.clearBackToTableRowContext();\n            p.openElements.pop();\n            p.insertionMode = IN_TABLE_BODY_MODE;\n            p._processToken(token);\n        }\n    } else if (\n        (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP) ||\n        (tn !== $.HTML && tn !== $.TD && tn !== $.TH)\n    ) {\n        endTagInTable(p, token);\n    }\n}\n\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.CAPTION ||\n        tn === $.COL ||\n        tn === $.COLGROUP ||\n        tn === $.TBODY ||\n        tn === $.TD ||\n        tn === $.TFOOT ||\n        tn === $.TH ||\n        tn === $.THEAD ||\n        tn === $.TR\n    ) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            p._processToken(token);\n        }\n    } else {\n        startTagInBody(p, token);\n    }\n}\n\nfunction endTagInCell(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.TD || tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped(tn);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = IN_ROW_MODE;\n        }\n    } else if (tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p._closeTableCell();\n            p._processToken(token);\n        }\n    } else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP && tn !== $.HTML) {\n        endTagInBody(p, token);\n    }\n}\n\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.OPTION) {\n        if (p.openElements.currentTagName === $.OPTION) {\n            p.openElements.pop();\n        }\n\n        p._insertElement(token, NS.HTML);\n    } else if (tn === $.OPTGROUP) {\n        if (p.openElements.currentTagName === $.OPTION) {\n            p.openElements.pop();\n        }\n\n        if (p.openElements.currentTagName === $.OPTGROUP) {\n            p.openElements.pop();\n        }\n\n        p._insertElement(token, NS.HTML);\n    } else if (tn === $.INPUT || tn === $.KEYGEN || tn === $.TEXTAREA || tn === $.SELECT) {\n        if (p.openElements.hasInSelectScope($.SELECT)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n\n            if (tn !== $.SELECT) {\n                p._processToken(token);\n            }\n        }\n    } else if (tn === $.SCRIPT || tn === $.TEMPLATE) {\n        startTagInHead(p, token);\n    }\n}\n\nfunction endTagInSelect(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.OPTGROUP) {\n        const prevOpenElement = p.openElements.items[p.openElements.stackTop - 1];\n        const prevOpenElementTn = prevOpenElement && p.treeAdapter.getTagName(prevOpenElement);\n\n        if (p.openElements.currentTagName === $.OPTION && prevOpenElementTn === $.OPTGROUP) {\n            p.openElements.pop();\n        }\n\n        if (p.openElements.currentTagName === $.OPTGROUP) {\n            p.openElements.pop();\n        }\n    } else if (tn === $.OPTION) {\n        if (p.openElements.currentTagName === $.OPTION) {\n            p.openElements.pop();\n        }\n    } else if (tn === $.SELECT && p.openElements.hasInSelectScope($.SELECT)) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n    } else if (tn === $.TEMPLATE) {\n        endTagInHead(p, token);\n    }\n}\n\n//12.2.5.4.17 The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH\n    ) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processToken(token);\n    } else {\n        startTagInSelect(p, token);\n    }\n}\n\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH\n    ) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p._processToken(token);\n        }\n    } else {\n        endTagInSelect(p, token);\n    }\n}\n\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    const tn = token.tagName;\n\n    if (\n        tn === $.BASE ||\n        tn === $.BASEFONT ||\n        tn === $.BGSOUND ||\n        tn === $.LINK ||\n        tn === $.META ||\n        tn === $.NOFRAMES ||\n        tn === $.SCRIPT ||\n        tn === $.STYLE ||\n        tn === $.TEMPLATE ||\n        tn === $.TITLE\n    ) {\n        startTagInHead(p, token);\n    } else {\n        const newInsertionMode = TEMPLATE_INSERTION_MODE_SWITCH_MAP[tn] || IN_BODY_MODE;\n\n        p._popTmplInsertionMode();\n        p._pushTmplInsertionMode(newInsertionMode);\n        p.insertionMode = newInsertionMode;\n        p._processToken(token);\n    }\n}\n\nfunction endTagInTemplate(p, token) {\n    if (token.tagName === $.TEMPLATE) {\n        endTagInHead(p, token);\n    }\n}\n\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p._popTmplInsertionMode();\n        p._resetInsertionMode();\n        p._processToken(token);\n    } else {\n        p.stopped = true;\n    }\n}\n\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagName === $.HTML) {\n        startTagInBody(p, token);\n    } else {\n        tokenAfterBody(p, token);\n    }\n}\n\nfunction endTagAfterBody(p, token) {\n    if (token.tagName === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = AFTER_AFTER_BODY_MODE;\n        }\n    } else {\n        tokenAfterBody(p, token);\n    }\n}\n\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = IN_BODY_MODE;\n    p._processToken(token);\n}\n\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.FRAMESET) {\n        p._insertElement(token, NS.HTML);\n    } else if (tn === $.FRAME) {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n    } else if (tn === $.NOFRAMES) {\n        startTagInHead(p, token);\n    }\n}\n\nfunction endTagInFrameset(p, token) {\n    if (token.tagName === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n\n        if (!p.fragmentContext && p.openElements.currentTagName !== $.FRAMESET) {\n            p.insertionMode = AFTER_FRAMESET_MODE;\n        }\n    }\n}\n\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.NOFRAMES) {\n        startTagInHead(p, token);\n    }\n}\n\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagName === $.HTML) {\n        p.insertionMode = AFTER_AFTER_FRAMESET_MODE;\n    }\n}\n\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagName === $.HTML) {\n        startTagInBody(p, token);\n    } else {\n        tokenAfterAfterBody(p, token);\n    }\n}\n\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = IN_BODY_MODE;\n    p._processToken(token);\n}\n\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    const tn = token.tagName;\n\n    if (tn === $.HTML) {\n        startTagInBody(p, token);\n    } else if (tn === $.NOFRAMES) {\n        startTagInHead(p, token);\n    }\n}\n\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\n\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\n\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token) && !p.fragmentContext) {\n        while (\n            p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n            !p._isIntegrationPoint(p.openElements.current)\n        ) {\n            p.openElements.pop();\n        }\n\n        p._processToken(token);\n    } else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        } else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n\n        foreignContent.adjustTokenXMLAttrs(token);\n\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        } else {\n            p._insertElement(token, currentNs);\n        }\n\n        token.ackSelfClosing = true;\n    }\n}\n\nfunction endTagInForeignContent(p, token) {\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._processToken(token);\n            break;\n        }\n\n        if (p.treeAdapter.getTagName(element).toLowerCase() === token.tagName) {\n            p.openElements.popUntilElementPopped(element);\n            break;\n        }\n    }\n}\n", "/**\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n */\n\n/**\n * @typedef {null | undefined | string | TestFunctionAnything | Array<string | TestFunctionAnything>} Test\n *   Check for an arbitrary element, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if an element passes a test, unaware of TypeScript inferral.\n * @param {Element} element\n *   An element.\n * @param {number | null | undefined} [index]\n *   The element\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The element\u2019s parent.\n * @returns {boolean | void}\n *   Whether this element passes the test.\n */\n\n/**\n * @template {Element} T\n *   Element type.\n * @typedef {T['tagName'] | TestFunctionPredicate<T> | Array<T['tagName'] | TestFunctionPredicate<T>>} PredicateTest\n *   Check for an element that can be inferred by TypeScript.\n */\n\n/**\n * Check if an element passes a certain node test.\n *\n * @template {Element} T\n *   Element type.\n * @callback TestFunctionPredicate\n *   Complex test function for an element that can be inferred by TypeScript.\n * @param {Element} element\n *   An element.\n * @param {number | null | undefined} [index]\n *   The element\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The element\u2019s parent.\n * @returns {element is T}\n *   Whether this element passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is an element, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {boolean}\n *   Whether this is an element and passes a test.\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} T\n *   Element type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific element, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {node is T}\n *   Whether this is an element and passes a test.\n */\n\n/**\n * Check if `node` is an `Element` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific element.\n * @param index\n *   The node\u2019s position in its parent.\n * @param parent\n *   The node\u2019s parent.\n * @returns\n *   Whether `node` is an element and passes a test.\n */\nexport const isElement =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test | undefined} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you\u2019re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *  When nullish, checks if `node` is an `Element`.\n *   *  When `string`, works like passing `(element) => element.tagName === test`.\n *   *  When `function` checks if function passed the element is true.\n *   *  When `array`, checks any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName'] | TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test | null | undefined} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * Handle multiple tests.\n *\n * @param {Array<string | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn a string into a test for an element with a certain tag name.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * Turn a custom test into a test for an element that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Make sure something is an element.\n *\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n", "/**\n * @typedef {import('hast').Element} Element\n */\n\nimport {convertElement} from 'hast-util-is-element'\n\n/**\n * Check if a node is a *embedded content*.\n *\n * @type {import('hast-util-is-element').AssertPredicate<Element & {tagName: 'audio' | 'canvas' | 'embed' | 'iframe' | 'img' | 'math' | 'object' | 'picture' | 'svg' | 'video'}>}\n * @param value\n *   Thing to check (typically `Node`).\n * @returns\n *   Whether `value` is an element considered embedded content.\n *\n *   The elements `audio`, `canvas`, `embed`, `iframe`, `img`, `math`,\n *   `object`, `picture`, `svg`, and `video` are embedded content.\n */\n// @ts-expect-error Sure, the assertion matches.\nexport const embedded = convertElement([\n  'audio',\n  'canvas',\n  'embed',\n  'iframe',\n  'img',\n  'math',\n  'object',\n  'picture',\n  'svg',\n  'video'\n])\n", "/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n", "// See: <https://html.spec.whatwg.org/#the-css-user-agent-style-sheet-and-presentational-hints>\nexport const blocks = [\n  'address', // Flow content.\n  'article', // Sections and headings.\n  'aside', // Sections and headings.\n  'blockquote', // Flow content.\n  'body', // Page.\n  'br', // Contribute whitespace intrinsically.\n  'caption', // Similar to block.\n  'center', // Flow content, legacy.\n  'col', // Similar to block.\n  'colgroup', // Similar to block.\n  'dd', // Lists.\n  'dialog', // Flow content.\n  'dir', // Lists, legacy.\n  'div', // Flow content.\n  'dl', // Lists.\n  'dt', // Lists.\n  'figcaption', // Flow content.\n  'figure', // Flow content.\n  'footer', // Flow content.\n  'form', // Flow content.\n  'h1', // Sections and headings.\n  'h2', // Sections and headings.\n  'h3', // Sections and headings.\n  'h4', // Sections and headings.\n  'h5', // Sections and headings.\n  'h6', // Sections and headings.\n  'head', // Page.\n  'header', // Flow content.\n  'hgroup', // Sections and headings.\n  'hr', // Flow content.\n  'html', // Page.\n  'legend', // Flow content.\n  'li', // Block-like.\n  'li', // Similar to block.\n  'listing', // Flow content, legacy\n  'main', // Flow content.\n  'menu', // Lists.\n  'nav', // Sections and headings.\n  'ol', // Lists.\n  'optgroup', // Similar to block.\n  'option', // Similar to block.\n  'p', // Flow content.\n  'plaintext', // Flow content, legacy\n  'pre', // Flow content.\n  'section', // Sections and headings.\n  'summary', // Similar to block.\n  'table', // Similar to block.\n  'tbody', // Similar to block.\n  'td', // Block-like.\n  'td', // Similar to block.\n  'tfoot', // Similar to block.\n  'th', // Block-like.\n  'th', // Similar to block.\n  'thead', // Similar to block.\n  'tr', // Similar to block.\n  'ul', // Lists.\n  'wbr', // Contribute whitespace intrinsically.\n  'xmp' // Flow content, legacy\n]\n", "export const content = [\n  // Form.\n  'button',\n  'input',\n  'select',\n  'textarea'\n]\n", "export const skippable = [\n  'area',\n  'base',\n  'basefont',\n  'dialog',\n  'datalist',\n  'head',\n  'link',\n  'meta',\n  'noembed',\n  'noframes',\n  'param',\n  'rp',\n  'script',\n  'source',\n  'style',\n  'template',\n  'track',\n  'title'\n]\n", "/**\n * rehype plugin to minify whitespace between elements.\n *\n * ## What is this?\n *\n * This package is a plugin that can minify the whitespace between elements.\n *\n * ## When should I use this?\n *\n * You can use this plugin when you want to improve the size of HTML documents.\n *\n * ## API\n *\n * ### `unified().use(rehypeMinifyWhitespace[, options])`\n *\n * Minify whitespace.\n *\n * ##### `options`\n *\n * Configuration (optional).\n *\n * ##### `options.newlines`\n *\n * Whether to collapse runs of whitespace that include line endings to one\n * line ending (`boolean`, default: `false`).\n * The default is to collapse everything to one space.\n *\n * @example\n *   <h1>Heading</h1>\n *   <p><strong>This</strong> and <em>that</em></p>\n */\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {Root|Root['children'][number]} Node\n *\n * @typedef Options\n * @property {boolean} [newlines=false]\n *   If `newlines: true`, collapses whitespace containing newlines to `'\\n'`\n *   instead of `' '`.\n *   The default is to collapse to a single space.\n *\n * @typedef {'pre'|'nowrap'|'pre-wrap'|'normal'} Whitespace\n *\n * @typedef Context\n * @property {ReturnType<collapseFactory>} collapse\n * @property {Whitespace} whitespace\n * @property {boolean} [before]\n * @property {boolean} [after]\n *\n * @typedef Result\n * @property {boolean} remove\n * @property {boolean} ignore\n * @property {boolean} stripAtStart\n */\n\nimport {isElement} from 'hast-util-is-element'\nimport {embedded} from 'hast-util-embedded'\nimport {convert} from 'unist-util-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {blocks} from './block.js'\nimport {content as contents} from './content.js'\nimport {skippable as skippables} from './skippable.js'\n\nconst ignorableNode = convert(['doctype', 'comment'])\n\n/**\n * Minify whitespace.\n *\n * @type {import('unified').Plugin<[Options?]|Array<void>, Root>}\n */\nexport default function rehypeMinifyWhitespace(options = {}) {\n  const collapse = collapseFactory(\n    options.newlines ? replaceNewlines : replaceWhitespace\n  )\n\n  return (tree) => {\n    minify(tree, {collapse, whitespace: 'normal'})\n  }\n}\n\n/**\n * @param {Node} node\n * @param {Context} context\n * @returns {Result}\n */\nfunction minify(node, context) {\n  if ('children' in node) {\n    const settings = Object.assign({}, context)\n\n    if (node.type === 'root' || blocklike(node)) {\n      settings.before = true\n      settings.after = true\n    }\n\n    settings.whitespace = inferWhiteSpace(node, context)\n\n    return all(node, settings)\n  }\n\n  if (node.type === 'text') {\n    if (context.whitespace === 'normal') {\n      return minifyText(node, context)\n    }\n\n    // Na\u00EFve collapse, but no trimming:\n    if (context.whitespace === 'nowrap') {\n      node.value = context.collapse(node.value)\n    }\n\n    // The `pre-wrap` or `pre` whitespace settings are neither collapsed nor\n    // trimmed.\n  }\n\n  return {remove: false, ignore: ignorableNode(node), stripAtStart: false}\n}\n\n/**\n * @param {Text} node\n * @param {Context} context\n * @returns {Result}\n */\nfunction minifyText(node, context) {\n  const value = context.collapse(node.value)\n  const result = {remove: false, ignore: false, stripAtStart: false}\n  let start = 0\n  let end = value.length\n\n  if (context.before && removable(value.charAt(0))) {\n    start++\n  }\n\n  if (start !== end && removable(value.charAt(end - 1))) {\n    if (context.after) {\n      end--\n    } else {\n      result.stripAtStart = true\n    }\n  }\n\n  if (start === end) {\n    result.remove = true\n  } else {\n    node.value = value.slice(start, end)\n  }\n\n  return result\n}\n\n/**\n * @param {Root|Element} parent\n * @param {Context} context\n * @returns {Result}\n */\nfunction all(parent, context) {\n  let before = context.before\n  const after = context.after\n  const children = parent.children\n  let length = children.length\n  let index = -1\n\n  while (++index < length) {\n    const result = minify(\n      children[index],\n      Object.assign({}, context, {\n        before,\n        after: collapsableAfter(children, index, after)\n      })\n    )\n\n    if (result.remove) {\n      children.splice(index, 1)\n      index--\n      length--\n    } else if (!result.ignore) {\n      before = result.stripAtStart\n    }\n\n    // If this element, such as a `<select>` or `<img>`, contributes content\n    // somehow, allow whitespace again.\n    if (content(children[index])) {\n      before = false\n    }\n  }\n\n  return {remove: false, ignore: false, stripAtStart: Boolean(before || after)}\n}\n\n/**\n * @param {Array<Node>} nodes\n * @param {number} index\n * @param {boolean|undefined} [after]\n * @returns {boolean|undefined}\n */\nfunction collapsableAfter(nodes, index, after) {\n  while (++index < nodes.length) {\n    const node = nodes[index]\n    let result = inferBoundary(node)\n\n    if (result === undefined && 'children' in node && !skippable(node)) {\n      result = collapsableAfter(node.children, -1)\n    }\n\n    if (typeof result === 'boolean') {\n      return result\n    }\n  }\n\n  return after\n}\n\n/**\n * Infer two types of boundaries:\n *\n * 1. `true` \u2014 boundary for which whitespace around it does not contribute\n *    anything\n * 2. `false` \u2014 boundary for which whitespace around it *does* contribute\n *\n * No result (`undefined`) is returned if it is unknown.\n *\n * @param {Node} node\n * @returns {boolean|undefined}\n */\nfunction inferBoundary(node) {\n  if (node.type === 'element') {\n    if (content(node)) {\n      return false\n    }\n\n    if (blocklike(node)) {\n      return true\n    }\n\n    // Unknown: either depends on siblings if embedded or metadata, or on\n    // children.\n  } else if (node.type === 'text') {\n    if (!whitespace(node)) {\n      return false\n    }\n  } else if (!ignorableNode(node)) {\n    return false\n  }\n}\n\n/**\n * Infer whether a node is skippable.\n *\n * @param {Node} node\n * @returns {boolean}\n */\nfunction content(node) {\n  return embedded(node) || isElement(node, contents)\n}\n\n/**\n * See: <https://html.spec.whatwg.org/#the-css-user-agent-style-sheet-and-presentational-hints>\n *\n * @param {Element} node\n * @returns {boolean}\n */\nfunction blocklike(node) {\n  return isElement(node, blocks)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {boolean}\n */\nfunction skippable(node) {\n  return (\n    Boolean(\n      'properties' in node && node.properties && node.properties.hidden\n    ) ||\n    ignorableNode(node) ||\n    isElement(node, skippables)\n  )\n}\n\n/**\n * @param {string} character\n * @returns {boolean}\n */\nfunction removable(character) {\n  return character === ' ' || character === '\\n'\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction replaceNewlines(value) {\n  const match = /\\r?\\n|\\r/.exec(value)\n  return match ? match[0] : ' '\n}\n\n/**\n * @returns {string}\n */\nfunction replaceWhitespace() {\n  return ' '\n}\n\n/**\n * @param {(value: string) => string} replace\n */\nfunction collapseFactory(replace) {\n  return collapse\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function collapse(value) {\n    return String(value).replace(/[\\t\\n\\v\\f\\r ]+/g, replace)\n  }\n}\n\n/**\n * We don\u2019t need to support void elements here (so `nobr wbr` -> `normal` is\n * ignored).\n *\n * @param {Root|Element} node\n * @param {Context} context\n * @returns {Whitespace}\n */\nfunction inferWhiteSpace(node, context) {\n  if ('tagName' in node && node.properties) {\n    switch (node.tagName) {\n      // Whitespace in script/style, while not displayed by CSS as significant,\n      // could have some meaning in JS/CSS, so we can\u2019t touch them.\n      case 'listing':\n      case 'plaintext':\n      case 'script':\n      case 'style':\n      case 'xmp':\n        return 'pre'\n      case 'nobr':\n        return 'nowrap'\n      case 'pre':\n        return node.properties.wrap ? 'pre-wrap' : 'pre'\n      case 'td':\n      case 'th':\n        return node.properties.noWrap ? 'nowrap' : context.whitespace\n      case 'textarea':\n        return 'pre-wrap'\n      default:\n    }\n  }\n\n  return context.whitespace\n}\n", "/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Root | Content} Node\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Check if `node`is an element and has a `field` property.\n *\n * @param {unknown} node\n *   Thing to check (typically `Element`).\n * @param {unknown} field\n *   Field name to check (typically `string`).\n * @returns {boolean}\n *   Whether `node` is an element that has a `field` property.\n */\nexport function hasProperty(node, field) {\n  const value =\n    typeof field === 'string' &&\n    isNode(node) &&\n    node.type === 'element' &&\n    node.properties &&\n    own.call(node.properties, field) &&\n    node.properties[field]\n\n  return value !== null && value !== undefined && value !== false\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction isNode(value) {\n  return Boolean(value && typeof value === 'object' && 'type' in value)\n}\n", "/**\n * @fileoverview\n *   Check if a `link` element is \u201CBody OK\u201D.\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   import {h} from 'hastscript'\n *   import {isBodyOkLink} from 'hast-util-is-body-ok-link'\n *\n *   isBodyOkLink(h('link', {itemProp: 'foo'})) //=> true\n *   isBodyOkLink(h('link', {rel: ['stylesheet'], href: 'index.css'})) //=> true\n *   isBodyOkLink(h('link', {rel: ['author'], href: 'index.css'})) //=> false\n *   ```\n *\n *   ## API\n *\n *   ### `isBodyOkLink(node)`\n *\n *   * Return `true` for `link` elements with an `itemProp`\n *   * Return `true` for `link` elements with a `rel` list where one or more\n *     entries are `pingback`, `prefetch`, or `stylesheet`.\n */\n\nimport { isElement } from 'hast-util-is-element';\nimport { hasProperty } from 'hast-util-has-property';\n\nconst list = new Set(['pingback', 'prefetch', 'stylesheet']);\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {Root|Root['children'][number]} Node\n */\n\n/**\n * Check if a `link` element is \u201CBody OK\u201D.\n *\n * @param {Node} node\n * @returns {boolean}\n */\nexport function isBodyOkLink(node) {\n  if (!isElement(node, 'link')) {\n    return false;\n  }\n\n  if (hasProperty(node, 'itemProp')) {\n    return true;\n  }\n\n  const props = node.properties || {};\n  const rel = props.rel || [];\n  let index = -1;\n\n  if (!Array.isArray(rel) || rel.length === 0) {\n    return false;\n  }\n\n  while (++index < rel.length) {\n    if (!list.has(String(rel[index]))) {\n      return false;\n    }\n  }\n\n  return true;\n}", "/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Root | Content} Node\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {hasProperty} from 'hast-util-has-property'\nimport {embedded} from 'hast-util-embedded'\nimport {isBodyOkLink} from 'hast-util-is-body-ok-link'\n\nconst basic = convertElement([\n  'a',\n  'abbr',\n  // `area` is in fact only phrasing if it is inside a `map` element.\n  // However, since `area`s are required to be inside a `map` element, and it\u2019s\n  // a rather involved check, it\u2019s ignored here for now.\n  'area',\n  'b',\n  'bdi',\n  'bdo',\n  'br',\n  'button',\n  'cite',\n  'code',\n  'data',\n  'datalist',\n  'del',\n  'dfn',\n  'em',\n  'i',\n  'input',\n  'ins',\n  'kbd',\n  'keygen',\n  'label',\n  'map',\n  'mark',\n  'meter',\n  'noscript',\n  'output',\n  'progress',\n  'q',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'select',\n  'small',\n  'span',\n  'strong',\n  'sub',\n  'sup',\n  'template',\n  'textarea',\n  'time',\n  'u',\n  'var',\n  'wbr'\n])\n\nconst meta = convertElement('meta')\n\n/**\n * Check if the given value is *phrasing* content.\n *\n * @param {unknown} value\n *   Thing to check, typically `Node`.\n * @returns {boolean}\n *   Whether `value` is phrasing content.\n */\nexport function phrasing(value) {\n  return Boolean(\n    node(value) &&\n      (value.type === 'text' ||\n        basic(value) ||\n        embedded(value) ||\n        isBodyOkLink(value) ||\n        (meta(value) && hasProperty(value, 'itemProp')))\n  )\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction node(value) {\n  // @ts-expect-error: looks like an object.\n  return value && typeof value === 'object' && 'type' in value\n}\n", "/**\n * @fileoverview\n *   List of whitespace sensitive HTML tag names\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   import {whitespaceSensitiveTagNames} from 'html-whitespace-sensitive-tag-names'\n *\n *   whitespaceSensitiveTagNames\n *   //=> ['pre', 'script', 'style', 'textarea']\n *   ```\n *\n *   ## API\n *\n *   ### `whitespaceSensitiveTagNames`\n *\n *   List of whitespace sensitive HTML tag names (`string[]`).\n */\n\nexport const whitespaceSensitiveTagNames = [\n  'pre',\n  'script',\n  'style',\n  'textarea'\n]\n", "/**\n * @typedef {import('hast').Root} Root\n * @typedef {Root['children'][number]} Child\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Child} Node\n *\n * @typedef Options\n *   Configuration.\n * @property {number|string} [indent=2]\n *   Indentation per level (`number`, `string`, default: `2`).\n *   When number, uses that amount of spaces.\n *   When `string`, uses that per indentation level.\n * @property {boolean} [indentInitial=true]\n *   Whether to indent the first level (`boolean`, default: `true`).\n *   This is usually the `<html>`, thus not indenting `head` and `body`.\n * @property {Array<string>} [blanks=[]]\n *   List of tag names to join with a blank line (`Array<string>`, default:\n *   `[]`).\n *   These tags, when next to each other, are joined by a blank line (`\\n\\n`).\n *   For example, when `['head', 'body']` is given, a blank line is added\n *   between these two.\n */\n\nimport rehypeMinifyWhitespace from 'rehype-minify-whitespace'\nimport {visitParents, SKIP} from 'unist-util-visit-parents'\nimport {embedded} from 'hast-util-embedded'\nimport {phrasing} from 'hast-util-phrasing'\nimport {whitespace} from 'hast-util-whitespace'\nimport {isElement} from 'hast-util-is-element'\nimport {whitespaceSensitiveTagNames} from 'html-whitespace-sensitive-tag-names'\n\nconst minify = rehypeMinifyWhitespace({newlines: true})\n\n/**\n * Format whitespace in HTML.\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\n */\nexport default function rehypeFormat(options = {}) {\n  let indent = options.indent || 2\n  let indentInitial = options.indentInitial\n\n  if (typeof indent === 'number') {\n    indent = ' '.repeat(indent)\n  }\n\n  // Default to indenting the initial level.\n  if (indentInitial === null || indentInitial === undefined) {\n    indentInitial = true\n  }\n\n  return (tree) => {\n    /** @type {boolean|undefined} */\n    let head\n\n    // @ts-expect-error: fine, it\u2019s a sync transformer.\n    minify(tree)\n\n    // eslint-disable-next-line complexity\n    visitParents(tree, (node, parents) => {\n      let index = -1\n\n      if (!('children' in node)) {\n        return\n      }\n\n      if (isElement(node, 'head')) {\n        head = true\n      }\n\n      if (head && isElement(node, 'body')) {\n        head = undefined\n      }\n\n      if (isElement(node, whitespaceSensitiveTagNames)) {\n        return SKIP\n      }\n\n      const children = node.children\n      let level = parents.length\n\n      // Don\u2019t indent content of whitespace-sensitive nodes / inlines.\n      if (children.length === 0 || !padding(node, head)) {\n        return\n      }\n\n      if (!indentInitial) {\n        level--\n      }\n\n      /** @type {boolean|undefined} */\n      let eol\n\n      // Indent newlines in `text`.\n      while (++index < children.length) {\n        const child = children[index]\n\n        if (child.type === 'text' || child.type === 'comment') {\n          if (child.value.includes('\\n')) {\n            eol = true\n          }\n\n          child.value = child.value.replace(\n            / *\\n/g,\n            '$&' + String(indent).repeat(level)\n          )\n        }\n      }\n\n      /** @type {Array<Child>} */\n      const result = []\n      /** @type {Child|undefined} */\n      let previous\n\n      index = -1\n\n      while (++index < children.length) {\n        const child = children[index]\n\n        if (padding(child, head) || (eol && !index)) {\n          addBreak(result, level, child)\n          eol = true\n        }\n\n        previous = child\n        result.push(child)\n      }\n\n      if (previous && (eol || padding(previous, head))) {\n        // Ignore trailing whitespace (if that already existed), as we\u2019ll add\n        // properly indented whitespace.\n        if (whitespace(previous)) {\n          result.pop()\n          previous = result[result.length - 1]\n        }\n\n        addBreak(result, level - 1)\n      }\n\n      node.children = result\n    })\n  }\n\n  /**\n   * @param {Array<Child>} list\n   * @param {number} level\n   * @param {Child} [next]\n   * @returns {void}\n   */\n  function addBreak(list, level, next) {\n    const tail = list[list.length - 1]\n    const previous = whitespace(tail) ? list[list.length - 2] : tail\n    const replace =\n      (blank(previous) && blank(next) ? '\\n\\n' : '\\n') +\n      String(indent).repeat(Math.max(level, 0))\n\n    if (tail && tail.type === 'text') {\n      tail.value = whitespace(tail) ? replace : tail.value + replace\n    } else {\n      list.push({type: 'text', value: replace})\n    }\n  }\n\n  /**\n   * @param {Node|undefined} node\n   * @returns {boolean}\n   */\n  function blank(node) {\n    return Boolean(\n      node &&\n        node.type === 'element' &&\n        options.blanks &&\n        options.blanks.length > 0 &&\n        options.blanks.includes(node.tagName)\n    )\n  }\n}\n\n/**\n * @param {Node} node\n * @param {boolean|undefined} head\n * @returns {boolean}\n */\nfunction padding(node, head) {\n  return (\n    node.type === 'root' ||\n    (node.type === 'element'\n      ? head || isElement(node, 'script') || embedded(node) || !phrasing(node)\n      : false)\n  )\n}\n", "import rehypeFormat from 'rehype-format';\nexport const formatHtml = function formatHtml(opt) {\n    if (!opt)\n        return () => undefined;\n    return rehypeFormat(typeof opt === 'boolean' ? {} : opt);\n};\n", "import { escapeHtml } from 'markdown-it/lib/common/utils.js';\nconst HTML_EMPTY_ELEMENTS = new Set([\n    'area',\n    'base',\n    'br',\n    'col',\n    'embed',\n    'hr',\n    'img',\n    'input',\n    'keygen',\n    'link',\n    'meta',\n    'param',\n    'source',\n    'track',\n    'wbr',\n]);\nconst formatAttr = (key, value) => {\n    let v;\n    if (value == null)\n        return null;\n    if (Array.isArray(value)) {\n        v = value.join(' ');\n    }\n    else if (typeof value === 'number') {\n        v = String(value);\n    }\n    else if (typeof value === 'boolean') {\n        if (!value)\n            return null;\n        v = '';\n    }\n    else {\n        v = value;\n    }\n    return `${key}=\"${escapeHtml(v)}\"`;\n};\nexport function formatTag(tag, attributes, inline) {\n    const { children, ...rest } = attributes;\n    const join = inline ? '' : '\\n';\n    const attrs = Object.entries(rest)\n        .filter(([, value]) => value != null && value !== false)\n        .map(([key, value]) => formatAttr(key, value))\n        .filter((value) => value != null)\n        .join(' ');\n    const html = `<${escapeHtml(tag)}${attrs ? ` ${attrs}` : ''}>`;\n    if (children)\n        return `${html}${join}${escapeHtml(String(children))}`;\n    return html;\n}\nfunction toHTMLRecurse(template, inline) {\n    // Convert to an internal type which is actually an array\n    const T = template;\n    // Cannot have more than one hole in the template\n    const atMostOneHole = T.flat(Infinity).filter((v) => v === 0).length <= 1;\n    if (!atMostOneHole)\n        throw new Error('There cannot be more than one hole in the template.');\n    // Grab the tag and attributes if they exist!\n    const tag = T[0];\n    const hasAttrs = !Array.isArray(T === null || T === void 0 ? void 0 : T[1]) && typeof (T === null || T === void 0 ? void 0 : T[1]) === 'object';\n    const attrs = hasAttrs ? T[1] : {};\n    // These are the tag arrays before and after the hole.\n    const before = [];\n    const after = [];\n    before.push(formatTag(tag, attrs, inline));\n    let foundHole = false;\n    T.slice(hasAttrs ? 2 : 1).forEach((value) => {\n        const v = value;\n        if (v === 0) {\n            foundHole = true;\n            return;\n        }\n        // Recurse, if a hole is found then split the return\n        const [b, a] = toHTMLRecurse(v, inline);\n        before.push(b);\n        if (a) {\n            foundHole = true;\n            after.push(a);\n        }\n    });\n    const join = inline ? '' : '\\n';\n    const closingTag = HTML_EMPTY_ELEMENTS.has(tag) ? '' : `</${tag}>`;\n    if (!foundHole) {\n        if (closingTag)\n            before.push(closingTag);\n        return [before.join(join), null];\n    }\n    if (closingTag)\n        after.push(closingTag);\n    return [before.join(join), after.join(join)];\n}\n/**\n * A helper function to create valid HTML with a \"hole\" (represented by zero) for content.\n *\n * The content is escaped and null/undefined attributes are not included.\n *\n * **A simple wrapper tag:**\n * ```\n * const attr = 'hello';\n * const html = toHTML(['tag', {attr}, 0]);\n * console.log(html);\n * > ['<tag attr=\"hello\">', '</tag>']\n * ```\n *\n * **A nested wrapper tag:**\n * ```\n * const html = toHTML([\n *  'tag', {attr},\n *  ['img', {src}],\n *  ['caption', 0],\n * ]);\n * console.log(html);\n * > ['<tag attr=\"x\"><img src=\"src\"><caption>', '</caption></tag>']\n * ```\n *\n * You can include `children` in the `attrs` and that adds inline content for a tag.\n *\n * You can also send in a list of strings for `attrs`, which are joined with a space (`' '`).\n *\n * Types are based on prosemirror-model.\n *\n * @param spec The spec for the dom model.\n * @param opts Options dict, `inline` creates HTML that is on a single line.\n */\nexport function toHTML(template, opts = { inline: false }) {\n    const [before, after] = toHTMLRecurse(template, opts.inline);\n    const join = opts.inline ? '' : '\\n';\n    return [`${before}${join}`, after ? `${after}${join}` : null];\n}\n", "import { toHTML } from './utils.js';\nexport const renderMath = (math, block, target) => {\n    const { id, number } = target !== null && target !== void 0 ? target : {};\n    const [html] = toHTML([\n        block ? 'div' : 'span',\n        {\n            class: target ? ['math', 'numbered'] : 'math',\n            id,\n            number,\n            children: block ? `\\\\[\\n${math}\\n\\\\]` : `\\\\(${math}\\\\)`,\n        },\n    ], { inline: true });\n    return block ? `${html}\\n` : html;\n};\nexport function addMathRenderers(md) {\n    const { renderer } = md;\n    renderer.rules.math_inline = (tokens, idx) => renderMath(tokens[idx].content, false);\n    // Note: this will actually create invalid HTML\n    renderer.rules.math_inline_double = (tokens, idx) => renderMath(tokens[idx].content, true);\n    renderer.rules.math_block = (tokens, idx) => renderMath(tokens[idx].content, true);\n    renderer.rules.math_block_label = (tokens, idx) => { var _a; return renderMath(tokens[idx].content, true, (_a = tokens[idx].meta) === null || _a === void 0 ? void 0 : _a.target); };\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting\u2019s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n", "import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it\u2019s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it\u2019s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n", "/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// \u2026are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n", "/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n", "/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don\u2019t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n", "/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n", "/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n", "/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node\u2019s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it\u2019s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that\u2019s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that\u2019s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node\u2019s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '\u21A9'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n", "/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don\u2019t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn\u2019t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn\u2019t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there\u2019s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n", "import { defaultHandlers, toHast, all } from 'mdast-util-to-hast';\nimport { u } from 'unist-builder';\nimport classNames from 'classnames';\nconst abbreviation = (h, node) => h(node, 'abbr', { title: node.title }, all(h, node));\nconst subscript = (h, node) => h(node, 'sub', all(h, node));\nconst superscript = (h, node) => h(node, 'sup', all(h, node));\nconst image = (h, node) => h(node, 'img', {\n    src: node.url,\n    alt: node.alt,\n    title: node.title,\n    class: classNames(node.align ? `align-${node.align}` : '', node.class) || undefined,\n    height: node.height,\n    width: node.width,\n});\nconst caption = (h, node) => h(node, 'figcaption', all(h, node));\nconst legend = (h, node) => h(node, 'div', { class: 'legend' }, all(h, node));\nconst container = (h, node) => h(node, 'figure', {\n    id: node.identifier || node.label || undefined,\n    class: classNames({ numbered: node.enumerated !== false }, node.class) || undefined,\n}, all(h, node));\nconst admonitionTitle = (h, node) => h(node, 'p', { class: 'admonition-title' }, all(h, node));\nconst admonition = (h, node) => h(node, 'aside', {\n    class: classNames({\n        [node.class]: node.class, // The custom class is first!!\n        admonition: true,\n        [node.kind]: node.kind && node.kind !== 'admonition',\n    }),\n}, all(h, node));\nconst captionNumber = (h, node) => {\n    var _a, _b;\n    const captionKind = ((_a = node.kind) === null || _a === void 0 ? void 0 : _a.charAt(0).toUpperCase()) + ((_b = node.kind) === null || _b === void 0 ? void 0 : _b.slice(1));\n    return h(node, 'span', { class: 'caption-number' }, [u('text', `${captionKind} ${node.value}`)]);\n};\nconst math = (h, node) => {\n    const attrs = { id: node.identifier || undefined, class: 'math-display' };\n    if (node.value.indexOf('\\n') !== -1) {\n        const mathHast = h(node, 'div', attrs, [u('text', node.value)]);\n        return h(node, 'pre', [mathHast]);\n    }\n    return h(node, 'div', attrs, [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))]);\n};\nconst inlineMath = (h, node) => {\n    return h(node, 'span', { class: 'math-inline' }, [\n        u('text', node.value.replace(/\\r?\\n|\\r/g, ' ')),\n    ]);\n};\nconst definitionList = (h, node) => h(node, 'dl', all(h, node));\nconst definitionTerm = (h, node) => h(node, 'dt', all(h, node));\nconst definitionDescription = (h, node) => h(node, 'dd', all(h, node));\nconst mystRole = (h, node) => {\n    const children = [h(node, 'code', { class: 'kind' }, [u('text', `{${node.name}}`)])];\n    if (node.value) {\n        children.push(h(node, 'code', {}, [u('text', node.value)]));\n    }\n    return h(node, 'span', { class: 'role unhandled' }, children);\n};\nconst mystDirective = (h, node) => {\n    const directiveHeader = [\n        h(node, 'code', { class: 'kind' }, [u('text', `{${node.name}}`)]),\n    ];\n    if (node.args) {\n        directiveHeader.push(h(node, 'code', { class: 'args' }, [u('text', node.args)]));\n    }\n    const directiveBody = [];\n    if (node.options) {\n        const optionsString = Object.keys(node.options)\n            .map((k) => `:${k}: ${node.options[k]}`)\n            .join('\\n');\n        directiveBody.push(h(node, 'pre', [h(node, 'code', { class: 'options' }, [u('text', optionsString)])]));\n    }\n    directiveBody.push(h(node, 'pre', [h(node, 'code', [u('text', node.value)])]));\n    return h(node, 'div', { class: 'directive unhandled' }, [\n        h(node, 'p', {}, directiveHeader),\n        ...directiveBody,\n    ]);\n};\nconst block = (h, node) => h(node, 'div', { class: 'block', 'data-block': node.meta }, all(h, node));\nconst comment = (h, node) => u('comment', node.value);\nconst heading = (h, node) => h(node, `h${node.depth}`, { id: node.identifier || undefined }, all(h, node));\nconst crossReference = (h, node) => {\n    if (node.resolved) {\n        return h(node, 'a', { href: `#${node.identifier}`, title: node.title || undefined }, all(h, node));\n    }\n    else {\n        return h(node, 'span', { class: 'reference role unhandled' }, [\n            h(node, 'code', { class: 'kind' }, [u('text', `{${node.kind}}`)]),\n            h(node, 'code', {}, [u('text', node.identifier)]),\n        ]);\n    }\n};\n// TODO: The defaultHandler treats the first row (and only the first row)\n//       header; the mdast `tableCell.header` property is not respected.\n//       For that, we need to entirely rewrite this handler.\nconst table = (h, node) => {\n    node.data = { hProperties: { align: node.align } };\n    delete node.align;\n    return defaultHandlers.table(h, node);\n};\nconst code = (h, node) => {\n    const value = node.value ? node.value + '\\n' : '';\n    const props = {};\n    if (node.identifier) {\n        props.id = node.identifier;\n    }\n    props.className = classNames({ ['language-' + node.lang]: node.lang }, node.class) || undefined;\n    const codeHast = h(node, 'code', props, [u('text', value)]);\n    return h(node.position, 'pre', [codeHast]);\n};\nconst iframe = (h, node) => h(node, 'div', { class: 'iframe' });\nconst bibliography = (h, node) => h(node, 'div', { class: 'bibliography' });\nconst details = (h, node) => h(node, 'details');\nconst summary = (h, node) => h(node, 'summary');\nconst embed = (h, node) => h(node, 'div');\nconst include = (h, node) => h(node, 'div', { file: node.file });\nconst linkBlock = (h, node) => h(node, 'a');\nconst margin = (h, node) => h(node, 'aside', { class: 'margin' });\nconst mdast = (h, node) => h(node, 'div', { id: node.id });\nconst mermaid = (h, node) => h(node, 'div', { class: 'margin' });\nconst myst = (h, node) => h(node, 'div', { class: 'margin' });\nconst output = (h, node) => h(node, 'div', { class: 'output' });\nexport const mystToHast = (opts) => (tree) => {\n    return toHast(tree, {\n        ...opts,\n        handlers: {\n            admonition,\n            admonitionTitle,\n            container,\n            image,\n            caption,\n            captionNumber,\n            legend,\n            abbreviation,\n            subscript,\n            superscript,\n            math,\n            inlineMath,\n            definitionList,\n            definitionTerm,\n            definitionDescription,\n            mystRole,\n            mystDirective,\n            block,\n            comment,\n            heading,\n            crossReference,\n            code,\n            table,\n            iframe,\n            bibliography,\n            details,\n            summary,\n            embed,\n            include,\n            linkBlock,\n            margin,\n            mdast,\n            mermaid,\n            myst,\n            output,\n            ...opts === null || opts === void 0 ? void 0 : opts.handlers,\n        },\n    });\n};\n", "export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it\u2019s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns\u2019 stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n", "/**\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {Extract<Node, MdastParent>} Parent\n * @typedef {Exclude<Parent, Root>} ContentParent\n *\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[Root, ...Array<ContentParent>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) \u2014 whole match\n *   * `...capture` (`Array<string>`) \u2014 matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) \u2014 info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | undefined | null}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * \u2026or when `false`, do not replace at all\n *   * \u2026or when `string`, replace with a text node of that value\n *   * \u2026or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {string | RegExp} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n *   Several find and replaces, in object form.\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n * @typedef {string | ReplaceFunction} Replace\n *   Thing to replace with.\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore.\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param tree\n *   Tree to change.\n * @param find\n *   Patterns to find.\n * @param replace\n *   Things to replace with (when `find` is `Find`) or configuration.\n * @param options\n *   Configuration (when `find` is not `Find`).\n * @returns\n *   Given, modified, tree.\n */\n// To do: next major: remove `find` & `replace` combo, remove schema.\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   (<Tree extends Node>(tree: Tree, find: Find, replace?: Replace | null | undefined, options?: Options | null | undefined) => Tree) &\n   *   (<Tree extends Node>(tree: Tree, schema: FindAndReplaceSchema | FindAndReplaceList, options?: Options | null | undefined) => Tree)\n   * )}\n   **/\n  (\n    /**\n     * @template {Node} Tree\n     * @param {Tree} tree\n     * @param {Find | FindAndReplaceSchema | FindAndReplaceList} find\n     * @param {Replace | Options | null | undefined} [replace]\n     * @param {Options | null | undefined} [options]\n     * @returns {Tree}\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options | null | undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don\u2019t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don\u2019t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      // To do next major: don\u2019t return the given tree.\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types.js').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent | undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = parents[index]\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error: TS doesn\u2019t understand but it\u2019s perfect.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * Handle a text node which is not in an ignored parent.\n       *\n       * @param {Text} node\n       *   Text node.\n       * @param {Array<Parent>} parents\n       *   Parents.\n       * @returns {VisitorResult}\n       *   Result.\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          const position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            // @ts-expect-error: stack is fine.\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          // It wasn\u2019t a match after all.\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * Turn a schema into pairs.\n *\n * @param {FindAndReplaceSchema | FindAndReplaceList} schema\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n", "import { normalizeLabel, setTextAsChild } from 'myst-common';\nimport { visit } from 'unist-util-visit';\nimport { select, selectAll } from 'unist-util-select';\nimport { findAndReplace } from 'mdast-util-find-and-replace';\nexport var TargetKind;\n(function (TargetKind) {\n    TargetKind[\"heading\"] = \"heading\";\n    TargetKind[\"math\"] = \"math\";\n    TargetKind[\"figure\"] = \"figure\";\n    TargetKind[\"table\"] = \"table\";\n    TargetKind[\"code\"] = \"code\";\n})(TargetKind || (TargetKind = {}));\nexport var ReferenceKind;\n(function (ReferenceKind) {\n    ReferenceKind[\"ref\"] = \"ref\";\n    ReferenceKind[\"numref\"] = \"numref\";\n    ReferenceKind[\"eq\"] = \"eq\";\n})(ReferenceKind || (ReferenceKind = {}));\n/**\n * See https://www.sphinx-doc.org/en/master/usage/restructuredtext/roles.html#role-numref\n */\nfunction fillReferenceEnumerators(node, enumerator) {\n    const num = String(enumerator);\n    findAndReplace(node, { '%s': num, '{number}': num });\n}\nfunction kindFromNode(node) {\n    return node.type === 'container' ? node.kind : node.type;\n}\n/**\n * Increment heading counts based on depth to increment\n *\n * depth is the depth to increment\n * counts is a list of 6 counts, corresponding to 6 heading depths\n *\n * When a certain depth is incremented, shallower depths are left the same\n * and deeper depths are reset to zero. Null counts anywhere are ignored.\n */\nexport function incrementHeadingCounts(depth, counts) {\n    const incrementIndex = depth - 1;\n    return counts.map((count, index) => {\n        if (count === null || index < incrementIndex)\n            return count;\n        if (index === incrementIndex)\n            return count + 1;\n        return 0;\n    });\n}\n/**\n * Return dot-delimited header numbering based on heading counts\n *\n * counts is a list of 6 counts, corresponding to 6 heading depths\n *\n * Leading zeros are kept, trailing zeros are removed, nulls are ignored.\n */\nexport function formatHeadingEnumerator(counts) {\n    counts = counts.filter((d) => d !== null);\n    while (counts && counts[counts.length - 1] === 0) {\n        counts.pop();\n    }\n    return counts.join('.');\n}\nexport class State {\n    constructor(targetCounts, targets) {\n        this.targetCounts = targetCounts || {};\n        this.targets = targets || {};\n    }\n    addTarget(node) {\n        const kind = kindFromNode(node);\n        if (kind && kind in TargetKind) {\n            let enumerator = null;\n            if (node.enumerated !== false) {\n                enumerator = this.incrementCount(node, kind);\n                node.enumerator = enumerator;\n            }\n            if (node.identifier) {\n                this.targets[node.identifier] = {\n                    node: structuredClone(node),\n                    kind: kind,\n                };\n            }\n        }\n    }\n    initializeNumberedHeadingDepths(tree) {\n        const headings = selectAll('heading', tree).filter((node) => node.enumerated !== false);\n        const headingDepths = new Set(headings.map((node) => node.depth));\n        this.targetCounts.heading = [1, 2, 3, 4, 5, 6].map((depth) => headingDepths.has(depth) ? 0 : null);\n    }\n    incrementCount(node, kind) {\n        if (kind === TargetKind.heading) {\n            // Ideally initializeNumberedHeadingDepths is called before incrementing\n            // heading count to do a better job initializng headers based on tree\n            if (!this.targetCounts.heading)\n                this.targetCounts.heading = [0, 0, 0, 0, 0, 0];\n            this.targetCounts.heading = incrementHeadingCounts(node.depth, this.targetCounts.heading);\n            return formatHeadingEnumerator(this.targetCounts.heading);\n        }\n        if (kind in this.targetCounts) {\n            this.targetCounts[kind] += 1;\n        }\n        else {\n            this.targetCounts[kind] = 1;\n        }\n        return String(this.targetCounts[kind]);\n    }\n    getTarget(identifier) {\n        if (!identifier)\n            return undefined;\n        return this.targets[identifier];\n    }\n    resolveReferenceContent(node) {\n        var _a;\n        const target = this.getTarget(node.identifier);\n        if (!target) {\n            return;\n        }\n        const kinds = {\n            ref: {\n                eq: node.kind === ReferenceKind.eq,\n                ref: node.kind === ReferenceKind.ref,\n                numref: node.kind === ReferenceKind.numref,\n            },\n            target: {\n                math: target.kind === TargetKind.math,\n                figure: target.kind === TargetKind.figure,\n                table: target.kind === TargetKind.table,\n                heading: target.kind === TargetKind.heading,\n            },\n        };\n        const noNodeChildren = !((_a = node.children) === null || _a === void 0 ? void 0 : _a.length);\n        if (kinds.ref.eq && kinds.target.math && target.node.enumerator) {\n            if (noNodeChildren) {\n                setTextAsChild(node, `(${target.node.enumerator})`);\n            }\n            node.resolved = true;\n        }\n        else if (kinds.ref.ref && kinds.target.heading) {\n            if (noNodeChildren) {\n                node.children = structuredClone(target.node).children;\n            }\n            node.resolved = true;\n        }\n        else if (kinds.ref.ref && (kinds.target.figure || kinds.target.table)) {\n            if (noNodeChildren) {\n                const caption = select('caption > paragraph', target.node);\n                node.children = structuredClone(caption).children;\n            }\n            node.resolved = true;\n        }\n        else if (kinds.ref.numref && kinds.target.figure && target.node.enumerator) {\n            if (noNodeChildren) {\n                setTextAsChild(node, 'Figure %s');\n            }\n            fillReferenceEnumerators(node, target.node.enumerator);\n            node.resolved = true;\n        }\n        else if (kinds.ref.numref && kinds.target.table && target.node.enumerator) {\n            if (noNodeChildren) {\n                setTextAsChild(node, 'Table %s');\n            }\n            fillReferenceEnumerators(node, target.node.enumerator);\n            node.resolved = true;\n        }\n    }\n}\nexport const enumerateTargets = (state, tree, opts) => {\n    state.initializeNumberedHeadingDepths(tree);\n    if (!opts.disableContainerEnumeration) {\n        visit(tree, 'container', (node) => state.addTarget(node));\n    }\n    if (!opts.disableEquationEnumeration) {\n        visit(tree, 'math', (node) => state.addTarget(node));\n    }\n    if (!opts.disableHeadingEnumeration) {\n        visit(tree, 'heading', (node) => state.addTarget(node));\n    }\n    return tree;\n};\nexport const resolveReferences = (state, tree) => {\n    selectAll('link', tree).forEach((node) => {\n        const reference = normalizeLabel(node.url);\n        if (reference && reference.identifier in state.targets) {\n            node.type = 'crossReference';\n            node.kind = state.targets[reference.identifier].kind === TargetKind.math ? 'eq' : 'ref';\n            node.identifier = reference.identifier;\n            node.label = reference.label;\n            delete node.url;\n        }\n    });\n    visit(tree, 'crossReference', (node) => {\n        state.resolveReferenceContent(node);\n    });\n};\n", "/**\n * @typedef {import('hast').Root} Root\n * @typedef {Pick<import('hast-util-from-parse5').Options, 'space' | 'verbose'>} FromParse5Options\n *\n * @typedef {keyof errors} ErrorCode\n * @typedef {0|1|2|boolean|null|undefined} ErrorSeverity\n * @typedef {Partial<Record<ErrorCode, ErrorSeverity>>} ErrorFields\n *\n * @typedef ParseFields\n * @property {boolean|undefined} [fragment=false]\n *   Specify whether to parse a fragment, instead of a complete document.\n *   In document mode, unopened `html`, `head`, and `body` elements are opened\n *   in just the right places.\n * @property {boolean|undefined} [emitParseErrors=false]\n *   > \u26A0\uFE0F Parse errors are currently being added to HTML.\n *   > Not all errors emitted by parse5 (or rehype-parse) are specced yet.\n *   > Some documentation may still be missing.\n *\n *   Emit parse errors while parsing on the vfile.\n *   Setting this to `true` starts emitting HTML parse errors.\n *\n *   Specific rules can be turned off by setting them to `false` (or `0`).\n *   The default, when `emitParseErrors: true`, is `true` (or `1`), and means\n *   that rules emit as warnings.\n *   Rules can also be configured with `2`, to turn them into fatal errors.\n *\n * @typedef {FromParse5Options & ParseFields & ErrorFields} Options\n */\n\n// @ts-expect-error: remove when typed\nimport Parser5 from 'parse5/lib/parser/index.js'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {errors} from './errors.js'\n\nconst base = 'https://html.spec.whatwg.org/multipage/parsing.html#parse-error-'\n\nconst fatalities = {2: true, 1: false, 0: null}\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?] | Array<void>, string, Root>}\n */\nexport default function rehypeParse(options) {\n  const processorSettings = /** @type {Options} */ (this.data('settings'))\n  const settings = Object.assign({}, processorSettings, options)\n\n  Object.assign(this, {Parser: parser})\n\n  /** @type {import('unified').ParserFunction<Root>} */\n  function parser(doc, file) {\n    const fn = settings.fragment ? 'parseFragment' : 'parse'\n    const onParseError = settings.emitParseErrors ? onerror : null\n    const parse5 = new Parser5({\n      sourceCodeLocationInfo: true,\n      onParseError,\n      scriptingEnabled: false\n    })\n\n    // @ts-expect-error: `parse5` returns document or fragment, which are always\n    // mapped to roots.\n    return fromParse5(parse5[fn](doc), {\n      space: settings.space,\n      file,\n      verbose: settings.verbose\n    })\n\n    /**\n     * @param {{code: string, startLine: number, startCol: number, startOffset: number, endLine: number, endCol: number, endOffset: number}} error\n     */\n    function onerror(error) {\n      const code = error.code\n      const name = camelcase(code)\n      const setting = settings[name]\n      const config = setting === undefined || setting === null ? true : setting\n      const level = typeof config === 'number' ? config : config ? 1 : 0\n      const start = {\n        line: error.startLine,\n        column: error.startCol,\n        offset: error.startOffset\n      }\n      const end = {\n        line: error.endLine,\n        column: error.endCol,\n        offset: error.endOffset\n      }\n      if (level) {\n        /* c8 ignore next */\n        const info = errors[name] || {reason: '', description: '', url: ''}\n        const message = file.message(format(info.reason), {start, end})\n        message.source = 'parse-error'\n        message.ruleId = code\n        message.fatal = fatalities[level]\n        message.note = format(info.description)\n        message.url = 'url' in info && info.url === false ? null : base + code\n      }\n\n      /**\n       * @param {string} value\n       * @returns {string}\n       */\n      function format(value) {\n        return value\n          .replace(/%c(?:-(\\d+))?/g, (_, /** @type {string} */ $1) => {\n            const offset = $1 ? -Number.parseInt($1, 10) : 0\n            const char = doc.charAt(error.startOffset + offset)\n            return char === '`' ? '` ` `' : char\n          })\n          .replace(\n            /%x/g,\n            () =>\n              '0x' +\n              doc.charCodeAt(error.startOffset).toString(16).toUpperCase()\n          )\n      }\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @returns {ErrorCode}\n */\nfunction camelcase(value) {\n  // @ts-expect-error: this returns a valid error code.\n  return value.replace(/-[a-z]/g, ($0) => $0.charAt(1).toUpperCase())\n}\n", "/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n", "/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n", "/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n", "export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n", "let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n", "import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n", "/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n", "import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n", "import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n", "/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n", "import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n", "import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n", "import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n", "import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n", "import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n", "/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n", "/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n", "/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name.\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector.\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: fine.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n", "/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n", "/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n", "/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Content | Root} Node\n *   Any concrete `hast` node.\n * @typedef {Root | Element} HResult\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {string | number} HStyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, HStyleValue>} HStyle\n *   Supported value of a `style` prop.\n * @typedef {string | number | boolean | null | undefined} HPrimitiveValue\n *   Primitive property value.\n * @typedef {Array<string | number>} HArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {HPrimitiveValue | HArrayValue} HPropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: HPropertyValue | HStyle}} HProperties\n *   Acceptable value for element properties.\n *\n * @typedef {string | number | null | undefined} HPrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<Node | HPrimitiveChild>} HArrayChild\n *   List of children.\n * @typedef {Node | HPrimitiveChild | HArrayChild} HChild\n *   Acceptable child value.\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null | undefined, ...children: Array<HChild>): Root\n     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element\n     *   (selector: string, ...children: Array<HChild>): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string | null} [selector]\n       * @param {HProperties | HChild} [properties]\n       * @param {Array<HChild>} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties | HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle | HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<string | number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<Content>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {HStyle} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n", "/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n", "export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n", "/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n */\n\nimport {svg} from 'property-information'\nimport {core} from './core.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\nexport const s = core(svg, 'g', svgCaseSensitiveTagNames)\n", "/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n */\n\n/**\n * @typedef Point\n *   unist point, where `line` and `column` can be `undefined`.\n * @property {number | undefined} line\n *   Line.\n * @property {number | undefined} column\n *   Column.\n * @property {number | undefined} [offset]\n *   Offset.\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get a line/column-based `point` from `offset`.\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {Point}\n *   Point, line/column are undefined for invalid or out of bounds input.\n *\n * @callback ToOffset\n *   Get an offset from a line/column-based `point`.\n * @param {Point | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number}\n *   Offset or `-1` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get a line/column-based `point` from `offset`.\n * @property {ToOffset} toOffset\n *   Get an offset from a line/column-based `point`.\n */\n\n/**\n * Index the given document so you can translate between line/column and offset\n * based positional info.\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /** @type {Array<number>} */\n  const indices = []\n  const search = /\\r?\\n|\\r/g\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n\n    return {line: undefined, column: undefined, offset: undefined}\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n\n    return -1\n  }\n}\n", "/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n", "/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in.\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes.\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements.\n *\n *   > \uD83D\uDC49 **Note**: only used when `file` is given.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {Schema} schema\n *   Current schema.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n * @property {boolean} location\n *   Whether location info was found.\n */\n\nimport {h, s} from 'hastscript'\nimport {html, svg, find} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | VFile | null | undefined} [options]\n *   Configuration.\n * @returns {Node}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const options_ = options || {}\n  /** @type {Options} */\n  let settings\n  /** @type {VFile | undefined} */\n  let file\n\n  if (isFile(options_)) {\n    file = options_\n    settings = {}\n  } else {\n    file = options_.file || undefined\n    settings = options_\n  }\n\n  return one(\n    {\n      schema: settings.space === 'svg' ? svg : html,\n      file,\n      verbose: settings.verbose,\n      location: false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Node}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Node} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // @ts-expect-error: always defined as we give valid input.\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      // @ts-expect-error Types are out of date.\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<Content>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<Content>} */\n  const result = []\n\n  while (++index < nodes.length) {\n    // @ts-expect-error Assume no roots in `nodes`.\n    result[index] = one(state, nodes[index])\n  }\n\n  return result\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    /** @type {Root} */\n    // @ts-expect-error Types are wrong.\n    const content = one(state, reference.content)\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Node} to\n *   hast node.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Node} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      node.data = {\n        position: {\n          // @ts-expect-error: assume not `undefined`.\n          opening: position(location.startTag),\n          closing: location.endTag ? position(location.endTag) : null,\n          properties: props\n        }\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n  // @ts-expect-error `undefined` is fine.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n\n/**\n * Check if something is a file.\n *\n * @param {VFile | Options} value\n *   File or options.\n * @returns {value is VFile}\n *   Whether `value` is a file.\n */\nfunction isFile(value) {\n  return 'messages' in value\n}\n", "export const errors = {\n  abandonedHeadElementChild: {\n    reason: 'Unexpected metadata element after head',\n    description:\n      'Unexpected element after head. Expected the element before `</head>`',\n    url: false\n  },\n  abruptClosingOfEmptyComment: {\n    reason: 'Unexpected abruptly closed empty comment',\n    description: 'Unexpected `>` or `->`. Expected `-->` to close comments'\n  },\n  abruptDoctypePublicIdentifier: {\n    reason: 'Unexpected abruptly closed public identifier',\n    description:\n      'Unexpected `>`. Expected a closing `\"` or `\\'` after the public identifier'\n  },\n  abruptDoctypeSystemIdentifier: {\n    reason: 'Unexpected abruptly closed system identifier',\n    description:\n      'Unexpected `>`. Expected a closing `\"` or `\\'` after the identifier identifier'\n  },\n  absenceOfDigitsInNumericCharacterReference: {\n    reason: 'Unexpected non-digit at start of numeric character reference',\n    description:\n      'Unexpected `%c`. Expected `[0-9]` for decimal references or `[0-9a-fA-F]` for hexadecimal references'\n  },\n  cdataInHtmlContent: {\n    reason: 'Unexpected CDATA section in HTML',\n    description:\n      'Unexpected `<![CDATA[` in HTML. Remove it, use a comment, or encode special characters instead'\n  },\n  characterReferenceOutsideUnicodeRange: {\n    reason: 'Unexpected too big numeric character reference',\n    description:\n      'Unexpectedly high character reference. Expected character references to be at most hexadecimal 10ffff (or decimal 1114111)'\n  },\n  closingOfElementWithOpenChildElements: {\n    reason: 'Unexpected closing tag with open child elements',\n    description:\n      'Unexpectedly closing tag. Expected other tags to be closed first',\n    url: false\n  },\n  controlCharacterInInputStream: {\n    reason: 'Unexpected control character',\n    description:\n      'Unexpected control character `%x`. Expected a non-control code point, 0x00, or ASCII whitespace'\n  },\n  controlCharacterReference: {\n    reason: 'Unexpected control character reference',\n    description:\n      'Unexpectedly control character in reference. Expected a non-control code point, 0x00, or ASCII whitespace'\n  },\n  disallowedContentInNoscriptInHead: {\n    reason: 'Disallowed content inside `<noscript>` in `<head>`',\n    description:\n      'Unexpected text character `%c`. Only use text in `<noscript>`s in `<body>`',\n    url: false\n  },\n  duplicateAttribute: {\n    reason: 'Unexpected duplicate attribute',\n    description:\n      'Unexpectedly double attribute. Expected attributes to occur only once'\n  },\n  endTagWithAttributes: {\n    reason: 'Unexpected attribute on closing tag',\n    description: 'Unexpected attribute. Expected `>` instead'\n  },\n  endTagWithTrailingSolidus: {\n    reason: 'Unexpected slash at end of closing tag',\n    description: 'Unexpected `%c-1`. Expected `>` instead'\n  },\n  endTagWithoutMatchingOpenElement: {\n    reason: 'Unexpected unopened end tag',\n    description: 'Unexpected end tag. Expected no end tag or another end tag',\n    url: false\n  },\n  eofBeforeTagName: {\n    reason: 'Unexpected end of file',\n    description: 'Unexpected end of file. Expected tag name instead'\n  },\n  eofInCdata: {\n    reason: 'Unexpected end of file in CDATA',\n    description: 'Unexpected end of file. Expected `]]>` to close the CDATA'\n  },\n  eofInComment: {\n    reason: 'Unexpected end of file in comment',\n    description: 'Unexpected end of file. Expected `-->` to close the comment'\n  },\n  eofInDoctype: {\n    reason: 'Unexpected end of file in doctype',\n    description:\n      'Unexpected end of file. Expected a valid doctype (such as `<!doctype html>`)'\n  },\n  eofInElementThatCanContainOnlyText: {\n    reason: 'Unexpected end of file in element that can only contain text',\n    description: 'Unexpected end of file. Expected text or a closing tag',\n    url: false\n  },\n  eofInScriptHtmlCommentLikeText: {\n    reason: 'Unexpected end of file in comment inside script',\n    description: 'Unexpected end of file. Expected `-->` to close the comment'\n  },\n  eofInTag: {\n    reason: 'Unexpected end of file in tag',\n    description: 'Unexpected end of file. Expected `>` to close the tag'\n  },\n  incorrectlyClosedComment: {\n    reason: 'Incorrectly closed comment',\n    description: 'Unexpected `%c-1`. Expected `-->` to close the comment'\n  },\n  incorrectlyOpenedComment: {\n    reason: 'Incorrectly opened comment',\n    description: 'Unexpected `%c`. Expected `<!--` to open the comment'\n  },\n  invalidCharacterSequenceAfterDoctypeName: {\n    reason: 'Invalid sequence after doctype name',\n    description: 'Unexpected sequence at `%c`. Expected `public` or `system`'\n  },\n  invalidFirstCharacterOfTagName: {\n    reason: 'Invalid first character in tag name',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  misplacedDoctype: {\n    reason: 'Misplaced doctype',\n    description: 'Unexpected doctype. Expected doctype before head',\n    url: false\n  },\n  misplacedStartTagForHeadElement: {\n    reason: 'Misplaced `<head>` start tag',\n    description:\n      'Unexpected start tag `<head>`. Expected `<head>` directly after doctype',\n    url: false\n  },\n  missingAttributeValue: {\n    reason: 'Missing attribute value',\n    description:\n      'Unexpected `%c-1`. Expected an attribute value or no `%c-1` instead'\n  },\n  missingDoctype: {\n    reason: 'Missing doctype before other content',\n    description: 'Expected a `<!doctype html>` before anything else',\n    url: false\n  },\n  missingDoctypeName: {\n    reason: 'Missing doctype name',\n    description: 'Unexpected doctype end at `%c`. Expected `html` instead'\n  },\n  missingDoctypePublicIdentifier: {\n    reason: 'Missing public identifier in doctype',\n    description: 'Unexpected `%c`. Expected identifier for `public` instead'\n  },\n  missingDoctypeSystemIdentifier: {\n    reason: 'Missing system identifier in doctype',\n    description:\n      'Unexpected `%c`. Expected identifier for `system` instead (suggested: `\"about:legacy-compat\"`)'\n  },\n  missingEndTagName: {\n    reason: 'Missing name in end tag',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  missingQuoteBeforeDoctypePublicIdentifier: {\n    reason: 'Missing quote before public identifier in doctype',\n    description: 'Unexpected `%c`. Expected `\"` or `\\'` instead'\n  },\n  missingQuoteBeforeDoctypeSystemIdentifier: {\n    reason: 'Missing quote before system identifier in doctype',\n    description: 'Unexpected `%c`. Expected `\"` or `\\'` instead'\n  },\n  missingSemicolonAfterCharacterReference: {\n    reason: 'Missing semicolon after character reference',\n    description: 'Unexpected `%c`. Expected `;` instead'\n  },\n  missingWhitespaceAfterDoctypePublicKeyword: {\n    reason: 'Missing whitespace after public identifier in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  missingWhitespaceAfterDoctypeSystemKeyword: {\n    reason: 'Missing whitespace after system identifier in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  missingWhitespaceBeforeDoctypeName: {\n    reason: 'Missing whitespace before doctype name',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  missingWhitespaceBetweenAttributes: {\n    reason: 'Missing whitespace between attributes',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers: {\n    reason:\n      'Missing whitespace between public and system identifiers in doctype',\n    description: 'Unexpected `%c`. Expected ASCII whitespace instead'\n  },\n  nestedComment: {\n    reason: 'Unexpected nested comment',\n    description: 'Unexpected `<!--`. Expected `-->`'\n  },\n  nestedNoscriptInHead: {\n    reason: 'Unexpected nested `<noscript>` in `<head>`',\n    description:\n      'Unexpected `<noscript>`. Expected a closing tag or a meta element',\n    url: false\n  },\n  nonConformingDoctype: {\n    reason: 'Unexpected non-conforming doctype declaration',\n    description:\n      'Expected `<!doctype html>` or `<!doctype html system \"about:legacy-compat\">`',\n    url: false\n  },\n  nonVoidHtmlElementStartTagWithTrailingSolidus: {\n    reason: 'Unexpected trailing slash on start tag of non-void element',\n    description: 'Unexpected `/`. Expected `>` instead'\n  },\n  noncharacterCharacterReference: {\n    reason:\n      'Unexpected noncharacter code point referenced by character reference',\n    description: 'Unexpected code point. Do not use noncharacters in HTML'\n  },\n  noncharacterInInputStream: {\n    reason: 'Unexpected noncharacter character',\n    description: 'Unexpected code point `%x`. Do not use noncharacters in HTML'\n  },\n  nullCharacterReference: {\n    reason: 'Unexpected NULL character referenced by character reference',\n    description: 'Unexpected code point. Do not use NULL characters in HTML'\n  },\n  openElementsLeftAfterEof: {\n    reason: 'Unexpected end of file',\n    description: 'Unexpected end of file. Expected closing tag instead',\n    url: false\n  },\n  surrogateCharacterReference: {\n    reason: 'Unexpected surrogate character referenced by character reference',\n    description:\n      'Unexpected code point. Do not use lone surrogate characters in HTML'\n  },\n  surrogateInInputStream: {\n    reason: 'Unexpected surrogate character',\n    description:\n      'Unexpected code point `%x`. Do not use lone surrogate characters in HTML'\n  },\n  unexpectedCharacterAfterDoctypeSystemIdentifier: {\n    reason: 'Invalid character after system identifier in doctype',\n    description: 'Unexpected character at `%c`. Expected `>`'\n  },\n  unexpectedCharacterInAttributeName: {\n    reason: 'Unexpected character in attribute name',\n    description:\n      'Unexpected `%c`. Expected whitespace, `/`, `>`, `=`, or probably an ASCII letter'\n  },\n  unexpectedCharacterInUnquotedAttributeValue: {\n    reason: 'Unexpected character in unquoted attribute value',\n    description: 'Unexpected `%c`. Quote the attribute value to include it'\n  },\n  unexpectedEqualsSignBeforeAttributeName: {\n    reason: 'Unexpected equals sign before attribute name',\n    description: 'Unexpected `%c`. Add an attribute name before it'\n  },\n  unexpectedNullCharacter: {\n    reason: 'Unexpected NULL character',\n    description:\n      'Unexpected code point `%x`. Do not use NULL characters in HTML'\n  },\n  unexpectedQuestionMarkInsteadOfTagName: {\n    reason: 'Unexpected question mark instead of tag name',\n    description: 'Unexpected `%c`. Expected an ASCII letter instead'\n  },\n  unexpectedSolidusInTag: {\n    reason: 'Unexpected slash in tag',\n    description:\n      'Unexpected `%c-1`. Expected it followed by `>` or in a quoted attribute value'\n  },\n  unknownNamedCharacterReference: {\n    reason: 'Unexpected unknown named character reference',\n    description:\n      'Unexpected character reference. Expected known named character references'\n  }\n}\n", "/**\n * @typedef {import('./types.js').H} H\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').MdastNode} MdastNode\n */\n\nimport {one} from './one.js'\n\n/**\n * @param {H} h\n * @param {Node} parent\n * @returns {Array<MdastNode>}\n */\nexport function all(h, parent) {\n  /** @type {Array<Node>} */\n  // @ts-expect-error Assume `parent` is a parent.\n  const nodes = parent.children || []\n  /** @type {Array<MdastNode>} */\n  const values = []\n  let index = -1\n\n  while (++index < nodes.length) {\n    // @ts-expect-error assume `parent` is a parent.\n    const result = one(h, nodes[index], parent)\n\n    if (Array.isArray(result)) {\n      values.push(...result)\n    } else if (result) {\n      values.push(result)\n    }\n  }\n\n  let start = 0\n  let end = values.length\n\n  while (start < end && values[start].type === 'break') {\n    start++\n  }\n\n  while (end > start && values[end - 1].type === 'break') {\n    end--\n  }\n\n  return start === 0 && end === values.length\n    ? values\n    : values.slice(start, end)\n}\n", "export const own = {}.hasOwnProperty\n", "/**\n * @typedef {import('../types.js').H} H\n */\n\n/**\n * @param {H} h\n * @param {string} value\n * @returns {string}\n */\nexport function wrapText(h, value) {\n  return h.wrapText ? value : value.replace(/\\r?\\n|\\r/g, ' ')\n}\n", "/**\n * @typedef {import('./types.js').H} H\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').MdastNode} MdastNode\n */\n\nimport {all} from './all.js'\nimport {own} from './util/own.js'\nimport {wrapText} from './util/wrap-text.js'\n\n/**\n * @param {H} h\n * @param {Node} node\n * @param {Parent|undefined} parent\n * @returns {MdastNode|Array<MdastNode>|void}\n */\nexport function one(h, node, parent) {\n  /** @type {Handle|undefined} */\n  let fn\n\n  if (node.type === 'element') {\n    if (node.properties && node.properties.dataMdast === 'ignore') {\n      return\n    }\n\n    if (own.call(h.handlers, node.tagName)) {\n      fn = h.handlers[node.tagName]\n    }\n  } else if (own.call(h.handlers, node.type)) {\n    fn = h.handlers[node.type]\n  }\n\n  if (typeof fn === 'function') {\n    return fn(h, node, parent)\n  }\n\n  return unknown(h, node)\n}\n\n/**\n * @type {Handle}\n * @param {Node} node\n */\nfunction unknown(h, node) {\n  // @ts-expect-error: Looks like a literal.\n  if (typeof node.value === 'string') {\n    // @ts-expect-error: Looks like a literal.\n    return h(node, 'text', wrapText(h, node.value))\n  }\n\n  return all(h, node)\n}\n", "/**\n * @typedef {import('../types.js').MdastNode} MdastNode\n * @typedef {import('../types.js').MdastPhrasingContent} MdastPhrasingContent\n */\n\nimport extend from 'extend'\nimport {phrasing as hastPhrasing} from 'hast-util-phrasing'\nimport {phrasing as mdastPhrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Array<MdastNode>} nodes\n */\nexport function wrap(nodes) {\n  return runs(nodes, onphrasing)\n\n  /**\n   * @param {Array<MdastPhrasingContent>} nodes\n   * @returns {MdastNode|Array<MdastNode>}\n   */\n  function onphrasing(nodes) {\n    const head = nodes[0]\n\n    if (\n      nodes.length === 1 &&\n      head.type === 'text' &&\n      (head.value === ' ' || head.value === '\\n')\n    ) {\n      return []\n    }\n\n    return {type: 'paragraph', children: nodes}\n  }\n}\n\n/**\n * Check if there are non-phrasing mdast nodes returned.\n * This is needed if a fragment is given, which could just be a sentence, and\n * doesn\u2019t need a wrapper paragraph.\n *\n * @param {Array<MdastNode>} nodes\n * @returns {boolean}\n */\nexport function wrapNeeded(nodes) {\n  let index = -1\n  /** @type {MdastNode} */\n  let node\n\n  while (++index < nodes.length) {\n    node = nodes[index]\n\n    if (!phrasing(node) || ('children' in node && wrapNeeded(node.children))) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Wrap all runs of mdast phrasing content in `paragraph` nodes.\n *\n * @param {Array<MdastNode>} nodes\n * @param {(nodes: Array<MdastPhrasingContent>) => MdastNode|Array<MdastNode>} onphrasing\n * @param {(node: MdastNode) => MdastNode} [onnonphrasing]\n */\nfunction runs(nodes, onphrasing, onnonphrasing) {\n  const nonphrasing = onnonphrasing || identity\n  /** @type {Array<MdastNode>} */\n  const flattened = flatten(nodes)\n  /** @type {Array<MdastNode>} */\n  let result = []\n  let index = -1\n  /** @type {Array<MdastPhrasingContent>|undefined} */\n  let queue\n  /** @type {MdastNode} */\n  let node\n\n  while (++index < flattened.length) {\n    node = flattened[index]\n\n    if (phrasing(node)) {\n      if (!queue) queue = []\n      queue.push(node)\n    } else {\n      if (queue) {\n        result = result.concat(onphrasing(queue))\n        queue = undefined\n      }\n\n      result = result.concat(nonphrasing(node))\n    }\n  }\n\n  if (queue) {\n    result = result.concat(onphrasing(queue))\n  }\n\n  return result\n}\n\n/**\n * Flatten a list of nodes.\n *\n * @param {Array<MdastNode>} nodes\n * @returns {Array<MdastNode>}\n */\nfunction flatten(nodes) {\n  /** @type {Array<MdastNode>} */\n  let flattened = []\n  let index = -1\n  /** @type {MdastNode} */\n  let node\n\n  while (++index < nodes.length) {\n    node = nodes[index]\n\n    // Straddling: some elements are *weird*.\n    // Namely: `map`, `ins`, `del`, and `a`, as they are hybrid elements.\n    // See: <https://html.spec.whatwg.org/#paragraphs>.\n    // Paragraphs are the weirdest of them all.\n    // See the straddling fixture for more info!\n    // `ins` is ignored in mdast, so we don\u2019t need to worry about that.\n    // `map` maps to its content, so we don\u2019t need to worry about that either.\n    // `del` maps to `delete` and `a` to `link`, so we do handle those.\n    // What we\u2019ll do is split `node` over each of its children.\n    if (\n      (node.type === 'delete' || node.type === 'link') &&\n      wrapNeeded(node.children)\n    ) {\n      flattened = flattened.concat(split(node))\n    } else {\n      flattened.push(node)\n    }\n  }\n\n  return flattened\n}\n\n/**\n * @param {MdastNode} node\n * @returns {Array<MdastNode>}\n */\nfunction split(node) {\n  // @ts-expect-error Assume parent.\n  return runs(node.children, onphrasing, onnonphrasing)\n\n  /**\n   * Use `child`, add `parent` as its first child, put the original children\n   * into `parent`.\n   * If `child` is not a parent, `parent` will not be added.\n   *\n   * @param {MdastNode} child\n   * @returns {MdastNode}\n   */\n  function onnonphrasing(child) {\n    if ('children' in child && 'children' in node) {\n      const {children, ...rest} = node\n      return {\n        ...child,\n        // @ts-expect-error: assume matching parent & child.\n        children: [{...extend(true, {}, rest), children: child.children}]\n      }\n    }\n\n    return {...child}\n  }\n\n  /**\n   * Use `parent`, put the phrasing run inside it.\n   *\n   * @param {Array<MdastPhrasingContent>} nodes\n   * @returns {MdastNode}\n   */\n  function onphrasing(nodes) {\n    // @ts-expect-error: assume parent.\n    const {children, ...rest} = node\n    // @ts-expect-error: assume matching parent & child.\n    return {...extend(true, {}, rest), children: nodes}\n  }\n}\n\n/**\n * Check if an mdast node is phrasing.\n *\n * Also supports checking embedded hast fields.\n *\n * @param {MdastNode} node\n * @returns {node is MdastPhrasingContent}\n */\nfunction phrasing(node) {\n  return node.data && node.data.hName\n    ? hastPhrasing({\n        type: 'element',\n        tagName: node.data.hName,\n        properties: {},\n        children: []\n      })\n    : mdastPhrasing(node)\n}\n\n/**\n * @template {unknown} T\n * @param {T} n\n * @returns {T}\n */\nfunction identity(n) {\n  return n\n}\n", "/**\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('unist-util-is').AssertPredicate<PhrasingContent>} AssertPredicatePhrasing\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * @param\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\nexport const phrasing = /** @type {AssertPredicatePhrasing} */ (\n  convert([\n    'break',\n    'delete',\n    'emphasis',\n    'footnote',\n    'footnoteReference',\n    'image',\n    'imageReference',\n    'inlineCode',\n    'link',\n    'linkReference',\n    'strong',\n    'text'\n  ])\n)\n", "/**\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {all} from '../all.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @param {Node} node\n * @returns {Array<MdastNode>}\n */\nexport function wrapChildren(h, node) {\n  return wrap(all(h, node))\n}\n", "/**\n * @typedef {import('../types.js').H} H\n */\n\n/**\n * @param {H} h\n * @param {string|null|undefined} url\n * @returns {string}\n */\nexport function resolve(h, url) {\n  if (url === null || url === undefined) {\n    return ''\n  }\n\n  if (h.frozenBaseUrl) {\n    return String(new URL(url, h.frozenBaseUrl))\n  }\n\n  return url\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n */\n\nimport {all} from '../all.js'\nimport {resolve} from '../util/resolve.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function a(h, node) {\n  /** @type {Properties} */\n  // @ts-expect-error: `props` are defined.\n  const props = node.properties\n  return h(\n    node,\n    'link',\n    {\n      title: props.title || null,\n      url: resolve(h, String(props.href || '') || null)\n    },\n    all(h, node)\n  )\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function base(h, node) {\n  if (!h.baseFound) {\n    h.frozenBaseUrl =\n      String((node.properties && node.properties.href) || '') || null\n    h.baseFound = true\n  }\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {wrapChildren} from '../util/wrap-children.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrapChildren(h, node))\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function br(h, node) {\n  return h.wrapText ? h(node, 'break') : h(node, 'text', ' ')\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Find the first node in `parent` after another `node` or after an index,\n * that passes `test`.\n\n * @param parent\n *   Parent node.\n * @param index\n *   Child of `parent` or it\u2019s index.\n * @param test\n *   `unist-util-is`-compatible test.\n * @returns\n *   Child of `parent` or `null`.\n */\nexport const findAfter =\n  /**\n   * @type {(\n   *  (<T extends Node>(node: Parent, index: Node | number, test: import('unist-util-is').PredicateTest<T>) => T | null) &\n   *  ((node: Parent, index: Node | number, test?: Test) => Node | null)\n   * )}\n   */\n  (\n    /**\n     * @param {Parent} parent\n     * @param {Node | number} index\n     * @param {Test} [test]\n     * @returns {Node | null}\n     */\n    function (parent, index, test) {\n      const is = convert(test)\n\n      if (!parent || !parent.type || !parent.children) {\n        throw new Error('Expected parent node')\n      }\n\n      if (typeof index === 'number') {\n        if (index < 0 || index === Number.POSITIVE_INFINITY) {\n          throw new Error('Expected positive finite number as index')\n        }\n      } else {\n        index = parent.children.indexOf(index)\n\n        if (index < 0) {\n          throw new Error('Expected child node or index')\n        }\n      }\n\n      while (++index < parent.children.length) {\n        if (is(parent.children[index], index, parent)) {\n          return parent.children[index]\n        }\n      }\n\n      return null\n    }\n  )\n", "/**\n * @typedef {import('hast-util-is-element').TestFunctionAnything} TestFunctionAnything\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n */\n\n/**\n * @typedef {Content | Root} Node\n *   Any node.\n * @typedef {Extract<Node, import('unist').Parent>} Parent\n *   Any parent.\n * @typedef {'normal' | 'pre' | 'nowrap' | 'pre-wrap'} Whitespace\n *   Valid and useful whitespace values (from CSS).\n * @typedef {0 | 1 | 2} BreakNumber\n *   Specific break:\n *\n *   *   `0` \u2014 space\n *   *   `1` \u2014 line ending\n *   *   `2` \u2014 blank line\n * @typedef {'\\n'} BreakForce\n *   Forced break.\n * @typedef {boolean} BreakValue\n *   Whether there was a break.\n * @typedef {BreakValue | BreakNumber | undefined} BreakBefore\n *   Any value for a break before.\n * @typedef {BreakValue | BreakNumber | BreakForce | undefined} BreakAfter\n *   Any value for a break after.\n *\n * @typedef CollectionInfo\n *   Info on current collection.\n * @property {Whitespace} whitespace\n *   Current whitespace setting.\n * @property {BreakBefore} breakBefore\n *   Whether there was a break before.\n * @property {BreakAfter} breakAfter\n *   Whether there was a break after.\n *\n * @typedef Options\n *   Configuration.\n * @property {Whitespace | null | undefined} [whitespace='normal']\n *   Initial CSS whitespace setting to use.\n */\n\nimport { convertElement } from 'hast-util-is-element';\nimport { findAfter } from 'unist-util-find-after';\n\nconst searchLineFeeds = /\\n/g;\nconst searchTabOrSpaces = /[\\t ]+/g;\n\nconst br = convertElement('br');\nconst p = convertElement('p');\nconst cell = convertElement(['th', 'td']);\nconst row = convertElement('tr');\n\n// Note that we don\u2019t need to include void elements here as they don\u2019t have text.\n// See: <https://github.com/wooorm/html-void-elements>\nconst notRendered = convertElement([\n// List from: <https://html.spec.whatwg.org/#hidden-elements>\n'datalist',\n'head',\n'noembed',\n'noframes',\n'noscript', // Act as if we support scripting.\n'rp',\n'script',\n'style',\n'template',\n'title',\n// Hidden attribute.\nhidden,\n// From: <https://html.spec.whatwg.org/#flow-content-3>\nclosedDialog]\n);\n\n// See: <https://html.spec.whatwg.org/#the-css-user-agent-style-sheet-and-presentational-hints>\nconst blockOrCaption = convertElement([\n'address', // Flow content\n'article', // Sections and headings\n'aside', // Sections and headings\n'blockquote', // Flow content\n'body', // Page\n'caption', // `table-caption`\n'center', // Flow content (legacy)\n'dd', // Lists\n'dialog', // Flow content\n'dir', // Lists (legacy)\n'dl', // Lists\n'dt', // Lists\n'div', // Flow content\n'figure', // Flow content\n'figcaption', // Flow content\n'footer', // Flow content\n'form,', // Flow content\n'h1', // Sections and headings\n'h2', // Sections and headings\n'h3', // Sections and headings\n'h4', // Sections and headings\n'h5', // Sections and headings\n'h6', // Sections and headings\n'header', // Flow content\n'hgroup', // Sections and headings\n'hr', // Flow content\n'html', // Page\n'legend', // Flow content\n'listing', // Flow content (legacy)\n'main', // Flow content\n'menu', // Lists\n'nav', // Sections and headings\n'ol', // Lists\n'p', // Flow content\n'plaintext', // Flow content (legacy)\n'pre', // Flow content\n'section', // Sections and headings\n'ul', // Lists\n'xmp' // Flow content (legacy)\n]);\n\n/**\n * Get the plain-text value of a node.\n *\n * ###### Algorithm\n *\n * *   if `tree` is a comment, returns its `value`\n * *   if `tree` is a text, applies normal whitespace collapsing to its\n *     `value`, as defined by the CSS Text spec\n * *   if `tree` is a root or element, applies an algorithm similar to the\n *     `innerText` getter as defined by HTML\n *\n * ###### Notes\n *\n * > \uD83D\uDC49 **Note**: the algorithm acts as if `tree` is being rendered, and as if\n * > we\u2019re a CSS-supporting user agent, with scripting enabled.\n *\n * *   if `tree` is an element that is not displayed (such as a `head`), we\u2019ll\n *     still use the `innerText` algorithm instead of switching to `textContent`\n * *   if descendants of `tree` are elements that are not displayed, they are\n *     ignored\n * *   CSS is not considered, except for the default user agent style sheet\n * *   a line feed is collapsed instead of ignored in cases where Fullwidth, Wide,\n *     or Halfwidth East Asian Width characters are used, the same goes for a case\n *     with Chinese, Japanese, or Yi writing systems\n * *   replaced elements (such as `audio`) are treated like non-replaced elements\n *\n * @param {Node} tree\n *   Tree to turn into text.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `tree`.\n */\nexport function toText(tree, options = {}) {\n  const children = 'children' in tree ? tree.children : [];\n  const block = blockOrCaption(tree);\n  const whitespace = inferWhitespace(tree, {\n    whitespace: options.whitespace || 'normal',\n    breakBefore: false,\n    breakAfter: false\n  });\n\n  /** @type {Array<string | BreakNumber>} */\n  const results = [];\n\n  // Treat `text` and `comment` as having normal white-space.\n  // This deviates from the spec as in the DOM the node\u2019s `.data` has to be\n  // returned.\n  // If you want that behavior use `hast-util-to-string`.\n  // All other nodes are later handled as if they are `element`s (so the\n  // algorithm also works on a `root`).\n  // Nodes without children are treated as a void element, so `doctype` is thus\n  // ignored.\n  if (tree.type === 'text' || tree.type === 'comment') {\n    results.push(\n      ...collectText(tree, {\n        whitespace,\n        breakBefore: true,\n        breakAfter: true\n      })\n    );\n  }\n\n  // 1.  If this element is not being rendered, or if the user agent is a\n  //     non-CSS user agent, then return the same value as the textContent IDL\n  //     attribute on this element.\n  //\n  //     Note: we\u2019re not supporting stylesheets so we\u2019re acting as if the node\n  //     is rendered.\n  //\n  //     If you want that behavior use `hast-util-to-string`.\n  //     Important: we\u2019ll have to account for this later though.\n\n  // 2.  Let results be a new empty list.\n  let index = -1;\n\n  // 3.  For each child node node of this element:\n  while (++index < children.length) {\n    // 3.1. Let current be the list resulting in running the inner text\n    //      collection steps with node.\n    //      Each item in results will either be a JavaScript string or a\n    //      positive integer (a required line break count).\n    // 3.2. For each item item in current, append item to results.\n    results.push(\n      // @ts-expect-error Looks like a parent.\n      ...innerTextCollection(children[index], tree, {\n        whitespace,\n        breakBefore: index ? undefined : block,\n        breakAfter:\n        index < children.length - 1 ? br(children[index + 1]) : block\n      })\n    );\n  }\n\n  // 4.  Remove any items from results that are the empty string.\n  // 5.  Remove any runs of consecutive required line break count items at the\n  //     start or end of results.\n  // 6.  Replace each remaining run of consecutive required line break count\n  //     items with a string consisting of as many U+000A LINE FEED (LF)\n  //     characters as the maximum of the values in the required line break\n  //     count items.\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {number | undefined} */\n  let count;\n\n  index = -1;\n\n  while (++index < results.length) {\n    const value = results[index];\n\n    if (typeof value === 'number') {\n      if (count !== undefined && value > count) count = value;\n    } else if (value) {\n      if (count !== undefined && count > -1) {\n        result.push('\\n'.repeat(count) || ' ');\n      }\n\n      count = -1;\n      result.push(value);\n    }\n  }\n\n  // 7.  Return the concatenation of the string items in results.\n  return result.join('');\n}\n\n/**\n * <https://html.spec.whatwg.org/#inner-text-collection-steps>\n *\n * @param {Node} node\n * @param {Parent} parent\n * @param {CollectionInfo} info\n * @returns {Array<string | BreakNumber>}\n */\nfunction innerTextCollection(node, parent, info) {\n  if (node.type === 'element') {\n    return collectElement(node, parent, info);\n  }\n\n  if (node.type === 'text') {\n    return info.whitespace === 'normal' ?\n    collectText(node, info) :\n    collectPreText(node);\n  }\n\n  return [];\n}\n\n/**\n * Collect an element.\n *\n * @param {Element} node\n *   Element node.\n * @param {Parent} parent\n * @param {CollectionInfo} info\n *   Info on current collection.\n * @returns {Array<string | BreakNumber>}\n */\nfunction collectElement(node, parent, info) {\n  // First we infer the `white-space` property.\n  const whitespace = inferWhitespace(node, info);\n  const children = node.children || [];\n  let index = -1;\n  /** @type {Array<string | BreakNumber>} */\n  let items = [];\n\n  // We\u2019re ignoring point 3, and exiting without any content here, because we\n  // deviated from the spec in `toText` at step 3.\n  if (notRendered(node)) {\n    return items;\n  }\n\n  /** @type {BreakNumber | undefined} */\n  let prefix;\n  /** @type {BreakNumber | BreakForce | undefined} */\n  let suffix;\n  // Note: we first detect if there is going to be a break before or after the\n  // contents, as that changes the white-space handling.\n\n  // 2.  If node\u2019s computed value of `visibility` is not `visible`, then return\n  //     items.\n  //\n  //     Note: Ignored, as everything is visible by default user agent styles.\n\n  // 3.  If node is not being rendered, then return items. [...]\n  //\n  //     Note: We already did this above.\n\n  // See `collectText` for step 4.\n\n  // 5.  If node is a `<br>` element, then append a string containing a single\n  //     U+000A LINE FEED (LF) character to items.\n  if (br(node)) {\n    suffix = '\\n';\n  }\n\n  // 7.  If node\u2019s computed value of `display` is `table-row`, and node\u2019s CSS\n  //     box is not the last `table-row` box of the nearest ancestor `table`\n  //     box, then append a string containing a single U+000A LINE FEED (LF)\n  //     character to items.\n  //\n  //     See: <https://html.spec.whatwg.org/#tables-2>\n  //     Note: needs further investigation as this does not account for implicit\n  //     rows.\n  else if (row(node) && findAfter(parent, node, row)) {\n    suffix = '\\n';\n  }\n\n  // 8.  If node is a `<p>` element, then append 2 (a required line break count)\n  //     at the beginning and end of items.\n  else if (p(node)) {\n    prefix = 2;\n    suffix = 2;\n  }\n\n  // 9.  If node\u2019s used value of `display` is block-level or `table-caption`,\n  //     then append 1 (a required line break count) at the beginning and end of\n  //     items.\n  else if (blockOrCaption(node)) {\n    prefix = 1;\n    suffix = 1;\n  }\n\n  // 1.  Let items be the result of running the inner text collection steps with\n  //     each child node of node in tree order, and then concatenating the\n  //     results to a single list.\n  while (++index < children.length) {\n    items = items.concat(\n      innerTextCollection(children[index], node, {\n        whitespace,\n        breakBefore: index ? undefined : prefix,\n        breakAfter:\n        index < children.length - 1 ? br(children[index + 1]) : suffix\n      })\n    );\n  }\n\n  // 6.  If node\u2019s computed value of `display` is `table-cell`, and node\u2019s CSS\n  //     box is not the last `table-cell` box of its enclosing `table-row` box,\n  //     then append a string containing a single U+0009 CHARACTER TABULATION\n  //     (tab) character to items.\n  //\n  //     See: <https://html.spec.whatwg.org/#tables-2>\n  if (cell(node) && findAfter(parent, node, cell)) {\n    items.push('\\t');\n  }\n\n  // Add the pre- and suffix.\n  if (prefix) items.unshift(prefix);\n  if (suffix) items.push(suffix);\n\n  return items;\n}\n\n/**\n * 4.  If node is a Text node, then for each CSS text box produced by node,\n *     in content order, compute the text of the box after application of the\n *     CSS `white-space` processing rules and `text-transform` rules, set\n *     items to the list of the resulting strings, and return items.\n *     The CSS `white-space` processing rules are slightly modified:\n *     collapsible spaces at the end of lines are always collapsed, but they\n *     are only removed if the line is the last line of the block, or it ends\n *     with a br element.\n *     Soft hyphens should be preserved.\n *\n *     Note: See `collectText` and `collectPreText`.\n *     Note: we don\u2019t deal with `text-transform`, no element has that by\n *     default.\n *\n * See: <https://drafts.csswg.org/css-text/#white-space-phase-1>\n *\n * @param {Text | Comment} node\n *   Text node.\n * @param {CollectionInfo} info\n *   Info on current collection.\n * @returns {Array<string | BreakNumber>}\n *   Result.\n */\nfunction collectText(node, info) {\n  const value = String(node.value);\n  /** @type {Array<string>} */\n  const lines = [];\n  /** @type {Array<string | BreakNumber>} */\n  const result = [];\n  let start = 0;\n\n  while (start <= value.length) {\n    searchLineFeeds.lastIndex = start;\n\n    const match = searchLineFeeds.exec(value);\n    const end = match && 'index' in match ? match.index : value.length;\n\n    lines.push(\n      // Any sequence of collapsible spaces and tabs immediately preceding or\n      // following a segment break is removed.\n      trimAndCollapseSpacesAndTabs(\n        // [\u2026] ignoring bidi formatting characters (characters with the\n        // Bidi_Control property [UAX9]: ALM, LTR, RTL, LRE-RLO, LRI-PDI) as if\n        // they were not there.\n        value.\n        slice(start, end).\n        replace(/[\\u061C\\u200E\\u200F\\u202A-\\u202E\\u2066-\\u2069]/g, ''),\n        start === 0 ? info.breakBefore : true,\n        end === value.length ? info.breakAfter : true\n      )\n    );\n\n    start = end + 1;\n  }\n\n  // Collapsible segment breaks are transformed for rendering according to the\n  // segment break transformation rules.\n  // So here we jump to 4.1.2 of [CSSTEXT]:\n  // Any collapsible segment break immediately following another collapsible\n  // segment break is removed\n  let index = -1;\n  /** @type {BreakNumber | undefined} */\n  let join;\n\n  while (++index < lines.length) {\n    // *   If the character immediately before or immediately after the segment\n    //     break is the zero-width space character (U+200B), then the break is\n    //     removed, leaving behind the zero-width space.\n    if (\n    lines[index].charCodeAt(lines[index].length - 1) === 0x200b /* ZWSP */ ||\n    index < lines.length - 1 &&\n    lines[index + 1].charCodeAt(0) === 0x200b /* ZWSP */)\n    {\n      result.push(lines[index]);\n      join = undefined;\n    }\n\n    // *   Otherwise, if the East Asian Width property [UAX11] of both the\n    //     character before and after the segment break is Fullwidth, Wide, or\n    //     Halfwidth (not Ambiguous), and neither side is Hangul, then the\n    //     segment break is removed.\n    //\n    //     Note: ignored.\n    // *   Otherwise, if the writing system of the segment break is Chinese,\n    //     Japanese, or Yi, and the character before or after the segment break\n    //     is punctuation or a symbol (Unicode general category P* or S*) and\n    //     has an East Asian Width property of Ambiguous, and the character on\n    //     the other side of the segment break is Fullwidth, Wide, or Halfwidth,\n    //     and not Hangul, then the segment break is removed.\n    //\n    //     Note: ignored.\n\n    // *   Otherwise, the segment break is converted to a space (U+0020).\n    else if (lines[index]) {\n      if (typeof join === 'number') result.push(join);\n      result.push(lines[index]);\n      join = 0;\n    } else if (index === 0 || index === lines.length - 1) {\n      // If this line is empty, and it\u2019s the first or last, add a space.\n      // Note that this function is only called in normal whitespace, so we\n      // don\u2019t worry about `pre`.\n      result.push(0);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Collect a text node as \u201Cpre\u201D whitespace.\n *\n * @param {Text} node\n *   Text node.\n * @returns {Array<string | BreakNumber>}\n *   Result.\n */\nfunction collectPreText(node) {\n  return [String(node.value)];\n}\n\n/**\n * 3.  Every collapsible tab is converted to a collapsible space (U+0020).\n * 4.  Any collapsible space immediately following another collapsible\n *     space\u2014even one outside the boundary of the inline containing that\n *     space, provided both spaces are within the same inline formatting\n *     context\u2014is collapsed to have zero advance width. (It is invisible,\n *     but retains its soft wrap opportunity, if any.)\n *\n * @param {string} value\n *   Value to collapse.\n * @param {BreakBefore} breakBefore\n *   Whether there was a break before.\n * @param {BreakAfter} breakAfter\n *   Whether there was a break after.\n * @returns {string}\n *   Result.\n */\nfunction trimAndCollapseSpacesAndTabs(value, breakBefore, breakAfter) {\n  /** @type {Array<string>} */\n  const result = [];\n  let start = 0;\n  /** @type {number | undefined} */\n  let end;\n\n  while (start < value.length) {\n    searchTabOrSpaces.lastIndex = start;\n    const match = searchTabOrSpaces.exec(value);\n    end = match ? match.index : value.length;\n\n    // If we\u2019re not directly after a segment break, but there was white space,\n    // add an empty value that will be turned into a space.\n    if (!start && !end && match && !breakBefore) {\n      result.push('');\n    }\n\n    if (start !== end) {\n      result.push(value.slice(start, end));\n    }\n\n    start = match ? end + match[0].length : end;\n  }\n\n  // If we reached the end, there was trailing white space, and there\u2019s no\n  // segment break after this node, add an empty value that will be turned\n  // into a space.\n  if (start !== end && !breakAfter) {\n    result.push('');\n  }\n\n  return result.join(' ');\n}\n\n/**\n * Figure out the whitespace of a node.\n *\n * We don\u2019t support void elements here (so `nobr wbr` -> `normal` is ignored).\n *\n * @param {Node} node\n *   Node (typically `Element`).\n * @param {CollectionInfo} info\n *   Info on current collection.\n * @returns {Whitespace}\n *   Applied whitespace.\n */\nfunction inferWhitespace(node, info) {\n  if (node.type === 'element') {\n    const props = node.properties || {};\n    switch (node.tagName) {\n      case 'listing':\n      case 'plaintext':\n      case 'xmp':{\n          return 'pre';\n        }\n\n      case 'nobr':{\n          return 'nowrap';\n        }\n\n      case 'pre':{\n          return props.wrap ? 'pre-wrap' : 'pre';\n        }\n\n      case 'td':\n      case 'th':{\n          return props.noWrap ? 'nowrap' : info.whitespace;\n        }\n\n      case 'textarea':{\n          return 'pre-wrap';\n        }\n\n      default:\n    }\n  }\n\n  return info.whitespace;\n}\n\n/** @type {TestFunctionAnything} */\nfunction hidden(node) {\n  return Boolean((node.properties || {}).hidden);\n}\n\n/** @type {TestFunctionAnything} */\nfunction closedDialog(node) {\n  return node.tagName === 'dialog' && !(node.properties || {}).open;\n}", "/**\n * Remove final line endings from `value`\n *\n * @param {unknown} value\n *   Value with trailing line endings, coerced to string.\n * @return {string}\n *   Value without trailing line endings.\n */\nexport function trimTrailingLines(value) {\n  const input = String(value)\n  let end = input.length\n\n  while (end > 0) {\n    const code = input.codePointAt(end - 1)\n    if (code !== undefined && (code === 10 || code === 13)) {\n      end--\n    } else {\n      break\n    }\n  }\n\n  return input.slice(0, end)\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').ElementChild} ElementChild\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {toText} from 'hast-util-to-text'\nimport {trimTrailingLines} from 'trim-trailing-lines'\nimport {wrapText} from '../util/wrap-text.js'\n\nconst prefix = 'language-'\n\nconst pre = convertElement('pre')\nconst isCode = convertElement('code')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function code(h, node) {\n  const children = node.children\n  let index = -1\n  /** @type {Array<string|number>|undefined} */\n  let classList\n  /** @type {string|undefined} */\n  let lang\n\n  if (pre(node)) {\n    while (++index < children.length) {\n      const child = children[index]\n\n      if (\n        isCode(child) &&\n        child.properties &&\n        child.properties.className &&\n        Array.isArray(child.properties.className)\n      ) {\n        classList = child.properties.className\n        break\n      }\n    }\n  }\n\n  if (classList) {\n    index = -1\n\n    while (++index < classList.length) {\n      if (String(classList[index]).slice(0, prefix.length) === prefix) {\n        lang = String(classList[index]).slice(prefix.length)\n        break\n      }\n    }\n  }\n\n  return h(\n    node,\n    'code',\n    {lang: lang || null, meta: null},\n    trimTrailingLines(wrapText(h, toText(node)))\n  )\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Comment} Comment\n */\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Comment} node\n */\nexport function comment(h, node) {\n  return h(node, 'html', '<!--' + wrapText(h, node.value) + '-->')\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function del(h, node) {\n  return h(node, 'delete', all(h, node))\n}\n", "/**\n * @typedef {import('../types.js').MdastListContent} MdastListContent\n */\n\n/**\n * @param {Array<MdastListContent>} children\n * @returns {boolean}\n */\nexport function listItemsSpread(children) {\n  let index = -1\n\n  if (children.length > 1) {\n    while (++index < children.length) {\n      if (children[index].spread) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n", "/**\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').Child} Child\n * @typedef {import('../types.js').MdastListContent} MdastListContent\n */\n\nimport {all} from '../all.js'\n\n/**\n * @param {H} h\n * @param {Child} node\n * @returns {Array<MdastListContent>}\n */\nexport function wrapListItems(h, node) {\n  const children = all(h, node)\n  let index = -1\n\n  while (++index < children.length) {\n    const child = children[index]\n    if (child.type !== 'listItem') {\n      children[index] = {\n        type: 'listItem',\n        spread: false,\n        checked: null,\n        // @ts-expect-error Assume `children[index]` is block content.\n        children: [child]\n      }\n    }\n  }\n\n  // @ts-expect-error Assume all `listItem`s\n  return children\n}\n", "/**\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').ElementChild} ElementChild\n * @typedef {import('../types.js').MdastNode} MdastNode\n * @typedef {import('../types.js').MdastListContent} MdastListContent\n * @typedef {import('../types.js').MdastBlockContent} MdastBlockContent\n * @typedef {import('../types.js').MdastDefinitionContent} MdastDefinitionContent\n *\n * @typedef Group\n * @property {Array<Element>} titles\n * @property {Array<ElementChild>} definitions\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {listItemsSpread} from '../util/list-items-spread.js'\nimport {wrapListItems} from '../util/wrap-list-items.js'\n\nconst div = convertElement('div')\nconst dt = convertElement('dt')\nconst dd = convertElement('dd')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function dl(h, node) {\n  const children = node.children\n  let index = -1\n  /** @type {Array<ElementChild>} */\n  let clean = []\n  /** @type {Array<Group>} */\n  const groups = []\n  /** @type {Group} */\n  let group = {titles: [], definitions: []}\n  /** @type {ElementChild} */\n  let child\n  /** @type {Array<MdastBlockContent|MdastDefinitionContent>} */\n  let result\n\n  // Unwrap `<div>`s\n  while (++index < children.length) {\n    child = children[index]\n    clean = clean.concat(div(child) ? child.children : child)\n  }\n\n  index = -1\n\n  // Group titles and definitions.\n  while (++index < clean.length) {\n    child = clean[index]\n\n    if (dt(child)) {\n      if (dd(clean[index - 1])) {\n        groups.push(group)\n        group = {titles: [], definitions: []}\n      }\n\n      group.titles.push(child)\n    } else {\n      group.definitions.push(child)\n    }\n  }\n\n  groups.push(group)\n\n  // Create items.\n  index = -1\n  /** @type {Array<MdastListContent>} */\n  const content = []\n\n  while (++index < groups.length) {\n    result = [\n      ...handle(h, groups[index].titles),\n      ...handle(h, groups[index].definitions)\n    ]\n\n    if (result.length > 0) {\n      content.push({\n        type: 'listItem',\n        spread: result.length > 1,\n        checked: null,\n        children: result\n      })\n    }\n  }\n\n  // Create a list if there are items.\n  if (content.length > 0) {\n    return h(\n      node,\n      'list',\n      {ordered: false, start: null, spread: listItemsSpread(content)},\n      content\n    )\n  }\n}\n\n/**\n * @param {H} h\n * @param {Array<ElementChild>} children\n * @returns {Array<MdastBlockContent|MdastDefinitionContent>}\n */\nfunction handle(h, children) {\n  const nodes = wrapListItems(h, {type: 'element', tagName: 'x', children})\n\n  if (nodes.length === 0) {\n    return []\n  }\n\n  if (nodes.length === 1) {\n    return nodes[0].children\n  }\n\n  return [\n    {\n      type: 'list',\n      ordered: false,\n      start: null,\n      spread: listItemsSpread(nodes),\n      children: nodes\n    }\n  ]\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function em(h, node) {\n  return h(node, 'emphasis', all(h, node))\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function heading(h, node) {\n  // `else` shouldn\u2019t happen, of course\u2026\n  /* c8 ignore next */\n  const depth = Number(node.tagName.charAt(1)) || 1\n  const wrap = h.wrapText\n\n  h.wrapText = false\n  const result = h(node, 'heading', {depth}, all(h, node))\n  h.wrapText = wrap\n\n  return result\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function hr(h, node) {\n  return h(node, 'thematicBreak')\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n */\n\nimport {resolve} from '../util/resolve.js'\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function iframe(h, node) {\n  /** @type {Properties} */\n  // @ts-expect-error: `props` are defined.\n  const props = node.properties\n  const src = String(props.src || '')\n  const title = String(props.title || '')\n\n  // Only create a link if there is a title.\n  // We can\u2019t use the content of the frame because conforming HTML parsers treat\n  // it as text, whereas legacy parsers treat it as HTML, so it will likely\n  // contain tags that will show up in text.\n  if (src && title) {\n    return {\n      type: 'link',\n      title: null,\n      url: resolve(h, src),\n      children: [{type: 'text', value: wrapText(h, title)}]\n    }\n  }\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n */\n\nimport {resolve} from '../util/resolve.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function img(h, node) {\n  /** @type {Properties} */\n  // @ts-expect-error: `props` are defined.\n  const props = node.properties\n  return h(node, 'image', {\n    url: resolve(h, String(props.src || '') || null),\n    title: props.title || null,\n    alt: props.alt || ''\n  })\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {toText} from 'hast-util-to-text'\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'inlineCode', wrapText(h, toText(node)))\n}\n", "/**\n * @typedef {import('../types.js').H} H\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Child} Child\n * @typedef {import('../types.js').Properties} Properties\n */\n\nimport {hasProperty} from 'hast-util-has-property'\nimport {convertElement} from 'hast-util-is-element'\nimport {toText} from 'hast-util-to-text'\nimport {wrapText} from './wrap-text.js'\n\nconst option = convertElement('option')\n\n/**\n * @param {H} h\n * @param {Element} node\n * @param {Properties} [properties]\n * @returns {Array<[string, string|null]>}\n */\nexport function findSelectedOptions(h, node, properties) {\n  /** @type {Properties} */\n  // @ts-expect-error: `props` exist.\n  const props = properties || node.properties\n  let options = findOptions(node)\n  const size =\n    Math.min(Number.parseInt(String(props.size), 10), 0) ||\n    (props.multiple ? 4 : 1)\n  let index = -1\n  /** @type {Array<Element>} */\n  const selectedOptions = []\n  /** @type {Array<[string, string|null]>} */\n  const values = []\n\n  while (++index < options.length) {\n    if (hasProperty(options[index], 'selected')) {\n      selectedOptions.push(options[index])\n    }\n  }\n\n  const list = selectedOptions.length > 0 ? selectedOptions : options\n  options = list.slice(0, size)\n  index = -1\n\n  while (++index < options.length) {\n    const option = options[index]\n    const content = wrapText(h, toText(option))\n    /** @type {Properties} */\n    // @ts-expect-error: `props` exist.\n    const props = option.properties\n    const label = content || String(props.label || '')\n    const value = String(props.value || '') || content\n    values.push([value, label === value ? null : label])\n  }\n\n  return values\n}\n\n/**\n * @param {Parent} node\n */\nfunction findOptions(node) {\n  const children = node.children\n  let index = -1\n  /** @type {Array<Element>} */\n  let results = []\n  /** @type {Child} */\n  let child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    // @ts-expect-error Looks like a parent.\n    if (Array.isArray(child.children)) {\n      // @ts-expect-error Looks like a parent.\n      results = results.concat(findOptions(child))\n    }\n\n    if (option(child) && !hasProperty(child, 'disabled')) {\n      results.push(child)\n    }\n  }\n\n  return results\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {findSelectedOptions} from '../util/find-selected-options.js'\nimport {own} from '../util/own.js'\nimport {resolve} from '../util/resolve.js'\nimport {wrapText} from '../util/wrap-text.js'\n\nconst datalist = convertElement('datalist')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\n// eslint-disable-next-line complexity\nexport function input(h, node) {\n  /** @type {Properties} */\n  // @ts-expect-error: `props` are defined.\n  const props = node.properties\n  let value = String(props.value || props.placeholder || '')\n  /** @type {Array<MdastNode>} */\n  const results = []\n  /** @type {Array<string>} */\n  const texts = []\n  /** @type {Array<[string, string|null]>} */\n  let values = []\n  let index = -1\n  /** @type {string} */\n  let list\n\n  if (props.disabled || props.type === 'hidden' || props.type === 'file') {\n    return\n  }\n\n  if (props.type === 'checkbox' || props.type === 'radio') {\n    return h(\n      node,\n      'text',\n      wrapText(h, h[props.checked ? 'checked' : 'unchecked'])\n    )\n  }\n\n  if (props.type === 'image') {\n    return props.alt || value\n      ? h(node, 'image', {\n          url: resolve(h, String(props.src || '') || null),\n          title: wrapText(h, String(props.title || '')) || null,\n          alt: wrapText(h, String(props.alt || value))\n        })\n      : []\n  }\n\n  if (value) {\n    values = [[value, null]]\n  } else if (\n    // `list` is not supported on these types:\n    props.type !== 'password' &&\n    props.type !== 'file' &&\n    props.type !== 'submit' &&\n    props.type !== 'reset' &&\n    props.type !== 'button' &&\n    props.list\n  ) {\n    list = String(props.list).toUpperCase()\n\n    if (own.call(h.nodeById, list) && datalist(h.nodeById[list])) {\n      values = findSelectedOptions(h, h.nodeById[list], props)\n    }\n  }\n\n  if (values.length === 0) {\n    return\n  }\n\n  // Hide password value.\n  if (props.type === 'password') {\n    // Passwords don\u2019t support `list`.\n    values[0] = ['\u2022'.repeat(values[0][0].length), null]\n  }\n\n  if (props.type === 'url' || props.type === 'email') {\n    while (++index < values.length) {\n      value = resolve(h, values[index][0])\n\n      results.push(\n        h(\n          node,\n          'link',\n          {\n            title: null,\n            url: wrapText(h, props.type === 'email' ? 'mailto:' + value : value)\n          },\n          [{type: 'text', value: wrapText(h, values[index][1] || value)}]\n        )\n      )\n\n      if (index !== values.length - 1) {\n        results.push({type: 'text', value: ', '})\n      }\n    }\n\n    return results\n  }\n\n  while (++index < values.length) {\n    texts.push(\n      values[index][1]\n        ? values[index][1] + ' (' + values[index][0] + ')'\n        : values[index][0]\n    )\n  }\n\n  return h(node, 'text', wrapText(h, texts.join(', ')))\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').ElementChild} ElementChild\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {wrapChildren} from '../util/wrap-children.js'\n\nconst p = convertElement('p')\nconst input = convertElement('input')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function li(h, node) {\n  const head = node.children[0]\n  /** @type {boolean|null} */\n  let checked = null\n  /** @type {ElementChild} */\n  let checkbox\n  /** @type {Element|undefined} */\n  let clone\n\n  // Check if this node starts with a checkbox.\n  if (p(head)) {\n    checkbox = head.children[0]\n\n    if (\n      input(checkbox) &&\n      checkbox.properties &&\n      (checkbox.properties.type === 'checkbox' ||\n        checkbox.properties.type === 'radio')\n    ) {\n      checked = Boolean(checkbox.properties.checked)\n      clone = {\n        ...node,\n        children: [\n          {...head, children: head.children.slice(1)},\n          ...node.children.slice(1)\n        ]\n      }\n    }\n  }\n\n  const content = wrapChildren(h, clone || node)\n\n  return h(node, 'listItem', {spread: content.length > 1, checked}, content)\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {hasProperty} from 'hast-util-has-property'\nimport {listItemsSpread} from '../util/list-items-spread.js'\nimport {wrapListItems} from '../util/wrap-list-items.js'\n\nconst ol = convertElement('ol')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function list(h, node) {\n  const ordered = ol(node)\n  const children = wrapListItems(h, node)\n  /** @type {number|null} */\n  let start = null\n\n  if (ordered) {\n    start = hasProperty(node, 'start')\n      ? // @ts-expect-error: `props` exist.\n        Number.parseInt(String(node.properties.start), 10)\n      : 1\n  }\n\n  return h(\n    node,\n    'list',\n    {ordered, start, spread: listItemsSpread(children)},\n    children\n  )\n}\n", "/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node\u2019s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n * @typedef {import('../types.js').ElementChild} ElementChild\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {toString} from 'mdast-util-to-string'\nimport {visit, EXIT} from 'unist-util-visit'\nimport {all} from '../all.js'\nimport {resolve} from '../util/resolve.js'\nimport {wrapNeeded} from '../util/wrap.js'\n\nconst source = convertElement('source')\nconst video = convertElement('video')\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function media(h, node) {\n  let nodes = all(h, node)\n  /** @type {Properties} */\n  // @ts-expect-error: `props` are defined.\n  const properties = node.properties\n  const poster = video(node) && String(properties.poster || '')\n  let src = String(properties.src || '')\n  let index = -1\n  /** @type {boolean} */\n  let linkInFallbackContent = false\n  /** @type {ElementChild} */\n  let child\n\n  visit({type: 'root', children: nodes}, 'link', findLink)\n\n  // If the content links to something, or if it\u2019s not phrasing\u2026\n  if (linkInFallbackContent || wrapNeeded(nodes)) {\n    return nodes\n  }\n\n  // Find the source.\n  while (!src && ++index < node.children.length) {\n    child = node.children[index]\n    if (source(child)) {\n      // @ts-expect-error: `props` are defined.\n      src = String(child.properties.src || '')\n    }\n  }\n\n  // If there\u2019s a poster defined on the video, create an image.\n  if (poster) {\n    nodes = [\n      {\n        type: 'image',\n        title: null,\n        url: resolve(h, poster),\n        alt: toString({children: nodes})\n      }\n    ]\n  }\n\n  // Link to the media resource.\n  return {\n    type: 'link',\n    // @ts-expect-error Types are broken.\n    title: node.properties.title || null,\n    url: resolve(h, src),\n    // @ts-expect-error Assume phrasing content.\n    children: nodes\n  }\n\n  function findLink() {\n    linkInFallbackContent = true\n    return EXIT\n  }\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function p(h, node) {\n  const nodes = all(h, node)\n\n  if (nodes.length > 0) {\n    return h(node, 'paragraph', nodes)\n  }\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function q(h, node) {\n  const expected = h.quotes[h.qNesting % h.quotes.length]\n\n  h.qNesting++\n  const contents = all(h, node)\n  h.qNesting--\n\n  contents.unshift({type: 'text', value: expected.charAt(0)})\n\n  contents.push({\n    type: 'text',\n    value: expected.length > 1 ? expected.charAt(1) : expected\n  })\n\n  return contents\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Root} Root\n */\n\nimport {all} from '../all.js'\nimport {wrap, wrapNeeded} from '../util/wrap.js'\n\n/**\n * @type {Handle}\n * @param {Root} node\n */\nexport function root(h, node) {\n  let children = all(h, node)\n\n  if (h.document || wrapNeeded(children)) {\n    children = wrap(children)\n  }\n\n  return h(node, 'root', children)\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {findSelectedOptions} from '../util/find-selected-options.js'\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function select(h, node) {\n  const values = findSelectedOptions(h, node)\n  let index = -1\n  /** @type {Array<string>} */\n  const results = []\n  /** @type {[string, string|null]} */\n  let value\n\n  while (++index < values.length) {\n    value = values[index]\n    results.push(value[1] ? value[1] + ' (' + value[0] + ')' : value[0])\n  }\n\n  if (results.length > 0) {\n    return h(node, 'text', wrapText(h, results.join(', ')))\n  }\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').MdastNode} MdastNode\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function tableCell(h, node) {\n  const wrap = h.wrapText\n\n  h.wrapText = false\n\n  const result = h(node, 'tableCell', all(h, node))\n\n  if (node.properties && (node.properties.rowSpan || node.properties.colSpan)) {\n    const data = result.data || (result.data = {})\n    if (node.properties.rowSpan) data.rowSpan = node.properties.rowSpan\n    if (node.properties.colSpan) data.colSpan = node.properties.colSpan\n  }\n\n  h.wrapText = wrap\n\n  return result\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {all} from '../all.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function tableRow(h, node) {\n  return h(node, 'tableRow', all(h, node))\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').MdastNode} MdastNode\n * @typedef {import('../types.js').MdastTableContent} MdastTableContent\n * @typedef {import('../types.js').MdastRowContent} MdastRowContent\n * @typedef {import('../types.js').MdastPhrasingContent} MdastPhrasingContent\n *\n * @typedef Info\n * @property {Array<string|null>} align\n * @property {boolean} headless\n */\n\nimport {convertElement} from 'hast-util-is-element'\nimport {toText} from 'hast-util-to-text'\nimport {visit, SKIP} from 'unist-util-visit'\nimport {wrapText} from '../util/wrap-text.js'\nimport {all} from '../all.js'\n\nconst thead = convertElement('thead')\nconst tr = convertElement('tr')\nconst cell = convertElement(['th', 'td'])\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function table(h, node) {\n  if (h.inTable) {\n    return h(node, 'text', wrapText(h, toText(node)))\n  }\n\n  h.inTable = true\n\n  const {headless, align} = inspect(node)\n  const rows = toRows(all(h, node), headless)\n  let columns = 1\n  let rowIndex = -1\n\n  while (++rowIndex < rows.length) {\n    const cells = rows[rowIndex].children\n    let cellIndex = -1\n\n    while (++cellIndex < cells.length) {\n      const cell = cells[cellIndex]\n\n      if (cell.data) {\n        const colSpan = Number.parseInt(String(cell.data.colSpan), 10) || 1\n        const rowSpan = Number.parseInt(String(cell.data.rowSpan), 10) || 1\n\n        if (colSpan > 1 || rowSpan > 1) {\n          let otherRowIndex = rowIndex - 1\n\n          while (++otherRowIndex < rowIndex + rowSpan) {\n            let colIndex = cellIndex - 1\n\n            while (++colIndex < cellIndex + colSpan) {\n              if (!rows[otherRowIndex]) {\n                // Don\u2019t add rows that don\u2019t exist.\n                // Browsers don\u2019t render them either.\n                break\n              }\n\n              /** @type {Array<MdastRowContent>} */\n              const newCells = []\n\n              if (otherRowIndex !== rowIndex || colIndex !== cellIndex) {\n                newCells.push({type: 'tableCell', children: []})\n              }\n\n              rows[otherRowIndex].children.splice(colIndex, 0, ...newCells)\n            }\n          }\n        }\n\n        // Clean the data fields.\n        if ('colSpan' in cell.data) delete cell.data.colSpan\n        if ('rowSpan' in cell.data) delete cell.data.rowSpan\n        if (Object.keys(cell.data).length === 0) delete cell.data\n      }\n    }\n\n    if (cells.length > columns) columns = cells.length\n  }\n\n  // Add extra empty cells.\n  rowIndex = -1\n\n  while (++rowIndex < rows.length) {\n    const cells = rows[rowIndex].children\n    let cellIndex = cells.length - 1\n    while (++cellIndex < columns) {\n      cells.push({type: 'tableCell', children: []})\n    }\n  }\n\n  let alignIndex = align.length - 1\n  while (++alignIndex < columns) {\n    align.push(null)\n  }\n\n  h.inTable = false\n\n  return h(node, 'table', {align}, rows)\n}\n\n/**\n * Infer whether the HTML table has a head and how it aligns.\n *\n * @param {Element} node\n * @returns {Info}\n */\nfunction inspect(node) {\n  let headless = true\n  let rowIndex = 0\n  let cellIndex = 0\n  /** @type {Array<string|null>} */\n  const align = [null]\n\n  visit(node, 'element', (child) => {\n    if (child.tagName === 'table' && node !== child) {\n      return SKIP\n    }\n\n    // If there is a `thead`, assume there is a header row.\n    if (cell(child) && child.properties) {\n      if (!align[cellIndex]) {\n        align[cellIndex] = String(child.properties.align || '') || null\n      }\n\n      // If there is a th in the first row, assume there is a header row.\n      if (headless && rowIndex < 2 && child.tagName === 'th') {\n        headless = false\n      }\n\n      cellIndex++\n    } else if (thead(child)) {\n      headless = false\n    } else if (tr(child)) {\n      rowIndex++\n      cellIndex = 0\n    }\n  })\n\n  return {align, headless}\n}\n\n/**\n * Ensure the rows are properly structured.\n *\n * @param {Array<MdastNode>} children\n * @param {boolean} headless\n * @returns {Array<MdastTableContent>}\n */\nfunction toRows(children, headless) {\n  let index = -1\n  /** @type {Array<MdastTableContent>} */\n  const nodes = []\n  /** @type {Array<MdastRowContent>|undefined} */\n  let queue\n\n  // Add an empty header row.\n  if (headless) {\n    nodes.push({type: 'tableRow', children: []})\n  }\n\n  while (++index < children.length) {\n    const node = children[index]\n\n    if (node.type === 'tableRow') {\n      if (queue) {\n        node.children.unshift(...queue)\n        queue = undefined\n      }\n\n      nodes.push(node)\n    } else {\n      if (!queue) queue = []\n      // @ts-expect-error Assume row content.\n      queue.push(node)\n    }\n  }\n\n  if (queue) {\n    nodes[nodes.length - 1].children.push(...queue)\n  }\n\n  index = -1\n\n  while (++index < nodes.length) {\n    nodes[index].children = toCells(nodes[index].children)\n  }\n\n  return nodes\n}\n\n/**\n * Ensure the cells in a row are properly structured.\n *\n * @param {Array<MdastNode>} children\n * @returns {Array<MdastRowContent>}\n */\nfunction toCells(children) {\n  /** @type {Array<MdastRowContent>} */\n  const nodes = []\n  let index = -1\n  /** @type {MdastNode} */\n  let node\n  /** @type {Array<MdastPhrasingContent>|undefined} */\n  let queue\n\n  while (++index < children.length) {\n    node = children[index]\n\n    if (node.type === 'tableCell') {\n      if (queue) {\n        node.children.unshift(...queue)\n        queue = undefined\n      }\n\n      nodes.push(node)\n    } else {\n      if (!queue) queue = []\n      // @ts-expect-error Assume phrasing content.\n      queue.push(node)\n    }\n  }\n\n  if (queue) {\n    node = nodes[nodes.length - 1]\n\n    if (!node) {\n      node = {type: 'tableCell', children: []}\n      nodes.push(node)\n    }\n\n    node.children.push(...queue)\n  }\n\n  return nodes\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Text} Text\n */\n\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h(node, 'text', wrapText(h, node.value))\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\nimport {toText} from 'hast-util-to-text'\nimport {wrapText} from '../util/wrap-text.js'\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function textarea(h, node) {\n  return h(node, 'text', wrapText(h, toText(node)))\n}\n", "/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Element} Element\n */\n\n/**\n * @type {Handle}\n * @param {Element} node\n */\nexport function wbr(h, node) {\n  return h(node, 'text', '\\u200B')\n}\n", "import {all} from '../all.js'\nimport {wrapChildren} from '../util/wrap-children.js'\nimport {a} from './a.js'\nimport {base} from './base.js'\nimport {blockquote} from './blockquote.js'\nimport {br} from './br.js'\nimport {code} from './code.js'\nimport {comment} from './comment.js'\nimport {del} from './del.js'\nimport {dl} from './dl.js'\nimport {em} from './em.js'\nimport {heading} from './heading.js'\nimport {hr} from './hr.js'\nimport {iframe} from './iframe.js'\nimport {img} from './img.js'\nimport {inlineCode} from './inline-code.js'\nimport {input} from './input.js'\nimport {li} from './li.js'\nimport {list} from './list.js'\nimport {media} from './media.js'\nimport {p} from './p.js'\nimport {q} from './q.js'\nimport {root} from './root.js'\nimport {select} from './select.js'\nimport {strong} from './strong.js'\nimport {tableCell} from './table-cell.js'\nimport {tableRow} from './table-row.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {textarea} from './textarea.js'\nimport {wbr} from './wbr.js'\n\nexport const handlers = {\n  root,\n  text,\n  comment,\n  doctype: ignore,\n\n  applet: ignore,\n  area: ignore,\n  basefont: ignore,\n  bgsound: ignore,\n  caption: ignore,\n  col: ignore,\n  colgroup: ignore,\n  command: ignore,\n  content: ignore,\n  datalist: ignore,\n  dialog: ignore,\n  element: ignore,\n  embed: ignore,\n  frame: ignore,\n  frameset: ignore,\n  isindex: ignore,\n  keygen: ignore,\n  link: ignore,\n  math: ignore,\n  menu: ignore,\n  menuitem: ignore,\n  meta: ignore,\n  nextid: ignore,\n  noembed: ignore,\n  noframes: ignore,\n  optgroup: ignore,\n  option: ignore,\n  param: ignore,\n  script: ignore,\n  shadow: ignore,\n  source: ignore,\n  spacer: ignore,\n  style: ignore,\n  svg: ignore,\n  template: ignore,\n  title: ignore,\n  track: ignore,\n\n  abbr: all,\n  acronym: all,\n  bdi: all,\n  bdo: all,\n  big: all,\n  blink: all,\n  button: all,\n  canvas: all,\n  cite: all,\n  data: all,\n  details: all,\n  dfn: all,\n  font: all,\n  ins: all,\n  label: all,\n  map: all,\n  marquee: all,\n  meter: all,\n  nobr: all,\n  noscript: all,\n  object: all,\n  output: all,\n  progress: all,\n  rb: all,\n  rbc: all,\n  rp: all,\n  rt: all,\n  rtc: all,\n  ruby: all,\n  slot: all,\n  small: all,\n  span: all,\n  sup: all,\n  sub: all,\n  tbody: all,\n  tfoot: all,\n  thead: all,\n  time: all,\n\n  address: wrapChildren,\n  article: wrapChildren,\n  aside: wrapChildren,\n  body: wrapChildren,\n  center: wrapChildren,\n  div: wrapChildren,\n  fieldset: wrapChildren,\n  figcaption: wrapChildren,\n  figure: wrapChildren,\n  form: wrapChildren,\n  footer: wrapChildren,\n  header: wrapChildren,\n  hgroup: wrapChildren,\n  html: wrapChildren,\n  legend: wrapChildren,\n  main: wrapChildren,\n  multicol: wrapChildren,\n  nav: wrapChildren,\n  picture: wrapChildren,\n  section: wrapChildren,\n\n  a,\n  audio: media,\n  b: strong,\n  base,\n  blockquote,\n  br,\n  code: inlineCode,\n  dir: list,\n  dl,\n  dt: li,\n  dd: li,\n  del,\n  em,\n  h1: heading,\n  h2: heading,\n  h3: heading,\n  h4: heading,\n  h5: heading,\n  h6: heading,\n  hr,\n  i: em,\n  iframe,\n  img,\n  image: img,\n  input,\n  kbd: inlineCode,\n  li,\n  listing: code,\n  mark: em,\n  ol: list,\n  p,\n  plaintext: code,\n  pre: code,\n  q,\n  s: del,\n  samp: inlineCode,\n  select,\n  strike: del,\n  strong,\n  summary: p,\n  table,\n  td: tableCell,\n  textarea,\n  th: tableCell,\n  tr: tableRow,\n  tt: inlineCode,\n  u: em,\n  ul: list,\n  var: inlineCode,\n  video: media,\n  wbr,\n  xmp: code\n}\n\nfunction ignore() {}\n", "/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Properties} Properties\n * @typedef {import('./types.js').H} H\n * @typedef {import('./types.js').HWithoutProps} HWithoutProps\n * @typedef {import('./types.js').HWithProps} HWithProps\n * @typedef {import('./types.js').MdastNode} MdastNode\n * @typedef {import('./types.js').MdastRoot} MdastRoot\n */\n\nimport rehypeMinifyWhitespace from 'rehype-minify-whitespace'\nimport {convert} from 'unist-util-is'\nimport {visit} from 'unist-util-visit'\nimport {one} from './one.js'\nimport {handlers} from './handlers/index.js'\nimport {own} from './util/own.js'\n\nexport {one} from './one.js'\nexport {all} from './all.js'\n\nconst block = convert(['heading', 'paragraph', 'root'])\n\n/**\n * Transform hast to mdast.\n *\n * @param {Node} tree\n *   Tree (hast).\n * @param {Options} [options]\n *   Configuration (optional).\n */\nexport function toMdast(tree, options = {}) {\n  /** @type {Record<string, Element>} */\n  const byId = {}\n  /** @type {MdastNode|MdastRoot} */\n  let mdast\n\n  /**\n   * @type {H}\n   */\n  const h = Object.assign(\n    /**\n     * @type {HWithProps & HWithoutProps}\n     */\n    (\n      /**\n       * @param {Node} node\n       * @param {string} type\n       * @param {Properties|string|Array<Node>} [props]\n       * @param {string|Array<Node>} [children]\n       */\n      (node, type, props, children) => {\n        /** @type {Properties|undefined} */\n        let properties\n\n        if (typeof props === 'string' || Array.isArray(props)) {\n          children = props\n          properties = {}\n        } else {\n          properties = props\n        }\n\n        /** @type {Node} */\n        // @ts-expect-error Assume valid `type` and `children`/`value`.\n        const result = {type, ...properties}\n\n        if (typeof children === 'string') {\n          // @ts-expect-error: Looks like a literal.\n          result.value = children\n        } else if (children) {\n          // @ts-expect-error: Looks like a parent.\n          result.children = children\n        }\n\n        if (node.position) {\n          result.position = node.position\n        }\n\n        return result\n      }\n    ),\n    {\n      nodeById: byId,\n      baseFound: false,\n      inTable: false,\n      wrapText: true,\n      /** @type {string|null} */\n      frozenBaseUrl: null,\n      qNesting: 0,\n      handlers: options.handlers\n        ? {...handlers, ...options.handlers}\n        : handlers,\n      document: options.document,\n      checked: options.checked || '[x]',\n      unchecked: options.unchecked || '[ ]',\n      quotes: options.quotes || ['\"']\n    }\n  )\n\n  visit(tree, 'element', (node) => {\n    const id =\n      node.properties &&\n      'id' in node.properties &&\n      String(node.properties.id).toUpperCase()\n\n    if (id && !own.call(byId, id)) {\n      byId[id] = node\n    }\n  })\n\n  // @ts-expect-error: does return a transformer, that does accept any node.\n  rehypeMinifyWhitespace({newlines: options.newlines === true})(tree)\n\n  const result = one(h, tree, undefined)\n\n  if (!result) {\n    mdast = {type: 'root', children: []}\n  } else if (Array.isArray(result)) {\n    mdast = {type: 'root', children: result}\n  } else {\n    mdast = result\n  }\n\n  visit(mdast, 'text', ontext)\n\n  return mdast\n\n  /**\n   * Collapse text nodes, and fix whitespace.\n   * Most of this is taken care of by `rehype-minify-whitespace`, but\n   * we\u2019re generating some whitespace too, and some nodes are in the end\n   * ignored.\n   * So clean up.\n   *\n   * @type {import('unist-util-visit/complex-types').BuildVisitor<MdastRoot, 'text'>}\n   */\n  function ontext(node, index, parent) {\n    /* c8 ignore next 3 */\n    if (index === null || !parent) {\n      return\n    }\n\n    const previous = parent.children[index - 1]\n\n    if (previous && previous.type === node.type) {\n      previous.value += node.value\n      parent.children.splice(index, 1)\n\n      if (previous.position && node.position) {\n        previous.position.end = node.position.end\n      }\n\n      // Iterate over the previous node again, to handle its total value.\n      return index - 1\n    }\n\n    node.value = node.value.replace(/[\\t ]*(\\r?\\n|\\r)[\\t ]*/, '$1')\n\n    // We don\u2019t care about other phrasing nodes in between (e.g., `[ asd ]()`),\n    // as there the whitespace matters.\n    if (parent && block(parent)) {\n      if (!index) {\n        node.value = node.value.replace(/^[\\t ]+/, '')\n      }\n\n      if (index === parent.children.length - 1) {\n        node.value = node.value.replace(/[\\t ]+$/, '')\n      }\n    }\n\n    if (!node.value) {\n      parent.children.splice(index, 1)\n      return index\n    }\n  }\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n", "/**\n * @typedef {import('hast-util-to-mdast').Options} Options\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n */\n\nimport {toMdast} from 'hast-util-to-mdast'\n\n/**\n * Plugin to bridge or mutate to rehype.\n *\n * If a destination is given, runs the destination with the new mdast\n * tree (bridge-mode).\n * Without destination, returns the mdast tree: further plugins run on that\n * tree (mutate-mode).\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `hast-util-to-mdast`.\n */\nconst rehypeRemark =\n  /**\n   * @type {(import('unified').Plugin<[Processor, Options?], HastRoot> & import('unified').Plugin<[Options?]|void[], HastRoot, MdastRoot>)}\n   */\n  (\n    /**\n     * @param {Processor|Options} [destination]\n     * @param {Options} [options]\n     */\n    function (destination, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {Processor|undefined} */\n      let processor\n\n      if (typeof destination === 'function') {\n        processor = destination\n        settings = options || {}\n      } else {\n        settings = destination || {}\n      }\n\n      if (settings.document === undefined || settings.document === null) {\n        settings = Object.assign({}, settings, {document: true})\n      }\n\n      return processor ? bridge(processor, settings) : mutate(settings)\n    }\n  )\n\nexport default rehypeRemark\n\n/**\n * Bridge-mode.\n * Runs the destination with the new mdast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], HastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toMdast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further transformers run on the mdast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], HastRoot, MdastRoot>}\n */\nfunction mutate(options = {}) {\n  return (node) => {\n    const result = /** @type {MdastRoot} */ (toMdast(node, options))\n    return result\n  }\n}\n", "import { unified } from 'unified';\nimport rehypeParse from 'rehype-parse';\nimport rehypeRemark from 'rehype-remark';\nimport { all } from 'hast-util-to-mdast';\nimport { visit } from 'unist-util-visit';\nimport { select, selectAll } from 'unist-util-select';\nimport { findAfter } from 'unist-util-find-after';\nimport { remove } from 'unist-util-remove';\nimport { liftChildren, normalizeLabel, AdmonitionKind, admonitionKindToTitle } from 'myst-common';\nimport { enumerateTargets, resolveReferences } from './state.js';\nconst defaultOptions = {\n    addAdmonitionHeaders: true,\n    addContainerCaptionNumbers: true,\n    disableHeadingEnumeration: false,\n    disableContainerEnumeration: false,\n    disableEquationEnumeration: false,\n};\nconst defaultHtmlToMdastOptions = {\n    keepBreaks: true,\n    htmlHandlers: {\n        table(h, node) {\n            return h(node, 'table', all(h, node));\n        },\n        th(h, node) {\n            const result = h(node, 'tableCell', all(h, node));\n            result.header = true;\n            return result;\n        },\n        _brKeep(h, node) {\n            return h(node, '_break');\n        },\n    },\n};\n// Visit all admonitions and add headers if necessary\nexport function addAdmonitionHeaders(tree) {\n    visit(tree, 'admonition', (node) => {\n        var _a;\n        if (!node.kind || node.kind === AdmonitionKind.admonition)\n            return;\n        node.children = [\n            {\n                type: 'admonitionTitle',\n                children: [{ type: 'text', value: admonitionKindToTitle(node.kind) }],\n            },\n            ...((_a = node.children) !== null && _a !== void 0 ? _a : []),\n        ];\n    });\n}\n// Visit all containers and add captions\nexport function addContainerCaptionNumbers(tree, state) {\n    selectAll('container', tree)\n        .filter((container) => container.enumerator !== false)\n        .forEach((container) => {\n        var _a, _b;\n        const enumerator = (_a = state.getTarget(container.identifier)) === null || _a === void 0 ? void 0 : _a.node.enumerator;\n        const para = select('caption > paragraph', container);\n        if (enumerator && para) {\n            para.children = [\n                { type: 'captionNumber', kind: container.kind, value: enumerator },\n                ...((_b = para === null || para === void 0 ? void 0 : para.children) !== null && _b !== void 0 ? _b : []),\n            ];\n        }\n    });\n}\n/**\n * Propagate target identifier/value to subsequent node\n *\n * Note: While this propagation happens regardless of the\n * subsequent node type, references are only resolved to\n * the TargetKind nodes enumerated in state.ts. For example:\n *\n * (paragraph-target)=\n * Just a normal paragraph\n *\n * will add identifier/label to paragraph node, but the node\n * will still not be targetable.\n */\nexport function propagateTargets(tree) {\n    visit(tree, 'mystTarget', (node, index) => {\n        const nextNode = findAfter(tree, index);\n        const normalized = normalizeLabel(node.label);\n        if (nextNode && normalized) {\n            nextNode.identifier = normalized.identifier;\n            nextNode.label = normalized.label;\n        }\n    });\n    remove(tree, 'mystTarget');\n}\n/**\n * Ensure caption content is nested in a paragraph.\n *\n * This function is idempotent!\n */\nexport function ensureCaptionIsParagraph(tree) {\n    visit(tree, 'caption', (node) => {\n        if (node.children && node.children[0].type !== 'paragraph') {\n            node.children = [{ type: 'paragraph', children: node.children }];\n        }\n    });\n}\nexport function convertHtmlToMdast(tree, opts) {\n    const handlers = { ...defaultHtmlToMdastOptions.htmlHandlers, ...opts === null || opts === void 0 ? void 0 : opts.htmlHandlers };\n    const otherOptions = { ...defaultHtmlToMdastOptions, ...opts };\n    const htmlNodes = selectAll('html', tree);\n    htmlNodes.forEach((node) => {\n        const hast = unified()\n            .use(rehypeParse, { fragment: true })\n            .parse(node.value);\n        // hast-util-to-mdast removes breaks if they are the first/last children\n        // and nests standalone breaks in paragraphs.\n        // However, since HTML nodes may just be fragments in the middle of markdown text,\n        // there is an option to `keepBreaks` which will simply convert `<br />`\n        // tags to `break` nodes, without the special hast-util-to-mdast behavior.\n        if (otherOptions.keepBreaks) {\n            selectAll('[tagName=br]', hast).forEach((n) => {\n                n.tagName = '_brKeep';\n            });\n        }\n        const mdast = unified().use(rehypeRemark, { handlers }).runSync(hast);\n        node.type = 'htmlParsed';\n        node.children = mdast.children;\n        visit(node, (n) => delete n.position);\n    });\n    liftChildren(tree, 'htmlParsed');\n    selectAll('_break', tree).forEach((n) => {\n        n.type = 'break';\n    });\n    return tree;\n}\nexport const transform = (state, o) => (tree) => {\n    const opts = {\n        ...defaultOptions,\n        ...o,\n    };\n    ensureCaptionIsParagraph(tree);\n    propagateTargets(tree);\n    enumerateTargets(state, tree, opts);\n    resolveReferences(state, tree);\n    liftChildren(tree, 'mystDirective');\n    liftChildren(tree, 'mystRole');\n    if (opts.addAdmonitionHeaders)\n        addAdmonitionHeaders(tree);\n    if (opts.addContainerCaptionNumbers)\n        addContainerCaptionNumbers(tree, state);\n};\n", "/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n", "/**\n * @typedef CoreOptions\n * @property {Array<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(\n        // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n        /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g,\n        basic\n      )\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * @param {Array<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n", "/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !/[\\dA-Fa-f]/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n", "/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !/\\d/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n", "/**\n * List of legacy HTML named character references that don\u2019t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n", "/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: '\u00A0',\n  iexcl: '\u00A1',\n  cent: '\u00A2',\n  pound: '\u00A3',\n  curren: '\u00A4',\n  yen: '\u00A5',\n  brvbar: '\u00A6',\n  sect: '\u00A7',\n  uml: '\u00A8',\n  copy: '\u00A9',\n  ordf: '\u00AA',\n  laquo: '\u00AB',\n  not: '\u00AC',\n  shy: '\u00AD',\n  reg: '\u00AE',\n  macr: '\u00AF',\n  deg: '\u00B0',\n  plusmn: '\u00B1',\n  sup2: '\u00B2',\n  sup3: '\u00B3',\n  acute: '\u00B4',\n  micro: '\u00B5',\n  para: '\u00B6',\n  middot: '\u00B7',\n  cedil: '\u00B8',\n  sup1: '\u00B9',\n  ordm: '\u00BA',\n  raquo: '\u00BB',\n  frac14: '\u00BC',\n  frac12: '\u00BD',\n  frac34: '\u00BE',\n  iquest: '\u00BF',\n  Agrave: '\u00C0',\n  Aacute: '\u00C1',\n  Acirc: '\u00C2',\n  Atilde: '\u00C3',\n  Auml: '\u00C4',\n  Aring: '\u00C5',\n  AElig: '\u00C6',\n  Ccedil: '\u00C7',\n  Egrave: '\u00C8',\n  Eacute: '\u00C9',\n  Ecirc: '\u00CA',\n  Euml: '\u00CB',\n  Igrave: '\u00CC',\n  Iacute: '\u00CD',\n  Icirc: '\u00CE',\n  Iuml: '\u00CF',\n  ETH: '\u00D0',\n  Ntilde: '\u00D1',\n  Ograve: '\u00D2',\n  Oacute: '\u00D3',\n  Ocirc: '\u00D4',\n  Otilde: '\u00D5',\n  Ouml: '\u00D6',\n  times: '\u00D7',\n  Oslash: '\u00D8',\n  Ugrave: '\u00D9',\n  Uacute: '\u00DA',\n  Ucirc: '\u00DB',\n  Uuml: '\u00DC',\n  Yacute: '\u00DD',\n  THORN: '\u00DE',\n  szlig: '\u00DF',\n  agrave: '\u00E0',\n  aacute: '\u00E1',\n  acirc: '\u00E2',\n  atilde: '\u00E3',\n  auml: '\u00E4',\n  aring: '\u00E5',\n  aelig: '\u00E6',\n  ccedil: '\u00E7',\n  egrave: '\u00E8',\n  eacute: '\u00E9',\n  ecirc: '\u00EA',\n  euml: '\u00EB',\n  igrave: '\u00EC',\n  iacute: '\u00ED',\n  icirc: '\u00EE',\n  iuml: '\u00EF',\n  eth: '\u00F0',\n  ntilde: '\u00F1',\n  ograve: '\u00F2',\n  oacute: '\u00F3',\n  ocirc: '\u00F4',\n  otilde: '\u00F5',\n  ouml: '\u00F6',\n  divide: '\u00F7',\n  oslash: '\u00F8',\n  ugrave: '\u00F9',\n  uacute: '\u00FA',\n  ucirc: '\u00FB',\n  uuml: '\u00FC',\n  yacute: '\u00FD',\n  thorn: '\u00FE',\n  yuml: '\u00FF',\n  fnof: '\u0192',\n  Alpha: '\u0391',\n  Beta: '\u0392',\n  Gamma: '\u0393',\n  Delta: '\u0394',\n  Epsilon: '\u0395',\n  Zeta: '\u0396',\n  Eta: '\u0397',\n  Theta: '\u0398',\n  Iota: '\u0399',\n  Kappa: '\u039A',\n  Lambda: '\u039B',\n  Mu: '\u039C',\n  Nu: '\u039D',\n  Xi: '\u039E',\n  Omicron: '\u039F',\n  Pi: '\u03A0',\n  Rho: '\u03A1',\n  Sigma: '\u03A3',\n  Tau: '\u03A4',\n  Upsilon: '\u03A5',\n  Phi: '\u03A6',\n  Chi: '\u03A7',\n  Psi: '\u03A8',\n  Omega: '\u03A9',\n  alpha: '\u03B1',\n  beta: '\u03B2',\n  gamma: '\u03B3',\n  delta: '\u03B4',\n  epsilon: '\u03B5',\n  zeta: '\u03B6',\n  eta: '\u03B7',\n  theta: '\u03B8',\n  iota: '\u03B9',\n  kappa: '\u03BA',\n  lambda: '\u03BB',\n  mu: '\u03BC',\n  nu: '\u03BD',\n  xi: '\u03BE',\n  omicron: '\u03BF',\n  pi: '\u03C0',\n  rho: '\u03C1',\n  sigmaf: '\u03C2',\n  sigma: '\u03C3',\n  tau: '\u03C4',\n  upsilon: '\u03C5',\n  phi: '\u03C6',\n  chi: '\u03C7',\n  psi: '\u03C8',\n  omega: '\u03C9',\n  thetasym: '\u03D1',\n  upsih: '\u03D2',\n  piv: '\u03D6',\n  bull: '\u2022',\n  hellip: '\u2026',\n  prime: '\u2032',\n  Prime: '\u2033',\n  oline: '\u203E',\n  frasl: '\u2044',\n  weierp: '\u2118',\n  image: '\u2111',\n  real: '\u211C',\n  trade: '\u2122',\n  alefsym: '\u2135',\n  larr: '\u2190',\n  uarr: '\u2191',\n  rarr: '\u2192',\n  darr: '\u2193',\n  harr: '\u2194',\n  crarr: '\u21B5',\n  lArr: '\u21D0',\n  uArr: '\u21D1',\n  rArr: '\u21D2',\n  dArr: '\u21D3',\n  hArr: '\u21D4',\n  forall: '\u2200',\n  part: '\u2202',\n  exist: '\u2203',\n  empty: '\u2205',\n  nabla: '\u2207',\n  isin: '\u2208',\n  notin: '\u2209',\n  ni: '\u220B',\n  prod: '\u220F',\n  sum: '\u2211',\n  minus: '\u2212',\n  lowast: '\u2217',\n  radic: '\u221A',\n  prop: '\u221D',\n  infin: '\u221E',\n  ang: '\u2220',\n  and: '\u2227',\n  or: '\u2228',\n  cap: '\u2229',\n  cup: '\u222A',\n  int: '\u222B',\n  there4: '\u2234',\n  sim: '\u223C',\n  cong: '\u2245',\n  asymp: '\u2248',\n  ne: '\u2260',\n  equiv: '\u2261',\n  le: '\u2264',\n  ge: '\u2265',\n  sub: '\u2282',\n  sup: '\u2283',\n  nsub: '\u2284',\n  sube: '\u2286',\n  supe: '\u2287',\n  oplus: '\u2295',\n  otimes: '\u2297',\n  perp: '\u22A5',\n  sdot: '\u22C5',\n  lceil: '\u2308',\n  rceil: '\u2309',\n  lfloor: '\u230A',\n  rfloor: '\u230B',\n  lang: '\u2329',\n  rang: '\u232A',\n  loz: '\u25CA',\n  spades: '\u2660',\n  clubs: '\u2663',\n  hearts: '\u2665',\n  diams: '\u2666',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: '\u0152',\n  oelig: '\u0153',\n  Scaron: '\u0160',\n  scaron: '\u0161',\n  Yuml: '\u0178',\n  circ: '\u02C6',\n  tilde: '\u02DC',\n  ensp: '\u2002',\n  emsp: '\u2003',\n  thinsp: '\u2009',\n  zwnj: '\u200C',\n  zwj: '\u200D',\n  lrm: '\u200E',\n  rlm: '\u200F',\n  ndash: '\u2013',\n  mdash: '\u2014',\n  lsquo: '\u2018',\n  rsquo: '\u2019',\n  sbquo: '\u201A',\n  ldquo: '\u201C',\n  rdquo: '\u201D',\n  bdquo: '\u201E',\n  dagger: '\u2020',\n  Dagger: '\u2021',\n  permil: '\u2030',\n  lsaquo: '\u2039',\n  rsaquo: '\u203A',\n  euro: '\u20AC'\n}\n", "/**\n * List of legacy (that don\u2019t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n", "import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          /[^\\da-z]/i.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n", "/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls \u201Cparse errors\u201D but is otherwise still valid HTML \u2014 don\u2019t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don\u2019t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n", "/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n", "/**\n * @typedef {import('../types.js').Comment} Comment\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {subset: ['>']})\n        ) +\n        '>'\n    : '<!--' + node.value.replace(/^>|^->|<!--|-->|--!>|<!-$/g, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: ['<', '>']\n      })\n    )\n  }\n}\n", "/**\n * @typedef {import('../types.js').DocType} DocType\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize a doctype.\n *\n * @param {DocType} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n", "/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n", "/**\n * @typedef {import('../../types.js').Parent} Parent\n * @typedef {import('../../types.js').Content} Content\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @param {Parent | null | undefined} parent\n   * @param {number | null | undefined} index\n   * @param {boolean | null | undefined} [includeWhitespace=false]\n   * @returns {Content}\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : []\n    let offset = (index || 0) + increment\n    let next = siblings && siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    return next\n  }\n}\n", "/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n", "/**\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Parent} Parent\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter} from './util/siblings.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  html,\n  head: headOrColgroupOrCaption,\n  body,\n  p,\n  li,\n  dt,\n  dd,\n  rt: rubyElement,\n  rp: rubyElement,\n  optgroup,\n  option,\n  menuitem,\n  colgroup: headOrColgroupOrCaption,\n  caption: headOrColgroupOrCaption,\n  thead,\n  tbody,\n  tfoot,\n  tr,\n  td: cells,\n  th: cells\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\n// eslint-disable-next-line complexity\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    next &&\n    next.type === 'element' &&\n    (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</menuitem>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction menuitem(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'menuitem' ||\n        next.tagName === 'hr' ||\n        next.tagName === 'menu'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    next &&\n    next.type === 'element' &&\n    (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n", "/**\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Content} Content\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingBefore, siblingAfter} from './util/siblings.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  html,\n  head,\n  body,\n  colgroup,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  const children = node.children\n  /** @type {Array<string>} */\n  const seen = []\n  let index = -1\n\n  while (++index < children.length) {\n    const child = children[index]\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'title' || child.tagName === 'base')\n    ) {\n      if (seen.includes(child.tagName)) return false\n      seen.push(child.tagName)\n    }\n  }\n\n  return children.length > 0\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it\u2019s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && head.type === 'element' && head.tagName === 'col'\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parent | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return head && head.type === 'element' && head.tagName === 'tr'\n}\n", "/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Element} Element\n * @typedef {import('../types.js').Properties} Properties\n * @typedef {import('../types.js').PropertyValue} PropertyValue\n */\n\nimport {ccount} from 'ccount'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {svg, find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {opening} from '../omission/opening.js'\nimport {closing} from '../omission/closing.js'\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'name' | 'unquoted' | 'single' | 'double', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\n// eslint-disable-next-line complexity\nexport function element(node, index, parent, state) {\n  const schema = state.schema\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg\n  }\n\n  const attrs = serializeAttributes(state, node.properties)\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  state.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  if (content) selfClosing = false\n\n  if (attrs || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attrs ? ' ' + attrs : '')\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attrs.charAt(attrs.length - 1)\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} props\n * @returns {string}\n */\nfunction serializeAttributes(state, props) {\n  /** @type {Array<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (props) {\n    for (key in props) {\n      if (props[key] !== undefined && props[key] !== null) {\n        const value = serializeAttribute(state, key, props[key])\n        if (value) values.push(value)\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : null\n\n    // In tight mode, don\u2019t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {PropertyValue} value\n * @returns {string}\n */\n// eslint-disable-next-line complexity\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key)\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1\n  const y = state.settings.allowDangerousCharacters ? 0 : 1\n  let quote = state.quote\n  /** @type {string | undefined} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === undefined ||\n    value === null ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can\u2019t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn\u2019t accept a second argument, but it\u2019s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? commas : spaces)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value)\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: constants.unquoted[x][y],\n        attribute: true\n      })\n    )\n  }\n\n  // If we don\u2019t want unquoted, or if `value` contains character references when\n  // unquoted\u2026\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don\u2019t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n", "/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Raw} Raw\n * @typedef {import('../types.js').Text} Text\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * Serialize a text node.\n *\n * @param {Text | Raw} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: ['<', '&']\n        })\n      )\n}\n", "/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Raw} Raw\n */\n\nimport {text} from './text.js'\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n", "/**\n * @typedef {import('../types.js').Root} Root\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parent | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function root(node, _1, _2, state) {\n  return state.all(node)\n}\n", "/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n */\n\nimport {zwitch} from 'zwitch'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {element} from './element.js'\nimport {raw} from './raw.js'\nimport {root} from './root.js'\nimport {text} from './text.js'\n\n/**\n * @type {(node: Node, index: number | undefined, parent: Parent | undefined, state: State) => string}\n */\nexport const handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n})\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node) {\n  // @ts-expect-error: `type` is defined.\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n", "/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Content} Content\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').State} State\n */\n\nimport {html, svg} from 'property-information'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {handle} from './handle/index.js'\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Node | Array<Content>} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {string}\n *   Serialized HTML.\n */\n// eslint-disable-next-line complexity\nexport function toHtml(tree, options) {\n  const options_ = options || {}\n  const quote = options_.quote || '\"'\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || options_.entities || {},\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html,\n    quote,\n    alternative\n  }\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Node} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parent | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parent | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nexport function all(parent) {\n  /** @type {Array<string>} */\n  const results = []\n  const children = (parent && parent.children) || []\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent)\n  }\n\n  return results.join('')\n}\n", "/**\n * @typedef {import('hast').Root} Root\n * @typedef {Root|Root['children'][number]} Node\n * @typedef {import('hast-util-to-html').Options} Options\n */\n\nimport {toHtml} from 'hast-util-to-html'\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?]|Array<void>, Node, string>}\n */\nexport default function rehypeStringify(config) {\n  const processorSettings = /** @type {Options} */ (this.data('settings'))\n  const settings = Object.assign({}, processorSettings, config)\n\n  Object.assign(this, {Compiler: compiler})\n\n  /**\n   * @type {import('unified').CompilerFunction<Node, string>}\n   */\n  function compiler(tree) {\n    return toHtml(tree, settings)\n  }\n}\n", "import { unified } from 'unified';\nimport rehypeStringify from 'rehype-stringify';\nimport { formatHtml } from './format.js';\nimport { mystToHast } from './schema.js';\nimport { State } from './state.js';\nimport { transform } from './transforms.js';\nexport function mystToHtml(tree, opts) {\n    const state = new State();\n    const pipe = unified()\n        .use(transform, state)\n        .use(mystToHast, opts === null || opts === void 0 ? void 0 : opts.hast)\n        .use(formatHtml, opts === null || opts === void 0 ? void 0 : opts.formatHtml)\n        .use(rehypeStringify, opts === null || opts === void 0 ? void 0 : opts.stringifyHtml);\n    const result = pipe.runSync(tree);\n    const html = pipe.stringify(result);\n    return html.trim();\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,uBAAC,QAAS,QAAI,QAAS,QAAI,QAAS,UAAI,QAAS,UAAI,IAAK,UAAI,KAAM,UAAI,KAAM,gBAAK,OAAQ,QAAI,OAAQ,QAAI,OAAQ,QAAI,KAAM,UAAI,KAAM,UAAI,OAAQ,QAAI,OAAQ,QAAI,IAAK,UAAI,KAAM,aAAK,KAAM,aAAK,QAAS,QAAI,QAAS,QAAI,SAAU,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,KAAM,KAAI,KAAM,KAAI,QAAS,UAAI,KAAM,UAAI,KAAM,UAAI,MAAO,UAAI,UAAW,UAAI,MAAO,UAAI,KAAM,UAAI,MAAO,UAAI,OAAQ,UAAI,UAAW,UAAI,UAAW,UAAI,UAAW,UAAI,UAAW,UAAI,UAAW,UAAI,UAAW,UAAI,UAAW,UAAI,UAAW,UAAI,QAAS,UAAI,OAAQ,UAAI,SAAU,UAAI,UAAW,UAAI,QAAS,UAAI,OAAQ,QAAI,SAAU,UAAI,OAAQ,UAAI,OAAQ,UAAI,MAAO,aAAK,MAAO,aAAK,QAAS,UAAI,IAAK,UAAI,KAAM,UAAI,KAAM,UAAI,MAAO,UAAI,MAAO,KAAI,eAAgB,UAAI,QAAS,UAAI,UAAW,UAAI,OAAQ,QAAI,OAAQ,QAAI,MAAO,aAAK,MAAO,aAAK,QAAS,UAAI,KAAM,KAAI,OAAQ,UAAI,SAAU,UAAI,QAAS,QAAI,QAAS,QAAI,MAAO,QAAI,MAAO,QAAI,UAAW,UAAI,OAAQ,UAAI,UAAW,UAAI,aAAc,UAAI,WAAY,UAAI,SAAU,UAAI,WAAY,UAAI,WAAY,UAAI,MAAO,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,UAAW,UAAI,MAAO,UAAI,UAAW,UAAI,OAAQ,UAAI,KAAM,UAAI,KAAM,UAAI,OAAQ,UAAI,QAAS,UAAI,SAAU,UAAI,SAAU,UAAI,SAAU,UAAI,OAAQ,UAAI,QAAS,UAAI,YAAa,UAAI,MAAO,UAAI,MAAO,UAAI,MAAO,UAAI,SAAU,UAAI,KAAM,aAAK,KAAM,aAAK,QAAS,UAAI,SAAU,UAAI,QAAS,UAAI,SAAU,UAAI,UAAW,UAAI,WAAY,UAAI,UAAW,UAAI,SAAU,UAAI,iBAAkB,UAAI,eAAgB,UAAI,UAAW,UAAI,QAAS,UAAI,UAAW,UAAI,QAAS,UAAI,cAAe,UAAI,aAAc,UAAI,eAAgB,UAAI,mBAAoB,UAAI,mBAAoB,UAAI,oBAAqB,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,KAAM,WAAK,SAAU,gBAAK,MAAO,UAAI,MAAO,UAAI,MAAO,aAAK,MAAO,aaAAK,MAAO,UAAI,OAAQ,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,MAAO,MAAK,UAAW,UAAI,MAAO,UAAI,QAAS,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,UAAW,UAAI,QAAS,UAAI,KAAM,UAAI,KAAM,UAAI,QAAS,UAAI,QAAS,UAAI,sBAAuB,UAAI,MAAO,gBAAK,OAAQ,UAAI,OAAQ,UAAI,SAAU,UAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,QAAI,QAAS,QAAI,OAAQ,UAAI,OAAQ,UAAI,SAAU,UAAI,OAAQ,UAAI,SAAU,UAAI,MAAO,UAAI,MAAO,UAAI,OAAQ,QAAI,SAAU,QAAI,SAAU,UAAI,MAAO,QAAI,WAAY,QAAI,WAAY,QAAI,KAAM,aAAK,KAAM,UAAI,MAAO,UAAI,MAAO,UAAI,OAAQ,UAAI,WAAY,UAAI,KAAM,UAAI,KAAM,UAAI,MAAO,UAAI,QAAS,UAAI,iBAAkB,UAAI,kBAAmB,UAAI,YAAa,UAAI,aAAc,UAAI,aAAc,UAAI,WAAY,UAAI,UAAW,QAAI,UAAW,UAAI,aAAc,UAAI,YAAa,UAAI,aAAc,UAAI,KAAM,UAAI,MAAO,UAAI,MAAO,UAAI,UAAW,UAAI,QAAS,UAAI,SAAU,UAAI,0BAA2B,UAAI,uBAAwB,UAAI,iBAAkB,UAAI,OAAQ,UAAI,UAAW,UAAI,OAAQ,KAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,SAAU,UAAI,OAAQ,KAAI,QAAS,KAAI,MAAO,UAAI,QAAS,UAAI,YAAa,UAAI,WAAY,UAAI,MAAO,UAAI,SAAU,UAAI,WAAY,UAAI,QAAS,UAAI,QAAS,UAAI,iBAAkB,UAAI,MAAO,aAAK,MAAO,UAAI,QAAS,UAAI,WAAY,UAAI,MAAO,QAAI,MAAO,QAAI,QAAS,UAAI,iCAAkC,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,MAAO,aAAK,MAAO,aAAK,MAAO,UAAI,OAAQ,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,SAAU,UAAI,SAAU,UAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,UAAI,SAAU,UAAI,UAAW,UAAI,QAAS,UAAI,QAAS,UAAI,KAAM,UAAI,KAAM,UAAI,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,MAAO,gBAAK,QAAS,UAAI,SAAU,UAAI,aAAc,UAAI,aAAc,UAAI,UAAW,UAAI,YAAa,UAAI,QAAS,QAAI,gBAAiB,UAAI,iBAAkB,UAAI,OAAQ,UAAI,OAAQ,UAAI,UAAW,UAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,MAAO,UAAI,MAAO,UAAI,MAAO,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,SAAU,UAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,KAAM,UAAI,KAAM,UAAI,SAAU,UAAI,OAAQ,UAAI,IAAK,UAAI,IAAK,UAAI,UAAW,UAAI,SAAU,UAAI,KAAM,QAAI,KAAM,UAAI,OAAQ,UAAI,OAAQ,UAAI,SAAU,UAAI,QAAS,UAAI,KAAM,aAAK,KAAM,aAAK,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,kBAAmB,QAAI,gBAAiB,UAAI,wBAAyB,UAAI,kBAAmB,KAAI,kBAAmB,UAAI,MAAO,UAAI,SAAU,UAAI,SAAU,UAAI,aAAc,UAAI,OAAQ,UAAI,KAAM,QAAI,eAAgB,UAAI,SAAU,UAAI,OAAQ,UAAI,KAAM,QAAI,QAAS,QAAI,eAAgB,UAAI,QAAS,UAAI,MAAO,UAAI,MAAO,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,KAAI,MAAO,aAAK,MAAO,aAAK,KAAM,QAAI,KAAM,UAAI,QAAS,UAAI,OAAQ,UAAI,UAAW,UAAI,UAAW,UAAI,UAAW,UAAI,SAAU,UAAI,WAAY,UAAI,gBAAiB,UAAI,uBAAwB,UAAI,WAAY,QAAI,iBAAkB,UAAI,iBAAkB,UAAI,sBAAuB,UAAI,eAAgB,UAAI,qBAAsB,UAAI,0BAA2B,UAAI,sBAAuB,UAAI,kBAAmB,UAAI,gBAAiB,UAAI,eAAgB,UAAI,mBAAoB,UAAI,mBAAoB,UAAI,cAAe,UAAI,WAAY,UAAI,WAAY,UAAI,WAAY,UAAI,kBAAmB,UAAI,WAAY,UAAI,gBAAiB,UAAI,iBAAkB,UAAI,kBAAmB,UAAI,qBAAsB,UAAI,mBAAoB,UAAI,mBAAoB,UAAI,gBAAiB,UAAI,oBAAqB,UAAI,oBAAqB,UAAI,iBAAkB,UAAI,cAAe,UAAI,SAAU,UAAI,UAAW,UAAI,QAAS,UAAI,QAAS,UAAI,MAAO,aAAK,MAAO,aAAK,MAAO,UAAI,MAAO,UAAI,MAAO,UAAI,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,SAAU,UAAI,MAAO,UAAI,MAAO,UAAI,UAAW,UAAI,QAAS,QAAI,QAAS,QAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,OAAQ,QAAI,OAAQ,QAAI,MAAO,UAAI,QAAS,UAAI,KAAM,UAAI,KAAM,UAAI,OAAQ,UAAI,MAAO,UAAI,MAAO,UAAI,MAAO,UAAI,IAAK,UAAI,OAAQ,UAAI,KAAM,aAAK,KAAM,aAAK,IAAK,UAAI,QAAS,QAAI,QAAS,QAAI,KAAM,UAAI,QAAS,UAAI,IAAK,UAAI,SAAU,UAAI,UAAW,UAAI,KAAM,UAAI,KAAM,UAAI,QAAS,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,UAAW,UAAI,kBAAmB,UAAI,QAAS,UAAI,sBAAuB,UAAI,QAAS,UAAI,QAAS,UAAI,MAAO,UAAI,KAAM,UAAI,KAAM,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,MAAO,aAAK,MAAO,aAAK,MAAO,UAAI,QAAS,UAAI,OAAQ,UAAI,MAAO,UAAI,SAAU,UAAI,SAAU,UAAI,OAAQ,UAAI,QAAS,UAAI,SAAU,UAAI,OAAQ,UAAI,YAAa,UAAI,aAAc,UAAI,OAAQ,UAAI,QAAS,KAAI,YAAa,UAAI,QAAS,UAAI,aAAc,UAAI,OAAQ,UAAI,SAAU,UAAI,UAAW,UAAI,OAAQ,UAAI,OAAQ,UAAI,MAAO,UAAI,MAAO,UAAI,OAAQ,UAAI,MAAO,UAAI,MAAO,UAAI,KAAM,UAAI,KAAM,UAAI,KAAM,QAAI,KAAM,QAAI,MAAO,QAAI,MAAO,QAAI,MAAO,UAAI,MAAO,KAAI,OAAQ,UAAI,QAAS,UAAI,aAAc,UAAI,cAAe,UAAI,cAAe,UAAI,eAAgB,UAAI,KAAM,UAAI,KAAM,UAAI,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,QAAS,UAAI,KAAM,aAAK,KAAM,aAAK,OAAQ,UAAI,mBAAoB,UAAI,uBAAwB,UAAI,OAAQ,MAAK,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,MAAO,UAAI,MAAO,aAAK,MAAO,aAAK,QAAS,UAAI,QAAS,UAAI,MAAO,UAAI,OAAQ,UAAI,YAAa,UAAI,UAAW,UAAI,QAAS,QAAI,QAAS,UAAI,QAAS,QAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,QAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,OAAQ,UAAI,MAAO,aAAK,MAAO,UAAI,QAAS,UAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,KAAM,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,OAAQ,UAAI,KAAM,UAAI,KAAM,UAAI,MAAO,UAAI,MAAO,UAAI,IAAK,UAAI,IAAK,UAAI,KAAM,UAAI,KAAM,UAAI,KAAM,UAAI,MAAO,UAAI,UAAW,UAAI,OAAQ,UAAI,KAAM,UAAI,QAAS,UAAI,SAAU,UAAI,UAAW,UAAI,MAAO,gBAAK,QAAS,UAAI,KAAM,aAAK,KAAM,aAAK,IAAK,UAAI,IAAK,UAAI,KAAM,UAAI,OAAQ,UAAI,MAAO,UAAI,MAAO,UAAI,KAAM,UAAI,IAAK,UAAI,KAAM,UAAI,KAAM,UAAI,MAAO,UAAI,UAAW,UAAI,KAAM,UAAI,KAAM,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,MAAO,aAAK,MAAO,aAAK,OAAQ,KAAI,cAAe,UAAI,kBAAmB,UAAI,kBAAmB,UAAI,gBAAiB,UAAI,aAAc,UAAI,mBAAoB,UAAI,cAAe,UAAI,MAAO,aAAK,MAAO,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,MAAO,UAAI,OAAQ,UAAI,IAAK,KAAI,IAAK,KAAI,IAAK,UAAI,OAAQ,UAAI,QAAS,UAAI,SAAU,UAAI,WAAY,UAAI,QAAS,UAAI,QAAS,UAAI,WAAY,UAAI,YAAa,UAAI,SAAU,UAAI,QAAS,UAAI,WAAY,gBAAK,MAAO,gBAAK,OAAQ,UAAI,QAAS,UAAI,MAAO,QAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,SAAU,UAAI,MAAO,UAAI,MAAO,UAAI,OAAQ,UAAI,KAAM,KAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,UAAI,WAAY,UAAI,QAAS,UAAI,QAAS,UAAI,KAAM,aAAK,KAAM,UAAI,cAAe,UAAI,UAAW,UAAI,UAAW,UAAI,OAAQ,UAAI,QAAS,UAAI,eAAgB,UAAI,gBAAiB,UAAI,MAAO,aAAK,MAAO,UAAI,QAAS,UAAI,gBAAiB,UAAI,MAAO,aAAK,MAAO,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,cAAe,UAAI,WAAY,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,QAAI,QAAS,QAAI,IAAK,UAAI,OAAQ,QAAI,OAAQ,QAAI,KAAM,UAAI,KAAM,UAAI,MAAO,UAAI,MAAO,UAAI,MAAO,UAAI,OAAQ,QAAI,KAAM,UAAI,KAAM,aAAK,KAAM,UAAI,QAAS,QAAI,QAAS,QAAI,IAAK,UAAI,QAAS,UAAI,OAAQ,UAAI,QAAS,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,YAAa,UAAI,UAAW,UAAI,UAAW,UAAI,OAAQ,UAAI,IAAK,UAAI,MAAO,UAAI,OAAQ,UAAI,SAAU,UAAI,QAAS,UAAI,IAAK,UAAI,OAAQ,UAAI,UAAW,UAAI,QAAS,UAAI,QAAS,UAAI,KAAM,UAAI,KAAM,UAAI,UAAW,UAAI,UAAW,UAAI,UAAW,UAAI,cAAe,UAAI,UAAW,UAAI,SAAU,UAAI,gBAAiB,UAAI,gBAAiB,UAAI,MAAO,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,MAAO,aAAK,MAAO,aAAK,MAAO,UAAI,MAAO,UAAI,OAAQ,UAAI,QAAS,QAAI,MAAO,aAAK,MAAO,UAAI,MAAO,UAAI,SAAU,UAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,UAAI,OAAQ,UAAI,IAAK,UAAI,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,OAAQ,UAAI,MAAO,QAAI,MAAO,QAAI,OAAQ,UAAI,OAAQ,UAAI,KAAM,UAAI,KAAM,UAAI,KAAM,aAAK,KAAM,aAAK,OAAQ,UAAI,MAAO,aAAK,MAAO,aAAK,MAAO,aAAK,MAAO,aAAK,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,KAAM,UAAI,KAAM,UAAI,KAAM,aAAK,KAAM,aAAK,QAAS,UAAI,MAAO,UAAI,MAAO,UAAI,MAAO,UAAI,MAAO,UAAI,MAAO,aAAK,MAAO,aAAK,MAAO,aAAK,MAAO,aAAK,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,UAAW,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,MAAO,UAAI,MAAO,UAAI,OAAQ,UAAI,QAAS,UAAI,KAAM,UAAI,YAAa,UAAI,OAAQ,QAAI,OAAQ,UAAI,SAAU,UAAI,MAAO,UAAI,MAAO,UAAI,MAAO,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,SAAU,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,KAAM,UAAI,MAAO,UAAI,OAAQ,gBAAK,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,KAAI,QAAS,KAAI,OAAQ,UAAI,SAAU,UAAI,SAAU,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,MAAO,KAAI,KAAM,UAAI,KAAM,UAAI,MAAO,UAAI,OAAQ,UAAI,QAAS,UAAI,SAAU,UAAI,UAAW,UAAI,MAAO,UAAI,IAAK,UAAI,IAAK,UAAI,kBAAmB,UAAI,cAAe,UAAI,WAAY,UAAI,WAAY,UAAI,WAAY,UAAI,qBAAsB,UAAI,eAAgB,UAAI,aAAc,UAAI,mBAAoB,UAAI,mBAAoB,UAAI,mBAAoB,UAAI,gBAAiB,UAAI,WAAY,UAAI,iBAAkB,UAAI,eAAgB,UAAI,gBAAiB,UAAI,gBAAiB,UAAI,gBAAiB,UAAI,gBAAiB,UAAI,iBAAkB,UAAI,mBAAoB,UAAI,qBAAsB,UAAI,iBAAkB,UAAI,cAAe,UAAI,SAAU,UAAI,eAAgB,UAAI,gBAAiB,UAAI,iBAAkB,UAAI,cAAe,UAAI,mBAAoB,UAAI,kBAAmB,UAAI,iBAAkB,UAAI,iBAAkB,UAAI,cAAe,UAAI,eAAgB,UAAI,YAAa,UAAI,KAAM,UAAI,KAAM,UAAI,KAAM,UAAI,MAAO,UAAI,UAAW,UAAI,OAAQ,UAAI,KAAM,UAAI,QAAS,UAAI,SAAU,UAAI,UAAW,UAAI,MAAO,gBAAK,QAAS,UAAI,YAAa,UAAI,SAAU,UAAI,WAAY,UAAI,YAAa,UAAI,kBAAmB,UAAI,eAAgB,UAAI,aAAc,UAAI,SAAU,UAAI,UAAW,UAAI,SAAU,UAAI,gBAAiB,UAAI,WAAY,UAAI,QAAS,UAAI,QAAS,UAAI,KAAM,aAAK,KAAM,aAAK,IAAK,UAAI,KAAM,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,UAAI,OAAQ,UAAI,MAAO,UAAI,MAAO,UAAI,OAAQ,UAAI,IAAK,UAAI,IAAK,UAAI,UAAW,UAAI,YAAa,UAAI,QAAS,UAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,YAAa,UAAI,QAAS,UAAI,MAAO,UAAI,UAAW,UAAI,KAAM,UAAI,KAAM,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,eAAgB,UAAI,eAAgB,UAAI,eAAgB,UAAI,oBAAqB,UAAI,oBAAqB,UAAI,oBAAqB,UAAI,YAAa,UAAI,gBAAiB,UAAI,gBAAiB,UAAI,gBAAiB,UAAI,eAAgB,UAAI,gBAAiB,UAAI,OAAQ,UAAI,MAAO,aAAK,MAAO,aAAK,QAAS,UAAI,SAAU,UAAI,QAAS,UAAI,QAAS,KAAI,gBAAiB,UAAI,iBAAkB,UAAI,KAAM,UAAI,SAAU,UAAI,MAAO,UAAI,MAAO,KAAI,QAAS,UAAI,OAAQ,UAAI,UAAW,UAAI,OAAQ,UAAI,QAAS,UAAI,KAAM,UAAI,OAAQ,UAAI,QAAS,UAAI,MAAO,aAAK,MAAO,UAAI,KAAM,UAAI,KAAM,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,MAAO,KAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,MAAO,UAAI,OAAQ,UAAI,IAAK,KAAI,IAAK,KAAI,IAAK,UAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,SAAU,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,UAAI,UAAW,UAAI,SAAU,UAAI,WAAY,gBAAK,MAAO,gBAAK,MAAO,QAAI,MAAO,UAAI,MAAO,UAAI,SAAU,UAAI,KAAM,UAAI,KAAM,UAAI,QAAS,UAAI,YAAa,UAAI,YAAa,UAAI,UAAW,UAAI,QAAS,UAAI,QAAS,UAAI,KAAM,UAAI,KAAM,UAAI,OAAQ,UAAI,OAAQ,UAAI,eAAgB,UAAI,aAAc,UAAI,WAAY,UAAI,KAAM,aAAK,KAAM,aAAK,KAAM,UAAI,OAAQ,QAAI,QAAS,KAAI,QAAS,UAAI,KAAM,UAAI,QAAS,QAAI,QAAS,UAAI,OAAQ,UAAI,QAAS,UAAI,SAAU,UAAI,WAAY,UAAI,MAAO,UAAI,MAAO,UAAI,QAAS,UAAI,QAAS,UAAI,MAAO,aAAK,MAAO,aAAK,IAAK,UAAI,MAAO,aAAK,MAAO,UAAI,QAAS,UAAI,IAAK,UAAI,IAAK,UAAI,UAAW,UAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,MAAO,gBAAK,KAAM,UAAI,MAAO,gBAAK,OAAQ,gBAAK,OAAQ,UAAI,SAAU,UAAI,SAAU,UAAI,UAAW,UAAI,OAAQ,UAAI,MAAO,QAAI,OAAQ,gBAAK,QAAS,gBAAK,MAAO,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,UAAW,gBAAK,MAAO,UAAI,KAAM,UAAI,KAAM,UAAI,OAAQ,UAAI,QAAS,UAAI,OAAQ,UAAI,OAAQ,UAAI,SAAU,UAAI,IAAK,UAAI,OAAQ,gBAAK,qBAAsB,UAAI,oBAAqB,UAAI,mBAAoB,UAAI,uBAAwB,UAAI,QAAS,UAAI,QAAS,UAAI,OAAQ,gBAAK,sBAAuB,UAAI,gBAAiB,UAAI,SAAU,MAAK,QAAS,UAAI,SAAU,UAAI,KAAM,aAAK,KAAM,aAAK,KAAM,gBAAK,KAAM,UAAI,MAAO,UAAI,OAAQ,gBAAK,WAAY,gBAAK,MAAO,gBAAK,KAAM,gBAAK,OAAQ,UAAI,KAAM,gBAAK,KAAM,UAAI,MAAO,UAAI,MAAO,gBAAK,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,IAAK,UAAI,KAAM,UAAI,MAAO,UAAI,KAAM,UAAI,MAAO,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,MAAO,UAAI,KAAM,gBAAK,KAAM,UAAI,YAAa,UAAI,YAAa,UAAI,iBAAkB,UAAI,iBAAkB,UAAI,MAAO,UAAI,OAAQ,gBAAK,WAAY,gBAAK,MAAO,gBAAK,OAAQ,UAAI,KAAM,gBAAK,OAAQ,UAAI,KAAM,gBAAK,KAAM,UAAI,OAAQ,UAAI,QAAS,UAAI,MAAO,gBAAK,MAAO,UAAI,SAAU,UAAI,kBAAmB,QAAI,MAAO,aAAK,MAAO,UAAI,KAAM,UAAI,KAAM,QAAI,cAAe,UAAI,WAAY,UAAI,sBAAuB,UAAI,YAAa,UAAI,UAAW,UAAI,eAAgB,gBAAK,WAAY,UAAI,YAAa,UAAI,iBAAkB,UAAI,qBAAsB,gBAAK,mBAAoB,gBAAK,gBAAiB,UAAI,sBAAuB,gBAAK,iBAAkB,UAAI,iBAAkB,gBAAK,cAAe,gBAAK,OAAQ,UAAI,UAAW,gBAAK,QAAS,gBAAK,SAAU,UAAI,SAAU,UAAI,SAAU,UAAI,oBAAqB,gBAAK,iBAAkB,UAAI,sBAAuB,UAAI,SAAU,UAAI,cAAe,UAAI,gBAAiB,UAAI,aAAc,gBAAK,mBAAoB,gBAAK,cAAe,UAAI,yBAA0B,gBAAK,mBAAoB,gBAAK,OAAQ,UAAI,SAAU,UAAI,SAAU,UAAI,SAAU,UAAI,aAAc,UAAI,kBAAmB,gBAAK,uBAAwB,UAAI,mBAAoB,UAAI,qBAAsB,gBAAK,kBAAmB,UAAI,uBAAwB,UAAI,iBAAkB,gBAAK,sBAAuB,UAAI,mBAAoB,gBAAK,wBAAyB,UAAI,WAAY,gBAAK,gBAAiB,UAAI,aAAc,UAAI,kBAAmB,gBAAK,uBAAwB,UAAI,kBAAmB,gBAAK,aAAc,gBAAK,kBAAmB,UAAI,UAAW,UAAI,eAAgB,UAAI,mBAAoB,UAAI,eAAgB,UAAI,gBAAiB,UAAI,WAAY,UAAI,MAAO,UAAI,QAAS,gBAAK,OAAQ,gBAAK,SAAU,UAAI,KAAM,UAAI,QAAS,UAAI,OAAQ,UAAI,SAAU,gBAAK,MAAO,gBAAK,QAAS,gBAAK,OAAQ,UAAI,OAAQ,UAAI,QAAS,gBAAK,aAAc,UAAI,aAAc,UAAI,OAAQ,UAAI,QAAS,UAAI,KAAM,UAAI,QAAS,UAAI,MAAO,gBAAK,MAAO,aAAK,MAAO,aAAK,WAAY,UAAI,gBAAiB,UAAI,MAAO,UAAI,OAAQ,UAAI,QAAS,UAAI,OAAQ,UAAI,OAAQ,UAAI,SAAU,UAAI,SAAU,UAAI,MAAO,UAAI,OAAQ,gBAAK,OAAQ,UAAI,SAAU,gBAAK,WAAY,UAAI,YAAa,gBAAK,OAAQ,UAAI,SAAU,gBAAK,MAAO,UAAI,OAAQ,gBAAK,OAAQ,UAAI,SAAU,gBAAK,WAAY,UAAI,YAAa,gBAAK,MAAO,UAAI,QAAS,QAAI,QAAS,QAAI,MAAO,UAAI,eAAgB,UAAI,iBAAkB,UAAI,gBAAiB,UAAI,kBAAmB,UAAI,IAAK,UAAI,IAAK,UAAI,KAAM,KAAI,QAAS,UAAI,OAAQ,UAAI,MAAO,gBAAK,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,MAAO,gBAAK,MAAO,WAAK,QAAS,UAAI,SAAU,UAAI,QAAS,UAAI,MAAO,gBAAK,MAAO,WAAK,SAAU,gBAAK,QAAS,UAAI,SAAU,gBAAK,OAAQ,gBAAK,QAAS,UAAI,OAAQ,UAAI,OAAQ,UAAI,SAAU,UAAI,QAAS,UAAI,QAAS,QAAI,QAAS,QAAI,MAAO,UAAI,OAAQ,QAAI,OAAQ,QAAI,MAAO,UAAI,KAAM,UAAI,KAAM,UAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,MAAO,UAAI,MAAO,UAAI,QAAS,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,KAAM,aAAK,KAAM,aAAK,MAAO,UAAI,QAAS,QAAI,QAAS,QAAI,KAAM,UAAI,OAAQ,UAAI,KAAM,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,SAAU,UAAI,OAAQ,UAAI,KAAM,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,SAAU,UAAI,SAAU,UAAI,MAAO,UAAI,QAAS,UAAI,MAAO,aAAK,MAAO,aAAK,MAAO,UAAI,sBAAuB,UAAI,gBAAiB,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,IAAK,UAAI,IAAK,UAAI,KAAM,UAAI,OAAQ,UAAI,SAAU,UAAI,MAAO,QAAI,MAAO,QAAI,QAAS,UAAI,MAAO,UAAI,SAAU,UAAI,KAAM,UAAI,IAAK,UAAI,MAAO,aAAK,MAAO,UAAI,QAAS,QAAI,QAAS,QAAI,MAAO,UAAI,QAAS,QAAI,QAAS,QAAI,UAAW,UAAI,QAAS,UAAI,QAAS,UAAI,MAAO,QAAI,MAAO,QAAI,OAAQ,UAAI,SAAU,UAAI,WAAY,UAAI,aAAc,UAAI,iBAAkB,UAAI,MAAO,QAAI,UAAW,UAAI,KAAM,UAAI,QAAS,UAAI,OAAQ,UAAI,MAAO,UAAI,UAAW,UAAI,KAAM,UAAI,KAAM,UAAI,QAAS,KAAI,QAAS,KAAI,QAAS,UAAI,MAAO,UAAI,SAAU,UAAI,KAAM,aAAK,KAAM,aAAK,KAAM,UAAI,KAAM,UAAI,MAAO,UAAI,QAAS,UAAI,OAAQ,UAAI,IAAK,UAAI,IAAK,UAAI,WAAY,UAAI,KAAM,UAAI,QAAS,UAAI,SAAU,UAAI,QAAS,UAAI,UAAW,UAAI,OAAQ,UAAI,SAAU,UAAI,MAAO,KAAI,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,WAAY,QAAI,QAAS,QAAI,SAAU,UAAI,SAAU,UAAI,IAAK,QAAI,eAAgB,UAAI,UAAW,UAAI,MAAO,aAAK,MAAO,UAAI,OAAQ,QAAI,MAAO,UAAI,IAAK,UAAI,IAAK,UAAI,OAAQ,UAAI,YAAa,UAAI,MAAO,UAAI,aAAc,UAAI,UAAW,UAAI,eAAgB,UAAI,oBAAqB,UAAI,eAAgB,UAAI,QAAS,UAAI,aAAc,UAAI,UAAW,UAAI,UAAW,UAAI,KAAM,UAAI,KAAM,UAAI,SAAU,UAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,UAAI,OAAQ,UAAI,MAAO,UAAI,QAAS,UAAI,MAAO,UAAI,SAAU,UAAI,UAAW,UAAI,UAAW,UAAI,UAAW,UAAI,MAAO,UAAI,cAAe,UAAI,YAAa,UAAI,QAAS,UAAI,OAAQ,UAAI,QAAS,UAAI,MAAO,aAAK,MAAO,aAAK,KAAM,UAAI,KAAM,UAAI,QAAS,UAAI,KAAM,aAAK,KAAM,aAAK,MAAO,UAAI,MAAO,aAAK,MAAO,UAAI,QAAS,UAAI,MAAO,aAAK,MAAO,aAAK,aAAc,UAAI,SAAU,UAAI,OAAQ,KAAI,SAAU,UAAI,MAAO,KAAK,MAAO,KAAK,OAAQ,UAAI,MAAO,gBAAK,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,UAAW,UAAI,MAAO,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,UAAI,OAAQ,QAAI,QAAS,UAAI,OAAQ,UAAI,SAAU,UAAI,OAAQ,UAAI,MAAO,UAAI,MAAO,UAAI,MAAO,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,SAAU,UAAI,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,WAAY,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,KAAI,QAAS,KAAI,OAAQ,UAAI,SAAU,UAAI,SAAU,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,MAAO,KAAI,KAAM,UAAI,KAAM,UAAI,MAAO,UAAI,SAAU,UAAI,OAAQ,UAAI,QAAS,UAAI,MAAO,UAAI,MAAO,UAAI,SAAU,UAAI,UAAW,UAAI,OAAQ,UAAI,IAAK,UAAI,MAAO,UAAI,KAAM,QAAI,KAAM,QAAI,gBAAiB,UAAI,oBAAqB,UAAI,sBAAuB,UAAI,QAAS,UAAI,QAAS,UAAI,KAAM,aAAK,KAAM,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,UAAI,KAAM,UAAI,KAAM,UAAI,MAAO,UAAI,mBAAoB,UAAI,eAAgB,UAAI,YAAa,UAAI,YAAa,UAAI,YAAa,UAAI,qBAAsB,UAAI,gBAAiB,UAAI,cAAe,UAAI,oBAAqB,UAAI,oBAAqB,UAAI,oBAAqB,UAAI,iBAAkB,UAAI,YAAa,UAAI,kBAAmB,UAAI,gBAAiB,UAAI,iBAAkB,UAAI,mBAAoB,UAAI,kBAAmB,UAAI,iBAAkB,UAAI,eAAgB,UAAI,UAAW,UAAI,gBAAiB,UAAI,iBAAkB,UAAI,kBAAmB,UAAI,eAAgB,UAAI,oBAAqB,UAAI,mBAAoB,UAAI,kBAAmB,UAAI,kBAAmB,UAAI,eAAgB,UAAI,gBAAiB,UAAI,aAAc,UAAI,MAAO,UAAI,cAAe,UAAI,OAAQ,UAAI,OAAQ,UAAI,KAAM,UAAI,YAAa,UAAI,QAAS,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,MAAO,aAAK,MAAO,UAAI,QAAS,UAAI,SAAU,UAAI,cAAe,UAAI,MAAO,KAAI,QAAS,UAAI,UAAW,UAAI,OAAQ,UAAI,aAAc,UAAI,QAAS,UAAI,MAAO,aAAK,MAAO,UAAI,KAAM,UAAI,KAAM,UAAI,MAAO,KAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,UAAW,UAAI,aAAc,UAAI,SAAU,UAAI,IAAK,UAAI,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,MAAO,UAAI,QAAS,UAAI,QAAS,UAAI,IAAK,UAAI,IAAK,UAAI,OAAQ,UAAI,KAAM,UAAI,KAAM,UAAI,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,MAAO,UAAI,QAAS,UAAI,UAAW,UAAI,OAAQ,UAAI,KAAM,UAAI,KAAM,UAAI,OAAQ,UAAI,MAAO,UAAI,OAAQ,UAAI,QAAS,UAAI,OAAQ,UAAI,OAAQ,UAAI,SAAU,UAAI,MAAO,QAAI,MAAO,KAAI,QAAS,UAAI,UAAW,UAAI,OAAQ,UAAI,MAAO,UAAI,KAAM,aAAK,KAAM,aAAK,QAAS,UAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,MAAO,UAAI,MAAO,UAAI,gBAAiB,UAAI,gBAAiB,UAAI,UAAW,UAAI,eAAgB,UAAI,iBAAkB,UAAI,cAAe,UAAI,KAAM,QAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,KAAM,UAAI,QAAS,UAAI,MAAO,UAAI,OAAQ,UAAI,MAAO,UAAI,OAAQ,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,SAAU,UAAI,SAAU,UAAI,OAAQ,UAAI,aAAc,UAAI,eAAgB,UAAI,QAAS,UAAI,UAAW,UAAI,MAAO,UAAI,OAAQ,UAAI,KAAM,UAAI,MAAO,UAAI,OAAQ,gBAAK,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,MAAO,UAAI,KAAM,KAAI,MAAO,aAAK,MAAO,aAAK,QAAS,UAAI,WAAY,UAAI,MAAO,UAAI,OAAQ,UAAI,QAAS,gBAAK,OAAQ,UAAI,QAAS,gBAAK,MAAO,UAAI,OAAQ,UAAI,QAAS,UAAI,UAAW,UAAI,YAAa,UAAI,OAAQ,UAAI,QAAS,UAAI,UAAW,UAAI,YAAa,UAAI,QAAS,UAAI,QAAS,UAAI,oBAAqB,UAAI,cAAe,UAAI,mBAAoB,UAAI,gBAAiB,UAAI,qBAAsB,UAAI,aAAc,UAAI,QAAS,UAAI,KAAM,UAAI,MAAO,UAAI,OAAQ,UAAI,MAAO,aAAK,MAAO,aAAK,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,MAAO,UAAI,MAAO,UAAI,OAAQ,UAAI,iBAAkB,UAAI,aAAc,UAAI,OAAQ,QAAI,KAAM,UAAI,KAAM,UAAI,QAAS,UAAI,MAAO,UAAI,MAAO,UAAI,SAAU,UAAI,SAAU,UAAI,OAAQ,UAAI,OAAQ,UAAI,SAAU,UAAI,SAAU,UAAI,QAAS,UAAI,QAAS,UAAI,UAAW,UAAI,WAAY,UAAI,aAAc,UAAI,WAAY,UAAI,YAAa,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,YAAa,UAAI,MAAO,UAAI,aAAc,UAAI,UAAW,UAAI,eAAgB,UAAI,oBAAqB,UAAI,eAAgB,UAAI,QAAS,UAAI,aAAc,UAAI,UAAW,UAAI,UAAW,UAAI,SAAU,UAAI,UAAW,UAAI,KAAM,UAAI,KAAM,UAAI,MAAO,UAAI,MAAO,QAAI,MAAO,QAAI,MAAO,QAAI,KAAM,UAAI,KAAM,UAAI,QAAS,UAAI,SAAU,UAAI,MAAO,UAAI,MAAO,UAAI,SAAU,UAAI,UAAW,UAAI,eAAgB,UAAI,SAAU,UAAI,SAAU,UAAI,SAAU,UAAI,SAAU,UAAI,OAAQ,UAAI,OAAQ,UAAI,SAAU,UAAI,QAAS,UAAI,QAAS,UAAI,UAAW,UAAI,WAAY,UAAI,WAAY,UAAI,YAAa,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,OAAQ,UAAI,SAAU,UAAI,QAAS,UAAI,OAAQ,QAAI,KAAM,KAAK,QAAS,UAAI,KAAM,UAAI,KAAM,UAAI,MAAO,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,KAAM,UAAI,KAAM,UAAI,MAAO,UAAI,QAAS,UAAI,KAAM,aAAK,KAAM,aAAK,QAAS,UAAI,WAAY,UAAI,WAAY,UAAI,OAAQ,UAAI,OAAQ,UAAI,UAAW,UAAI,QAAS,UAAI,aAAc,UAAI,UAAW,UAAI,YAAa,gBAAK,WAAY,UAAI,QAAS,UAAI,OAAQ,UAAI,QAAS,UAAI,OAAQ,QAAI,OAAQ,QAAI,OAAQ,UAAI,OAAQ,UAAI,YAAa,UAAI,gBAAiB,UAAI,YAAa,UAAI,UAAW,UAAI,QAAS,UAAI,OAAQ,QAAI,QAAS,UAAI,MAAO,UAAI,MAAO,UAAI,QAAS,UAAI,QAAS,UAAI,KAAM,UAAI,MAAO,aAAK,MAAO,aAAK,SAAU,UAAI,MAAO,UAAI,QAAS,UAAI,OAAQ,UAAI,OAAQ,UAAI,UAAW,UAAI,cAAe,UAAI,cAAe,UAAI,gBAAiB,UAAI,WAAY,UAAI,eAAgB,UAAI,iBAAkB,UAAI,QAAS,UAAI,MAAO,UAAI,UAAW,UAAI,WAAY,UAAI,SAAU,UAAI,OAAQ,UAAI,SAAU,UAAI,UAAW,UAAI,MAAO,aAAK,MAAO,aAAK,MAAO,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,kBAAmB,UAAI,mBAAoB,UAAI,QAAS,QAAI,QAAS,QAAI,MAAO,UAAI,MAAO,UAAI,MAAO,UAAI,UAAW,UAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,OAAQ,QAAI,OAAQ,QAAI,KAAM,UAAI,KAAM,UAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,QAAS,UAAI,KAAM,aAAK,KAAM,aAAK,QAAS,QAAI,QAAS,QAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,UAAI,UAAW,UAAI,QAAS,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,KAAM,QAAI,UAAW,KAAI,YAAa,UAAI,cAAe,UAAI,kBAAmB,UAAI,OAAQ,UAAI,WAAY,UAAI,OAAQ,UAAI,OAAQ,UAAI,MAAO,aAAK,MAAO,aAAK,YAAa,UAAI,SAAU,UAAI,SAAU,UAAI,SAAU,UAAI,kBAAmB,UAAI,aAAc,UAAI,aAAc,UAAI,aAAc,UAAI,eAAgB,UAAI,eAAgB,UAAI,gBAAiB,UAAI,OAAQ,UAAI,gBAAiB,UAAI,iBAAkB,UAAI,MAAO,UAAI,MAAO,UAAI,OAAQ,UAAI,SAAU,UAAI,SAAU,UAAI,YAAa,UAAI,OAAQ,UAAI,YAAa,UAAI,QAAS,UAAI,UAAW,UAAI,QAAS,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,MAAO,aAAK,MAAO,aAAK,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,MAAO,QAAI,MAAO,QAAI,SAAU,UAAI,QAAS,UAAI,YAAa,UAAI,UAAW,UAAI,YAAa,UAAI,QAAS,UAAI,OAAQ,UAAI,WAAY,UAAI,MAAO,UAAI,MAAO,UAAI,QAAS,UAAI,UAAW,UAAI,cAAe,gBAAK,eAAgB,gBAAK,cAAe,gBAAK,eAAgB,gBAAK,UAAW,UAAI,iBAAkB,UAAI,kBAAmB,UAAI,MAAO,UAAI,MAAO,UAAI,OAAQ,UAAI,KAAM,UAAI,KAAM,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,KAAM,UAAI,KAAM,UAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,KAAI,QAAS,UAAI,MAAO,KAAI,MAAO,UAAI,aAAc,UAAI,cAAe,KAAI,mBAAoB,UAAI,eAAgB,UAAI,eAAgB,UAAI,KAAM,aAAK,KAAM,aAAK,OAAQ,UAAI,OAAQ,gBAAK,OAAQ,gBAAK,MAAO,aAAK,MAAO,aAAK,OAAQ,UAAI,OAAQ,UAAI,MAAO,aAAK,MAAO,aAAK,QAAS,gBAAK,QAAS,gBAAK,QAAS,gBAAK,QAAS,gBAAK,QAAS,UAAI,SAAU,UAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,UAAI,OAAQ,UAAI,OAAQ,UAAI,QAAS,UAAI,QAAS,UAAI,KAAM,aAAK,KAAM,aAAK,MAAO,aAAK,MAAO,aAAK,IAAK,UAAI,IAAK,UAAI,QAAS,UAAI,MAAO,aAAK,MAAO,aAAK,MAAO,UAAI,OAAQ,UAAI,MAAO,UAAI,OAAQ,UAAI,KAAM,aAAK,KAAM,aAAK,OAAQ,UAAI,OAAQ,UAAI,IAAK,UAAI,IAAK,UAAI,OAAQ,UAAI,OAAQ,UAAI,MAAO,UAAI,MAAO,UAAI,OAAQ,UAAI,MAAO,aAAK,MAAO,aAAK,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,OAAQ,UAAI,MAAO,aAAK,MAAO,aAAK,QAAS,UAAI,QAAS,UAAI,OAAQ,UAAI,MAAO,UAAI,QAAS,UAAI,QAAS,QAAI,QAAS,QAAI,MAAO,UAAI,MAAO,UAAI,OAAQ,UAAI,OAAQ,UAAI,KAAM,UAAI,KAAM,UAAI,KAAM,QAAI,KAAM,aAAK,KAAM,aAAK,MAAO,UAAI,MAAO,UAAI,MAAO,aAAK,MAAO,aAAK,MAAO,aAAK,MAAO,aAAK,MAAO,UAAI,MAAO,UAAI,MAAO,QAAI,MAAO,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,QAAS,UAAI,KAAM,UAAI,KAAM,UAAI,MAAO,UAAI,MAAO,UAAI,QAAS,UAAI,gBAAiB,UAAI,MAAO,UAAI,MAAO,UAAI,KAAM,aAAK,KAAM,UAAI,MAAO,UAAI,MAAO,UAAI,SAAU,UAAI,MAAO,aAAK,MAAO,UAAI,MAAO,aAAK,MAAO,aAAK,KAAM,UAAI,MAAO,SAAG;AAAA;AAAA;;;ACAt74B,IAAAA,oBAAA;AAAA;AAAA;AAKA,WAAO,UAAU;AAAA;AAAA;;;ACLjB;AAAA;AAAA;AAKA,aAAS,OAAO,KAAK;AAAE,aAAO,OAAO,UAAU,SAAS,KAAK,GAAG;AAAA,IAAG;AAEnE,aAAS,SAAS,KAAK;AAAE,aAAO,OAAO,GAAG,MAAM;AAAA,IAAmB;AAEnE,QAAI,kBAAkB,OAAO,UAAU;AAEvC,aAAS,IAAI,QAAQC,MAAK;AACxB,aAAO,gBAAgB,KAAK,QAAQA,IAAG;AAAA,IACzC;AAIA,aAAS,OAAO,KAAkC;AAChD,UAAI,UAAU,MAAM,UAAU,MAAM,KAAK,WAAW,CAAC;AAErD,cAAQ,QAAQ,SAAUC,SAAQ;AAChC,YAAI,CAACA,SAAQ;AAAE;AAAA,QAAQ;AAEvB,YAAI,OAAOA,YAAW,UAAU;AAC9B,gBAAM,IAAI,UAAUA,UAAS,gBAAgB;AAAA,QAC/C;AAEA,eAAO,KAAKA,OAAM,EAAE,QAAQ,SAAUD,MAAK;AACzC,cAAIA,IAAG,IAAIC,QAAOD,IAAG;AAAA,QACvB,CAAC;AAAA,MACH,CAAC;AAED,aAAO;AAAA,IACT;AAIA,aAAS,eAAe,KAAK,KAAK,aAAa;AAC7C,aAAO,CAAC,EAAE,OAAO,IAAI,MAAM,GAAG,GAAG,GAAG,aAAa,IAAI,MAAM,MAAM,CAAC,CAAC;AAAA,IACrE;AAIA,aAAS,kBAAkB,GAAG;AAG5B,UAAI,KAAK,SAAU,KAAK,OAAQ;AAAE,eAAO;AAAA,MAAO;AAEhD,UAAI,KAAK,SAAU,KAAK,OAAQ;AAAE,eAAO;AAAA,MAAO;AAChD,WAAK,IAAI,WAAY,UAAW,IAAI,WAAY,OAAQ;AAAE,eAAO;AAAA,MAAO;AAExE,UAAI,KAAK,KAAQ,KAAK,GAAM;AAAE,eAAO;AAAA,MAAO;AAC5C,UAAI,MAAM,IAAM;AAAE,eAAO;AAAA,MAAO;AAChC,UAAI,KAAK,MAAQ,KAAK,IAAM;AAAE,eAAO;AAAA,MAAO;AAC5C,UAAI,KAAK,OAAQ,KAAK,KAAM;AAAE,eAAO;AAAA,MAAO;AAE5C,UAAI,IAAI,SAAU;AAAE,eAAO;AAAA,MAAO;AAClC,aAAO;AAAA,IACT;AAEA,aAAS,cAAc,GAAG;AAExB,UAAI,IAAI,OAAQ;AACd,aAAK;AACL,YAAI,aAAa,SAAU,KAAK,KAC5B,aAAa,SAAU,IAAI;AAE/B,eAAO,OAAO,aAAa,YAAY,UAAU;AAAA,MACnD;AACA,aAAO,OAAO,aAAa,CAAC;AAAA,IAC9B;AAGA,QAAI,iBAAkB;AACtB,QAAI,YAAkB;AACtB,QAAI,kBAAkB,IAAI,OAAO,eAAe,SAAS,MAAM,UAAU,QAAQ,IAAI;AAErF,QAAI,yBAAyB;AAE7B,QAAI,WAAW;AAEf,aAAS,qBAAqB,OAAO,MAAM;AACzC,UAAIE;AAEJ,UAAI,IAAI,UAAU,IAAI,GAAG;AACvB,eAAO,SAAS,IAAI;AAAA,MACtB;AAEA,UAAI,KAAK,WAAW,CAAC,MAAM,MAAe,uBAAuB,KAAK,IAAI,GAAG;AAC3E,QAAAA,QAAO,KAAK,CAAC,EAAE,YAAY,MAAM,MAC/B,SAAS,KAAK,MAAM,CAAC,GAAG,EAAE,IAAI,SAAS,KAAK,MAAM,CAAC,GAAG,EAAE;AAE1D,YAAI,kBAAkBA,KAAI,GAAG;AAC3B,iBAAO,cAAcA,KAAI;AAAA,QAC3B;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAQA,aAAS,WAAW,KAAK;AACvB,UAAI,IAAI,QAAQ,IAAI,IAAI,GAAG;AAAE,eAAO;AAAA,MAAK;AACzC,aAAO,IAAI,QAAQ,gBAAgB,IAAI;AAAA,IACzC;AAEA,aAAS,YAAY,KAAK;AACxB,UAAI,IAAI,QAAQ,IAAI,IAAI,KAAK,IAAI,QAAQ,GAAG,IAAI,GAAG;AAAE,eAAO;AAAA,MAAK;AAEjE,aAAO,IAAI,QAAQ,iBAAiB,SAAU,OAAO,SAAS,QAAQ;AACpE,YAAI,SAAS;AAAE,iBAAO;AAAA,QAAS;AAC/B,eAAO,qBAAqB,OAAO,MAAM;AAAA,MAC3C,CAAC;AAAA,IACH;AAIA,QAAI,sBAAsB;AAC1B,QAAI,yBAAyB;AAC7B,QAAI,oBAAoB;AAAA,MACtB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP;AAEA,aAAS,kBAAkB,IAAI;AAC7B,aAAO,kBAAkB,EAAE;AAAA,IAC7B;AAEA,aAASC,YAAW,KAAK;AACvB,UAAI,oBAAoB,KAAK,GAAG,GAAG;AACjC,eAAO,IAAI,QAAQ,wBAAwB,iBAAiB;AAAA,MAC9D;AACA,aAAO;AAAA,IACT;AAIA,QAAI,mBAAmB;AAEvB,aAAS,SAAS,KAAK;AACrB,aAAO,IAAI,QAAQ,kBAAkB,MAAM;AAAA,IAC7C;AAIA,aAAS,QAAQD,OAAM;AACrB,cAAQA,OAAM;AAAA,QACZ,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,MACX;AACA,aAAO;AAAA,IACT;AAGA,aAAS,aAAaA,OAAM;AAC1B,UAAIA,SAAQ,QAAUA,SAAQ,MAAQ;AAAE,eAAO;AAAA,MAAM;AACrD,cAAQA,OAAM;AAAA,QACZ,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,MACX;AACA,aAAO;AAAA,IACT;AAKA,QAAI,mBAAmB;AAGvB,aAAS,YAAY,IAAI;AACvB,aAAO,iBAAiB,KAAK,EAAE;AAAA,IACjC;AAUA,aAAS,eAAe,IAAI;AAC1B,cAAQ,IAAI;AAAA,QACV,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT;AACE,iBAAO;AAAA,MACX;AAAA,IACF;AAIA,aAAS,mBAAmB,KAAK;AAG/B,YAAM,IAAI,KAAK,EAAE,QAAQ,QAAQ,GAAG;AAQpC,UAAI,SAAI,YAAY,MAAM,UAAK;AAC7B,cAAM,IAAI,QAAQ,MAAM,MAAG;AAAA,MAC7B;AAkCA,aAAO,IAAI,YAAY,EAAE,YAAY;AAAA,IACvC;AAQA,YAAQ,MAAsB,CAAC;AAC/B,YAAQ,IAAI,QAAkB;AAC9B,YAAQ,IAAI,UAAkB;AAE9B,YAAQ,SAAsB;AAC9B,YAAQ,WAAsB;AAC9B,YAAQ,MAAsB;AAC9B,YAAQ,aAAsB;AAC9B,YAAQ,cAAsB;AAC9B,YAAQ,oBAAsB;AAC9B,YAAQ,gBAAsB;AAE9B,YAAQ,aAAsBC;AAC9B,YAAQ,iBAAsB;AAC9B,YAAQ,UAAsB;AAC9B,YAAQ,eAAsB;AAC9B,YAAQ,iBAAsB;AAC9B,YAAQ,cAAsB;AAC9B,YAAQ,WAAsB;AAC9B,YAAQ,qBAAsB;AAAA;AAAA;;;AC5T9B;AAAA;AAAA;AAEA,QAAM,wBAAwB;AAAA,MAC1B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAEA,YAAQ,wBAAwB;AAEhC,YAAQ,cAAc;AAAA,MAClB,KAAK;AAAA,MACL,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,iBAAiB;AAAA,MACjB,WAAW;AAAA,MACX,WAAW;AAAA,MACX,OAAO;AAAA,MACP,kBAAkB;AAAA,MAClB,gBAAgB;AAAA,MAChB,aAAa;AAAA,MACb,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,WAAW;AAAA,MACX,gBAAgB;AAAA,MAChB,aAAa;AAAA,MACb,mBAAmB;AAAA,MACnB,eAAe;AAAA,MACf,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,sBAAsB;AAAA,MACtB,cAAc;AAAA,MACd,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,uBAAuB;AAAA,IAC3B;AAEA,YAAQ,uBAAuB;AAAA,MAC3B,kBAAkB,CAAC,IAAM,EAAI;AAAA;AAAA,MAC7B,gBAAgB,CAAC,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAI;AAAA;AAAA,MACzD,oBAAoB,CAAC,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAI;AAAA;AAAA,MAC7D,eAAe,CAAC,KAAM,IAAM,KAAM,KAAM,KAAM,GAAI;AAAA;AAAA,MAClD,eAAe,CAAC,IAAM,IAAM,IAAM,IAAM,IAAM,EAAI;AAAA;AAAA,MAClD,eAAe,CAAC,IAAM,IAAM,IAAM,IAAM,IAAM,EAAI;AAAA;AAAA,IACtD;AAGA,YAAQ,cAAc,SAAS,IAAI;AAC/B,aAAO,MAAM,SAAU,MAAM;AAAA,IACjC;AAEA,YAAQ,kBAAkB,SAAS,IAAI;AACnC,aAAO,MAAM,SAAU,MAAM;AAAA,IACjC;AAEA,YAAQ,4BAA4B,SAAS,KAAK,KAAK;AACnD,cAAQ,MAAM,SAAU,OAAQ,OAAS;AAAA,IAC7C;AAGA,YAAQ,qBAAqB,SAAS,IAAI;AACtC,aACK,OAAO,MAAQ,OAAO,MAAQ,OAAO,MAAQ,OAAO,KAAQ,OAAO,MAAQ,MAAM,KAAQ,MAAM,MAC/F,MAAM,OAAQ,MAAM;AAAA,IAE7B;AAEA,YAAQ,uBAAuB,SAAS,IAAI;AACxC,aAAQ,MAAM,SAAU,MAAM,SAAW,sBAAsB,QAAQ,EAAE,IAAI;AAAA,IACjF;AAAA;AAAA;;;AC5GA;AAAA;AAAA;AAEA,WAAO,UAAU;AAAA,MACb,+BAA+B;AAAA,MAC/B,2BAA2B;AAAA,MAC3B,wBAAwB;AAAA,MACxB,+CAA+C;AAAA,MAC/C,sBAAsB;AAAA,MACtB,2BAA2B;AAAA,MAC3B,wBAAwB;AAAA,MACxB,yBAAyB;AAAA,MACzB,wCAAwC;AAAA,MACxC,gCAAgC;AAAA,MAChC,yCAAyC;AAAA,MACzC,mBAAmB;AAAA,MACnB,oCAAoC;AAAA,MACpC,gCAAgC;AAAA,MAChC,yCAAyC;AAAA,MACzC,iDAAiD;AAAA,MACjD,6CAA6C;AAAA,MAC7C,kBAAkB;AAAA,MAClB,UAAU;AAAA,MACV,uBAAuB;AAAA,MACvB,oCAAoC;AAAA,MACpC,4CAA4C;AAAA,MAC5C,2DACI;AAAA,MACJ,4CAA4C;AAAA,MAC5C,2CAA2C;AAAA,MAC3C,2CAA2C;AAAA,MAC3C,gCAAgC;AAAA,MAChC,gCAAgC;AAAA,MAChC,+BAA+B;AAAA,MAC/B,+BAA+B;AAAA,MAC/B,oBAAoB;AAAA,MACpB,0BAA0B;AAAA,MAC1B,gCAAgC;AAAA,MAChC,cAAc;AAAA,MACd,eAAe;AAAA,MACf,6BAA6B;AAAA,MAC7B,cAAc;AAAA,MACd,0BAA0B;AAAA,MAC1B,YAAY;AAAA,MACZ,4CAA4C;AAAA,MAC5C,wBAAwB;AAAA,MACxB,6BAA6B;AAAA,MAC7B,uCAAuC;AAAA,MACvC,2BAA2B;AAAA,MAC3B,gCAAgC;AAAA,MAChC,oCAAoC;AAAA,MACpC,oBAAoB;AAAA,MACpB,0CAA0C;AAAA,MAC1C,oBAAoB;AAAA,MACpB,sBAAsB;AAAA,MACtB,gBAAgB;AAAA,MAChB,kBAAkB;AAAA,MAClB,kCAAkC;AAAA,MAClC,uCAAuC;AAAA,MACvC,mCAAmC;AAAA,MACnC,0BAA0B;AAAA,MAC1B,2BAA2B;AAAA,MAC3B,iCAAiC;AAAA,MACjC,sBAAsB;AAAA,MACtB,oCAAoC;AAAA,IACxC;AAAA;AAAA;;;AChEA;AAAA;AAAA;AAEA,QAAM,UAAU;AAChB,QAAM,MAAM;AAGZ,QAAM,IAAI,QAAQ;AAGlB,QAAM,2BAA2B,KAAK;AAKtC,QAAM,eAAN,MAAmB;AAAA,MACf,cAAc;AACV,aAAK,OAAO;AAEZ,aAAK,MAAM;AACX,aAAK,aAAa;AAClB,aAAK,cAAc;AAEnB,aAAK,WAAW,CAAC;AAEjB,aAAK,kBAAkB;AAEvB,aAAK,mBAAmB;AACxB,aAAK,gBAAgB;AACrB,aAAK,kBAAkB;AAAA,MAC3B;AAAA,MAEA,OAAO;AAAA,MAEP;AAAA,MAEA,UAAU;AACN,aAAK,SAAS,KAAK,KAAK,UAAU;AAClC,aAAK,aAAa,KAAK;AAAA,MAC3B;AAAA,MAEA,kBAAkB,IAAI;AAElB,YAAI,KAAK,QAAQ,KAAK,aAAa;AAC/B,gBAAM,SAAS,KAAK,KAAK,WAAW,KAAK,MAAM,CAAC;AAEhD,cAAI,QAAQ,gBAAgB,MAAM,GAAG;AAEjC,iBAAK;AAGL,iBAAK,QAAQ;AAEb,mBAAO,QAAQ,0BAA0B,IAAI,MAAM;AAAA,UACvD;AAAA,QACJ,WAGS,CAAC,KAAK,kBAAkB;AAC7B,eAAK,gBAAgB;AACrB,iBAAO,EAAE;AAAA,QACb;AAGA,aAAK,KAAK,IAAI,sBAAsB;AAEpC,eAAO;AAAA,MACX;AAAA,MAEA,kBAAkB;AACd,YAAI,KAAK,MAAM,KAAK,iBAAiB;AACjC,eAAK,eAAe,KAAK;AACzB,eAAK,OAAO,KAAK,KAAK,UAAU,KAAK,GAAG;AACxC,eAAK,MAAM;AACX,eAAK,aAAa;AAClB,eAAK,WAAW,CAAC;AAAA,QACrB;AAAA,MACJ;AAAA,MAEA,MAAM,OAAO,aAAa;AACtB,YAAI,KAAK,MAAM;AACX,eAAK,QAAQ;AAAA,QACjB,OAAO;AACH,eAAK,OAAO;AAAA,QAChB;AAEA,aAAK,cAAc,KAAK,KAAK,SAAS;AACtC,aAAK,gBAAgB;AACrB,aAAK,mBAAmB;AAAA,MAC5B;AAAA,MAEA,uBAAuB,OAAO;AAC1B,aAAK,OAAO,KAAK,KAAK,UAAU,GAAG,KAAK,MAAM,CAAC,IAAI,QAAQ,KAAK,KAAK,UAAU,KAAK,MAAM,GAAG,KAAK,KAAK,MAAM;AAE7G,aAAK,cAAc,KAAK,KAAK,SAAS;AACtC,aAAK,gBAAgB;AAAA,MACzB;AAAA,MAEA,UAAU;AACN,aAAK;AAEL,YAAI,KAAK,MAAM,KAAK,aAAa;AAC7B,eAAK,gBAAgB,CAAC,KAAK;AAC3B,iBAAO,EAAE;AAAA,QACb;AAEA,YAAI,KAAK,KAAK,KAAK,WAAW,KAAK,GAAG;AAItC,YAAI,KAAK,mBAAmB,OAAO,EAAE,WAAW;AAC5C,eAAK,kBAAkB;AACvB,eAAK,QAAQ;AACb,iBAAO,KAAK,QAAQ;AAAA,QACxB;AAGA,YAAI,OAAO,EAAE,iBAAiB;AAC1B,eAAK,kBAAkB;AACvB,iBAAO,EAAE;AAAA,QACb;AAEA,aAAK,kBAAkB;AAEvB,YAAI,QAAQ,YAAY,EAAE,GAAG;AACzB,eAAK,KAAK,kBAAkB,EAAE;AAAA,QAClC;AAKA,cAAM,qBACD,KAAK,MAAQ,KAAK,OAAS,OAAO,EAAE,aAAa,OAAO,EAAE,mBAAoB,KAAK,OAAQ,KAAK;AAErG,YAAI,CAAC,oBAAoB;AACrB,eAAK,+BAA+B,EAAE;AAAA,QAC1C;AAEA,eAAO;AAAA,MACX;AAAA,MAEA,+BAA+B,IAAI;AAC/B,YAAI,QAAQ,mBAAmB,EAAE,GAAG;AAChC,eAAK,KAAK,IAAI,6BAA6B;AAAA,QAC/C,WAAW,QAAQ,qBAAqB,EAAE,GAAG;AACzC,eAAK,KAAK,IAAI,yBAAyB;AAAA,QAC3C;AAAA,MACJ;AAAA,MAEA,UAAU;AACN,YAAI,KAAK,QAAQ,KAAK,YAAY;AAC9B,eAAK,aAAa,KAAK,SAAS,IAAI;AACpC,eAAK;AAAA,QACT;AAEA,aAAK;AAAA,MACT;AAAA,IACJ;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC9JjhwvE;AAAA;AAAA;AAEA,QAAM,eAAe;AACrB,QAAM,UAAU;AAChB,QAAM,SAAS;AACf,QAAM,MAAM;AAGZ,QAAM,IAAI,QAAQ;AAClB,QAAM,KAAK,QAAQ;AAGnB,QAAM,qCAAqC;AAAA,MACvC,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,MACN,KAAM;AAAA,IACV;AAGA,QAAM,gBAAgB,KAAK;AAC3B,QAAM,mBAAmB,KAAK;AAC9B,QAAM,oBAAoB,KAAK;AAC/B,QAAM,0BAA0B,gBAAgB,mBAAmB;AAGnE,QAAM,aAAa;AACnB,QAAM,eAAe;AACrB,QAAM,gBAAgB;AACtB,QAAM,oBAAoB;AAC1B,QAAM,kBAAkB;AACxB,QAAM,iBAAiB;AACvB,QAAM,qBAAqB;AAC3B,QAAM,iBAAiB;AACvB,QAAM,8BAA8B;AACpC,QAAM,4BAA4B;AAClC,QAAM,4BAA4B;AAClC,QAAM,+BAA+B;AACrC,QAAM,6BAA6B;AACnC,QAAM,6BAA6B;AACnC,QAAM,mCAAmC;AACzC,QAAM,iCAAiC;AACvC,QAAM,iCAAiC;AACvC,QAAM,iCAAiC;AACvC,QAAM,sCAAsC;AAC5C,QAAM,4BAA4B;AAClC,QAAM,iCAAiC;AACvC,QAAM,sCAAsC;AAC5C,QAAM,2CAA2C;AACjD,QAAM,yCAAyC;AAC/C,QAAM,yCAAyC;AAC/C,QAAM,wCAAwC;AAC9C,QAAM,mCAAmC;AACzC,QAAM,wCAAwC;AAC9C,QAAM,6CAA6C;AACnD,QAAM,kDAAkD;AACxD,QAAM,sCAAsC;AAC5C,QAAM,8BAA8B;AACpC,QAAM,uBAAuB;AAC7B,QAAM,6BAA6B;AACnC,QAAM,+BAA+B;AACrC,QAAM,sCAAsC;AAC5C,QAAM,sCAAsC;AAC5C,QAAM,iCAAiC;AACvC,QAAM,qCAAqC;AAC3C,QAAM,+BAA+B;AACrC,QAAM,sBAAsB;AAC5B,QAAM,gCAAgC;AACtC,QAAM,sBAAsB;AAC5B,QAAM,2BAA2B;AACjC,QAAM,gBAAgB;AACtB,QAAM,+BAA+B;AACrC,QAAM,oCAAoC;AAC1C,QAAM,yCAAyC;AAC/C,QAAM,8CAA8C;AACpD,QAAM,yBAAyB;AAC/B,QAAM,oBAAoB;AAC1B,QAAM,yBAAyB;AAC/B,QAAM,gBAAgB;AACtB,QAAM,4BAA4B;AAClC,QAAM,qBAAqB;AAC3B,QAAM,2BAA2B;AACjC,QAAM,qCAAqC;AAC3C,QAAM,yCAAyC;AAC/C,QAAM,gDAAgD;AACtD,QAAM,gDAAgD;AACtD,QAAM,wCAAwC;AAC9C,QAAM,sDAAsD;AAC5D,QAAM,qCAAqC;AAC3C,QAAM,yCAAyC;AAC/C,QAAM,gDAAgD;AACtD,QAAM,gDAAgD;AACtD,QAAM,wCAAwC;AAC9C,QAAM,sBAAsB;AAC5B,QAAM,sBAAsB;AAC5B,QAAM,8BAA8B;AACpC,QAAM,0BAA0B;AAChC,QAAM,4BAA4B;AAClC,QAAM,kCAAkC;AACxC,QAAM,4BAA4B;AAClC,QAAM,oCAAoC;AAC1C,QAAM,8CAA8C;AACpD,QAAM,0CAA0C;AAChD,QAAM,wCAAwC;AAC9C,QAAM,oCAAoC;AAC1C,QAAM,wCAAwC;AAO9C,aAAS,aAAa,IAAI;AACtB,aAAO,OAAO,EAAE,SAAS,OAAO,EAAE,aAAa,OAAO,EAAE,cAAc,OAAO,EAAE;AAAA,IACnF;AAEA,aAAS,aAAa,IAAI;AACtB,aAAO,MAAM,EAAE,WAAW,MAAM,EAAE;AAAA,IACtC;AAEA,aAAS,aAAa,IAAI;AACtB,aAAO,MAAM,EAAE,mBAAmB,MAAM,EAAE;AAAA,IAC9C;AAEA,aAAS,aAAa,IAAI;AACtB,aAAO,MAAM,EAAE,iBAAiB,MAAM,EAAE;AAAA,IAC5C;AAEA,aAAS,cAAc,IAAI;AACvB,aAAO,aAAa,EAAE,KAAK,aAAa,EAAE;AAAA,IAC9C;AAEA,aAAS,oBAAoB,IAAI;AAC7B,aAAO,cAAc,EAAE,KAAK,aAAa,EAAE;AAAA,IAC/C;AAEA,aAAS,qBAAqB,IAAI;AAC9B,aAAO,MAAM,EAAE,mBAAmB,MAAM,EAAE;AAAA,IAC9C;AAEA,aAAS,qBAAqB,IAAI;AAC9B,aAAO,MAAM,EAAE,iBAAiB,MAAM,EAAE;AAAA,IAC5C;AAEA,aAAS,gBAAgB,IAAI;AACzB,aAAO,aAAa,EAAE,KAAK,qBAAqB,EAAE,KAAK,qBAAqB,EAAE;AAAA,IAClF;AAEA,aAAS,sBAAsB,IAAI;AAC/B,aAAO,KAAK;AAAA,IAChB;AAKA,aAAS,OAAO,IAAI;AAChB,UAAI,MAAM,OAAQ;AACd,eAAO,OAAO,aAAa,EAAE;AAAA,MACjC;AAEA,YAAM;AACN,aAAO,OAAO,aAAe,OAAO,KAAM,OAAS,KAAM,IAAI,OAAO,aAAa,QAAU,KAAK,IAAM;AAAA,IAC1G;AAEA,aAAS,iBAAiB,IAAI;AAC1B,aAAO,OAAO,aAAa,sBAAsB,EAAE,CAAC;AAAA,IACxD;AAEA,aAAS,0BAA0B,QAAQ,IAAI;AAC3C,YAAM,cAAc,OAAO,EAAE,MAAM;AACnC,UAAI,KAAK,EAAE;AACX,UAAI,KAAK,KAAK,cAAc;AAE5B,aAAO,MAAM,IAAI;AACb,cAAM,MAAO,KAAK,OAAQ;AAC1B,cAAM,QAAQ,OAAO,GAAG;AAExB,YAAI,QAAQ,IAAI;AACZ,eAAK,MAAM;AAAA,QACf,WAAW,QAAQ,IAAI;AACnB,eAAK,MAAM;AAAA,QACf,OAAO;AACH,iBAAO,OAAO,MAAM,WAAW;AAAA,QACnC;AAAA,MACJ;AAEA,aAAO;AAAA,IACX;AAGA,QAAM,YAAN,MAAgB;AAAA,MACZ,cAAc;AACV,aAAK,eAAe,IAAI,aAAa;AAErC,aAAK,aAAa,CAAC;AAEnB,aAAK,aAAa;AAElB,aAAK,QAAQ;AACb,aAAK,cAAc;AAEnB,aAAK,cAAc;AACnB,aAAK,WAAW,CAAC;AACjB,aAAK,mBAAmB;AAExB,aAAK,wBAAwB;AAC7B,aAAK,SAAS;AAEd,aAAK,wBAAwB;AAC7B,aAAK,eAAe;AACpB,aAAK,cAAc;AAAA,MACvB;AAAA;AAAA,MAGA,OAAO;AAAA,MAEP;AAAA,MAEA,oBAAoB,KAAK;AACrB,aAAK,SAAS;AACd,aAAK,KAAK,GAAG;AACb,aAAK,WAAW;AAAA,MACpB;AAAA;AAAA,MAGA,eAAe;AACX,eAAO,CAAC,KAAK,WAAW,UAAU,KAAK,QAAQ;AAC3C,eAAK,wBAAwB;AAE7B,gBAAM,KAAK,KAAK,SAAS;AAEzB,cAAI,CAAC,KAAK,mBAAmB,GAAG;AAC5B,iBAAK,KAAK,KAAK,EAAE,EAAE;AAAA,UACvB;AAAA,QACJ;AAEA,eAAO,KAAK,WAAW,MAAM;AAAA,MACjC;AAAA,MAEA,MAAM,OAAO,aAAa;AACtB,aAAK,SAAS;AACd,aAAK,aAAa,MAAM,OAAO,WAAW;AAAA,MAC9C;AAAA,MAEA,uBAAuB,OAAO;AAC1B,aAAK,SAAS;AACd,aAAK,aAAa,uBAAuB,KAAK;AAAA,MAClD;AAAA;AAAA,MAGA,qBAAqB;AACjB,YAAI,KAAK,aAAa,eAAe;AACjC,iBAAO,KAAK,wBAAwB,GAAG,KAAK,yBAAyB;AACjE,iBAAK,aAAa,QAAQ;AAAA,UAC9B;AAEA,eAAK,SAAS;AACd,eAAK,WAAW,KAAK,EAAE,MAAM,UAAU,kBAAkB,CAAC;AAE1D,iBAAO;AAAA,QACX;AAEA,eAAO;AAAA,MACX;AAAA;AAAA,MAGA,WAAW;AACP,aAAK;AACL,eAAO,KAAK,aAAa,QAAQ;AAAA,MACrC;AAAA,MAEA,aAAa;AACT,aAAK;AACL,aAAK,aAAa,QAAQ;AAAA,MAC9B;AAAA,MAEA,kBAAkB,OAAO;AACrB,aAAK,QAAQ;AACb,aAAK,WAAW;AAAA,MACpB;AAAA,MAEA,wBAAwB,SAAS,SAAS,eAAe;AACrD,YAAI,gBAAgB;AACpB,YAAI,UAAU;AACd,cAAM,gBAAgB,QAAQ;AAC9B,YAAI,aAAa;AACjB,YAAI,KAAK;AACT,YAAI,YAAY;AAEhB,eAAO,aAAa,eAAe,cAAc;AAC7C,cAAI,aAAa,GAAG;AAChB,iBAAK,KAAK,SAAS;AACnB;AAAA,UACJ;AAEA,cAAI,OAAO,EAAE,KAAK;AACd,sBAAU;AACV;AAAA,UACJ;AAEA,sBAAY,QAAQ,UAAU;AAE9B,cAAI,OAAO,cAAc,iBAAiB,OAAO,sBAAsB,SAAS,IAAI;AAChF,sBAAU;AACV;AAAA,UACJ;AAAA,QACJ;AAEA,YAAI,CAAC,SAAS;AACV,iBAAO,iBAAiB;AACpB,iBAAK,WAAW;AAAA,UACpB;AAAA,QACJ;AAEA,eAAO;AAAA,MACX;AAAA;AAAA,MAGA,mCAAmC;AAC/B,YAAI,KAAK,SAAS,WAAW,GAAG,cAAc,QAAQ;AAClD,iBAAO;AAAA,QACX;AAEA,iBAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,cAAI,KAAK,SAAS,CAAC,MAAM,GAAG,cAAc,CAAC,GAAG;AAC1C,mBAAO;AAAA,UACX;AAAA,QACJ;AAEA,eAAO;AAAA,MACX;AAAA;AAAA,MAGA,uBAAuB;AACnB,aAAK,eAAe;AAAA,UAChB,MAAM,UAAU;AAAA,UAChB,SAAS;AAAA,UACT,aAAa;AAAA,UACb,gBAAgB;AAAA,UAChB,OAAO,CAAC;AAAA,QACZ;AAAA,MACJ;AAAA,MAEA,qBAAqB;AACjB,aAAK,eAAe;AAAA,UAChB,MAAM,UAAU;AAAA,UAChB,SAAS;AAAA,UACT,aAAa;AAAA,UACb,OAAO,CAAC;AAAA,QACZ;AAAA,MACJ;AAAA,MAEA,sBAAsB;AAClB,aAAK,eAAe;AAAA,UAChB,MAAM,UAAU;AAAA,UAChB,MAAM;AAAA,QACV;AAAA,MACJ;AAAA,MAEA,oBAAoB,aAAa;AAC7B,aAAK,eAAe;AAAA,UAChB,MAAM,UAAU;AAAA,UAChB,MAAM;AAAA,UACN,aAAa;AAAA,UACb,UAAU;AAAA,UACV,UAAU;AAAA,QACd;AAAA,MACJ;AAAA,MAEA,sBAAsB,MAAM,IAAI;AAC5B,aAAK,wBAAwB;AAAA,UACzB;AAAA,UACA,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,MAEA,kBAAkB;AACd,aAAK,eAAe,EAAE,MAAM,UAAU,UAAU;AAAA,MACpD;AAAA;AAAA,MAGA,YAAY,iBAAiB;AACzB,aAAK,cAAc;AAAA,UACf,MAAM;AAAA,UACN,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,MAEA,eAAe,SAAS;AACpB,YAAI,UAAU,aAAa,KAAK,cAAc,KAAK,YAAY,IAAI,MAAM,MAAM;AAC3E,eAAK,aAAa,MAAM,KAAK,KAAK,WAAW;AAAA,QACjD,OAAO;AACH,eAAK,KAAK,IAAI,kBAAkB;AAAA,QACpC;AAEA,aAAK,QAAQ;AAAA,MACjB;AAAA,MAEA,gBAAgB,SAAS;AACrB,aAAK,QAAQ;AAAA,MACjB;AAAA;AAAA,MAGA,oBAAoB;AAChB,aAAK,2BAA2B;AAEhC,cAAM,KAAK,KAAK;AAEhB,aAAK,eAAe;AAGpB,YAAI,GAAG,SAAS,UAAU,iBAAiB;AACvC,eAAK,mBAAmB,GAAG;AAAA,QAC/B,WAAW,GAAG,SAAS,UAAU,eAAe;AAC5C,cAAI,GAAG,MAAM,SAAS,GAAG;AACrB,iBAAK,KAAK,IAAI,oBAAoB;AAAA,UACtC;AAEA,cAAI,GAAG,aAAa;AAChB,iBAAK,KAAK,IAAI,yBAAyB;AAAA,UAC3C;AAAA,QACJ;AAEA,aAAK,WAAW,KAAK,EAAE;AAAA,MAC3B;AAAA,MAEA,6BAA6B;AACzB,YAAI,KAAK,uBAAuB;AAC5B,eAAK,WAAW,KAAK,KAAK,qBAAqB;AAC/C,eAAK,wBAAwB;AAAA,QACjC;AAAA,MACJ;AAAA,MAEA,gBAAgB;AACZ,aAAK,gBAAgB;AACrB,aAAK,kBAAkB;AAAA,MAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYA,mCAAmC,MAAM,IAAI;AACzC,YAAI,KAAK,yBAAyB,KAAK,sBAAsB,SAAS,MAAM;AACxE,eAAK,2BAA2B;AAAA,QACpC;AAEA,YAAI,KAAK,uBAAuB;AAC5B,eAAK,sBAAsB,SAAS;AAAA,QACxC,OAAO;AACH,eAAK,sBAAsB,MAAM,EAAE;AAAA,QACvC;AAAA,MACJ;AAAA,MAEA,eAAe,IAAI;AACf,YAAI,OAAO,UAAU;AAErB,YAAI,aAAa,EAAE,GAAG;AAClB,iBAAO,UAAU;AAAA,QACrB,WAAW,OAAO,EAAE,MAAM;AACtB,iBAAO,UAAU;AAAA,QACrB;AAEA,aAAK,mCAAmC,MAAM,OAAO,EAAE,CAAC;AAAA,MAC5D;AAAA,MAEA,uBAAuB,YAAY;AAC/B,iBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AACxC,eAAK,eAAe,WAAW,CAAC,CAAC;AAAA,QACrC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,WAAW,IAAI;AACX,aAAK,mCAAmC,UAAU,iBAAiB,EAAE;AAAA,MACzE;AAAA;AAAA,MAGA,8BAA8B,SAAS;AACnC,YAAI,SAAS;AACb,YAAI,SAAS;AACb,YAAI,IAAI,0BAA0B,GAAG,OAAO;AAE5C,aAAK,SAAS,KAAK,OAAO;AAE1B,eAAO,IAAI,IAAI;AACX,gBAAM,UAAU,OAAO,CAAC;AACxB,gBAAM,SAAS,UAAU;AACzB,gBAAM,eAAe,UAAU,UAAU;AAEzC,cAAI,cAAc;AAEd,qBAAS,UAAU,mBAAmB,CAAC,OAAO,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;AAC/E,qBAAS;AAAA,UACb;AAEA,gBAAM,KAAK,KAAK,SAAS;AAEzB,eAAK,SAAS,KAAK,EAAE;AACrB;AAEA,cAAI,OAAO,EAAE,KAAK;AACd;AAAA,UACJ;AAEA,cAAI,QAAQ;AACR,gBAAI,UAAU,oBAAoB,0BAA0B,GAAG,EAAE,IAAI;AAAA,UACzE,OAAO;AACH,gBAAI,OAAO,UAAU,EAAE,IAAI;AAAA,UAC/B;AAAA,QACJ;AAEA,eAAO,UAAU;AACb,eAAK,SAAS,IAAI;AAClB,eAAK,WAAW;AAAA,QACpB;AAEA,eAAO;AAAA,MACX;AAAA,MAEA,mCAAmC;AAC/B,eACI,KAAK,gBAAgB,uCACrB,KAAK,gBAAgB,uCACrB,KAAK,gBAAgB;AAAA,MAE7B;AAAA,MAEA,oCAAoC,eAAe;AAC/C,YAAI,CAAC,iBAAiB,KAAK,iCAAiC,GAAG;AAC3D,gBAAM,SAAS,KAAK,SAAS;AAE7B,eAAK,WAAW;AAEhB,iBAAO,WAAW,EAAE,eAAe,oBAAoB,MAAM;AAAA,QACjE;AAEA,eAAO;AAAA,MACX;AAAA,MAEA,+CAA+C;AAC3C,YAAI,KAAK,iCAAiC,GAAG;AACzC,mBAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,iBAAK,YAAY,SAAS,OAAO,KAAK,SAAS,CAAC,CAAC;AAAA,UACrD;AAAA,QACJ,OAAO;AACH,eAAK,uBAAuB,KAAK,QAAQ;AAAA,QAC7C;AAEA,aAAK,WAAW,CAAC;AAAA,MACrB;AAAA;AAAA;AAAA;AAAA,MAMA,CAAC,UAAU,EAAE,IAAI;AACb,aAAK,aAAa,gBAAgB;AAElC,YAAI,OAAO,EAAE,gBAAgB;AACzB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,WAAW;AAC3B,eAAK,cAAc;AACnB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,eAAe,EAAE;AAAA,QAC1B,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,YAAY,EAAE,IAAI;AACf,aAAK,aAAa,gBAAgB;AAElC,YAAI,OAAO,EAAE,WAAW;AACpB,eAAK,cAAc;AACnB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,gBAAgB;AAChC,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,WAAW,QAAQ,qBAAqB;AAAA,QACjD,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,aAAa,EAAE,IAAI;AAChB,aAAK,aAAa,gBAAgB;AAElC,YAAI,OAAO,EAAE,gBAAgB;AACzB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,WAAW,QAAQ,qBAAqB;AAAA,QACjD,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,iBAAiB,EAAE,IAAI;AACpB,aAAK,aAAa,gBAAgB;AAElC,YAAI,OAAO,EAAE,gBAAgB;AACzB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,WAAW,QAAQ,qBAAqB;AAAA,QACjD,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,eAAe,EAAE,IAAI;AAClB,aAAK,aAAa,gBAAgB;AAElC,YAAI,OAAO,EAAE,MAAM;AACf,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,WAAW,QAAQ,qBAAqB;AAAA,QACjD,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,cAAc,EAAE,IAAI;AACjB,YAAI,OAAO,EAAE,kBAAkB;AAC3B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,SAAS;AACzB,eAAK,QAAQ;AAAA,QACjB,WAAW,cAAc,EAAE,GAAG;AAC1B,eAAK,qBAAqB;AAC1B,eAAK,kBAAkB,cAAc;AAAA,QACzC,WAAW,OAAO,EAAE,eAAe;AAC/B,eAAK,KAAK,IAAI,sCAAsC;AACpD,eAAK,oBAAoB;AACzB,eAAK,kBAAkB,mBAAmB;AAAA,QAC9C,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,gBAAgB;AAC9B,eAAK,WAAW,GAAG;AACnB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,KAAK,IAAI,8BAA8B;AAC5C,eAAK,WAAW,GAAG;AACnB,eAAK,kBAAkB,UAAU;AAAA,QACrC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,kBAAkB,EAAE,IAAI;AACrB,YAAI,cAAc,EAAE,GAAG;AACnB,eAAK,mBAAmB;AACxB,eAAK,kBAAkB,cAAc;AAAA,QACzC,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,KAAK,IAAI,iBAAiB;AAC/B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,gBAAgB;AAC9B,eAAK,WAAW,IAAI;AACpB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,KAAK,IAAI,8BAA8B;AAC5C,eAAK,oBAAoB;AACzB,eAAK,kBAAkB,mBAAmB;AAAA,QAC9C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,cAAc,EAAE,IAAI;AACjB,YAAI,aAAa,EAAE,GAAG;AAClB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,SAAS;AACzB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,QAAQ;AACb,eAAK,kBAAkB;AAAA,QAC3B,WAAW,aAAa,EAAE,GAAG;AACzB,eAAK,aAAa,WAAW,iBAAiB,EAAE;AAAA,QACpD,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,aAAa,WAAW,QAAQ;AAAA,QACzC,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,QAAQ;AACtB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,aAAa,WAAW,OAAO,EAAE;AAAA,QAC1C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,2BAA2B,EAAE,IAAI;AAC9B,YAAI,OAAO,EAAE,SAAS;AAClB,eAAK,WAAW,CAAC;AACjB,eAAK,QAAQ;AAAA,QACjB,OAAO;AACH,eAAK,WAAW,GAAG;AACnB,eAAK,kBAAkB,YAAY;AAAA,QACvC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,yBAAyB,EAAE,IAAI;AAC5B,YAAI,cAAc,EAAE,GAAG;AACnB,eAAK,mBAAmB;AACxB,eAAK,kBAAkB,yBAAyB;AAAA,QACpD,OAAO;AACH,eAAK,WAAW,IAAI;AACpB,eAAK,kBAAkB,YAAY;AAAA,QACvC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,yBAAyB,EAAE,IAAI;AAC5B,YAAI,aAAa,EAAE,GAAG;AAClB,eAAK,aAAa,WAAW,iBAAiB,EAAE;AAChD,eAAK,SAAS,KAAK,EAAE;AAAA,QACzB,WAAW,aAAa,EAAE,GAAG;AACzB,eAAK,aAAa,WAAW,OAAO,EAAE;AACtC,eAAK,SAAS,KAAK,EAAE;AAAA,QACzB,OAAO;AACH,cAAI,KAAK,qBAAqB,KAAK,aAAa,SAAS;AACrD,gBAAI,aAAa,EAAE,GAAG;AAClB,mBAAK,QAAQ;AACb;AAAA,YACJ;AAEA,gBAAI,OAAO,EAAE,SAAS;AAClB,mBAAK,QAAQ;AACb;AAAA,YACJ;AAEA,gBAAI,OAAO,EAAE,mBAAmB;AAC5B,mBAAK,QAAQ;AACb,mBAAK,kBAAkB;AACvB;AAAA,YACJ;AAAA,UACJ;AAEA,eAAK,WAAW,IAAI;AACpB,eAAK,uBAAuB,KAAK,QAAQ;AACzC,eAAK,kBAAkB,YAAY;AAAA,QACvC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,4BAA4B,EAAE,IAAI;AAC/B,YAAI,OAAO,EAAE,SAAS;AAClB,eAAK,WAAW,CAAC;AACjB,eAAK,QAAQ;AAAA,QACjB,OAAO;AACH,eAAK,WAAW,GAAG;AACnB,eAAK,kBAAkB,aAAa;AAAA,QACxC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,0BAA0B,EAAE,IAAI;AAC7B,YAAI,cAAc,EAAE,GAAG;AACnB,eAAK,mBAAmB;AACxB,eAAK,kBAAkB,0BAA0B;AAAA,QACrD,OAAO;AACH,eAAK,WAAW,IAAI;AACpB,eAAK,kBAAkB,aAAa;AAAA,QACxC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,0BAA0B,EAAE,IAAI;AAC7B,YAAI,aAAa,EAAE,GAAG;AAClB,eAAK,aAAa,WAAW,iBAAiB,EAAE;AAChD,eAAK,SAAS,KAAK,EAAE;AAAA,QACzB,WAAW,aAAa,EAAE,GAAG;AACzB,eAAK,aAAa,WAAW,OAAO,EAAE;AACtC,eAAK,SAAS,KAAK,EAAE;AAAA,QACzB,OAAO;AACH,cAAI,KAAK,qBAAqB,KAAK,aAAa,SAAS;AACrD,gBAAI,aAAa,EAAE,GAAG;AAClB,mBAAK,QAAQ;AACb;AAAA,YACJ;AAEA,gBAAI,OAAO,EAAE,SAAS;AAClB,mBAAK,QAAQ;AACb;AAAA,YACJ;AAEA,gBAAI,OAAO,EAAE,mBAAmB;AAC5B,mBAAK,kBAAkB;AACvB,mBAAK,QAAQ;AACb;AAAA,YACJ;AAAA,UACJ;AAEA,eAAK,WAAW,IAAI;AACpB,eAAK,uBAAuB,KAAK,QAAQ;AACzC,eAAK,kBAAkB,aAAa;AAAA,QACxC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,gCAAgC,EAAE,IAAI;AACnC,YAAI,OAAO,EAAE,SAAS;AAClB,eAAK,WAAW,CAAC;AACjB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,kBAAkB;AAClC,eAAK,QAAQ;AACb,eAAK,WAAW,IAAI;AAAA,QACxB,OAAO;AACH,eAAK,WAAW,GAAG;AACnB,eAAK,kBAAkB,iBAAiB;AAAA,QAC5C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,8BAA8B,EAAE,IAAI;AACjC,YAAI,cAAc,EAAE,GAAG;AACnB,eAAK,mBAAmB;AACxB,eAAK,kBAAkB,8BAA8B;AAAA,QACzD,OAAO;AACH,eAAK,WAAW,IAAI;AACpB,eAAK,kBAAkB,iBAAiB;AAAA,QAC5C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,8BAA8B,EAAE,IAAI;AACjC,YAAI,aAAa,EAAE,GAAG;AAClB,eAAK,aAAa,WAAW,iBAAiB,EAAE;AAChD,eAAK,SAAS,KAAK,EAAE;AAAA,QACzB,WAAW,aAAa,EAAE,GAAG;AACzB,eAAK,aAAa,WAAW,OAAO,EAAE;AACtC,eAAK,SAAS,KAAK,EAAE;AAAA,QACzB,OAAO;AACH,cAAI,KAAK,qBAAqB,KAAK,aAAa,SAAS;AACrD,gBAAI,aAAa,EAAE,GAAG;AAClB,mBAAK,QAAQ;AACb;AAAA,YACJ,WAAW,OAAO,EAAE,SAAS;AACzB,mBAAK,QAAQ;AACb;AAAA,YACJ,WAAW,OAAO,EAAE,mBAAmB;AACnC,mBAAK,kBAAkB;AACvB,mBAAK,QAAQ;AACb;AAAA,YACJ;AAAA,UACJ;AAEA,eAAK,WAAW,IAAI;AACpB,eAAK,uBAAuB,KAAK,QAAQ;AACzC,eAAK,kBAAkB,iBAAiB;AAAA,QAC5C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,8BAA8B,EAAE,IAAI;AACjC,YAAI,OAAO,EAAE,cAAc;AACvB,eAAK,QAAQ;AACb,eAAK,WAAW,GAAG;AAAA,QACvB,OAAO;AACH,eAAK,kBAAkB,iBAAiB;AAAA,QAC5C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,mCAAmC,EAAE,IAAI;AACtC,YAAI,OAAO,EAAE,cAAc;AACvB,eAAK,QAAQ;AACb,eAAK,WAAW,GAAG;AAAA,QACvB,OAAO;AACH,eAAK,kBAAkB,iBAAiB;AAAA,QAC5C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,yBAAyB,EAAE,IAAI;AAC5B,YAAI,OAAO,EAAE,cAAc;AACvB,eAAK,QAAQ;AACb,eAAK,WAAW,GAAG;AAAA,QACvB,WAAW,OAAO,EAAE,gBAAgB;AAChC,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,WAAW,QAAQ,qBAAqB;AAAA,QACjD,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,8BAA8B;AAC5C,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,8BAA8B,EAAE,IAAI;AACjC,YAAI,OAAO,EAAE,cAAc;AACvB,eAAK,QAAQ;AACb,eAAK,WAAW,GAAG;AAAA,QACvB,WAAW,OAAO,EAAE,gBAAgB;AAChC,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,QAAQ;AACb,eAAK,WAAW,QAAQ,qBAAqB;AAAA,QACjD,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,8BAA8B;AAC5C,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,QAAQ;AACb,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,mCAAmC,EAAE,IAAI;AACtC,YAAI,OAAO,EAAE,cAAc;AACvB,eAAK,WAAW,GAAG;AAAA,QACvB,WAAW,OAAO,EAAE,gBAAgB;AAChC,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,QAAQ;AACb,eAAK,WAAW,GAAG;AAAA,QACvB,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,QAAQ;AACb,eAAK,WAAW,QAAQ,qBAAqB;AAAA,QACjD,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,8BAA8B;AAC5C,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,QAAQ;AACb,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,wCAAwC,EAAE,IAAI;AAC3C,YAAI,OAAO,EAAE,SAAS;AAClB,eAAK,WAAW,CAAC;AACjB,eAAK,QAAQ;AAAA,QACjB,WAAW,cAAc,EAAE,GAAG;AAC1B,eAAK,WAAW,CAAC;AACjB,eAAK,WAAW,GAAG;AACnB,eAAK,kBAAkB,qCAAqC;AAAA,QAChE,OAAO;AACH,eAAK,WAAW,GAAG;AACnB,eAAK,kBAAkB,yBAAyB;AAAA,QACpD;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,sCAAsC,EAAE,IAAI;AACzC,YAAI,cAAc,EAAE,GAAG;AACnB,eAAK,mBAAmB;AACxB,eAAK,kBAAkB,sCAAsC;AAAA,QACjE,OAAO;AACH,eAAK,WAAW,IAAI;AACpB,eAAK,kBAAkB,yBAAyB;AAAA,QACpD;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,sCAAsC,EAAE,IAAI;AACzC,YAAI,aAAa,EAAE,GAAG;AAClB,eAAK,aAAa,WAAW,iBAAiB,EAAE;AAChD,eAAK,SAAS,KAAK,EAAE;AAAA,QACzB,WAAW,aAAa,EAAE,GAAG;AACzB,eAAK,aAAa,WAAW,OAAO,EAAE;AACtC,eAAK,SAAS,KAAK,EAAE;AAAA,QACzB,OAAO;AACH,cAAI,KAAK,qBAAqB,KAAK,aAAa,SAAS;AACrD,gBAAI,aAAa,EAAE,GAAG;AAClB,mBAAK,QAAQ;AACb;AAAA,YACJ;AAEA,gBAAI,OAAO,EAAE,SAAS;AAClB,mBAAK,QAAQ;AACb;AAAA,YACJ;AAEA,gBAAI,OAAO,EAAE,mBAAmB;AAC5B,mBAAK,kBAAkB;AACvB,mBAAK,QAAQ;AACb;AAAA,YACJ;AAAA,UACJ;AAEA,eAAK,WAAW,IAAI;AACpB,eAAK,uBAAuB,KAAK,QAAQ;AACzC,eAAK,kBAAkB,yBAAyB;AAAA,QACpD;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,qCAAqC,EAAE,IAAI;AACxC,YAAI,aAAa,EAAE,KAAK,OAAO,EAAE,WAAW,OAAO,EAAE,mBAAmB;AACpE,eAAK,QAAQ,KAAK,iCAAiC,IAC7C,mCACA;AACN,eAAK,eAAe,EAAE;AAAA,QAC1B,WAAW,aAAa,EAAE,GAAG;AACzB,eAAK,SAAS,KAAK,sBAAsB,EAAE,CAAC;AAC5C,eAAK,eAAe,EAAE;AAAA,QAC1B,WAAW,aAAa,EAAE,GAAG;AACzB,eAAK,SAAS,KAAK,EAAE;AACrB,eAAK,eAAe,EAAE;AAAA,QAC1B,OAAO;AACH,eAAK,kBAAkB,yBAAyB;AAAA,QACpD;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,gCAAgC,EAAE,IAAI;AACnC,YAAI,OAAO,EAAE,cAAc;AACvB,eAAK,QAAQ;AACb,eAAK,WAAW,GAAG;AAAA,QACvB,WAAW,OAAO,EAAE,gBAAgB;AAChC,eAAK,QAAQ;AACb,eAAK,WAAW,GAAG;AAAA,QACvB,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,WAAW,QAAQ,qBAAqB;AAAA,QACjD,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,8BAA8B;AAC5C,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,qCAAqC,EAAE,IAAI;AACxC,YAAI,OAAO,EAAE,cAAc;AACvB,eAAK,QAAQ;AACb,eAAK,WAAW,GAAG;AAAA,QACvB,WAAW,OAAO,EAAE,gBAAgB;AAChC,eAAK,QAAQ;AACb,eAAK,WAAW,GAAG;AAAA,QACvB,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,QAAQ;AACb,eAAK,WAAW,QAAQ,qBAAqB;AAAA,QACjD,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,8BAA8B;AAC5C,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,QAAQ;AACb,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,0CAA0C,EAAE,IAAI;AAC7C,YAAI,OAAO,EAAE,cAAc;AACvB,eAAK,WAAW,GAAG;AAAA,QACvB,WAAW,OAAO,EAAE,gBAAgB;AAChC,eAAK,QAAQ;AACb,eAAK,WAAW,GAAG;AAAA,QACvB,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,QAAQ;AACb,eAAK,WAAW,GAAG;AAAA,QACvB,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,QAAQ;AACb,eAAK,WAAW,QAAQ,qBAAqB;AAAA,QACjD,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,8BAA8B;AAC5C,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,QAAQ;AACb,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,+CAA+C,EAAE,IAAI;AAClD,YAAI,OAAO,EAAE,SAAS;AAClB,eAAK,WAAW,CAAC;AACjB,eAAK,QAAQ;AACb,eAAK,WAAW,GAAG;AAAA,QACvB,OAAO;AACH,eAAK,kBAAkB,gCAAgC;AAAA,QAC3D;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,mCAAmC,EAAE,IAAI;AACtC,YAAI,aAAa,EAAE,KAAK,OAAO,EAAE,WAAW,OAAO,EAAE,mBAAmB;AACpE,eAAK,QAAQ,KAAK,iCAAiC,IAC7C,4BACA;AAEN,eAAK,eAAe,EAAE;AAAA,QAC1B,WAAW,aAAa,EAAE,GAAG;AACzB,eAAK,SAAS,KAAK,sBAAsB,EAAE,CAAC;AAC5C,eAAK,eAAe,EAAE;AAAA,QAC1B,WAAW,aAAa,EAAE,GAAG;AACzB,eAAK,SAAS,KAAK,EAAE;AACrB,eAAK,eAAe,EAAE;AAAA,QAC1B,OAAO;AACH,eAAK,kBAAkB,gCAAgC;AAAA,QAC3D;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,2BAA2B,EAAE,IAAI;AAC9B,YAAI,aAAa,EAAE,GAAG;AAClB;AAAA,QACJ;AAEA,YAAI,OAAO,EAAE,WAAW,OAAO,EAAE,qBAAqB,OAAO,EAAE,KAAK;AAChE,eAAK,kBAAkB,0BAA0B;AAAA,QACrD,WAAW,OAAO,EAAE,aAAa;AAC7B,eAAK,KAAK,IAAI,uCAAuC;AACrD,eAAK,YAAY,GAAG;AACpB,eAAK,QAAQ;AAAA,QACjB,OAAO;AACH,eAAK,YAAY,EAAE;AACnB,eAAK,kBAAkB,oBAAoB;AAAA,QAC/C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,oBAAoB,EAAE,IAAI;AACvB,YAAI,aAAa,EAAE,KAAK,OAAO,EAAE,WAAW,OAAO,EAAE,qBAAqB,OAAO,EAAE,KAAK;AACpF,eAAK,eAAe,0BAA0B;AAC9C,eAAK,WAAW;AAAA,QACpB,WAAW,OAAO,EAAE,aAAa;AAC7B,eAAK,eAAe,4BAA4B;AAAA,QACpD,WAAW,aAAa,EAAE,GAAG;AACzB,eAAK,YAAY,QAAQ,iBAAiB,EAAE;AAAA,QAChD,WAAW,OAAO,EAAE,kBAAkB,OAAO,EAAE,cAAc,OAAO,EAAE,gBAAgB;AAClF,eAAK,KAAK,IAAI,kCAAkC;AAChD,eAAK,YAAY,QAAQ,OAAO,EAAE;AAAA,QACtC,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,YAAY,QAAQ,QAAQ;AAAA,QACrC,OAAO;AACH,eAAK,YAAY,QAAQ,OAAO,EAAE;AAAA,QACtC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,0BAA0B,EAAE,IAAI;AAC7B,YAAI,aAAa,EAAE,GAAG;AAClB;AAAA,QACJ;AAEA,YAAI,OAAO,EAAE,SAAS;AAClB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,aAAa;AAC7B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,QAAQ;AACb,eAAK,kBAAkB;AAAA,QAC3B,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,QAAQ;AACtB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,YAAY,EAAE;AACnB,eAAK,kBAAkB,oBAAoB;AAAA,QAC/C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,4BAA4B,EAAE,IAAI;AAC/B,YAAI,aAAa,EAAE,GAAG;AAClB;AAAA,QACJ;AAEA,YAAI,OAAO,EAAE,gBAAgB;AACzB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,YAAY;AAC5B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,KAAK,IAAI,qBAAqB;AACnC,eAAK,QAAQ;AACb,eAAK,kBAAkB;AAAA,QAC3B,OAAO;AACH,eAAK,kBAAkB,8BAA8B;AAAA,QACzD;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,mCAAmC,EAAE,IAAI;AACtC,YAAI,OAAO,EAAE,gBAAgB;AACzB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,WAAW;AAC3B,eAAK,cAAc;AACnB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,YAAY,SAAS,QAAQ;AAAA,QACtC,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,QAAQ;AACtB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,YAAY,SAAS,OAAO,EAAE;AAAA,QACvC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,mCAAmC,EAAE,IAAI;AACtC,YAAI,OAAO,EAAE,YAAY;AACrB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,WAAW;AAC3B,eAAK,cAAc;AACnB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,YAAY,SAAS,QAAQ;AAAA,QACtC,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,QAAQ;AACtB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,YAAY,SAAS,OAAO,EAAE;AAAA,QACvC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,8BAA8B,EAAE,IAAI;AACjC,YAAI,aAAa,EAAE,GAAG;AAClB,eAAK,gBAAgB,2BAA2B;AAAA,QACpD,WAAW,OAAO,EAAE,WAAW;AAC3B,eAAK,cAAc;AACnB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,gBAAgB,UAAU;AAC/B,eAAK,kBAAkB;AAAA,QAC3B,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,YAAY,SAAS,QAAQ;AAAA,QACtC,WACI,OAAO,EAAE,kBACT,OAAO,EAAE,cACT,OAAO,EAAE,kBACT,OAAO,EAAE,eACT,OAAO,EAAE,cACX;AACE,eAAK,KAAK,IAAI,2CAA2C;AACzD,eAAK,YAAY,SAAS,OAAO,EAAE;AAAA,QACvC,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,QAAQ;AACtB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,YAAY,SAAS,OAAO,EAAE;AAAA,QACvC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,kCAAkC,EAAE,IAAI;AACrC,YAAI,aAAa,EAAE,GAAG;AAClB,eAAK,gBAAgB,2BAA2B;AAAA,QACpD,WAAW,OAAO,EAAE,SAAS;AACzB,eAAK,gBAAgB,4BAA4B;AAAA,QACrD,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,gBAAgB,UAAU;AAC/B,eAAK,kBAAkB;AAAA,QAC3B,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,QAAQ;AACtB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,KAAK,IAAI,kCAAkC;AAChD,eAAK,kBAAkB,2BAA2B;AAAA,QACtD;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,4BAA4B,EAAE,IAAI;AAC/B,YAAI,OAAO,EAAE,mBAAmB;AAC5B,eAAK,aAAa,cAAc;AAChC,eAAK,QAAQ;AACb,eAAK,kBAAkB;AAAA,QAC3B,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,QAAQ;AACtB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,KAAK,IAAI,sBAAsB;AACpC,eAAK,kBAAkB,2BAA2B;AAAA,QACtD;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,mBAAmB,EAAE,IAAI;AACtB,YAAI,OAAO,EAAE,mBAAmB;AAC5B,eAAK,QAAQ;AACb,eAAK,kBAAkB;AAAA,QAC3B,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,aAAa,QAAQ,QAAQ;AAAA,QACtC,OAAO;AACH,eAAK,aAAa,QAAQ,OAAO,EAAE;AAAA,QACvC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,6BAA6B,EAAE,IAAI;AAChC,YAAI,KAAK,wBAAwB,GAAG,kBAAkB,IAAI,IAAI,GAAG;AAC7D,eAAK,oBAAoB;AACzB,eAAK,QAAQ;AAAA,QACjB,WAAW,KAAK,wBAAwB,GAAG,gBAAgB,IAAI,KAAK,GAAG;AACnE,eAAK,QAAQ;AAAA,QACjB,WAAW,KAAK,wBAAwB,GAAG,oBAAoB,IAAI,IAAI,GAAG;AACtE,cAAI,KAAK,YAAY;AACjB,iBAAK,QAAQ;AAAA,UACjB,OAAO;AACH,iBAAK,KAAK,IAAI,kBAAkB;AAChC,iBAAK,oBAAoB;AACzB,iBAAK,aAAa,OAAO;AACzB,iBAAK,QAAQ;AAAA,UACjB;AAAA,QACJ,WAIS,CAAC,KAAK,mBAAmB,GAAG;AACjC,eAAK,KAAK,IAAI,wBAAwB;AACtC,eAAK,oBAAoB;AACzB,eAAK,kBAAkB,mBAAmB;AAAA,QAC9C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,mBAAmB,EAAE,IAAI;AACtB,YAAI,OAAO,EAAE,cAAc;AACvB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,KAAK,IAAI,2BAA2B;AACzC,eAAK,QAAQ;AACb,eAAK,kBAAkB;AAAA,QAC3B,OAAO;AACH,eAAK,kBAAkB,aAAa;AAAA,QACxC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,wBAAwB,EAAE,IAAI;AAC3B,YAAI,OAAO,EAAE,cAAc;AACvB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,KAAK,IAAI,2BAA2B;AACzC,eAAK,QAAQ;AACb,eAAK,kBAAkB;AAAA,QAC3B,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,aAAa,QAAQ;AAC1B,eAAK,kBAAkB,aAAa;AAAA,QACxC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,aAAa,EAAE,IAAI;AAChB,YAAI,OAAO,EAAE,cAAc;AACvB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,gBAAgB;AAChC,eAAK,aAAa,QAAQ;AAC1B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,aAAa,QAAQ,QAAQ;AAAA,QACtC,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,aAAa,QAAQ,OAAO,EAAE;AAAA,QACvC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,4BAA4B,EAAE,IAAI;AAC/B,YAAI,OAAO,EAAE,kBAAkB;AAC3B,eAAK,aAAa,QAAQ;AAC1B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,gBAAgB;AAChC,eAAK,aAAa,QAAQ;AAAA,QAC9B,OAAO;AACH,eAAK,kBAAkB,aAAa;AAAA,QACxC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,iCAAiC,EAAE,IAAI;AACpC,YAAI,OAAO,EAAE,cAAc;AACvB,eAAK,QAAQ;AAAA,QACjB,OAAO;AACH,eAAK,kBAAkB,aAAa;AAAA,QACxC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,sCAAsC,EAAE,IAAI;AACzC,YAAI,OAAO,EAAE,cAAc;AACvB,eAAK,QAAQ;AAAA,QACjB,OAAO;AACH,eAAK,kBAAkB,sBAAsB;AAAA,QACjD;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,2CAA2C,EAAE,IAAI;AAC9C,YAAI,OAAO,EAAE,qBAAqB,OAAO,EAAE,KAAK;AAC5C,eAAK,KAAK,IAAI,aAAa;AAAA,QAC/B;AAEA,aAAK,kBAAkB,iBAAiB;AAAA,MAC5C;AAAA;AAAA;AAAA,MAIA,CAAC,sBAAsB,EAAE,IAAI;AACzB,YAAI,OAAO,EAAE,cAAc;AACvB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,aAAa,QAAQ;AAC1B,eAAK,kBAAkB,aAAa;AAAA,QACxC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,iBAAiB,EAAE,IAAI;AACpB,YAAI,OAAO,EAAE,mBAAmB;AAC5B,eAAK,QAAQ;AACb,eAAK,kBAAkB;AAAA,QAC3B,WAAW,OAAO,EAAE,kBAAkB;AAClC,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,cAAc;AAC9B,eAAK,aAAa,QAAQ;AAAA,QAC9B,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,aAAa,QAAQ;AAC1B,eAAK,kBAAkB,aAAa;AAAA,QACxC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,sBAAsB,EAAE,IAAI;AACzB,YAAI,OAAO,EAAE,cAAc;AACvB,eAAK,aAAa,QAAQ;AAC1B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,KAAK,IAAI,wBAAwB;AACtC,eAAK,QAAQ;AACb,eAAK,kBAAkB;AAAA,QAC3B,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,aAAa,QAAQ;AAC1B,eAAK,kBAAkB,aAAa;AAAA,QACxC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,aAAa,EAAE,IAAI;AAChB,YAAI,aAAa,EAAE,GAAG;AAClB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,kBAAkB,yBAAyB;AAAA,QACpD,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,oBAAoB,IAAI;AAC7B,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,KAAK,IAAI,kCAAkC;AAChD,eAAK,kBAAkB,yBAAyB;AAAA,QACpD;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,yBAAyB,EAAE,IAAI;AAC5B,YAAI,aAAa,EAAE,GAAG;AAClB;AAAA,QACJ;AAEA,YAAI,aAAa,EAAE,GAAG;AAClB,eAAK,oBAAoB,iBAAiB,EAAE,CAAC;AAC7C,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,oBAAoB,QAAQ,qBAAqB;AACtD,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,KAAK,IAAI,kBAAkB;AAChC,eAAK,oBAAoB,IAAI;AAC7B,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB;AACvB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,oBAAoB,IAAI;AAC7B,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,oBAAoB,OAAO,EAAE,CAAC;AACnC,eAAK,QAAQ;AAAA,QACjB;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,kBAAkB,EAAE,IAAI;AACrB,YAAI,aAAa,EAAE,GAAG;AAClB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,QAAQ;AACb,eAAK,kBAAkB;AAAA,QAC3B,WAAW,aAAa,EAAE,GAAG;AACzB,eAAK,aAAa,QAAQ,iBAAiB,EAAE;AAAA,QACjD,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,aAAa,QAAQ,QAAQ;AAAA,QACtC,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,aAAa,QAAQ,OAAO,EAAE;AAAA,QACvC;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,wBAAwB,EAAE,IAAI;AAC3B,YAAI,aAAa,EAAE,GAAG;AAClB;AAAA,QACJ;AAEA,YAAI,OAAO,EAAE,mBAAmB;AAC5B,eAAK,QAAQ;AACb,eAAK,kBAAkB;AAAA,QAC3B,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,WAAW,KAAK,wBAAwB,GAAG,eAAe,IAAI,KAAK,GAAG;AAClE,eAAK,QAAQ;AAAA,QACjB,WAAW,KAAK,wBAAwB,GAAG,eAAe,IAAI,KAAK,GAAG;AAClE,eAAK,QAAQ;AAAA,QACjB,WAGS,CAAC,KAAK,mBAAmB,GAAG;AACjC,eAAK,KAAK,IAAI,wCAAwC;AACtD,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB,mBAAmB;AAAA,QAC9C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,kCAAkC,EAAE,IAAI;AACrC,YAAI,aAAa,EAAE,GAAG;AAClB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,gBAAgB;AAChC,eAAK,KAAK,IAAI,0CAA0C;AACxD,eAAK,aAAa,WAAW;AAC7B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,YAAY;AAC5B,eAAK,KAAK,IAAI,0CAA0C;AACxD,eAAK,aAAa,WAAW;AAC7B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,KAAK,IAAI,8BAA8B;AAC5C,eAAK,aAAa,cAAc;AAChC,eAAK,QAAQ;AACb,eAAK,kBAAkB;AAAA,QAC3B,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,KAAK,IAAI,yCAAyC;AACvD,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB,mBAAmB;AAAA,QAC9C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,sCAAsC,EAAE,IAAI;AACzC,YAAI,aAAa,EAAE,GAAG;AAClB;AAAA,QACJ;AAEA,YAAI,OAAO,EAAE,gBAAgB;AACzB,eAAK,aAAa,WAAW;AAC7B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,YAAY;AAC5B,eAAK,aAAa,WAAW;AAC7B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,KAAK,IAAI,8BAA8B;AAC5C,eAAK,aAAa,cAAc;AAChC,eAAK,QAAQ;AACb,eAAK,kBAAkB;AAAA,QAC3B,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,KAAK,IAAI,yCAAyC;AACvD,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB,mBAAmB;AAAA,QAC9C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,6CAA6C,EAAE,IAAI;AAChD,YAAI,OAAO,EAAE,gBAAgB;AACzB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,aAAa,YAAY,QAAQ;AAAA,QAC1C,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,KAAK,IAAI,6BAA6B;AAC3C,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB;AACvB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,aAAa,YAAY,OAAO,EAAE;AAAA,QAC3C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,6CAA6C,EAAE,IAAI;AAChD,YAAI,OAAO,EAAE,YAAY;AACrB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,aAAa,YAAY,QAAQ;AAAA,QAC1C,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,KAAK,IAAI,6BAA6B;AAC3C,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB;AACvB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,aAAa,YAAY,OAAO,EAAE;AAAA,QAC3C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,qCAAqC,EAAE,IAAI;AACxC,YAAI,aAAa,EAAE,GAAG;AAClB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,QAAQ;AACb,eAAK,kBAAkB;AAAA,QAC3B,WAAW,OAAO,EAAE,gBAAgB;AAChC,eAAK,KAAK,IAAI,yDAAyD;AACvE,eAAK,aAAa,WAAW;AAC7B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,YAAY;AAC5B,eAAK,KAAK,IAAI,yDAAyD;AACvE,eAAK,aAAa,WAAW;AAC7B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,KAAK,IAAI,yCAAyC;AACvD,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB,mBAAmB;AAAA,QAC9C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,mDAAmD,EAAE,IAAI;AACtD,YAAI,aAAa,EAAE,GAAG;AAClB;AAAA,QACJ;AAEA,YAAI,OAAO,EAAE,mBAAmB;AAC5B,eAAK,kBAAkB;AACvB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,gBAAgB;AAChC,eAAK,aAAa,WAAW;AAC7B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,YAAY;AAC5B,eAAK,aAAa,WAAW;AAC7B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,KAAK,IAAI,yCAAyC;AACvD,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB,mBAAmB;AAAA,QAC9C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,kCAAkC,EAAE,IAAI;AACrC,YAAI,aAAa,EAAE,GAAG;AAClB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,gBAAgB;AAChC,eAAK,KAAK,IAAI,0CAA0C;AACxD,eAAK,aAAa,WAAW;AAC7B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,YAAY;AAC5B,eAAK,KAAK,IAAI,0CAA0C;AACxD,eAAK,aAAa,WAAW;AAC7B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,KAAK,IAAI,8BAA8B;AAC5C,eAAK,aAAa,cAAc;AAChC,eAAK,QAAQ;AACb,eAAK,kBAAkB;AAAA,QAC3B,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,KAAK,IAAI,yCAAyC;AACvD,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB,mBAAmB;AAAA,QAC9C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,sCAAsC,EAAE,IAAI;AACzC,YAAI,aAAa,EAAE,GAAG;AAClB;AAAA,QACJ;AAEA,YAAI,OAAO,EAAE,gBAAgB;AACzB,eAAK,aAAa,WAAW;AAC7B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,YAAY;AAC5B,eAAK,aAAa,WAAW;AAC7B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,KAAK,IAAI,8BAA8B;AAC5C,eAAK,aAAa,cAAc;AAChC,eAAK,QAAQ;AACb,eAAK,kBAAkB;AAAA,QAC3B,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,KAAK,IAAI,yCAAyC;AACvD,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB,mBAAmB;AAAA,QAC9C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,6CAA6C,EAAE,IAAI;AAChD,YAAI,OAAO,EAAE,gBAAgB;AACzB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,aAAa,YAAY,QAAQ;AAAA,QAC1C,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,KAAK,IAAI,6BAA6B;AAC3C,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB;AACvB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,aAAa,YAAY,OAAO,EAAE;AAAA,QAC3C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,6CAA6C,EAAE,IAAI;AAChD,YAAI,OAAO,EAAE,YAAY;AACrB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,aAAa,YAAY,QAAQ;AAAA,QAC1C,WAAW,OAAO,EAAE,mBAAmB;AACnC,eAAK,KAAK,IAAI,6BAA6B;AAC3C,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB;AACvB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,aAAa,YAAY,OAAO,EAAE;AAAA,QAC3C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,qCAAqC,EAAE,IAAI;AACxC,YAAI,aAAa,EAAE,GAAG;AAClB;AAAA,QACJ;AAEA,YAAI,OAAO,EAAE,mBAAmB;AAC5B,eAAK,kBAAkB;AACvB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,aAAa,cAAc;AAChC,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,KAAK,IAAI,+CAA+C;AAC7D,eAAK,kBAAkB,mBAAmB;AAAA,QAC9C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,mBAAmB,EAAE,IAAI;AACtB,YAAI,OAAO,EAAE,mBAAmB;AAC5B,eAAK,kBAAkB;AACvB,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,MAAM;AACtB,eAAK,KAAK,IAAI,uBAAuB;AAAA,QACzC,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,kBAAkB;AACvB,eAAK,cAAc;AAAA,QACvB;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,mBAAmB,EAAE,IAAI;AACtB,YAAI,OAAO,EAAE,sBAAsB;AAC/B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,KAAK;AACrB,eAAK,KAAK,IAAI,UAAU;AACxB,eAAK,cAAc;AAAA,QACvB,OAAO;AACH,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,2BAA2B,EAAE,IAAI;AAC9B,YAAI,OAAO,EAAE,sBAAsB;AAC/B,eAAK,QAAQ;AAAA,QACjB,OAAO;AACH,eAAK,WAAW,GAAG;AACnB,eAAK,kBAAkB,mBAAmB;AAAA,QAC9C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,uBAAuB,EAAE,IAAI;AAC1B,YAAI,OAAO,EAAE,mBAAmB;AAC5B,eAAK,QAAQ;AAAA,QACjB,WAAW,OAAO,EAAE,sBAAsB;AACtC,eAAK,WAAW,GAAG;AAAA,QACvB,OAAO;AACH,eAAK,WAAW,IAAI;AACpB,eAAK,kBAAkB,mBAAmB;AAAA,QAC9C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,yBAAyB,EAAE,IAAI;AAC5B,aAAK,WAAW,CAAC,EAAE,SAAS;AAE5B,YAAI,OAAO,EAAE,aAAa;AACtB,eAAK,SAAS,KAAK,EAAE;AACrB,eAAK,QAAQ;AAAA,QACjB,WAAW,oBAAoB,EAAE,GAAG;AAChC,eAAK,kBAAkB,+BAA+B;AAAA,QAC1D,OAAO;AACH,eAAK,6CAA6C;AAClD,eAAK,kBAAkB,KAAK,WAAW;AAAA,QAC3C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,+BAA+B,EAAE,IAAI;AAClC,cAAM,cAAc,KAAK,8BAA8B,EAAE;AAIzD,YAAI,KAAK,mBAAmB,GAAG;AAC3B,eAAK,WAAW,CAAC,EAAE,SAAS;AAAA,QAChC,WAAW,aAAa;AACpB,gBAAM,gBAAgB,KAAK,SAAS,KAAK,SAAS,SAAS,CAAC,MAAM,EAAE;AAEpE,cAAI,CAAC,KAAK,oCAAoC,aAAa,GAAG;AAC1D,gBAAI,CAAC,eAAe;AAChB,mBAAK,oBAAoB,IAAI,uCAAuC;AAAA,YACxE;AAEA,iBAAK,WAAW;AAAA,UACpB;AAEA,eAAK,6CAA6C;AAClD,eAAK,QAAQ,KAAK;AAAA,QACtB,OAAO;AACH,eAAK,6CAA6C;AAClD,eAAK,QAAQ;AAAA,QACjB;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,yBAAyB,EAAE,IAAI;AAC5B,YAAI,oBAAoB,EAAE,GAAG;AACzB,cAAI,KAAK,iCAAiC,GAAG;AACzC,iBAAK,YAAY,SAAS,OAAO,EAAE;AAAA,UACvC,OAAO;AACH,iBAAK,eAAe,EAAE;AAAA,UAC1B;AAAA,QACJ,OAAO;AACH,cAAI,OAAO,EAAE,WAAW;AACpB,iBAAK,KAAK,IAAI,8BAA8B;AAAA,UAChD;AAEA,eAAK,kBAAkB,KAAK,WAAW;AAAA,QAC3C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,iCAAiC,EAAE,IAAI;AACpC,aAAK,cAAc;AAEnB,YAAI,OAAO,EAAE,iBAAiB,OAAO,EAAE,iBAAiB;AACpD,eAAK,SAAS,KAAK,EAAE;AACrB,eAAK,QAAQ;AAAA,QACjB,OAAO;AACH,eAAK,kBAAkB,uCAAuC;AAAA,QAClE;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,2CAA2C,EAAE,IAAI;AAC9C,YAAI,gBAAgB,EAAE,GAAG;AACrB,eAAK,kBAAkB,qCAAqC;AAAA,QAChE,OAAO;AACH,eAAK,KAAK,IAAI,0CAA0C;AACxD,eAAK,6CAA6C;AAClD,eAAK,kBAAkB,KAAK,WAAW;AAAA,QAC3C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,uCAAuC,EAAE,IAAI;AAC1C,YAAI,aAAa,EAAE,GAAG;AAClB,eAAK,kBAAkB,iCAAiC;AAAA,QAC5D,OAAO;AACH,eAAK,KAAK,IAAI,0CAA0C;AACxD,eAAK,6CAA6C;AAClD,eAAK,kBAAkB,KAAK,WAAW;AAAA,QAC3C;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,qCAAqC,EAAE,IAAI;AACxC,YAAI,qBAAqB,EAAE,GAAG;AAC1B,eAAK,cAAc,KAAK,cAAc,KAAK,KAAK;AAAA,QACpD,WAAW,qBAAqB,EAAE,GAAG;AACjC,eAAK,cAAc,KAAK,cAAc,KAAK,KAAK;AAAA,QACpD,WAAW,aAAa,EAAE,GAAG;AACzB,eAAK,cAAc,KAAK,cAAc,KAAK,KAAK;AAAA,QACpD,WAAW,OAAO,EAAE,WAAW;AAC3B,eAAK,QAAQ;AAAA,QACjB,OAAO;AACH,eAAK,KAAK,IAAI,uCAAuC;AACrD,eAAK,kBAAkB,qCAAqC;AAAA,QAChE;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,iCAAiC,EAAE,IAAI;AACpC,YAAI,aAAa,EAAE,GAAG;AAClB,eAAK,cAAc,KAAK,cAAc,KAAK,KAAK;AAAA,QACpD,WAAW,OAAO,EAAE,WAAW;AAC3B,eAAK,QAAQ;AAAA,QACjB,OAAO;AACH,eAAK,KAAK,IAAI,uCAAuC;AACrD,eAAK,kBAAkB,qCAAqC;AAAA,QAChE;AAAA,MACJ;AAAA;AAAA;AAAA,MAIA,CAAC,qCAAqC,IAAI;AACtC,YAAI,KAAK,gBAAgB,EAAE,MAAM;AAC7B,eAAK,KAAK,IAAI,sBAAsB;AACpC,eAAK,cAAc,EAAE;AAAA,QACzB,WAAW,KAAK,cAAc,SAAU;AACpC,eAAK,KAAK,IAAI,qCAAqC;AACnD,eAAK,cAAc,EAAE;AAAA,QACzB,WAAW,QAAQ,YAAY,KAAK,WAAW,GAAG;AAC9C,eAAK,KAAK,IAAI,2BAA2B;AACzC,eAAK,cAAc,EAAE;AAAA,QACzB,WAAW,QAAQ,qBAAqB,KAAK,WAAW,GAAG;AACvD,eAAK,KAAK,IAAI,8BAA8B;AAAA,QAChD,WAAW,QAAQ,mBAAmB,KAAK,WAAW,KAAK,KAAK,gBAAgB,EAAE,iBAAiB;AAC/F,eAAK,KAAK,IAAI,yBAAyB;AAEvC,gBAAM,cAAc,mCAAmC,KAAK,WAAW;AAEvE,cAAI,aAAa;AACb,iBAAK,cAAc;AAAA,UACvB;AAAA,QACJ;AAEA,aAAK,WAAW,CAAC,KAAK,WAAW;AAEjC,aAAK,6CAA6C;AAClD,aAAK,kBAAkB,KAAK,WAAW;AAAA,MAC3C;AAAA,IACJ;AAGA,cAAU,kBAAkB;AAC5B,cAAU,uBAAuB;AACjC,cAAU,6BAA6B;AACvC,cAAU,kBAAkB;AAC5B,cAAU,gBAAgB;AAC1B,cAAU,gBAAgB;AAC1B,cAAU,gBAAgB;AAC1B,cAAU,YAAY;AACtB,cAAU,oBAAoB;AAG9B,cAAU,OAAO;AAAA,MACb,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,aAAa;AAAA,MACb,WAAW;AAAA,IACf;AAGA,cAAU,eAAe,SAAS,OAAO,UAAU;AAC/C,eAAS,IAAI,MAAM,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AAC9C,YAAI,MAAM,MAAM,CAAC,EAAE,SAAS,UAAU;AAClC,iBAAO,MAAM,MAAM,CAAC,EAAE;AAAA,QAC1B;AAAA,MACJ;AAEA,aAAO;AAAA,IACX;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACnpEjB;AAAA;AAAA;AAEA,QAAM,KAAM,QAAQ,aAAa;AAAA,MAC7B,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,OAAO;AAAA,MACP,KAAK;AAAA,MACL,OAAO;AAAA,IACX;AAEA,YAAQ,QAAQ;AAAA,MACZ,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA,IACV;AAEA,YAAQ,gBAAgB;AAAA,MACpB,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,gBAAgB;AAAA,IACpB;AAEA,QAAM,IAAK,QAAQ,YAAY;AAAA,MAC3B,GAAG;AAAA,MACH,SAAS;AAAA,MACT,gBAAgB;AAAA,MAChB,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,OAAO;AAAA,MAEP,GAAG;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,MACT,KAAK;AAAA,MACL,YAAY;AAAA,MACZ,MAAM;AAAA,MACN,IAAI;AAAA,MACJ,QAAQ;AAAA,MAER,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,KAAK;AAAA,MACL,UAAU;AAAA,MAEV,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,KAAK;AAAA,MACL,IAAI;AAAA,MACJ,IAAI;AAAA,MAEJ,IAAI;AAAA,MACJ,OAAO;AAAA,MAEP,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,gBAAgB;AAAA,MAChB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,UAAU;AAAA,MAEV,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,IAAI;AAAA,MACJ,MAAM;AAAA,MAEN,GAAG;AAAA,MACH,KAAK;AAAA,MACL,OAAO;AAAA,MACP,OAAO;AAAA,MACP,QAAQ;AAAA,MAER,QAAQ;AAAA,MAER,OAAO;AAAA,MACP,IAAI;AAAA,MACJ,MAAM;AAAA,MACN,SAAS;AAAA,MAET,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,OAAO;AAAA,MAEP,KAAK;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,MACV,SAAS;AAAA,MACT,UAAU;AAAA,MAEV,QAAQ;AAAA,MACR,IAAI;AAAA,MACJ,UAAU;AAAA,MACV,QAAQ;AAAA,MAER,GAAG;AAAA,MACH,OAAO;AAAA,MACP,WAAW;AAAA,MACX,KAAK;AAAA,MAEL,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,KAAK;AAAA,MACL,MAAM;AAAA,MAEN,GAAG;AAAA,MACH,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,KAAK;AAAA,MACL,SAAS;AAAA,MACT,KAAK;AAAA,MAEL,OAAO;AAAA,MACP,OAAO;AAAA,MACP,UAAU;AAAA,MACV,UAAU;AAAA,MACV,OAAO;AAAA,MACP,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,OAAO;AAAA,MACP,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,IAAI;AAAA,MAEJ,GAAG;AAAA,MACH,IAAI;AAAA,MAEJ,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AAAA,MAEL,KAAK;AAAA,IACT;AAEA,YAAQ,mBAAmB;AAAA,MACvB,CAAC,GAAG,IAAI,GAAG;AAAA,QACP,CAAC,EAAE,OAAO,GAAG;AAAA,QACb,CAAC,EAAE,MAAM,GAAG;AAAA,QACZ,CAAC,EAAE,IAAI,GAAG;AAAA,QACV,CAAC,EAAE,OAAO,GAAG;AAAA,QACb,CAAC,EAAE,KAAK,GAAG;AAAA,QACX,CAAC,EAAE,IAAI,GAAG;AAAA,QACV,CAAC,EAAE,QAAQ,GAAG;AAAA,QACd,CAAC,EAAE,OAAO,GAAG;AAAA,QACb,CAAC,EAAE,UAAU,GAAG;AAAA,QAChB,CAAC,EAAE,IAAI,GAAG;AAAA,QACV,CAAC,EAAE,EAAE,GAAG;AAAA,QACR,CAAC,EAAE,MAAM,GAAG;AAAA,QACZ,CAAC,EAAE,OAAO,GAAG;AAAA,QACb,CAAC,EAAE,MAAM,GAAG;AAAA,QACZ,CAAC,EAAE,GAAG,GAAG;AAAA,QACT,CAAC,EAAE,QAAQ,GAAG;AAAA,QACd,CAAC,EAAE,EAAE,GAAG;AAAA,QACR,CAAC,EAAE,OAAO,GAAG;AAAA,QACb,CAAC,EAAE,GAAG,GAAG;AAAA,QACT,CAAC,EAAE,GAAG,GAAG;AAAA,QACT,CAAC,EAAE,EAAE,GAAG;AAAA,QACR,CAAC,EAAE,EAAE,GAAG;AAAA,QACR,CAAC,EAAE,KAAK,GAAG;AAAA,QACX,CAAC,EAAE,QAAQ,GAAG;AAAA,QACd,CAAC,EAAE,UAAU,GAAG;AAAA,QAChB,CAAC,EAAE,MAAM,GAAG;AAAA,QACZ,CAAC,EAAE,MAAM,GAAG;AAAA,QACZ,CAAC,EAAE,IAAI,GAAG;AAAA,QACV,CAAC,EAAE,KAAK,GAAG;AAAA,QACX,CAAC,EAAE,QAAQ,GAAG;AAAA,QACdb,CAAC,EAAE,IAAI,GAAG;AAAA,QACV,CAAC,EAAE,OAAO,GAAG;AAAA,QACb,CAAC,EAAE,IAAI,GAAG;AAAA,QACV,CAAC,EAAE,IAAI,GAAG;AAAA,QACV,CAAC,EAAE,GAAG,GAAG;AAAA,QACT,CAAC,EAAE,OAAO,GAAG;AAAA,QACb,CAAC,EAAE,QAAQ,GAAG;AAAA,QACd,CAAC,EAAE,QAAQ,GAAG;AAAA,QACd,CAAC,EAAE,MAAM,GAAG;AAAA,QACZ,CAAC,EAAE,EAAE,GAAG;AAAA,QACR,CAAC,EAAE,CAAC,GAAG;AAAA,QACP,CAAC,EAAE,KAAK,GAAG;AAAA,QACX,CAAC,EAAE,SAAS,GAAG;AAAA,QACf,CAAC,EAAE,GAAG,GAAG;AAAA,QACT,CAAC,EAAE,MAAM,GAAG;AAAA,QACZ,CAAC,EAAE,OAAO,GAAG;AAAA,QACb,CAAC,EAAE,MAAM,GAAG;AAAA,QACZ,CAAC,EAAE,MAAM,GAAG;AAAA,QACZ,CAAC,EAAE,KAAK,GAAG;AAAA,QACX,CAAC,EAAE,OAAO,GAAG;AAAA,QACb,CAAC,EAAE,KAAK,GAAG;AAAA,QACX,CAAC,EAAE,KAAK,GAAG;AAAA,QACX,CAAC,EAAE,EAAE,GAAG;AAAA,QACR,CAAC,EAAE,QAAQ,GAAG;AAAA,QACd,CAAC,EAAE,QAAQ,GAAG;AAAA,QACd,CAAC,EAAE,KAAK,GAAG;AAAA,QACX,CAAC,EAAE,EAAE,GAAG;AAAA,QACR,CAAC,EAAE,KAAK,GAAG;AAAA,QACX,CAAC,EAAE,KAAK,GAAG;AAAA,QACX,CAAC,EAAE,EAAE,GAAG;AAAA,QACR,CAAC,EAAE,KAAK,GAAG;AAAA,QACX,CAAC,EAAE,EAAE,GAAG;AAAA,QACR,CAAC,EAAE,GAAG,GAAG;AAAA,QACT,CAAC,EAAE,GAAG,GAAG;AAAA,MACb;AAAA,MACA,CAAC,GAAG,MAAM,GAAG;AAAA,QACT,CAAC,EAAE,EAAE,GAAG;AAAA,QACR,CAAC,EAAE,EAAE,GAAG;AAAA,QACR,CAAC,EAAE,EAAE,GAAG;AAAA,QACR,CAAC,EAAE,EAAE,GAAG;AAAA,QACR,CAAC,EAAE,KAAK,GAAG;AAAA,QACX,CAAC,EAAE,cAAc,GAAG;AAAA,MACxB;AAAA,MACA,CAAC,GAAG,GAAG,GAAG;AAAA,QACN,CAAC,EAAE,KAAK,GAAG;AAAA,QACX,CAAC,EAAE,cAAc,GAAG;AAAA,QACpB,CAAC,EAAE,IAAI,GAAG;AAAA,MACd;AAAA,IACJ;AAAA;AAAA;;;AC/QA;AAAA;AAAA;AAEA,QAAM,OAAO;AAGb,QAAM,IAAI,KAAK;AACf,QAAM,KAAK,KAAK;AAMhB,aAAS,wBAAwB,IAAI;AACjC,cAAQ,GAAG,QAAQ;AAAA,QACf,KAAK;AACD,iBAAO,OAAO,EAAE;AAAA,QAEpB,KAAK;AACD,iBAAO,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE;AAAA,QAE/F,KAAK;AACD,iBAAO,OAAO,EAAE;AAAA,QAEpB,KAAK;AACD,iBAAO,OAAO,EAAE;AAAA,QAEpB,KAAK;AACD,iBAAO,OAAO,EAAE;AAAA,MACxB;AAEA,aAAO;AAAA,IACX;AAEA,aAAS,kCAAkC,IAAI;AAC3C,cAAQ,GAAG,QAAQ;AAAA,QACf,KAAK;AACD,iBAAO,OAAO,EAAE;AAAA,QAEpB,KAAK;AACD,iBACI,OAAO,EAAE,MACT,OAAO,EAAE,MACT,OAAO,EAAE,MACT,OAAO,EAAE,MACT,OAAO,EAAE,MACT,OAAO,EAAE,MACT,OAAO,EAAE,MACT,OAAO,EAAE,MACT,OAAO,EAAE;AAAA,QAGjB,KAAK;AACD,iBAAO,OAAO,EAAE;AAAA,QAEpB,KAAK;AACD,iBAAO,OAAO,EAAE,SAAS,OAAO,EAAE,SAAS,OAAO,EAAE;AAAA,QAExD,KAAK;AACD,iBAAO,OAAO,EAAE;AAAA,QAEpB,KAAK;AACD,iBAAO,OAAO,EAAE;AAAA,QAEpB,KAAK;AACD,iBAAO,OAAO,EAAE,YAAY,OAAO,EAAE;AAAA,MAC7C;AAEA,aAAO;AAAA,IACX;AAEA,aAAS,iBAAiB,IAAI,IAAI;AAC9B,cAAQ,GAAG,QAAQ;AAAA,QACf,KAAK;AACD,cAAI,OAAO,EAAE,MAAM,OAAO,EAAE,IAAI;AAC5B,mBAAO,OAAO,GAAG;AAAA,UACrB,WAAW,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,IAAI;AACjE,mBAAO,OAAO,GAAG;AAAA,UACrB;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,MAAM;AACf,mBAAO,OAAO,GAAG;AAAA,UACrB,WAAW,OAAO,EAAE,MAAM;AACtB,mBAAO,OAAO,GAAG;AAAA,UACrB;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,OAAO;AAChB,mBAAO,OAAO,GAAG;AAAA,UACrB,WAAW,OAAO,EAAE,OAAO;AACvB,mBAAO,OAAO,GAAG;AAAA,UACrB,WAAW,OAAO,EAAE,OAAO;AACvB,mBAAO,OAAO,GAAG;AAAA,UACrB;AAEA;AAAA,QAEJ,KAAK;AACD,kBAAQ,OAAO,EAAE,UAAU,OAAO,EAAE,WAAW,OAAO,GAAG;AAAA,QAE7D,KAAK;AACD,kBAAQ,OAAO,EAAE,WAAW,OAAO,EAAE,YAAY,OAAO,GAAG;AAAA,QAE/D,KAAK;AACD,iBAAO,OAAO,EAAE,YAAY,OAAO,GAAG;AAAA,QAE1C,KAAK;AACD,iBAAO,OAAO,EAAE,kBAAkB,OAAO,GAAG;AAAA,QAEhD,KAAK;AACD,iBAAO,OAAO,EAAE,kBAAkB,OAAO,GAAG;AAAA,MACpD;AAEA,aAAO;AAAA,IACX;AAGA,QAAM,mBAAN,MAAuB;AAAA,MACnB,YAAY,UAAU,aAAa;AAC/B,aAAK,WAAW;AAChB,aAAK,QAAQ,CAAC;AACd,aAAK,UAAU;AACf,aAAK,iBAAiB;AACtB,aAAK,qBAAqB;AAC1B,aAAK,YAAY;AACjB,aAAK,cAAc;AAAA,MACvB;AAAA;AAAA,MAGA,SAASC,UAAS;AACd,YAAI,MAAM;AAEV,iBAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,cAAI,KAAK,MAAM,CAAC,MAAMA,UAAS;AAC3B,kBAAM;AACN;AAAA,UACJ;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA;AAAA,MAGA,gBAAgB;AACZ,eAAO,KAAK,mBAAmB,EAAE,YAAY,KAAK,YAAY,gBAAgB,KAAK,OAAO,MAAM,GAAG;AAAA,MACvG;AAAA,MAEA,wBAAwB;AACpB,aAAK,UAAU,KAAK,MAAM,KAAK,QAAQ;AACvC,aAAK,iBAAiB,KAAK,WAAW,KAAK,YAAY,WAAW,KAAK,OAAO;AAE9E,aAAK,qBAAqB,KAAK,cAAc,IAAI,KAAK,YAAY,mBAAmB,KAAK,OAAO,IAAI;AAAA,MACzG;AAAA;AAAA,MAGA,KAAKA,UAAS;AACV,aAAK,MAAM,EAAE,KAAK,QAAQ,IAAIA;AAC9B,aAAK,sBAAsB;AAE3B,YAAI,KAAK,cAAc,GAAG;AACtB,eAAK;AAAA,QACT;AAAA,MACJ;AAAA,MAEA,MAAM;AACF,aAAK;AAEL,YAAI,KAAK,YAAY,KAAK,KAAK,cAAc,GAAG;AAC5C,eAAK;AAAA,QACT;AAEA,aAAK,sBAAsB;AAAA,MAC/B;AAAA,MAEA,QAAQ,YAAY,YAAY;AAC5B,cAAM,MAAM,KAAK,SAAS,UAAU;AAEpC,aAAK,MAAM,GAAG,IAAI;AAElB,YAAI,QAAQ,KAAK,UAAU;AACvB,eAAK,sBAAsB;AAAA,QAC/B;AAAA,MACJ;AAAA,MAEA,YAAY,kBAAkB,YAAY;AACtC,cAAM,eAAe,KAAK,SAAS,gBAAgB,IAAI;AAEvD,aAAK,MAAM,OAAO,cAAc,GAAG,UAAU;AAE7C,YAAI,iBAAiB,EAAE,KAAK,UAAU;AAClC,eAAK,sBAAsB;AAAA,QAC/B;AAAA,MACJ;AAAA,MAEA,sBAAsB,SAAS;AAC3B,eAAO,KAAK,WAAW,IAAI;AACvB,gBAAM,KAAK,KAAK;AAChB,gBAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,OAAO;AAExD,eAAK,IAAI;AAET,cAAI,OAAO,WAAW,OAAO,GAAG,MAAM;AAClC;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,MAEA,sBAAsBA,UAAS;AAC3B,eAAO,KAAK,WAAW,IAAI;AACvB,gBAAM,gBAAgB,KAAK;AAE3B,eAAK,IAAI;AAET,cAAI,kBAAkBA,UAAS;AAC3B;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,MAEA,+BAA+B;AAC3B,eAAO,KAAK,WAAW,IAAI;AACvB,gBAAM,KAAK,KAAK;AAChB,gBAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,OAAO;AAExD,eAAK,IAAI;AAET,cACI,OAAO,EAAE,MACT,OAAO,EAAE,MACT,OAAO,EAAE,MACT,OAAO,EAAE,MACT,OAAO,EAAE,MACR,OAAO,EAAE,MAAM,OAAO,GAAG,MAC5B;AACE;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,MAEA,0BAA0B;AACtB,eAAO,KAAK,WAAW,IAAI;AACvB,gBAAM,KAAK,KAAK;AAChB,gBAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,OAAO;AAExD,eAAK,IAAI;AAET,cAAI,OAAO,EAAE,MAAO,OAAO,EAAE,MAAM,OAAO,GAAG,MAAO;AAChD;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,MAEA,wBAAwB;AAGpB,aAAK,WAAW;AAChB,aAAK,sBAAsB;AAAA,MAC/B;AAAA,MAEA,0BAA0B;AACtB,eACK,KAAK,mBAAmB,EAAE,SAAS,KAAK,mBAAmB,EAAE,YAAY,KAAK,mBAAmB,EAAE,QACpG,KAAK,YAAY,gBAAgB,KAAK,OAAO,MAAM,GAAG,MACxD;AACE,eAAK,IAAI;AAAA,QACb;AAAA,MACJ;AAAA,MAEA,8BAA8B;AAC1B,eACK,KAAK,mBAAmB,EAAE,SACvB,KAAK,mBAAmB,EAAE,SAC1B,KAAK,mBAAmB,EAAE,SAC1B,KAAK,mBAAmB,EAAE,YAC1B,KAAK,mBAAmB,EAAE,QAC9B,KAAK,YAAY,gBAAgB,KAAK,OAAO,MAAM,GAAG,MACxD;AACE,eAAK,IAAI;AAAA,QACb;AAAA,MACJ;AAAA,MAEA,6BAA6B;AACzB,eACK,KAAK,mBAAmB,EAAE,MAAM,KAAK,mBAAmB,EAAE,YAAY,KAAK,mBAAmB,EAAE,QACjG,KAAK,YAAY,gBAAgB,KAAK,OAAO,MAAM,GAAG,MACxD;AACE,eAAK,IAAI;AAAA,QACb;AAAA,MACJ;AAAA,MAEA,OAAOA,UAAS;AACZ,iBAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,cAAI,KAAK,MAAM,CAAC,MAAMA,UAAS;AAC3B,iBAAK,MAAM,OAAO,GAAG,CAAC;AACtB,iBAAK;AACL,iBAAK,sBAAsB;AAC3B;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA;AAAA,MAGA,mCAAmC;AAE/B,cAAMA,WAAU,KAAK,MAAM,CAAC;AAE5B,eAAOA,YAAW,KAAK,YAAY,WAAWA,QAAO,MAAM,EAAE,OAAOA,WAAU;AAAA,MAClF;AAAA,MAEA,SAASA,UAAS;AACd,eAAO,KAAK,SAASA,QAAO,IAAI;AAAA,MACpC;AAAA,MAEA,kBAAkBA,UAAS;AACvB,YAAI,aAAa,KAAK,SAASA,QAAO;AAEtC,eAAO,EAAE,cAAc,IAAI,KAAK,MAAM,UAAU,IAAI;AAAA,MACxD;AAAA,MAEA,2BAA2B;AACvB,eAAO,KAAK,aAAa,KAAK,KAAK,mBAAmB,EAAE;AAAA,MAC5D;AAAA;AAAA,MAGA,WAAW,SAAS;AAChB,iBAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,gBAAM,KAAK,KAAK,YAAY,WAAW,KAAK,MAAM,CAAC,CAAC;AACpD,gBAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC;AAEzD,cAAI,OAAO,WAAW,OAAO,GAAG,MAAM;AAClC,mBAAO;AAAA,UACX;AAEA,cAAI,iBAAiB,IAAI,EAAE,GAAG;AAC1B,mBAAO;AAAA,UACX;AAAA,QACJ;AAEA,eAAO;AAAA,MACX;AAAA,MAEA,2BAA2B;AACvB,iBAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,gBAAM,KAAK,KAAK,YAAY,WAAW,KAAK,MAAM,CAAC,CAAC;AACpD,gBAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC;AAEzD,eACK,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,OACrF,OAAO,GAAG,MACZ;AACE,mBAAO;AAAA,UACX;AAEA,cAAI,iBAAiB,IAAI,EAAE,GAAG;AAC1B,mBAAO;AAAA,UACX;AAAA,QACJ;AAEA,eAAO;AAAA,MACX;AAAA,MAEA,mBAAmB,SAAS;AACxB,iBAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,gBAAM,KAAK,KAAK,YAAY,WAAW,KAAK,MAAM,CAAC,CAAC;AACpD,gBAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC;AAEzD,cAAI,OAAO,WAAW,OAAO,GAAG,MAAM;AAClC,mBAAO;AAAA,UACX;AAEA,eAAM,OAAO,EAAE,MAAM,OAAO,EAAE,OAAO,OAAO,GAAG,QAAS,iBAAiB,IAAI,EAAE,GAAG;AAC9E,mBAAO;AAAA,UACX;AAAA,QACJ;AAEA,eAAO;AAAA,MACX;AAAA,MAEA,iBAAiB,SAAS;AACtB,iBAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,gBAAM,KAAK,KAAK,YAAY,WAAW,KAAK,MAAM,CAAC,CAAC;AACpD,gBAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC;AAEzD,cAAI,OAAO,WAAW,OAAO,GAAG,MAAM;AAClC,mBAAO;AAAA,UACX;AAEA,cAAK,OAAO,EAAE,UAAU,OAAO,GAAG,QAAS,iBAAiB,IAAI,EAAE,GAAG;AACjE,mBAAO;AAAA,UACX;AAAA,QACJ;AAEA,eAAO;AAAA,MACX;AAAA,MAEA,gBAAgB,SAAS;AACrB,iBAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,gBAAM,KAAK,KAAK,YAAY,WAAW,KAAK,MAAM,CAAC,CAAC;AACpD,gBAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC;AAEzD,cAAI,OAAO,GAAG,MAAM;AAChB;AAAA,UACJ;AAEA,cAAI,OAAO,SAAS;AAChB,mBAAO;AAAA,UACX;AAEA,cAAI,OAAO,EAAE,SAAS,OAAO,EAAE,YAAY,OAAO,EAAE,MAAM;AACtD,mBAAO;AAAA,UACX;AAAA,QACJ;AAEA,eAAO;AAAA,MACX;AAAA,MAEA,kCAAkC;AAC9B,iBAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,gBAAM,KAAK,KAAK,YAAY,WAAW,KAAK,MAAM,CAAC,CAAC;AACpD,gBAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC;AAEzD,cAAI,OAAO,GAAG,MAAM;AAChB;AAAA,UACJ;AAEA,cAAI,OAAO,EAAE,SAAS,OAAO,EAAE,SAAS,OAAO,EAAE,OAAO;AACpD,mBAAO;AAAA,UACX;AAEA,cAAI,OAAO,EAAE,SAAS,OAAO,EAAE,MAAM;AACjC,mBAAO;AAAA,UACX;AAAA,QACJ;AAEA,eAAO;AAAA,MACX;AAAA,MAEA,iBAAiB,SAAS;AACtB,iBAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,gBAAM,KAAK,KAAK,YAAY,WAAW,KAAK,MAAM,CAAC,CAAC;AACpD,gBAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC;AAEzD,cAAI,OAAO,GAAG,MAAM;AAChB;AAAA,UACJ;AAEA,cAAI,OAAO,SAAS;AAChB,mBAAO;AAAA,UACX;AAEA,cAAI,OAAO,EAAE,UAAU,OAAO,EAAE,UAAU;AACtC,mBAAO;AAAA,UACX;AAAA,QACJ;AAEA,eAAO;AAAA,MACX;AAAA;AAAA,MAGA,yBAAyB;AACrB,eAAO,wBAAwB,KAAK,cAAc,GAAG;AACjD,eAAK,IAAI;AAAA,QACb;AAAA,MACJ;AAAA,MAEA,mCAAmC;AAC/B,eAAO,kCAAkC,KAAK,cAAc,GAAG;AAC3D,eAAK,IAAI;AAAA,QACb;AAAA,MACJ;AAAA,MAEA,oCAAoC,kBAAkB;AAClD,eAAO,wBAAwB,KAAK,cAAc,KAAK,KAAK,mBAAmB,kBAAkB;AAC7F,eAAK,IAAI;AAAA,QACb;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACjejB;AAAA;AAAA;AAGA,QAAM,oBAAoB;AAG1B,QAAM,wBAAN,MAA4B;AAAA,MACxB,YAAY,aAAa;AACrB,aAAK,SAAS;AACd,aAAK,UAAU,CAAC;AAChB,aAAK,cAAc;AACnB,aAAK,WAAW;AAAA,MACpB;AAAA;AAAA;AAAA;AAAA,MAKA,+BAA+B,YAAY;AACvC,cAAM,aAAa,CAAC;AAEpB,YAAI,KAAK,UAAU,mBAAmB;AAClC,gBAAM,gBAAgB,KAAK,YAAY,YAAY,UAAU,EAAE;AAC/D,gBAAM,YAAY,KAAK,YAAY,WAAW,UAAU;AACxD,gBAAM,iBAAiB,KAAK,YAAY,gBAAgB,UAAU;AAElE,mBAAS,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;AACvC,kBAAM,QAAQ,KAAK,QAAQ,CAAC;AAE5B,gBAAI,MAAM,SAAS,sBAAsB,cAAc;AACnD;AAAA,YACJ;AAEA,kBAAMC,WAAU,MAAM;AACtB,kBAAM,eAAe,KAAK,YAAY,YAAYA,QAAO;AAEzD,kBAAM,cACF,KAAK,YAAY,WAAWA,QAAO,MAAM,aACzC,KAAK,YAAY,gBAAgBA,QAAO,MAAM,kBAC9C,aAAa,WAAW;AAE5B,gBAAI,aAAa;AACb,yBAAW,KAAK,EAAE,KAAK,GAAG,OAAO,aAAa,CAAC;AAAA,YACnD;AAAA,UACJ;AAAA,QACJ;AAEA,eAAO,WAAW,SAAS,oBAAoB,CAAC,IAAI;AAAA,MACxD;AAAA,MAEA,wBAAwB,YAAY;AAChC,cAAM,aAAa,KAAK,+BAA+B,UAAU;AACjE,YAAI,UAAU,WAAW;AAEzB,YAAI,SAAS;AACT,gBAAM,UAAU,KAAK,YAAY,YAAY,UAAU;AACvD,gBAAM,gBAAgB,QAAQ;AAC9B,gBAAM,aAAa,uBAAO,OAAO,IAAI;AAGrC,mBAAS,IAAI,GAAG,IAAI,eAAe,KAAK;AACpC,kBAAM,SAAS,QAAQ,CAAC;AAExB,uBAAW,OAAO,IAAI,IAAI,OAAO;AAAA,UACrC;AAEA,mBAAS,IAAI,GAAG,IAAI,eAAe,KAAK;AACpC,qBAAS,IAAI,GAAG,IAAI,SAAS,KAAK;AAC9B,oBAAM,QAAQ,WAAW,CAAC,EAAE,MAAM,CAAC;AAEnC,kBAAI,WAAW,MAAM,IAAI,MAAM,MAAM,OAAO;AACxC,2BAAW,OAAO,GAAG,CAAC;AACtB;AAAA,cACJ;AAEA,kBAAI,WAAW,SAAS,mBAAmB;AACvC;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ;AAGA,mBAAS,IAAI,UAAU,GAAG,KAAK,oBAAoB,GAAG,KAAK;AACvD,iBAAK,QAAQ,OAAO,WAAW,CAAC,EAAE,KAAK,CAAC;AACxC,iBAAK;AAAA,UACT;AAAA,QACJ;AAAA,MACJ;AAAA;AAAA,MAGA,eAAe;AACX,aAAK,QAAQ,KAAK,EAAE,MAAM,sBAAsB,aAAa,CAAC;AAC9D,aAAK;AAAA,MACT;AAAA,MAEA,YAAYA,UAAS,OAAO;AACxB,aAAK,wBAAwBA,QAAO;AAEpC,aAAK,QAAQ,KAAK;AAAA,UACd,MAAM,sBAAsB;AAAA,UAC5B,SAASA;AAAA,UACT;AAAA,QACJ,CAAC;AAED,aAAK;AAAA,MACT;AAAA,MAEA,2BAA2BA,UAAS,OAAO;AACvC,YAAI,cAAc,KAAK,SAAS;AAEhC,eAAO,eAAe,GAAG,eAAe;AACpC,cAAI,KAAK,QAAQ,WAAW,MAAM,KAAK,UAAU;AAC7C;AAAA,UACJ;AAAA,QACJ;AAEA,aAAK,QAAQ,OAAO,cAAc,GAAG,GAAG;AAAA,UACpC,MAAM,sBAAsB;AAAA,UAC5B,SAASA;AAAA,UACT;AAAA,QACJ,CAAC;AAED,aAAK;AAAA,MACT;AAAA,MAEA,YAAY,OAAO;AACf,iBAAS,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;AACvC,cAAI,KAAK,QAAQ,CAAC,MAAM,OAAO;AAC3B,iBAAK,QAAQ,OAAO,GAAG,CAAC;AACxB,iBAAK;AACL;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,MAEA,oBAAoB;AAChB,eAAO,KAAK,QAAQ;AAChB,gBAAM,QAAQ,KAAK,QAAQ,IAAI;AAE/B,eAAK;AAEL,cAAI,MAAM,SAAS,sBAAsB,cAAc;AACnD;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA;AAAA,MAGA,kCAAkC,SAAS;AACvC,iBAAS,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;AACvC,gBAAM,QAAQ,KAAK,QAAQ,CAAC;AAE5B,cAAI,MAAM,SAAS,sBAAsB,cAAc;AACnD,mBAAO;AAAA,UACX;AAEA,cAAI,KAAK,YAAY,WAAW,MAAM,OAAO,MAAM,SAAS;AACxD,mBAAO;AAAA,UACX;AAAA,QACJ;AAEA,eAAO;AAAA,MACX;AAAA,MAEA,gBAAgBA,UAAS;AACrB,iBAAS,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;AACvC,gBAAM,QAAQ,KAAK,QAAQ,CAAC;AAE5B,cAAI,MAAM,SAAS,sBAAsB,iBAAiB,MAAM,YAAYA,UAAS;AACjF,mBAAO;AAAA,UACX;AAAA,QACJ;AAEA,eAAO;AAAA,MACX;AAAA,IACJ;AAGA,0BAAsB,eAAe;AACrC,0BAAsB,gBAAgB;AAEtC,WAAO,UAAU;AAAA;AAAA;;;ACpLjB;AAAA;AAAA;AAEA,QAAM,QAAN,MAAY;AAAA,MACR,YAAY,MAAM;AACd,cAAM,kBAAkB,CAAC;AACzB,cAAM,oBAAoB,KAAK,sBAAsB,MAAM,eAAe;AAE1E,mBAAWC,QAAO,OAAO,KAAK,iBAAiB,GAAG;AAC9C,cAAI,OAAO,kBAAkBA,IAAG,MAAM,YAAY;AAC9C,4BAAgBA,IAAG,IAAI,KAAKA,IAAG;AAC/B,iBAAKA,IAAG,IAAI,kBAAkBA,IAAG;AAAA,UACrC;AAAA,QACJ;AAAA,MACJ;AAAA,MAEA,wBAAwB;AACpB,cAAM,IAAI,MAAM,iBAAiB;AAAA,MACrC;AAAA,IACJ;AAEA,UAAM,UAAU,SAAS,MAAM,MAAM,MAAM;AACvC,UAAI,CAAC,KAAK,UAAU;AAChB,aAAK,WAAW,CAAC;AAAA,MACrB;AAEA,eAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC3C,YAAI,KAAK,SAAS,CAAC,EAAE,gBAAgB,MAAM;AACvC,iBAAO,KAAK,SAAS,CAAC;AAAA,QAC1B;AAAA,MACJ;AAEA,YAAM,QAAQ,IAAI,KAAK,MAAM,IAAI;AAEjC,WAAK,SAAS,KAAK,KAAK;AAExB,aAAO;AAAA,IACX;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACtCjB;AAAA;AAAA;AAEA,QAAM,QAAQ;AAEd,QAAM,oCAAN,cAAgD,MAAM;AAAA,MAClD,YAAY,cAAc;AACtB,cAAM,YAAY;AAElB,aAAK,eAAe;AACpB,aAAK,QAAQ;AACb,aAAK,eAAe;AACpB,aAAK,oBAAoB;AAEzB,aAAK,SAAS;AACd,aAAK,MAAM;AACX,aAAK,OAAO;AAAA,MAChB;AAAA,MAEA,sBAAsB,KAAK,MAAM;AAC7B,eAAO;AAAA,UACH,UAAU;AACN,kBAAM,MAAM,KAAK,MAAM;AACvB,kBAAM,KAAK,KAAK,KAAK,GAAG;AAGxB,gBAAI,IAAI,OAAO;AACX,kBAAI,QAAQ;AACZ,kBAAI;AACJ,kBAAI,eAAe;AAAA,YACvB;AAEA,gBAAI,OAAO,QAAS,OAAO,QAAQ,KAAK,KAAK,MAAM,CAAC,MAAM,MAAO;AAC7D,kBAAI,QAAQ;AAAA,YAChB;AAEA,gBAAI,MAAM,MAAM,IAAI,eAAe;AACnC,gBAAI,SAAS,IAAI,oBAAoB;AAErC,mBAAO,KAAK,QAAQ,KAAK,IAAI;AAAA,UACjC;AAAA,UAEA,UAAU;AACN,iBAAK,QAAQ,KAAK,IAAI;AAEtB,gBAAI,QAAQ;AACZ,gBAAI,MAAM,KAAK,MAAM,IAAI,eAAe;AAAA,UAC5C;AAAA,UAEA,kBAAkB;AACd,kBAAM,UAAU,KAAK;AAErB,iBAAK,gBAAgB,KAAK,IAAI;AAE9B,kBAAM,YAAY,UAAU,KAAK;AAEjC,gBAAI,gBAAgB;AACpB,gBAAI,qBAAqB;AACzB,gBAAI,SAAS,IAAI,oBAAoB,KAAK;AAAA,UAC9C;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC/DjB;AAAA;AAAA;AAEA,QAAM,QAAQ;AACd,QAAM,YAAY;AAClB,QAAM,oCAAoC;AAE1C,QAAM,6BAAN,cAAyC,MAAM;AAAA,MAC3C,YAAY,WAAW;AACnB,cAAM,SAAS;AAEf,aAAK,YAAY;AACjB,aAAK,aAAa,MAAM,QAAQ,UAAU,cAAc,iCAAiC;AACzF,aAAK,sBAAsB;AAC3B,aAAK,QAAQ;AAAA,MACjB;AAAA,MAEA,sBAAsB;AAClB,eAAO;AAAA,UACH,WAAW,KAAK,WAAW;AAAA,UAC3B,UAAU,KAAK,WAAW;AAAA,UAC1B,aAAa,KAAK,WAAW;AAAA,UAC7B,SAAS;AAAA,UACT,QAAQ;AAAA,UACR,WAAW;AAAA,QACf;AAAA,MACJ;AAAA,MAEA,iCAAiC;AAC7B,aAAK,oBAAoB,UAAU,KAAK,WAAW;AACnD,aAAK,oBAAoB,SAAS,KAAK,WAAW;AAClD,aAAK,oBAAoB,YAAY,KAAK,WAAW;AAErD,cAAM,eAAe,KAAK,UAAU;AACpC,cAAM,cAAc,KAAK,UAAU;AAEnC,YAAI,CAAC,aAAa,SAAS,OAAO;AAC9B,uBAAa,SAAS,QAAQ,uBAAO,OAAO,IAAI;AAAA,QACpD;AAEA,qBAAa,SAAS,MAAM,YAAY,IAAI,IAAI,KAAK;AAAA,MACzD;AAAA,MAEA,sBAAsB,KAAK,MAAM;AAC7B,cAAM,UAAU;AAAA,UACZ,uBAAuB;AACnB,iBAAK,qBAAqB,KAAK,IAAI;AACnC,iBAAK,aAAa,WAAW,IAAI;AAAA,UACrC;AAAA,UAEA,qBAAqB;AACjB,iBAAK,mBAAmB,KAAK,IAAI;AACjC,iBAAK,aAAa,WAAW,IAAI;AAAA,UACrC;AAAA,UAEA,sBAAsB;AAClB,iBAAK,oBAAoB,KAAK,IAAI;AAClC,iBAAK,aAAa,WAAW,IAAI;AAAA,UACrC;AAAA,UAEA,oBAAoB,aAAa;AAC7B,iBAAK,oBAAoB,KAAK,MAAM,WAAW;AAC/C,iBAAK,aAAa,WAAW,IAAI;AAAA,UACrC;AAAA,UAEA,sBAAsB,MAAM,IAAI;AAC5B,iBAAK,sBAAsB,KAAK,MAAM,MAAM,EAAE;AAC9C,iBAAK,sBAAsB,WAAW,IAAI;AAAA,UAC9C;AAAA,UAEA,kBAAkB;AACd,iBAAK,gBAAgB,KAAK,IAAI;AAC9B,iBAAK,aAAa,WAAW,IAAI,oBAAoB;AAAA,UACzD;AAAA,UAEA,YAAY,iBAAiB;AACzB,iBAAK,YAAY,KAAK,MAAM,eAAe;AAC3C,gBAAI,sBAAsB,IAAI,oBAAoB;AAAA,UACtD;AAAA,UAEA,eAAe,SAAS;AACpB,iBAAK,eAAe,KAAK,MAAM,OAAO;AACtC,gBAAI,+BAA+B;AAAA,UACvC;AAAA,UAEA,gBAAgB,SAAS;AACrB,iBAAK,gBAAgB,KAAK,MAAM,OAAO;AACvC,gBAAI,+BAA+B;AAAA,UACvC;AAAA,UAEA,oBAAoB;AAChB,kBAAM,QAAQ,KAAK,aAAa;AAIhC,gBAAI,KAAK,uBAAuB;AAC5B,mBAAK,sBAAsB,SAAS,UAAU,MAAM;AACpD,mBAAK,sBAAsB,SAAS,SAAS,MAAM;AACnD,mBAAK,sBAAsB,SAAS,YAAY,MAAM;AAAA,YAC1D;AAEA,gBAAI,KAAK,aAAa,SAAS,UAAU,WAAW;AAChD,oBAAM,UAAU,MAAM;AACtB,oBAAM,SAAS,MAAM;AACrB,oBAAM,YAAY,MAAM;AAAA,YAC5B,OAAO;AACH,oBAAM,UAAU,IAAI,WAAW;AAC/B,oBAAM,SAAS,IAAI,WAAW,MAAM;AACpC,oBAAM,YAAY,IAAI,WAAW,SAAS;AAAA,YAC9C;AAEA,iBAAK,kBAAkB,KAAK,IAAI;AAAA,UACpC;AAAA,UAEA,6BAA6B;AACzB,kBAAM,QAAQ,KAAK,yBAAyB,KAAK,sBAAsB;AAOvE,gBAAI,SAAS,MAAM,cAAc,IAAI;AACjC,oBAAM,UAAU,IAAI,WAAW;AAC/B,oBAAM,SAAS,IAAI,WAAW;AAC9B,oBAAM,YAAY,IAAI,WAAW;AAAA,YACrC;AAEA,iBAAK,2BAA2B,KAAK,IAAI;AAAA,UAC7C;AAAA,QACJ;AAGA,eAAO,KAAK,UAAU,IAAI,EAAE,QAAQ,cAAY;AAC5C,gBAAM,QAAQ,UAAU,KAAK,QAAQ;AAErC,kBAAQ,KAAK,IAAI,SAAS,IAAI;AAC1B,gBAAI,QAAQ,IAAI,oBAAoB;AACpC,iBAAK,KAAK,EAAE,KAAK,MAAM,EAAE;AAAA,UAC7B;AAAA,QACJ,CAAC;AAED,eAAO;AAAA,MACX;AAAA,IACJ;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACjJjB;AAAA;AAAA;AAEA,QAAM,QAAQ;AAEd,QAAM,oCAAN,cAAgD,MAAM;AAAA,MAClD,YAAY,OAAO,MAAM;AACrB,cAAM,KAAK;AAEX,aAAK,YAAY,KAAK;AAAA,MAC1B;AAAA,MAEA,sBAAsB,KAAK,MAAM;AAC7B,eAAO;AAAA,UACH,MAAM;AACF,gBAAI,UAAU,KAAK,OAAO;AAC1B,iBAAK,IAAI,KAAK,IAAI;AAAA,UACtB;AAAA,UAEA,wBAAwB;AACpB,qBAAS,IAAI,KAAK,UAAU,IAAI,GAAG,KAAK;AACpC,kBAAI,UAAU,KAAK,MAAM,CAAC,CAAC;AAAA,YAC/B;AAEA,iBAAK,sBAAsB,KAAK,IAAI;AAAA,UACxC;AAAA,UAEA,OAAOC,UAAS;AACZ,gBAAI,UAAU,KAAK,OAAO;AAC1B,iBAAK,OAAO,KAAK,MAAMA,QAAO;AAAA,UAClC;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO,UAAU;AAAA;AAAA;;;AClCjB;AAAA;AAAA;AAEA,QAAM,QAAQ;AACd,QAAM,YAAY;AAClB,QAAM,6BAA6B;AACnC,QAAM,oCAAoC;AAC1C,QAAM,OAAO;AAGb,QAAM,IAAI,KAAK;AAEf,QAAM,0BAAN,cAAsC,MAAM;AAAA,MACxC,YAAY,QAAQ;AAChB,cAAM,MAAM;AAEZ,aAAK,SAAS;AACd,aAAK,cAAc,KAAK,OAAO;AAC/B,aAAK,aAAa;AAClB,aAAK,oBAAoB;AACzB,aAAK,8BAA8B;AACnC,aAAK,eAAe;AAAA,MACxB;AAAA,MAEA,kBAAkBC,UAAS;AACvB,YAAI,MAAM;AAEV,YAAI,KAAK,mBAAmB;AACxB,gBAAM,OAAO,OAAO,CAAC,GAAG,KAAK,kBAAkB,QAAQ;AACvD,cAAI,WAAW,KAAK,kBAAkB;AAAA,QAC1C;AAEA,aAAK,YAAY,0BAA0BA,UAAS,GAAG;AAAA,MAC3D;AAAA,MAEA,gBAAgBA,UAAS,cAAc;AACnC,cAAM,MAAM,KAAK,YAAY,0BAA0BA,QAAO;AAE9D,YAAI,KAAK;AACL,cAAI,aAAa,UAAU;AACvB,kBAAM,QAAQ,aAAa;AAC3B,kBAAM,KAAK,KAAK,YAAY,WAAWA,QAAO;AAI9C,kBAAM,kBAAkB,aAAa,SAAS,UAAU,iBAAiB,OAAO,aAAa;AAC7F,kBAAM,SAAS,CAAC;AAChB,gBAAI,iBAAiB;AACjB,qBAAO,SAAS,OAAO,OAAO,CAAC,GAAG,KAAK;AACvC,qBAAO,UAAU,MAAM;AACvB,qBAAO,SAAS,MAAM;AACtB,qBAAO,YAAY,MAAM;AAAA,YAC7B,OAAO;AACH,qBAAO,UAAU,MAAM;AACvB,qBAAO,SAAS,MAAM;AACtB,qBAAO,YAAY,MAAM;AAAA,YAC7B;AAEA,iBAAK,YAAY,6BAA6BA,UAAS,MAAM;AAAA,UACjE;AAAA,QACJ;AAAA,MACJ;AAAA,MAEA,sBAAsB,KAAK,MAAM;AAC7B,eAAO;AAAA,UACH,WAAW,UAAU,iBAAiB;AAClC,iBAAK,WAAW,KAAK,MAAM,UAAU,eAAe;AAEpD,gBAAI,oBAAoB;AACxB,gBAAI,8BAA8B;AAClC,gBAAI,eAAe;AAEnB,kBAAM,iBAAiB,MAAM,QAAQ,KAAK,WAAW,0BAA0B;AAE/E,gBAAI,aAAa,eAAe;AAEhC,kBAAM,QAAQ,KAAK,cAAc,mCAAmC;AAAA,cAChE,WAAW,SAASA,UAAS;AACzB,oBAAI,gBAAgBA,UAAS,IAAI,YAAY;AAAA,cACjD;AAAA,YACJ,CAAC;AAAA,UACL;AAAA,UAEA,gBAAgB,eAAe;AAC3B,iBAAK,gBAAgB,KAAK,MAAM,aAAa;AAI7C,qBAAS,IAAI,KAAK,aAAa,UAAU,KAAK,GAAG,KAAK;AAClD,kBAAI,gBAAgB,KAAK,aAAa,MAAM,CAAC,GAAG,IAAI,YAAY;AAAA,YACpE;AAAA,UACJ;AAAA;AAAA,UAGA,8BAA8B,OAAO;AACjC,gBAAI,eAAe;AACnB,iBAAK,8BAA8B,KAAK,MAAM,KAAK;AAAA,UACvD;AAAA,UAEA,cAAc,OAAO;AACjB,gBAAI,eAAe;AACnB,iBAAK,cAAc,KAAK,MAAM,KAAK;AAInC,kBAAM,wBACF,MAAM,SAAS,UAAU,kBACxB,MAAM,YAAY,EAAE,QAAS,MAAM,YAAY,EAAE,QAAQ,KAAK,aAAa,WAAW,EAAE,IAAI;AAEjG,gBAAI,uBAAuB;AACvB,uBAAS,IAAI,KAAK,aAAa,UAAU,KAAK,GAAG,KAAK;AAClD,sBAAMA,WAAU,KAAK,aAAa,MAAM,CAAC;AAEzC,oBAAI,KAAK,YAAY,WAAWA,QAAO,MAAM,MAAM,SAAS;AACxD,sBAAI,gBAAgBA,UAAS,KAAK;AAClC;AAAA,gBACJ;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ;AAAA;AAAA,UAGA,iBAAiB,OAAO;AACpB,iBAAK,iBAAiB,KAAK,MAAM,KAAK;AAEtC,kBAAM,mBAAmB,KAAK,YAAY,cAAc,KAAK,QAAQ;AACrE,kBAAM,WAAW,iBAAiB;AAElC,qBAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AAC/B,oBAAMC,QAAO,iBAAiB,CAAC;AAE/B,kBAAI,KAAK,YAAY,mBAAmBA,KAAI,GAAG;AAC3C,qBAAK,YAAY,0BAA0BA,OAAM,MAAM,QAAQ;AAC/D;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ;AAAA;AAAA,UAGA,qBAAqBD,UAAS;AAG1B,gBAAI,kBAAkBA,QAAO;AAC7B,gBAAI,oBAAoB;AACxB,iBAAK,qBAAqB,KAAK,MAAMA,QAAO;AAAA,UAChD;AAAA,UAEA,eAAe,OAAO,cAAc;AAChC,gBAAI,oBAAoB;AACxB,iBAAK,eAAe,KAAK,MAAM,OAAO,YAAY;AAAA,UACtD;AAAA,UAEA,eAAe,OAAO,cAAc;AAChC,gBAAI,oBAAoB;AACxB,iBAAK,eAAe,KAAK,MAAM,OAAO,YAAY;AAAA,UACtD;AAAA,UAEA,gBAAgB,OAAO;AACnB,gBAAI,oBAAoB;AACxB,iBAAK,gBAAgB,KAAK,MAAM,KAAK;AAErC,kBAAM,cAAc,KAAK,YAAY,mBAAmB,KAAK,aAAa,OAAO;AAEjF,iBAAK,YAAY,0BAA0B,aAAa,IAAI;AAAA,UAChE;AAAA,UAEA,yBAAyB;AACrB,iBAAK,uBAAuB,KAAK,IAAI;AACrC,iBAAK,YAAY,0BAA0B,KAAK,aAAa,SAAS,IAAI;AAAA,UAC9E;AAAA;AAAA,UAGA,mBAAmB,OAAO,QAAQ;AAC9B,iBAAK,mBAAmB,KAAK,MAAM,OAAO,MAAM;AAEhD,kBAAM,WAAW,KAAK,YAAY,cAAc,MAAM;AACtD,kBAAM,cAAc,SAAS,SAAS,SAAS,CAAC;AAEhD,iBAAK,YAAY,0BAA0B,aAAa,MAAM,QAAQ;AAAA,UAC1E;AAAA;AAAA,UAGA,+BAA+B;AAG3B,gBAAI,8BAA8B,KAAK,6BAA6B,KAAK,IAAI;AAE7E,mBAAO,IAAI;AAAA,UACf;AAAA,UAEA,kBAAkB,OAAO;AACrB,iBAAK,kBAAkB,KAAK,MAAM,KAAK;AAEvC,kBAAM,kBAAkB,KAAK,+BAA+B;AAE5D,kBAAM,SACD,mBAAmB,IAAI,4BAA4B,UACpD,KAAK,aAAa,sBAClB,KAAK,aAAa;AAEtB,kBAAME,YAAW,KAAK,YAAY,cAAc,MAAM;AAEtD,kBAAM,cACF,mBAAmB,IAAI,4BAA4B,gBAC7CA,UAAS,QAAQ,IAAI,4BAA4B,aAAa,IAAI,IAClEA,UAAS,SAAS;AAE5B,kBAAM,WAAWA,UAAS,WAAW;AAGrC,kBAAM,QAAQ,KAAK,YAAY,0BAA0B,QAAQ;AAEjE,gBAAI,OAAO;AACP,oBAAM,EAAE,SAAS,QAAQ,UAAU,IAAI,MAAM;AAC7C,mBAAK,YAAY,6BAA6B,UAAU,EAAE,SAAS,QAAQ,UAAU,CAAC;AAAA,YAC1F,OAAO;AACH,mBAAK,YAAY,0BAA0B,UAAU,MAAM,QAAQ;AAAA,YACvE;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC9NjB;AAAA;AAAA;AAEA,QAAM,QAAQ;AAEd,QAAM,0BAAN,cAAsC,MAAM;AAAA,MACxC,YAAY,MAAM,MAAM;AACpB,cAAM,IAAI;AAEV,aAAK,aAAa;AAClB,aAAK,eAAe,KAAK;AAAA,MAC7B;AAAA,MAEA,kBAAkB,KAAK;AACnB,YAAI,YAAY,IAAI,UAAU,KAAK,WAAW;AAC9C,YAAI,WAAW,IAAI,SAAS,KAAK,WAAW;AAC5C,YAAI,cAAc,IAAI,YAAY,KAAK,WAAW;AAAA,MACtD;AAAA,MAEA,aAAaC,OAAM;AACf,cAAM,MAAM;AAAA,UACR,MAAMA;AAAA,UACN,WAAW;AAAA,UACX,UAAU;AAAA,UACV,aAAa;AAAA,UACb,SAAS;AAAA,UACT,QAAQ;AAAA,UACR,WAAW;AAAA,QACf;AAEA,aAAK,kBAAkB,GAAG;AAC1B,aAAK,aAAa,GAAG;AAAA,MACzB;AAAA,MAEA,sBAAsB,KAAK;AACvB,eAAO;AAAA,UACH,KAAKA,OAAM;AACP,gBAAI,aAAaA,KAAI;AAAA,UACzB;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC1CjB,IAAAC,8BAAA;AAAA;AAAA;AAEA,QAAM,0BAA0B;AAChC,QAAM,oCAAoC;AAC1C,QAAM,QAAQ;AAEd,QAAM,kCAAN,cAA8C,wBAAwB;AAAA,MAClE,YAAY,cAAc,MAAM;AAC5B,cAAM,cAAc,IAAI;AAExB,aAAK,aAAa,MAAM,QAAQ,cAAc,iCAAiC;AAC/E,aAAK,gBAAgB;AAAA,MACzB;AAAA,MAEA,aAAaC,OAAM;AAEf,YAAI,KAAK,kBAAkB,KAAK,WAAW,QAAQ;AAC/C,eAAK,gBAAgB,KAAK,WAAW;AACrC,gBAAM,aAAaA,KAAI;AAAA,QAC3B;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACvBjB,IAAAC,2BAAA;AAAA;AAAA;AAEA,QAAM,0BAA0B;AAChC,QAAM,kCAAkC;AACxC,QAAM,QAAQ;AAEd,QAAM,+BAAN,cAA2C,wBAAwB;AAAA,MAC/D,YAAY,WAAW,MAAM;AACzB,cAAM,WAAW,IAAI;AAErB,cAAM,oBAAoB,MAAM,QAAQ,UAAU,cAAc,iCAAiC,IAAI;AAErG,aAAK,aAAa,kBAAkB;AAAA,MACxC;AAAA,IACJ;AAEA,WAAO,UAAU;AAAA;AAAA;;;AChBjB,IAAAC,wBAAA;AAAA;AAAA;AAEA,QAAM,0BAA0B;AAChC,QAAM,+BAA+B;AACrC,QAAM,6BAA6B;AACnC,QAAM,QAAQ;AAEd,QAAM,4BAAN,cAAwC,wBAAwB;AAAA,MAC5D,YAAY,QAAQ,MAAM;AACtB,cAAM,QAAQ,IAAI;AAElB,aAAK,OAAO;AACZ,aAAK,QAAQ;AACb,aAAK,iBAAiB;AAAA,MAC1B;AAAA,MAEA,kBAAkB,KAAK;AACnB,YAAI,KAAK,OAAO;AACZ,cAAI,YAAY,KAAK,MAAM;AAC3B,cAAI,WAAW,KAAK,MAAM;AAC1B,cAAI,cAAc,KAAK,MAAM;AAE7B,cAAI,UAAU,KAAK,iBAAiB,KAAK,MAAM,YAAY,KAAK,MAAM;AACtE,cAAI,SAAS,KAAK,iBAAiB,KAAK,MAAM,WAAW,KAAK,MAAM;AACpE,cAAI,YAAY,KAAK,iBAAiB,KAAK,MAAM,cAAc,KAAK,MAAM;AAAA,QAC9E;AAAA,MACJ;AAAA,MAEA,sBAAsB,KAAK,MAAM;AAC7B,eAAO;AAAA,UACH,WAAW,UAAU,iBAAiB;AAClC,iBAAK,WAAW,KAAK,MAAM,UAAU,eAAe;AAEpD,kBAAM,QAAQ,KAAK,WAAW,8BAA8B,IAAI,IAAI;AACpE,kBAAM,QAAQ,KAAK,WAAW,0BAA0B;AAAA,UAC5D;AAAA,UAEA,mBAAmB,OAAO;AACtB,gBAAI,QAAQ,MAAM;AAElB,iBAAK,mBAAmB,KAAK,MAAM,KAAK;AAAA,UAC5C;AAAA,UAEA,KAAKC,OAAM,SAAS;AAChB,gBAAI,iBAAiB,WAAW,QAAQ;AACxC,gBAAI,aAAaA,KAAI;AAAA,UACzB;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACnDjB;AAAA;AAAA;AAEA,QAAM,EAAE,cAAc,IAAI;AAG1B,YAAQ,iBAAiB,WAAW;AAChC,aAAO;AAAA,QACH,UAAU;AAAA,QACV,MAAM,cAAc;AAAA,QACpB,YAAY,CAAC;AAAA,MACjB;AAAA,IACJ;AAEA,YAAQ,yBAAyB,WAAW;AACxC,aAAO;AAAA,QACH,UAAU;AAAA,QACV,YAAY,CAAC;AAAA,MACjB;AAAA,IACJ;AAEA,YAAQ,gBAAgB,SAAS,SAAS,cAAc,OAAO;AAC3D,aAAO;AAAA,QACH,UAAU;AAAA,QACV;AAAA,QACA;AAAA,QACA;AAAA,QACA,YAAY,CAAC;AAAA,QACb,YAAY;AAAA,MAChB;AAAA,IACJ;AAEA,YAAQ,oBAAoB,SAAS,MAAM;AACvC,aAAO;AAAA,QACH,UAAU;AAAA,QACV;AAAA,QACA,YAAY;AAAA,MAChB;AAAA,IACJ;AAEA,QAAM,iBAAiB,SAAS,OAAO;AACnC,aAAO;AAAA,QACH,UAAU;AAAA,QACV;AAAA,QACA,YAAY;AAAA,MAChB;AAAA,IACJ;AAGA,QAAM,cAAe,QAAQ,cAAc,SAAS,YAAY,SAAS;AACrE,iBAAW,WAAW,KAAK,OAAO;AAClC,cAAQ,aAAa;AAAA,IACzB;AAEA,QAAM,eAAgB,QAAQ,eAAe,SAAS,YAAY,SAAS,eAAe;AACtF,YAAM,eAAe,WAAW,WAAW,QAAQ,aAAa;AAEhE,iBAAW,WAAW,OAAO,cAAc,GAAG,OAAO;AACrD,cAAQ,aAAa;AAAA,IACzB;AAEA,YAAQ,qBAAqB,SAAS,iBAAiB,gBAAgB;AACnE,sBAAgB,UAAU;AAAA,IAC9B;AAEA,YAAQ,qBAAqB,SAAS,iBAAiB;AACnD,aAAO,gBAAgB;AAAA,IAC3B;AAEA,YAAQ,kBAAkB,SAAS,UAAU,MAAM,UAAU,UAAU;AACnE,UAAI,cAAc;AAElB,eAAS,IAAI,GAAG,IAAI,SAAS,WAAW,QAAQ,KAAK;AACjD,YAAI,SAAS,WAAW,CAAC,EAAE,aAAa,iBAAiB;AACrD,wBAAc,SAAS,WAAW,CAAC;AACnC;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,aAAa;AACb,oBAAY,OAAO;AACnB,oBAAY,WAAW;AACvB,oBAAY,WAAW;AAAA,MAC3B,OAAO;AACH,oBAAY,UAAU;AAAA,UAClB,UAAU;AAAA,UACV;AAAA,UACA;AAAA,UACA;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,IACJ;AAEA,YAAQ,kBAAkB,SAAS,UAAU,MAAM;AAC/C,eAAS,OAAO;AAAA,IACpB;AAEA,YAAQ,kBAAkB,SAAS,UAAU;AACzC,aAAO,SAAS;AAAA,IACpB;AAEA,YAAQ,aAAa,SAASC,OAAM;AAChC,UAAIA,MAAK,YAAY;AACjB,cAAM,MAAMA,MAAK,WAAW,WAAW,QAAQA,KAAI;AAEnD,QAAAA,MAAK,WAAW,WAAW,OAAO,KAAK,CAAC;AACxC,QAAAA,MAAK,aAAa;AAAA,MACtB;AAAA,IACJ;AAEA,YAAQ,aAAa,SAAS,YAAYC,OAAM;AAC5C,UAAI,WAAW,WAAW,QAAQ;AAC9B,cAAM,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS,CAAC;AAEvE,YAAI,SAAS,aAAa,SAAS;AAC/B,mBAAS,SAASA;AAClB;AAAA,QACJ;AAAA,MACJ;AAEA,kBAAY,YAAY,eAAeA,KAAI,CAAC;AAAA,IAChD;AAEA,YAAQ,mBAAmB,SAAS,YAAYA,OAAM,eAAe;AACjE,YAAM,WAAW,WAAW,WAAW,WAAW,WAAW,QAAQ,aAAa,IAAI,CAAC;AAEvF,UAAI,YAAY,SAAS,aAAa,SAAS;AAC3C,iBAAS,SAASA;AAAA,MACtB,OAAO;AACH,qBAAa,YAAY,eAAeA,KAAI,GAAG,aAAa;AAAA,MAChE;AAAA,IACJ;AAEA,YAAQ,kBAAkB,SAAS,WAAW,OAAO;AACjD,YAAM,oBAAoB,CAAC;AAE3B,eAAS,IAAI,GAAG,IAAI,UAAU,MAAM,QAAQ,KAAK;AAC7C,0BAAkB,KAAK,UAAU,MAAM,CAAC,EAAE,IAAI;AAAA,MAClD;AAEA,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,YAAI,kBAAkB,QAAQ,MAAM,CAAC,EAAE,IAAI,MAAM,IAAI;AACjD,oBAAU,MAAM,KAAK,MAAM,CAAC,CAAC;AAAA,QACjC;AAAA,MACJ;AAAA,IACJ;AAGA,YAAQ,gBAAgB,SAASD,OAAM;AACnC,aAAOA,MAAK,WAAW,CAAC;AAAA,IAC5B;AAEA,YAAQ,gBAAgB,SAASA,OAAM;AACnC,aAAOA,MAAK;AAAA,IAChB;AAEA,YAAQ,gBAAgB,SAASA,OAAM;AACnC,aAAOA,MAAK;AAAA,IAChB;AAEA,YAAQ,cAAc,SAASE,UAAS;AACpC,aAAOA,SAAQ;AAAA,IACnB;AAGA,YAAQ,aAAa,SAASA,UAAS;AACnC,aAAOA,SAAQ;AAAA,IACnB;AAEA,YAAQ,kBAAkB,SAASA,UAAS;AACxC,aAAOA,SAAQ;AAAA,IACnB;AAEA,YAAQ,qBAAqB,SAAS,UAAU;AAC5C,aAAO,SAAS;AAAA,IACpB;AAEA,YAAQ,wBAAwB,SAAS,aAAa;AAClD,aAAO,YAAY;AAAA,IACvB;AAEA,YAAQ,0BAA0B,SAAS,aAAa;AACpD,aAAO,YAAY;AAAA,IACvB;AAEA,YAAQ,8BAA8B,SAAS,aAAa;AACxD,aAAO,YAAY;AAAA,IACvB;AAEA,YAAQ,8BAA8B,SAAS,aAAa;AACxD,aAAO,YAAY;AAAA,IACvB;AAGA,YAAQ,aAAa,SAASF,OAAM;AAChC,aAAOA,MAAK,aAAa;AAAA,IAC7B;AAEA,YAAQ,gBAAgB,SAASA,OAAM;AACnC,aAAOA,MAAK,aAAa;AAAA,IAC7B;AAEA,YAAQ,qBAAqB,SAASA,OAAM;AACxC,aAAOA,MAAK,aAAa;AAAA,IAC7B;AAEA,YAAQ,gBAAgB,SAASA,OAAM;AACnC,aAAO,CAAC,CAACA,MAAK;AAAA,IAClB;AAGA,YAAQ,4BAA4B,SAASA,OAAMG,WAAU;AACzD,MAAAH,MAAK,qBAAqBG;AAAA,IAC9B;AAEA,YAAQ,4BAA4B,SAASH,OAAM;AAC/C,aAAOA,MAAK;AAAA,IAChB;AAEA,YAAQ,+BAA+B,SAASA,OAAM,aAAa;AAC/D,MAAAA,MAAK,qBAAqB,OAAO,OAAOA,MAAK,oBAAoB,WAAW;AAAA,IAChF;AAAA;AAAA;;;AC5NA;AAAA;AAAA;AAEA,WAAO,UAAU,SAAS,aAAa,UAAU,SAAS;AACtD,gBAAU,WAAW,uBAAO,OAAO,IAAI;AAEvC,aAAO,CAAC,UAAU,OAAO,EAAE,OAAO,CAAC,QAAQ,WAAW;AAClD,eAAO,KAAK,MAAM,EAAE,QAAQ,CAAAI,SAAO;AAC/B,iBAAOA,IAAG,IAAI,OAAOA,IAAG;AAAA,QAC5B,CAAC;AAED,eAAO;AAAA,MACX,GAAG,uBAAO,OAAO,IAAI,CAAC;AAAA,IAC1B;AAAA;AAAA;;;ACZA;AAAA;AAAA;AAEA,QAAM,EAAE,cAAc,IAAI;AAG1B,QAAM,qBAAqB;AAC3B,QAAM,kBAAkB;AACxB,QAAM,wBAAwB;AAE9B,QAAM,iCAAiC;AAAA,MACntF;AAAA,MACA;AAAA,IACJ,CAAC;AAED,QAAM,yBAAyB,CAAC,wCAAwC,sCAAsC,MAAM;AACpH,QAAM,oCAAoC,CAAC,oCAAoC,sCAAsC;AAErH,QAAM,mDAAmD,kCAAkC,OAAO;AAAA,MAC9F;AAAA,MACA;AAAA,IACJ,CAAC;AAGD,aAAS,iBAAiB,IAAI;AAC1B,YAAM,QAAQ,GAAG,QAAQ,GAAG,MAAM,KAAK,MAAM;AAE7C,aAAO,QAAQ,KAAK;AAAA,IACxB;AAEA,aAAS,UAAU,UAAU,UAAU;AACnC,eAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,YAAI,SAAS,QAAQ,SAAS,CAAC,CAAC,MAAM,GAAG;AACrC,iBAAO;AAAA,QACX;AAAA,MACJ;AAEA,aAAO;AAAA,IACX;AAGA,YAAQ,eAAe,SAAS,OAAO;AACnC,aACI,MAAM,SAAS,sBACf,MAAM,aAAa,SAClB,MAAM,aAAa,QAAQ,MAAM,aAAa;AAAA,IAEvD;AAEA,YAAQ,kBAAkB,SAAS,OAAO;AACtC,UAAI,MAAM,SAAS,oBAAoB;AACnC,eAAO,cAAc;AAAA,MACzB;AAEA,YAAM,WAAW,MAAM;AAEvB,UAAI,YAAY,SAAS,YAAY,MAAM,uBAAuB;AAC9D,eAAO,cAAc;AAAA,MACzB;AAEA,UAAI,WAAW,MAAM;AAErB,UAAI,aAAa,MAAM;AACnB,mBAAW,SAAS,YAAY;AAEhC,YAAI,uBAAuB,QAAQ,QAAQ,IAAI,IAAI;AAC/C,iBAAO,cAAc;AAAA,QACzB;AAEA,YAAI,WAAW,aAAa,OAAO,8CAA8C;AAEjF,YAAI,UAAU,UAAU,QAAQ,GAAG;AAC/B,iBAAO,cAAc;AAAA,QACzB;AAEA,mBACI,aAAa,OAAO,oCAAoC;AAE5D,YAAI,UAAU,UAAU,QAAQ,GAAG;AAC/B,iBAAO,cAAc;AAAA,QACzB;AAAA,MACJ;AAEA,aAAO,cAAc;AAAA,IACzB;AAEA,YAAQ,mBAAmB,SAAS,MAAM,UAAU,UAAU;AAC1D,UAAI,MAAM;AAEV,UAAI,MAAM;AACN,eAAO;AAAA,MACX;AAEA,UAAI,UAAU;AACV,eAAO,aAAa,iBAAiB,QAAQ;AAAA,MACjD,WAAW,UAAU;AACjB,eAAO;AAAA,MACX;AAEA,UAAI,aAAa,MAAM;AACnB,eAAO,MAAM,iBAAiB,QAAQ;AAAA,MAC1C;AAEA,aAAO;AAAA,IACX;AAAA;AAAA;;;ACjKA;AAAA;AAAA;AAEA,QAAM,YAAY;AAClB,QAAM,OAAO;AAGb,QAAM,IAAI,KAAK;AACf,QAAM,KAAK,KAAK;AAChB,QAAM,QAAQ,KAAK;AAGnB,QAAM,aAAa;AAAA,MACf,WAAW;AAAA,MACX,iBAAiB;AAAA,IACrB;AAGA,QAAM,sBAAsB;AAC5B,QAAM,+BAA+B;AACrC,QAAM,2BAA2B;AAAA,MAC7B,eAAe;AAAA,MACf,eAAe;AAAA,MACf,eAAe;AAAA,MACf,aAAa;AAAA,MACb,UAAU;AAAA,MACV,eAAe;AAAA,MACf,iBAAiB;AAAA,MACjB,UAAU;AAAA,MACV,aAAa;AAAA,MACb,UAAU;AAAA,MACV,mBAAmB;AAAA,MACnB,eAAe;AAAA,MACf,cAAc;AAAA,MACd,kBAAkB;AAAA,MAClB,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,cAAc;AAAA,MACd,mBAAmB;AAAA,MACnB,cAAc;AAAA,MACd,aAAa;AAAA,MACb,aAAa;AAAA,MACb,kBAAkB;AAAA,MAClB,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,qBAAqB;AAAA,MACrB,kBAAkB;AAAA,MAClB,cAAc;AAAA,MACd,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,eAAe;AAAA,MACf,qBAAqB;AAAA,MACrB,gBAAgB;AAAA,MAChB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,aAAa;AAAA,MACb,WAAW;AAAA,MACX,oBAAoB;AAAA,MACpB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,cAAc;AAAA,MACd,aAAa;AAAA,MACb,cAAc;AAAA,MACd,aAAa;AAAA,MACb,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,aAAa;AAAA,MACb,SAAS;AAAA,MACT,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,YAAY;AAAA,IAChB;AAEA,QAAM,2BAA2B;AAAA,MAC7B,iBAAiB,EAAE,QAAQ,SAAS,MAAM,WAAW,WAAW,GAAG,MAAM;AAAA,MACzE,iBAAiB,EAAE,QAAQ,SAAS,MAAM,WAAW,WAAW,GAAG,MAAM;AAAA,MACzE,cAAc,EAAE,QAAQ,SAAS,MAAM,QAAQ,WAAW,GAAG,MAAM;AAAA,MACnE,cAAc,EAAE,QAAQ,SAAS,MAAM,QAAQ,WAAW,GAAG,MAAM;AAAA,MACnE,cAAc,EAAE,QAAQ,SAAS,MAAM,QAAQ,WAAW,GAAG,MAAM;AAAA,MACnE,eAAe,EAAE,QAAQ,SAAS,MAAM,SAAS,WAAW,GAAG,MAAM;AAAA,MACrE,cAAc,EAAE,QAAQ,SAAS,MAAM,QAAQ,WAAW,GAAG,MAAM;AAAA,MACnE,YAAY,EAAE,QAAQ,OAAO,MAAM,QAAQ,WAAW,GAAG,IAAI;AAAA,MAC7D,YAAY,EAAE,QAAQ,OAAO,MAAM,QAAQ,WAAW,GAAG,IAAI;AAAA,MAC7D,aAAa,EAAE,QAAQ,OAAO,MAAM,SAAS,WAAW,GAAG,IAAI;AAAA,MAC/D,OAAO,EAAE,QAAQ,IAAI,MAAM,SAAS,WAAW,GAAG,MAAM;AAAA,MACxD,eAAe,EAAE,QAAQ,SAAS,MAAM,SAAS,WAAW,GAAG,MAAM;AAAA,IACzE;AAGA,QAAM,+BAAgC,QAAQ,+BAA+B;AAAA,MACzE,UAAU;AAAA,MACV,aAAa;AAAA,MACb,cAAc;AAAA,MACd,cAAc;AAAA,MACd,eAAe;AAAA,MACf,kBAAkB;AAAA,MAClB,UAAU;AAAA,MACV,SAAS;AAAA,MACT,eAAe;AAAA,MACf,qBAAqB;AAAA,MACrB,aAAa;AAAA,MACb,kBAAkB;AAAA,MAClB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,gBAAgB;AAAA,MAChB,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,SAAS;AAAA,MACT,gBAAgB;AAAA,MAChB,SAAS;AAAA,MACT,SAAS;AAAA,MACT,aAAa;AAAA,MACb,cAAc;AAAA,MACd,UAAU;AAAA,MACV,cAAc;AAAA,MACd,oBAAoB;AAAA,MACpB,aAAa;AAAA,MACb,QAAQ;AAAA,MACR,cAAc;AAAA,MACd,eAAe;AAAA,MACf,UAAU;AAAA,MACV,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,UAAU;AAAA,IACd;AAGA,QAAM,wBAAwB;AAAA,MAC1B,CAAC,EAAE,CAAC,GAAG;AAAA,MACP,CAAC,EAAE,GAAG,GAAG;AAAA,MACT,CAAC,EAAE,UAAU,GAAG;AAAA,MAChB,CAAC,EAAE,IAAI,GAAG;AAAA,MACV,CAAC,EAAE,EAAE,GAAG;AAAA,MACR,CAAC,EAAE,MAAM,GAAG;AAAA,MACZ,CAAC,EAAE,IAAI,GAAG;AAAA,MACV,CAAC,EAAE,EAAE,GAAG;AAAA,MACR,CAAC,EAAE,GAAG,GAAG;AAAA,MACT,CAAC,EAAE,EAAE,GAAG;AAAA,MACR,CAAC,EAAE,EAAE,GAAG;AAAA,MACR,CAAC,EAAE,EAAE,GAAG;AAAA,MACR,CAAC,EAAE,KAAK,GAAG;AAAA,MACX,CAAC,EAAE,EAAE,GAAG;AAAA,MACR,CAAC,EAAE,EAAE,GAAG;AAAA,MACR,CAAC,EAAE,EAAE,GAAG;AAAA,MACR,CAAC,EAAE,EAAE,GAAG;AAAA,MACR,CAAC,EAAE,EAAE,GAAG;AAAA,MACR,CAAC,EAAE,EAAE,GAAG;AAAA,MACR,CAAC,EAAE,IAAI,GAAG;AAAA,MACV,CAAC,EAAE,EAAE,GAAG;AAAA,MACR,CAAC,EAAE,CAAC,GAAG;AAAA,MACP,CAAC,EAAE,GAAG,GAAG;AAAA,MACT,CAAC,EAAE,EAAE,GAAG;AAAA,MACR,CAAC,EAAE,OAAO,GAAG;AAAA,MACb,CAAC,EAAE,IAAI,GAAG;AAAA,MACV,CAAC,EAAE,IAAI,GAAG;AAAA,MACV,CAAC,EAAE,IAAI,GAAG;AAAA,MACV,CAAC,EAAE,EAAE,GAAG;AAAA,MACR,CAAC,EAAE,CAAC,GAAG;AAAA,MACP,CAAC,EAAE,GAAG,GAAG;AAAA,MACT,CAAC,EAAE,IAAI,GAAG;AAAA,MACV,CAAC,EAAE,CAAC,GAAG;AAAA,MACP,CAAC,EAAE,KAAK,GAAG;AAAA,MACX,CAAC,EAAE,IAAI,GAAG;AAAA,MACV,CAAC,EAAE,MAAM,GAAG;AAAA,MACZ,CAAC,EAAE,MAAM,GAAG;AAAA,MACZ,CAAC,EAAE,GAAG,GAAG;AAAA,MACT,CAAC,EAAE,GAAG,GAAG;AAAA,MACT,CAAC,EAAE,KAAK,GAAG;AAAA,MACX,CAAC,EAAE,EAAE,GAAG;AAAA,MACR,CAAC,EAAE,CAAC,GAAG;AAAA,MACP,CAAC,EAAE,EAAE,GAAG;AAAA,MACR,CAAC,EAAE,GAAG,GAAG;AAAA,IACb;AAGA,YAAQ,aAAa,SAAS,eAAe;AACzC,YAAM,KAAK,cAAc;AACzB,YAAM,kBACF,OAAO,EAAE,SACR,UAAU,aAAa,eAAe,MAAM,KAAK,MAAM,QACpD,UAAU,aAAa,eAAe,MAAM,IAAI,MAAM,QACtD,UAAU,aAAa,eAAe,MAAM,IAAI,MAAM;AAE9D,aAAO,kBAAkB,OAAO,sBAAsB,EAAE;AAAA,IAC5D;AAGA,YAAQ,yBAAyB,SAAS,OAAO;AAC7C,eAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AACzC,YAAI,MAAM,MAAM,CAAC,EAAE,SAAS,qBAAqB;AAC7C,gBAAM,MAAM,CAAC,EAAE,OAAO;AACtB;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAEA,YAAQ,sBAAsB,SAAS,OAAO;AAC1C,eAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AACzC,cAAM,mBAAmB,yBAAyB,MAAM,MAAM,CAAC,EAAE,IAAI;AAErE,YAAI,kBAAkB;AAClB,gBAAM,MAAM,CAAC,EAAE,OAAO;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AAEA,YAAQ,sBAAsB,SAAS,OAAO;AAC1C,eAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AACzC,cAAM,oBAAoB,yBAAyB,MAAM,MAAM,CAAC,EAAE,IAAI;AAEtE,YAAI,mBAAmB;AACnB,gBAAM,MAAM,CAAC,EAAE,SAAS,kBAAkB;AAC1C,gBAAM,MAAM,CAAC,EAAE,OAAO,kBAAkB;AACxC,gBAAM,MAAM,CAAC,EAAE,YAAY,kBAAkB;AAAA,QACjD;AAAA,MACJ;AAAA,IACJ;AAEA,YAAQ,wBAAwB,SAAS,OAAO;AAC5C,YAAM,kBAAkB,6BAA6B,MAAM,OAAO;AAElE,UAAI,iBAAiB;AACjB,cAAM,UAAU;AAAA,MACpB;AAAA,IACJ;AAGA,aAAS,6BAA6B,IAAI,IAAI;AAC1C,aAAO,OAAO,GAAG,WAAW,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE;AAAA,IACrG;AAEA,aAAS,uBAAuB,IAAI,IAAI,OAAO;AAC3C,UAAI,OAAO,GAAG,UAAU,OAAO,EAAE,gBAAgB;AAC7C,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,cAAI,MAAM,CAAC,EAAE,SAAS,MAAM,UAAU;AAClC,kBAAM,QAAQ,MAAM,CAAC,EAAE,MAAM,YAAY;AAEzC,mBAAO,UAAU,WAAW,aAAa,UAAU,WAAW;AAAA,UAClE;AAAA,QACJ;AAAA,MACJ;AAEA,aAAO,OAAO,GAAG,QAAQ,OAAO,EAAE,kBAAkB,OAAO,EAAE,QAAQ,OAAO,EAAE;AAAA,IAClF;AAEA,YAAQ,qBAAqB,SAAS,IAAI,IAAI,OAAO,WAAW;AAC5D,WAAK,CAAC,aAAa,cAAc,GAAG,SAAS,uBAAuB,IAAI,IAAI,KAAK,GAAG;AAChF,eAAO;AAAA,MACX;AAEA,WAAK,CAAC,aAAa,cAAc,GAAG,WAAW,6BAA6B,IAAI,EAAE,GAAG;AACjF,eAAO;AAAA,MACX;AAEA,aAAO;AAAA,IACX;AAAA;AAAA;;;ACxQA;AAAA;AAAA;AAEA,QAAM,YAAY;AAClB,QAAM,mBAAmB;AACzB,QAAM,wBAAwB;AAC9B,QAAM,0BAA0B;AAChC,QAAM,4BAA4B;AAClC,QAAM,QAAQ;AACd,QAAM,qBAAqB;AAC3B,QAAM,eAAe;AACrB,QAAMC,WAAU;AAChB,QAAM,iBAAiB;AACvB,QAAM,MAAM;AACZ,QAAM,UAAU;AAChB,QAAM,OAAO;AAGb,QAAM,IAAI,KAAK;AACf,QAAM,KAAK,KAAK;AAChB,QAAM,QAAQ,KAAK;AAEnB,QAAM,kBAAkB;AAAA,MACpB,kBAAkB;AAAA,MAClB,wBAAwB;AAAA,MACxB,cAAc;AAAA,MACd,aAAa;AAAA,IACjB;AAGA,QAAM,oBAAoB;AAG1B,QAAM,qBAAqB;AAC3B,QAAM,qBAAqB;AAG3B,QAAM,eAAe;AACrB,QAAM,mBAAmB;AACzB,QAAM,mBAAmB;AACzB,QAAM,eAAe;AACrB,QAAM,yBAAyB;AAC/B,QAAM,kBAAkB;AACxB,QAAM,eAAe;AACrB,QAAM,YAAY;AAClB,QAAM,gBAAgB;AACtB,QAAM,qBAAqB;AAC3B,QAAM,kBAAkB;AACxB,QAAM,uBAAuB;AAC7B,QAAM,qBAAqB;AAC3B,QAAM,cAAc;AACpB,QAAM,eAAe;AACrB,QAAM,iBAAiB;AACvB,QAAM,0BAA0B;AAChC,QAAM,mBAAmB;AACzB,QAAM,kBAAkB;AACxB,QAAM,mBAAmB;AACzB,QAAM,sBAAsB;AAC5B,QAAM,wBAAwB;AAC9B,QAAM,4BAA4B;AAGlC,QAAM,2BAA2B;AAAA,MAC7B,CAAC,EAAE,EAAE,GAAG;AAAA,MACR,CAAC,EAAE,KAAK,GAAG;AAAA,MACX,CAAC,EAAE,KAAK,GAAG;AAAA,MACX,CAAC,EAAE,KAAK,GAAG;AAAA,MACX,CAAC,EAAE,OAAO,GAAG;AAAA,MACb,CAAC,EAAE,QAAQ,GAAG;AAAA,MACd,CAAC,EAAE,KAAK,GAAG;AAAA,MACX,CAAC,EAAE,IAAI,GAAG;AAAA,MACV,CAAC,EAAE,QAAQ,GAAG;AAAA,IAClB;AAGA,QAAM,qCAAqC;AAAA,MACvC,CAAC,EAAE,OAAO,GAAG;AAAA,MACb,CAAC,EAAE,QAAQ,GAAG;AAAA,MACd,CAAC,EAAE,KAAK,GAAG;AAAA,MACX,CAAC,EAAE,KAAK,GAAG;AAAA,MACX,CAAC,EAAE,KAAK,GAAG;AAAA,MACX,CAAC,EAAE,GAAG,GAAG;AAAA,MACT,CAAC,EAAE,EAAE,GAAG;AAAA,MACR,CAAC,EAAE,EAAE,GAAG;AAAA,MACR,CAAC,EAAE,EAAE,GAAG;AAAA,IACZ;AAGA,QAAM,iBAAiB;AAAA,MACnB,CAAC,YAAY,GAAG;AAAA,QACZ,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,gBAAgB,GAAG;AAAA,QAChB,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,gBAAgB,GAAG;AAAA,QAChB,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,YAAY,GAAG;AAAA,QACZ,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,sBAAsB,GAAG;AAAA,QACtB,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,eAAe,GAAG;AAAA,QACf,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,YAAY,GAAG;AAAA,QACZ,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,SAAS,GAAG;AAAA,QACT,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,aAAa,GAAG;AAAA,QACb,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,kBAAkB,GAAG;AAAA,QAClB,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,eAAe,GAAG;AAAA,QACf,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,oBAAoB,GAAG;AAAA,QACpB,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,kBAAkB,GAAG;AAAA,QAClB,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,WAAW,GAAG;AAAA,QACX,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,YAAY,GAAG;AAAA,QACZ,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,cAAc,GAAG;AAAA,QACd,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,uBAAuB,GAAG;AAAA,QACvB,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,gBAAgB,GAAG;AAAA,QAChB,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,eAAe,GAAG;AAAA,QACf,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,gBAAgB,GAAG;AAAA,QAChB,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,mBAAmB,GAAG;AAAA,QACnB,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,qBAAqB,GAAG;AAAA,QACrB,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,MACA,CAAC,yBAAyB,GAAG;AAAA,QACzB,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,oBAAoB,GAAG;AAAA,QAClC,CAAC,UAAU,0BAA0B,GAAG;AAAA,QACxC,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,eAAe,GAAG;AAAA,QAC7B,CAAC,UAAU,aAAa,GAAG;AAAA,QAC3B,CAAC,UAAU,SAAS,GAAG;AAAA,MAC3B;AAAA,IACJ;AAGA,QAAM,SAAN,MAAa;AAAA,MACT,YAAY,SAAS;AACjB,aAAK,UAAU,aAAa,iBAAiB,OAAO;AAEpD,aAAK,cAAc,KAAK,QAAQ;AAChC,aAAK,gBAAgB;AAErB,YAAI,KAAK,QAAQ,wBAAwB;AACrC,gBAAM,QAAQ,MAAM,uBAAuB;AAAA,QAC/C;AAEA,YAAI,KAAK,QAAQ,cAAc;AAC3B,gBAAM,QAAQ,MAAM,2BAA2B,EAAE,cAAc,KAAK,QAAQ,aAAa,CAAC;AAAA,QAC9F;AAAA,MACJ;AAAA;AAAA,MAGA,MAAMC,OAAM;AACR,cAAM,WAAW,KAAK,YAAY,eAAe;AAEjD,aAAK,WAAW,UAAU,IAAI;AAC9B,aAAK,UAAU,MAAMA,OAAM,IAAI;AAC/B,aAAK,gBAAgB,IAAI;AAEzB,eAAO;AAAA,MACX;AAAA,MAEA,cAAcA,OAAM,iBAAiB;AAGjC,YAAI,CAAC,iBAAiB;AAClB,4BAAkB,KAAK,YAAY,cAAc,EAAE,UAAU,GAAG,MAAM,CAAC,CAAC;AAAA,QAC5E;AAKA,cAAM,eAAe,KAAK,YAAY,cAAc,gBAAgB,GAAG,MAAM,CAAC,CAAC;AAE/E,aAAK,WAAW,cAAc,eAAe;AAE7C,YAAI,KAAK,YAAY,WAAW,eAAe,MAAM,EAAE,UAAU;AAC7D,eAAK,uBAAuB,gBAAgB;AAAA,QAChD;AAEA,aAAK,iCAAiC;AACtC,aAAK,uBAAuB;AAC5B,aAAK,oBAAoB;AACzB,aAAK,2BAA2B;AAChC,aAAK,UAAU,MAAMA,OAAM,IAAI;AAC/B,aAAK,gBAAgB,IAAI;AAEzB,cAAM,cAAc,KAAK,YAAY,cAAc,YAAY;AAC/D,cAAM,WAAW,KAAK,YAAY,uBAAuB;AAEzD,aAAK,YAAY,aAAa,QAAQ;AAEtC,eAAO;AAAA,MACX;AAAA;AAAA,MAGA,WAAW,UAAU,iBAAiB;AAClC,aAAK,YAAY,IAAI,UAAU,KAAK,OAAO;AAE3C,aAAK,UAAU;AAEf,aAAK,gBAAgB;AACrB,aAAK,wBAAwB;AAE7B,aAAK,WAAW;AAChB,aAAK,kBAAkB;AAEvB,aAAK,cAAc;AACnB,aAAK,cAAc;AAEnB,aAAK,eAAe,IAAI,iBAAiB,KAAK,UAAU,KAAK,WAAW;AACxE,aAAK,2BAA2B,IAAI,sBAAsB,KAAK,WAAW;AAE1E,aAAK,yBAAyB,CAAC;AAC/B,aAAK,4BAA4B;AACjC,aAAK,2BAA2B;AAEhC,aAAK,yBAAyB,CAAC;AAC/B,aAAK,wCAAwC;AAE7C,aAAK,aAAa;AAClB,aAAK,kBAAkB;AACvB,aAAK,yBAAyB;AAAA,MAClC;AAAA;AAAA,MAGA,OAAO;AAAA,MAEP;AAAA;AAAA,MAGA,gBAAgB,eAAe;AAC3B,eAAO,CAAC,KAAK,SAAS;AAClB,eAAK,yBAAyB;AAE9B,gBAAM,QAAQ,KAAK,UAAU,aAAa;AAE1C,cAAI,MAAM,SAAS,UAAU,mBAAmB;AAC5C;AAAA,UACJ;AAEA,cAAI,KAAK,iBAAiB;AACtB,iBAAK,kBAAkB;AAEvB,gBAAI,MAAM,SAAS,UAAU,8BAA8B,MAAM,MAAM,CAAC,MAAM,MAAM;AAChF,kBAAI,MAAM,MAAM,WAAW,GAAG;AAC1B;AAAA,cACJ;AAEA,oBAAM,QAAQ,MAAM,MAAM,OAAO,CAAC;AAAA,YACtC;AAAA,UACJ;AAEA,eAAK,mBAAmB,KAAK;AAE7B,cAAI,iBAAiB,KAAK,eAAe;AACrC;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,MAEA,8BAA8B,eAAe,eAAe;AACxD,aAAK,gBAAgB,aAAa;AAElC,YAAI,iBAAiB,KAAK,eAAe;AACrC,gBAAM,SAAS,KAAK;AAEpB,eAAK,gBAAgB;AAErB,wBAAc,MAAM;AAEpB;AAAA,QACJ;AAEA,YAAI,eAAe;AACf,wBAAc;AAAA,QAClB;AAAA,MACJ;AAAA;AAAA,MAGA,2BAA2B;AACvB,cAAM,UAAU,KAAK,2BAA2B;AAEhD,aAAK,UAAU,aACX,WACA,YAAY,KAAK,YACjB,KAAK,YAAY,gBAAgB,OAAO,MAAM,GAAG,QACjD,CAAC,KAAK,oBAAoB,OAAO;AAAA,MACzC;AAAA,MAEA,qBAAqB,cAAc,oBAAoB;AACnD,aAAK,eAAe,cAAc,GAAG,IAAI;AACzC,aAAK,UAAU,QAAQ;AACvB,aAAK,wBAAwB,KAAK;AAClC,aAAK,gBAAgB;AAAA,MACzB;AAAA,MAEA,2BAA2B;AACvB,aAAK,gBAAgB;AACrB,aAAK,wBAAwB;AAC7B,aAAK,UAAU,QAAQ,UAAU,KAAK;AAAA,MAC1C;AAAA;AAAA,MAGA,6BAA6B;AACzB,eAAO,KAAK,aAAa,aAAa,KAAK,KAAK,kBAC1C,KAAK,kBACL,KAAK,aAAa;AAAA,MAC5B;AAAA,MAEA,6BAA6B;AACzB,YAAIC,QAAO,KAAK;AAEhB,WAAG;AACC,cAAI,KAAK,YAAY,WAAWA,KAAI,MAAM,EAAE,MAAM;AAC9C,iBAAK,cAAcA;AACnB;AAAA,UACJ;AAEA,UAAAA,QAAO,KAAK,YAAY,cAAcA,KAAI;AAAA,QAC9C,SAASA;AAAA,MACb;AAAA,MAEA,mCAAmC;AAC/B,YAAI,KAAK,YAAY,gBAAgB,KAAK,eAAe,MAAM,GAAG,MAAM;AACpE,gBAAM,KAAK,KAAK,YAAY,WAAW,KAAK,eAAe;AAE3D,cAAI,OAAO,EAAE,SAAS,OAAO,EAAE,UAAU;AACrC,iBAAK,UAAU,QAAQ,UAAU,KAAK;AAAA,UAC1C,WACI,OAAO,EAAE,SACT,OAAO,EAAE,OACT,OAAO,EAAE,UACT,OAAO,EAAE,WACT,OAAO,EAAE,YACT,OAAO,EAAE,UACX;AACE,iBAAK,UAAU,QAAQ,UAAU,KAAK;AAAA,UAC1C,WAAW,OAAO,EAAE,QAAQ;AACxB,iBAAK,UAAU,QAAQ,UAAU,KAAK;AAAA,UAC1C,WAAW,OAAO,EAAE,WAAW;AAC3B,iBAAK,UAAU,QAAQ,UAAU,KAAK;AAAA,UAC1C;AAAA,QACJ;AAAA,MACJ;AAAA;AAAA,MAGA,iBAAiB,OAAO;AACpB,cAAM,OAAO,MAAM,QAAQ;AAC3B,cAAM,WAAW,MAAM,YAAY;AACnC,cAAM,WAAW,MAAM,YAAY;AAEnC,aAAK,YAAY,gBAAgB,KAAK,UAAU,MAAM,UAAU,QAAQ;AAAA,MAC5E;AAAA,MAEA,qBAAqBC,UAAS;AAC1B,YAAI,KAAK,+BAA+B,GAAG;AACvC,eAAK,qBAAqBA,QAAO;AAAA,QACrC,OAAO;AACH,gBAAM,SAAS,KAAK,aAAa,sBAAsB,KAAK,aAAa;AAEzE,eAAK,YAAY,YAAY,QAAQA,QAAO;AAAA,QAChD;AAAA,MACJ;AAAA,MAEA,eAAe,OAAO,cAAc;AAChC,cAAMA,WAAU,KAAK,YAAY,cAAc,MAAM,SAAS,cAAc,MAAM,KAAK;AAEvF,aAAK,qBAAqBA,QAAO;AAAA,MACrC;AAAA,MAEA,eAAe,OAAO,cAAc;AAChC,cAAMA,WAAU,KAAK,YAAY,cAAc,MAAM,SAAS,cAAc,MAAM,KAAK;AAEvF,aAAK,qBAAqBA,QAAO;AACjC,aAAK,aAAa,KAAKA,QAAO;AAAA,MAClC;AAAA,MAEA,mBAAmB,SAAS;AACxB,cAAMA,WAAU,KAAK,YAAY,cAAc,SAAS,GAAG,MAAM,CAAC,CAAC;AAEnE,aAAK,qBAAqBA,QAAO;AACjC,aAAK,aAAa,KAAKA,QAAO;AAAA,MAClC;AAAA,MAEA,gBAAgB,OAAO;AACnB,cAAM,OAAO,KAAK,YAAY,cAAc,MAAM,SAAS,GAAG,MAAM,MAAM,KAAK;AAC/E,cAAMC,WAAU,KAAK,YAAY,uBAAuB;AAExD,aAAK,YAAY,mBAAmB,MAAMA,QAAO;AACjD,aAAK,qBAAqB,IAAI;AAC9B,aAAK,aAAa,KAAK,IAAI;AAAA,MAC/B;AAAA,MAEA,yBAAyB;AACrB,cAAMD,WAAU,KAAK,YAAY,cAAc,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC;AAElE,aAAK,YAAY,YAAY,KAAK,aAAa,SAASA,QAAO;AAC/D,aAAK,aAAa,KAAKA,QAAO;AAAA,MAClC;AAAA,MAEA,mBAAmB,OAAO,QAAQ;AAC9B,cAAM,cAAc,KAAK,YAAY,kBAAkB,MAAM,IAAI;AAEjE,aAAK,YAAY,YAAY,QAAQ,WAAW;AAAA,MACpD;AAAA,MAEA,kBAAkB,OAAO;AACrB,YAAI,KAAK,+BAA+B,GAAG;AACvC,eAAK,kBAAkB,MAAM,KAAK;AAAA,QACtC,OAAO;AACH,gBAAM,SAAS,KAAK,aAAa,sBAAsB,KAAK,aAAa;AAEzE,eAAK,YAAY,WAAW,QAAQ,MAAM,KAAK;AAAA,QACnD;AAAA,MACJ;AAAA,MAEA,YAAY,OAAO,WAAW;AAC1B,iBAAS,QAAQ,KAAK,YAAY,cAAc,KAAK,GAAG,OAAO,QAAQ,KAAK,YAAY,cAAc,KAAK,GAAG;AAC1G,eAAK,YAAY,WAAW,KAAK;AACjC,eAAK,YAAY,YAAY,WAAW,KAAK;AAAA,QACjD;AAAA,MACJ;AAAA;AAAA,MAGA,oCAAoC,OAAO;AACvC,cAAM,UAAU,KAAK,2BAA2B;AAEhD,YAAI,CAAC,WAAW,YAAY,KAAK,UAAU;AACvC,iBAAO;AAAA,QACX;AAEA,cAAM,KAAK,KAAK,YAAY,gBAAgB,OAAO;AAEnD,YAAI,OAAO,GAAG,MAAM;AAChB,iBAAO;AAAA,QACX;AAEA,YACI,KAAK,YAAY,WAAW,OAAO,MAAM,EAAE,kBAC3C,OAAO,GAAG,UACV,MAAM,SAAS,UAAU,mBACzB,MAAM,YAAY,EAAE,KACtB;AACE,iBAAO;AAAA,QACX;AAEA,cAAM,mBACF,MAAM,SAAS,UAAU,mBACzB,MAAM,SAAS,UAAU,wBACzB,MAAM,SAAS,UAAU;AAE7B,cAAM,uBACF,MAAM,SAAS,UAAU,mBAAmB,MAAM,YAAY,EAAE,UAAU,MAAM,YAAY,EAAE;AAElG,aAAK,wBAAwB,qBAAqB,KAAK,oBAAoB,SAAS,GAAG,MAAM,GAAG;AAC5F,iBAAO;AAAA,QACX;AAEA,aACK,MAAM,SAAS,UAAU,mBAAmB,qBAC7C,KAAK,oBAAoB,SAAS,GAAG,IAAI,GAC3C;AACE,iBAAO;AAAA,QACX;AAEA,eAAO,MAAM,SAAS,UAAU;AAAA,MACpC;AAAA,MAEA,cAAc,OAAO;AACjB,uBAAe,KAAK,aAAa,EAAE,MAAM,IAAI,EAAE,MAAM,KAAK;AAAA,MAC9D;AAAA,MAEA,wBAAwB,OAAO;AAC3B,uBAAe,YAAY,EAAE,MAAM,IAAI,EAAE,MAAM,KAAK;AAAA,MACxD;AAAA,MAEA,8BAA8B,OAAO;AACjC,YAAI,MAAM,SAAS,UAAU,iBAAiB;AAC1C,oCAA0B,MAAM,KAAK;AAAA,QACzC,WAAW,MAAM,SAAS,UAAU,sBAAsB;AACtD,wCAA8B,MAAM,KAAK;AAAA,QAC7C,WAAW,MAAM,SAAS,UAAU,4BAA4B;AAC5D,2BAAiB,MAAM,KAAK;AAAA,QAChC,WAAW,MAAM,SAAS,UAAU,eAAe;AAC/C,wBAAc,MAAM,KAAK;AAAA,QAC7B,WAAW,MAAM,SAAS,UAAU,iBAAiB;AACjD,mCAAyB,MAAM,KAAK;AAAA,QACxC,WAAW,MAAM,SAAS,UAAU,eAAe;AAC/C,iCAAuB,MAAM,KAAK;AAAA,QACtC;AAAA,MACJ;AAAA,MAEA,mBAAmB,OAAO;AACtB,YAAI,KAAK,oCAAoC,KAAK,GAAG;AACjD,eAAK,8BAA8B,KAAK;AAAA,QAC5C,OAAO;AACH,eAAK,cAAc,KAAK;AAAA,QAC5B;AAEA,YAAI,MAAM,SAAS,UAAU,mBAAmB,MAAM,eAAe,CAAC,MAAM,gBAAgB;AACxF,eAAK,KAAK,IAAI,6CAA6C;AAAA,QAC/D;AAAA,MACJ;AAAA;AAAA,MAGA,oBAAoBA,UAAS,WAAW;AACpC,cAAM,KAAK,KAAK,YAAY,WAAWA,QAAO;AAC9C,cAAM,KAAK,KAAK,YAAY,gBAAgBA,QAAO;AACnD,cAAM,QAAQ,KAAK,YAAY,YAAYA,QAAO;AAElD,eAAO,eAAe,mBAAmB,IAAI,IAAI,OAAO,SAAS;AAAA,MACrE;AAAA;AAAA,MAGA,uCAAuC;AACnC,cAAM,aAAa,KAAK,yBAAyB;AAEjD,YAAI,YAAY;AACZ,cAAI,YAAY;AAChB,cAAI,QAAQ;AAEZ,aAAG;AACC;AACA,oBAAQ,KAAK,yBAAyB,QAAQ,SAAS;AAEvD,gBAAI,MAAM,SAAS,sBAAsB,gBAAgB,KAAK,aAAa,SAAS,MAAM,OAAO,GAAG;AAChG;AACA;AAAA,YACJ;AAAA,UACJ,SAAS,YAAY;AAErB,mBAAS,IAAI,WAAW,IAAI,YAAY,KAAK;AACzC,oBAAQ,KAAK,yBAAyB,QAAQ,CAAC;AAC/C,iBAAK,eAAe,MAAM,OAAO,KAAK,YAAY,gBAAgB,MAAM,OAAO,CAAC;AAChF,kBAAM,UAAU,KAAK,aAAa;AAAA,UACtC;AAAA,QACJ;AAAA,MACJ;AAAA;AAAA,MAGA,kBAAkB;AACd,aAAK,aAAa,uBAAuB;AACzC,aAAK,aAAa,wBAAwB;AAC1C,aAAK,yBAAyB,kBAAkB;AAChD,aAAK,gBAAgB;AAAA,MACzB;AAAA,MAEA,iBAAiB;AACb,aAAK,aAAa,oCAAoC,EAAE,CAAC;AACzD,aAAK,aAAa,sBAAsB,EAAE,CAAC;AAAA,MAC/C;AAAA;AAAA,MAGA,sBAAsB;AAClB,iBAAS,IAAI,KAAK,aAAa,UAAU,OAAO,OAAO,KAAK,GAAG,KAAK;AAChE,cAAIA,WAAU,KAAK,aAAa,MAAM,CAAC;AAEvC,cAAI,MAAM,GAAG;AACT,mBAAO;AAEP,gBAAI,KAAK,iBAAiB;AACtB,cAAAA,WAAU,KAAK;AAAA,YACnB;AAAA,UACJ;AAEA,gBAAM,KAAK,KAAK,YAAY,WAAWA,QAAO;AAC9C,gBAAM,mBAAmB,yBAAyB,EAAE;AAEpD,cAAI,kBAAkB;AAClB,iBAAK,gBAAgB;AACrB;AAAA,UACJ,WAAW,CAAC,SAAS,OAAO,EAAE,MAAM,OAAO,EAAE,KAAK;AAC9C,iBAAK,gBAAgB;AACrB;AAAA,UACJ,WAAW,CAAC,QAAQ,OAAO,EAAE,MAAM;AAC/B,iBAAK,gBAAgB;AACrB;AAAA,UACJ,WAAW,OAAO,EAAE,QAAQ;AACxB,iBAAK,6BAA6B,CAAC;AACnC;AAAA,UACJ,WAAW,OAAO,EAAE,UAAU;AAC1B,iBAAK,gBAAgB,KAAK;AAC1B;AAAA,UACJ,WAAW,OAAO,EAAE,MAAM;AACtB,iBAAK,gBAAgB,KAAK,cAAc,kBAAkB;AAC1D;AAAA,UACJ,WAAW,MAAM;AACb,iBAAK,gBAAgB;AACrB;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,MAEA,6BAA6B,WAAW;AACpC,YAAI,YAAY,GAAG;AACf,mBAAS,IAAI,YAAY,GAAG,IAAI,GAAG,KAAK;AACpC,kBAAM,WAAW,KAAK,aAAa,MAAM,CAAC;AAC1C,kBAAM,KAAK,KAAK,YAAY,WAAW,QAAQ;AAE/C,gBAAI,OAAO,EAAE,UAAU;AACnB;AAAA,YACJ,WAAW,OAAO,EAAE,OAAO;AACvB,mBAAK,gBAAgB;AACrB;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAEA,aAAK,gBAAgB;AAAA,MACzB;AAAA,MAEA,uBAAuB,MAAM;AACzB,aAAK,uBAAuB,KAAK,IAAI;AACrC,aAAK;AACL,aAAK,2BAA2B;AAAA,MACpC;AAAA,MAEA,wBAAwB;AACpB,aAAK,uBAAuB,IAAI;AAChC,aAAK;AACL,aAAK,2BAA2B,KAAK,uBAAuB,KAAK,yBAAyB;AAAA,MAC9F;AAAA;AAAA,MAGA,gCAAgCA,UAAS;AACrC,cAAM,KAAK,KAAK,YAAY,WAAWA,QAAO;AAE9C,eAAO,OAAO,EAAE,SAAS,OAAO,EAAE,SAAS,OAAO,EAAE,SAAS,OAAO,EAAE,SAAS,OAAO,EAAE;AAAA,MAC5F;AAAA,MAEA,iCAAiC;AAC7B,eAAO,KAAK,0BAA0B,KAAK,gCAAgC,KAAK,aAAa,OAAO;AAAA,MACxG;AAAA,MAEA,+BAA+B;AAC3B,cAAME,YAAW;AAAA,UACb,QAAQ;AAAA,UACR,eAAe;AAAA,QACnB;AAEA,iBAAS,IAAI,KAAK,aAAa,UAAU,KAAK,GAAG,KAAK;AAClD,gBAAM,cAAc,KAAK,aAAa,MAAM,CAAC;AAC7C,gBAAM,KAAK,KAAK,YAAY,WAAW,WAAW;AAClD,gBAAM,KAAK,KAAK,YAAY,gBAAgB,WAAW;AAEvD,cAAI,OAAO,EAAE,YAAY,OAAO,GAAG,MAAM;AACrC,YAAAA,UAAS,SAAS,KAAK,YAAY,mBAAmB,WAAW;AACjE;AAAA,UACJ,WAAW,OAAO,EAAE,OAAO;AACvB,YAAAA,UAAS,SAAS,KAAK,YAAY,cAAc,WAAW;AAE5D,gBAAIA,UAAS,QAAQ;AACjB,cAAAA,UAAS,gBAAgB;AAAA,YAC7B,OAAO;AACH,cAAAA,UAAS,SAAS,KAAK,aAAa,MAAM,IAAI,CAAC;AAAA,YACnD;AAEA;AAAA,UACJ;AAAA,QACJ;AAEA,YAAI,CAACA,UAAS,QAAQ;AAClB,UAAAA,UAAS,SAAS,KAAK,aAAa,MAAM,CAAC;AAAA,QAC/C;AAEA,eAAOA;AAAA,MACX;AAAA,MAEA,qBAAqBF,UAAS;AAC1B,cAAME,YAAW,KAAK,6BAA6B;AAEnD,YAAIA,UAAS,eAAe;AACxB,eAAK,YAAY,aAAaA,UAAS,QAAQF,UAASE,UAAS,aAAa;AAAA,QAClF,OAAO;AACH,eAAK,YAAY,YAAYA,UAAS,QAAQF,QAAO;AAAA,QACzD;AAAA,MACJ;AAAA,MAEA,kBAAkB,OAAO;AACrB,cAAME,YAAW,KAAK,6BAA6B;AAEnD,YAAIA,UAAS,eAAe;AACxB,eAAK,YAAY,iBAAiBA,UAAS,QAAQ,OAAOA,UAAS,aAAa;AAAA,QACpF,OAAO;AACH,eAAK,YAAY,WAAWA,UAAS,QAAQ,KAAK;AAAA,QACtD;AAAA,MACJ;AAAA;AAAA,MAGA,kBAAkBF,UAAS;AACvB,cAAM,KAAK,KAAK,YAAY,WAAWA,QAAO;AAC9C,cAAM,KAAK,KAAK,YAAY,gBAAgBA,QAAO;AAEnD,eAAO,KAAK,iBAAiB,EAAE,EAAE,EAAE;AAAA,MACvC;AAAA,IACJ;AAEA,WAAO,UAAU;AAOjB,aAAS,+BAA+BG,IAAG,OAAO;AAC9C,UAAI,yBAAyBA,GAAE,yBAAyB,kCAAkC,MAAM,OAAO;AAEvG,UAAI,wBAAwB;AACxB,YAAI,CAACA,GAAE,aAAa,SAAS,uBAAuB,OAAO,GAAG;AAC1D,UAAAA,GAAE,yBAAyB,YAAY,sBAAsB;AAC7D,mCAAyB;AAAA,QAC7B,WAAW,CAACA,GAAE,aAAa,WAAW,MAAM,OAAO,GAAG;AAClD,mCAAyB;AAAA,QAC7B;AAAA,MACJ,OAAO;AACH,4BAAoBA,IAAG,KAAK;AAAA,MAChC;AAEA,aAAO;AAAA,IACX;AAGA,aAAS,sBAAsBA,IAAG,wBAAwB;AACtD,UAAI,gBAAgB;AAEpB,eAAS,IAAIA,GAAE,aAAa,UAAU,KAAK,GAAG,KAAK;AAC/C,cAAMH,WAAUG,GAAE,aAAa,MAAM,CAAC;AAEtC,YAAIH,aAAY,uBAAuB,SAAS;AAC5C;AAAA,QACJ;AAEA,YAAIG,GAAE,kBAAkBH,QAAO,GAAG;AAC9B,0BAAgBA;AAAA,QACpB;AAAA,MACJ;AAEA,UAAI,CAAC,eAAe;AAChB,QAAAG,GAAE,aAAa,sBAAsB,uBAAuB,OAAO;AACnE,QAAAA,GAAE,yBAAyB,YAAY,sBAAsB;AAAA,MACjE;AAEA,aAAO;AAAA,IACX;AAGA,aAAS,YAAYA,IAAG,eAAe,mBAAmB;AACtD,UAAI,cAAc;AAClB,UAAI,cAAcA,GAAE,aAAa,kBAAkB,aAAa;AAEhE,eAAS,IAAI,GAAGH,WAAU,aAAaA,aAAY,mBAAmB,KAAKA,WAAU,aAAa;AAE9F,sBAAcG,GAAE,aAAa,kBAAkBH,QAAO;AAEtD,cAAM,eAAeG,GAAE,yBAAyB,gBAAgBH,QAAO;AACvE,cAAM,kBAAkB,gBAAgB,KAAK;AAC7C,cAAM,+BAA+B,CAAC,gBAAgB;AAEtD,YAAI,8BAA8B;AAC9B,cAAI,iBAAiB;AACjB,YAAAG,GAAE,yBAAyB,YAAY,YAAY;AAAA,UACvD;AAEA,UAAAA,GAAE,aAAa,OAAOH,QAAO;AAAA,QACjC,OAAO;AACH,UAAAA,WAAU,2BAA2BG,IAAG,YAAY;AAEpD,cAAI,gBAAgB,eAAe;AAC/B,YAAAA,GAAE,yBAAyB,WAAW;AAAA,UAC1C;AAEA,UAAAA,GAAE,YAAY,WAAW,WAAW;AACpC,UAAAA,GAAE,YAAY,YAAYH,UAAS,WAAW;AAC9C,wBAAcA;AAAA,QAClB;AAAA,MACJ;AAEA,aAAO;AAAA,IACX;AAGA,aAAS,2BAA2BG,IAAG,cAAc;AACjD,YAAM,KAAKA,GAAE,YAAY,gBAAgB,aAAa,OAAO;AAC7D,YAAM,aAAaA,GAAE,YAAY,cAAc,aAAa,MAAM,SAAS,IAAI,aAAa,MAAM,KAAK;AAEvG,MAAAA,GAAE,aAAa,QAAQ,aAAa,SAAS,UAAU;AACvD,mBAAa,UAAU;AAEvB,aAAO;AAAA,IACX;AAGA,aAAS,iCAAiCA,IAAG,gBAAgB,aAAa;AACtE,UAAIA,GAAE,gCAAgC,cAAc,GAAG;AACnD,QAAAA,GAAE,qBAAqB,WAAW;AAAA,MACtC,OAAO;AACH,cAAM,KAAKA,GAAE,YAAY,WAAW,cAAc;AAClD,cAAM,KAAKA,GAAE,YAAY,gBAAgB,cAAc;AAEvD,YAAI,OAAO,EAAE,YAAY,OAAO,GAAG,MAAM;AACrC,2BAAiBA,GAAE,YAAY,mBAAmB,cAAc;AAAA,QACpE;AAEA,QAAAA,GAAE,YAAY,YAAY,gBAAgB,WAAW;AAAA,MACzD;AAAA,IACJ;AAGA,aAAS,2BAA2BA,IAAG,eAAe,wBAAwB;AAC1E,YAAM,KAAKA,GAAE,YAAY,gBAAgB,uBAAuB,OAAO;AACvE,YAAM,QAAQ,uBAAuB;AACrC,YAAM,aAAaA,GAAE,YAAY,cAAc,MAAM,SAAS,IAAI,MAAM,KAAK;AAE7E,MAAAA,GAAE,YAAY,eAAe,UAAU;AACvC,MAAAA,GAAE,YAAY,YAAY,eAAe,UAAU;AAEnD,MAAAA,GAAE,yBAAyB,2BAA2B,YAAY,uBAAuB,KAAK;AAC9F,MAAAA,GAAE,yBAAyB,YAAY,sBAAsB;AAE7D,MAAAA,GAAE,aAAa,OAAO,uBAAuB,OAAO;AACpD,MAAAA,GAAE,aAAa,YAAY,eAAe,UAAU;AAAA,IACxD;AAGA,aAAS,mBAAmBA,IAAG,OAAO;AAClC,UAAI;AAEJ,eAAS,IAAI,GAAG,IAAI,oBAAoB,KAAK;AACzC,iCAAyB,+BAA+BA,IAAG,OAAO,sBAAsB;AAExF,YAAI,CAAC,wBAAwB;AACzB;AAAA,QACJ;AAEA,cAAM,gBAAgB,sBAAsBA,IAAG,sBAAsB;AAErE,YAAI,CAAC,eAAe;AAChB;AAAA,QACJ;AAEA,QAAAA,GAAE,yBAAyB,WAAW;AAEtC,cAAM,cAAc,YAAYA,IAAG,eAAe,uBAAuB,OAAO;AAChF,cAAM,iBAAiBA,GAAE,aAAa,kBAAkB,uBAAuB,OAAO;AAEtF,QAAAA,GAAE,YAAY,WAAW,WAAW;AACpC,yCAAiCA,IAAG,gBAAgB,WAAW;AAC/D,mCAA2BA,IAAG,eAAe,sBAAsB;AAAA,MACvE;AAAA,IACJ;AAIA,aAAS,cAAc;AAAA,IAEvB;AAEA,aAAS,iBAAiBA,IAAG;AACzB,MAAAA,GAAE,KAAK,IAAI,gBAAgB;AAAA,IAC/B;AAEA,aAAS,cAAcA,IAAG,OAAO;AAC7B,MAAAA,GAAE,mBAAmB,OAAOA,GAAE,aAAa,sBAAsBA,GAAE,aAAa,OAAO;AAAA,IAC3F;AAEA,aAAS,+BAA+BA,IAAG,OAAO;AAC9C,MAAAA,GAAE,mBAAmB,OAAOA,GAAE,aAAa,MAAM,CAAC,CAAC;AAAA,IACvD;AAEA,aAAS,wBAAwBA,IAAG,OAAO;AACvC,MAAAA,GAAE,mBAAmB,OAAOA,GAAE,QAAQ;AAAA,IAC1C;AAEA,aAAS,iBAAiBA,IAAG,OAAO;AAChC,MAAAA,GAAE,kBAAkB,KAAK;AAAA,IAC7B;AAEA,aAAS,YAAYA,IAAG;AACpB,MAAAA,GAAE,UAAU;AAAA,IAChB;AAIA,aAAS,qBAAqBA,IAAG,OAAO;AACpC,MAAAA,GAAE,iBAAiB,KAAK;AAExB,YAAM,OAAO,MAAM,cAAc,KAAK,cAAc,SAASN,SAAQ,gBAAgB,KAAK;AAE1F,UAAI,CAACA,SAAQ,aAAa,KAAK,GAAG;AAC9B,QAAAM,GAAE,KAAK,IAAI,oBAAoB;AAAA,MACnC;AAEA,MAAAA,GAAE,YAAY,gBAAgBA,GAAE,UAAU,IAAI;AAE9C,MAAAA,GAAE,gBAAgB;AAAA,IACtB;AAEA,aAAS,mBAAmBA,IAAG,OAAO;AAClC,MAAAA,GAAE,KAAK,IAAI,gBAAgB,EAAE,aAAa,KAAK,CAAC;AAChD,MAAAA,GAAE,YAAY,gBAAgBA,GAAE,UAAU,KAAK,cAAc,MAAM;AACnE,MAAAA,GAAE,gBAAgB;AAClB,MAAAA,GAAE,cAAc,KAAK;AAAA,IACzB;AAIA,aAAS,mBAAmBA,IAAG,OAAO;AAClC,UAAI,MAAM,YAAY,EAAE,MAAM;AAC1B,QAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAAA,GAAE,gBAAgB;AAAA,MACtB,OAAO;AACH,wBAAgBA,IAAG,KAAK;AAAA,MAC5B;AAAA,IACJ;AAEA,aAAS,iBAAiBA,IAAG,OAAO;AAChC,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,QAAQ,OAAO,EAAE,QAAQ,OAAO,EAAE,QAAQ,OAAO,EAAE,IAAI;AAChE,wBAAgBA,IAAG,KAAK;AAAA,MAC5B;AAAA,IACJ;AAEA,aAAS,gBAAgBA,IAAG,OAAO;AAC/B,MAAAA,GAAE,uBAAuB;AACzB,MAAAA,GAAE,gBAAgB;AAClB,MAAAA,GAAE,cAAc,KAAK;AAAA,IACzB;AAIA,aAAS,mBAAmBA,IAAG,OAAO;AAClC,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,MAAM;AACf,uBAAeA,IAAG,KAAK;AAAA,MAC3B,WAAW,OAAO,EAAE,MAAM;AACtB,QAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAAA,GAAE,cAAcA,GAAE,aAAa;AAC/B,QAAAA,GAAE,gBAAgB;AAAA,MACtB,OAAO;AACH,wBAAgBA,IAAG,KAAK;AAAA,MAC5B;AAAA,IACJ;AAEA,aAAS,iBAAiBA,IAAG,OAAO;AAChC,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,QAAQ,OAAO,EAAE,QAAQ,OAAO,EAAE,QAAQ,OAAO,EAAE,IAAI;AAChE,wBAAgBA,IAAG,KAAK;AAAA,MAC5B,OAAO;AACH,QAAAA,GAAE,KAAK,IAAI,gCAAgC;AAAA,MAC/C;AAAA,IACJ;AAEA,aAAS,gBAAgBA,IAAG,OAAO;AAC/B,MAAAA,GAAE,mBAAmB,EAAE,IAAI;AAC3B,MAAAA,GAAE,cAAcA,GAAE,aAAa;AAC/B,MAAAA,GAAE,gBAAgB;AAClB,MAAAA,GAAE,cAAc,KAAK;AAAA,IACzB;AAIA,aAAS,eAAeA,IAAG,OAAO;AAC9B,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,MAAM;AACf,uBAAeA,IAAG,KAAK;AAAA,MAC3B,WAAW,OAAO,EAAE,QAAQ,OAAO,EAAE,YAAY,OAAO,EAAE,WAAW,OAAO,EAAE,QAAQ,OAAO,EAAE,MAAM;AACjG,QAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,cAAM,iBAAiB;AAAA,MAC3B,WAAW,OAAO,EAAE,OAAO;AACvB,QAAAA,GAAE,qBAAqB,OAAO,UAAU,KAAK,MAAM;AAAA,MACvD,WAAW,OAAO,EAAE,UAAU;AAC1B,YAAIA,GAAE,QAAQ,kBAAkB;AAC5B,UAAAA,GAAE,qBAAqB,OAAO,UAAU,KAAK,OAAO;AAAA,QACxD,OAAO;AACH,UAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,UAAAA,GAAE,gBAAgB;AAAA,QACtB;AAAA,MACJ,WAAW,OAAO,EAAE,YAAY,OAAO,EAAE,OAAO;AAC5C,QAAAA,GAAE,qBAAqB,OAAO,UAAU,KAAK,OAAO;AAAA,MACxD,WAAW,OAAO,EAAE,QAAQ;AACxB,QAAAA,GAAE,qBAAqB,OAAO,UAAU,KAAK,WAAW;AAAA,MAC5D,WAAW,OAAO,EAAE,UAAU;AAC1B,QAAAA,GAAE,gBAAgB,OAAO,GAAG,IAAI;AAChC,QAAAA,GAAE,yBAAyB,aAAa;AACxC,QAAAA,GAAE,aAAa;AACf,QAAAA,GAAE,gBAAgB;AAClB,QAAAA,GAAE,uBAAuB,gBAAgB;AAAA,MAC7C,WAAW,OAAO,EAAE,MAAM;AACtB,QAAAA,GAAE,KAAK,IAAI,+BAA+B;AAAA,MAC9C,OAAO;AACH,oBAAYA,IAAG,KAAK;AAAA,MACxB;AAAA,IACJ;AAEA,aAAS,aAAaA,IAAG,OAAO;AAC5B,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,MAAM;AACf,QAAAA,GAAE,aAAa,IAAI;AACnB,QAAAA,GAAE,gBAAgB;AAAA,MACtB,WAAW,OAAO,EAAE,QAAQ,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM;AACtD,oBAAYA,IAAG,KAAK;AAAA,MACxB,WAAW,OAAO,EAAE,UAAU;AAC1B,YAAIA,GAAE,aAAa,YAAY,GAAG;AAC9B,UAAAA,GAAE,aAAa,iCAAiC;AAEhD,cAAIA,GAAE,aAAa,mBAAmB,EAAE,UAAU;AAC9C,YAAAA,GAAE,KAAK,IAAI,qCAAqC;AAAA,UACpD;AAEA,UAAAA,GAAE,aAAa,sBAAsB,EAAE,QAAQ;AAC/C,UAAAA,GAAE,yBAAyB,kBAAkB;AAC7C,UAAAA,GAAE,sBAAsB;AACxB,UAAAA,GAAE,oBAAoB;AAAA,QAC1B,OAAO;AACH,UAAAA,GAAE,KAAK,IAAI,gCAAgC;AAAA,QAC/C;AAAA,MACJ,OAAO;AACH,QAAAA,GAAE,KAAK,IAAI,gCAAgC;AAAA,MAC/C;AAAA,IACJ;AAEA,aAAS,YAAYA,IAAG,OAAO;AAC3B,MAAAA,GAAE,aAAa,IAAI;AACnB,MAAAA,GAAE,gBAAgB;AAClB,MAAAA,GAAE,cAAc,KAAK;AAAA,IACzB;AAIA,aAAS,uBAAuBA,IAAG,OAAO;AACtC,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,MAAM;AACf,uBAAeA,IAAG,KAAK;AAAA,MAC3B,WACI,OAAO,EAAE,YACT,OAAO,EAAE,WACT,OAAO,EAAE,QACT,OAAO,EAAE,QACT,OAAO,EAAE,QACT,OAAO,EAAE,YACT,OAAO,EAAE,OACX;AACE,uBAAeA,IAAG,KAAK;AAAA,MAC3B,WAAW,OAAO,EAAE,UAAU;AAC1B,QAAAA,GAAE,KAAK,IAAI,oBAAoB;AAAA,MACnC,OAAO;AACH,4BAAoBA,IAAG,KAAK;AAAA,MAChC;AAAA,IACJ;AAEA,aAAS,qBAAqBA,IAAG,OAAO;AACpC,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,UAAU;AACnB,QAAAA,GAAE,aAAa,IAAI;AACnB,QAAAA,GAAE,gBAAgB;AAAA,MACtB,WAAW,OAAO,EAAE,IAAI;AACpB,4BAAoBA,IAAG,KAAK;AAAA,MAChC,OAAO;AACH,QAAAA,GAAE,KAAK,IAAI,gCAAgC;AAAA,MAC/C;AAAA,IACJ;AAEA,aAAS,oBAAoBA,IAAG,OAAO;AACnC,YAAM,UACF,MAAM,SAAS,UAAU,YAAY,IAAI,2BAA2B,IAAI;AAE5E,MAAAA,GAAE,KAAK,OAAO;AACd,MAAAA,GAAE,aAAa,IAAI;AACnB,MAAAA,GAAE,gBAAgB;AAClB,MAAAA,GAAE,cAAc,KAAK;AAAA,IACzB;AAIA,aAAS,kBAAkBA,IAAG,OAAO;AACjC,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,MAAM;AACf,uBAAeA,IAAG,KAAK;AAAA,MAC3B,WAAW,OAAO,EAAE,MAAM;AACtB,QAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAAA,GAAE,aAAa;AACf,QAAAA,GAAE,gBAAgB;AAAA,MACtB,WAAW,OAAO,EAAE,UAAU;AAC1B,QAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAAA,GAAE,gBAAgB;AAAA,MACtB,WACI,OAAO,EAAE,QACT,OAAO,EAAE,YACT,OAAO,EAAE,WACT,OAAO,EAAE,QACT,OAAO,EAAE,QACT,OAAO,EAAE,YACT,OAAO,EAAE,UACT,OAAO,EAAE,SACT,OAAO,EAAE,YACT,OAAO,EAAE,OACX;AACE,QAAAA,GAAE,KAAK,IAAI,yBAAyB;AACpC,QAAAA,GAAE,aAAa,KAAKA,GAAE,WAAW;AACjC,uBAAeA,IAAG,KAAK;AACvB,QAAAA,GAAE,aAAa,OAAOA,GAAE,WAAW;AAAA,MACvC,WAAW,OAAO,EAAE,MAAM;AACtB,QAAAA,GAAE,KAAK,IAAI,+BAA+B;AAAA,MAC9C,OAAO;AACH,uBAAeA,IAAG,KAAK;AAAA,MAC3B;AAAA,IACJ;AAEA,aAAS,gBAAgBA,IAAG,OAAO;AAC/B,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,QAAQ,OAAO,EAAE,QAAQ,OAAO,EAAE,IAAI;AAC/C,uBAAeA,IAAG,KAAK;AAAA,MAC3B,WAAW,OAAO,EAAE,UAAU;AAC1B,qBAAaA,IAAG,KAAK;AAAA,MACzB,OAAO;AACH,QAAAA,GAAE,KAAK,IAAI,gCAAgC;AAAA,MAC/C;AAAA,IACJ;AAEA,aAAS,eAAeA,IAAG,OAAO;AAC9B,MAAAA,GAAE,mBAAmB,EAAE,IAAI;AAC3B,MAAAA,GAAE,gBAAgB;AAClB,MAAAA,GAAE,cAAc,KAAK;AAAA,IACzB;AAIA,aAAS,0BAA0BA,IAAG,OAAO;AACzC,MAAAA,GAAE,qCAAqC;AACvC,MAAAA,GAAE,kBAAkB,KAAK;AAAA,IAC7B;AAEA,aAAS,gBAAgBA,IAAG,OAAO;AAC/B,MAAAA,GAAE,qCAAqC;AACvC,MAAAA,GAAE,kBAAkB,KAAK;AACzB,MAAAA,GAAE,aAAa;AAAA,IACnB;AAEA,aAAS,mBAAmBA,IAAG,OAAO;AAClC,UAAIA,GAAE,aAAa,cAAc,GAAG;AAChC,QAAAA,GAAE,YAAY,gBAAgBA,GAAE,aAAa,MAAM,CAAC,GAAG,MAAM,KAAK;AAAA,MACtE;AAAA,IACJ;AAEA,aAAS,mBAAmBA,IAAG,OAAO;AAClC,YAAM,cAAcA,GAAE,aAAa,iCAAiC;AAEpE,UAAI,eAAeA,GAAE,aAAa,cAAc,GAAG;AAC/C,QAAAA,GAAE,aAAa;AACf,QAAAA,GAAE,YAAY,gBAAgB,aAAa,MAAM,KAAK;AAAA,MAC1D;AAAA,IACJ;AAEA,aAAS,uBAAuBA,IAAG,OAAO;AACtC,YAAM,cAAcA,GAAE,aAAa,iCAAiC;AAEpE,UAAIA,GAAE,cAAc,aAAa;AAC7B,QAAAA,GAAE,YAAY,WAAW,WAAW;AACpC,QAAAA,GAAE,aAAa,sBAAsB;AACrC,QAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAAA,GAAE,gBAAgB;AAAA,MACtB;AAAA,IACJ;AAEA,aAAS,sBAAsBA,IAAG,OAAO;AACrC,UAAIA,GAAE,aAAa,iBAAiB,EAAE,CAAC,GAAG;AACtC,QAAAA,GAAE,eAAe;AAAA,MACrB;AAEA,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAAA,IACnC;AAEA,aAAS,6BAA6BA,IAAG,OAAO;AAC5C,UAAIA,GAAE,aAAa,iBAAiB,EAAE,CAAC,GAAG;AACtC,QAAAA,GAAE,eAAe;AAAA,MACrB;AAEA,YAAM,KAAKA,GAAE,aAAa;AAE1B,UAAI,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,IAAI;AACxF,QAAAA,GAAE,aAAa,IAAI;AAAA,MACvB;AAEA,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAAA,IACnC;AAEA,aAAS,kBAAkBA,IAAG,OAAO;AACjC,UAAIA,GAAE,aAAa,iBAAiB,EAAE,CAAC,GAAG;AACtC,QAAAA,GAAE,eAAe;AAAA,MACrB;AAEA,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAG/B,MAAAA,GAAE,kBAAkB;AACpB,MAAAA,GAAE,aAAa;AAAA,IACnB;AAEA,aAAS,mBAAmBA,IAAG,OAAO;AAClC,YAAM,aAAaA,GAAE,aAAa,YAAY;AAE9C,UAAI,CAACA,GAAE,eAAe,YAAY;AAC9B,YAAIA,GAAE,aAAa,iBAAiB,EAAE,CAAC,GAAG;AACtC,UAAAA,GAAE,eAAe;AAAA,QACrB;AAEA,QAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAE/B,YAAI,CAAC,YAAY;AACb,UAAAA,GAAE,cAAcA,GAAE,aAAa;AAAA,QACnC;AAAA,MACJ;AAAA,IACJ;AAEA,aAAS,uBAAuBA,IAAG,OAAO;AACtC,MAAAA,GAAE,aAAa;AAEf,YAAM,KAAK,MAAM;AAEjB,eAAS,IAAIA,GAAE,aAAa,UAAU,KAAK,GAAG,KAAK;AAC/C,cAAMH,WAAUG,GAAE,aAAa,MAAM,CAAC;AACtC,cAAM,YAAYA,GAAE,YAAY,WAAWH,QAAO;AAClD,YAAI,UAAU;AAEd,YAAI,OAAO,EAAE,MAAM,cAAc,EAAE,IAAI;AACnC,oBAAU,EAAE;AAAA,QAChB,YAAY,OAAO,EAAE,MAAM,OAAO,EAAE,QAAQ,cAAc,EAAE,MAAM,cAAc,EAAE,KAAK;AACnF,oBAAU;AAAA,QACd;AAEA,YAAI,SAAS;AACT,UAAAG,GAAE,aAAa,oCAAoC,OAAO;AAC1D,UAAAA,GAAE,aAAa,sBAAsB,OAAO;AAC5C;AAAA,QACJ;AAEA,YAAI,cAAc,EAAE,WAAW,cAAc,EAAE,OAAO,cAAc,EAAE,KAAKA,GAAE,kBAAkBH,QAAO,GAAG;AACrG;AAAA,QACJ;AAAA,MACJ;AAEA,UAAIG,GAAE,aAAa,iBAAiB,EAAE,CAAC,GAAG;AACtC,QAAAA,GAAE,eAAe;AAAA,MACrB;AAEA,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAAA,IACnC;AAEA,aAAS,wBAAwBA,IAAG,OAAO;AACvC,UAAIA,GAAE,aAAa,iBAAiB,EAAE,CAAC,GAAG;AACtC,QAAAA,GAAE,eAAe;AAAA,MACrB;AAEA,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAAA,GAAE,UAAU,QAAQ,UAAU,KAAK;AAAA,IACvC;AAEA,aAAS,qBAAqBA,IAAG,OAAO;AACpC,UAAIA,GAAE,aAAa,WAAW,EAAE,MAAM,GAAG;AACrC,QAAAA,GAAE,aAAa,uBAAuB;AACtC,QAAAA,GAAE,aAAa,sBAAsB,EAAE,MAAM;AAAA,MACjD;AAEA,MAAAA,GAAE,qCAAqC;AACvC,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAAA,GAAE,aAAa;AAAA,IACnB;AAEA,aAAS,gBAAgBA,IAAG,OAAO;AAC/B,YAAM,qBAAqBA,GAAE,yBAAyB,kCAAkC,EAAE,CAAC;AAE3F,UAAI,oBAAoB;AACpB,2BAAmBA,IAAG,KAAK;AAC3B,QAAAA,GAAE,aAAa,OAAO,mBAAmB,OAAO;AAChD,QAAAA,GAAE,yBAAyB,YAAY,kBAAkB;AAAA,MAC7D;AAEA,MAAAA,GAAE,qCAAqC;AACvC,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAAA,GAAE,yBAAyB,YAAYA,GAAE,aAAa,SAAS,KAAK;AAAA,IACxE;AAEA,aAAS,gBAAgBA,IAAG,OAAO;AAC/B,MAAAA,GAAE,qCAAqC;AACvC,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAAA,GAAE,yBAAyB,YAAYA,GAAE,aAAa,SAAS,KAAK;AAAA,IACxE;AAEA,aAAS,mBAAmBA,IAAG,OAAO;AAClC,MAAAA,GAAE,qCAAqC;AAEvC,UAAIA,GAAE,aAAa,WAAW,EAAE,IAAI,GAAG;AACnC,2BAAmBA,IAAG,KAAK;AAC3B,QAAAA,GAAE,qCAAqC;AAAA,MAC3C;AAEA,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAAA,GAAE,yBAAyB,YAAYA,GAAE,aAAa,SAAS,KAAK;AAAA,IACxE;AAEA,aAAS,qBAAqBA,IAAG,OAAO;AACpC,MAAAA,GAAE,qCAAqC;AACvC,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAAA,GAAE,yBAAyB,aAAa;AACxC,MAAAA,GAAE,aAAa;AAAA,IACnB;AAEA,aAAS,oBAAoBA,IAAG,OAAO;AACnC,UACIA,GAAE,YAAY,gBAAgBA,GAAE,QAAQ,MAAM,KAAK,cAAc,UACjEA,GAAE,aAAa,iBAAiB,EAAE,CAAC,GACrC;AACE,QAAAA,GAAE,eAAe;AAAA,MACrB;AAEA,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAAA,GAAE,aAAa;AACf,MAAAA,GAAE,gBAAgB;AAAA,IACtB;AAEA,aAAS,mBAAmBA,IAAG,OAAO;AAClC,MAAAA,GAAE,qCAAqC;AACvC,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAAA,GAAE,aAAa;AACf,YAAM,iBAAiB;AAAA,IAC3B;AAEA,aAAS,oBAAoBA,IAAG,OAAO;AACnC,MAAAA,GAAE,qCAAqC;AACvC,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAE/B,YAAM,YAAY,UAAU,aAAa,OAAO,MAAM,IAAI;AAE1D,UAAI,CAAC,aAAa,UAAU,YAAY,MAAM,mBAAmB;AAC7D,QAAAA,GAAE,aAAa;AAAA,MACnB;AAEA,YAAM,iBAAiB;AAAA,IAC3B;AAEA,aAAS,oBAAoBA,IAAG,OAAO;AACnC,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,YAAM,iBAAiB;AAAA,IAC3B;AAEA,aAAS,iBAAiBA,IAAG,OAAO;AAChC,UAAIA,GAAE,aAAa,iBAAiB,EAAE,CAAC,GAAG;AACtC,QAAAA,GAAE,eAAe;AAAA,MACrB;AAEA,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAAA,GAAE,aAAa;AACf,YAAM,iBAAiB;AAAA,IAC3B;AAEA,aAAS,oBAAoBA,IAAG,OAAO;AACnC,YAAM,UAAU,EAAE;AAClB,yBAAmBA,IAAG,KAAK;AAAA,IAC/B;AAEA,aAAS,uBAAuBA,IAAG,OAAO;AACtC,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAG/B,MAAAA,GAAE,kBAAkB;AACpB,MAAAA,GAAE,UAAU,QAAQ,UAAU,KAAK;AACnC,MAAAA,GAAE,wBAAwBA,GAAE;AAC5B,MAAAA,GAAE,aAAa;AACf,MAAAA,GAAE,gBAAgB;AAAA,IACtB;AAEA,aAAS,kBAAkBA,IAAG,OAAO;AACjC,UAAIA,GAAE,aAAa,iBAAiB,EAAE,CAAC,GAAG;AACtC,QAAAA,GAAE,eAAe;AAAA,MACrB;AAEA,MAAAA,GAAE,qCAAqC;AACvC,MAAAA,GAAE,aAAa;AACf,MAAAA,GAAE,qBAAqB,OAAO,UAAU,KAAK,OAAO;AAAA,IACxD;AAEA,aAAS,qBAAqBA,IAAG,OAAO;AACpC,MAAAA,GAAE,aAAa;AACf,MAAAA,GAAE,qBAAqB,OAAO,UAAU,KAAK,OAAO;AAAA,IACxD;AAIA,aAAS,sBAAsBA,IAAG,OAAO;AACrC,MAAAA,GAAE,qBAAqB,OAAO,UAAU,KAAK,OAAO;AAAA,IACxD;AAEA,aAAS,qBAAqBA,IAAG,OAAO;AACpC,MAAAA,GAAE,qCAAqC;AACvC,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAAA,GAAE,aAAa;AAEf,UACIA,GAAE,kBAAkB,iBACpBA,GAAE,kBAAkB,mBACpBA,GAAE,kBAAkB,sBACpBA,GAAE,kBAAkB,eACpBA,GAAE,kBAAkB,cACtB;AACE,QAAAA,GAAE,gBAAgB;AAAA,MACtB,OAAO;AACH,QAAAA,GAAE,gBAAgB;AAAA,MACtB;AAAA,IACJ;AAEA,aAAS,uBAAuBA,IAAG,OAAO;AACtC,UAAIA,GAAE,aAAa,mBAAmB,EAAE,QAAQ;AAC5C,QAAAA,GAAE,aAAa,IAAI;AAAA,MACvB;AAEA,MAAAA,GAAE,qCAAqC;AACvC,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAAA,IACnC;AAEA,aAAS,iBAAiBA,IAAG,OAAO;AAChC,UAAIA,GAAE,aAAa,WAAW,EAAE,IAAI,GAAG;AACnC,QAAAA,GAAE,aAAa,uBAAuB;AAAA,MAC1C;AAEA,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAAA,IACnC;AAEA,aAAS,iBAAiBA,IAAG,OAAO;AAChC,UAAIA,GAAE,aAAa,WAAW,EAAE,IAAI,GAAG;AACnC,QAAAA,GAAE,aAAa,oCAAoC,EAAE,GAAG;AAAA,MAC5D;AAEA,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAAA,IACnC;AAEA,aAAS,mBAAmBA,IAAG,OAAO;AAClC,UAAIA,GAAE,aAAa,iBAAiB,EAAE,CAAC,GAAG;AACtC,QAAAA,GAAE,eAAe;AAAA,MACrB;AAEA,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAAA,IACnC;AAEA,aAAS,mBAAmBA,IAAG,OAAO;AAClC,MAAAA,GAAE,qCAAqC;AAEvC,qBAAe,uBAAuB,KAAK;AAC3C,qBAAe,oBAAoB,KAAK;AAExC,UAAI,MAAM,aAAa;AACnB,QAAAA,GAAE,eAAe,OAAO,GAAG,MAAM;AAAA,MACrC,OAAO;AACH,QAAAA,GAAE,eAAe,OAAO,GAAG,MAAM;AAAA,MACrC;AAEA,YAAM,iBAAiB;AAAA,IAC3B;AAEA,aAAS,kBAAkBA,IAAG,OAAO;AACjC,MAAAA,GAAE,qCAAqC;AAEvC,qBAAe,oBAAoB,KAAK;AACxC,qBAAe,oBAAoB,KAAK;AAExC,UAAI,MAAM,aAAa;AACnB,QAAAA,GAAE,eAAe,OAAO,GAAG,GAAG;AAAA,MAClC,OAAO;AACH,QAAAA,GAAE,eAAe,OAAO,GAAG,GAAG;AAAA,MAClC;AAEA,YAAM,iBAAiB;AAAA,IAC3B;AAEA,aAAS,sBAAsBA,IAAG,OAAO;AACrC,MAAAA,GAAE,qCAAqC;AACvC,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAAA,IACnC;AAIA,aAAS,eAAeA,IAAG,OAAO;AAC9B,YAAM,KAAK,MAAM;AAEjB,cAAQ,GAAG,QAAQ;AAAA,QACf,KAAK;AACD,cAAI,OAAO,EAAE,KAAK,OAAO,EAAE,KAAK,OAAO,EAAE,KAAK,OAAO,EAAE,GAAG;AACtD,4BAAgBA,IAAG,KAAK;AAAA,UAC5B,WAAW,OAAO,EAAE,GAAG;AACnB,kCAAsBA,IAAG,KAAK;AAAA,UAClC,WAAW,OAAO,EAAE,GAAG;AACnB,4BAAgBA,IAAG,KAAK;AAAA,UAC5B,OAAO;AACH,kCAAsBA,IAAG,KAAK;AAAA,UAClC;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,IAAI;AAC3C,kCAAsBA,IAAG,KAAK;AAAA,UAClC,WAAW,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,IAAI;AAC/F,yCAA6BA,IAAG,KAAK;AAAA,UACzC,WAAW,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,IAAI;AAClD,mCAAuBA,IAAG,KAAK;AAAA,UACnC,WAAW,OAAO,EAAE,MAAM,OAAO,EAAE,IAAI;AACnC,4BAAgBA,IAAG,KAAK;AAAA,UAC5B,WAAW,OAAO,EAAE,IAAI;AACpB,+BAAmBA,IAAG,KAAK;AAAA,UAC/B,WAAW,OAAO,EAAE,IAAI;AACpB,6BAAiBA,IAAG,KAAK;AAAA,UAC7B,WAAW,OAAO,EAAE,IAAI;AACpB,6BAAiBA,IAAG,KAAK;AAAA,UAC7B,WAAW,OAAO,EAAE,MAAM,OAAO,EAAE,IAAI;AACnC,6BAAiBA,IAAG,KAAK;AAAA,UAC7B,WAAW,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,IAAI;AAClD,kCAAsBA,IAAG,KAAK;AAAA,UAClC;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,OAAO,OAAO,EAAE,OAAO,OAAO,EAAE,KAAK;AAC9C,kCAAsBA,IAAG,KAAK;AAAA,UAClC,WAAW,OAAO,EAAE,KAAK;AACrB,8BAAkBA,IAAG,KAAK;AAAA,UAC9B,WAAW,OAAO,EAAE,KAAK;AACrB,4BAAgBA,IAAG,KAAK;AAAA,UAC5B,WAAW,OAAO,EAAE,OAAO,OAAO,EAAE,KAAK;AACrC,+BAAmBA,IAAG,KAAK;AAAA,UAC/B,WAAW,OAAO,EAAE,KAAK;AACrB,8BAAkBA,IAAG,KAAK;AAAA,UAC9B,WAAW,OAAO,EAAE,KAAK;AACrB,8BAAkBA,IAAG,KAAK;AAAA,UAC9B,WAAW,OAAO,EAAE,KAAK;AACrB,6BAAiBA,IAAG,KAAK;AAAA,UAC7B,WAAW,OAAO,EAAE,KAAK;AACrB,kCAAsBA,IAAG,KAAK;AAAA,UAClC;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,MAAM;AACf,+BAAmBA,IAAG,KAAK;AAAA,UAC/B,WAAW,OAAO,EAAE,QAAQ,OAAO,EAAE,QAAQ,OAAO,EAAE,MAAM;AACxD,2BAAeA,IAAG,KAAK;AAAA,UAC3B,WAAW,OAAO,EAAE,MAAM;AACtB,+BAAmBA,IAAG,KAAK;AAAA,UAC/B,WAAW,OAAO,EAAE,QAAQ,OAAO,EAAE,MAAM;AACvC,kCAAsBA,IAAG,KAAK;AAAA,UAClC,WAAW,OAAO,EAAE,MAAM;AACtB,+BAAmBA,IAAG,KAAK;AAAA,UAC/B,WAAW,OAAO,EAAE,QAAQ,OAAO,EAAE,MAAM;AACvC,4BAAgBA,IAAG,KAAK;AAAA,UAC5B,WAAW,OAAO,EAAE,MAAM;AACtB,+BAAmBA,IAAG,KAAK;AAAA,UAC/B,WAAW,OAAO,EAAE,MAAM;AACtB,+BAAmBA,IAAG,KAAK;AAAA,UAC/B,WAAW,OAAO,EAAE,MAAM;AACtB,+BAAmBA,IAAG,KAAK;AAAA,UAC/B,WAAW,OAAO,EAAE,MAAM;AACtB,+BAAmBA,IAAG,KAAK;AAAA,UAC/B,WAAW,OAAO,EAAE,MAAM;AACtB,kCAAsBA,IAAG,KAAK;AAAA,UAClC;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,SAAS,OAAO,EAAE,OAAO;AAClC,2BAAeA,IAAG,KAAK;AAAA,UAC3B,WAAW,OAAO,EAAE,OAAO;AACvB,kCAAsBA,IAAG,KAAK;AAAA,UAClC,WAAW,OAAO,EAAE,OAAO;AACvB,4BAAgBA,IAAG,KAAK;AAAA,UAC5B,WAAW,OAAO,EAAE,OAAO;AACvB,gCAAoBA,IAAG,KAAK;AAAA,UAChC,WAAW,OAAO,EAAE,OAAO;AACvB,+BAAmBA,IAAG,KAAK;AAAA,UAC/B,WAAW,OAAO,EAAE,OAAO;AACvB,gCAAoBA,IAAG,KAAK;AAAA,UAChC,WAAW,OAAO,EAAE,SAAS,OAAO,EAAE,OAAO;AACzC,gCAAoBA,IAAG,KAAK;AAAA,UAChC,WAAW,OAAO,EAAE,OAAO;AACvB,gCAAoBA,IAAG,KAAK;AAAA,UAChC,WAAW,OAAO,EAAE,SAAS,OAAO,EAAE,SAAS,OAAO,EAAE,SAAS,OAAO,EAAE,OAAO;AAC7E,kCAAsBA,IAAG,KAAK;AAAA,UAClC;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,QAAQ;AACjB,2BAAeA,IAAG,KAAK;AAAA,UAC3B,WACI,OAAO,EAAE,UACT,OAAO,EAAE,UACT,OAAO,EAAE,UACT,OAAO,EAAE,UACT,OAAO,EAAE,UACT,OAAO,EAAE,QACX;AACE,kCAAsBA,IAAG,KAAK;AAAA,UAClC,WAAW,OAAO,EAAE,QAAQ;AACxB,iCAAqBA,IAAG,KAAK;AAAA,UACjC,WAAW,OAAO,EAAE,UAAU,OAAO,EAAE,QAAQ;AAC3C,4BAAgBA,IAAG,KAAK;AAAA,UAC5B,WAAW,OAAO,EAAE,UAAU,OAAO,EAAE,QAAQ;AAC3C,iCAAqBA,IAAG,KAAK;AAAA,UACjC,WAAW,OAAO,EAAE,QAAQ;AACxB,+BAAmBA,IAAG,KAAK;AAAA,UAC/B,WAAW,OAAO,EAAE,QAAQ;AACxB,gCAAoBA,IAAG,KAAK;AAAA,UAChC,WAAW,OAAO,EAAE,QAAQ;AACxB,iCAAqBA,IAAG,KAAK;AAAA,UACjC,WAAW,OAAO,EAAE,QAAQ;AACxB,iCAAqBA,IAAG,KAAK;AAAA,UACjC,WAAW,OAAO,EAAE,QAAQ;AACxB,mCAAuBA,IAAG,KAAK;AAAA,UACnC,OAAO;AACH,kCAAsBA,IAAG,KAAK;AAAA,UAClC;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,SAAS;AAClB,2BAAeA,IAAG,KAAK;AAAA,UAC3B,WACI,OAAO,EAAE,WACT,OAAO,EAAE,WACT,OAAO,EAAE,WACT,OAAO,EAAE,WACT,OAAO,EAAE,SACX;AACE,kCAAsBA,IAAG,KAAK;AAAA,UAClC,WAAW,OAAO,EAAE,SAAS;AACzB,8BAAkBA,IAAG,KAAK;AAAA,UAC9B,WAAW,OAAO,EAAE,SAAS;AACzB,iCAAqBA,IAAG,KAAK;AAAA,UACjC,WAAW,OAAO,EAAE,SAAS;AACzB,kCAAsBA,IAAG,KAAK;AAAA,UAClC,WAAW,OAAO,EAAE,SAAS;AACzB,kCAAsBA,IAAG,KAAK;AAAA,UAClC;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,UAAU;AACnB,2BAAeA,IAAG,KAAK;AAAA,UAC3B,WAAW,OAAO,EAAE,UAAU;AAC1B,mCAAuBA,IAAG,KAAK;AAAA,UACnC,WAAW,OAAO,EAAE,UAAU;AAC1B,kCAAsBA,IAAG,KAAK;AAAA,UAClC,WAAW,OAAO,EAAE,UAAU;AAC1B,mCAAuBA,IAAG,KAAK;AAAA,UACnC,WAAW,OAAO,EAAE,UAAU;AAC1B,2BAAeA,IAAG,KAAK;AAAA,UAC3B,WAAW,OAAO,EAAE,UAAU;AAC1B,gBAAIA,GAAE,QAAQ,kBAAkB;AAC5B,oCAAsBA,IAAG,KAAK;AAAA,YAClC,OAAO;AACH,oCAAsBA,IAAG,KAAK;AAAA,YAClC;AAAA,UACJ,WAAW,OAAO,EAAE,UAAU;AAC1B,mCAAuBA,IAAG,KAAK;AAAA,UACnC,WAAW,OAAO,EAAE,UAAU;AAC1B,kCAAsBA,IAAG,KAAK;AAAA,UAClC;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,WAAW;AACpB,oCAAwBA,IAAG,KAAK;AAAA,UACpC,OAAO;AACH,kCAAsBA,IAAG,KAAK;AAAA,UAClC;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,cAAc,OAAO,EAAE,YAAY;AAC5C,kCAAsBA,IAAG,KAAK;AAAA,UAClC,OAAO;AACH,kCAAsBA,IAAG,KAAK;AAAA,UAClC;AAEA;AAAA,QAEJ;AACI,gCAAsBA,IAAG,KAAK;AAAA,MACtC;AAAA,IACJ;AAEA,aAAS,iBAAiBA,IAAG;AACzB,UAAIA,GAAE,aAAa,WAAW,EAAE,IAAI,GAAG;AACnC,QAAAA,GAAE,gBAAgB;AAAA,MACtB;AAAA,IACJ;AAEA,aAAS,iBAAiBA,IAAG,OAAO;AAChC,UAAIA,GAAE,aAAa,WAAW,EAAE,IAAI,GAAG;AACnC,QAAAA,GAAE,gBAAgB;AAClB,QAAAA,GAAE,cAAc,KAAK;AAAA,MACzB;AAAA,IACJ;AAEA,aAAS,oBAAoBA,IAAG,OAAO;AACnC,YAAM,KAAK,MAAM;AAEjB,UAAIA,GAAE,aAAa,WAAW,EAAE,GAAG;AAC/B,QAAAA,GAAE,aAAa,uBAAuB;AACtC,QAAAA,GAAE,aAAa,sBAAsB,EAAE;AAAA,MAC3C;AAAA,IACJ;AAEA,aAAS,iBAAiBA,IAAG;AACzB,YAAM,aAAaA,GAAE,aAAa,YAAY;AAC9C,YAAM,cAAcA,GAAE;AAEtB,UAAI,CAAC,YAAY;AACb,QAAAA,GAAE,cAAc;AAAA,MACpB;AAEA,WAAK,eAAe,eAAeA,GAAE,aAAa,WAAW,EAAE,IAAI,GAAG;AAClE,QAAAA,GAAE,aAAa,uBAAuB;AAEtC,YAAI,YAAY;AACZ,UAAAA,GAAE,aAAa,sBAAsB,EAAE,IAAI;AAAA,QAC/C,OAAO;AACH,UAAAA,GAAE,aAAa,OAAO,WAAW;AAAA,QACrC;AAAA,MACJ;AAAA,IACJ;AAEA,aAAS,cAAcA,IAAG;AACtB,UAAI,CAACA,GAAE,aAAa,iBAAiB,EAAE,CAAC,GAAG;AACvC,QAAAA,GAAE,mBAAmB,EAAE,CAAC;AAAA,MAC5B;AAEA,MAAAA,GAAE,eAAe;AAAA,IACrB;AAEA,aAAS,eAAeA,IAAG;AACvB,UAAIA,GAAE,aAAa,mBAAmB,EAAE,EAAE,GAAG;AACzC,QAAAA,GAAE,aAAa,oCAAoC,EAAE,EAAE;AACvD,QAAAA,GAAE,aAAa,sBAAsB,EAAE,EAAE;AAAA,MAC7C;AAAA,IACJ;AAEA,aAAS,eAAeA,IAAG,OAAO;AAC9B,YAAM,KAAK,MAAM;AAEjB,UAAIA,GAAE,aAAa,WAAW,EAAE,GAAG;AAC/B,QAAAA,GAAE,aAAa,oCAAoC,EAAE;AACrD,QAAAA,GAAE,aAAa,sBAAsB,EAAE;AAAA,MAC3C;AAAA,IACJ;AAEA,aAAS,2BAA2BA,IAAG;AACnC,UAAIA,GAAE,aAAa,yBAAyB,GAAG;AAC3C,QAAAA,GAAE,aAAa,uBAAuB;AACtC,QAAAA,GAAE,aAAa,6BAA6B;AAAA,MAChD;AAAA,IACJ;AAEA,aAAS,mBAAmBA,IAAG,OAAO;AAClC,YAAM,KAAK,MAAM;AAEjB,UAAIA,GAAE,aAAa,WAAW,EAAE,GAAG;AAC/B,QAAAA,GAAE,aAAa,uBAAuB;AACtC,QAAAA,GAAE,aAAa,sBAAsB,EAAE;AACvC,QAAAA,GAAE,yBAAyB,kBAAkB;AAAA,MACjD;AAAA,IACJ;AAEA,aAAS,eAAeA,IAAG;AACvB,MAAAA,GAAE,qCAAqC;AACvC,MAAAA,GAAE,mBAAmB,EAAE,EAAE;AACzB,MAAAA,GAAE,aAAa,IAAI;AACnB,MAAAA,GAAE,aAAa;AAAA,IACnB;AAEA,aAAS,oBAAoBA,IAAG,OAAO;AACnC,YAAM,KAAK,MAAM;AAEjB,eAAS,IAAIA,GAAE,aAAa,UAAU,IAAI,GAAG,KAAK;AAC9C,cAAMH,WAAUG,GAAE,aAAa,MAAM,CAAC;AAEtC,YAAIA,GAAE,YAAY,WAAWH,QAAO,MAAM,IAAI;AAC1C,UAAAG,GAAE,aAAa,oCAAoC,EAAE;AACrD,UAAAA,GAAE,aAAa,sBAAsBH,QAAO;AAC5C;AAAA,QACJ;AAEA,YAAIG,GAAE,kBAAkBH,QAAO,GAAG;AAC9B;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAIA,aAAS,aAAaG,IAAG,OAAO;AAC5B,YAAM,KAAK,MAAM;AAEjB,cAAQ,GAAG,QAAQ;AAAA,QACf,KAAK;AACD,cAAI,OAAO,EAAE,KAAK,OAAO,EAAE,KAAK,OAAO,EAAE,KAAK,OAAO,EAAE,KAAK,OAAO,EAAE,GAAG;AACpE,+BAAmBA,IAAG,KAAK;AAAA,UAC/B,WAAW,OAAO,EAAE,GAAG;AACnB,0BAAcA,IAAG,KAAK;AAAA,UAC1B,OAAO;AACH,gCAAoBA,IAAG,KAAK;AAAA,UAChC;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,IAAI;AAC3C,gCAAoBA,IAAG,KAAK;AAAA,UAChC,WAAW,OAAO,EAAE,IAAI;AACpB,2BAAeA,IAAG,KAAK;AAAA,UAC3B,WAAW,OAAO,EAAE,MAAM,OAAO,EAAE,IAAI;AACnC,2BAAeA,IAAG,KAAK;AAAA,UAC3B,WAAW,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,IAAI;AAC/F,uCAA2BA,IAAG,KAAK;AAAA,UACvC,WAAW,OAAO,EAAE,IAAI;AACpB,2BAAeA,IAAG,KAAK;AAAA,UAC3B,WAAW,OAAO,EAAE,MAAM,OAAO,EAAE,IAAI;AACnC,+BAAmBA,IAAG,KAAK;AAAA,UAC/B,OAAO;AACH,gCAAoBA,IAAG,KAAK;AAAA,UAChC;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,KAAK;AACd,+BAAmBA,IAAG,KAAK;AAAA,UAC/B,WAAW,OAAO,EAAE,OAAO,OAAO,EAAE,OAAO,OAAO,EAAE,OAAO,OAAO,EAAE,KAAK;AACrE,gCAAoBA,IAAG,KAAK;AAAA,UAChC,OAAO;AACH,gCAAoBA,IAAG,KAAK;AAAA,UAChC;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,MAAM;AACf,6BAAiBA,IAAG,KAAK;AAAA,UAC7B,WAAW,OAAO,EAAE,MAAM;AACtB,6BAAiBA,IAAG,KAAK;AAAA,UAC7B,WAAW,OAAO,EAAE,MAAM;AACtB,6BAAiBA,IAAG,KAAK;AAAA,UAC7B,WAAW,OAAO,EAAE,QAAQ,OAAO,EAAE,QAAQ,OAAO,EAAE,MAAM;AACxD,+BAAmBA,IAAG,KAAK;AAAA,UAC/B,WAAW,OAAO,EAAE,QAAQ,OAAO,EAAE,MAAM;AACvC,gCAAoBA,IAAG,KAAK;AAAA,UAChC,OAAO;AACH,gCAAoBA,IAAG,KAAK;AAAA,UAChC;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,OAAO;AAChB,gCAAoBA,IAAG,KAAK;AAAA,UAChC,WAAW,OAAO,EAAE,OAAO;AACvB,+BAAmBA,IAAG,KAAK;AAAA,UAC/B,OAAO;AACH,gCAAoBA,IAAG,KAAK;AAAA,UAChC;AAEA;AAAA,QAEJ,KAAK;AACD,cACI,OAAO,EAAE,UACT,OAAO,EAAE,UACT,OAAO,EAAE,UACT,OAAO,EAAE,UACT,OAAO,EAAE,UACT,OAAO,EAAE,QACX;AACE,gCAAoBA,IAAG,KAAK;AAAA,UAChC,WAAW,OAAO,EAAE,UAAU,OAAO,EAAE,QAAQ;AAC3C,+BAAmBA,IAAG,KAAK;AAAA,UAC/B,WAAW,OAAO,EAAE,UAAU,OAAO,EAAE,QAAQ;AAC3C,+BAAmBA,IAAG,KAAK;AAAA,UAC/B,OAAO;AACH,gCAAoBA,IAAG,KAAK;AAAA,UAChC;AAEA;AAAA,QAEJ,KAAK;AACD,cACI,OAAO,EAAE,WACT,OAAO,EAAE,WACT,OAAO,EAAE,WACT,OAAO,EAAE,WACT,OAAO,EAAE,WACT,OAAO,EAAE,SACX;AACE,gCAAoBA,IAAG,KAAK;AAAA,UAChC,WAAW,OAAO,EAAE,SAAS;AACzB,+BAAmBA,IAAG,KAAK;AAAA,UAC/B,OAAO;AACH,gCAAoBA,IAAG,KAAK;AAAA,UAChC;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,UAAU;AACnB,gCAAoBA,IAAG,KAAK;AAAA,UAChC,WAAW,OAAO,EAAE,UAAU;AAC1B,yBAAaA,IAAG,KAAK;AAAA,UACzB,OAAO;AACH,gCAAoBA,IAAG,KAAK;AAAA,UAChC;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,cAAc,OAAO,EAAE,YAAY;AAC5C,gCAAoBA,IAAG,KAAK;AAAA,UAChC,OAAO;AACH,gCAAoBA,IAAG,KAAK;AAAA,UAChC;AAEA;AAAA,QAEJ;AACI,8BAAoBA,IAAG,KAAK;AAAA,MACpC;AAAA,IACJ;AAEA,aAAS,UAAUA,IAAG,OAAO;AACzB,UAAIA,GAAE,4BAA4B,IAAI;AAClC,sBAAcA,IAAG,KAAK;AAAA,MAC1B,OAAO;AACH,QAAAA,GAAE,UAAU;AAAA,MAChB;AAAA,IACJ;AAIA,aAAS,aAAaA,IAAG,OAAO;AAC5B,UAAI,MAAM,YAAY,EAAE,QAAQ;AAC5B,QAAAA,GAAE,gBAAgBA,GAAE,aAAa;AAAA,MACrC;AAEA,MAAAA,GAAE,aAAa,IAAI;AACnB,MAAAA,GAAE,gBAAgBA,GAAE;AAAA,IACxB;AAEA,aAAS,UAAUA,IAAG,OAAO;AACzB,MAAAA,GAAE,KAAK,IAAI,kCAAkC;AAC7C,MAAAA,GAAE,aAAa,IAAI;AACnB,MAAAA,GAAE,gBAAgBA,GAAE;AACpB,MAAAA,GAAE,cAAc,KAAK;AAAA,IACzB;AAIA,aAAS,iBAAiBA,IAAG,OAAO;AAChC,YAAM,QAAQA,GAAE,aAAa;AAE7B,UAAI,UAAU,EAAE,SAAS,UAAU,EAAE,SAAS,UAAU,EAAE,SAAS,UAAU,EAAE,SAAS,UAAU,EAAE,IAAI;AACpG,QAAAA,GAAE,yBAAyB,CAAC;AAC5B,QAAAA,GAAE,wCAAwC;AAC1C,QAAAA,GAAE,wBAAwBA,GAAE;AAC5B,QAAAA,GAAE,gBAAgB;AAClB,QAAAA,GAAE,cAAc,KAAK;AAAA,MACzB,OAAO;AACH,qBAAaA,IAAG,KAAK;AAAA,MACzB;AAAA,IACJ;AAEA,aAAS,uBAAuBA,IAAG,OAAO;AACtC,MAAAA,GAAE,aAAa,wBAAwB;AACvC,MAAAA,GAAE,yBAAyB,aAAa;AACxC,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAAA,GAAE,gBAAgB;AAAA,IACtB;AAEA,aAAS,wBAAwBA,IAAG,OAAO;AACvC,MAAAA,GAAE,aAAa,wBAAwB;AACvC,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAAA,GAAE,gBAAgB;AAAA,IACtB;AAEA,aAAS,mBAAmBA,IAAG,OAAO;AAClC,MAAAA,GAAE,aAAa,wBAAwB;AACvC,MAAAA,GAAE,mBAAmB,EAAE,QAAQ;AAC/B,MAAAA,GAAE,gBAAgB;AAClB,MAAAA,GAAE,cAAc,KAAK;AAAA,IACzB;AAEA,aAAS,qBAAqBA,IAAG,OAAO;AACpC,MAAAA,GAAE,aAAa,wBAAwB;AACvC,MAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAAA,GAAE,gBAAgB;AAAA,IACtB;AAEA,aAAS,kBAAkBA,IAAG,OAAO;AACjC,MAAAA,GAAE,aAAa,wBAAwB;AACvC,MAAAA,GAAE,mBAAmB,EAAE,KAAK;AAC5B,MAAAA,GAAE,gBAAgB;AAClB,MAAAA,GAAE,cAAc,KAAK;AAAA,IACzB;AAEA,aAAS,qBAAqBA,IAAG,OAAO;AACpC,UAAIA,GAAE,aAAa,gBAAgB,EAAE,KAAK,GAAG;AACzC,QAAAA,GAAE,aAAa,sBAAsB,EAAE,KAAK;AAC5C,QAAAA,GAAE,oBAAoB;AACtB,QAAAA,GAAE,cAAc,KAAK;AAAA,MACzB;AAAA,IACJ;AAEA,aAAS,qBAAqBA,IAAG,OAAO;AACpC,YAAM,YAAY,UAAU,aAAa,OAAO,MAAM,IAAI;AAE1D,UAAI,aAAa,UAAU,YAAY,MAAM,mBAAmB;AAC5D,QAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAAA,MACnC,OAAO;AACH,qBAAaA,IAAG,KAAK;AAAA,MACzB;AAEA,YAAM,iBAAiB;AAAA,IAC3B;AAEA,aAAS,oBAAoBA,IAAG,OAAO;AACnC,UAAI,CAACA,GAAE,eAAeA,GAAE,aAAa,cAAc,GAAG;AAClD,QAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAAA,GAAE,cAAcA,GAAE,aAAa;AAC/B,QAAAA,GAAE,aAAa,IAAI;AAAA,MACvB;AAAA,IACJ;AAEA,aAAS,gBAAgBA,IAAG,OAAO;AAC/B,YAAM,KAAK,MAAM;AAEjB,cAAQ,GAAG,QAAQ;AAAA,QACf,KAAK;AACD,cAAI,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,IAAI;AAC3C,8BAAkBA,IAAG,KAAK;AAAA,UAC9B,OAAO;AACH,yBAAaA,IAAG,KAAK;AAAA,UACzB;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,KAAK;AACd,+BAAmBA,IAAG,KAAK;AAAA,UAC/B,OAAO;AACH,yBAAaA,IAAG,KAAK;AAAA,UACzB;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,MAAM;AACf,gCAAoBA,IAAG,KAAK;AAAA,UAChC,OAAO;AACH,yBAAaA,IAAG,KAAK;AAAA,UACzB;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,OAAO;AAChB,iCAAqBA,IAAG,KAAK;AAAA,UACjC,WAAW,OAAO,EAAE,OAAO;AACvB,2BAAeA,IAAG,KAAK;AAAA,UAC3B,WAAW,OAAO,EAAE,SAAS,OAAO,EAAE,SAAS,OAAO,EAAE,OAAO;AAC3D,iCAAqBA,IAAG,KAAK;AAAA,UACjC,WAAW,OAAO,EAAE,OAAO;AACvB,iCAAqBA,IAAG,KAAK;AAAA,UACjC,OAAO;AACH,yBAAaA,IAAG,KAAK;AAAA,UACzB;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,QAAQ;AACjB,2BAAeA,IAAG,KAAK;AAAA,UAC3B,OAAO;AACH,yBAAaA,IAAG,KAAK;AAAA,UACzB;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,SAAS;AAClB,mCAAuBA,IAAG,KAAK;AAAA,UACnC,OAAO;AACH,yBAAaA,IAAG,KAAK;AAAA,UACzB;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,OAAO,EAAE,UAAU;AACnB,oCAAwBA,IAAG,KAAK;AAAA,UACpC,WAAW,OAAO,EAAE,UAAU;AAC1B,2BAAeA,IAAG,KAAK;AAAA,UAC3B,OAAO;AACH,yBAAaA,IAAG,KAAK;AAAA,UACzB;AAEA;AAAA,QAEJ;AACI,uBAAaA,IAAG,KAAK;AAAA,MAC7B;AAAA,IACJ;AAEA,aAAS,cAAcA,IAAG,OAAO;AAC7B,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,OAAO;AAChB,YAAIA,GAAE,aAAa,gBAAgB,EAAE,KAAK,GAAG;AACzC,UAAAA,GAAE,aAAa,sBAAsB,EAAE,KAAK;AAC5C,UAAAA,GAAE,oBAAoB;AAAA,QAC1B;AAAA,MACJ,WAAW,OAAO,EAAE,UAAU;AAC1B,qBAAaA,IAAG,KAAK;AAAA,MACzB,WACI,OAAO,EAAE,QACT,OAAO,EAAE,WACT,OAAO,EAAE,OACT,OAAO,EAAE,YACT,OAAO,EAAE,QACT,OAAO,EAAE,SACT,OAAO,EAAE,MACT,OAAO,EAAE,SACT,OAAO,EAAE,MACT,OAAO,EAAE,SACT,OAAO,EAAE,IACX;AACE,qBAAaA,IAAG,KAAK;AAAA,MACzB;AAAA,IACJ;AAEA,aAAS,aAAaA,IAAG,OAAO;AAC5B,YAAM,4BAA4BA,GAAE;AAEpC,MAAAA,GAAE,yBAAyB;AAC3B,MAAAA,GAAE,wBAAwB,KAAK;AAC/B,MAAAA,GAAE,yBAAyB;AAAA,IAC/B;AAIA,aAAS,+BAA+BA,IAAG,OAAO;AAC9C,MAAAA,GAAE,uBAAuB,KAAK,KAAK;AAAA,IACvC;AAEA,aAAS,qBAAqBA,IAAG,OAAO;AACpC,MAAAA,GAAE,uBAAuB,KAAK,KAAK;AACnC,MAAAA,GAAE,wCAAwC;AAAA,IAC9C;AAEA,aAAS,iBAAiBA,IAAG,OAAO;AAChC,UAAI,IAAI;AAER,UAAIA,GAAE,uCAAuC;AACzC,eAAO,IAAIA,GAAE,uBAAuB,QAAQ,KAAK;AAC7C,uBAAaA,IAAGA,GAAE,uBAAuB,CAAC,CAAC;AAAA,QAC/C;AAAA,MACJ,OAAO;AACH,eAAO,IAAIA,GAAE,uBAAuB,QAAQ,KAAK;AAC7C,UAAAA,GAAE,kBAAkBA,GAAE,uBAAuB,CAAC,CAAC;AAAA,QACnD;AAAA,MACJ;AAEA,MAAAA,GAAE,gBAAgBA,GAAE;AACpB,MAAAA,GAAE,cAAc,KAAK;AAAA,IACzB;AAIA,aAAS,kBAAkBA,IAAG,OAAO;AACjC,YAAM,KAAK,MAAM;AAEjB,UACI,OAAO,EAAE,WACT,OAAO,EAAE,OACT,OAAO,EAAE,YACT,OAAO,EAAE,SACT,OAAO,EAAE,MACT,OAAO,EAAE,SACT,OAAO,EAAE,MACT,OAAO,EAAE,SACT,OAAO,EAAE,IACX;AACE,YAAIA,GAAE,aAAa,gBAAgB,EAAE,OAAO,GAAG;AAC3C,UAAAA,GAAE,aAAa,uBAAuB;AACtC,UAAAA,GAAE,aAAa,sBAAsB,EAAE,OAAO;AAC9C,UAAAA,GAAE,yBAAyB,kBAAkB;AAC7C,UAAAA,GAAE,gBAAgB;AAClB,UAAAA,GAAE,cAAc,KAAK;AAAA,QACzB;AAAA,MACJ,OAAO;AACH,uBAAeA,IAAG,KAAK;AAAA,MAC3B;AAAA,IACJ;AAEA,aAAS,gBAAgBA,IAAG,OAAO;AAC/B,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,WAAW,OAAO,EAAE,OAAO;AACpC,YAAIA,GAAE,aAAa,gBAAgB,EAAE,OAAO,GAAG;AAC3C,UAAAA,GAAE,aAAa,uBAAuB;AACtC,UAAAA,GAAE,aAAa,sBAAsB,EAAE,OAAO;AAC9C,UAAAA,GAAE,yBAAyB,kBAAkB;AAC7C,UAAAA,GAAE,gBAAgB;AAElB,cAAI,OAAO,EAAE,OAAO;AAChB,YAAAA,GAAE,cAAc,KAAK;AAAA,UACzB;AAAA,QACJ;AAAA,MACJ,WACI,OAAO,EAAE,QACT,OAAO,EAAE,OACT,OAAO,EAAE,YACT,OAAO,EAAE,QACT,OAAO,EAAE,SACT,OAAO,EAAE,MACT,OAAO,EAAE,SACT,OAAO,EAAE,MACT,OAAO,EAAE,SACT,OAAO,EAAE,IACX;AACE,qBAAaA,IAAG,KAAK;AAAA,MACzB;AAAA,IACJ;AAIA,aAAS,sBAAsBA,IAAG,OAAO;AACrC,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,MAAM;AACf,uBAAeA,IAAG,KAAK;AAAA,MAC3B,WAAW,OAAO,EAAE,KAAK;AACrB,QAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,cAAM,iBAAiB;AAAA,MAC3B,WAAW,OAAO,EAAE,UAAU;AAC1B,uBAAeA,IAAG,KAAK;AAAA,MAC3B,OAAO;AACH,2BAAmBA,IAAG,KAAK;AAAA,MAC/B;AAAA,IACJ;AAEA,aAAS,oBAAoBA,IAAG,OAAO;AACnC,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,UAAU;AACnB,YAAIA,GAAE,aAAa,mBAAmB,EAAE,UAAU;AAC9C,UAAAA,GAAE,aAAa,IAAI;AACnB,UAAAA,GAAE,gBAAgB;AAAA,QACtB;AAAA,MACJ,WAAW,OAAO,EAAE,UAAU;AAC1B,qBAAaA,IAAG,KAAK;AAAA,MACzB,WAAW,OAAO,EAAE,KAAK;AACrB,2BAAmBA,IAAG,KAAK;AAAA,MAC/B;AAAA,IACJ;AAEA,aAAS,mBAAmBA,IAAG,OAAO;AAClC,UAAIA,GAAE,aAAa,mBAAmB,EAAE,UAAU;AAC9C,QAAAA,GAAE,aAAa,IAAI;AACnB,QAAAA,GAAE,gBAAgB;AAClB,QAAAA,GAAE,cAAc,KAAK;AAAA,MACzB;AAAA,IACJ;AAIA,aAAS,oBAAoBA,IAAG,OAAO;AACnC,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,IAAI;AACb,QAAAA,GAAE,aAAa,4BAA4B;AAC3C,QAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAAA,GAAE,gBAAgB;AAAA,MACtB,WAAW,OAAO,EAAE,MAAM,OAAO,EAAE,IAAI;AACnC,QAAAA,GAAE,aAAa,4BAA4B;AAC3C,QAAAA,GAAE,mBAAmB,EAAE,EAAE;AACzB,QAAAA,GAAE,gBAAgB;AAClB,QAAAA,GAAE,cAAc,KAAK;AAAA,MACzB,WACI,OAAO,EAAE,WACT,OAAO,EAAE,OACT,OAAO,EAAE,YACT,OAAO,EAAE,SACT,OAAO,EAAE,SACT,OAAO,EAAE,OACX;AACE,YAAIA,GAAE,aAAa,gCAAgC,GAAG;AAClD,UAAAA,GAAE,aAAa,4BAA4B;AAC3C,UAAAA,GAAE,aAAa,IAAI;AACnB,UAAAA,GAAE,gBAAgB;AAClB,UAAAA,GAAE,cAAc,KAAK;AAAA,QACzB;AAAA,MACJ,OAAO;AACH,wBAAgBA,IAAG,KAAK;AAAA,MAC5B;AAAA,IACJ;AAEA,aAAS,kBAAkBA,IAAG,OAAO;AACjC,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,SAAS,OAAO,EAAE,SAAS,OAAO,EAAE,OAAO;AACpD,YAAIA,GAAE,aAAa,gBAAgB,EAAE,GAAG;AACpC,UAAAA,GAAE,aAAa,4BAA4B;AAC3C,UAAAA,GAAE,aAAa,IAAI;AACnB,UAAAA,GAAE,gBAAgB;AAAA,QACtB;AAAA,MACJ,WAAW,OAAO,EAAE,OAAO;AACvB,YAAIA,GAAE,aAAa,gCAAgC,GAAG;AAClD,UAAAA,GAAE,aAAa,4BAA4B;AAC3C,UAAAA,GAAE,aAAa,IAAI;AACnB,UAAAA,GAAE,gBAAgB;AAClB,UAAAA,GAAE,cAAc,KAAK;AAAA,QACzB;AAAA,MACJ,WACK,OAAO,EAAE,QAAQ,OAAO,EAAE,WAAW,OAAO,EAAE,OAAO,OAAO,EAAE,YAC9D,OAAO,EAAE,QAAQ,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,IAC3D;AACE,sBAAcA,IAAG,KAAK;AAAA,MAC1B;AAAA,IACJ;AAIA,aAAS,cAAcA,IAAG,OAAO;AAC7B,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,MAAM,OAAO,EAAE,IAAI;AAC5B,QAAAA,GAAE,aAAa,2BAA2B;AAC1C,QAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAAA,GAAE,gBAAgB;AAClB,QAAAA,GAAE,yBAAyB,aAAa;AAAA,MAC5C,WACI,OAAO,EAAE,WACT,OAAO,EAAE,OACT,OAAO,EAAE,YACT,OAAO,EAAE,SACT,OAAO,EAAE,SACT,OAAO,EAAE,SACT,OAAO,EAAE,IACX;AACE,YAAIA,GAAE,aAAa,gBAAgB,EAAE,EAAE,GAAG;AACtC,UAAAA,GAAE,aAAa,2BAA2B;AAC1C,UAAAA,GAAE,aAAa,IAAI;AACnB,UAAAA,GAAE,gBAAgB;AAClB,UAAAA,GAAE,cAAc,KAAK;AAAA,QACzB;AAAA,MACJ,OAAO;AACH,wBAAgBA,IAAG,KAAK;AAAA,MAC5B;AAAA,IACJ;AAEA,aAAS,YAAYA,IAAG,OAAO;AAC3B,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,IAAI;AACb,YAAIA,GAAE,aAAa,gBAAgB,EAAE,EAAE,GAAG;AACtC,UAAAA,GAAE,aAAa,2BAA2B;AAC1C,UAAAA,GAAE,aAAa,IAAI;AACnB,UAAAA,GAAE,gBAAgB;AAAA,QACtB;AAAA,MACJ,WAAW,OAAO,EAAE,OAAO;AACvB,YAAIA,GAAE,aAAa,gBAAgB,EAAE,EAAE,GAAG;AACtC,UAAAA,GAAE,aAAa,2BAA2B;AAC1C,UAAAA,GAAE,aAAa,IAAI;AACnB,UAAAA,GAAE,gBAAgB;AAClB,UAAAA,GAAE,cAAc,KAAK;AAAA,QACzB;AAAA,MACJ,WAAW,OAAO,EAAE,SAAS,OAAO,EAAE,SAAS,OAAO,EAAE,OAAO;AAC3D,YAAIA,GAAE,aAAa,gBAAgB,EAAE,KAAKA,GAAE,aAAa,gBAAgB,EAAE,EAAE,GAAG;AAC5E,UAAAA,GAAE,aAAa,2BAA2B;AAC1C,UAAAA,GAAE,aAAa,IAAI;AACnB,UAAAA,GAAE,gBAAgB;AAClB,UAAAA,GAAE,cAAc,KAAK;AAAA,QACzB;AAAA,MACJ,WACK,OAAO,EAAE,QAAQ,OAAO,EAAE,WAAW,OAAO,EAAE,OAAO,OAAO,EAAE,YAC9D,OAAO,EAAE,QAAQ,OAAO,EAAE,MAAM,OAAO,EAAE,IAC5C;AACE,sBAAcA,IAAG,KAAK;AAAA,MAC1B;AAAA,IACJ;AAIA,aAAS,eAAeA,IAAG,OAAO;AAC9B,YAAM,KAAK,MAAM;AAEjB,UACI,OAAO,EAAE,WACT,OAAO,EAAE,OACT,OAAO,EAAE,YACT,OAAO,EAAE,SACT,OAAO,EAAE,MACT,OAAO,EAAE,SACT,OAAO,EAAE,MACT,OAAO,EAAE,SACT,OAAO,EAAE,IACX;AACE,YAAIA,GAAE,aAAa,gBAAgB,EAAE,EAAE,KAAKA,GAAE,aAAa,gBAAgB,EAAE,EAAE,GAAG;AAC9E,UAAAA,GAAE,gBAAgB;AAClB,UAAAA,GAAE,cAAc,KAAK;AAAA,QACzB;AAAA,MACJ,OAAO;AACH,uBAAeA,IAAG,KAAK;AAAA,MAC3B;AAAA,IACJ;AAEA,aAAS,aAAaA,IAAG,OAAO;AAC5B,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,MAAM,OAAO,EAAE,IAAI;AAC5B,YAAIA,GAAE,aAAa,gBAAgB,EAAE,GAAG;AACpC,UAAAA,GAAE,aAAa,uBAAuB;AACtC,UAAAA,GAAE,aAAa,sBAAsB,EAAE;AACvC,UAAAA,GAAE,yBAAyB,kBAAkB;AAC7C,UAAAA,GAAE,gBAAgB;AAAA,QACtB;AAAA,MACJ,WAAW,OAAO,EAAE,SAAS,OAAO,EAAE,SAAS,OAAO,EAAE,SAAS,OAAO,EAAE,SAAS,OAAO,EAAE,IAAI;AAC5F,YAAIA,GAAE,aAAa,gBAAgB,EAAE,GAAG;AACpC,UAAAA,GAAE,gBAAgB;AAClB,UAAAA,GAAE,cAAc,KAAK;AAAA,QACzB;AAAA,MACJ,WAAW,OAAO,EAAE,QAAQ,OAAO,EAAE,WAAW,OAAO,EAAE,OAAO,OAAO,EAAE,YAAY,OAAO,EAAE,MAAM;AAChG,qBAAaA,IAAG,KAAK;AAAA,MACzB;AAAA,IACJ;AAIA,aAAS,iBAAiBA,IAAG,OAAO;AAChC,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,MAAM;AACf,uBAAeA,IAAG,KAAK;AAAA,MAC3B,WAAW,OAAO,EAAE,QAAQ;AACxB,YAAIA,GAAE,aAAa,mBAAmB,EAAE,QAAQ;AAC5C,UAAAA,GAAE,aAAa,IAAI;AAAA,QACvB;AAEA,QAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAAA,MACnC,WAAW,OAAO,EAAE,UAAU;AAC1B,YAAIA,GAAE,aAAa,mBAAmB,EAAE,QAAQ;AAC5C,UAAAA,GAAE,aAAa,IAAI;AAAA,QACvB;AAEA,YAAIA,GAAE,aAAa,mBAAmB,EAAE,UAAU;AAC9C,UAAAA,GAAE,aAAa,IAAI;AAAA,QACvB;AAEA,QAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAAA,MACnC,WAAW,OAAO,EAAE,SAAS,OAAO,EAAE,UAAU,OAAO,EAAE,YAAY,OAAO,EAAE,QAAQ;AAClF,YAAIA,GAAE,aAAa,iBAAiB,EAAE,MAAM,GAAG;AAC3C,UAAAA,GAAE,aAAa,sBAAsB,EAAE,MAAM;AAC7C,UAAAA,GAAE,oBAAoB;AAEtB,cAAI,OAAO,EAAE,QAAQ;AACjB,YAAAA,GAAE,cAAc,KAAK;AAAA,UACzB;AAAA,QACJ;AAAA,MACJ,WAAW,OAAO,EAAE,UAAU,OAAO,EAAE,UAAU;AAC7C,uBAAeA,IAAG,KAAK;AAAA,MAC3B;AAAA,IACJ;AAEA,aAAS,eAAeA,IAAG,OAAO;AAC9B,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,UAAU;AACnB,cAAM,kBAAkBA,GAAE,aAAa,MAAMA,GAAE,aAAa,WAAW,CAAC;AACxE,cAAM,oBAAoB,mBAAmBA,GAAE,YAAY,WAAW,eAAe;AAErF,YAAIA,GAAE,aAAa,mBAAmB,EAAE,UAAU,sBAAsB,EAAE,UAAU;AAChF,UAAAA,GAAE,aAAa,IAAI;AAAA,QACvB;AAEA,YAAIA,GAAE,aAAa,mBAAmB,EAAE,UAAU;AAC9C,UAAAA,GAAE,aAAa,IAAI;AAAA,QACvB;AAAA,MACJ,WAAW,OAAO,EAAE,QAAQ;AACxB,YAAIA,GAAE,aAAa,mBAAmB,EAAE,QAAQ;AAC5C,UAAAA,GAAE,aAAa,IAAI;AAAA,QACvB;AAAA,MACJ,WAAW,OAAO,EAAE,UAAUA,GAAE,aAAa,iBAAiB,EAAE,MAAM,GAAG;AACrE,QAAAA,GAAE,aAAa,sBAAsB,EAAE,MAAM;AAC7C,QAAAA,GAAE,oBAAoB;AAAA,MAC1B,WAAW,OAAO,EAAE,UAAU;AAC1B,qBAAaA,IAAG,KAAK;AAAA,MACzB;AAAA,IACJ;AAIA,aAAS,wBAAwBA,IAAG,OAAO;AACvC,YAAM,KAAK,MAAM;AAEjB,UACI,OAAO,EAAE,WACT,OAAO,EAAE,SACT,OAAO,EAAE,SACT,OAAO,EAAE,SACT,OAAO,EAAE,SACT,OAAO,EAAE,MACT,OAAO,EAAE,MACT,OAAO,EAAE,IACX;AACE,QAAAA,GAAE,aAAa,sBAAsB,EAAE,MAAM;AAC7C,QAAAA,GAAE,oBAAoB;AACtB,QAAAA,GAAE,cAAc,KAAK;AAAA,MACzB,OAAO;AACH,yBAAiBA,IAAG,KAAK;AAAA,MAC7B;AAAA,IACJ;AAEA,aAAS,sBAAsBA,IAAG,OAAO;AACrC,YAAM,KAAK,MAAM;AAEjB,UACI,OAAO,EAAE,WACT,OAAO,EAAE,SACT,OAAO,EAAE,SACT,OAAO,EAAE,SACT,OAAO,EAAE,SACT,OAAO,EAAE,MACT,OAAO,EAAE,MACT,OAAO,EAAE,IACX;AACE,YAAIA,GAAE,aAAa,gBAAgB,EAAE,GAAG;AACpC,UAAAA,GAAE,aAAa,sBAAsB,EAAE,MAAM;AAC7C,UAAAA,GAAE,oBAAoB;AACtB,UAAAA,GAAE,cAAc,KAAK;AAAA,QACzB;AAAA,MACJ,OAAO;AACH,uBAAeA,IAAG,KAAK;AAAA,MAC3B;AAAA,IACJ;AAIA,aAAS,mBAAmBA,IAAG,OAAO;AAClC,YAAM,KAAK,MAAM;AAEjB,UACI,OAAO,EAAE,QACT,OAAO,EAAE,YACT,OAAO,EAAE,WACT,OAAO,EAAE,QACT,OAAO,EAAE,QACT,OAAO,EAAE,YACT,OAAO,EAAE,UACT,OAAO,EAAE,SACT,OAAO,EAAE,YACT,OAAO,EAAE,OACX;AACE,uBAAeA,IAAG,KAAK;AAAA,MAC3B,OAAO;AACH,cAAM,mBAAmB,mCAAmC,EAAE,KAAK;AAEnE,QAAAA,GAAE,sBAAsB;AACxB,QAAAA,GAAE,uBAAuB,gBAAgB;AACzC,QAAAA,GAAE,gBAAgB;AAClB,QAAAA,GAAE,cAAc,KAAK;AAAA,MACzB;AAAA,IACJ;AAEA,aAAS,iBAAiBA,IAAG,OAAO;AAChC,UAAI,MAAM,YAAY,EAAE,UAAU;AAC9B,qBAAaA,IAAG,KAAK;AAAA,MACzB;AAAA,IACJ;AAEA,aAAS,cAAcA,IAAG,OAAO;AAC7B,UAAIA,GAAE,aAAa,YAAY,GAAG;AAC9B,QAAAA,GAAE,aAAa,sBAAsB,EAAE,QAAQ;AAC/C,QAAAA,GAAE,yBAAyB,kBAAkB;AAC7C,QAAAA,GAAE,sBAAsB;AACxB,QAAAA,GAAE,oBAAoB;AACtB,QAAAA,GAAE,cAAc,KAAK;AAAA,MACzB,OAAO;AACH,QAAAA,GAAE,UAAU;AAAA,MAChB;AAAA,IACJ;AAIA,aAAS,kBAAkBA,IAAG,OAAO;AACjC,UAAI,MAAM,YAAY,EAAE,MAAM;AAC1B,uBAAeA,IAAG,KAAK;AAAA,MAC3B,OAAO;AACH,uBAAeA,IAAG,KAAK;AAAA,MAC3B;AAAA,IACJ;AAEA,aAAS,gBAAgBA,IAAG,OAAO;AAC/B,UAAI,MAAM,YAAY,EAAE,MAAM;AAC1B,YAAI,CAACA,GAAE,iBAAiB;AACpB,UAAAA,GAAE,gBAAgB;AAAA,QACtB;AAAA,MACJ,OAAO;AACH,uBAAeA,IAAG,KAAK;AAAA,MAC3B;AAAA,IACJ;AAEA,aAAS,eAAeA,IAAG,OAAO;AAC9B,MAAAA,GAAE,gBAAgB;AAClB,MAAAA,GAAE,cAAc,KAAK;AAAA,IACzB;AAIA,aAAS,mBAAmBA,IAAG,OAAO;AAClC,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,MAAM;AACf,uBAAeA,IAAG,KAAK;AAAA,MAC3B,WAAW,OAAO,EAAE,UAAU;AAC1B,QAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAAA,MACnC,WAAW,OAAO,EAAE,OAAO;AACvB,QAAAA,GAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,cAAM,iBAAiB;AAAA,MAC3B,WAAW,OAAO,EAAE,UAAU;AAC1B,uBAAeA,IAAG,KAAK;AAAA,MAC3B;AAAA,IACJ;AAEA,aAAS,iBAAiBA,IAAG,OAAO;AAChC,UAAI,MAAM,YAAY,EAAE,YAAY,CAACA,GAAE,aAAa,yBAAyB,GAAG;AAC5E,QAAAA,GAAE,aAAa,IAAI;AAEnB,YAAI,CAACA,GAAE,mBAAmBA,GAAE,aAAa,mBAAmB,EAAE,UAAU;AACpE,UAAAA,GAAE,gBAAgB;AAAA,QACtB;AAAA,MACJ;AAAA,IACJ;AAIA,aAAS,sBAAsBA,IAAG,OAAO;AACrC,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,MAAM;AACf,uBAAeA,IAAG,KAAK;AAAA,MAC3B,WAAW,OAAO,EAAE,UAAU;AAC1B,uBAAeA,IAAG,KAAK;AAAA,MAC3B;AAAA,IACJ;AAEA,aAAS,oBAAoBA,IAAG,OAAO;AACnC,UAAI,MAAM,YAAY,EAAE,MAAM;AAC1B,QAAAA,GAAE,gBAAgB;AAAA,MACtB;AAAA,IACJ;AAIA,aAAS,uBAAuBA,IAAG,OAAO;AACtC,UAAI,MAAM,YAAY,EAAE,MAAM;AAC1B,uBAAeA,IAAG,KAAK;AAAA,MAC3B,OAAO;AACH,4BAAoBA,IAAG,KAAK;AAAA,MAChC;AAAA,IACJ;AAEA,aAAS,oBAAoBA,IAAG,OAAO;AACnC,MAAAA,GAAE,gBAAgB;AAClB,MAAAA,GAAE,cAAc,KAAK;AAAA,IACzB;AAIA,aAAS,2BAA2BA,IAAG,OAAO;AAC1C,YAAM,KAAK,MAAM;AAEjB,UAAI,OAAO,EAAE,MAAM;AACf,uBAAeA,IAAG,KAAK;AAAA,MAC3B,WAAW,OAAO,EAAE,UAAU;AAC1B,uBAAeA,IAAG,KAAK;AAAA,MAC3B;AAAA,IACJ;AAIA,aAAS,8BAA8BA,IAAG,OAAO;AAC7C,YAAM,QAAQ,QAAQ;AACtB,MAAAA,GAAE,kBAAkB,KAAK;AAAA,IAC7B;AAEA,aAAS,0BAA0BA,IAAG,OAAO;AACzC,MAAAA,GAAE,kBAAkB,KAAK;AACzB,MAAAA,GAAE,aAAa;AAAA,IACnB;AAEA,aAAS,yBAAyBA,IAAG,OAAO;AACxC,UAAI,eAAe,WAAW,KAAK,KAAK,CAACA,GAAE,iBAAiB;AACxD,eACIA,GAAE,YAAY,gBAAgBA,GAAE,aAAa,OAAO,MAAM,GAAG,QAC7D,CAACA,GAAE,oBAAoBA,GAAE,aAAa,OAAO,GAC/C;AACE,UAAAA,GAAE,aAAa,IAAI;AAAA,QACvB;AAEA,QAAAA,GAAE,cAAc,KAAK;AAAA,MACzB,OAAO;AACH,cAAM,UAAUA,GAAE,2BAA2B;AAC7C,cAAM,YAAYA,GAAE,YAAY,gBAAgB,OAAO;AAEvD,YAAI,cAAc,GAAG,QAAQ;AACzB,yBAAe,uBAAuB,KAAK;AAAA,QAC/C,WAAW,cAAc,GAAG,KAAK;AAC7B,yBAAe,sBAAsB,KAAK;AAC1C,yBAAe,oBAAoB,KAAK;AAAA,QAC5C;AAEA,uBAAe,oBAAoB,KAAK;AAExC,YAAI,MAAM,aAAa;AACnB,UAAAA,GAAE,eAAe,OAAO,SAAS;AAAA,QACrC,OAAO;AACH,UAAAA,GAAE,eAAe,OAAO,SAAS;AAAA,QACrC;AAEA,cAAM,iBAAiB;AAAA,MAC3B;AAAA,IACJ;AAEA,aAAS,uBAAuBA,IAAG,OAAO;AACtC,eAAS,IAAIA,GAAE,aAAa,UAAU,IAAI,GAAG,KAAK;AAC9C,cAAMH,WAAUG,GAAE,aAAa,MAAM,CAAC;AAEtC,YAAIA,GAAE,YAAY,gBAAgBH,QAAO,MAAM,GAAG,MAAM;AACpD,UAAAG,GAAE,cAAc,KAAK;AACrB;AAAA,QACJ;AAEA,YAAIA,GAAE,YAAY,WAAWH,QAAO,EAAE,YAAY,MAAM,MAAM,SAAS;AACnE,UAAAG,GAAE,aAAa,sBAAsBH,QAAO;AAC5C;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;;;AClzFO,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkBT,SAAUI,OAAM,MAAM,OAAO,QAAQ,SAAS;AAC5C,UAAM,QAAQ,eAAe,IAAI;AAEjC,QACE,UAAU,UACV,UAAU,SACT,OAAO,UAAU,YAChB,QAAQ,KACR,UAAU,OAAO,oBACnB;AACA,YAAM,IAAI,MAAM,+CAA+C;AAAA,IACjE;AAEA,QACE,WAAW,UACX,WAAW,SACV,CAAC,OAAO,QAAQ,CAAC,OAAO,WACzB;AACA,YAAM,IAAI,MAAM,sBAAsB;AAAA,IACxC;AAGA,QAAI,CAACA,SAAQ,CAACA,MAAK,QAAQ,OAAOA,MAAK,SAAS,UAAU;AACxD,aAAO;AAAA,IACT;AAEA,SACG,WAAW,UAAa,WAAW,WACnC,UAAU,UAAa,UAAU,OAClC;AACA,YAAM,IAAI,MAAM,gCAAgC;AAAA,IAClD;AAEA,WAAO,MAAM,KAAK,SAASA,OAAM,OAAO,MAAM;AAAA,EAChD;AAAA;AAoBG,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYT,SAAU,MAAM;AACd,QAAI,SAAS,UAAa,SAAS,MAAM;AACvC,aAAO;AAAA,IACT;AAEA,QAAI,OAAO,SAAS,UAAU;AAC5B,aAAO,eAAe,IAAI;AAAA,IAC5B;AAEA,QAAI,OAAO,SAAS,UAAU;AAC5B,aAAO,WAAW,IAAI;AAAA,IACxB;AAEA,QAAI,OAAO,SAAS,YAAY;AAC9B,aAAO,YAAY,IAAI;AAAA,IACzB;AAEA,UAAM,IAAI,MAAM,6CAA6C;AAAA,EAC/D;AAAA;AASJ,SAAS,WAAW,OAAO;AAEzB,QAAMC,UAAS,CAAC;AAChB,MAAI,QAAQ;AAEZ,SAAO,EAAE,QAAQ,MAAM,QAAQ;AAC7B,IAAAA,QAAO,KAAK,IAAI,eAAe,MAAM,KAAK,CAAC;AAAA,EAC7C;AAEA,SAAO,YAAY,GAAG;AAOtB,WAAS,OAAO,YAAY;AAC1B,QAAIC,SAAQ;AAEZ,WAAO,EAAEA,SAAQD,QAAO,QAAQ;AAC9B,UAAIA,QAAOC,MAAK,EAAE,KAAK,MAAM,GAAG,UAAU,GAAG;AAC3C,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AACF;AAQA,SAAS,eAAe,OAAO;AAC7B,SAAO;AAMP,WAAS,QAAQF,OAAM;AACrB,WAAO,QAAQA,KAAI,KAAKA,MAAK,YAAY;AAAA,EAC3C;AACF;AAQA,SAAS,YAAY,OAAO;AAC1B,SAAO;AAQP,WAAS,UAAUA,UAAS,YAAY;AAEtC,WAAO,QAAQA,KAAI,KAAK,QAAQ,MAAM,KAAK,MAAMA,OAAM,GAAG,UAAU,CAAC;AAAA,EACvE;AACF;AAQA,SAAS,QAAQA,OAAM;AACrB,SAAO;AAAA,IACLA,SACE,OAAOA,UAAS;AAAA,IAEhBA,MAAK,SAAS;AAAA,IAEd,OAAOA,MAAK,YAAY;AAAA,EAC5B;AACF;;;ACxQO,IAAM,WAAW,eAAe;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;;;AClBM,SAAS,WAAW,OAAO;AAEhC,QAAM;AAAA;AAAA,IAEJ,SAAS,OAAO,UAAU,YAAY,MAAM,SAAS;AAAA;AAAA,MAEjD,MAAM,SAAS;AAAA,QACf;AAAA;AAIN,SAAO,OAAO,UAAU,YAAY,MAAM,QAAQ,gBAAgB,EAAE,MAAM;AAC5E;;;ACvBO,IAAM,SAAS;AAAA,EACpB;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AACF;;;AC5DO,IAAM,UAAU;AAAA;AAAA,EAErB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;;;ACNO,IAAM,YAAY;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;;;AC+CA,IAAM,gBAAgB,QAAQ,CAAC,WAAW,SAAS,CAAC;AAOrC,SAAR,uBAAwC,UAAU,CAAC,GAAG;AAC3D,QAAM,WAAW;AAAA,IACf,QAAQ,WAAW,kBAAkB;AAAA,EACvC;AAEA,SAAO,CAAC,SAAS;AACf,WAAO,MAAM,EAAC,UAAU,YAAY,SAAQ,CAAC;AAAA,EAC/C;AACF;AAOA,SAAS,OAAOG,OAAM,SAAS;AAC7B,MAAI,cAAcA,OAAM;AACtB,UAAM,WAAW,OAAO,OAAO,CAAC,GAAG,OAAO;AAE1C,QAAIA,MAAK,SAAS,UAAU,UAAUA,KAAI,GAAG;AAC3C,eAAS,SAAS;AAClB,eAAS,QAAQ;AAAA,IACnB;AAEA,aAAS,aAAa,gBAAgBA,OAAM,OAAO;AAEnD,WAAO,IAAIA,OAAM,QAAQ;AAAA,EAC3B;AAEA,MAAIA,MAAK,SAAS,QAAQ;AACxB,QAAI,QAAQ,eAAe,UAAU;AACnC,aAAO,WAAWA,OAAM,OAAO;AAAA,IACjC;AAGA,QAAI,QAAQ,eAAe,UAAU;AACnC,MAAAA,MAAK,QAAQ,QAAQ,SAASA,MAAK,KAAK;AAAA,IAC1C;AAAA,EAIF;AAEA,SAAO,EAAC,QAAQ,OAAO,QAAQ,cAAcA,KAAI,GAAG,cAAc,MAAK;AACzE;AAOA,SAAS,WAAWA,OAAM,SAAS;AACjC,QAAM,QAAQ,QAAQ,SAASA,MAAK,KAAK;AACzC,QAAM,SAAS,EAAC,QAAQ,OAAO,QAAQ,OAAO,cAAc,MAAK;AACjE,MAAI,QAAQ;AACZ,MAAI,MAAM,MAAM;AAEhB,MAAI,QAAQ,UAAU,UAAU,MAAM,OAAO,CAAC,CAAC,GAAG;AAChD;AAAA,EACF;AAEA,MAAI,UAAU,OAAO,UAAU,MAAM,OAAO,MAAM,CAAC,CAAC,GAAG;AACrD,QAAI,QAAQ,OAAO;AACjB;AAAA,IACF,OAAO;AACL,aAAO,eAAe;AAAA,IACxB;AAAA,EACF;AAEA,MAAI,UAAU,KAAK;AACjB,WAAO,SAAS;AAAA,EAClB,OAAO;AACL,IAAAA,MAAK,QAAQ,MAAM,MAAM,OAAO,GAAG;AAAA,EACrC;AAEA,SAAO;AACT;AAOA,SAAS,IAAI,QAAQ,SAAS;AAC5B,MAAI,SAAS,QAAQ;AACrB,QAAM,QAAQ,QAAQ;AACtB,QAAM,WAAW,OAAO;AACxB,MAAI,SAAS,SAAS;AACtB,MAAI,QAAQ;AAEZ,SAAO,EAAE,QAAQ,QAAQ;AACvB,UAAM,SAAS;AAAA,MACb,SAAS,KAAK;AAAA,MACd,OAAO,OAAO,CAAC,GAAG,SAAS;AAAA,QACzB;AAAA,QACA,OAAO,iBAAiB,UAAU,OAAO,KAAK;AAAA,MAChD,CAAC;AAAA,IACH;AAEA,QAAI,OAAO,QAAQ;AACjB,eAAS,OAAO,OAAO,CAAC;AACxB;AACA;AAAA,IACF,WAAW,CAAC,OAAO,QAAQ;AACzB,eAAS,OAAO;AAAA,IAClB;AAIA,QAAIC,SAAQ,SAAS,KAAK,CAAC,GAAG;AAC5B,eAAS;AAAA,IACX;AAAA,EACF;AAEA,SAAO,EAAC,QAAQ,OAAO,QAAQ,OAAO,cAAc,QAAQ,UAAU,KAAK,EAAC;AAC9E;AAQA,SAAS,iBAAiB,OAAO,OAAO,OAAO;AAC7C,SAAO,EAAE,QAAQ,MAAM,QAAQ;AAC7B,UAAMD,QAAO,MAAM,KAAK;AACxB,QAAI,SAAS,cAAcA,KAAI;AAE/B,QAAI,WAAW,UAAa,cAAcA,SAAQ,CAACE,WAAUF,KAAI,GAAG;AAClE,eAAS,iBAAiBA,MAAK,UAAU,EAAE;AAAA,IAC7C;AAEA,QAAI,OAAO,WAAW,WAAW;AAC/B,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO;AACT;AAcA,SAAS,cAAcA,OAAM;AAC3B,MAAIA,MAAK,SAAS,WAAW;AAC3B,QAAIC,SAAQD,KAAI,GAAG;AACjB,aAAO;AAAA,IACT;AAEA,QAAI,UAAUA,KAAI,GAAG;AACnB,aAAO;AAAA,IACT;AAAA,EAIF,WAAWA,MAAK,SAAS,QAAQ;AAC/B,QAAI,CAAC,WAAWA,KAAI,GAAG;AACrB,aAAO;AAAA,IACT;AAAA,EACF,WAAW,CAAC,cAAcA,KAAI,GAAG;AAC/B,WAAO;AAAA,EACT;AACF;AAQA,SAASC,SAAQD,OAAM;AACrB,SAAO,SAASA,KAAI,KAAK,UAAUA,OAAM,OAAQ;AACnD;AAQA,SAAS,UAAUA,OAAM;AACvB,SAAO,UAAUA,OAAM,MAAM;AAC/B;AAMA,SAASE,WAAUF,OAAM;AACvB,SACE;AAAA,IACE,gBAAgBA,SAAQA,MAAK,cAAcA,MAAK,WAAW;AAAA,EAC7D,KACA,cAAcA,KAAI,KAClB,UAAUA,OAAM,SAAU;AAE9B;AAMA,SAAS,UAAU,WAAW;AAC5B,SAAO,cAAc,OAAO,cAAc;AAC5C;AAMA,SAAS,gBAAgB,OAAO;AAC9B,QAAM,QAAQ,WAAW,KAAK,KAAK;AACnC,SAAO,QAAQ,MAAM,CAAC,IAAI;AAC5B;AAKA,SAAS,oBAAoB;AAC3B,SAAO;AACT;AAKA,SAAS,gBAAgB,SAAS;AAChC,SAAO;AAMP,WAAS,SAAS,OAAO;AACvB,WAAO,OAAO,KAAK,EAAE,QAAQ,mBAAmB,OAAO;AAAA,EACzD;AACF;AAUA,SAAS,gBAAgBA,OAAM,SAAS;AACtC,MAAI,aAAaA,SAAQA,MAAK,YAAY;AACxC,YAAQA,MAAK,SAAS;AAAA,MAGpB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAOA,MAAK,WAAW,OAAO,aAAa;AAAA,MAC7C,KAAK;AAAA,MACL,KAAK;AACH,eAAOA,MAAK,WAAW,SAAS,WAAW,QAAQ;AAAA,MACrD,KAAK;AACH,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAEA,SAAO,QAAQ;AACjB;;;ACvVA,IAAM,MAAM,CAAC,EAAE;AAYR,SAAS,YAAYG,OAAM,OAAO;AACvC,QAAM,QACJ,OAAO,UAAU,YACjB,OAAOA,KAAI,KACXA,MAAK,SAAS,aACdA,MAAK,cACL,IAAI,KAAKA,MAAK,YAAY,KAAK,KAC/BA,MAAK,WAAW,KAAK;AAEvB,SAAO,UAAU,QAAQ,UAAU,UAAa,UAAU;AAC5D;AAMA,SAAS,OAAO,OAAO;AACrB,SAAO,QAAQ,SAAS,OAAO,UAAU,YAAY,UAAU,KAAK;AACtE;;;ACZA,IAAM,OAAO,oBAAI,IAAI,CAAC,YAAY,YAAY,YAAY,CAAC;AAapD,SAAS,aAAaC,OAAM;AACjC,MAAI,CAAC,UAAUA,OAAM,MAAM,GAAG;AAC5B,WAAO;AAAA,EACT;AAEA,MAAI,YAAYA,OAAM,UAAU,GAAG;AACjC,WAAO;AAAA,EACT;AAEA,QAAM,QAAQA,MAAK,cAAc,CAAC;AAClC,QAAM,MAAM,MAAM,OAAO,CAAC;AAC1B,MAAI,QAAQ;AAEZ,MAAI,CAAC,MAAM,QAAQ,GAAG,KAAK,IAAI,WAAW,GAAG;AAC3C,WAAO;AAAA,EACT;AAEA,SAAO,EAAE,QAAQ,IAAI,QAAQ;AAC3B,QAAI,CAAC,KAAK,IAAI,OAAO,IAAI,KAAK,CAAC,CAAC,GAAG;AACjC,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO;AACT;;;AClDA,IAAM,QAAQ,eAAe;AAAA,EAC3B;AAAA,EACA;AAAA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AAED,IAAM,OAAO,eAAe,MAAM;AAU3B,SAAS,SAAS,OAAO;AAC9B,SAAO;AAAA,IACL,KAAK,KAAK,MACP,MAAM,SAAS,UACd,MAAM,KAAK,KACX,SAAS,KAAK,KACd,aAAa,KAAK,KACjB,KAAK,KAAK,KAAK,YAAY,OAAO,UAAU;AAAA,EACnD;AACF;AAMA,SAAS,KAAK,OAAO;AAEnB,SAAO,SAAS,OAAO,UAAU,YAAY,UAAU;AACzD;;;ACxEO,IAAM,8BAA8B;AAAA,EACzC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;;;ACMA,IAAMC,UAAS,uBAAuB,EAAC,UAAU,KAAI,CAAC;AAOvC,SAAR,aAA8B,UAAU,CAAC,GAAG;AACjD,MAAI,SAAS,QAAQ,UAAU;AAC/B,MAAI,gBAAgB,QAAQ;AAE5B,MAAI,OAAO,WAAW,UAAU;AAC9B,aAAS,IAAI,OAAO,MAAM;AAAA,EAC5B;AAGA,MAAI,kBAAkB,QAAQ,kBAAkB,QAAW;AACzD,oBAAgB;AAAA,EAClB;AAEA,SAAO,CAAC,SAAS;AAEf,QAAIC;AAGJ,IAAAD,QAAO,IAAI;AAGX,iBAAa,MAAM,CAACE,OAAM,YAAY;AACpC,UAAI,QAAQ;AAEZ,UAAI,EAAE,cAAcA,QAAO;AACzB;AAAA,MACF;AAEA,UAAI,UAAUA,OAAM,MAAM,GAAG;AAC3B,QAAAD,QAAO;AAAA,MACT;AAEA,UAAIA,SAAQ,UAAUC,OAAM,MAAM,GAAG;AACnC,QAAAD,QAAO;AAAA,MACT;AAEA,UAAI,UAAUC,OAAM,2BAA2B,GAAG;AAChD,eAAO;AAAA,MACT;AAEA,YAAM,WAAWA,MAAK;AACtB,UAAI,QAAQ,QAAQ;AAGpB,UAAI,SAAS,WAAW,KAAK,CAAC,QAAQA,OAAMD,KAAI,GAAG;AACjD;AAAA,MACF;AAEA,UAAI,CAAC,eAAe;AAClB;AAAA,MACF;AAGA,UAAI;AAGJ,aAAO,EAAE,QAAQ,SAAS,QAAQ;AAChC,cAAM,QAAQ,SAAS,KAAK;AAE5B,YAAI,MAAM,SAAS,UAAU,MAAM,SAAS,WAAW;AACrD,cAAI,MAAM,MAAM,SAAS,IAAI,GAAG;AAC9B,kBAAM;AAAA,UACR;AAEA,gBAAM,QAAQ,MAAM,MAAM;AAAA,YACxB;AAAA,YACA,OAAO,OAAO,MAAM,EAAE,OAAO,KAAK;AAAA,UACpC;AAAA,QACF;AAAA,MACF;AAGA,YAAM,SAAS,CAAC;AAEhB,UAAI;AAEJ,cAAQ;AAER,aAAO,EAAE,QAAQ,SAAS,QAAQ;AAChC,cAAM,QAAQ,SAAS,KAAK;AAE5B,YAAI,QAAQ,OAAOA,KAAI,KAAM,OAAO,CAAC,OAAQ;AAC3C,mBAAS,QAAQ,OAAO,KAAK;AAC7B,gBAAM;AAAA,QACR;AAEA,mBAAW;AACX,eAAO,KAAK,KAAK;AAAA,MACnB;AAEA,UAAI,aAAa,OAAO,QAAQ,UAAUA,KAAI,IAAI;AAGhD,YAAI,WAAW,QAAQ,GAAG;AACxB,iBAAO,IAAI;AACX,qBAAW,OAAO,OAAO,SAAS,CAAC;AAAA,QACrC;AAEA,iBAAS,QAAQ,QAAQ,CAAC;AAAA,MAC5B;AAEA,MAAAC,MAAK,WAAW;AAAA,IAClB,CAAC;AAAA,EACH;AAQA,WAAS,SAASC,OAAM,OAAO,MAAM;AACnC,UAAM,OAAOA,MAAKA,MAAK,SAAS,CAAC;AACjC,UAAM,WAAW,WAAW,IAAI,IAAIA,MAAKA,MAAK,SAAS,CAAC,IAAI;AAC5D,UAAM,WACH,MAAM,QAAQ,KAAK,MAAM,IAAI,IAAI,SAAS,QAC3C,OAAO,MAAM,EAAE,OAAO,KAAK,IAAI,OAAO,CAAC,CAAC;AAE1C,QAAI,QAAQ,KAAK,SAAS,QAAQ;AAChC,WAAK,QAAQ,WAAW,IAAI,IAAI,UAAU,KAAK,QAAQ;AAAA,IACzD,OAAO;AACL,MAAAA,MAAK,KAAK,EAAC,MAAM,QAAQ,OAAO,QAAO,CAAC;AAAA,IAC1C;AAAA,EACF;AAMA,WAAS,MAAMD,OAAM;AACnB,WAAO;AAAA,MACLA,SACEA,MAAK,SAAS,aACd,QAAQ,UACR,QAAQ,OAAO,SAAS,KACxB,QAAQ,OAAO,SAASA,MAAK,OAAO;AAAA,IACxC;AAAA,EACF;AACF;AAOA,SAAS,QAAQA,OAAMD,OAAM;AAC3B,SACEC,MAAK,SAAS,WACbA,MAAK,SAAS,YACXD,SAAQ,UAAUC,OAAM,QAAQ,KAAK,SAASA,KAAI,KAAK,CAAC,SAASA,KAAI,IACrE;AAER;;;AC7LO,IAAM,aAAa,SAASE,YAAW,KAAK;AAC/C,MAAI,CAAC;AACD,WAAO,MAAM;AACjB,SAAO,aAAa,OAAO,QAAQ,YAAY,CAAC,IAAI,GAAG;AAC3D;;;ACLA,mBAA2B;AAC3B,IAAM,sBAAsB,oBAAI,IAAI;AAAA,EAChC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,CAAC;AACD,IAAM,aAAa,CAACC,MAAK,UAAU;AAC/B,MAAI;AACJ,MAAI,SAAS;AACT,WAAO;AACX,MAAI,MAAM,QAAQ,KAAK,GAAG;AACtB,QAAI,MAAM,KAAK,GAAG;AAAA,EACtB,WACS,OAAO,UAAU,UAAU;AAChC,QAAI,OAAO,KAAK;AAAA,EACpB,WACS,OAAO,UAAU,WAAW;AACjC,QAAI,CAAC;AACD,aAAO;AACX,QAAI;AAAA,EACR,OACK;AACD,QAAI;AAAA,EACR;AACA,SAAO,GAAGA,aAAQ,yBAAW,CAAC;AAClC;AACO,SAAS,UAAU,KAAK,YAAY,QAAQ;AAC/C,QAAM,EAAE,UAAU,GAAG,KAAK,IAAI;AAC9B,QAAM,OAAO,SAAS,KAAK;AAC3B,QAAM,QAAQ,OAAO,QAAQ,IAAI,EAC5B,OAAO,CAAC,CAAC,EAAE,KAAK,MAAM,SAAS,QAAQ,UAAU,KAAK,EACtD,IAAI,CAAC,CAACA,MAAK,KAAK,MAAM,WAAWA,MAAK,KAAK,CAAC,EAC5C,OAAO,CAAC,UAAU,SAAS,IAAI,EAC/B,KAAK,GAAG;AACb,QAAMC,QAAO,QAAI,yBAAW,GAAG,IAAI,QAAQ,IAAI,UAAU;AACzD,MAAI;AACA,WAAO,GAAGA,QAAO,WAAO,yBAAW,OAAO,QAAQ,CAAC;AACvD,SAAOA;AACX;AACA,SAAS,cAAc,UAAU,QAAQ;AAErC,QAAM,IAAI;AAEV,QAAM,gBAAgB,EAAE,KAAK,QAAQ,EAAE,OAAO,CAAC,MAAM,MAAM,CAAC,EAAE,UAAU;AACxE,MAAI,CAAC;AACD,UAAM,IAAI,MAAM,qDAAqD;AAEzE,QAAM,MAAM,EAAE,CAAC;AACf,QAAM,WAAW,CAAC,MAAM,QAAQ,MAAM,QAAQ,MAAM,SAAS,SAAS,EAAE,CAAC,CAAC,KAAK,QAAQ,MAAM,QAAQ,MAAM,SAAS,SAAS,EAAE,CAAC,OAAO;AACvI,QAAM,QAAQ,WAAW,EAAE,CAAC,IAAI,CAAC;AAEjC,QAAM,SAAS,CAAC;AAChB,QAAM,QAAQ,CAAC;AACf,SAAO,KAAK,UAAU,KAAK,OAAO,MAAM,CAAC;AACzC,MAAI,YAAY;AAChB,IAAE,MAAM,WAAW,IAAI,CAAC,EAAE,QAAQ,CAAC,UAAU;AACzC,UAAM,IAAI;AACV,QAAI,MAAM,GAAG;AACT,kBAAY;AACZ;AAAA,IACJ;AAEA,UAAM,CAAC,GAAGC,EAAC,IAAI,cAAc,GAAG,MAAM;AACtC,WAAO,KAAK,CAAC;AACb,QAAIA,IAAG;AACH,kBAAY;AACZ,YAAM,KAAKA,EAAC;AAAA,IAChB;AAAA,EACJ,CAAC;AACD,QAAM,OAAO,SAAS,KAAK;AAC3B,QAAM,aAAa,oBAAoB,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5D,MAAI,CAAC,WAAW;AACZ,QAAI;AACA,aAAO,KAAK,UAAU;AAC1B,WAAO,CAAC,OAAO,KAAK,IAAI,GAAG,IAAI;AAAA,EACnC;AACA,MAAI;AACA,UAAM,KAAK,UAAU;AACzB,SAAO,CAAC,OAAO,KAAK,IAAI,GAAG,MAAM,KAAK,IAAI,CAAC;AAC/C;AAkCO,SAAS,OAAO,UAAU,OAAO,EAAE,QAAQ,MAAM,GAAG;AACvD,QAAM,CAAC,QAAQ,KAAK,IAAI,cAAc,UAAU,KAAK,MAAM;AAC3D,QAAM,OAAO,KAAK,SAAS,KAAK;AAChC,SAAO,CAAC,GAAG,SAAS,QAAQ,QAAQ,GAAG,QAAQ,SAAS,IAAI;AAChE;;;AChIO,IAAM,aAAa,CAACC,OAAMC,QAAO,WAAW;AAC/C,QAAM,EAAE,IAAI,QAAAC,QAAO,IAAI,WAAW,QAAQ,WAAW,SAAS,SAAS,CAAC;AACxE,QAAM,CAACC,KAAI,IAAI,OAAO;AAAA,IAClBF,SAAQ,QAAQ;AAAA,IAChB;AAAA,MACI,OAAO,SAAS,CAAC,QAAQ,UAAU,IAAI;AAAA,MACvC;AAAA,MACA,QAAAC;AAAA,MACA,UAAUD,SAAQ;AAAA,EAAQD;AAAA,OAAc,MAAMA;AAAA,IAClD;AAAA,EACJ,GAAG,EAAE,QAAQ,KAAK,CAAC;AACnB,SAAOC,SAAQ,GAAGE;AAAA,IAAWA;AACjC;AACO,SAAS,iBAAiB,IAAI;AACjC,QAAM,EAAE,SAAS,IAAI;AACrB,WAAS,MAAM,cAAc,CAAC,QAAQ,QAAQ,WAAW,OAAO,GAAG,EAAE,SAAS,KAAK;AAEnF,WAAS,MAAM,qBAAqB,CAAC,QAAQ,QAAQ,WAAW,OAAO,GAAG,EAAE,SAAS,IAAI;AACzF,WAAS,MAAM,aAAa,CAAC,QAAQ,QAAQ,WAAW,OAAO,GAAG,EAAE,SAAS,IAAI;AACjF,WAAS,MAAM,mBAAmB,CAAC,QAAQ,QAAQ;AAAE,QAAI;AAAI,WAAO,WAAW,OAAO,GAAG,EAAE,SAAS,OAAO,KAAK,OAAO,GAAG,EAAE,UAAU,QAAQ,OAAO,SAAS,SAAS,GAAG,MAAM;AAAA,EAAG;AACvL;;;ACLO,SAAS,WAAW,OAAOC,OAAM;AAEtC,QAAM,SAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAC;AAAA,IACb,UAAU,MAAM,KAAK,MAAM,IAAIA,KAAI,GAAG,IAAI;AAAA,EAC5C;AACA,QAAM,MAAMA,OAAM,MAAM;AACxB,SAAO,MAAM,UAAUA,OAAM,MAAM;AACrC;;;ACTO,SAAS,UAAU,OAAOC,OAAM;AAErC,QAAM,SAAS,EAAC,MAAM,WAAW,SAAS,MAAM,YAAY,CAAC,GAAG,UAAU,CAAC,EAAC;AAC5E,QAAM,MAAMA,OAAM,MAAM;AACxB,SAAO,CAAC,MAAM,UAAUA,OAAM,MAAM,GAAG,EAAC,MAAM,QAAQ,OAAO,KAAI,CAAC;AACpE;;;ACJO,SAAS,KAAK,OAAOC,OAAM;AAChC,QAAM,QAAQA,MAAK,QAAQA,MAAK,QAAQ,OAAO;AAG/C,QAAM,OAAOA,MAAK,OAAOA,MAAK,KAAK,MAAM,qBAAqB,IAAI;AAElE,QAAM,aAAa,CAAC;AAEpB,MAAI,MAAM;AACR,eAAW,YAAY,CAAC,cAAc,IAAI;AAAA,EAC5C;AAIA,MAAI,SAAS;AAAA,IACX,MAAM;AAAA,IACN,SAAS;AAAA,IACT;AAAA,IACA,UAAU,CAAC,EAAC,MAAM,QAAQ,MAAK,CAAC;AAAA,EAClC;AAEA,MAAIA,MAAK,MAAM;AACb,WAAO,OAAO,EAAC,MAAMA,MAAK,KAAI;AAAA,EAChC;AAEA,QAAM,MAAMA,OAAM,MAAM;AACxB,WAAS,MAAM,UAAUA,OAAM,MAAM;AAGrC,WAAS,EAAC,MAAM,WAAW,SAAS,OAAO,YAAY,CAAC,GAAG,UAAU,CAAC,MAAM,EAAC;AAC7E,QAAM,MAAMA,OAAM,MAAM;AACxB,SAAO;AACT;;;ACjCO,SAAS,cAAc,OAAOC,OAAM;AAEzC,QAAM,SAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAC;AAAA,IACb,UAAU,MAAM,IAAIA,KAAI;AAAA,EAC1B;AACA,QAAM,MAAMA,OAAM,MAAM;AACxB,SAAO,MAAM,UAAUA,OAAM,MAAM;AACrC;;;ACXO,SAAS,SAAS,OAAOC,OAAM;AAEpC,QAAM,SAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAC;AAAA,IACb,UAAU,MAAM,IAAIA,KAAI;AAAA,EAC1B;AACA,QAAM,MAAMA,OAAM,MAAM;AACxB,SAAO,MAAM,UAAUA,OAAM,MAAM;AACrC;;;AChBO,IAAM,0BACX;;;ACYK,IAAM,aAAa,WAAW,UAAU;AAcxC,IAAM,oBAAoB,WAAW,YAAY;AAuBjD,IAAM,aAAa,WAAW,qBAAqB;AAgCnD,IAAM,aAAa,WAAW,IAAI;AAoBlC,IAAM,gBAAgB,WAAW,YAAY;AAe7C,IAAM,mBAAmB,WAAW,gBAAgB;AA0EpD,IAAM,qBAAqB,WAAW,uBAAuB;AAsB7D,IAAM,oBAAoB,WAAW,IAAI;AAQhD,SAAS,WAAW,OAAO;AACzB,SAAO;AAUP,WAAS,MAAMC,OAAM;AACnB,WAAOA,UAAS,QAAQ,MAAM,KAAK,OAAO,aAAaA,KAAI,CAAC;AAAA,EAC9D;AACF;;;AC1LO,SAAS,aAAa,OAAO;AAElC,QAAM,SAAS,CAAC;AAChB,MAAI,QAAQ;AACZ,MAAI,QAAQ;AACZ,MAAI,OAAO;AACX,SAAO,EAAE,QAAQ,MAAM,QAAQ;AAC7B,UAAMC,QAAO,MAAM,WAAW,KAAK;AAEnC,QAAI,UAAU;AAGd,QACEA,UAAS,MACT,kBAAkB,MAAM,WAAW,QAAQ,CAAC,CAAC,KAC7C,kBAAkB,MAAM,WAAW,QAAQ,CAAC,CAAC,GAC7C;AACA,aAAO;AAAA,IACT,WAESA,QAAO,KAAK;AACnB,UAAI,CAAC,oBAAoB,KAAK,OAAO,aAAaA,KAAI,CAAC,GAAG;AACxD,kBAAU,OAAO,aAAaA,KAAI;AAAA,MACpC;AAAA,IACF,WAESA,QAAO,SAASA,QAAO,OAAO;AACrC,YAAM,OAAO,MAAM,WAAW,QAAQ,CAAC;AAGvC,UAAIA,QAAO,SAAS,OAAO,SAAS,OAAO,OAAO;AAChD,kBAAU,OAAO,aAAaA,OAAM,IAAI;AACxC,eAAO;AAAA,MACT,OAEK;AACH,kBAAU;AAAA,MACZ;AAAA,IACF,OAEK;AACH,gBAAU,OAAO,aAAaA,KAAI;AAAA,IACpC;AACA,QAAI,SAAS;AACX,aAAO,KAAK,MAAM,MAAM,OAAO,KAAK,GAAG,mBAAmB,OAAO,CAAC;AAClE,cAAQ,QAAQ,OAAO;AACvB,gBAAU;AAAA,IACZ;AACA,QAAI,MAAM;AACR,eAAS;AACT,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO,OAAO,KAAK,EAAE,IAAI,MAAM,MAAM,KAAK;AAC5C;;;AC/FO,SAAS,kBAAkB,OAAOC,OAAM;AAC7C,QAAM,KAAK,OAAOA,MAAK,UAAU,EAAE,YAAY;AAC/C,QAAM,SAAS,aAAa,GAAG,YAAY,CAAC;AAC5C,QAAM,QAAQ,MAAM,cAAc,QAAQ,EAAE;AAE5C,MAAI;AAEJ,MAAI,UAAU,IAAI;AAChB,UAAM,cAAc,KAAK,EAAE;AAC3B,UAAM,eAAe,EAAE,IAAI;AAC3B,cAAU,MAAM,cAAc;AAAA,EAChC,OAAO;AACL,UAAM,eAAe,EAAE;AACvB,cAAU,QAAQ;AAAA,EACpB;AAEA,QAAM,eAAe,MAAM,eAAe,EAAE;AAG5C,QAAMC,QAAO;AAAA,IACX,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY;AAAA,MACV,MAAM,MAAM,MAAM,gBAAgB,QAAQ;AAAA,MAC1C,IACE,MAAM,gBACN,WACA,UACC,eAAe,IAAI,MAAM,eAAe;AAAA,MAC3C,iBAAiB;AAAA,MACjB,iBAAiB,CAAC,gBAAgB;AAAA,IACpC;AAAA,IACA,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAO,OAAO,OAAO,EAAC,CAAC;AAAA,EACnD;AACA,QAAM,MAAMD,OAAMC,KAAI;AAGtB,QAAM,MAAM;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAC;AAAA,IACb,UAAU,CAACA,KAAI;AAAA,EACjB;AACA,QAAM,MAAMD,OAAM,GAAG;AACrB,SAAO,MAAM,UAAUA,OAAM,GAAG;AAClC;;;ACvCO,SAAS,SAAS,OAAOE,OAAM;AACpC,QAAM,eAAe,MAAM;AAC3B,MAAI,KAAK;AAET,SAAO,MAAM;AAAc;AAE3B,QAAM,aAAa,OAAO,EAAE;AAE5B,eAAa,UAAU,IAAI;AAAA,IACzB,MAAM;AAAA,IACN;AAAA,IACA,UAAU,CAAC,EAAC,MAAM,aAAa,UAAUA,MAAK,SAAQ,CAAC;AAAA,IACvD,UAAUA,MAAK;AAAA,EACjB;AAEA,SAAO,kBAAkB,OAAO;AAAA,IAC9B,MAAM;AAAA,IACN;AAAA,IACA,UAAUA,MAAK;AAAA,EACjB,CAAC;AACH;;;AC5BO,SAAS,QAAQ,OAAOC,OAAM;AAEnC,QAAM,SAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS,MAAMA,MAAK;AAAA,IACpB,YAAY,CAAC;AAAA,IACb,UAAU,MAAM,IAAIA,KAAI;AAAA,EAC1B;AACA,QAAM,MAAMA,OAAM,MAAM;AACxB,SAAO,MAAM,UAAUA,OAAM,MAAM;AACrC;;;ACRO,SAAS,KAAK,OAAOC,OAAM;AAChC,MAAI,MAAM,WAAW;AAEnB,UAAM,SAAS,EAAC,MAAM,OAAO,OAAOA,MAAK,MAAK;AAC9C,UAAM,MAAMA,OAAM,MAAM;AACxB,WAAO,MAAM,UAAUA,OAAM,MAAM;AAAA,EACrC;AAGA,SAAO;AACT;;;ACDO,SAAS,OAAO,OAAOC,OAAM;AAClC,QAAM,UAAUA,MAAK;AACrB,MAAI,SAAS;AAEb,MAAI,YAAY,aAAa;AAC3B,cAAU;AAAA,EACZ,WAAW,YAAY,QAAQ;AAC7B,cAAU,OAAOA,MAAK,SAASA,MAAK,cAAc;AAAA,EACpD;AAEA,MAAIA,MAAK,SAAS,kBAAkB;AAClC,WAAO,EAAC,MAAM,QAAQ,OAAO,OAAOA,MAAK,MAAM,OAAM;AAAA,EACvD;AAEA,QAAM,WAAW,MAAM,IAAIA,KAAI;AAC/B,QAAMC,QAAO,SAAS,CAAC;AAEvB,MAAIA,SAAQA,MAAK,SAAS,QAAQ;AAChC,IAAAA,MAAK,QAAQ,MAAMA,MAAK;AAAA,EAC1B,OAAO;AACL,aAAS,QAAQ,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC;AAAA,EAC7C;AAEA,QAAM,OAAO,SAAS,SAAS,SAAS,CAAC;AAEzC,MAAI,QAAQ,KAAK,SAAS,QAAQ;AAChC,SAAK,SAAS;AAAA,EAChB,OAAO;AACL,aAAS,KAAK,EAAC,MAAM,QAAQ,OAAO,OAAM,CAAC;AAAA,EAC7C;AAEA,SAAO;AACT;;;ACtCO,SAAS,eAAe,OAAOC,OAAM;AAC1C,QAAM,MAAM,MAAM,WAAWA,MAAK,UAAU;AAE5C,MAAI,CAAC,KAAK;AACR,WAAO,OAAO,OAAOA,KAAI;AAAA,EAC3B;AAGA,QAAM,aAAa,EAAC,KAAK,aAAa,IAAI,OAAO,EAAE,GAAG,KAAKA,MAAK,IAAG;AAEnE,MAAI,IAAI,UAAU,QAAQ,IAAI,UAAU,QAAW;AACjD,eAAW,QAAQ,IAAI;AAAA,EACzB;AAGA,QAAM,SAAS,EAAC,MAAM,WAAW,SAAS,OAAO,YAAY,UAAU,CAAC,EAAC;AACzE,QAAM,MAAMA,OAAM,MAAM;AACxB,SAAO,MAAM,UAAUA,OAAM,MAAM;AACrC;;;ACpBO,SAAS,MAAM,OAAOC,OAAM;AAEjC,QAAM,aAAa,EAAC,KAAK,aAAaA,MAAK,GAAG,EAAC;AAE/C,MAAIA,MAAK,QAAQ,QAAQA,MAAK,QAAQ,QAAW;AAC/C,eAAW,MAAMA,MAAK;AAAA,EACxB;AAEA,MAAIA,MAAK,UAAU,QAAQA,MAAK,UAAU,QAAW;AACnD,eAAW,QAAQA,MAAK;AAAA,EAC1B;AAGA,QAAM,SAAS,EAAC,MAAM,WAAW,SAAS,OAAO,YAAY,UAAU,CAAC,EAAC;AACzE,QAAM,MAAMA,OAAM,MAAM;AACxB,SAAO,MAAM,UAAUA,OAAM,MAAM;AACrC;;;AClBO,SAAS,WAAW,OAAOC,OAAM;AAEtC,QAAMC,QAAO,EAAC,MAAM,QAAQ,OAAOD,MAAK,MAAM,QAAQ,aAAa,GAAG,EAAC;AACvE,QAAM,MAAMA,OAAMC,KAAI;AAGtB,QAAM,SAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAC;AAAA,IACb,UAAU,CAACA,KAAI;AAAA,EACjB;AACA,QAAM,MAAMD,OAAM,MAAM;AACxB,SAAO,MAAM,UAAUA,OAAM,MAAM;AACrC;;;ACVO,SAAS,cAAc,OAAOE,OAAM;AACzC,QAAM,MAAM,MAAM,WAAWA,MAAK,UAAU;AAE5C,MAAI,CAAC,KAAK;AACR,WAAO,OAAO,OAAOA,KAAI;AAAA,EAC3B;AAGA,QAAM,aAAa,EAAC,MAAM,aAAa,IAAI,OAAO,EAAE,EAAC;AAErD,MAAI,IAAI,UAAU,QAAQ,IAAI,UAAU,QAAW;AACjD,eAAW,QAAQ,IAAI;AAAA,EACzB;AAGA,QAAM,SAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT;AAAA,IACA,UAAU,MAAM,IAAIA,KAAI;AAAA,EAC1B;AACA,QAAM,MAAMA,OAAM,MAAM;AACxB,SAAO,MAAM,UAAUA,OAAM,MAAM;AACrC;;;ACzBO,SAAS,KAAK,OAAOC,OAAM;AAEhC,QAAM,aAAa,EAAC,MAAM,aAAaA,MAAK,GAAG,EAAC;AAEhD,MAAIA,MAAK,UAAU,QAAQA,MAAK,UAAU,QAAW;AACnD,eAAW,QAAQA,MAAK;AAAA,EAC1B;AAGA,QAAM,SAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT;AAAA,IACA,UAAU,MAAM,IAAIA,KAAI;AAAA,EAC1B;AACA,QAAM,MAAMA,OAAM,MAAM;AACxB,SAAO,MAAM,UAAUA,OAAM,MAAM;AACrC;;;ACRO,SAAS,SAAS,OAAOC,OAAM,QAAQ;AAC5C,QAAM,UAAU,MAAM,IAAIA,KAAI;AAC9B,QAAM,QAAQ,SAAS,UAAU,MAAM,IAAI,cAAcA,KAAI;AAE7D,QAAM,aAAa,CAAC;AAEpB,QAAM,WAAW,CAAC;AAElB,MAAI,OAAOA,MAAK,YAAY,WAAW;AACrC,UAAMC,QAAO,QAAQ,CAAC;AAEtB,QAAIC;AAEJ,QAAID,SAAQA,MAAK,SAAS,aAAaA,MAAK,YAAY,KAAK;AAC3D,MAAAC,aAAYD;AAAA,IACd,OAAO;AACL,MAAAC,aAAY,EAAC,MAAM,WAAW,SAAS,KAAK,YAAY,CAAC,GAAG,UAAU,CAAC,EAAC;AACxE,cAAQ,QAAQA,UAAS;AAAA,IAC3B;AAEA,QAAIA,WAAU,SAAS,SAAS,GAAG;AACjC,MAAAA,WAAU,SAAS,QAAQ,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC;AAAA,IACvD;AAEA,IAAAA,WAAU,SAAS,QAAQ;AAAA,MACzB,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY,EAAC,MAAM,YAAY,SAASF,MAAK,SAAS,UAAU,KAAI;AAAA,MACpE,UAAU,CAAC;AAAA,IACb,CAAC;AAID,eAAW,YAAY,CAAC,gBAAgB;AAAA,EAC1C;AAEA,MAAI,QAAQ;AAEZ,SAAO,EAAE,QAAQ,QAAQ,QAAQ;AAC/B,UAAM,QAAQ,QAAQ,KAAK;AAG3B,QACE,SACA,UAAU,KACV,MAAM,SAAS,aACf,MAAM,YAAY,KAClB;AACA,eAAS,KAAK,EAAC,MAAM,QAAQ,OAAO,KAAI,CAAC;AAAA,IAC3C;AAEA,QAAI,MAAM,SAAS,aAAa,MAAM,YAAY,OAAO,CAAC,OAAO;AAC/D,eAAS,KAAK,GAAG,MAAM,QAAQ;AAAA,IACjC,OAAO;AACL,eAAS,KAAK,KAAK;AAAA,IACrB;AAAA,EACF;AAEA,QAAM,OAAO,QAAQ,QAAQ,SAAS,CAAC;AAGvC,MAAI,SAAS,SAAS,KAAK,SAAS,aAAa,KAAK,YAAY,MAAM;AACtE,aAAS,KAAK,EAAC,MAAM,QAAQ,OAAO,KAAI,CAAC;AAAA,EAC3C;AAGA,QAAM,SAAS,EAAC,MAAM,WAAW,SAAS,MAAM,YAAY,SAAQ;AACpE,QAAM,MAAMA,OAAM,MAAM;AACxB,SAAO,MAAM,UAAUA,OAAM,MAAM;AACrC;AAMA,SAAS,UAAUA,OAAM;AACvB,MAAI,QAAQ;AACZ,MAAIA,MAAK,SAAS,QAAQ;AACxB,YAAQA,MAAK,UAAU;AACvB,UAAM,WAAWA,MAAK;AACtB,QAAI,QAAQ;AAEZ,WAAO,CAAC,SAAS,EAAE,QAAQ,SAAS,QAAQ;AAC1C,cAAQ,cAAc,SAAS,KAAK,CAAC;AAAA,IACvC;AAAA,EACF;AAEA,SAAO;AACT;AAMA,SAAS,cAAcA,OAAM;AAC3B,QAAM,SAASA,MAAK;AAEpB,SAAO,WAAW,UAAa,WAAW,OACtCA,MAAK,SAAS,SAAS,IACvB;AACN;;;AC/GO,SAASG,MAAK,OAAOC,OAAM;AAEhC,QAAM,aAAa,CAAC;AACpB,QAAM,UAAU,MAAM,IAAIA,KAAI;AAC9B,MAAI,QAAQ;AAEZ,MAAI,OAAOA,MAAK,UAAU,YAAYA,MAAK,UAAU,GAAG;AACtD,eAAW,QAAQA,MAAK;AAAA,EAC1B;AAGA,SAAO,EAAE,QAAQ,QAAQ,QAAQ;AAC/B,UAAM,QAAQ,QAAQ,KAAK;AAE3B,QACE,MAAM,SAAS,aACf,MAAM,YAAY,QAClB,MAAM,cACN,MAAM,QAAQ,MAAM,WAAW,SAAS,KACxC,MAAM,WAAW,UAAU,SAAS,gBAAgB,GACpD;AACA,iBAAW,YAAY,CAAC,oBAAoB;AAC5C;AAAA,IACF;AAAA,EACF;AAGA,QAAM,SAAS;AAAA,IACb,MAAM;AAAA,IACN,SAASA,MAAK,UAAU,OAAO;AAAA,IAC/B;AAAA,IACA,UAAU,MAAM,KAAK,SAAS,IAAI;AAAA,EACpC;AACA,QAAM,MAAMA,OAAM,MAAM;AACxB,SAAO,MAAM,UAAUA,OAAM,MAAM;AACrC;;;ACpCO,SAAS,UAAU,OAAOC,OAAM;AAErC,QAAM,SAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAC;AAAA,IACb,UAAU,MAAM,IAAIA,KAAI;AAAA,EAC1B;AACA,QAAM,MAAMA,OAAM,MAAM;AACxB,SAAO,MAAM,UAAUA,OAAM,MAAM;AACrC;;;ACTO,SAAS,KAAK,OAAOC,OAAM;AAEhC,QAAM,SAAS,EAAC,MAAM,QAAQ,UAAU,MAAM,KAAK,MAAM,IAAIA,KAAI,CAAC,EAAC;AACnE,QAAM,MAAMA,OAAM,MAAM;AACxB,SAAO,MAAM,UAAUA,OAAM,MAAM;AACrC;;;ACNO,SAAS,OAAO,OAAOC,OAAM;AAElC,QAAM,SAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAC;AAAA,IACb,UAAU,MAAM,IAAIA,KAAI;AAAA,EAC1B;AACA,QAAM,MAAMA,OAAM,MAAM;AACxB,SAAO,MAAM,UAAUA,OAAM,MAAM;AACrC;;;ACGO,IAAM,aAAa,MAAM,OAAO;AAUhC,IAAM,WAAW,MAAM,KAAK;AAU5B,SAAS,SAASC,OAAM;AAC7B,SAAO,EAAC,OAAO,WAAWA,KAAI,GAAG,KAAK,SAASA,KAAI,EAAC;AACtD;AAUA,SAAS,MAAM,MAAM;AACnB,SAAOC;AAQP,WAASA,OAAMD,OAAM;AACnB,UAAMC,SAASD,SAAQA,MAAK,YAAYA,MAAK,SAAS,IAAI,KAAM,CAAC;AAGjE,WAAO;AAAA;AAAA,MAEL,MAAMC,OAAM,QAAQ;AAAA;AAAA,MAEpB,QAAQA,OAAM,UAAU;AAAA;AAAA,MAExB,QAAQA,OAAM,SAAS,KAAKA,OAAM,SAAS;AAAA,IAC7C;AAAA,EACF;AACF;;;ACjEO,SAAS,MAAM,OAAOC,OAAM;AACjC,QAAM,OAAO,MAAM,IAAIA,KAAI;AAC3B,QAAM,WAAW,KAAK,MAAM;AAE5B,QAAM,eAAe,CAAC;AAEtB,MAAI,UAAU;AAEZ,UAAMC,QAAO;AAAA,MACX,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY,CAAC;AAAA,MACb,UAAU,MAAM,KAAK,CAAC,QAAQ,GAAG,IAAI;AAAA,IACvC;AACA,UAAM,MAAMD,MAAK,SAAS,CAAC,GAAGC,KAAI;AAClC,iBAAa,KAAKA,KAAI;AAAA,EACxB;AAEA,MAAI,KAAK,SAAS,GAAG;AAEnB,UAAMC,QAAO;AAAA,MACX,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY,CAAC;AAAA,MACb,UAAU,MAAM,KAAK,MAAM,IAAI;AAAA,IACjC;AAEA,UAAM,QAAQ,WAAWF,MAAK,SAAS,CAAC,CAAC;AACzC,UAAM,MAAM,SAASA,MAAK,SAASA,MAAK,SAAS,SAAS,CAAC,CAAC;AAC5D,QAAI,MAAM,QAAQ,IAAI;AAAM,MAAAE,MAAK,WAAW,EAAC,OAAO,IAAG;AACvD,iBAAa,KAAKA,KAAI;AAAA,EACxB;AAGA,QAAM,SAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAC;AAAA,IACb,UAAU,MAAM,KAAK,cAAc,IAAI;AAAA,EACzC;AACA,QAAM,MAAMF,OAAM,MAAM;AACxB,SAAO,MAAM,UAAUA,OAAM,MAAM;AACrC;;;AChCO,SAAS,SAAS,OAAOG,OAAM,QAAQ;AAC5C,QAAMC,YAAW,SAAS,OAAO,WAAW;AAE5C,QAAM,WAAWA,YAAWA,UAAS,QAAQD,KAAI,IAAI;AACrD,QAAM,UAAU,aAAa,IAAI,OAAO;AACxC,QAAM,QAAQ,UAAU,OAAO,SAAS,UAAU,OAAO,QAAQ;AACjE,QAAM,SAAS,QAAQ,MAAM,SAASA,MAAK,SAAS;AACpD,MAAI,YAAY;AAEhB,QAAME,SAAQ,CAAC;AAEf,SAAO,EAAE,YAAY,QAAQ;AAE3B,UAAMC,QAAOH,MAAK,SAAS,SAAS;AAEpC,UAAM,aAAa,CAAC;AACpB,UAAM,aAAa,QAAQ,MAAM,SAAS,IAAI;AAE9C,QAAI,YAAY;AACd,iBAAW,QAAQ;AAAA,IACrB;AAGA,QAAII,UAAS,EAAC,MAAM,WAAW,SAAS,YAAY,UAAU,CAAC,EAAC;AAEhE,QAAID,OAAM;AACR,MAAAC,QAAO,WAAW,MAAM,IAAID,KAAI;AAChC,YAAM,MAAMA,OAAMC,OAAM;AACxB,MAAAA,UAAS,MAAM,UAAUJ,OAAMI,OAAM;AAAA,IACvC;AAEA,IAAAF,OAAM,KAAKE,OAAM;AAAA,EACnB;AAGA,QAAM,SAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAC;AAAA,IACb,UAAU,MAAM,KAAKF,QAAO,IAAI;AAAA,EAClC;AACA,QAAM,MAAMF,OAAM,MAAM;AACxB,SAAO,MAAM,UAAUA,OAAM,MAAM;AACrC;;;ACvDO,SAAS,UAAU,OAAOK,OAAM;AAIrC,QAAM,SAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA;AAAA,IACT,YAAY,CAAC;AAAA,IACb,UAAU,MAAM,IAAIA,KAAI;AAAA,EAC1B;AACA,QAAM,MAAMA,OAAM,MAAM;AACxB,SAAO,MAAM,UAAUA,OAAM,MAAM;AACrC;;;AC5BA,IAAM,MAAM;AACZ,IAAM,QAAQ;AAWP,SAAS,UAAU,OAAO;AAC/B,QAAMC,UAAS,OAAO,KAAK;AAC3B,QAAMC,UAAS;AACf,MAAI,QAAQA,QAAO,KAAKD,OAAM;AAC9B,MAAI,OAAO;AAEX,QAAM,QAAQ,CAAC;AAEf,SAAO,OAAO;AACZ,UAAM;AAAA,MACJ,SAASA,QAAO,MAAM,MAAM,MAAM,KAAK,GAAG,OAAO,GAAG,IAAI;AAAA,MACxD,MAAM,CAAC;AAAA,IACT;AAEA,WAAO,MAAM,QAAQ,MAAM,CAAC,EAAE;AAC9B,YAAQC,QAAO,KAAKD,OAAM;AAAA,EAC5B;AAEA,QAAM,KAAK,SAASA,QAAO,MAAM,IAAI,GAAG,OAAO,GAAG,KAAK,CAAC;AAExD,SAAO,MAAM,KAAK,EAAE;AACtB;AAYA,SAAS,SAAS,OAAO,OAAO,KAAK;AACnC,MAAI,aAAa;AACjB,MAAI,WAAW,MAAM;AAErB,MAAI,OAAO;AACT,QAAIE,QAAO,MAAM,YAAY,UAAU;AAEvC,WAAOA,UAAS,OAAOA,UAAS,OAAO;AACrC;AACA,MAAAA,QAAO,MAAM,YAAY,UAAU;AAAA,IACrC;AAAA,EACF;AAEA,MAAI,KAAK;AACP,QAAIA,QAAO,MAAM,YAAY,WAAW,CAAC;AAEzC,WAAOA,UAAS,OAAOA,UAAS,OAAO;AACrC;AACA,MAAAA,QAAO,MAAM,YAAY,WAAW,CAAC;AAAA,IACvC;AAAA,EACF;AAEA,SAAO,WAAW,aAAa,MAAM,MAAM,YAAY,QAAQ,IAAI;AACrE;;;ACjDO,SAAS,KAAK,OAAOC,OAAM;AAEhC,QAAM,SAAS,EAAC,MAAM,QAAQ,OAAO,UAAU,OAAOA,MAAK,KAAK,CAAC,EAAC;AAClE,QAAM,MAAMA,OAAM,MAAM;AACxB,SAAO,MAAM,UAAUA,OAAM,MAAM;AACrC;;;ACRO,SAAS,cAAc,OAAOC,OAAM;AAEzC,QAAM,SAAS;AAAA,IACb,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAC;AAAA,IACb,UAAU,CAAC;AAAA,EACb;AACA,QAAM,MAAMA,OAAM,MAAM;AACxB,SAAO,MAAM,UAAUA,OAAM,MAAM;AACrC;;;ACEO,IAAM,WAAW;AAAA,EACtB;AAAA,EACA,OAAO;AAAA,EACP;AAAA,EACA,QAAQ;AAAA,EACR;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,MAAAC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,MAAM;AAAA,EACN,MAAM;AAAA,EACN,YAAY;AAAA,EACZ,oBAAoB;AACtB;AAGA,SAAS,SAAS;AAEhB,SAAO;AACT;;;ACzCO,SAAS,UAAUC,OAAM;AAC9B,SACE,CAACA,SACD,CAACA,MAAK,YACN,CAACA,MAAK,SAAS,SACf,CAACA,MAAK,SAAS,MAAM,QACrB,CAACA,MAAK,SAAS,MAAM,UACrB,CAACA,MAAK,SAAS,OACf,CAACA,MAAK,SAAS,IAAI,QACnB,CAACA,MAAK,SAAS,IAAI;AAEvB;;;ACdA,IAAMC,OAAM,CAAC,EAAE;AAaR,SAAS,YAAY,MAAM;AAEhC,QAAM,QAAQ,uBAAO,OAAO,IAAI;AAEhC,MAAI,CAAC,QAAQ,CAAC,KAAK,MAAM;AACvB,UAAM,IAAI,MAAM,sCAAsC;AAAA,EACxD;AAEA,QAAM,MAAM,cAAc,CAACC,gBAAe;AACxC,UAAM,KAAK,MAAMA,YAAW,UAAU;AACtC,QAAI,MAAM,CAACD,KAAI,KAAK,OAAO,EAAE,GAAG;AAC9B,YAAM,EAAE,IAAIC;AAAA,IACd;AAAA,EACF,CAAC;AAED,SAAO;AAGP,WAAS,WAAW,YAAY;AAC9B,UAAM,KAAK,MAAM,UAAU;AAE3B,WAAO,MAAMD,KAAI,KAAK,OAAO,EAAE,IAAI,MAAM,EAAE,IAAI;AAAA,EACjD;AACF;AAMA,SAAS,MAAM,OAAO;AACpB,SAAO,OAAO,SAAS,EAAE,EAAE,YAAY;AACzC;;;ACwGA,IAAME,OAAM,CAAC,EAAE;AAYR,SAAS,YAAY,MAAM,SAAS;AACzC,QAAM,WAAW,WAAW,CAAC;AAC7B,QAAMC,aAAY,SAAS,sBAAsB;AAEjD,QAAM,eAAe,CAAC;AAQtB,QAAM,YAAYA;AAElB,QAAM,gBACJ,SAAS,kBAAkB,UAAa,SAAS,kBAAkB,OAC/D,kBACA,SAAS;AAEf,QAAM,gBAAgB,SAAS,iBAAiB;AAEhD,QAAM,uBAAuB,SAAS,wBAAwB;AAE9D,QAAM,0BAA0B,SAAS,2BAA2B;AAAA,IAClE,WAAW,CAAC,SAAS;AAAA,EACvB;AAEA,QAAM,oBAAoB,SAAS,qBAAqB;AAExD,QAAM,iBAAiB,SAAS;AAEhC,QAAM,cAAc,SAAS;AAE7B,QAAM,WAAW,EAAC,GAAG,UAAU,GAAG,SAAS,SAAQ;AAInD,QAAM,aAAa,YAAY,IAAI;AACnC,QAAM,eAAe;AAErB,QAAM,gBAAgB,CAAC;AAEvB,QAAM,iBAAiB,CAAC;AAExB,QAAM,QAAQ;AACd,QAAM,YAAY;AAClB,QAAM,MAAM;AACZ,QAAM,MAAM;AACZ,QAAM,OAAO;AAEb,QAAM,UAAU;AAEhB,QAAM,MAAM,sBAAsB,CAAC,eAAe;AAChD,UAAM,KAAK,OAAO,WAAW,UAAU,EAAE,YAAY;AAIrD,QAAI,CAACD,KAAI,KAAK,cAAc,EAAE,GAAG;AAC/B,mBAAa,EAAE,IAAI;AAAA,IACrB;AAAA,EACF,CAAC;AAGD,SAAO;AAWP,WAAS,QAAQ,MAAM,OAAO;AAE5B,QAAI,QAAQ,UAAU,QAAQ,KAAK,MAAM;AAEvC,YAAM,OAAO,KAAK;AAElB,UAAI,KAAK,OAAO;AACd,YAAI,MAAM,SAAS,WAAW;AAC5B,kBAAQ;AAAA,YACN,MAAM;AAAA,YACN,SAAS;AAAA,YACT,YAAY,CAAC;AAAA,YACb,UAAU,CAAC;AAAA,UACb;AAAA,QACF;AAEA,cAAM,UAAU,KAAK;AAAA,MACvB;AAEA,UAAI,MAAM,SAAS,aAAa,KAAK,aAAa;AAChD,cAAM,aAAa,EAAC,GAAG,MAAM,YAAY,GAAG,KAAK,YAAW;AAAA,MAC9D;AAEA,UAAI,cAAc,SAAS,MAAM,YAAY,KAAK,WAAW;AAC3D,cAAM,WAAW,KAAK;AAAA,MACxB;AAAA,IACF;AAEA,QAAI,MAAM;AACR,YAAM,MAAM,UAAU,OAAO,OAAO,EAAC,UAAU,KAAI;AAEnD,UAAI,CAAC,UAAU,GAAG,GAAG;AAEnB,cAAM,WAAW,EAAC,OAAO,WAAW,GAAG,GAAG,KAAK,SAAS,GAAG,EAAC;AAAA,MAC9D;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAUA,WAAS,MAAME,OAAM,SAAS,OAAO,UAAU;AAC7C,QAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,iBAAW;AACX,cAAQ,CAAC;AAAA,IACX;AAGA,WAAO,QAAQA,OAAM;AAAA,MACnB,MAAM;AAAA,MACN;AAAA,MACA,YAAY,SAAS,CAAC;AAAA,MACtB,UAAU,YAAY,CAAC;AAAA,IACzB,CAAC;AAAA,EACH;AAaA,WAAS,SAASA,OAAM,QAAQ;AAE9B,WAAO,IAAI,OAAOA,OAAM,MAAM;AAAA,EAChC;AAUA,WAAS,SAAS,QAAQ;AAExB,WAAOC,KAAI,OAAO,MAAM;AAAA,EAC1B;AACF;AAYA,SAAS,MAAM,MAAM,IAAI;AACvB,MAAI,KAAK;AAAU,OAAG,WAAW,SAAS,IAAI;AAChD;AAcA,SAAS,UAAU,MAAM,IAAI;AAE3B,MAAI,SAAS;AAGb,MAAI,QAAQ,KAAK,MAAM;AACrB,UAAM,QAAQ,KAAK,KAAK;AACxB,UAAM,YAAY,KAAK,KAAK;AAC5B,UAAM,cAAc,KAAK,KAAK;AAE9B,QAAI,OAAO,UAAU,UAAU;AAG7B,UAAI,OAAO,SAAS,WAAW;AAC7B,eAAO,UAAU;AAAA,MACnB,OAKK;AACH,iBAAS;AAAA,UACP,MAAM;AAAA,UACN,SAAS;AAAA,UACT,YAAY,CAAC;AAAA,UACb,UAAU,CAAC;AAAA,QACb;AAAA,MAWF;AAAA,IACF;AAEA,QAAI,OAAO,SAAS,aAAa,aAAa;AAC5C,aAAO,aAAa,EAAC,GAAG,OAAO,YAAY,GAAG,YAAW;AAAA,IAC3D;AAEA,QACE,cAAc,UACd,OAAO,YACP,cAAc,QACd,cAAc,QACd;AAEA,aAAO,WAAW;AAAA,IACpB;AAAA,EACF;AAEA,SAAO;AACT;AAeO,SAAS,IAAI,OAAOD,OAAM,QAAQ;AACvC,QAAM,OAAOA,SAAQA,MAAK;AAG1B,MAAI,CAAC,MAAM;AACT,UAAM,IAAI,MAAM,yBAAyBA,QAAO,GAAG;AAAA,EACrD;AAEA,MAAIF,KAAI,KAAK,MAAM,UAAU,IAAI,GAAG;AAClC,WAAO,MAAM,SAAS,IAAI,EAAE,OAAOE,OAAM,MAAM;AAAA,EACjD;AAEA,MAAI,MAAM,eAAe,MAAM,YAAY,SAAS,IAAI,GAAG;AAGzD,WAAO,cAAcA,QAAO,EAAC,GAAGA,OAAM,UAAUC,KAAI,OAAOD,KAAI,EAAC,IAAIA;AAAA,EACtE;AAEA,MAAI,MAAM,gBAAgB;AACxB,WAAO,MAAM,eAAe,OAAOA,OAAM,MAAM;AAAA,EACjD;AAEA,SAAO,sBAAsB,OAAOA,KAAI;AAC1C;AAaO,SAASC,KAAI,OAAO,QAAQ;AAEjC,QAAM,SAAS,CAAC;AAEhB,MAAI,cAAc,QAAQ;AACxB,UAAM,QAAQ,OAAO;AACrB,QAAI,QAAQ;AACZ,WAAO,EAAE,QAAQ,MAAM,QAAQ;AAC7B,YAAM,SAAS,IAAI,OAAO,MAAM,KAAK,GAAG,MAAM;AAG9C,UAAI,QAAQ;AACV,YAAI,SAAS,MAAM,QAAQ,CAAC,EAAE,SAAS,SAAS;AAC9C,cAAI,CAAC,MAAM,QAAQ,MAAM,KAAK,OAAO,SAAS,QAAQ;AACpD,mBAAO,QAAQ,OAAO,MAAM,QAAQ,QAAQ,EAAE;AAAA,UAChD;AAEA,cAAI,CAAC,MAAM,QAAQ,MAAM,KAAK,OAAO,SAAS,WAAW;AACvD,kBAAMC,QAAO,OAAO,SAAS,CAAC;AAE9B,gBAAIA,SAAQA,MAAK,SAAS,QAAQ;AAChC,cAAAA,MAAK,QAAQA,MAAK,MAAM,QAAQ,QAAQ,EAAE;AAAA,YAC5C;AAAA,UACF;AAAA,QACF;AAEA,YAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,iBAAO,KAAK,GAAG,MAAM;AAAA,QACvB,OAAO;AACL,iBAAO,KAAK,MAAM;AAAA,QACpB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT;AAYA,SAAS,sBAAsB,OAAOF,OAAM;AAC1C,QAAM,OAAOA,MAAK,QAAQ,CAAC;AAE3B,QAAM,SACJ,WAAWA,SACX,EAAEF,KAAI,KAAK,MAAM,aAAa,KAAKA,KAAI,KAAK,MAAM,WAAW,KACzD,EAAC,MAAM,QAAQ,OAAOE,MAAK,MAAK,IAChC;AAAA,IACE,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,CAAC;AAAA,IACb,UAAUC,KAAI,OAAOD,KAAI;AAAA,EAC3B;AAEN,QAAM,MAAMA,OAAM,MAAM;AACxB,SAAO,MAAM,UAAUA,OAAM,MAAM;AACrC;AAcO,SAAS,KAAK,OAAO,OAAO;AAEjC,QAAM,SAAS,CAAC;AAChB,MAAI,QAAQ;AAEZ,MAAI,OAAO;AACT,WAAO,KAAK,EAAC,MAAM,QAAQ,OAAO,KAAI,CAAC;AAAA,EACzC;AAEA,SAAO,EAAE,QAAQ,MAAM,QAAQ;AAC7B,QAAI;AAAO,aAAO,KAAK,EAAC,MAAM,QAAQ,OAAO,KAAI,CAAC;AAClD,WAAO,KAAK,MAAM,KAAK,CAAC;AAAA,EAC1B;AAEA,MAAI,SAAS,MAAM,SAAS,GAAG;AAC7B,WAAO,KAAK,EAAC,MAAM,QAAQ,OAAO,KAAI,CAAC;AAAA,EACzC;AAEA,SAAO;AACT;;;AC/iBO,SAAS,OAAO,OAAO;AAE5B,QAAM,YAAY,CAAC;AACnB,MAAI,QAAQ;AAEZ,SAAO,EAAE,QAAQ,MAAM,cAAc,QAAQ;AAC3C,UAAM,MAAM,MAAM,aAAa,MAAM,cAAc,KAAK,CAAC;AAEzD,QAAI,CAAC,KAAK;AACR;AAAA,IACF;AAEA,UAAMG,WAAU,MAAM,IAAI,GAAG;AAC7B,UAAM,KAAK,OAAO,IAAI,UAAU,EAAE,YAAY;AAC9C,UAAM,SAAS,aAAa,GAAG,YAAY,CAAC;AAC5C,QAAI,iBAAiB;AAErB,UAAM,iBAAiB,CAAC;AAExB,WAAO,EAAE,kBAAkB,MAAM,eAAe,EAAE,GAAG;AAEnD,YAAM,gBAAgB;AAAA,QACpB,MAAM;AAAA,QACN,SAAS;AAAA,QACT,YAAY;AAAA,UACV,MACE,MACA,MAAM,gBACN,WACA,UACC,iBAAiB,IAAI,MAAM,iBAAiB;AAAA,UAC/C,qBAAqB;AAAA,UACrB,WAAW,CAAC,uBAAuB;AAAA,UACnC,WAAW,MAAM;AAAA,QACnB;AAAA,QACA,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAO,SAAG,CAAC;AAAA,MACvC;AAEA,UAAI,iBAAiB,GAAG;AACtB,sBAAc,SAAS,KAAK;AAAA,UAC1B,MAAM;AAAA,UACN,SAAS;AAAA,UACT,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAO,OAAO,cAAc,EAAC,CAAC;AAAA,QAC1D,CAAC;AAAA,MACH;AAEA,UAAI,eAAe,SAAS,GAAG;AAC7B,uBAAe,KAAK,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC;AAAA,MAChD;AAEA,qBAAe,KAAK,aAAa;AAAA,IACnC;AAEA,UAAM,OAAOA,SAAQA,SAAQ,SAAS,CAAC;AAEvC,QAAI,QAAQ,KAAK,SAAS,aAAa,KAAK,YAAY,KAAK;AAC3D,YAAM,WAAW,KAAK,SAAS,KAAK,SAAS,SAAS,CAAC;AACvD,UAAI,YAAY,SAAS,SAAS,QAAQ;AACxC,iBAAS,SAAS;AAAA,MACpB,OAAO;AACL,aAAK,SAAS,KAAK,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC;AAAA,MAC/C;AAEA,WAAK,SAAS,KAAK,GAAG,cAAc;AAAA,IACtC,OAAO;AACL,MAAAA,SAAQ,KAAK,GAAG,cAAc;AAAA,IAChC;AAGA,UAAMC,YAAW;AAAA,MACf,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY,EAAC,IAAI,MAAM,gBAAgB,QAAQ,OAAM;AAAA,MACrD,UAAU,MAAM,KAAKD,UAAS,IAAI;AAAA,IACpC;AAEA,UAAM,MAAM,KAAKC,SAAQ;AAEzB,cAAU,KAAKA,SAAQ;AAAA,EACzB;AAEA,MAAI,UAAU,WAAW,GAAG;AAC1B;AAAA,EACF;AAEA,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,IACT,YAAY,EAAC,eAAe,MAAM,WAAW,CAAC,WAAW,EAAC;AAAA,IAC1D,UAAU;AAAA,MACR;AAAA,QACE,MAAM;AAAA,QACN,SAAS,MAAM;AAAA,QACf,YAAY;AAAA;AAAA,UAEV,GAAG,KAAK,MAAM,KAAK,UAAU,MAAM,uBAAuB,CAAC;AAAA,UAC3D,IAAI;AAAA,QACN;AAAA,QACA,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAO,MAAM,cAAa,CAAC;AAAA,MACvD;AAAA,MACA,EAAC,MAAM,QAAQ,OAAO,KAAI;AAAA,MAC1B;AAAA,QACE,MAAM;AAAA,QACN,SAAS;AAAA,QACT,YAAY,CAAC;AAAA,QACb,UAAU,MAAM,KAAK,WAAW,IAAI;AAAA,MACtC;AAAA,MACA,EAAC,MAAM,QAAQ,OAAO,KAAI;AAAA,IAC5B;AAAA,EACF;AACF;;;AC/BO,SAAS,OAAO,MAAM,SAAS;AACpC,QAAM,QAAQ,YAAY,MAAM,OAAO;AACvC,QAAMC,QAAO,MAAM,IAAI,MAAM,IAAI;AACjC,QAAM,OAAO,OAAO,KAAK;AAEzB,MAAI,MAAM;AAIR,IAAAA,MAAK,SAAS,KAAK,EAAC,MAAM,QAAQ,OAAO,KAAI,GAAG,IAAI;AAAA,EACtD;AAGA,SAAO,MAAM,QAAQA,KAAI,IAAI,EAAC,MAAM,QAAQ,UAAUA,MAAI,IAAIA;AAChE;;;AC5GA,wBAAuB;AACvB,IAAM,eAAe,CAACC,IAAGC,UAASD,GAAEC,OAAM,QAAQ,EAAE,OAAOA,MAAK,MAAM,GAAGC,KAAIF,IAAGC,KAAI,CAAC;AACrF,IAAM,YAAY,CAACD,IAAGC,UAASD,GAAEC,OAAM,OAAOC,KAAIF,IAAGC,KAAI,CAAC;AAC1D,IAAM,cAAc,CAACD,IAAGC,UAASD,GAAEC,OAAM,OAAOC,KAAIF,IAAGC,KAAI,CAAC;AAC5D,IAAME,SAAQ,CAACH,IAAGC,UAASD,GAAEC,OAAM,OAAO;AAAA,EACtC,KAAKA,MAAK;AAAA,EACV,KAAKA,MAAK;AAAA,EACV,OAAOA,MAAK;AAAA,EACZ,WAAO,kBAAAG,SAAWH,MAAK,QAAQ,SAASA,MAAK,UAAU,IAAIA,MAAK,KAAK,KAAK;AAAA,EAC1E,QAAQA,MAAK;AAAA,EACb,OAAOA,MAAK;AAChB,CAAC;AACD,IAAM,UAAU,CAACD,IAAGC,UAASD,GAAEC,OAAM,cAAcC,KAAIF,IAAGC,KAAI,CAAC;AAC/D,IAAM,SAAS,CAACD,IAAGC,UAASD,GAAEC,OAAM,OAAO,EAAE,OAAO,SAAS,GAAGC,KAAIF,IAAGC,KAAI,CAAC;AAC5E,IAAM,YAAY,CAACD,IAAGC,UAASD,GAAEC,OAAM,UAAU;AAAA,EAC7C,IAAIA,MAAK,cAAcA,MAAK,SAAS;AAAA,EACrC,WAAO,kBAAAG,SAAW,EAAE,UAAUH,MAAK,eAAe,MAAM,GAAGA,MAAK,KAAK,KAAK;AAC9E,GAAGC,KAAIF,IAAGC,KAAI,CAAC;AACf,IAAM,kBAAkB,CAACD,IAAGC,UAASD,GAAEC,OAAM,KAAK,EAAE,OAAO,mBAAmB,GAAGC,KAAIF,IAAGC,KAAI,CAAC;AAC7F,IAAM,aAAa,CAACD,IAAGC,UAASD,GAAEC,OAAM,SAAS;AAAA,EAC7C,WAAO,kBAAAG,SAAW;AAAA,IACd,CAACH,MAAK,KAAK,GAAGA,MAAK;AAAA;AAAA,IACnB,YAAY;AAAA,IACZ,CAACA,MAAK,IAAI,GAAGA,MAAK,QAAQA,MAAK,SAAS;AAAA,EAC5C,CAAC;AACL,GAAGC,KAAIF,IAAGC,KAAI,CAAC;AACf,IAAM,gBAAgB,CAACD,IAAGC,UAAS;AAC/B,MAAI,IAAI;AACR,QAAM,gBAAgB,KAAKA,MAAK,UAAU,QAAQ,OAAO,SAAS,SAAS,GAAG,OAAO,CAAC,EAAE,YAAY,OAAO,KAAKA,MAAK,UAAU,QAAQ,OAAO,SAAS,SAAS,GAAG,MAAM,CAAC;AAC1K,SAAOD,GAAEC,OAAM,QAAQ,EAAE,OAAO,iBAAiB,GAAG,CAAC,EAAE,QAAQ,GAAG,eAAeA,MAAK,OAAO,CAAC,CAAC;AACnG;AACA,IAAM,OAAO,CAACD,IAAGC,UAAS;AACtB,QAAM,QAAQ,EAAE,IAAIA,MAAK,cAAc,QAAW,OAAO,eAAe;AACxE,MAAIA,MAAK,MAAM,QAAQ,IAAI,MAAM,IAAI;AACjC,UAAM,WAAWD,GAAEC,OAAM,OAAO,OAAO,CAAC,EAAE,QAAQA,MAAK,KAAK,CAAC,CAAC;AAC9D,WAAOD,GAAEC,OAAM,OAAO,CAAC,QAAQ,CAAC;AAAA,EACpC;AACA,SAAOD,GAAEC,OAAM,OAAO,OAAO,CAAC,EAAE,QAAQA,MAAK,MAAM,QAAQ,aAAa,GAAG,CAAC,CAAC,CAAC;AAClF;AACA,IAAM,aAAa,CAACD,IAAGC,UAAS;AAC5B,SAAOD,GAAEC,OAAM,QAAQ,EAAE,OAAO,cAAc,GAAG;AAAA,IAC7C,EAAE,QAAQA,MAAK,MAAM,QAAQ,aAAa,GAAG,CAAC;AAAA,EAClD,CAAC;AACL;AACA,IAAM,iBAAiB,CAACD,IAAGC,UAASD,GAAEC,OAAM,MAAMC,KAAIF,IAAGC,KAAI,CAAC;AAC9D,IAAM,iBAAiB,CAACD,IAAGC,UAASD,GAAEC,OAAM,MAAMC,KAAIF,IAAGC,KAAI,CAAC;AAC9D,IAAM,wBAAwB,CAACD,IAAGC,UAASD,GAAEC,OAAM,MAAMC,KAAIF,IAAGC,KAAI,CAAC;AACrE,IAAM,WAAW,CAACD,IAAGC,UAAS;AAC1B,QAAM,WAAW,CAACD,GAAEC,OAAM,QAAQ,EAAE,OAAO,OAAO,GAAG,CAAC,EAAE,QAAQ,IAAIA,MAAK,OAAO,CAAC,CAAC,CAAC;AACnF,MAAIA,MAAK,OAAO;AACZ,aAAS,KAAKD,GAAEC,OAAM,QAAQ,CAAC,GAAG,CAAC,EAAE,QAAQA,MAAK,KAAK,CAAC,CAAC,CAAC;AAAA,EAC9D;AACA,SAAOD,GAAEC,OAAM,QAAQ,EAAE,OAAO,iBAAiB,GAAG,QAAQ;AAChE;AACA,IAAM,gBAAgB,CAACD,IAAGC,UAAS;AAC/B,QAAM,kBAAkB;AAAA,IACpBD,GAAEC,OAAM,QAAQ,EAAE,OAAO,OAAO,GAAG,CAAC,EAAE,QAAQ,IAAIA,MAAK,OAAO,CAAC,CAAC;AAAA,EACpE;AACA,MAAIA,MAAK,MAAM;AACX,oBAAgB,KAAKD,GAAEC,OAAM,QAAQ,EAAE,OAAO,OAAO,GAAG,CAAC,EAAE,QAAQA,MAAK,IAAI,CAAC,CAAC,CAAC;AAAA,EACnF;AACA,QAAM,gBAAgB,CAAC;AACvB,MAAIA,MAAK,SAAS;AACd,UAAM,gBAAgB,OAAO,KAAKA,MAAK,OAAO,EACzC,IAAI,CAAC,MAAM,IAAI,MAAMA,MAAK,QAAQ,CAAC,GAAG,EACtC,KAAK,IAAI;AACd,kBAAc,KAAKD,GAAEC,OAAM,OAAO,CAACD,GAAEC,OAAM,QAAQ,EAAE,OAAO,UAAU,GAAG,CAAC,EAAE,QAAQ,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA,EAC1G;AACA,gBAAc,KAAKD,GAAEC,OAAM,OAAO,CAACD,GAAEC,OAAM,QAAQ,CAAC,EAAE,QAAQA,MAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7E,SAAOD,GAAEC,OAAM,OAAO,EAAE,OAAO,sBAAsB,GAAG;AAAA,IACpDD,GAAEC,OAAM,KAAK,CAAC,GAAG,eAAe;AAAA,IAChC,GAAG;AAAA,EACP,CAAC;AACL;AACA,IAAM,QAAQ,CAACD,IAAGC,UAASD,GAAEC,OAAM,OAAO,EAAE,OAAO,SAAS,cAAcA,MAAK,KAAK,GAAGC,KAAIF,IAAGC,KAAI,CAAC;AACnG,IAAM,UAAU,CAACD,IAAGC,UAAS,EAAE,WAAWA,MAAK,KAAK;AACpD,IAAMI,WAAU,CAACL,IAAGC,UAASD,GAAEC,OAAM,IAAIA,MAAK,SAAS,EAAE,IAAIA,MAAK,cAAc,OAAU,GAAGC,KAAIF,IAAGC,KAAI,CAAC;AACzG,IAAM,iBAAiB,CAACD,IAAGC,UAAS;AAChC,MAAIA,MAAK,UAAU;AACf,WAAOD,GAAEC,OAAM,KAAK,EAAE,MAAM,IAAIA,MAAK,cAAc,OAAOA,MAAK,SAAS,OAAU,GAAGC,KAAIF,IAAGC,KAAI,CAAC;AAAA,EACrG,OACK;AACD,WAAOD,GAAEC,OAAM,QAAQ,EAAE,OAAO,2BAA2B,GAAG;AAAA,MAC1DD,GAAEC,OAAM,QAAQ,EAAE,OAAO,OAAO,GAAG,CAAC,EAAE,QAAQ,IAAIA,MAAK,OAAO,CAAC,CAAC;AAAA,MAChED,GAAEC,OAAM,QAAQ,CAAC,GAAG,CAAC,EAAE,QAAQA,MAAK,UAAU,CAAC,CAAC;AAAA,IACpD,CAAC;AAAA,EACL;AACJ;AAIA,IAAMK,SAAQ,CAACN,IAAGC,UAAS;AACvB,EAAAA,MAAK,OAAO,EAAE,aAAa,EAAE,OAAOA,MAAK,MAAM,EAAE;AACjD,SAAOA,MAAK;AACZ,SAAO,SAAgB,MAAMD,IAAGC,KAAI;AACxC;AACA,IAAMM,QAAO,CAACP,IAAGC,UAAS;AACtB,QAAM,QAAQA,MAAK,QAAQA,MAAK,QAAQ,OAAO;AAC/C,QAAM,QAAQ,CAAC;AACf,MAAIA,MAAK,YAAY;AACjB,UAAM,KAAKA,MAAK;AAAA,EACpB;AACA,QAAM,gBAAY,kBAAAG,SAAW,EAAE,CAAC,cAAcH,MAAK,IAAI,GAAGA,MAAK,KAAK,GAAGA,MAAK,KAAK,KAAK;AACtF,QAAM,WAAWD,GAAEC,OAAM,QAAQ,OAAO,CAAC,EAAE,QAAQ,KAAK,CAAC,CAAC;AAC1D,SAAOD,GAAEC,MAAK,UAAU,OAAO,CAAC,QAAQ,CAAC;AAC7C;AACA,IAAM,SAAS,CAACD,IAAGC,UAASD,GAAEC,OAAM,OAAO,EAAE,OAAO,SAAS,CAAC;AAC9D,IAAM,eAAe,CAACD,IAAGC,UAASD,GAAEC,OAAM,OAAO,EAAE,OAAO,eAAe,CAAC;AAC1E,IAAM,UAAU,CAACD,IAAGC,UAASD,GAAEC,OAAM,SAAS;AAC9C,IAAM,UAAU,CAACD,IAAGC,UAASD,GAAEC,OAAM,SAAS;AAC9C,IAAM,QAAQ,CAACD,IAAGC,UAASD,GAAEC,OAAM,KAAK;AACxC,IAAM,UAAU,CAACD,IAAGC,UAASD,GAAEC,OAAM,OAAO,EAAE,MAAMA,MAAK,KAAK,CAAC;AAC/D,IAAM,YAAY,CAACD,IAAGC,UAASD,GAAEC,OAAM,GAAG;AAC1C,IAAM,SAAS,CAACD,IAAGC,UAASD,GAAEC,OAAM,SAAS,EAAE,OAAO,SAAS,CAAC;AAChE,IAAM,QAAQ,CAACD,IAAGC,UAASD,GAAEC,OAAM,OAAO,EAAE,IAAIA,MAAK,GAAG,CAAC;AACzD,IAAM,UAAU,CAACD,IAAGC,UAASD,GAAEC,OAAM,OAAO,EAAE,OAAO,SAAS,CAAC;AAC/D,IAAM,OAAO,CAACD,IAAGC,UAASD,GAAEC,OAAM,OAAO,EAAE,OAAO,SAAS,CAAC;AAC5D,IAAM,SAAS,CAACD,IAAGC,UAASD,GAAEC,OAAM,OAAO,EAAE,OAAO,SAAS,CAAC;AACvD,IAAM,aAAa,CAAC,SAAS,CAAC,SAAS;AAC1C,SAAO,OAAO,MAAM;AAAA,IAChB,GAAG;AAAA,IACH,UAAU;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,MACA,OAAAE;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,SAAAE;AAAA,MACA;AAAA,MACA,MAAAE;AAAA,MACA,OAAAD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,GAAG,SAAS,QAAQ,SAAS,SAAS,SAAS,KAAK;AAAA,IACxD;AAAA,EACJ,CAAC;AACL;;;AClKe,SAAR,mBAAoC,QAAQ;AAClD,MAAI,OAAO,WAAW,UAAU;AAC/B,UAAM,IAAI,UAAU,mBAAmB;AAAA,EACxC;AAIA,SAAO,OACL,QAAQ,uBAAuB,MAAM,EACrC,QAAQ,MAAM,OAAO;AACxB;;;AC0DA,IAAME,OAAM,CAAC,EAAE;AAqBR,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBT,SAAU,MAAMC,OAAM,SAAS,SAAS;AAEtC,QAAI;AAEJ,QAAI;AAEJ,QAAI,OAAOA,UAAS,YAAYA,iBAAgB,QAAQ;AAEtD,eAAS,CAAC,CAACA,OAAM,OAAO,CAAC;AACzB,iBAAW;AAAA,IACb,OAAO;AACL,eAASA;AAET,iBAAW;AAAA,IACb;AAEA,QAAI,CAAC,UAAU;AACb,iBAAW,CAAC;AAAA,IACd;AAEA,UAAM,UAAU,QAAQ,SAAS,UAAU,CAAC,CAAC;AAC7C,UAAM,QAAQ,QAAQ,MAAM;AAC5B,QAAI,YAAY;AAEhB,WAAO,EAAE,YAAY,MAAM,QAAQ;AACjC,mBAAa,MAAM,QAAQ,OAAO;AAAA,IACpC;AAGA,WAAO;AAGP,aAAS,QAAQC,OAAM,SAAS;AAC9B,UAAI,QAAQ;AAEZ,UAAI;AAEJ,aAAO,EAAE,QAAQ,QAAQ,QAAQ;AAC/B,cAAM,SAAS,QAAQ,KAAK;AAE5B,YACE;AAAA,UACE;AAAA;AAAA,UAEA,cAAc,YAAY,SAAS,QAAQ,MAAM,IAAI;AAAA,UACrD;AAAA,QACF,GACA;AACA;AAAA,QACF;AAEA,sBAAc;AAAA,MAChB;AAEA,UAAI,aAAa;AACf,eAAO,QAAQA,OAAM,OAAO;AAAA,MAC9B;AAAA,IACF;AAYA,aAAS,QAAQA,OAAM,SAAS;AAC9B,YAAM,SAAS,QAAQ,QAAQ,SAAS,CAAC;AACzC,YAAMD,QAAO,MAAM,SAAS,EAAE,CAAC;AAC/B,YAAME,WAAU,MAAM,SAAS,EAAE,CAAC;AAClC,UAAI,QAAQ;AAEZ,YAAM,QAAQ,OAAO,SAAS,QAAQD,KAAI;AAC1C,UAAI,SAAS;AAEb,UAAI,QAAQ,CAAC;AAEb,MAAAD,MAAK,YAAY;AAEjB,UAAI,QAAQA,MAAK,KAAKC,MAAK,KAAK;AAEhC,aAAO,OAAO;AACZ,cAAME,YAAW,MAAM;AAEvB,cAAM,cAAc;AAAA,UAClB,OAAO,MAAM;AAAA,UACb,OAAO,MAAM;AAAA;AAAA,UAEb,OAAO,CAAC,GAAG,SAASF,KAAI;AAAA,QAC1B;AACA,YAAI,QAAQC,SAAQ,GAAG,OAAO,WAAW;AAEzC,YAAI,OAAO,UAAU,UAAU;AAC7B,kBAAQ,MAAM,SAAS,IAAI,EAAC,MAAM,QAAQ,MAAK,IAAI;AAAA,QACrD;AAGA,YAAI,UAAU,OAAO;AACnB,cAAI,UAAUC,WAAU;AACtB,kBAAM,KAAK;AAAA,cACT,MAAM;AAAA,cACN,OAAOF,MAAK,MAAM,MAAM,OAAOE,SAAQ;AAAA,YACzC,CAAC;AAAA,UACH;AAEA,cAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,kBAAM,KAAK,GAAG,KAAK;AAAA,UACrB,WAAW,OAAO;AAChB,kBAAM,KAAK,KAAK;AAAA,UAClB;AAEA,kBAAQA,YAAW,MAAM,CAAC,EAAE;AAC5B,mBAAS;AAAA,QACX;AAEA,YAAI,CAACH,MAAK,QAAQ;AAChB;AAAA,QACF;AAEA,gBAAQA,MAAK,KAAKC,MAAK,KAAK;AAAA,MAC9B;AAEA,UAAI,QAAQ;AACV,YAAI,QAAQA,MAAK,MAAM,QAAQ;AAC7B,gBAAM,KAAK,EAAC,MAAM,QAAQ,OAAOA,MAAK,MAAM,MAAM,KAAK,EAAC,CAAC;AAAA,QAC3D;AAEA,eAAO,SAAS,OAAO,OAAO,GAAG,GAAG,KAAK;AAAA,MAC3C,OAAO;AACL,gBAAQ,CAACA,KAAI;AAAA,MACf;AAEA,aAAO,QAAQ,MAAM;AAAA,IACvB;AAAA,EACF;AAAA;AAWJ,SAAS,QAAQ,QAAQ;AAEvB,QAAM,SAAS,CAAC;AAEhB,MAAI,OAAO,WAAW,UAAU;AAC9B,UAAM,IAAI,UAAU,oCAAoC;AAAA,EAC1D;AAEA,MAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,QAAI,QAAQ;AAEZ,WAAO,EAAE,QAAQ,OAAO,QAAQ;AAC9B,aAAO,KAAK;AAAA,QACV,aAAa,OAAO,KAAK,EAAE,CAAC,CAAC;AAAA,QAC7B,WAAW,OAAO,KAAK,EAAE,CAAC,CAAC;AAAA,MAC7B,CAAC;AAAA,IACH;AAAA,EACF,OAAO;AAEL,QAAIG;AAEJ,SAAKA,QAAO,QAAQ;AAClB,UAAIL,KAAI,KAAK,QAAQK,IAAG,GAAG;AACzB,eAAO,KAAK,CAAC,aAAaA,IAAG,GAAG,WAAW,OAAOA,IAAG,CAAC,CAAC,CAAC;AAAA,MAC1D;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT;AAUA,SAAS,aAAaJ,OAAM;AAC1B,SAAO,OAAOA,UAAS,WAAW,IAAI,OAAO,mBAAOA,KAAI,GAAG,GAAG,IAAIA;AACpE;AAUA,SAAS,WAAW,SAAS;AAC3B,SAAO,OAAO,YAAY,aAAa,UAAU,MAAM;AACzD;;;AC9SO,IAAI;AAAA,CACV,SAAUK,aAAY;AACnB,EAAAA,YAAW,SAAS,IAAI;AACxB,EAAAA,YAAW,MAAM,IAAI;AACrB,EAAAA,YAAW,QAAQ,IAAI;AACvB,EAAAA,YAAW,OAAO,IAAI;AACtB,EAAAA,YAAW,MAAM,IAAI;AACzB,GAAG,eAAe,aAAa,CAAC,EAAE;AAC3B,IAAI;AAAA,CACV,SAAUC,gBAAe;AACtB,EAAAA,eAAc,KAAK,IAAI;AACvB,EAAAA,eAAc,QAAQ,IAAI;AAC1B,EAAAA,eAAc,IAAI,IAAI;AAC1B,GAAG,kBAAkB,gBAAgB,CAAC,EAAE;AAIxC,SAAS,yBAAyBC,OAAM,YAAY;AAChD,QAAM,MAAM,OAAO,UAAU;AAC7B,iBAAeA,OAAM,EAAE,MAAM,KAAK,YAAY,IAAI,CAAC;AACvD;AACA,SAAS,aAAaA,OAAM;AACxB,SAAOA,MAAK,SAAS,cAAcA,MAAK,OAAOA,MAAK;AACxD;AAUO,SAAS,uBAAuB,OAAO,QAAQ;AAClD,QAAM,iBAAiB,QAAQ;AAC/B,SAAO,OAAO,IAAI,CAAC,OAAO,UAAU;AAChC,QAAI,UAAU,QAAQ,QAAQ;AAC1B,aAAO;AACX,QAAI,UAAU;AACV,aAAO,QAAQ;AACnB,WAAO;AAAA,EACX,CAAC;AACL;AAQO,SAAS,wBAAwB,QAAQ;AAC5C,WAAS,OAAO,OAAO,CAAC,MAAM,MAAM,IAAI;AACxC,SAAO,UAAU,OAAO,OAAO,SAAS,CAAC,MAAM,GAAG;AAC9C,WAAO,IAAI;AAAA,EACf;AACA,SAAO,OAAO,KAAK,GAAG;AAC1B;AACO,IAAM,QAAN,MAAY;AAAA,EACf,YAAY,cAAc,SAAS;AAC/B,SAAK,eAAe,gBAAgB,CAAC;AACrC,SAAK,UAAU,WAAW,CAAC;AAAA,EAC/B;AAAA,EACA,UAAUA,OAAM;AACZ,UAAM,OAAO,aAAaA,KAAI;AAC9B,QAAI,QAAQ,QAAQ,YAAY;AAC5B,UAAI,aAAa;AACjB,UAAIA,MAAK,eAAe,OAAO;AAC3B,qBAAa,KAAK,eAAeA,OAAM,IAAI;AAC3C,QAAAA,MAAK,aAAa;AAAA,MACtB;AACA,UAAIA,MAAK,YAAY;AACjB,aAAK,QAAQA,MAAK,UAAU,IAAI;AAAA,UAC5B,MAAM,gBAAgBA,KAAI;AAAA,UAC1B;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,gCAAgC,MAAM;AAClC,UAAM,WAAW,UAAU,WAAW,IAAI,EAAE,OAAO,CAACA,UAASA,MAAK,eAAe,KAAK;AACtF,UAAM,gBAAgB,IAAI,IAAI,SAAS,IAAI,CAACA,UAASA,MAAK,KAAK,CAAC;AAChE,SAAK,aAAa,UAAU,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,UAAU,cAAc,IAAI,KAAK,IAAI,IAAI,IAAI;AAAA,EACrG;AAAA,EACA,eAAeA,OAAM,MAAM;AACvB,QAAI,SAAS,WAAW,SAAS;AAG7B,UAAI,CAAC,KAAK,aAAa;AACnB,aAAK,aAAa,UAAU,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACjD,WAAK,aAAa,UAAU,uBAAuBA,MAAK,OAAO,KAAK,aAAa,OAAO;AACxF,aAAO,wBAAwB,KAAK,aAAa,OAAO;AAAA,IAC5D;AACA,QAAI,QAAQ,KAAK,cAAc;AAC3B,WAAK,aAAa,IAAI,KAAK;AAAA,IAC/B,OACK;AACD,WAAK,aAAa,IAAI,IAAI;AAAA,IAC9B;AACA,WAAO,OAAO,KAAK,aAAa,IAAI,CAAC;AAAA,EACzC;AAAA,EACA,UAAU,YAAY;AAClB,QAAI,CAAC;AACD,aAAO;AACX,WAAO,KAAK,QAAQ,UAAU;AAAA,EAClC;AAAA,EACA,wBAAwBA,OAAM;AAC1B,QAAI;AACJ,UAAM,SAAS,KAAK,UAAUA,MAAK,UAAU;AAC7C,QAAI,CAAC,QAAQ;AACT;AAAA,IACJ;AACA,UAAM,QAAQ;AAAA,MACV,KAAK;AAAA,QACD,IAAIA,MAAK,SAAS,cAAc;AAAA,QAChC,KAAKA,MAAK,SAAS,cAAc;AAAA,QACjC,QAAQA,MAAK,SAAS,cAAc;AAAA,MACxC;AAAA,MACA,QAAQ;AAAA,QACJ,MAAM,OAAO,SAAS,WAAW;AAAA,QACjC,QAAQ,OAAO,SAAS,WAAW;AAAA,QACnC,OAAO,OAAO,SAAS,WAAW;AAAA,QAClC,SAAS,OAAO,SAAS,WAAW;AAAA,MACxC;AAAA,IACJ;AACA,UAAM,iBAAiB,GAAG,KAAKA,MAAK,cAAc,QAAQ,OAAO,SAAS,SAAS,GAAG;AACtF,QAAI,MAAM,IAAI,MAAM,MAAM,OAAO,QAAQ,OAAO,KAAK,YAAY;AAC7D,UAAI,gBAAgB;AAChB,uBAAeA,OAAM,IAAI,OAAO,KAAK,aAAa;AAAA,MACtD;AACA,MAAAA,MAAK,WAAW;AAAA,IACpB,WACS,MAAM,IAAI,OAAO,MAAM,OAAO,SAAS;AAC5C,UAAI,gBAAgB;AAChB,QAAAA,MAAK,WAAW,gBAAgB,OAAO,IAAI,EAAE;AAAA,MACjD;AACA,MAAAA,MAAK,WAAW;AAAA,IACpB,WACS,MAAM,IAAI,QAAQ,MAAM,OAAO,UAAU,MAAM,OAAO,QAAQ;AACnE,UAAI,gBAAgB;AAChB,cAAMC,WAAU,OAAO,uBAAuB,OAAO,IAAI;AACzD,QAAAD,MAAK,WAAW,gBAAgBC,QAAO,EAAE;AAAA,MAC7C;AACA,MAAAD,MAAK,WAAW;AAAA,IACpB,WACS,MAAM,IAAI,UAAU,MAAM,OAAO,UAAU,OAAO,KAAK,YAAY;AACxE,UAAI,gBAAgB;AAChB,uBAAeA,OAAM,WAAW;AAAA,MACpC;AACA,+BAAyBA,OAAM,OAAO,KAAK,UAAU;AACrD,MAAAA,MAAK,WAAW;AAAA,IACpB,WACS,MAAM,IAAI,UAAU,MAAM,OAAO,SAAS,OAAO,KAAK,YAAY;AACvE,UAAI,gBAAgB;AAChB,uBAAeA,OAAM,UAAU;AAAA,MACnC;AACA,+BAAyBA,OAAM,OAAO,KAAK,UAAU;AACrD,MAAAA,MAAK,WAAW;AAAA,IACpB;AAAA,EACJ;AACJ;AACO,IAAM,mBAAmB,CAAC,OAAO,MAAM,SAAS;AACnD,QAAM,gCAAgC,IAAI;AAC1C,MAAI,CAAC,KAAK,6BAA6B;AACnC,UAAM,MAAM,aAAa,CAACA,UAAS,MAAM,UAAUA,KAAI,CAAC;AAAA,EAC5D;AACA,MAAI,CAAC,KAAK,4BAA4B;AAClC,UAAM,MAAM,QAAQ,CAACA,UAAS,MAAM,UAAUA,KAAI,CAAC;AAAA,EACvD;AACA,MAAI,CAAC,KAAK,2BAA2B;AACjC,UAAM,MAAM,WAAW,CAACA,UAAS,MAAM,UAAUA,KAAI,CAAC;AAAA,EAC1D;AACA,SAAO;AACX;AACO,IAAM,oBAAoB,CAAC,OAAO,SAAS;AAC9C,YAAU,QAAQ,IAAI,EAAE,QAAQ,CAACA,UAAS;AACtC,UAAM,YAAY,eAAeA,MAAK,GAAG;AACzC,QAAI,aAAa,UAAU,cAAc,MAAM,SAAS;AACpD,MAAAA,MAAK,OAAO;AACZ,MAAAA,MAAK,OAAO,MAAM,QAAQ,UAAU,UAAU,EAAE,SAAS,WAAW,OAAO,OAAO;AAClF,MAAAA,MAAK,aAAa,UAAU;AAC5B,MAAAA,MAAK,QAAQ,UAAU;AACvB,aAAOA,MAAK;AAAA,IAChB;AAAA,EACJ,CAAC;AACD,QAAM,MAAM,kBAAkB,CAACA,UAAS;AACpC,UAAM,wBAAwBA,KAAI;AAAA,EACtC,CAAC;AACL;;;ACjKA,oBAAoB;;;ACxBb,IAAM,SAAN,MAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOlB,YAAY,UAAU,QAAQE,QAAO;AACnC,SAAK,WAAW;AAChB,SAAK,SAAS;AACd,QAAIA,QAAO;AACT,WAAK,QAAQA;AAAA,IACf;AAAA,EACF;AACF;AAGA,OAAO,UAAU,WAAW,CAAC;AAE7B,OAAO,UAAU,SAAS,CAAC;AAE3B,OAAO,UAAU,QAAQ;;;ACflB,SAAS,MAAMC,cAAaC,QAAO;AAExC,QAAM,WAAW,CAAC;AAElB,QAAM,SAAS,CAAC;AAChB,MAAI,QAAQ;AAEZ,SAAO,EAAE,QAAQD,aAAY,QAAQ;AACnC,WAAO,OAAO,UAAUA,aAAY,KAAK,EAAE,QAAQ;AACnD,WAAO,OAAO,QAAQA,aAAY,KAAK,EAAE,MAAM;AAAA,EACjD;AAEA,SAAO,IAAI,OAAO,UAAU,QAAQC,MAAK;AAC3C;;;ACrBO,SAAS,UAAU,OAAO;AAC/B,SAAO,MAAM,YAAY;AAC3B;;;ACNO,IAAM,OAAN,MAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMhB,YAAY,UAAU,WAAW;AAE/B,SAAK,WAAW;AAEhB,SAAK,YAAY;AAAA,EACnB;AACF;AAGA,KAAK,UAAU,QAAQ;AACvB,KAAK,UAAU,UAAU;AACzB,KAAK,UAAU,aAAa;AAC5B,KAAK,UAAU,oBAAoB;AACnC,KAAK,UAAU,SAAS;AACxB,KAAK,UAAU,iBAAiB;AAChC,KAAK,UAAU,iBAAiB;AAChC,KAAK,UAAU,wBAAwB;AACvC,KAAK,UAAU,kBAAkB;AACjC,KAAK,UAAU,UAAU;;;ACxBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAI,SAAS;AAEN,IAAM,UAAU,UAAU;AAC1B,IAAM,aAAa,UAAU;AAC7B,IAAM,oBAAoB,UAAU;AACpC,IAAM,SAAS,UAAU;AACzB,IAAM,iBAAiB,UAAU;AACjC,IAAM,iBAAiB,UAAU;AACjC,IAAM,wBAAwB,UAAU;AAE/C,SAAS,YAAY;AACnB,SAAO,KAAK,EAAE;AAChB;;;ACPA,IAAM,SAAS,OAAO,KAAK,aAAK;AAEzB,IAAM,cAAN,cAA0B,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQpC,YAAY,UAAU,WAAW,MAAMC,QAAO;AAC5C,QAAI,QAAQ;AAEZ,UAAM,UAAU,SAAS;AAEzB,SAAK,MAAM,SAASA,MAAK;AAEzB,QAAI,OAAO,SAAS,UAAU;AAC5B,aAAO,EAAE,QAAQ,OAAO,QAAQ;AAC9B,cAAM,QAAQ,OAAO,KAAK;AAC1B,aAAK,MAAM,OAAO,KAAK,IAAI,OAAO,cAAM,KAAK,OAAO,cAAM,KAAK,CAAC;AAAA,MAClE;AAAA,IACF;AAAA,EACF;AACF;AAEA,YAAY,UAAU,UAAU;AAOhC,SAAS,KAAK,QAAQC,MAAK,OAAO;AAChC,MAAI,OAAO;AAET,WAAOA,IAAG,IAAI;AAAA,EAChB;AACF;;;ACzBA,IAAMC,OAAM,CAAC,EAAE;AAMR,SAAS,OAAO,YAAY;AAEjC,QAAM,WAAW,CAAC;AAElB,QAAM,SAAS,CAAC;AAEhB,MAAI;AAEJ,OAAK,QAAQ,WAAW,YAAY;AAClC,QAAIA,KAAI,KAAK,WAAW,YAAY,IAAI,GAAG;AACzC,YAAM,QAAQ,WAAW,WAAW,IAAI;AACxC,YAAM,OAAO,IAAI;AAAA,QACf;AAAA,QACA,WAAW,UAAU,WAAW,cAAc,CAAC,GAAG,IAAI;AAAA,QACtD;AAAA,QACA,WAAW;AAAA,MACb;AAEA,UACE,WAAW,mBACX,WAAW,gBAAgB,SAAS,IAAI,GACxC;AACA,aAAK,kBAAkB;AAAA,MACzB;AAEA,eAAS,IAAI,IAAI;AAEjB,aAAO,UAAU,IAAI,CAAC,IAAI;AAC1B,aAAO,UAAU,KAAK,SAAS,CAAC,IAAI;AAAA,IACtC;AAAA,EACF;AAEA,SAAO,IAAI,OAAO,UAAU,QAAQ,WAAW,KAAK;AACtD;;;ACvDO,IAAM,QAAQ,OAAO;AAAA,EAC1B,OAAO;AAAA,EACP,UAAU,GAAG,MAAM;AACjB,WAAO,WAAW,KAAK,MAAM,CAAC,EAAE,YAAY;AAAA,EAC9C;AAAA,EACA,YAAY;AAAA,IACV,cAAc;AAAA,IACd,cAAc;AAAA,IACd,WAAW;AAAA,IACX,WAAW;AAAA,IACX,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AACF,CAAC;;;ACdM,IAAM,MAAM,OAAO;AAAA,EACxB,OAAO;AAAA,EACP,UAAU,GAAG,MAAM;AACjB,WAAO,SAAS,KAAK,MAAM,CAAC,EAAE,YAAY;AAAA,EAC5C;AAAA,EACA,YAAY,EAAC,SAAS,MAAM,SAAS,MAAM,UAAU,KAAI;AAC3D,CAAC;;;ACHM,SAAS,uBAAuB,YAAY,WAAW;AAC5D,SAAO,aAAa,aAAa,WAAW,SAAS,IAAI;AAC3D;;;ACAO,SAAS,yBAAyB,YAAY,UAAU;AAC7D,SAAO,uBAAuB,YAAY,SAAS,YAAY,CAAC;AAClE;;;ACNO,IAAM,QAAQ,OAAO;AAAA,EAC1B,OAAO;AAAA,EACP,YAAY,EAAC,YAAY,cAAa;AAAA,EACtC,WAAW;AAAA,EACX,YAAY,EAAC,OAAO,MAAM,YAAY,KAAI;AAC5C,CAAC;;;ACLM,IAAM,OAAO,OAAO;AAAA,EACzB,UAAU,GAAG,MAAM;AACjB,WAAO,SAAS,SAAS,OAAO,UAAU,KAAK,MAAM,CAAC,EAAE,YAAY;AAAA,EACtE;AAAA,EACA,YAAY;AAAA,IACV,sBAAsB;AAAA,IACtB,YAAY;AAAA,IACZ,kBAAkB;AAAA,IAClB,UAAU;AAAA,IACV,aAAa;AAAA,IACb,cAAc;AAAA,IACd,cAAc;AAAA,IACd,aAAa;AAAA,IACb,cAAc;AAAA,IACd,aAAa;AAAA,IACb,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,kBAAkB;AAAA,IAClB,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,UAAU;AAAA,IACV,WAAW;AAAA,IACX,eAAe;AAAA,IACf,qBAAqB;AAAA,IACrB,iBAAiB;AAAA,IACjB,UAAU;AAAA,IACV,iBAAiB;AAAA,IACjB,cAAc;AAAA,IACd,aAAa;AAAA,IACb,cAAc;AAAA,IACd,cAAc;AAAA,IACd,cAAc;AAAA,IACd,qBAAqB;AAAA,IACrB,cAAc;AAAA,IACd,cAAc;AAAA,IACd,aAAa;AAAA,IACb,cAAc;AAAA,IACd,aAAa;AAAA,IACb,UAAU;AAAA,IACV,cAAc;AAAA,IACd,cAAc;AAAA,IACd,cAAc;AAAA,IACd,eAAe;AAAA,IACf,MAAM;AAAA,EACR;AACF,CAAC;;;AC/CM,IAAMC,QAAO,OAAO;AAAA,EACzB,OAAO;AAAA,EACP,YAAY;AAAA,IACV,eAAe;AAAA,IACf,WAAW;AAAA,IACX,SAAS;AAAA,IACT,WAAW;AAAA,EACb;AAAA,EACA,WAAW;AAAA,EACX,iBAAiB,CAAC,WAAW,YAAY,SAAS,UAAU;AAAA,EAC5D,YAAY;AAAA;AAAA,IAEV,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,eAAe;AAAA,IACf,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,iBAAiB;AAAA,IACjB,qBAAqB;AAAA,IACrB,gBAAgB;AAAA,IAChB,KAAK;AAAA,IACL,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,gBAAgB;AAAA,IAChB,cAAc;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA,IACV,UAAU;AAAA,IACV,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,MAAM;AAAA,IACN,WAAW;AAAA,IACX,MAAM;AAAA,IACN,SAAS;AAAA,IACT,SAAS;AAAA,IACT,iBAAiB;AAAA,IACjB,UAAU;AAAA,IACV,cAAc;AAAA,IACd,QAAQ,SAAS;AAAA,IACjB,aAAa;AAAA,IACb,MAAM;AAAA,IACN,UAAU;AAAA,IACV,UAAU;AAAA,IACV,SAAS;AAAA,IACT,OAAO;AAAA,IACP,KAAK;AAAA,IACL,SAAS;AAAA,IACT,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,IACX,SAAS;AAAA,IACT,cAAc;AAAA,IACd,eAAe;AAAA,IACf,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,SAAS;AAAA,IACT,WAAW;AAAA,IACX,IAAI;AAAA,IACJ,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,OAAO;AAAA,IACP,WAAW;AAAA,IACX,WAAW;AAAA,IACX,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,SAAS;AAAA,IACT,WAAW;AAAA,IACX,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,IACT,MAAM;AAAA,IACN,KAAK;AAAA,IACL,UAAU;AAAA,IACV,KAAK;AAAA,IACL,WAAW;AAAA,IACX,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,WAAW;AAAA,IACX,UAAU;AAAA,IACV,OAAO;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,IACP,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,WAAW;AAAA,IACX,kBAAkB;AAAA,IAClB,UAAU;AAAA,IACV,SAAS;AAAA,IACT,SAAS;AAAA,IACT,eAAe;AAAA,IACf,eAAe;AAAA,IACf,mBAAmB;AAAA,IACnB,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,SAAS;AAAA,IACT,WAAW;AAAA,IACX,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,kBAAkB;AAAA,IAClB,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,aAAa;AAAA,IACb,WAAW;AAAA,IACX,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,cAAc;AAAA,IACd,cAAc;AAAA,IACd,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,oBAAoB;AAAA,IACpB,SAAS;AAAA,IACT,UAAU;AAAA,IACV,UAAU;AAAA,IACV,aAAa;AAAA,IACb,2BAA2B;AAAA,IAC3B,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,cAAc;AAAA,IACd,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,IACV,WAAW;AAAA,IACX,cAAc;AAAA,IACd,UAAU;AAAA,IACV,sBAAsB;AAAA,IACtB,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,SAAS;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,IACT,SAAS;AAAA,IACT,MAAM;AAAA,IACN,aAAa;AAAA,IACb,aAAa;AAAA,IACb,SAAS;AAAA,IACT,eAAe;AAAA,IACf,qBAAqB;AAAA,IACrB,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,KAAK;AAAA,IACL,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,SAAS;AAAA,IACT,SAAS;AAAA,IACT,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,UAAU;AAAA,IACV,OAAO;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,KAAK;AAAA,IACL,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,IACP,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,WAAW;AAAA,IACX,MAAM;AAAA,IACN,eAAe;AAAA,IACf,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,OAAO;AAAA,IACP,MAAM;AAAA;AAAA;AAAA,IAIN,OAAO;AAAA;AAAA,IACP,OAAO;AAAA;AAAA,IACP,SAAS;AAAA;AAAA,IACT,MAAM;AAAA;AAAA,IACN,YAAY;AAAA;AAAA,IACZ,SAAS;AAAA;AAAA,IACT,QAAQ;AAAA;AAAA,IACR,aAAa;AAAA;AAAA,IACb,cAAc;AAAA;AAAA,IACd,aAAa;AAAA;AAAA,IACb,aAAa;AAAA;AAAA,IACb,MAAM;AAAA;AAAA,IACN,SAAS;AAAA;AAAA,IACT,SAAS;AAAA;AAAA,IACT,OAAO;AAAA;AAAA,IACP,MAAM;AAAA;AAAA,IACN,UAAU;AAAA;AAAA,IACV,UAAU;AAAA;AAAA,IACV,OAAO;AAAA;AAAA,IACP,SAAS;AAAA;AAAA,IACT,SAAS;AAAA;AAAA,IACT,OAAO;AAAA;AAAA,IACP,MAAM;AAAA;AAAA,IACN,OAAO;AAAA;AAAA,IACP,aAAa;AAAA;AAAA,IACb,QAAQ;AAAA;AAAA,IACR,YAAY;AAAA;AAAA,IACZ,MAAM;AAAA;AAAA,IACN,UAAU;AAAA;AAAA,IACV,QAAQ;AAAA;AAAA,IACR,cAAc;AAAA;AAAA,IACd,aAAa;AAAA;AAAA,IACb,UAAU;AAAA;AAAA,IACV,QAAQ;AAAA;AAAA,IACR,SAAS;AAAA;AAAA,IACT,QAAQ;AAAA;AAAA,IACR,QAAQ;AAAA;AAAA,IACR,SAAS;AAAA;AAAA,IACT,QAAQ;AAAA;AAAA,IACR,KAAK;AAAA;AAAA,IACL,aAAa;AAAA;AAAA,IACb,OAAO;AAAA;AAAA,IACP,QAAQ;AAAA;AAAA,IACR,WAAW;AAAA;AAAA,IACX,SAAS;AAAA;AAAA,IACT,SAAS;AAAA;AAAA,IACT,MAAM;AAAA;AAAA,IACN,WAAW;AAAA;AAAA,IACX,WAAW;AAAA;AAAA,IACX,SAAS;AAAA;AAAA,IACT,QAAQ;AAAA;AAAA,IACR,OAAO;AAAA;AAAA,IACP,QAAQ;AAAA;AAAA;AAAA,IAGR,mBAAmB;AAAA,IACnB,aAAa;AAAA,IACb,UAAU;AAAA,IACV,yBAAyB;AAAA,IACzB,uBAAuB;AAAA,IACvB,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,IACV,cAAc;AAAA,EAChB;AACF,CAAC;;;AClTM,IAAM,MAAM,OAAO;AAAA,EACxB,OAAO;AAAA,EACP,YAAY;AAAA,IACV,cAAc;AAAA,IACd,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,IACV,UAAU;AAAA,IACV,oBAAoB;AAAA,IACpB,2BAA2B;AAAA,IAC3B,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,UAAU;AAAA,IACV,kBAAkB;AAAA,IAClB,kBAAkB;AAAA,IAClB,aAAa;AAAA,IACb,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,4BAA4B;AAAA,IAC5B,0BAA0B;AAAA,IAC1B,UAAU;AAAA,IACV,WAAW;AAAA,IACX,cAAc;AAAA,IACd,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,eAAe;AAAA,IACf,WAAW;AAAA,IACX,WAAW;AAAA,IACX,aAAa;AAAA,IACb,SAAS;AAAA,IACT,aAAa;AAAA,IACb,cAAc;AAAA,IACd,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,UAAU;AAAA,IACV,OAAO;AAAA,IACP,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,eAAe;AAAA,IACf,SAAS;AAAA,IACT,UAAU;AAAA,IACV,WAAW;AAAA,IACX,kBAAkB;AAAA,IAClB,UAAU;AAAA,IACV,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,SAAS;AAAA,IACT,WAAW;AAAA,IACX,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,aAAa;AAAA,IACb,cAAc;AAAA,IACd,cAAc;AAAA,IACd,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,WAAW;AAAA,IACX,cAAc;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,UAAU;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,IACV,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,IACV,WAAW;AAAA,IACX,cAAc;AAAA,IACd,UAAU;AAAA,IACV,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,kBAAkB;AAAA,IAClB,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,iBAAiB;AAAA,IACjB,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,aAAa;AAAA,IACb,uBAAuB;AAAA,IACvB,wBAAwB;AAAA,IACxB,iBAAiB;AAAA,IACjB,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,aAAa;AAAA,IACb,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,iBAAiB;AAAA,IACjB,QAAQ;AAAA,IACR,mBAAmB;AAAA,IACnB,oBAAoB;AAAA,IACpB,aAAa;AAAA,IACb,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,UAAU;AAAA,IACV,cAAc;AAAA,IACd,eAAe;AAAA,IACf,cAAc;AAAA,IACd,UAAU;AAAA,IACV,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb,SAAS;AAAA;AAAA,IAET,eAAe;AAAA,IACf,eAAe;AAAA,EACjB;AAAA,EACA,WAAW;AAAA,EACX,YAAY;AAAA,IACV,OAAO;AAAA,IACP,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,eAAe;AAAA,IACf,eAAe;AAAA,IACf,SAAS;AAAA,IACT,WAAW;AAAA,IACX,eAAe;AAAA,IACf,eAAe;AAAA,IACf,aAAa;AAAA,IACb,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,WAAW;AAAA,IACX,WAAW;AAAA,IACX,MAAM;AAAA,IACN,UAAU;AAAA,IACV,eAAe;AAAA,IACf,UAAU;AAAA,IACV,OAAO;AAAA,IACP,oBAAoB;AAAA,IACpB,2BAA2B;AAAA,IAC3B,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,SAAS;AAAA,IACT,mBAAmB;AAAA,IACnB,kBAAkB;AAAA,IAClB,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,GAAG;AAAA,IACH,UAAU;AAAA,IACV,eAAe;AAAA,IACf,SAAS;AAAA,IACT,iBAAiB;AAAA,IACjB,WAAW;AAAA,IACX,SAAS;AAAA,IACT,KAAK;AAAA,IACL,SAAS;AAAA,IACT,kBAAkB;AAAA,IAClB,UAAU;AAAA,IACV,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,IACX,kBAAkB;AAAA,IAClB,KAAK;AAAA,IACL,OAAO;AAAA,IACP,UAAU;AAAA,IACV,2BAA2B;AAAA,IAC3B,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,WAAW;AAAA,IACX,gBAAgB;AAAA,IAChB,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,WAAW;AAAA,IACX,4BAA4B;AAAA,IAC5B,0BAA0B;AAAA,IAC1B,UAAU;AAAA,IACV,mBAAmB;AAAA,IACnB,eAAe;AAAA,IACf,SAAS;AAAA,IACT,SAAS;AAAA,IACT,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,UAAU;AAAA,IACV,WAAW;AAAA,IACX,cAAc;AAAA,IACd,cAAc;AAAA,IACd,IAAI;AAAA,IACJ,aAAa;AAAA,IACb,gBAAgB;AAAA,IAChB,mBAAmB;AAAA,IACnB,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,WAAW;AAAA,IACX,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,WAAW;AAAA;AAAA,IACX,YAAY;AAAA;AAAA,IACZ,UAAU;AAAA;AAAA,IACV,SAAS;AAAA,IACT,MAAM;AAAA,IACN,cAAc;AAAA,IACd,eAAe;AAAA,IACf,eAAe;AAAA,IACf,mBAAmB;AAAA,IACnB,OAAO;AAAA,IACP,WAAW;AAAA,IACX,WAAW;AAAA,IACX,aAAa;AAAA,IACb,cAAc;AAAA,IACd,aAAa;AAAA,IACb,aAAa;AAAA,IACb,MAAM;AAAA,IACN,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,cAAc;AAAA,IACd,KAAK;AAAA,IACL,OAAO;AAAA,IACP,wBAAwB;AAAA,IACxB,uBAAuB;AAAA,IACvB,WAAW;AAAA,IACX,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA,IACT,aAAa;AAAA,IACb,cAAc;AAAA,IACd,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,UAAU;AAAA,IACV,OAAO;AAAA,IACP,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,eAAe;AAAA,IACf,SAAS;AAAA,IACT,UAAU;AAAA,IACV,WAAW;AAAA,IACX,kBAAkB;AAAA,IAClB,UAAU;AAAA,IACV,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,kBAAkB;AAAA,IAClB,WAAW;AAAA,IACX,OAAO;AAAA,IACP,SAAS;AAAA,IACT,SAAS;AAAA,IACT,SAAS;AAAA,IACT,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,SAAS;AAAA,IACT,WAAW;AAAA,IACX,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,aAAa;AAAA,IACb,cAAc;AAAA,IACd,cAAc;AAAA,IACd,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,WAAW;AAAA,IACX,cAAc;AAAA,IACd,WAAW;AAAA,IACX,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,UAAU;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AAAA,IACV,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,WAAW;AAAA,IACX,UAAU;AAAA,IACV,WAAW;AAAA,IACX,cAAc;AAAA,IACd,UAAU;AAAA,IACV,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,UAAU;AAAA,IACV,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,SAAS;AAAA,IACT,kBAAkB;AAAA,IAClB,mBAAmB;AAAA,IACnB,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,qBAAqB;AAAA,IACrB,kBAAkB;AAAA,IAClB,cAAc;AAAA,IACd,OAAO;AAAA,IACP,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,eAAe;AAAA,IACf,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,WAAW;AAAA,IACX,WAAW;AAAA,IACX,eAAe;AAAA,IACf,qBAAqB;AAAA,IACrB,gBAAgB;AAAA,IAChB,WAAW;AAAA,IACX,UAAU;AAAA,IACV,GAAG;AAAA,IACH,QAAQ;AAAA,IACR,gBAAgB;AAAA,IAChB,MAAM;AAAA,IACN,MAAM;AAAA,IACN,KAAK;AAAA,IACL,KAAK;AAAA,IACL,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,oBAAoB;AAAA,IACpB,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,iBAAiB;AAAA,IACjB,UAAU;AAAA,IACV,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,MAAM;AAAA,IACN,gBAAgB;AAAA,IAChB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,kBAAkB;AAAA,IAClB,cAAc;AAAA,IACd,SAAS;AAAA,IACT,aAAa;AAAA,IACb,cAAc;AAAA,IACd,OAAO;AAAA,IACP,OAAO;AAAA,IACP,aAAa;AAAA,IACb,WAAW;AAAA,IACX,aAAa;AAAA,IACb,uBAAuB;AAAA,IACvB,wBAAwB;AAAA,IACxB,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,iBAAiB;AAAA,IACjB,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,aAAa;AAAA,IACb,OAAO;AAAA,IACP,cAAc;AAAA,IACd,cAAc;AAAA,IACd,qBAAqB;AAAA,IACrB,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,sBAAsB;AAAA,IACtB,gBAAgB;AAAA,IAChB,UAAU;AAAA,IACV,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,OAAO;AAAA,IACP,mBAAmB;AAAA,IACnB,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,IAAI;AAAA,IACJ,WAAW;AAAA,IACX,iBAAiB;AAAA,IACjB,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,mBAAmB;AAAA,IACnB,oBAAoB;AAAA,IACpB,SAAS;AAAA,IACT,aAAa;AAAA,IACb,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,eAAe;AAAA,IACf,cAAc;AAAA,IACd,UAAU;AAAA,IACV,cAAc;AAAA,IACd,SAAS;AAAA,IACT,UAAU;AAAA,IACV,aAAa;AAAA,IACb,aAAa;AAAA,IACb,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,aAAa;AAAA,IACb,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,kBAAkB;AAAA,IAClB,SAAS;AAAA,IACT,GAAG;AAAA,IACH,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,kBAAkB;AAAA,IAClB,GAAG;AAAA,IACH,YAAY;AAAA,EACd;AACF,CAAC;;;AC9iBD,IAAM,QAAQ;AACd,IAAM,OAAO;AACb,IAAM,MAAM;AAOL,SAAS,KAAK,QAAQ,OAAO;AAClC,QAAM,SAAS,UAAU,KAAK;AAC9B,MAAI,OAAO;AACX,MAAI,OAAO;AAEX,MAAI,UAAU,OAAO,QAAQ;AAC3B,WAAO,OAAO,SAAS,OAAO,OAAO,MAAM,CAAC;AAAA,EAC9C;AAEA,MAAI,OAAO,SAAS,KAAK,OAAO,MAAM,GAAG,CAAC,MAAM,UAAU,MAAM,KAAK,KAAK,GAAG;AAE3E,QAAI,MAAM,OAAO,CAAC,MAAM,KAAK;AAE3B,YAAM,OAAO,MAAM,MAAM,CAAC,EAAE,QAAQ,MAAM,SAAS;AACnD,aAAO,SAAS,KAAK,OAAO,CAAC,EAAE,YAAY,IAAI,KAAK,MAAM,CAAC;AAAA,IAC7D,OAAO;AAEL,YAAM,OAAO,MAAM,MAAM,CAAC;AAE1B,UAAI,CAAC,KAAK,KAAK,IAAI,GAAG;AACpB,YAAI,SAAS,KAAK,QAAQ,KAAK,KAAK;AAEpC,YAAI,OAAO,OAAO,CAAC,MAAM,KAAK;AAC5B,mBAAS,MAAM;AAAA,QACjB;AAEA,gBAAQ,SAAS;AAAA,MACnB;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,SAAO,IAAI,KAAK,MAAM,KAAK;AAC7B;AAMA,SAAS,MAAM,IAAI;AACjB,SAAO,MAAM,GAAG,YAAY;AAC9B;AAMA,SAAS,UAAU,IAAI;AACrB,SAAO,GAAG,OAAO,CAAC,EAAE,YAAY;AAClC;;;ACnDO,IAAMC,QAAO,MAAM,CAAC,KAAK,OAAO,OAAO,MAAMA,KAAQ,GAAG,MAAM;AAC9D,IAAMC,OAAM,MAAM,CAAC,KAAK,OAAO,OAAO,MAAM,GAAO,GAAG,KAAK;;;ACZlE,IAAM,SAAS;AAoBR,SAAS,cAAc,UAAU,gBAAgB;AACtD,QAAM,QAAQ,YAAY;AAE1B,QAAM,QAAQ,CAAC;AACf,MAAI,QAAQ;AAEZ,MAAI;AAEJ,MAAI;AAEJ,SAAO,QAAQ,MAAM,QAAQ;AAC3B,WAAO,YAAY;AACnB,UAAM,QAAQ,OAAO,KAAK,KAAK;AAC/B,UAAM,WAAW,MAAM,MAAM,OAAO,QAAQ,MAAM,QAAQ,MAAM,MAAM;AAEtE,QAAI,UAAU;AACZ,UAAI,CAAC,UAAU;AACb,kBAAU;AAAA,MACZ,WAAW,aAAa,KAAK;AAC3B,cAAM,KAAK;AAAA,MACb,WAAW,MAAM,QAAQ,MAAM,SAAS,GAAG;AACzC,cAAM,UAAU,KAAK,QAAQ;AAAA,MAC/B,OAAO;AACL,cAAM,YAAY,CAAC,QAAQ;AAAA,MAC7B;AAEA,eAAS,SAAS;AAAA,IACpB;AAEA,QAAI,OAAO;AACT,iBAAW,MAAM,CAAC;AAClB;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AAAA,IACL,MAAM;AAAA;AAAA,IAEN,SAAS,WAAW,kBAAkB;AAAA,IACtC,YAAY;AAAA,IACZ,UAAU,CAAC;AAAA,EACb;AACF;;;AC3DO,SAAS,MAAM,OAAO;AAC3B,QAAMC,SAAQ,OAAO,SAAS,EAAE,EAAE,KAAK;AACvC,SAAOA,SAAQA,OAAM,MAAM,eAAe,IAAI,CAAC;AACjD;AAUO,SAAS,UAAU,QAAQ;AAChC,SAAO,OAAO,KAAK,GAAG,EAAE,KAAK;AAC/B;;;ACDO,SAASC,OAAM,OAAO;AAE3B,QAAM,SAAS,CAAC;AAChB,QAAMC,SAAQ,OAAO,SAAS,EAAE;AAChC,MAAI,QAAQA,OAAM,QAAQ,GAAG;AAC7B,MAAI,QAAQ;AAEZ,MAAI,MAAM;AAEV,SAAO,CAAC,KAAK;AACX,QAAI,UAAU,IAAI;AAChB,cAAQA,OAAM;AACd,YAAM;AAAA,IACR;AAEA,UAAM,QAAQA,OAAM,MAAM,OAAO,KAAK,EAAE,KAAK;AAE7C,QAAI,SAAS,CAAC,KAAK;AACjB,aAAO,KAAK,KAAK;AAAA,IACnB;AAEA,YAAQ,QAAQ;AAChB,YAAQA,OAAM,QAAQ,KAAK,KAAK;AAAA,EAClC;AAEA,SAAO;AACT;AAYO,SAASC,WAAU,QAAQ,SAAS;AACzC,QAAM,WAAW,WAAW,CAAC;AAG7B,QAAMD,SAAQ,OAAO,OAAO,SAAS,CAAC,MAAM,KAAK,CAAC,GAAG,QAAQ,EAAE,IAAI;AAEnE,SAAOA,OACJ;AAAA,KACE,SAAS,WAAW,MAAM,MACzB,OACC,SAAS,YAAY,QAAQ,KAAK;AAAA,EACvC,EACC,KAAK;AACV;;;AChCA,IAAM,cAAc,oBAAI,IAAI,CAAC,QAAQ,UAAU,SAAS,QAAQ,CAAC;AAEjE,IAAME,OAAM,CAAC,EAAE;AAOR,SAAS,KAAK,QAAQ,gBAAgB,eAAe;AAC1D,QAAM,SAAS,iBAAiB,gBAAgB,aAAa;AAE7D,QAAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAkBF,SAAU,UAAU,eAAe,UAAU;AAC3C,UAAI,QAAQ;AAEZ,UAAIC;AAEJ,UAAI,aAAa,UAAa,aAAa,MAAM;AAC/C,QAAAA,QAAO,EAAC,MAAM,QAAQ,UAAU,CAAC,EAAC;AAElC,iBAAS,QAAQ,UAAU;AAAA,MAC7B,OAAO;AACL,QAAAA,QAAO,cAAc,UAAU,cAAc;AAE7C,QAAAA,MAAK,UAAUA,MAAK,QAAQ,YAAY;AACxC,YAAI,UAAUF,KAAI,KAAK,QAAQE,MAAK,OAAO,GAAG;AAC5C,UAAAA,MAAK,UAAU,OAAOA,MAAK,OAAO;AAAA,QACpC;AAGA,YAAI,aAAa,YAAYA,MAAK,OAAO,GAAG;AAE1C,cAAIC;AAEJ,eAAKA,QAAO,YAAY;AACtB,gBAAIH,KAAI,KAAK,YAAYG,IAAG,GAAG;AAE7B,0BAAY,QAAQD,MAAK,YAAYC,MAAK,WAAWA,IAAG,CAAC;AAAA,YAC3D;AAAA,UACF;AAAA,QACF,OAAO;AACL,mBAAS,QAAQ,UAAU;AAAA,QAC7B;AAAA,MACF;AAGA,aAAO,EAAE,QAAQ,SAAS,QAAQ;AAChC,iBAASD,MAAK,UAAU,SAAS,KAAK,CAAC;AAAA,MACzC;AAEA,UAAIA,MAAK,SAAS,aAAaA,MAAK,YAAY,YAAY;AAC1D,QAAAA,MAAK,UAAU,EAAC,MAAM,QAAQ,UAAUA,MAAK,SAAQ;AACrD,QAAAA,MAAK,WAAW,CAAC;AAAA,MACnB;AAEA,aAAOA;AAAA,IACT;AAAA;AAGJ,SAAOD;AACT;AAOA,SAAS,aAAa,OAAO,MAAM;AACjC,MACE,UAAU,QACV,UAAU,UACV,OAAO,UAAU,YACjB,MAAM,QAAQ,KAAK,GACnB;AACA,WAAO;AAAA,EACT;AAEA,MAAI,SAAS,WAAW,CAAC,MAAM,QAAQ,OAAO,MAAM,SAAS,UAAU;AACrE,WAAO;AAAA,EACT;AAEA,MAAI,cAAc,SAAS,MAAM,QAAQ,MAAM,QAAQ,GAAG;AACxD,WAAO;AAAA,EACT;AAEA,MAAI,SAAS,UAAU;AACrB,WAAO,YAAY,IAAI,MAAM,KAAK,YAAY,CAAC;AAAA,EACjD;AAEA,SAAO,EAAE,WAAW;AACtB;AASA,SAAS,YAAY,QAAQ,YAAYE,MAAK,OAAO;AACnD,QAAM,OAAO,KAAK,QAAQA,IAAG;AAC7B,MAAI,QAAQ;AAEZ,MAAI;AAGJ,MAAI,UAAU,UAAa,UAAU;AAAM;AAE3C,MAAI,OAAO,UAAU,UAAU;AAE7B,QAAI,OAAO,MAAM,KAAK;AAAG;AAEzB,aAAS;AAAA,EACX,WAES,OAAO,UAAU,WAAW;AACnC,aAAS;AAAA,EACX,WAES,OAAO,UAAU,UAAU;AAClC,QAAI,KAAK,gBAAgB;AACvB,eAAS,MAAO,KAAK;AAAA,IACvB,WAAW,KAAK,gBAAgB;AAC9B,eAASC,OAAO,KAAK;AAAA,IACvB,WAAW,KAAK,uBAAuB;AACrC,eAAS,MAAOA,OAAO,KAAK,EAAE,KAAK,GAAG,CAAC;AAAA,IACzC,OAAO;AACL,eAAS,eAAe,MAAM,KAAK,UAAU,KAAK;AAAA,IACpD;AAAA,EACF,WAAW,MAAM,QAAQ,KAAK,GAAG;AAC/B,aAAS,MAAM,OAAO;AAAA,EACxB,OAAO;AACL,aAAS,KAAK,aAAa,UAAU,MAAM,KAAK,IAAI,OAAO,KAAK;AAAA,EAClE;AAEA,MAAI,MAAM,QAAQ,MAAM,GAAG;AAEzB,UAAM,cAAc,CAAC;AAErB,WAAO,EAAE,QAAQ,OAAO,QAAQ;AAE9B,kBAAY,KAAK,IAAI,eAAe,MAAM,KAAK,UAAU,OAAO,KAAK,CAAC;AAAA,IACxE;AAEA,aAAS;AAAA,EACX;AAGA,MAAI,KAAK,aAAa,eAAe,MAAM,QAAQ,WAAW,SAAS,GAAG;AAExE,aAAS,WAAW,UAAU,OAAO,MAAM;AAAA,EAC7C;AAEA,aAAW,KAAK,QAAQ,IAAI;AAC9B;AAOA,SAAS,SAAS,OAAO,OAAO;AAC9B,MAAI,QAAQ;AAEZ,MAAI,UAAU,UAAa,UAAU,MAAM;AAAA,EAE3C,WAAW,OAAO,UAAU,YAAY,OAAO,UAAU,UAAU;AACjE,UAAM,KAAK,EAAC,MAAM,QAAQ,OAAO,OAAO,KAAK,EAAC,CAAC;AAAA,EACjD,WAAW,MAAM,QAAQ,KAAK,GAAG;AAC/B,WAAO,EAAE,QAAQ,MAAM,QAAQ;AAC7B,eAAS,OAAO,MAAM,KAAK,CAAC;AAAA,IAC9B;AAAA,EACF,WAAW,OAAO,UAAU,YAAY,UAAU,OAAO;AACvD,QAAI,MAAM,SAAS,QAAQ;AACzB,eAAS,OAAO,MAAM,QAAQ;AAAA,IAChC,OAAO;AACL,YAAM,KAAK,KAAK;AAAA,IAClB;AAAA,EACF,OAAO;AACL,UAAM,IAAI,MAAM,2CAA2C,QAAQ,GAAG;AAAA,EACxE;AACF;AAUA,SAAS,eAAe,MAAM,MAAM,OAAO;AACzC,MAAI,OAAO,UAAU,UAAU;AAC7B,QAAI,KAAK,UAAU,SAAS,CAAC,OAAO,MAAM,OAAO,KAAK,CAAC,GAAG;AACxD,aAAO,OAAO,KAAK;AAAA,IACrB;AAEA,SACG,KAAK,WAAW,KAAK,uBACrB,UAAU,MAAM,UAAU,KAAK,MAAM,UAAU,IAAI,IACpD;AACA,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO;AACT;AAUA,SAAS,MAAM,OAAO;AAEpB,QAAM,SAAS,CAAC;AAEhB,MAAID;AAEJ,OAAKA,QAAO,OAAO;AACjB,QAAIH,KAAI,KAAK,OAAOG,IAAG,GAAG;AACxB,aAAO,KAAK,CAACA,MAAK,MAAMA,IAAG,CAAC,EAAE,KAAK,IAAI,CAAC;AAAA,IAC1C;AAAA,EACF;AAEA,SAAO,OAAO,KAAK,IAAI;AACzB;AAUA,SAAS,gBAAgB,QAAQ;AAE/B,QAAM,SAAS,CAAC;AAChB,MAAI,QAAQ;AAEZ,SAAO,EAAE,QAAQ,OAAO,QAAQ;AAC9B,WAAO,OAAO,KAAK,EAAE,YAAY,CAAC,IAAI,OAAO,KAAK;AAAA,EACpD;AAEA,SAAO;AACT;;;ACnSO,IAAM,IAAI,KAAKE,OAAM,KAAK;;;ACjB1B,IAAM,2BAA2B;AAAA,EACtC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;;;ACtBO,IAAM,IAAI,KAAKC,MAAK,KAAK,wBAAwB;;;ACqCjD,SAAS,SAAS,MAAM;AAC7B,QAAM,QAAQ,OAAO,IAAI;AAEzB,QAAM,UAAU,CAAC;AACjB,QAAMC,UAAS;AAEf,SAAOA,QAAO,KAAK,KAAK,GAAG;AACzB,YAAQ,KAAKA,QAAO,SAAS;AAAA,EAC/B;AAEA,UAAQ,KAAK,MAAM,SAAS,CAAC;AAE7B,SAAO,EAAC,SAAS,SAAQ;AAGzB,WAAS,QAAQ,QAAQ;AACvB,QAAI,QAAQ;AAEZ,QACE,OAAO,WAAW,YAClB,SAAS,MACT,SAAS,QAAQ,QAAQ,SAAS,CAAC,GACnC;AACA,aAAO,EAAE,QAAQ,QAAQ,QAAQ;AAC/B,YAAI,QAAQ,KAAK,IAAI,QAAQ;AAC3B,iBAAO;AAAA,YACL,MAAM,QAAQ;AAAA,YACd,QAAQ,UAAU,QAAQ,IAAI,QAAQ,QAAQ,CAAC,IAAI,KAAK;AAAA,YACxD;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,WAAO,EAAC,MAAM,QAAW,QAAQ,QAAW,QAAQ,OAAS;AAAA,EAC/D;AAGA,WAAS,SAASC,QAAO;AACvB,UAAM,OAAOA,UAASA,OAAM;AAC5B,UAAM,SAASA,UAASA,OAAM;AAE9B,QACE,OAAO,SAAS,YAChB,OAAO,WAAW,YAClB,CAAC,OAAO,MAAM,IAAI,KAClB,CAAC,OAAO,MAAM,MAAM,KACpB,OAAO,KAAK,SACZ;AACA,YAAM,UAAU,QAAQ,OAAO,CAAC,KAAK,KAAK,SAAS,KAAK;AAExD,UAAI,SAAS,MAAM,SAAS,QAAQ,QAAQ,SAAS,CAAC,GAAG;AACvD,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AACF;;;AC5GO,IAAM,gBAAgB;AAAA,EAC3B,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,KAAK;AAAA,EACL,OAAO;AAAA,EACP,KAAK;AAAA,EACL,OAAO;AACT;;;ACkDA,IAAMC,OAAM,CAAC,EAAE;AAGf,IAAM,QAAQ,OAAO;AAYd,SAAS,WAAW,MAAM,SAAS;AACxC,QAAM,WAAW,WAAW,CAAC;AAE7B,MAAI;AAEJ,MAAI;AAEJ,MAAI,OAAO,QAAQ,GAAG;AACpB,WAAO;AACP,eAAW,CAAC;AAAA,EACd,OAAO;AACL,WAAO,SAAS,QAAQ;AACxB,eAAW;AAAA,EACb;AAEA,SAAOC;AAAA,IACL;AAAA,MACE,QAAQ,SAAS,UAAU,QAAQC,OAAMC;AAAA,MACzC;AAAA,MACA,SAAS,SAAS;AAAA,MAClB,UAAU;AAAA,IACZ;AAAA,IACA;AAAA,EACF;AACF;AAYA,SAASF,KAAI,OAAOG,OAAM;AAExB,MAAI;AAEJ,UAAQA,MAAK,UAAU;AAAA,IACrB,KAAK,YAAY;AACf,YAAM;AAAA;AAAA,QAAsCA;AAAA;AAC5C,eAAS,EAAC,MAAM,WAAW,OAAO,UAAU,KAAI;AAChD,MAAAC,OAAM,OAAO,WAAW,MAAM;AAC9B,aAAO;AAAA,IACT;AAAA,IAEA,KAAK;AAAA,IACL,KAAK,sBAAsB;AACzB,YAAM;AAAA;AAAA,QAA4DD;AAAA;AAClE,YAAM,aACJ,UAAU,YACN,UAAU,SAAS,YAAY,UAAU,SAAS,mBAClD;AAEN,eAAS;AAAA,QACP,MAAM;AAAA,QACN,UAAUE,KAAI,OAAOF,MAAK,UAAU;AAAA,QACpC,MAAM,EAAC,WAAU;AAAA,MACnB;AAEA,UAAI,MAAM,QAAQ,MAAM,UAAU;AAChC,cAAM,MAAM,OAAO,MAAM,IAAI;AAC7B,cAAM,MAAM,SAAS,GAAG;AACxB,cAAM,QAAQ,IAAI,QAAQ,CAAC;AAC3B,cAAM,MAAM,IAAI,QAAQ,IAAI,MAAM;AAElC,eAAO,WAAW,EAAC,OAAO,IAAG;AAAA,MAC/B;AAEA,aAAO;AAAA,IACT;AAAA,IAEA,KAAK,iBAAiB;AACpB,YAAM;AAAA;AAAA,QAA2CA;AAAA;AAEjD,eAAS,EAAC,MAAM,UAAS;AACzB,MAAAC,OAAM,OAAO,WAAW,MAAM;AAC9B,aAAO;AAAA,IACT;AAAA,IAEA,KAAK,SAAS;AACZ,YAAM;AAAA;AAAA,QAAmCD;AAAA;AACzC,eAAS,EAAC,MAAM,QAAQ,OAAO,UAAU,MAAK;AAC9C,MAAAC,OAAM,OAAO,WAAW,MAAM;AAC9B,aAAO;AAAA,IACT;AAAA,IAGA,SAAS;AACP,YAAM;AAAA;AAAA,QAAsCD;AAAA;AAC5C,eAASG,SAAQ,OAAO,SAAS;AACjC,aAAO;AAAA,IACT;AAAA,EACF;AACF;AAYA,SAASD,KAAI,OAAO,OAAO;AACzB,MAAI,QAAQ;AAEZ,QAAM,SAAS,CAAC;AAEhB,SAAO,EAAE,QAAQ,MAAM,QAAQ;AAE7B,WAAO,KAAK,IAAIL,KAAI,OAAO,MAAM,KAAK,CAAC;AAAA,EACzC;AAEA,SAAO;AACT;AAYA,SAASM,SAAQ,OAAOH,OAAM;AAC5B,QAAM,SAAS,MAAM;AAErB,QAAM,SAASA,MAAK,iBAAiB,cAAc,MAAMF,OAAMC;AAG/D,MAAI,QAAQ;AAEZ,QAAM,QAAQ,CAAC;AAEf,SAAO,EAAE,QAAQC,MAAK,MAAM,QAAQ;AAClC,UAAM,YAAYA,MAAK,MAAM,KAAK;AAClC,UAAM,QACH,UAAU,SAAS,UAAU,SAAS,MAAM,MAAM,UAAU;AAC/D,QAAI,CAACJ,KAAI,KAAK,OAAO,IAAI,GAAG;AAC1B,YAAM,IAAI,IAAI,UAAU;AAAA,IAC1B;AAAA,EACF;AAGA,QAAM,KAAK,MAAM,OAAO,UAAU,QAAQ,IAAI;AAC9C,QAAM,SAAS,GAAGI,MAAK,SAAS,OAAOE,KAAI,OAAOF,MAAK,UAAU,CAAC;AAClE,EAAAC,OAAM,OAAOD,OAAM,MAAM;AAGzB,MAAI,OAAO,YAAY,YAAY;AACjC,UAAM;AAAA;AAAA,MAAuCA;AAAA;AAC7C,UAAM,MAAM,UAAU;AACtB,UAAM,WAAW,OAAO,IAAI,YAAYI,UAAS,IAAI,QAAQ;AAC7D,UAAM,SAAS,OAAO,IAAI,UAAUA,UAAS,IAAI,MAAM;AAIvD,UAAMC,WAAUR,KAAI,OAAO,UAAU,OAAO;AAE5C,QAAI,YAAY,UAAU,MAAM,MAAM;AACpC,MAAAQ,SAAQ,WAAW,EAAC,OAAO,SAAS,KAAK,KAAK,OAAO,MAAK;AAAA,IAC5D;AAEA,WAAO,UAAUA;AAAA,EACnB;AAEA,QAAM,SAAS;AAEf,SAAO;AACT;AAcA,SAASJ,OAAM,OAAO,MAAM,IAAI;AAC9B,MAAI,wBAAwB,QAAQ,KAAK,sBAAsB,MAAM,MAAM;AACzE,UAAMG,YAAW,eAAe,OAAO,IAAI,KAAK,kBAAkB;AAElE,QAAIA,WAAU;AACZ,YAAM,WAAW;AACjB,SAAG,WAAWA;AAAA,IAChB;AAAA,EACF;AACF;AAcA,SAAS,eAAe,OAAOJ,OAAMM,WAAU;AAC7C,QAAM,SAASF,UAASE,SAAQ;AAEhC,MAAIN,MAAK,SAAS,WAAW;AAC3B,UAAM,OAAOA,MAAK,SAASA,MAAK,SAAS,SAAS,CAAC;AAInD,QACE,UACA,CAACM,UAAS,UACV,QACA,KAAK,YACL,KAAK,SAAS,KACd;AACA,aAAO,MAAM,OAAO,OAAO,CAAC,GAAG,KAAK,SAAS,GAAG;AAAA,IAClD;AAEA,QAAI,MAAM,SAAS;AAEjB,YAAM,QAAQ,CAAC;AAEf,UAAIC;AAEJ,UAAID,UAAS,OAAO;AAClB,aAAKC,QAAOD,UAAS,OAAO;AAC1B,cAAIV,KAAI,KAAKU,UAAS,OAAOC,IAAG,GAAG;AACjC,kBAAM,KAAK,MAAM,QAAQA,IAAG,EAAE,QAAQ,IAAIH;AAAA,cACxCE,UAAS,MAAMC,IAAG;AAAA,YACpB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,MAAAP,MAAK,OAAO;AAAA,QACV,UAAU;AAAA;AAAA,UAER,SAASI,UAASE,UAAS,QAAQ;AAAA,UACnC,SAASA,UAAS,SAASF,UAASE,UAAS,MAAM,IAAI;AAAA,UACvD,YAAY;AAAA,QACd;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT;AAUA,SAASF,UAAS,KAAK;AACrB,QAAM,QAAQI,OAAM;AAAA,IAClB,MAAM,IAAI;AAAA,IACV,QAAQ,IAAI;AAAA,IACZ,QAAQ,IAAI;AAAA,EACd,CAAC;AACD,QAAM,MAAMA,OAAM;AAAA,IAChB,MAAM,IAAI;AAAA,IACV,QAAQ,IAAI;AAAA,IACZ,QAAQ,IAAI;AAAA,EACd,CAAC;AAED,SAAO,SAAS,MAAM,EAAC,OAAO,IAAG,IAAI;AACvC;AAUA,SAASA,OAAMA,QAAO;AACpB,SAAOA,OAAM,QAAQA,OAAM,SAASA,SAAQ;AAC9C;AAUA,SAAS,OAAO,OAAO;AACrB,SAAO,cAAc;AACvB;;;AC/XO,IAAM,SAAS;AAAA,EACpB,2BAA2B;AAAA,IACzB,QAAQ;AAAA,IACR,aACE;AAAA,IACF,KAAK;AAAA,EACP;AAAA,EACA,6BAA6B;AAAA,IAC3B,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,+BAA+B;AAAA,IAC7B,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA,EACA,+BAA+B;AAAA,IAC7B,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA,EACA,4CAA4C;AAAA,IAC1C,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA,EACA,oBAAoB;AAAA,IAClB,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA,EACA,uCAAuC;AAAA,IACrC,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA,EACA,uCAAuC;AAAA,IACrC,QAAQ;AAAA,IACR,aACE;AAAA,IACF,KAAK;AAAA,EACP;AAAA,EACA,+BAA+B;AAAA,IAC7B,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA,EACA,2BAA2B;AAAA,IACzB,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA,EACA,mCAAmC;AAAA,IACjC,QAAQ;AAAA,IACR,aACE;AAAA,IACF,KAAK;AAAA,EACP;AAAA,EACA,oBAAoB;AAAA,IAClB,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA,EACA,sBAAsB;AAAA,IACpB,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,2BAA2B;AAAA,IACzB,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,kCAAkC;AAAA,IAChC,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,KAAK;AAAA,EACP;AAAA,EACA,kBAAkB;AAAA,IAChB,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,YAAY;AAAA,IACV,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,cAAc;AAAA,IACZ,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,cAAc;AAAA,IACZ,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA,EACA,oCAAoC;AAAA,IAClC,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,KAAK;AAAA,EACP;AAAA,EACA,gCAAgC;AAAA,IAC9B,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,UAAU;AAAA,IACR,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,0BAA0B;AAAA,IACxB,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,0BAA0B;AAAA,IACxB,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,0CAA0C;AAAA,IACxC,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,gCAAgC;AAAA,IAC9B,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,kBAAkB;AAAA,IAChB,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,KAAK;AAAA,EACP;AAAA,EACA,iCAAiC;AAAA,IAC/B,QAAQ;AAAA,IACR,aACE;AAAA,IACF,KAAK;AAAA,EACP;AAAA,EACA,uBAAuB;AAAA,IACrB,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA,EACA,gBAAgB;AAAA,IACd,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,KAAK;AAAA,EACP;AAAA,EACA,oBAAoB;AAAA,IAClB,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,gCAAgC;AAAA,IAC9B,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,gCAAgC;AAAA,IAC9B,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA,EACA,mBAAmB;AAAA,IACjB,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,2CAA2C;AAAA,IACzC,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,2CAA2C;AAAA,IACzC,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,yCAAyC;AAAA,IACvC,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,4CAA4C;AAAA,IAC1C,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,4CAA4C;AAAA,IAC1C,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,oCAAoC;AAAA,IAClC,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,oCAAoC;AAAA,IAClC,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,2DAA2D;AAAA,IACzD,QACE;AAAA,IACF,aAAa;AAAA,EACf;AAAA,EACA,eAAe;AAAA,IACb,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,sBAAsB;AAAA,IACpB,QAAQ;AAAA,IACR,aACE;AAAA,IACF,KAAK;AAAA,EACP;AAAA,EACA,sBAAsB;AAAA,IACpB,QAAQ;AAAA,IACR,aACE;AAAA,IACF,KAAK;AAAA,EACP;AAAA,EACA,+CAA+C;AAAA,IAC7C,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,gCAAgC;AAAA,IAC9B,QACE;AAAA,IACF,aAAa;AAAA,EACf;AAAA,EACA,2BAA2B;AAAA,IACzB,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,wBAAwB;AAAA,IACtB,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,0BAA0B;AAAA,IACxB,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,KAAK;AAAA,EACP;AAAA,EACA,6BAA6B;AAAA,IAC3B,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA,EACA,wBAAwB;AAAA,IACtB,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA,EACA,iDAAiD;AAAA,IAC/C,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,oCAAoC;AAAA,IAClC,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA,EACA,6CAA6C;AAAA,IAC3C,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,yCAAyC;AAAA,IACvC,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,yBAAyB;AAAA,IACvB,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA,EACA,wCAAwC;AAAA,IACtC,QAAQ;AAAA,IACR,aAAa;AAAA,EACf;AAAA,EACA,wBAAwB;AAAA,IACtB,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AAAA,EACA,gCAAgC;AAAA,IAC9B,QAAQ;AAAA,IACR,aACE;AAAA,EACJ;AACF;;;A5BnPA,IAAM,OAAO;AAEb,IAAM,aAAa,EAAC,GAAG,MAAM,GAAG,OAAO,GAAG,KAAI;AAM/B,SAAR,YAA6B,SAAS;AAC3C,QAAM;AAAA;AAAA,IAA4C,KAAK,KAAK,UAAU;AAAA;AACtE,QAAM,WAAW,OAAO,OAAO,CAAC,GAAG,mBAAmB,OAAO;AAE7D,SAAO,OAAO,MAAM,EAAC,QAAQ,OAAM,CAAC;AAGpC,WAAS,OAAO,KAAK,MAAM;AACzB,UAAM,KAAK,SAAS,WAAW,kBAAkB;AACjD,UAAM,eAAe,SAAS,kBAAkB,UAAU;AAC1D,UAAM,SAAS,IAAI,cAAAC,QAAQ;AAAA,MACzB,wBAAwB;AAAA,MACxB;AAAA,MACA,kBAAkB;AAAA,IACpB,CAAC;AAID,WAAO,WAAW,OAAO,EAAE,EAAE,GAAG,GAAG;AAAA,MACjC,OAAO,SAAS;AAAA,MAChB;AAAA,MACA,SAAS,SAAS;AAAA,IACpB,CAAC;AAKD,aAAS,QAAQ,OAAO;AACtB,YAAMC,QAAO,MAAM;AACnB,YAAM,OAAOC,WAAUD,KAAI;AAC3B,YAAM,UAAU,SAAS,IAAI;AAC7B,YAAM,SAAS,YAAY,UAAa,YAAY,OAAO,OAAO;AAClE,YAAM,QAAQ,OAAO,WAAW,WAAW,SAAS,SAAS,IAAI;AACjE,YAAM,QAAQ;AAAA,QACZ,MAAM,MAAM;AAAA,QACZ,QAAQ,MAAM;AAAA,QACd,QAAQ,MAAM;AAAA,MAChB;AACA,YAAM,MAAM;AAAA,QACV,MAAM,MAAM;AAAA,QACZ,QAAQ,MAAM;AAAA,QACd,QAAQ,MAAM;AAAA,MAChB;AACA,UAAI,OAAO;AAET,cAAM,OAAO,OAAO,IAAI,KAAK,EAAC,QAAQ,IAAI,aAAa,IAAI,KAAK,GAAE;AAClE,cAAM,UAAU,KAAK,QAAQ,OAAO,KAAK,MAAM,GAAG,EAAC,OAAO,IAAG,CAAC;AAC9D,gBAAQ,SAAS;AACjB,gBAAQ,SAASA;AACjB,gBAAQ,QAAQ,WAAW,KAAK;AAChC,gBAAQ,OAAO,OAAO,KAAK,WAAW;AACtC,gBAAQ,MAAM,SAAS,QAAQ,KAAK,QAAQ,QAAQ,OAAO,OAAOA;AAAA,MACpE;AAMA,eAAS,OAAO,OAAO;AACrB,eAAO,MACJ,QAAQ,kBAAkB,CAAC,GAAyB,OAAO;AAC1D,gBAAM,SAAS,KAAK,CAAC,OAAO,SAAS,IAAI,EAAE,IAAI;AAC/C,gBAAM,OAAO,IAAI,OAAO,MAAM,cAAc,MAAM;AAClD,iBAAO,SAAS,MAAM,UAAU;AAAA,QAClC,CAAC,EACA;AAAA,UACC;AAAA,UACA,MACE,OACA,IAAI,WAAW,MAAM,WAAW,EAAE,SAAS,EAAE,EAAE,YAAY;AAAA,QAC/D;AAAA,MACJ;AAAA,IACF;AAAA,EACF;AACF;AAMA,SAASC,WAAU,OAAO;AAExB,SAAO,MAAM,QAAQ,WAAW,CAAC,OAAO,GAAG,OAAO,CAAC,EAAE,YAAY,CAAC;AACpE;;;A6BhHO,SAASC,KAAIC,IAAG,QAAQ;AAG7B,QAAM,QAAQ,OAAO,YAAY,CAAC;AAElC,QAAM,SAAS,CAAC;AAChB,MAAI,QAAQ;AAEZ,SAAO,EAAE,QAAQ,MAAM,QAAQ;AAE7B,UAAM,SAASC,KAAID,IAAG,MAAM,KAAK,GAAG,MAAM;AAE1C,QAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,aAAO,KAAK,GAAG,MAAM;AAAA,IACvB,WAAW,QAAQ;AACjB,aAAO,KAAK,MAAM;AAAA,IACpB;AAAA,EACF;AAEA,MAAI,QAAQ;AACZ,MAAI,MAAM,OAAO;AAEjB,SAAO,QAAQ,OAAO,OAAO,KAAK,EAAE,SAAS,SAAS;AACpD;AAAA,EACF;AAEA,SAAO,MAAM,SAAS,OAAO,MAAM,CAAC,EAAE,SAAS,SAAS;AACtD;AAAA,EACF;AAEA,SAAO,UAAU,KAAK,QAAQ,OAAO,SACjC,SACA,OAAO,MAAM,OAAO,GAAG;AAC7B;;;AC9CO,IAAME,OAAM,CAAC,EAAE;;;ACSf,SAAS,SAASC,IAAG,OAAO;AACjC,SAAOA,GAAE,WAAW,QAAQ,MAAM,QAAQ,aAAa,GAAG;AAC5D;;;ACOO,SAASC,KAAIC,IAAGC,OAAM,QAAQ;AAEnC,MAAI;AAEJ,MAAIA,MAAK,SAAS,WAAW;AAC3B,QAAIA,MAAK,cAAcA,MAAK,WAAW,cAAc,UAAU;AAC7D;AAAA,IACF;AAEA,QAAIC,KAAI,KAAKF,GAAE,UAAUC,MAAK,OAAO,GAAG;AACtC,WAAKD,GAAE,SAASC,MAAK,OAAO;AAAA,IAC9B;AAAA,EACF,WAAWC,KAAI,KAAKF,GAAE,UAAUC,MAAK,IAAI,GAAG;AAC1C,SAAKD,GAAE,SAASC,MAAK,IAAI;AAAA,EAC3B;AAEA,MAAI,OAAO,OAAO,YAAY;AAC5B,WAAO,GAAGD,IAAGC,OAAM,MAAM;AAAA,EAC3B;AAEA,SAAO,QAAQD,IAAGC,KAAI;AACxB;AAMA,SAAS,QAAQD,IAAGC,OAAM;AAExB,MAAI,OAAOA,MAAK,UAAU,UAAU;AAElC,WAAOD,GAAEC,OAAM,QAAQ,SAASD,IAAGC,MAAK,KAAK,CAAC;AAAA,EAChD;AAEA,SAAOE,KAAIH,IAAGC,KAAI;AACpB;;;AChDA,oBAAmB;;;ACUZ,IAAMG;AAAA;AAAA,EACX,QAAQ;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AAAA;;;ADjBI,SAASC,MAAK,OAAO;AAC1B,SAAO,KAAK,OAAO,UAAU;AAM7B,WAAS,WAAWC,QAAO;AACzB,UAAMC,QAAOD,OAAM,CAAC;AAEpB,QACEA,OAAM,WAAW,KACjBC,MAAK,SAAS,WACbA,MAAK,UAAU,OAAOA,MAAK,UAAU,OACtC;AACA,aAAO,CAAC;AAAA,IACV;AAEA,WAAO,EAAC,MAAM,aAAa,UAAUD,OAAK;AAAA,EAC5C;AACF;AAUO,SAAS,WAAW,OAAO;AAChC,MAAI,QAAQ;AAEZ,MAAIE;AAEJ,SAAO,EAAE,QAAQ,MAAM,QAAQ;AAC7B,IAAAA,QAAO,MAAM,KAAK;AAElB,QAAI,CAACC,UAASD,KAAI,KAAM,cAAcA,SAAQ,WAAWA,MAAK,QAAQ,GAAI;AACxE,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO;AACT;AASA,SAAS,KAAK,OAAO,YAAY,eAAe;AAC9C,QAAM,cAAc,iBAAiB;AAErC,QAAM,YAAY,QAAQ,KAAK;AAE/B,MAAI,SAAS,CAAC;AACd,MAAI,QAAQ;AAEZ,MAAI;AAEJ,MAAIA;AAEJ,SAAO,EAAE,QAAQ,UAAU,QAAQ;AACjC,IAAAA,QAAO,UAAU,KAAK;AAEtB,QAAIC,UAASD,KAAI,GAAG;AAClB,UAAI,CAAC;AAAO,gBAAQ,CAAC;AACrB,YAAM,KAAKA,KAAI;AAAA,IACjB,OAAO;AACL,UAAI,OAAO;AACT,iBAAS,OAAO,OAAO,WAAW,KAAK,CAAC;AACxC,gBAAQ;AAAA,MACV;AAEA,eAAS,OAAO,OAAO,YAAYA,KAAI,CAAC;AAAA,IAC1C;AAAA,EACF;AAEA,MAAI,OAAO;AACT,aAAS,OAAO,OAAO,WAAW,KAAK,CAAC;AAAA,EAC1C;AAEA,SAAO;AACT;AAQA,SAAS,QAAQ,OAAO;AAEtB,MAAI,YAAY,CAAC;AACjB,MAAI,QAAQ;AAEZ,MAAIA;AAEJ,SAAO,EAAE,QAAQ,MAAM,QAAQ;AAC7B,IAAAA,QAAO,MAAM,KAAK;AAWlB,SACGA,MAAK,SAAS,YAAYA,MAAK,SAAS,WACzC,WAAWA,MAAK,QAAQ,GACxB;AACA,kBAAY,UAAU,OAAO,MAAMA,KAAI,CAAC;AAAA,IAC1C,OAAO;AACL,gBAAU,KAAKA,KAAI;AAAA,IACrB;AAAA,EACF;AAEA,SAAO;AACT;AAMA,SAAS,MAAMA,OAAM;AAEnB,SAAO,KAAKA,MAAK,UAAU,YAAY,aAAa;AAUpD,WAAS,cAAc,OAAO;AAC5B,QAAI,cAAc,SAAS,cAAcA,OAAM;AAC7C,YAAM,EAAC,UAAU,GAAG,KAAI,IAAIA;AAC5B,aAAO;AAAA,QACL,GAAG;AAAA;AAAA,QAEH,UAAU,CAAC,EAAC,OAAG,cAAAE,SAAO,MAAM,CAAC,GAAG,IAAI,GAAG,UAAU,MAAM,SAAQ,CAAC;AAAA,MAClE;AAAA,IACF;AAEA,WAAO,EAAC,GAAG,MAAK;AAAA,EAClB;AAQA,WAAS,WAAW,OAAO;AAEzB,UAAM,EAAC,UAAU,GAAG,KAAI,IAAIF;AAE5B,WAAO,EAAC,OAAG,cAAAE,SAAO,MAAM,CAAC,GAAG,IAAI,GAAG,UAAU,MAAK;AAAA,EACpD;AACF;AAUA,SAASD,UAASD,OAAM;AACtB,SAAOA,MAAK,QAAQA,MAAK,KAAK,QAC1B,SAAa;AAAA,IACX,MAAM;AAAA,IACN,SAASA,MAAK,KAAK;AAAA,IACnB,YAAY,CAAC;AAAA,IACb,UAAU,CAAC;AAAA,EACb,CAAC,IACDC,UAAcD,KAAI;AACxB;AAOA,SAAS,SAAS,GAAG;AACnB,SAAO;AACT;;;AEjMO,SAAS,aAAaG,IAAGC,OAAM;AACpC,SAAOC,MAAKC,KAAIH,IAAGC,KAAI,CAAC;AAC1B;;;ACPO,SAAS,QAAQG,IAAG,KAAK;AAC9B,MAAI,QAAQ,QAAQ,QAAQ,QAAW;AACrC,WAAO;AAAA,EACT;AAEA,MAAIA,GAAE,eAAe;AACnB,WAAO,OAAO,IAAI,IAAI,KAAKA,GAAE,aAAa,CAAC;AAAA,EAC7C;AAEA,SAAO;AACT;;;ACNO,SAAS,EAAEC,IAAGC,OAAM;AAGzB,QAAM,QAAQA,MAAK;AACnB,SAAOD;AAAA,IACLC;AAAA,IACA;AAAA,IACA;AAAA,MACE,OAAO,MAAM,SAAS;AAAA,MACtB,KAAK,QAAQD,IAAG,OAAO,MAAM,QAAQ,EAAE,KAAK,IAAI;AAAA,IAClD;AAAA,IACAE,KAAIF,IAAGC,KAAI;AAAA,EACb;AACF;;;ACjBO,SAASE,MAAKC,IAAGC,OAAM;AAC5B,MAAI,CAACD,GAAE,WAAW;AAChB,IAAAA,GAAE,gBACA,OAAQC,MAAK,cAAcA,MAAK,WAAW,QAAS,EAAE,KAAK;AAC7D,IAAAD,GAAE,YAAY;AAAA,EAChB;AACF;;;ACJO,SAASE,YAAWC,IAAGC,OAAM;AAClC,SAAOD,GAAEC,OAAM,cAAc,aAAaD,IAAGC,KAAI,CAAC;AACpD;;;ACJO,SAAS,GAAGC,IAAGC,OAAM;AAC1B,SAAOD,GAAE,WAAWA,GAAEC,OAAM,OAAO,IAAID,GAAEC,OAAM,QAAQ,GAAG;AAC5D;;;ACUO,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcT,SAAU,QAAQ,OAAO,MAAM;AAC7B,UAAM,KAAK,QAAQ,IAAI;AAEvB,QAAI,CAAC,UAAU,CAAC,OAAO,QAAQ,CAAC,OAAO,UAAU;AAC/C,YAAM,IAAI,MAAM,sBAAsB;AAAA,IACxC;AAEA,QAAI,OAAO,UAAU,UAAU;AAC7B,UAAI,QAAQ,KAAK,UAAU,OAAO,mBAAmB;AACnD,cAAM,IAAI,MAAM,0CAA0C;AAAA,MAC5D;AAAA,IACF,OAAO;AACL,cAAQ,OAAO,SAAS,QAAQ,KAAK;AAErC,UAAI,QAAQ,GAAG;AACb,cAAM,IAAI,MAAM,8BAA8B;AAAA,MAChD;AAAA,IACF;AAEA,WAAO,EAAE,QAAQ,OAAO,SAAS,QAAQ;AACvC,UAAI,GAAG,OAAO,SAAS,KAAK,GAAG,OAAO,MAAM,GAAG;AAC7C,eAAO,OAAO,SAAS,KAAK;AAAA,MAC9B;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA;;;ACZJ,IAAM,kBAAkB;AACxB,IAAM,oBAAoB;AAE1B,IAAMC,MAAK,eAAe,IAAI;AAC9B,IAAM,IAAI,eAAe,GAAG;AAC5B,IAAM,OAAO,eAAe,CAAC,MAAM,IAAI,CAAC;AACxC,IAAM,MAAM,eAAe,IAAI;AAI/B,IAAM,cAAc;AAAA,EAAe;AAAA;AAAA,IAEnC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAEA;AAAA;AAAA,IAEA;AAAA,EAAY;AACZ;AAGA,IAAM,iBAAiB,eAAe;AAAA,EACtmCM,SAAS,OAAO,MAAM,UAAU,CAAC,GAAG;AACzC,QAAM,WAAW,cAAc,OAAO,KAAK,WAAW,CAAC;AACvD,QAAMC,SAAQ,eAAe,IAAI;AACjC,QAAMC,cAAa,gBAAgB,MAAM;AAAA,IACvC,YAAY,QAAQ,cAAc;AAAA,IAClC,aAAa;AAAA,IACb,YAAY;AAAA,EACd,CAAC;AAGD,QAAM,UAAU,CAAC;AAUjB,MAAI,KAAK,SAAS,UAAU,KAAK,SAAS,WAAW;AACnD,YAAQ;AAAA,MACN,GAAG,YAAY,MAAM;AAAA,QACnB,YAAAA;AAAA,QACA,aAAa;AAAA,QACb,YAAY;AAAA,MACd,CAAC;AAAA,IACH;AAAA,EACF;AAaA,MAAI,QAAQ;AAGZ,SAAO,EAAE,QAAQ,SAAS,QAAQ;AAMhC,YAAQ;AAAA,MAEN,GAAG,oBAAoB,SAAS,KAAK,GAAG,MAAM;AAAA,QAC5C,YAAAA;AAAA,QACA,aAAa,QAAQ,SAAYD;AAAA,QACjC,YACA,QAAQ,SAAS,SAAS,IAAID,IAAG,SAAS,QAAQ,CAAC,CAAC,IAAIC;AAAA,MAC1D,CAAC;AAAA,IACH;AAAA,EACF;AAUA,QAAM,SAAS,CAAC;AAEhB,MAAI;AAEJ,UAAQ;AAER,SAAO,EAAE,QAAQ,QAAQ,QAAQ;AAC/B,UAAM,QAAQ,QAAQ,KAAK;AAE3B,QAAI,OAAO,UAAU,UAAU;AAC7B,UAAI,UAAU,UAAa,QAAQ;AAAO,gBAAQ;AAAA,IACpD,WAAW,OAAO;AAChB,UAAI,UAAU,UAAa,QAAQ,IAAI;AACrC,eAAO,KAAK,KAAK,OAAO,KAAK,KAAK,GAAG;AAAA,MACvC;AAEA,cAAQ;AACR,aAAO,KAAK,KAAK;AAAA,IACnB;AAAA,EACF;AAGA,SAAO,OAAO,KAAK,EAAE;AACvB;AAUA,SAAS,oBAAoBE,OAAM,QAAQ,MAAM;AAC/C,MAAIA,MAAK,SAAS,WAAW;AAC3B,WAAO,eAAeA,OAAM,QAAQ,IAAI;AAAA,EAC1C;AAEA,MAAIA,MAAK,SAAS,QAAQ;AACxB,WAAO,KAAK,eAAe,WAC3B,YAAYA,OAAM,IAAI,IACtB,eAAeA,KAAI;AAAA,EACrB;AAEA,SAAO,CAAC;AACV;AAYA,SAAS,eAAeA,OAAM,QAAQ,MAAM;AAE1C,QAAMD,cAAa,gBAAgBC,OAAM,IAAI;AAC7C,QAAM,WAAWA,MAAK,YAAY,CAAC;AACnC,MAAI,QAAQ;AAEZ,MAAI,QAAQ,CAAC;AAIb,MAAI,YAAYA,KAAI,GAAG;AACrB,WAAO;AAAA,EACT;AAGA,MAAIC;AAEJ,MAAI;AAiBJ,MAAIJ,IAAGG,KAAI,GAAG;AACZ,aAAS;AAAA,EACX,WAUS,IAAIA,KAAI,KAAK,UAAU,QAAQA,OAAM,GAAG,GAAG;AAClD,aAAS;AAAA,EACX,WAIS,EAAEA,KAAI,GAAG;AAChB,IAAAC,UAAS;AACT,aAAS;AAAA,EACX,WAKS,eAAeD,KAAI,GAAG;AAC7B,IAAAC,UAAS;AACT,aAAS;AAAA,EACX;AAKA,SAAO,EAAE,QAAQ,SAAS,QAAQ;AAChC,YAAQ,MAAM;AAAA,MACZ,oBAAoB,SAAS,KAAK,GAAGD,OAAM;AAAA,QACzC,YAAAD;AAAA,QACA,aAAa,QAAQ,SAAYE;AAAA,QACjC,YACA,QAAQ,SAAS,SAAS,IAAIJ,IAAG,SAAS,QAAQ,CAAC,CAAC,IAAI;AAAA,MAC1D,CAAC;AAAA,IACH;AAAA,EACF;AAQA,MAAI,KAAKG,KAAI,KAAK,UAAU,QAAQA,OAAM,IAAI,GAAG;AAC/C,UAAM,KAAK,GAAI;AAAA,EACjB;AAGA,MAAIC;AAAQ,UAAM,QAAQA,OAAM;AAChC,MAAI;AAAQ,UAAM,KAAK,MAAM;AAE7B,SAAO;AACT;AA0BA,SAAS,YAAYD,OAAM,MAAM;AAC/B,QAAM,QAAQ,OAAOA,MAAK,KAAK;AAE/B,QAAM,QAAQ,CAAC;AAEf,QAAM,SAAS,CAAC;AAChB,MAAI,QAAQ;AAEZ,SAAO,SAAS,MAAM,QAAQ;AAC5B,oBAAgB,YAAY;AAE5B,UAAM,QAAQ,gBAAgB,KAAK,KAAK;AACxC,UAAM,MAAM,SAAS,WAAW,QAAQ,MAAM,QAAQ,MAAM;AAE5D,UAAM;AAAA;AAAA;AAAA,MAGJ;AAAA;AAAA;AAAA;AAAA,QAIE,MACA,MAAM,OAAO,GAAG,EAChB,QAAQ,mDAAmD,EAAE;AAAA,QAC7D,UAAU,IAAI,KAAK,cAAc;AAAA,QACjC,QAAQ,MAAM,SAAS,KAAK,aAAa;AAAA,MAC3C;AAAA,IACF;AAEA,YAAQ,MAAM;AAAA,EAChB;AAOA,MAAI,QAAQ;AAEZ,MAAI;AAEJ,SAAO,EAAE,QAAQ,MAAM,QAAQ;AAI7B,QACA,MAAM,KAAK,EAAE,WAAW,MAAM,KAAK,EAAE,SAAS,CAAC,MAAM,QACrD,QAAQ,MAAM,SAAS,KACvB,MAAM,QAAQ,CAAC,EAAE,WAAW,CAAC,MAAM,MACnC;AACE,aAAO,KAAK,MAAM,KAAK,CAAC;AACxB,aAAO;AAAA,IACT,WAkBS,MAAM,KAAK,GAAG;AACrB,UAAI,OAAO,SAAS;AAAU,eAAO,KAAK,IAAI;AAC9C,aAAO,KAAK,MAAM,KAAK,CAAC;AACxB,aAAO;AAAA,IACT,WAAW,UAAU,KAAK,UAAU,MAAM,SAAS,GAAG;AAIpD,aAAO,KAAK,CAAC;AAAA,IACf;AAAA,EACF;AAEA,SAAO;AACT;AAUA,SAAS,eAAeA,OAAM;AAC5B,SAAO,CAAC,OAAOA,MAAK,KAAK,CAAC;AAC5B;AAmBA,SAAS,6BAA6B,OAAO,aAAa,YAAY;AAEpE,QAAM,SAAS,CAAC;AAChB,MAAI,QAAQ;AAEZ,MAAI;AAEJ,SAAO,QAAQ,MAAM,QAAQ;AAC3B,sBAAkB,YAAY;AAC9B,UAAM,QAAQ,kBAAkB,KAAK,KAAK;AAC1C,UAAM,QAAQ,MAAM,QAAQ,MAAM;AAIlC,QAAI,CAAC,SAAS,CAAC,OAAO,SAAS,CAAC,aAAa;AAC3C,aAAO,KAAK,EAAE;AAAA,IAChB;AAEA,QAAI,UAAU,KAAK;AACjB,aAAO,KAAK,MAAM,MAAM,OAAO,GAAG,CAAC;AAAA,IACrC;AAEA,YAAQ,QAAQ,MAAM,MAAM,CAAC,EAAE,SAAS;AAAA,EAC1C;AAKA,MAAI,UAAU,OAAO,CAAC,YAAY;AAChC,WAAO,KAAK,EAAE;AAAA,EAChB;AAEA,SAAO,OAAO,KAAK,GAAG;AACxB;AAcA,SAAS,gBAAgBA,OAAM,MAAM;AACnC,MAAIA,MAAK,SAAS,WAAW;AAC3B,UAAM,QAAQA,MAAK,cAAc,CAAC;AAClC,YAAQA,MAAK,SAAS;AAAA,MACpB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,OAAM;AACP,eAAO;AAAA,MACT;AAAA,MAEF,KAAK,QAAO;AACR,eAAO;AAAA,MACT;AAAA,MAEF,KAAK,OAAM;AACP,eAAO,MAAM,OAAO,aAAa;AAAA,MACnC;AAAA,MAEF,KAAK;AAAA,MACL,KAAK,MAAK;AACN,eAAO,MAAM,SAAS,WAAW,KAAK;AAAA,MACxC;AAAA,MAEF,KAAK,YAAW;AACZ,eAAO;AAAA,MACT;AAAA,MAEF;AAAA,IACF;AAAA,EACF;AAEA,SAAO,KAAK;AACd;AAGA,SAAS,OAAOA,OAAM;AACpB,SAAO,SAASA,MAAK,cAAc,CAAC,GAAG,MAAM;AAC/C;AAGA,SAAS,aAAaA,OAAM;AAC1B,SAAOA,MAAK,YAAY,YAAY,EAAEA,MAAK,cAAc,CAAC,GAAG;AAC/D;;;ACllBO,SAAS,kBAAkB,OAAO;AACvC,QAAME,SAAQ,OAAO,KAAK;AAC1B,MAAI,MAAMA,OAAM;AAEhB,SAAO,MAAM,GAAG;AACd,UAAMC,QAAOD,OAAM,YAAY,MAAM,CAAC;AACtC,QAAIC,UAAS,WAAcA,UAAS,MAAMA,UAAS,KAAK;AACtD;AAAA,IACF,OAAO;AACL;AAAA,IACF;AAAA,EACF;AAEA,SAAOD,OAAM,MAAM,GAAG,GAAG;AAC3B;;;ACXA,IAAM,SAAS;AAEf,IAAM,MAAM,eAAe,KAAK;AAChC,IAAM,SAAS,eAAe,MAAM;AAM7B,SAASE,MAAKC,IAAGC,OAAM;AAC5B,QAAM,WAAWA,MAAK;AACtB,MAAI,QAAQ;AAEZ,MAAI;AAEJ,MAAI;AAEJ,MAAI,IAAIA,KAAI,GAAG;AACb,WAAO,EAAE,QAAQ,SAAS,QAAQ;AAChC,YAAM,QAAQ,SAAS,KAAK;AAE5B,UACE,OAAO,KAAK,KACZ,MAAM,cACN,MAAM,WAAW,aACjB,MAAM,QAAQ,MAAM,WAAW,SAAS,GACxC;AACA,oBAAY,MAAM,WAAW;AAC7B;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,MAAI,WAAW;AACb,YAAQ;AAER,WAAO,EAAE,QAAQ,UAAU,QAAQ;AACjC,UAAI,OAAO,UAAU,KAAK,CAAC,EAAE,MAAM,GAAG,OAAO,MAAM,MAAM,QAAQ;AAC/D,eAAO,OAAO,UAAU,KAAK,CAAC,EAAE,MAAM,OAAO,MAAM;AACnD;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,SAAOD;AAAA,IACLC;AAAA,IACA;AAAA,IACA,EAAC,MAAM,QAAQ,MAAM,MAAM,KAAI;AAAA,IAC/B,kBAAkB,SAASD,IAAG,OAAOC,KAAI,CAAC,CAAC;AAAA,EAC7C;AACF;;;ACnDO,SAASC,SAAQC,IAAGC,OAAM;AAC/B,SAAOD,GAAEC,OAAM,QAAQ,SAAS,SAASD,IAAGC,MAAK,KAAK,IAAI,KAAK;AACjE;;;ACDO,SAAS,IAAIC,IAAGC,OAAM;AAC3B,SAAOD,GAAEC,OAAM,UAAUC,KAAIF,IAAGC,KAAI,CAAC;AACvC;;;ACLO,SAAS,gBAAgB,UAAU;AACxC,MAAI,QAAQ;AAEZ,MAAI,SAAS,SAAS,GAAG;AACvB,WAAO,EAAE,QAAQ,SAAS,QAAQ;AAChC,UAAI,SAAS,KAAK,EAAE,QAAQ;AAC1B,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT;;;ACPO,SAAS,cAAcE,IAAGC,OAAM;AACrC,QAAM,WAAWC,KAAIF,IAAGC,KAAI;AAC5B,MAAI,QAAQ;AAEZ,SAAO,EAAE,QAAQ,SAAS,QAAQ;AAChC,UAAM,QAAQ,SAAS,KAAK;AAC5B,QAAI,MAAM,SAAS,YAAY;AAC7B,eAAS,KAAK,IAAI;AAAA,QAChB,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,SAAS;AAAA;AAAA,QAET,UAAU,CAAC,KAAK;AAAA,MAClB;AAAA,IACF;AAAA,EACF;AAGA,SAAO;AACT;;;ACbA,IAAM,MAAM,eAAe,KAAK;AAChC,IAAM,KAAK,eAAe,IAAI;AAC9B,IAAM,KAAK,eAAe,IAAI;AAMvB,SAAS,GAAGE,IAAGC,OAAM;AAC1B,QAAM,WAAWA,MAAK;AACtB,MAAI,QAAQ;AAEZ,MAAIC,SAAQ,CAAC;AAEb,QAAM,SAAS,CAAC;AAEhB,MAAI,QAAQ,EAAC,QAAQ,CAAC,GAAG,aAAa,CAAC,EAAC;AAExC,MAAI;AAEJ,MAAI;AAGJ,SAAO,EAAE,QAAQ,SAAS,QAAQ;AAChC,YAAQ,SAAS,KAAK;AACtB,IAAAA,SAAQA,OAAM,OAAO,IAAI,KAAK,IAAI,MAAM,WAAW,KAAK;AAAA,EAC1D;AAEA,UAAQ;AAGR,SAAO,EAAE,QAAQA,OAAM,QAAQ;AAC7B,YAAQA,OAAM,KAAK;AAEnB,QAAI,GAAG,KAAK,GAAG;AACb,UAAI,GAAGA,OAAM,QAAQ,CAAC,CAAC,GAAG;AACxB,eAAO,KAAK,KAAK;AACjB,gBAAQ,EAAC,QAAQ,CAAC,GAAG,aAAa,CAAC,EAAC;AAAA,MACtC;AAEA,YAAM,OAAO,KAAK,KAAK;AAAA,IACzB,OAAO;AACL,YAAM,YAAY,KAAK,KAAK;AAAA,IAC9B;AAAA,EACF;AAEA,SAAO,KAAK,KAAK;AAGjB,UAAQ;AAER,QAAMC,WAAU,CAAC;AAEjB,SAAO,EAAE,QAAQ,OAAO,QAAQ;AAC9B,aAAS;AAAA,MACP,GAAG,OAAOH,IAAG,OAAO,KAAK,EAAE,MAAM;AAAA,MACjC,GAAG,OAAOA,IAAG,OAAO,KAAK,EAAE,WAAW;AAAA,IACxC;AAEA,QAAI,OAAO,SAAS,GAAG;AACrB,MAAAG,SAAQ,KAAK;AAAA,QACX,MAAM;AAAA,QACN,QAAQ,OAAO,SAAS;AAAA,QACxB,SAAS;AAAA,QACT,UAAU;AAAA,MACZ,CAAC;AAAA,IACH;AAAA,EACF;AAGA,MAAIA,SAAQ,SAAS,GAAG;AACtB,WAAOH;AAAA,MACLC;AAAA,MACA;AAAA,MACA,EAAC,SAAS,OAAO,OAAO,MAAM,QAAQ,gBAAgBE,QAAO,EAAC;AAAA,MAC9DA;AAAA,IACF;AAAA,EACF;AACF;AAOA,SAAS,OAAOH,IAAG,UAAU;AAC3B,QAAM,QAAQ,cAAcA,IAAG,EAAC,MAAM,WAAW,SAAS,KAAK,SAAQ,CAAC;AAExE,MAAI,MAAM,WAAW,GAAG;AACtB,WAAO,CAAC;AAAA,EACV;AAEA,MAAI,MAAM,WAAW,GAAG;AACtB,WAAO,MAAM,CAAC,EAAE;AAAA,EAClB;AAEA,SAAO;AAAA,IACL;AAAA,MACE,MAAM;AAAA,MACN,SAAS;AAAA,MACT,OAAO;AAAA,MACP,QAAQ,gBAAgB,KAAK;AAAA,MAC7B,UAAU;AAAA,IACZ;AAAA,EACF;AACF;;;ACjHO,SAAS,GAAGI,IAAGC,OAAM;AAC1B,SAAOD,GAAEC,OAAM,YAAYC,KAAIF,IAAGC,KAAI,CAAC;AACzC;;;ACDO,SAASE,SAAQC,IAAGC,OAAM;AAG/B,QAAM,QAAQ,OAAOA,MAAK,QAAQ,OAAO,CAAC,CAAC,KAAK;AAChD,QAAMC,QAAOF,GAAE;AAEf,EAAAA,GAAE,WAAW;AACb,QAAM,SAASA,GAAEC,OAAM,WAAW,EAAC,MAAK,GAAGE,KAAIH,IAAGC,KAAI,CAAC;AACvD,EAAAD,GAAE,WAAWE;AAEb,SAAO;AACT;;;ACdO,SAAS,GAAGE,IAAGC,OAAM;AAC1B,SAAOD,GAAEC,OAAM,eAAe;AAChC;;;ACEO,SAASC,QAAOC,IAAGC,OAAM;AAG9B,QAAM,QAAQA,MAAK;AACnB,QAAM,MAAM,OAAO,MAAM,OAAO,EAAE;AAClC,QAAM,QAAQ,OAAO,MAAM,SAAS,EAAE;AAMtC,MAAI,OAAO,OAAO;AAChB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK,QAAQD,IAAG,GAAG;AAAA,MACnB,UAAU,CAAC,EAAC,MAAM,QAAQ,OAAO,SAASA,IAAG,KAAK,EAAC,CAAC;AAAA,IACtD;AAAA,EACF;AACF;;;ACpBO,SAAS,IAAIE,IAAGC,OAAM;AAG3B,QAAM,QAAQA,MAAK;AACnB,SAAOD,GAAEC,OAAM,SAAS;AAAA,IACtB,KAAK,QAAQD,IAAG,OAAO,MAAM,OAAO,EAAE,KAAK,IAAI;AAAA,IAC/C,OAAO,MAAM,SAAS;AAAA,IACtB,KAAK,MAAM,OAAO;AAAA,EACpB,CAAC;AACH;;;ACTO,SAASE,YAAWC,IAAGC,OAAM;AAClC,SAAOD,GAAEC,OAAM,cAAc,SAASD,IAAG,OAAOC,KAAI,CAAC,CAAC;AACxD;;;ACDA,IAAM,SAAS,eAAe,QAAQ;AAQ/B,SAAS,oBAAoBC,IAAGC,OAAM,YAAY;AAGvD,QAAM,QAAQ,cAAcA,MAAK;AACjC,MAAI,UAAU,YAAYA,KAAI;AAC9B,QAAM,OACJ,KAAK,IAAI,OAAO,SAAS,OAAO,MAAM,IAAI,GAAG,EAAE,GAAG,CAAC,MAClD,MAAM,WAAW,IAAI;AACxB,MAAI,QAAQ;AAEZ,QAAM,kBAAkB,CAAC;AAEzB,QAAM,SAAS,CAAC;AAEhB,SAAO,EAAE,QAAQ,QAAQ,QAAQ;AAC/B,QAAI,YAAY,QAAQ,KAAK,GAAG,UAAU,GAAG;AAC3C,sBAAgB,KAAK,QAAQ,KAAK,CAAC;AAAA,IACrC;AAAA,EACF;AAEA,QAAMC,QAAO,gBAAgB,SAAS,IAAI,kBAAkB;AAC5D,YAAUA,MAAK,MAAM,GAAG,IAAI;AAC5B,UAAQ;AAER,SAAO,EAAE,QAAQ,QAAQ,QAAQ;AAC/B,UAAMC,UAAS,QAAQ,KAAK;AAC5B,UAAMC,WAAU,SAASJ,IAAG,OAAOG,OAAM,CAAC;AAG1C,UAAME,SAAQF,QAAO;AACrB,UAAM,QAAQC,YAAW,OAAOC,OAAM,SAAS,EAAE;AACjD,UAAM,QAAQ,OAAOA,OAAM,SAAS,EAAE,KAAKD;AAC3C,WAAO,KAAK,CAAC,OAAO,UAAU,QAAQ,OAAO,KAAK,CAAC;AAAA,EACrD;AAEA,SAAO;AACT;AAKA,SAAS,YAAYH,OAAM;AACzB,QAAM,WAAWA,MAAK;AACtB,MAAI,QAAQ;AAEZ,MAAI,UAAU,CAAC;AAEf,MAAI;AAEJ,SAAO,EAAE,QAAQ,SAAS,QAAQ;AAChC,YAAQ,SAAS,KAAK;AAGtB,QAAI,MAAM,QAAQ,MAAM,QAAQ,GAAG;AAEjC,gBAAU,QAAQ,OAAO,YAAY,KAAK,CAAC;AAAA,IAC7C;AAEA,QAAI,OAAO,KAAK,KAAK,CAAC,YAAY,OAAO,UAAU,GAAG;AACpD,cAAQ,KAAK,KAAK;AAAA,IACpB;AAAA,EACF;AAEA,SAAO;AACT;;;ACxEA,IAAM,WAAW,eAAe,UAAU;AAOnC,SAAS,MAAMK,IAAGC,OAAM;AAG7B,QAAM,QAAQA,MAAK;AACnB,MAAI,QAAQ,OAAO,MAAM,SAAS,MAAM,eAAe,EAAE;AAEzD,QAAM,UAAU,CAAC;AAEjB,QAAM,QAAQ,CAAC;AAEf,MAAI,SAAS,CAAC;AACd,MAAI,QAAQ;AAEZ,MAAIC;AAEJ,MAAI,MAAM,YAAY,MAAM,SAAS,YAAY,MAAM,SAAS,QAAQ;AACtE;AAAA,EACF;AAEA,MAAI,MAAM,SAAS,cAAc,MAAM,SAAS,SAAS;AACvD,WAAOF;AAAA,MACLC;AAAA,MACA;AAAA,MACA,SAASD,IAAGA,GAAE,MAAM,UAAU,YAAY,WAAW,CAAC;AAAA,IACxD;AAAA,EACF;AAEA,MAAI,MAAM,SAAS,SAAS;AAC1B,WAAO,MAAM,OAAO,QAChBA,GAAEC,OAAM,SAAS;AAAA,MACf,KAAK,QAAQD,IAAG,OAAO,MAAM,OAAO,EAAE,KAAK,IAAI;AAAA,MAC/C,OAAO,SAASA,IAAG,OAAO,MAAM,SAAS,EAAE,CAAC,KAAK;AAAA,MACjD,KAAK,SAASA,IAAG,OAAO,MAAM,OAAO,KAAK,CAAC;AAAA,IAC7C,CAAC,IACD,CAAC;AAAA,EACP;AAEA,MAAI,OAAO;AACT,aAAS,CAAC,CAAC,OAAO,IAAI,CAAC;AAAA,EACzB;AAAA;AAAA,IAEE,MAAM,SAAS,cACf,MAAM,SAAS,UACf,MAAM,SAAS,YACf,MAAM,SAAS,WACf,MAAM,SAAS,YACf,MAAM;AAAA,IACN;AACA,IAAAE,QAAO,OAAO,MAAM,IAAI,EAAE,YAAY;AAEtC,QAAIC,KAAI,KAAKH,GAAE,UAAUE,KAAI,KAAK,SAASF,GAAE,SAASE,KAAI,CAAC,GAAG;AAC5D,eAAS,oBAAoBF,IAAGA,GAAE,SAASE,KAAI,GAAG,KAAK;AAAA,IACzD;AAAA,EACF;AAEA,MAAI,OAAO,WAAW,GAAG;AACvB;AAAA,EACF;AAGA,MAAI,MAAM,SAAS,YAAY;AAE7B,WAAO,CAAC,IAAI,CAAC,SAAI,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,MAAM,GAAG,IAAI;AAAA,EACpD;AAEA,MAAI,MAAM,SAAS,SAAS,MAAM,SAAS,SAAS;AAClD,WAAO,EAAE,QAAQ,OAAO,QAAQ;AAC9B,cAAQ,QAAQF,IAAG,OAAO,KAAK,EAAE,CAAC,CAAC;AAEnC,cAAQ;AAAA,QACNA;AAAA,UACEC;AAAA,UACA;AAAA,UACA;AAAA,YACE,OAAO;AAAA,YACP,KAAK,SAASD,IAAG,MAAM,SAAS,UAAU,YAAY,QAAQ,KAAK;AAAA,UACrE;AAAA,UACA,CAAC,EAAC,MAAM,QAAQ,OAAO,SAASA,IAAG,OAAO,KAAK,EAAE,CAAC,KAAK,KAAK,EAAC,CAAC;AAAA,QAChE;AAAA,MACF;AAEA,UAAI,UAAU,OAAO,SAAS,GAAG;AAC/B,gBAAQ,KAAK,EAAC,MAAM,QAAQ,OAAO,KAAI,CAAC;AAAA,MAC1C;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,SAAO,EAAE,QAAQ,OAAO,QAAQ;AAC9B,UAAM;AAAA,MACJ,OAAO,KAAK,EAAE,CAAC,IACX,OAAO,KAAK,EAAE,CAAC,IAAI,OAAO,OAAO,KAAK,EAAE,CAAC,IAAI,MAC7C,OAAO,KAAK,EAAE,CAAC;AAAA,IACrB;AAAA,EACF;AAEA,SAAOA,GAAEC,OAAM,QAAQ,SAASD,IAAG,MAAM,KAAK,IAAI,CAAC,CAAC;AACtD;;;AC5GA,IAAMI,KAAI,eAAe,GAAG;AAC5B,IAAMC,SAAQ,eAAe,OAAO;AAM7B,SAAS,GAAGC,IAAGC,OAAM;AAC1B,QAAMC,QAAOD,MAAK,SAAS,CAAC;AAE5B,MAAI,UAAU;AAEd,MAAI;AAEJ,MAAI;AAGJ,MAAIH,GAAEI,KAAI,GAAG;AACX,eAAWA,MAAK,SAAS,CAAC;AAE1B,QACEH,OAAM,QAAQ,KACd,SAAS,eACR,SAAS,WAAW,SAAS,cAC5B,SAAS,WAAW,SAAS,UAC/B;AACA,gBAAU,QAAQ,SAAS,WAAW,OAAO;AAC7C,cAAQ;AAAA,QACN,GAAGE;AAAA,QACH,UAAU;AAAA,UACR,EAAC,GAAGC,OAAM,UAAUA,MAAK,SAAS,MAAM,CAAC,EAAC;AAAA,UAC1C,GAAGD,MAAK,SAAS,MAAM,CAAC;AAAA,QAC1B;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,QAAME,WAAU,aAAaH,IAAG,SAASC,KAAI;AAE7C,SAAOD,GAAEC,OAAM,YAAY,EAAC,QAAQE,SAAQ,SAAS,GAAG,QAAO,GAAGA,QAAO;AAC3E;;;ACxCA,IAAM,KAAK,eAAe,IAAI;AAMvB,SAASC,MAAKC,IAAGC,OAAM;AAC5B,QAAM,UAAU,GAAGA,KAAI;AACvB,QAAM,WAAW,cAAcD,IAAGC,KAAI;AAEtC,MAAI,QAAQ;AAEZ,MAAI,SAAS;AACX,YAAQ,YAAYA,OAAM,OAAO;AAAA;AAAA,MAE7B,OAAO,SAAS,OAAOA,MAAK,WAAW,KAAK,GAAG,EAAE;AAAA,QACjD;AAAA,EACN;AAEA,SAAOD;AAAA,IACLC;AAAA,IACA;AAAA,IACA,EAAC,SAAS,OAAO,QAAQ,gBAAgB,QAAQ,EAAC;AAAA,IAClD;AAAA,EACF;AACF;;;ACvBA,IAAM,eAAe,CAAC;AAef,SAAS,SAAS,OAAO,SAAS;AACvC,QAAM,WAAW,WAAW;AAC5B,QAAM,kBACJ,OAAO,SAAS,oBAAoB,YAChC,SAAS,kBACT;AACN,QAAM,cACJ,OAAO,SAAS,gBAAgB,YAAY,SAAS,cAAc;AAErE,SAAOC,KAAI,OAAO,iBAAiB,WAAW;AAChD;AAcA,SAASA,KAAI,OAAO,iBAAiB,aAAa;AAChD,MAAIC,MAAK,KAAK,GAAG;AACf,QAAI,WAAW,OAAO;AACpB,aAAO,MAAM,SAAS,UAAU,CAAC,cAAc,KAAK,MAAM;AAAA,IAC5D;AAEA,QAAI,mBAAmB,SAAS,SAAS,MAAM,KAAK;AAClD,aAAO,MAAM;AAAA,IACf;AAEA,QAAI,cAAc,OAAO;AACvB,aAAOC,KAAI,MAAM,UAAU,iBAAiB,WAAW;AAAA,IACzD;AAAA,EACF;AAEA,MAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,WAAOA,KAAI,OAAO,iBAAiB,WAAW;AAAA,EAChD;AAEA,SAAO;AACT;AAcA,SAASA,KAAI,QAAQ,iBAAiB,aAAa;AAEjD,QAAM,SAAS,CAAC;AAChB,MAAI,QAAQ;AAEZ,SAAO,EAAE,QAAQ,OAAO,QAAQ;AAC9B,WAAO,KAAK,IAAIF,KAAI,OAAO,KAAK,GAAG,iBAAiB,WAAW;AAAA,EACjE;AAEA,SAAO,OAAO,KAAK,EAAE;AACvB;AAUA,SAASC,MAAK,OAAO;AACnB,SAAO,QAAQ,SAAS,OAAO,UAAU,QAAQ;AACnD;;;AC7FA,IAAM,SAAS,eAAe,QAAQ;AACtC,IAAM,QAAQ,eAAe,OAAO;AAM7B,SAAS,MAAME,IAAGC,OAAM;AAC7B,MAAI,QAAQC,KAAIF,IAAGC,KAAI;AAGvB,QAAM,aAAaA,MAAK;AACxB,QAAM,SAAS,MAAMA,KAAI,KAAK,OAAO,WAAW,UAAU,EAAE;AAC5D,MAAI,MAAM,OAAO,WAAW,OAAO,EAAE;AACrC,MAAI,QAAQ;AAEZ,MAAI,wBAAwB;AAE5B,MAAI;AAEJ,QAAM,EAAC,MAAM,QAAQ,UAAU,MAAK,GAAG,QAAQ,QAAQ;AAGvD,MAAI,yBAAyB,WAAW,KAAK,GAAG;AAC9C,WAAO;AAAA,EACT;AAGA,SAAO,CAAC,OAAO,EAAE,QAAQA,MAAK,SAAS,QAAQ;AAC7C,YAAQA,MAAK,SAAS,KAAK;AAC3B,QAAI,OAAO,KAAK,GAAG;AAEjB,YAAM,OAAO,MAAM,WAAW,OAAO,EAAE;AAAA,IACzC;AAAA,EACF;AAGA,MAAI,QAAQ;AACV,YAAQ;AAAA,MACN;AAAA,QACE,MAAM;AAAA,QACN,OAAO;AAAA,QACP,KAAK,QAAQD,IAAG,MAAM;AAAA,QACtB,KAAK,SAAS,EAAC,UAAU,MAAK,CAAC;AAAA,MACjC;AAAA,IACF;AAAA,EACF;AAGA,SAAO;AAAA,IACL,MAAM;AAAA;AAAA,IAEN,OAAOC,MAAK,WAAW,SAAS;AAAA,IAChC,KAAK,QAAQD,IAAG,GAAG;AAAA;AAAA,IAEnB,UAAU;AAAA,EACZ;AAEA,WAAS,WAAW;AAClB,4BAAwB;AACxB,WAAO;AAAA,EACT;AACF;;;ACjEO,SAASG,GAAEC,IAAGC,OAAM;AACzB,QAAM,QAAQC,KAAIF,IAAGC,KAAI;AAEzB,MAAI,MAAM,SAAS,GAAG;AACpB,WAAOD,GAAEC,OAAM,aAAa,KAAK;AAAA,EACnC;AACF;;;ACLO,SAAS,EAAEE,IAAGC,OAAM;AACzB,QAAM,WAAWD,GAAE,OAAOA,GAAE,WAAWA,GAAE,OAAO,MAAM;AAEtD,EAAAA,GAAE;AACF,QAAM,WAAWE,KAAIF,IAAGC,KAAI;AAC5B,EAAAD,GAAE;AAEF,WAAS,QAAQ,EAAC,MAAM,QAAQ,OAAO,SAAS,OAAO,CAAC,EAAC,CAAC;AAE1D,WAAS,KAAK;AAAA,IACZ,MAAM;AAAA,IACN,OAAO,SAAS,SAAS,IAAI,SAAS,OAAO,CAAC,IAAI;AAAA,EACpD,CAAC;AAED,SAAO;AACT;;;ACfO,SAASG,MAAKC,IAAGC,OAAM;AAC5B,MAAI,WAAWC,KAAIF,IAAGC,KAAI;AAE1B,MAAID,GAAE,YAAY,WAAW,QAAQ,GAAG;AACtC,eAAWG,MAAK,QAAQ;AAAA,EAC1B;AAEA,SAAOH,GAAEC,OAAM,QAAQ,QAAQ;AACjC;;;ACRO,SAASG,QAAOC,IAAGC,OAAM;AAC9B,QAAM,SAAS,oBAAoBD,IAAGC,KAAI;AAC1C,MAAI,QAAQ;AAEZ,QAAM,UAAU,CAAC;AAEjB,MAAI;AAEJ,SAAO,EAAE,QAAQ,OAAO,QAAQ;AAC9B,YAAQ,OAAO,KAAK;AACpB,YAAQ,KAAK,MAAM,CAAC,IAAI,MAAM,CAAC,IAAI,OAAO,MAAM,CAAC,IAAI,MAAM,MAAM,CAAC,CAAC;AAAA,EACrE;AAEA,MAAI,QAAQ,SAAS,GAAG;AACtB,WAAOD,GAAEC,OAAM,QAAQ,SAASD,IAAG,QAAQ,KAAK,IAAI,CAAC,CAAC;AAAA,EACxD;AACF;;;ACjBO,SAASE,QAAOC,IAAGC,OAAM;AAC9B,SAAOD,GAAEC,OAAM,UAAUC,KAAIF,IAAGC,KAAI,CAAC;AACvC;;;ACDO,SAASE,WAAUC,IAAGC,OAAM;AACjC,QAAMC,QAAOF,GAAE;AAEf,EAAAA,GAAE,WAAW;AAEb,QAAM,SAASA,GAAEC,OAAM,aAAaE,KAAIH,IAAGC,KAAI,CAAC;AAEhD,MAAIA,MAAK,eAAeA,MAAK,WAAW,WAAWA,MAAK,WAAW,UAAU;AAC3E,UAAM,OAAO,OAAO,SAAS,OAAO,OAAO,CAAC;AAC5C,QAAIA,MAAK,WAAW;AAAS,WAAK,UAAUA,MAAK,WAAW;AAC5D,QAAIA,MAAK,WAAW;AAAS,WAAK,UAAUA,MAAK,WAAW;AAAA,EAC9D;AAEA,EAAAD,GAAE,WAAWE;AAEb,SAAO;AACT;;;ACjBO,SAASE,UAASC,IAAGC,OAAM;AAChC,SAAOD,GAAEC,OAAM,YAAYC,KAAIF,IAAGC,KAAI,CAAC;AACzC;;;ACMA,IAAM,QAAQ,eAAe,OAAO;AACpC,IAAM,KAAK,eAAe,IAAI;AAC9B,IAAME,QAAO,eAAe,CAAC,MAAM,IAAI,CAAC;AAMjC,SAASC,OAAMC,IAAGC,OAAM;AAC7B,MAAID,GAAE,SAAS;AACb,WAAOA,GAAEC,OAAM,QAAQ,SAASD,IAAG,OAAOC,KAAI,CAAC,CAAC;AAAA,EAClD;AAEA,EAAAD,GAAE,UAAU;AAEZ,QAAM,EAAC,UAAU,MAAK,IAAI,QAAQC,KAAI;AACtC,QAAM,OAAO,OAAOC,KAAIF,IAAGC,KAAI,GAAG,QAAQ;AAC1C,MAAI,UAAU;AACd,MAAI,WAAW;AAEf,SAAO,EAAE,WAAW,KAAK,QAAQ;AAC/B,UAAME,SAAQ,KAAK,QAAQ,EAAE;AAC7B,QAAI,YAAY;AAEhB,WAAO,EAAE,YAAYA,OAAM,QAAQ;AACjC,YAAML,QAAOK,OAAM,SAAS;AAE5B,UAAIL,MAAK,MAAM;AACb,cAAM,UAAU,OAAO,SAAS,OAAOA,MAAK,KAAK,OAAO,GAAG,EAAE,KAAK;AAClE,cAAM,UAAU,OAAO,SAAS,OAAOA,MAAK,KAAK,OAAO,GAAG,EAAE,KAAK;AAElE,YAAI,UAAU,KAAK,UAAU,GAAG;AAC9B,cAAI,gBAAgB,WAAW;AAE/B,iBAAO,EAAE,gBAAgB,WAAW,SAAS;AAC3C,gBAAI,WAAW,YAAY;AAE3B,mBAAO,EAAE,WAAW,YAAY,SAAS;AACvC,kBAAI,CAAC,KAAK,aAAa,GAAG;AAGxB;AAAA,cACF;AAGA,oBAAM,WAAW,CAAC;AAElB,kBAAI,kBAAkB,YAAY,aAAa,WAAW;AACxD,yBAAS,KAAK,EAAC,MAAM,aAAa,UAAU,CAAC,EAAC,CAAC;AAAA,cACjD;AAEA,mBAAK,aAAa,EAAE,SAAS,OAAO,UAAU,GAAG,GAAG,QAAQ;AAAA,YAC9D;AAAA,UACF;AAAA,QACF;AAGA,YAAI,aAAaA,MAAK;AAAM,iBAAOA,MAAK,KAAK;AAC7C,YAAI,aAAaA,MAAK;AAAM,iBAAOA,MAAK,KAAK;AAC7C,YAAI,OAAO,KAAKA,MAAK,IAAI,EAAE,WAAW;AAAG,iBAAOA,MAAK;AAAA,MACvD;AAAA,IACF;AAEA,QAAIK,OAAM,SAAS;AAAS,gBAAUA,OAAM;AAAA,EAC9C;AAGA,aAAW;AAEX,SAAO,EAAE,WAAW,KAAK,QAAQ;AAC/B,UAAMA,SAAQ,KAAK,QAAQ,EAAE;AAC7B,QAAI,YAAYA,OAAM,SAAS;AAC/B,WAAO,EAAE,YAAY,SAAS;AAC5B,MAAAA,OAAM,KAAK,EAAC,MAAM,aAAa,UAAU,CAAC,EAAC,CAAC;AAAA,IAC9C;AAAA,EACF;AAEA,MAAI,aAAa,MAAM,SAAS;AAChC,SAAO,EAAE,aAAa,SAAS;AAC7B,UAAM,KAAK,IAAI;AAAA,EACjB;AAEA,EAAAH,GAAE,UAAU;AAEZ,SAAOA,GAAEC,OAAM,SAAS,EAAC,MAAK,GAAG,IAAI;AACvC;AAQA,SAAS,QAAQA,OAAM;AACrB,MAAI,WAAW;AACf,MAAI,WAAW;AACf,MAAI,YAAY;AAEhB,QAAM,QAAQ,CAAC,IAAI;AAEnB,QAAMA,OAAM,WAAW,CAAC,UAAU;AAChC,QAAI,MAAM,YAAY,WAAWA,UAAS,OAAO;AAC/C,aAAO;AAAA,IACT;AAGA,QAAIH,MAAK,KAAK,KAAK,MAAM,YAAY;AACnC,UAAI,CAAC,MAAM,SAAS,GAAG;AACrB,cAAM,SAAS,IAAI,OAAO,MAAM,WAAW,SAAS,EAAE,KAAK;AAAA,MAC7D;AAGA,UAAI,YAAY,WAAW,KAAK,MAAM,YAAY,MAAM;AACtD,mBAAW;AAAA,MACb;AAEA;AAAA,IACF,WAAW,MAAM,KAAK,GAAG;AACvB,iBAAW;AAAA,IACb,WAAW,GAAG,KAAK,GAAG;AACpB;AACA,kBAAY;AAAA,IACd;AAAA,EACF,CAAC;AAED,SAAO,EAAC,OAAO,SAAQ;AACzB;AASA,SAAS,OAAO,UAAU,UAAU;AAClC,MAAI,QAAQ;AAEZ,QAAM,QAAQ,CAAC;AAEf,MAAI;AAGJ,MAAI,UAAU;AACZ,UAAM,KAAK,EAAC,MAAM,YAAY,UAAU,CAAC,EAAC,CAAC;AAAA,EAC7C;AAEA,SAAO,EAAE,QAAQ,SAAS,QAAQ;AAChC,UAAMG,QAAO,SAAS,KAAK;AAE3B,QAAIA,MAAK,SAAS,YAAY;AAC5B,UAAI,OAAO;AACT,QAAAA,MAAK,SAAS,QAAQ,GAAG,KAAK;AAC9B,gBAAQ;AAAA,MACV;AAEA,YAAM,KAAKA,KAAI;AAAA,IACjB,OAAO;AACL,UAAI,CAAC;AAAO,gBAAQ,CAAC;AAErB,YAAM,KAAKA,KAAI;AAAA,IACjB;AAAA,EACF;AAEA,MAAI,OAAO;AACT,UAAM,MAAM,SAAS,CAAC,EAAE,SAAS,KAAK,GAAG,KAAK;AAAA,EAChD;AAEA,UAAQ;AAER,SAAO,EAAE,QAAQ,MAAM,QAAQ;AAC7B,UAAM,KAAK,EAAE,WAAW,QAAQ,MAAM,KAAK,EAAE,QAAQ;AAAA,EACvD;AAEA,SAAO;AACT;AAQA,SAAS,QAAQ,UAAU;AAEzB,QAAM,QAAQ,CAAC;AACf,MAAI,QAAQ;AAEZ,MAAIA;AAEJ,MAAI;AAEJ,SAAO,EAAE,QAAQ,SAAS,QAAQ;AAChC,IAAAA,QAAO,SAAS,KAAK;AAErB,QAAIA,MAAK,SAAS,aAAa;AAC7B,UAAI,OAAO;AACT,QAAAA,MAAK,SAAS,QAAQ,GAAG,KAAK;AAC9B,gBAAQ;AAAA,MACV;AAEA,YAAM,KAAKA,KAAI;AAAA,IACjB,OAAO;AACL,UAAI,CAAC;AAAO,gBAAQ,CAAC;AAErB,YAAM,KAAKA,KAAI;AAAA,IACjB;AAAA,EACF;AAEA,MAAI,OAAO;AACT,IAAAA,QAAO,MAAM,MAAM,SAAS,CAAC;AAE7B,QAAI,CAACA,OAAM;AACT,MAAAA,QAAO,EAAC,MAAM,aAAa,UAAU,CAAC,EAAC;AACvC,YAAM,KAAKA,KAAI;AAAA,IACjB;AAEA,IAAAA,MAAK,SAAS,KAAK,GAAG,KAAK;AAAA,EAC7B;AAEA,SAAO;AACT;;;ACrOO,SAASG,MAAKC,IAAGC,OAAM;AAC5B,SAAOD,GAAEC,OAAM,QAAQ,SAASD,IAAGC,MAAK,KAAK,CAAC;AAChD;;;ACDO,SAAS,SAASC,IAAGC,OAAM;AAChC,SAAOD,GAAEC,OAAM,QAAQ,SAASD,IAAG,OAAOC,KAAI,CAAC,CAAC;AAClD;;;ACLO,SAAS,IAAIC,IAAGC,OAAM;AAC3B,SAAOD,GAAEC,OAAM,QAAQ,QAAQ;AACjC;;;ACqBO,IAAMC,YAAW;AAAA,EACtB,MAAAC;AAAA,EACA,MAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAASC;AAAA,EAET,QAAQA;AAAA,EACR,MAAMA;AAAA,EACN,UAAUA;AAAA,EACV,SAASA;AAAA,EACT,SAASA;AAAA,EACT,KAAKA;AAAA,EACL,UAAUA;AAAA,EACV,SAASA;AAAA,EACT,SAASA;AAAA,EACT,UAAUA;AAAA,EACV,QAAQA;AAAA,EACR,SAASA;AAAA,EACT,OAAOA;AAAA,EACP,OAAOA;AAAA,EACP,UAAUA;AAAA,EACV,SAASA;AAAA,EACT,QAAQA;AAAA,EACR,MAAMA;AAAA,EACN,MAAMA;AAAA,EACN,MAAMA;AAAA,EACN,UAAUA;AAAA,EACV,MAAMA;AAAA,EACN,QAAQA;AAAA,EACR,SAASA;AAAA,EACT,UAAUA;AAAA,EACV,UAAUA;AAAA,EACV,QAAQA;AAAA,EACR,OAAOA;AAAA,EACP,QAAQA;AAAA,EACR,QAAQA;AAAA,EACR,QAAQA;AAAA,EACR,QAAQA;AAAA,EACR,OAAOA;AAAA,EACP,KAAKA;AAAA,EACL,UAAUA;AAAA,EACV,OAAOA;AAAA,EACP,OAAOA;AAAA,EAEP,MAAMC;AAAA,EACN,SAASA;AAAA,EACT,KAAKA;AAAA,EACL,KAAKA;AAAA,EACL,KAAKA;AAAA,EACL,OAAOA;AAAA,EACP,QAAQA;AAAA,EACR,QAAQA;AAAA,EACR,MAAMA;AAAA,EACN,MAAMA;AAAA,EACN,SAASA;AAAA,EACT,KAAKA;AAAA,EACL,MAAMA;AAAA,EACN,KAAKA;AAAA,EACL,OAAOA;AAAA,EACP,KAAKA;AAAA,EACL,SAASA;AAAA,EACT,OAAOA;AAAA,EACP,MAAMA;AAAA,EACN,UAAUA;AAAA,EACV,QAAQA;AAAA,EACR,QAAQA;AAAA,EACR,UAAUA;AAAA,EACV,IAAIA;AAAA,EACJ,KAAKA;AAAA,EACL,IAAIA;AAAA,EACJ,IAAIA;AAAA,EACJ,KAAKA;AAAA,EACL,MAAMA;AAAA,EACN,MAAMA;AAAA,EACN,OAAOA;AAAA,EACP,MAAMA;AAAA,EACN,KAAKA;AAAA,EACL,KAAKA;AAAA,EACL,OAAOA;AAAA,EACP,OAAOA;AAAA,EACP,OAAOA;AAAA,EACP,MAAMA;AAAA,EAEN,SAAS;AAAA,EACT,SAAS;AAAA,EACT,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,KAAK;AAAA,EACL,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,KAAK;AAAA,EACL,SAAS;AAAA,EACT,SAAS;AAAA,EAET;AAAA,EACA,OAAO;AAAA,EACP,GAAGC;AAAA,EACH,MAAAC;AAAA,EACA,YAAAC;AAAA,EACA;AAAA,EACA,MAAMC;AAAA,EACN,KAAKC;AAAA,EACL;AAAA,EACA,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ;AAAA,EACA;AAAA,EACA,IAAIC;AAAA,EACJ,IAAIA;AAAA,EACJ,IAAIA;AAAA,EACJ,IAAIA;AAAA,EACJ,IAAIA;AAAA,EACJ,IAAIA;AAAA,EACJ;AAAA,EACA,GAAG;AAAA,EACH,QAAAC;AAAA,EACA;AAAA,EACA,OAAO;AAAA,EACP;AAAA,EACA,KAAKH;AAAA,EACL;AAAA,EACA,SAASI;AAAA,EACT,MAAM;AAAA,EACN,IAAIH;AAAA,EACJ,GAAAI;AAAA,EACA,WAAWD;AAAA,EACX,KAAKA;AAAA,EACL;AAAA,EACA,GAAG;AAAA,EACH,MAAMJ;AAAA,EACN,QAAAM;AAAA,EACA,QAAQ;AAAA,EACR,QAAAT;AAAA,EACA,SAASQ;AAAA,EACT,OAAAE;AAAA,EACA,IAAIC;AAAA,EACJ;AAAA,EACA,IAAIA;AAAA,EACJ,IAAIC;AAAA,EACJ,IAAIT;AAAA,EACJ,GAAG;AAAA,EACH,IAAIC;AAAA,EACJ,KAAKD;AAAA,EACL,OAAO;AAAA,EACP;AAAA,EACA,KAAKI;AACP;AAEA,SAAST,UAAS;AAAC;;;ACxKnB,IAAMe,SAAQ,QAAQ,CAAC,WAAW,aAAa,MAAM,CAAC;AAU/C,SAAS,QAAQ,MAAM,UAAU,CAAC,GAAG;AAE1C,QAAM,OAAO,CAAC;AAEd,MAAIC;AAKJ,QAAMC,KAAI,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWb,CAACC,OAAM,MAAM,OAAO,aAAa;AAE/B,UAAI;AAEJ,UAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,KAAK,GAAG;AACrD,mBAAW;AACX,qBAAa,CAAC;AAAA,MAChB,OAAO;AACL,qBAAa;AAAA,MACf;AAIA,YAAMC,UAAS,EAAC,MAAM,GAAG,WAAU;AAEnC,UAAI,OAAO,aAAa,UAAU;AAEhC,QAAAA,QAAO,QAAQ;AAAA,MACjB,WAAW,UAAU;AAEnB,QAAAA,QAAO,WAAW;AAAA,MACpB;AAEA,UAAID,MAAK,UAAU;AACjB,QAAAC,QAAO,WAAWD,MAAK;AAAA,MACzB;AAEA,aAAOC;AAAA,IACT;AAAA,IAEF;AAAA,MACE,UAAU;AAAA,MACV,WAAW;AAAA,MACX,SAAS;AAAA,MACT,UAAU;AAAA;AAAA,MAEV,eAAe;AAAA,MACf,UAAU;AAAA,MACV,UAAU,QAAQ,WACd,EAAC,GAAGC,WAAU,GAAG,QAAQ,SAAQ,IACjCA;AAAA,MACJ,UAAU,QAAQ;AAAA,MAClB,SAAS,QAAQ,WAAW;AAAA,MAC5B,WAAW,QAAQ,aAAa;AAAA,MAChC,QAAQ,QAAQ,UAAU,CAAC,GAAG;AAAA,IAChC;AAAA,EACF;AAEA,QAAM,MAAM,WAAW,CAACF,UAAS;AAC/B,UAAM,KACJA,MAAK,cACL,QAAQA,MAAK,cACb,OAAOA,MAAK,WAAW,EAAE,EAAE,YAAY;AAEzC,QAAI,MAAM,CAACG,KAAI,KAAK,MAAM,EAAE,GAAG;AAC7B,WAAK,EAAE,IAAIH;AAAA,IACb;AAAA,EACF,CAAC;AAGD,yBAAuB,EAAC,UAAU,QAAQ,aAAa,KAAI,CAAC,EAAE,IAAI;AAElE,QAAM,SAASI,KAAIL,IAAG,MAAM,MAAS;AAErC,MAAI,CAAC,QAAQ;AACX,IAAAD,SAAQ,EAAC,MAAM,QAAQ,UAAU,CAAC,EAAC;AAAA,EACrC,WAAW,MAAM,QAAQ,MAAM,GAAG;AAChC,IAAAA,SAAQ,EAAC,MAAM,QAAQ,UAAU,OAAM;AAAA,EACzC,OAAO;AACL,IAAAA,SAAQ;AAAA,EACV;AAEA,QAAMA,QAAO,QAAQ,MAAM;AAE3B,SAAOA;AAWP,WAAS,OAAOE,OAAM,OAAO,QAAQ;AAEnC,QAAI,UAAU,QAAQ,CAAC,QAAQ;AAC7B;AAAA,IACF;AAEA,UAAM,WAAW,OAAO,SAAS,QAAQ,CAAC;AAE1C,QAAI,YAAY,SAAS,SAASA,MAAK,MAAM;AAC3C,eAAS,SAASA,MAAK;AACvB,aAAO,SAAS,OAAO,OAAO,CAAC;AAE/B,UAAI,SAAS,YAAYA,MAAK,UAAU;AACtC,iBAAS,SAAS,MAAMA,MAAK,SAAS;AAAA,MACxC;AAGA,aAAO,QAAQ;AAAA,IACjB;AAEA,IAAAA,MAAK,QAAQA,MAAK,MAAM,QAAQ,0BAA0B,IAAI;AAI9D,QAAI,UAAUH,OAAM,MAAM,GAAG;AAC3B,UAAI,CAAC,OAAO;AACV,QAAAG,MAAK,QAAQA,MAAK,MAAM,QAAQ,WAAW,EAAE;AAAA,MAC/C;AAEA,UAAI,UAAU,OAAO,SAAS,SAAS,GAAG;AACxC,QAAAA,MAAK,QAAQA,MAAK,MAAM,QAAQ,WAAW,EAAE;AAAA,MAC/C;AAAA,IACF;AAEA,QAAI,CAACA,MAAK,OAAO;AACf,aAAO,SAAS,OAAO,OAAO,CAAC;AAC/B,aAAO;AAAA,IACT;AAAA,EACF;AACF;;;AC1JA,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASF,SAAU,aAAa,SAAS;AAE9B,QAAI;AAEJ,QAAI;AAEJ,QAAI,OAAO,gBAAgB,YAAY;AACrC,kBAAY;AACZ,iBAAW,WAAW,CAAC;AAAA,IACzB,OAAO;AACL,iBAAW,eAAe,CAAC;AAAA,IAC7B;AAEA,QAAI,SAAS,aAAa,UAAa,SAAS,aAAa,MAAM;AACjE,iBAAW,OAAO,OAAO,CAAC,GAAG,UAAU,EAAC,UAAU,KAAI,CAAC;AAAA,IACzD;AAEA,WAAO,YAAY,OAAO,WAAW,QAAQ,IAAI,OAAO,QAAQ;AAAA,EAClE;AAAA;AAGJ,IAAO,cAAQ;AAQf,SAAS,OAAO,aAAa,SAAS;AACpC,SAAO,CAACK,OAAM,MAAM,SAAS;AAC3B,gBAAY,IAAI,QAAQA,OAAM,OAAO,GAAG,MAAM,CAAC,UAAU;AACvD,WAAK,KAAK;AAAA,IACZ,CAAC;AAAA,EACH;AACF;AAQA,SAAS,OAAO,UAAU,CAAC,GAAG;AAC5B,SAAO,CAACA,UAAS;AACf,UAAM;AAAA;AAAA,MAAmC,QAAQA,OAAM,OAAO;AAAA;AAC9D,WAAO;AAAA,EACT;AACF;;;ACrEA,IAAM,iBAAiB;AAAA,EACnB,sBAAsB;AAAA,EACtB,4BAA4B;AAAA,EAC5B,2BAA2B;AAAA,EAC3B,6BAA6B;AAAA,EAC7B,4BAA4B;AAChC;AAkBO,SAAS,qBAAqB,MAAM;AACvC,QAAM,MAAM,cAAc,CAACC,UAAS;AAChC,QAAI;AACJ,QAAI,CAACA,MAAK,QAAQA,MAAK,SAAS,eAAe;AAC3C;AACJ,IAAAA,MAAK,WAAW;AAAA,MACZ;AAAA,QACI,MAAM;AAAA,QACN,UAAU,CAAC,EAAE,MAAM,QAAQ,OAAO,sBAAsBA,MAAK,IAAI,EAAE,CAAC;AAAA,MACxE;AAAA,MACA,IAAK,KAAKA,MAAK,cAAc,QAAQ,OAAO,SAAS,KAAK,CAAC;AAAA,IAC/D;AAAA,EACJ,CAAC;AACL;AAEO,SAAS,2BAA2B,MAAM,OAAO;AACpD,YAAU,aAAa,IAAI,EACtB,OAAO,CAACC,eAAcA,WAAU,eAAe,KAAK,EACpD,QAAQ,CAACA,eAAc;AACxB,QAAI,IAAI;AACR,UAAM,cAAc,KAAK,MAAM,UAAUA,WAAU,UAAU,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK;AAC7G,UAAM,OAAO,OAAO,uBAAuBA,UAAS;AACpD,QAAI,cAAc,MAAM;AACpB,WAAK,WAAW;AAAA,QACZ,EAAE,MAAM,iBAAiB,MAAMA,WAAU,MAAM,OAAO,WAAW;AAAA,QACjE,IAAK,KAAK,SAAS,QAAQ,SAAS,SAAS,SAAS,KAAK,cAAc,QAAQ,OAAO,SAAS,KAAK,CAAC;AAAA,MAC3G;AAAA,IACJ;AAAA,EACJ,CAAC;AACL;AAcO,SAAS,iBAAiB,MAAM;AACnC,QAAM,MAAM,cAAc,CAACD,OAAM,UAAU;AACvC,UAAM,WAAW,UAAU,MAAM,KAAK;AACtC,UAAM,aAAa,eAAeA,MAAK,KAAK;AAC5C,QAAI,YAAY,YAAY;AACxB,eAAS,aAAa,WAAW;AACjC,eAAS,QAAQ,WAAW;AAAA,IAChC;AAAA,EACJ,CAAC;AACD,SAAO,MAAM,YAAY;AAC7B;AAMO,SAAS,yBAAyB,MAAM;AAC3C,QAAM,MAAM,WAAW,CAACA,UAAS;AAC7B,QAAIA,MAAK,YAAYA,MAAK,SAAS,CAAC,EAAE,SAAS,aAAa;AACxD,MAAAA,MAAK,WAAW,CAAC,EAAE,MAAM,aAAa,UAAUA,MAAK,SAAS,CAAC;AAAA,IACnE;AAAA,EACJ,CAAC;AACL;AA8BO,IAAM,YAAY,CAAC,OAAO,MAAM,CAAC,SAAS;AAC7C,QAAM,OAAO;AAAA,IACT,GAAG;AAAA,IACH,GAAG;AAAA,EACP;AACA,2BAAyB,IAAI;AAC7B,mBAAiB,IAAI;AACrB,mBAAiB,OAAO,MAAM,IAAI;AAClC,oBAAkB,OAAO,IAAI;AAC7B,eAAa,MAAM,eAAe;AAClC,eAAa,MAAM,UAAU;AAC7B,MAAI,KAAK;AACL,yBAAqB,IAAI;AAC7B,MAAI,KAAK;AACL,+BAA2B,MAAM,KAAK;AAC9C;;;AC3IO,IAAM,mBAAmB;AAAA,EAC9B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;;;ACPO,SAASE,MAAK,OAAO,SAAS;AACnC,UAAQ,MAAM;AAAA,IACZ,QAAQ,SAAS,uBAAuB,QAAQ,MAAM,IAAI;AAAA,IAC1DC;AAAA,EACF;AAEA,MAAI,QAAQ,UAAU,QAAQ,YAAY;AACxC,WAAO;AAAA,EACT;AAEA,SACE,MAEG,QAAQ,mCAAmC,SAAS,EAGpD;AAAA;AAAA,IAEC;AAAA,IACAA;AAAA,EACF;AAQJ,WAAS,UAAU,MAAM,OAAOC,MAAK;AACnC,WAAO,QAAQ;AAAA,OACZ,KAAK,WAAW,CAAC,IAAI,SAAU,OAC9B,KAAK,WAAW,CAAC,IACjB,QACA;AAAA,MACFA,KAAI,WAAW,QAAQ,CAAC;AAAA,MACxB;AAAA,IACF;AAAA,EACF;AAOA,WAASD,OAAM,WAAW,OAAOC,MAAK;AACpC,WAAO,QAAQ;AAAA,MACb,UAAU,WAAW,CAAC;AAAA,MACtBA,KAAI,WAAW,QAAQ,CAAC;AAAA,MACxB;AAAA,IACF;AAAA,EACF;AACF;AAMA,SAAS,uBAAuB,QAAQ;AAEtC,QAAM,SAAS,CAAC;AAChB,MAAI,QAAQ;AAEZ,SAAO,EAAE,QAAQ,OAAO,QAAQ;AAC9B,WAAO,KAAK,OAAO,KAAK,EAAE,QAAQ,uBAAuB,MAAM,CAAC;AAAA,EAClE;AAEA,SAAO,IAAI,OAAO,QAAQ,OAAO,KAAK,GAAG,IAAI,KAAK,GAAG;AACvD;;;ACjFO,SAAS,cAAcC,OAAM,MAAM,MAAM;AAC9C,QAAM,QAAQ,QAAQA,MAAK,SAAS,EAAE,EAAE,YAAY;AACpD,SAAO,QAAQ,QAAQ,CAAC,aAAa,KAAK,OAAO,aAAa,IAAI,CAAC,IAC/D,QACA,QAAQ;AACd;;;ACLO,SAAS,UAAUC,OAAM,MAAM,MAAM;AAC1C,QAAM,QAAQ,OAAO,OAAOA,KAAI;AAChC,SAAO,QAAQ,QAAQ,CAAC,KAAK,KAAK,OAAO,aAAa,IAAI,CAAC,IACvD,QACA,QAAQ;AACd;;;ACRO,IAAM,0BAA0B;AAAA,EACryBAAyB;AAAA,EACpC,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,KAAK;AAAA,EACL,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,MAAM;AAAA,EACN,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAA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",
  "names": ["require_entities", "key", "source", "code", "escapeHtml", "element", "element", "key", "element", "element", "node", "siblings", "code", "require_preprocessor_mixin", "code", "require_tokenizer_mixin", "require_parser_mixin", "code", "node", "text", "element", "location", "key", "doctype", "html", "node", "element", "content", "location", "p", "node", "checks", "index", "node", "content", "skippable", "node", "node", "minify", "head", "node", "list", "formatHtml", "key", "html", "a", "math", "block", "number", "html", "node", "node", "node", "node", "node", "code", "code", "node", "link", "node", "node", "node", "node", "head", "node", "node", "node", "text", "node", "node", "node", "head", "paragraph", "list", "node", "node", "node", "node", "node", "point", "node", "head", "body", "node", "siblings", "cells", "cell", "result", "node", "source", "search", "code", "node", "node", "list", "node", "own", "definition", "own", "dangerous", "node", "all", "head", "content", "listItem", "node", "h", "node", "all", "image", "classNames", "heading", "table", "code", "own", "find", "node", "replace", "position", "key", "TargetKind", "ReferenceKind", "node", "caption", "space", "definitions", "space", "space", "key", "own", "html", "html", "svg", "input", "parse", "input", "stringify", "own", "h", "node", "key", "parse", "html", "svg", "search", "point", "own", "one", "svg", "html", "node", "patch", "all", "element", "position", "content", "location", "key", "point", "Parser5", "code", "camelcase", "all", "h", "one", "own", "h", "one", "h", "node", "own", "all", "phrasing", "wrap", "nodes", "head", "node", "phrasing", "extend", "h", "node", "wrap", "all", "h", "h", "node", "all", "base", "h", "node", "blockquote", "h", "node", "h", "node", "br", "block", "whitespace", "node", "prefix", "input", "code", "code", "h", "node", "comment", "h", "node", "h", "node", "all", "h", "node", "all", "h", "node", "clean", "content", "h", "node", "all", "heading", "h", "node", "wrap", "all", "h", "node", "iframe", "h", "node", "h", "node", "inlineCode", "h", "node", "h", "node", "list", "option", "content", "props", "h", "node", "list", "own", "p", "input", "h", "node", "head", "content", "list", "h", "node", "one", "node", "all", "h", "node", "all", "p", "h", "node", "all", "h", "node", "all", "root", "h", "node", "all", "wrap", "select", "h", "node", "strong", "h", "node", "all", "tableCell", "h", "node", "wrap", "all", "tableRow", "h", "node", "all", "cell", "table", "h", "node", "all", "cells", "text", "h", "node", "h", "node", "h", "node", "handlers", "root", "text", "comment", "ignore", "all", "strong", "base", "blockquote", "inlineCode", "list", "heading", "iframe", "code", "p", "select", "table", "tableCell", "tableRow", "block", "mdast", "h", "node", "result", "handlers", "own", "one", "node", "node", "container", "core", "basic", "all", "code", "code", "own", "code", "code", "core", "comment", "node", "source", "increment", "siblings", "own", "handlers", "node", "html", "p", "li", "dt", "dd", "option", "thead", "tr", "html", "body", "tbody", "node", "head", "element", "node", "svg", "content", "key", "stringify", "text", "node", "node", "text", "root", "node", "handle", "unknown", "comment", "element", "root", "text", "node", "one", "all", "svg", "html", "node", "handle", "html"]
}

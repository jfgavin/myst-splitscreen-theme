{
  "version": 3,
  "sources": ["../../../../../node_modules/@codemirror/commands/dist/index.js", "../../../../../node_modules/@jupyterlab/codemirror/src/commands.ts", "../../../../../node_modules/@jupyterlab/codemirror/src/extensions/customStyle.ts", "../../../../../node_modules/@jupyterlab/codemirror/src/extensions/ipython-md.ts", "../../../../../node_modules/@jupyterlab/codemirror/src/extensions/rulers.ts", "../../../../../node_modules/lib0/map.js", "../../../../../node_modules/lib0/set.js", "../../../../../node_modules/lib0/array.js", "../../../../../node_modules/lib0/observable.js", "../../../../../node_modules/lib0/math.js", "../../../../../node_modules/lib0/string.js", "../../../../../node_modules/lib0/conditions.js", "../../../../../node_modules/lib0/storage.js", "../../../../../node_modules/lib0/object.js", "../../../../../node_modules/lib0/function.js", "../../../../../node_modules/lib0/environment.js", "../../../../../node_modules/lib0/binary.js", "../../../../../node_modules/lib0/number.js", "../../../../../node_modules/lib0/error.js", "../../../../../node_modules/lib0/buffer.js", "../../../../../node_modules/lib0/encoding.js", "../../../../../node_modules/lib0/webcrypto.js", "../../../../../node_modules/lib0/random.js", "../../../../../node_modules/lib0/time.js", "../../../../../node_modules/lib0/promise.js", "../../../../../node_modules/lib0/pair.js", "../../../../../node_modules/lib0/dom.js", "../../../../../node_modules/lib0/symbol.js", "../../../../../node_modules/lib0/logging.common.js", "../../../../../node_modules/lib0/logging.js", "../../../../../node_modules/lib0/iterator.js", "../../../../../node_modules/yjs/src/utils/AbstractConnector.js", "../../../../../node_modules/yjs/src/utils/DeleteSet.js", "../../../../../node_modules/yjs/src/utils/Doc.js", "../../../../../node_modules/yjs/src/utils/UpdateDecoder.js", "../../../../../node_modules/yjs/src/utils/UpdateEncoder.js", "../../../../../node_modules/yjs/src/utils/encoding.js", "../../../../../node_modules/yjs/src/utils/EventHandler.js", "../../../../../node_modules/yjs/src/utils/ID.js", "../../../../../node_modules/yjs/src/utils/isParentOf.js", "../../../../../node_modules/yjs/src/utils/logging.js", "../../../../../node_modules/yjs/src/utils/PermanentUserData.js", "../../../../../node_modules/yjs/src/utils/RelativePosition.js", "../../../../../node_modules/yjs/src/utils/Snapshot.js", "../../../../../node_modules/yjs/src/utils/StructStore.js", "../../../../../node_modules/yjs/src/utils/Transaction.js", "../../../../../node_modules/yjs/src/utils/UndoManager.js", "../../../../../node_modules/yjs/src/utils/updates.js", "../../../../../node_modules/yjs/src/utils/YEvent.js", "../../../../../node_modules/yjs/src/types/AbstractType.js", "../../../../../node_modules/yjs/src/types/YArray.js", "../../../../../node_modules/yjs/src/types/YMap.js", "../../../../../node_modules/yjs/src/types/YText.js", "../../../../../node_modules/yjs/src/types/YXmlFragment.js", "../../../../../node_modules/yjs/src/types/YXmlElement.js", "../../../../../node_modules/yjs/src/types/YXmlEvent.js", "../../../../../node_modules/yjs/src/types/YXmlHook.js", "../../../../../node_modules/yjs/src/types/YXmlText.js", "../../../../../node_modules/yjs/src/structs/AbstractStruct.js", "../../../../../node_modules/yjs/src/structs/GC.js", "../../../../../node_modules/yjs/src/structs/ContentBinary.js", "../../../../../node_modules/yjs/src/structs/ContentDeleted.js", "../../../../../node_modules/yjs/src/structs/ContentDoc.js", "../../../../../node_modules/yjs/src/structs/ContentEmbed.js", "../../../../../node_modules/yjs/src/structs/ContentFormat.js", "../../../../../node_modules/yjs/src/structs/ContentJSON.js", "../../../../../node_modules/yjs/src/structs/ContentAny.js", "../../../../../node_modules/yjs/src/structs/ContentString.js", "../../../../../node_modules/yjs/src/structs/ContentType.js", "../../../../../node_modules/yjs/src/structs/Item.js", "../../../../../node_modules/yjs/src/structs/Skip.js", "../../../../../node_modules/yjs/src/index.js", "../../../../../node_modules/@jupyterlab/codemirror/src/extensions/ybinding.ts", "../../../../../node_modules/@jupyterlab/codemirror/src/extensions/index.ts", "../../../../../node_modules/@jupyterlab/codemirror/src/extension.ts", "../../../../../node_modules/@jupyter/ydoc/src/api.ts", "../../../../../node_modules/@jupyter/ydoc/src/utils.ts", "../../../../../node_modules/@jupyter/ydoc/src/awareness.ts", "../../../../../node_modules/@jupyter/ydoc/src/ytext.ts", "../../../../../node_modules/y-protocols/awareness.js", "../../../../../node_modules/@jupyter/ydoc/src/ydocument.ts", "../../../../../node_modules/@jupyter/ydoc/src/yfile.ts", "../../../../../node_modules/@jupyter/ydoc/src/ycell.ts", "../../../../../node_modules/@jupyter/ydoc/src/ynotebook.ts", "../../../../../node_modules/@jupyter/ydoc/src/index.ts", "../../../../../node_modules/@jupyterlab/codeeditor/src/editor.ts", "../../../../../node_modules/@jupyterlab/codeeditor/src/factory.ts", "../../../../../node_modules/@jupyterlab/codeeditor/src/jsoneditor.ts", "../../../../../node_modules/@jupyterlab/codeeditor/src/lineCol.tsx", "../../../../../node_modules/@jupyterlab/codeeditor/src/mimetype.ts", "../../../../../node_modules/@jupyterlab/codeeditor/src/tokens.ts", "../../../../../node_modules/@jupyterlab/codeeditor/src/widget.ts", "../../../../../node_modules/@jupyterlab/codeeditor/src/viewer.ts", "../../../../../node_modules/@jupyterlab/codeeditor/src/index.ts", "../../../../../node_modules/@lezer/generator/dist/index.js", "../../../../../node_modules/@jupyterlab/codemirror/src/theme.ts", "../../../../../node_modules/@jupyterlab/codemirror/src/language.ts", "../../../../../node_modules/@jupyterlab/codemirror/src/editor.ts", "../../../../../node_modules/@jupyterlab/codemirror/src/factory.ts", "../../../../../node_modules/@jupyterlab/codemirror/src/mimetype.ts", "../../../../../node_modules/@jupyterlab/codemirror/src/searchprovider.ts", "../../../../../node_modules/@jupyterlab/codemirror/src/token.ts", "../../../../../node_modules/@jupyterlab/codemirror/src/index.ts", "../../../../../node_modules/react-highlight-words/dist/webpack:/webpack/bootstrap 8867c861f9f125da279c", "../../../../../node_modules/react-highlight-words/dist/webpack:/src/index.js", "../../../../../node_modules/react-highlight-words/dist/webpack:/src/Highlighter.js", "../../../../../node_modules/react-highlight-words/dist/webpack:/~/highlight-words-core/dist/index.js", "../../../../../node_modules/react-highlight-words/dist/webpack:/~/prop-types/index.js", "../../../../../node_modules/react-highlight-words/dist/webpack:/~/process/browser.js", "../../../../../node_modules/react-highlight-words/dist/webpack:/~/prop-types/factoryWithTypeCheckers.js", "../../../../../node_modules/react-highlight-words/dist/webpack:/~/fbjs/lib/emptyFunction.js", "../../../../../node_modules/react-highlight-words/dist/webpack:/~/fbjs/lib/invariant.js", "../../../../../node_modules/react-highlight-words/dist/webpack:/~/fbjs/lib/warning.js", "../../../../../node_modules/react-highlight-words/dist/webpack:/~/object-assign/index.js", "../../../../../node_modules/react-highlight-words/dist/webpack:/~/prop-types/lib/ReactPropTypesSecret.js", "../../../../../node_modules/react-highlight-words/dist/webpack:/~/prop-types/checkPropTypes.js", "../../../../../node_modules/react-highlight-words/dist/webpack:/~/prop-types/factoryWithThrowingShims.js", "../../../../../node_modules/react-highlight-words/dist/webpack:/external \"react\"", "../../../../../node_modules/react-highlight-words/dist/webpack:/~/memoize-one/dist/memoize-one.cjs.js", "../../../../../node_modules/react-json-tree/lib/esm/objType.js", "../../../../../node_modules/react-json-tree/lib/esm/JSONArrow.js", "../../../../../node_modules/react-json-tree/lib/esm/getCollectionEntries.js", "../../../../../node_modules/react-json-tree/lib/esm/ItemRange.js", "../../../../../node_modules/react-json-tree/lib/esm/JSONNestedNode.js", "../../../../../node_modules/react-json-tree/lib/esm/JSONObjectNode.js", "../../../../../node_modules/react-json-tree/lib/esm/JSONArrayNode.js", "../../../../../node_modules/react-json-tree/lib/esm/JSONIterableNode.js", "../../../../../node_modules/react-json-tree/lib/esm/JSONValueNode.js", "../../../../../node_modules/react-json-tree/lib/esm/JSONNode.js", "../../../../../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js", "../../../../../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js", "../../../../../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js", "../../../../../node_modules/@babel/runtime/helpers/esm/slicedToArray.js", "../../../../../node_modules/base16/lib/threezerotwofour.js", "../../../../../node_modules/base16/lib/apathy.js", "../../../../../node_modules/base16/lib/ashes.js", "../../../../../node_modules/base16/lib/atelier-dune.js", "../../../../../node_modules/base16/lib/atelier-forest.js", "../../../../../node_modules/base16/lib/atelier-heath.js", "../../../../../node_modules/base16/lib/atelier-lakeside.js", "../../../../../node_modules/base16/lib/atelier-seaside.js", "../../../../../node_modules/base16/lib/bespin.js", "../../../../../node_modules/base16/lib/brewer.js", "../../../../../node_modules/base16/lib/bright.js", "../../../../../node_modules/base16/lib/chalk.js", "../../../../../node_modules/base16/lib/codeschool.js", "../../../../../node_modules/base16/lib/colors.js", "../../../../../node_modules/base16/lib/default.js", "../../../../../node_modules/base16/lib/eighties.js", "../../../../../node_modules/base16/lib/embers.js", "../../../../../node_modules/base16/lib/flat.js", "../../../../../node_modules/base16/lib/google.js", "../../../../../node_modules/base16/lib/grayscale.js", "../../../../../node_modules/base16/lib/greenscreen.js", "../../../../../node_modules/base16/lib/harmonic.js", "../../../../../node_modules/base16/lib/hopscotch.js", "../../../../../node_modules/base16/lib/isotope.js", "../../../../../node_modules/base16/lib/marrakesh.js", "../../../../../node_modules/base16/lib/mocha.js", "../../../../../node_modules/base16/lib/monokai.js", "../../../../../node_modules/base16/lib/ocean.js", "../../../../../node_modules/base16/lib/paraiso.js", "../../../../../node_modules/base16/lib/pop.js", "../../../../../node_modules/base16/lib/railscasts.js", "../../../../../node_modules/base16/lib/shapeshifter.js", "../../../../../node_modules/base16/lib/solarized.js", "../../../../../node_modules/base16/lib/summerfruit.js", "../../../../../node_modules/base16/lib/tomorrow.js", "../../../../../node_modules/base16/lib/tube.js", "../../../../../node_modules/base16/lib/twilight.js", "../../../../../node_modules/base16/lib/index.js", "../../../../../node_modules/color-convert/conversions.js", "../../../../../node_modules/color-convert/route.js", "../../../../../node_modules/color-convert/index.js", "../../../../../node_modules/react-base16-styling/node_modules/color/index.js", "../../../../../node_modules/lodash.curry/index.js", "../../../../../node_modules/react-base16-styling/lib/esm/colorConverters.js", "../../../../../node_modules/react-base16-styling/lib/esm/types.js", "../../../../../node_modules/react-base16-styling/lib/esm/index.js", "../../../../../node_modules/react-json-tree/lib/esm/themes/solarized.js", "../../../../../node_modules/react-json-tree/lib/esm/createStylingFromTheme.js", "../../../../../node_modules/react-json-tree/lib/esm/index.js", "../../../../../node_modules/@jupyterlab/json-extension/src/component.tsx"],
  "sourcesContent": ["import { Annotation, Facet, combineConfig, StateField, EditorSelection, Transaction, ChangeSet, ChangeDesc, StateEffect, Text, findClusterBreak, countColumn, CharCategory } from '@codemirror/state';\nimport { EditorView, Direction } from '@codemirror/view';\nimport { IndentContext, getIndentation, indentString, matchBrackets, syntaxTree, getIndentUnit, indentUnit } from '@codemirror/language';\nimport { NodeProp } from '@lezer/common';\n\n/**\nComment or uncomment the current selection. Will use line comments\nif available, otherwise falling back to block comments.\n*/\nconst toggleComment = target => {\n    let { state } = target, line = state.doc.lineAt(state.selection.main.from), config = getConfig(target.state, line.from);\n    return config.line ? toggleLineComment(target) : config.block ? toggleBlockCommentByLine(target) : false;\n};\nfunction command(f, option) {\n    return ({ state, dispatch }) => {\n        if (state.readOnly)\n            return false;\n        let tr = f(option, state);\n        if (!tr)\n            return false;\n        dispatch(state.update(tr));\n        return true;\n    };\n}\n/**\nComment or uncomment the current selection using line comments.\nThe line comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleLineComment = /*@__PURE__*/command(changeLineComment, 0 /* CommentOption.Toggle */);\n/**\nComment the current selection using line comments.\n*/\nconst lineComment = /*@__PURE__*/command(changeLineComment, 1 /* CommentOption.Comment */);\n/**\nUncomment the current selection using line comments.\n*/\nconst lineUncomment = /*@__PURE__*/command(changeLineComment, 2 /* CommentOption.Uncomment */);\n/**\nComment or uncomment the current selection using block comments.\nThe block comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleBlockComment = /*@__PURE__*/command(changeBlockComment, 0 /* CommentOption.Toggle */);\n/**\nComment the current selection using block comments.\n*/\nconst blockComment = /*@__PURE__*/command(changeBlockComment, 1 /* CommentOption.Comment */);\n/**\nUncomment the current selection using block comments.\n*/\nconst blockUncomment = /*@__PURE__*/command(changeBlockComment, 2 /* CommentOption.Uncomment */);\n/**\nComment or uncomment the lines around the current selection using\nblock comments.\n*/\nconst toggleBlockCommentByLine = /*@__PURE__*/command((o, s) => changeBlockComment(o, s, selectedLineRanges(s)), 0 /* CommentOption.Toggle */);\nfunction getConfig(state, pos) {\n    let data = state.languageDataAt(\"commentTokens\", pos);\n    return data.length ? data[0] : {};\n}\nconst SearchMargin = 50;\n/**\nDetermines if the given range is block-commented in the given\nstate.\n*/\nfunction findBlockComment(state, { open, close }, from, to) {\n    let textBefore = state.sliceDoc(from - SearchMargin, from);\n    let textAfter = state.sliceDoc(to, to + SearchMargin);\n    let spaceBefore = /\\s*$/.exec(textBefore)[0].length, spaceAfter = /^\\s*/.exec(textAfter)[0].length;\n    let beforeOff = textBefore.length - spaceBefore;\n    if (textBefore.slice(beforeOff - open.length, beforeOff) == open &&\n        textAfter.slice(spaceAfter, spaceAfter + close.length) == close) {\n        return { open: { pos: from - spaceBefore, margin: spaceBefore && 1 },\n            close: { pos: to + spaceAfter, margin: spaceAfter && 1 } };\n    }\n    let startText, endText;\n    if (to - from <= 2 * SearchMargin) {\n        startText = endText = state.sliceDoc(from, to);\n    }\n    else {\n        startText = state.sliceDoc(from, from + SearchMargin);\n        endText = state.sliceDoc(to - SearchMargin, to);\n    }\n    let startSpace = /^\\s*/.exec(startText)[0].length, endSpace = /\\s*$/.exec(endText)[0].length;\n    let endOff = endText.length - endSpace - close.length;\n    if (startText.slice(startSpace, startSpace + open.length) == open &&\n        endText.slice(endOff, endOff + close.length) == close) {\n        return { open: { pos: from + startSpace + open.length,\n                margin: /\\s/.test(startText.charAt(startSpace + open.length)) ? 1 : 0 },\n            close: { pos: to - endSpace - close.length,\n                margin: /\\s/.test(endText.charAt(endOff - 1)) ? 1 : 0 } };\n    }\n    return null;\n}\nfunction selectedLineRanges(state) {\n    let ranges = [];\n    for (let r of state.selection.ranges) {\n        let fromLine = state.doc.lineAt(r.from);\n        let toLine = r.to <= fromLine.to ? fromLine : state.doc.lineAt(r.to);\n        let last = ranges.length - 1;\n        if (last >= 0 && ranges[last].to > fromLine.from)\n            ranges[last].to = toLine.to;\n        else\n            ranges.push({ from: fromLine.from + /^\\s*/.exec(fromLine.text)[0].length, to: toLine.to });\n    }\n    return ranges;\n}\n// Performs toggle, comment and uncomment of block comments in\n// languages that support them.\nfunction changeBlockComment(option, state, ranges = state.selection.ranges) {\n    let tokens = ranges.map(r => getConfig(state, r.from).block);\n    if (!tokens.every(c => c))\n        return null;\n    let comments = ranges.map((r, i) => findBlockComment(state, tokens[i], r.from, r.to));\n    if (option != 2 /* CommentOption.Uncomment */ && !comments.every(c => c)) {\n        return { changes: state.changes(ranges.map((range, i) => {\n                if (comments[i])\n                    return [];\n                return [{ from: range.from, insert: tokens[i].open + \" \" }, { from: range.to, insert: \" \" + tokens[i].close }];\n            })) };\n    }\n    else if (option != 1 /* CommentOption.Comment */ && comments.some(c => c)) {\n        let changes = [];\n        for (let i = 0, comment; i < comments.length; i++)\n            if (comment = comments[i]) {\n                let token = tokens[i], { open, close } = comment;\n                changes.push({ from: open.pos - token.open.length, to: open.pos + open.margin }, { from: close.pos - close.margin, to: close.pos + token.close.length });\n            }\n        return { changes };\n    }\n    return null;\n}\n// Performs toggle, comment and uncomment of line comments.\nfunction changeLineComment(option, state, ranges = state.selection.ranges) {\n    let lines = [];\n    let prevLine = -1;\n    for (let { from, to } of ranges) {\n        let startI = lines.length, minIndent = 1e9;\n        let token = getConfig(state, from).line;\n        if (!token)\n            continue;\n        for (let pos = from; pos <= to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.from > prevLine && (from == to || to > line.from)) {\n                prevLine = line.from;\n                let indent = /^\\s*/.exec(line.text)[0].length;\n                let empty = indent == line.length;\n                let comment = line.text.slice(indent, indent + token.length) == token ? indent : -1;\n                if (indent < line.text.length && indent < minIndent)\n                    minIndent = indent;\n                lines.push({ line, comment, token, indent, empty, single: false });\n            }\n            pos = line.to + 1;\n        }\n        if (minIndent < 1e9)\n            for (let i = startI; i < lines.length; i++)\n                if (lines[i].indent < lines[i].line.text.length)\n                    lines[i].indent = minIndent;\n        if (lines.length == startI + 1)\n            lines[startI].single = true;\n    }\n    if (option != 2 /* CommentOption.Uncomment */ && lines.some(l => l.comment < 0 && (!l.empty || l.single))) {\n        let changes = [];\n        for (let { line, token, indent, empty, single } of lines)\n            if (single || !empty)\n                changes.push({ from: line.from + indent, insert: token + \" \" });\n        let changeSet = state.changes(changes);\n        return { changes: changeSet, selection: state.selection.map(changeSet, 1) };\n    }\n    else if (option != 1 /* CommentOption.Comment */ && lines.some(l => l.comment >= 0)) {\n        let changes = [];\n        for (let { line, comment, token } of lines)\n            if (comment >= 0) {\n                let from = line.from + comment, to = from + token.length;\n                if (line.text[to - line.from] == \" \")\n                    to++;\n                changes.push({ from, to });\n            }\n        return { changes };\n    }\n    return null;\n}\n\nconst fromHistory = /*@__PURE__*/Annotation.define();\n/**\nTransaction annotation that will prevent that transaction from\nbeing combined with other transactions in the undo history. Given\n`\"before\"`, it'll prevent merging with previous transactions. With\n`\"after\"`, subsequent transactions won't be combined with this\none. With `\"full\"`, the transaction is isolated on both sides.\n*/\nconst isolateHistory = /*@__PURE__*/Annotation.define();\n/**\nThis facet provides a way to register functions that, given a\ntransaction, provide a set of effects that the history should\nstore when inverting the transaction. This can be used to\nintegrate some kinds of effects in the history, so that they can\nbe undone (and redone again).\n*/\nconst invertedEffects = /*@__PURE__*/Facet.define();\nconst historyConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            minDepth: 100,\n            newGroupDelay: 500,\n            joinToEvent: (_t, isAdjacent) => isAdjacent,\n        }, {\n            minDepth: Math.max,\n            newGroupDelay: Math.min,\n            joinToEvent: (a, b) => (tr, adj) => a(tr, adj) || b(tr, adj)\n        });\n    }\n});\nfunction changeEnd(changes) {\n    let end = 0;\n    changes.iterChangedRanges((_, to) => end = to);\n    return end;\n}\nconst historyField_ = /*@__PURE__*/StateField.define({\n    create() {\n        return HistoryState.empty;\n    },\n    update(state, tr) {\n        let config = tr.state.facet(historyConfig);\n        let fromHist = tr.annotation(fromHistory);\n        if (fromHist) {\n            let selection = tr.docChanged ? EditorSelection.single(changeEnd(tr.changes)) : undefined;\n            let item = HistEvent.fromTransaction(tr, selection), from = fromHist.side;\n            let other = from == 0 /* BranchName.Done */ ? state.undone : state.done;\n            if (item)\n                other = updateBranch(other, other.length, config.minDepth, item);\n            else\n                other = addSelection(other, tr.startState.selection);\n            return new HistoryState(from == 0 /* BranchName.Done */ ? fromHist.rest : other, from == 0 /* BranchName.Done */ ? other : fromHist.rest);\n        }\n        let isolate = tr.annotation(isolateHistory);\n        if (isolate == \"full\" || isolate == \"before\")\n            state = state.isolate();\n        if (tr.annotation(Transaction.addToHistory) === false)\n            return !tr.changes.empty ? state.addMapping(tr.changes.desc) : state;\n        let event = HistEvent.fromTransaction(tr);\n        let time = tr.annotation(Transaction.time), userEvent = tr.annotation(Transaction.userEvent);\n        if (event)\n            state = state.addChanges(event, time, userEvent, config, tr);\n        else if (tr.selection)\n            state = state.addSelection(tr.startState.selection, time, userEvent, config.newGroupDelay);\n        if (isolate == \"full\" || isolate == \"after\")\n            state = state.isolate();\n        return state;\n    },\n    toJSON(value) {\n        return { done: value.done.map(e => e.toJSON()), undone: value.undone.map(e => e.toJSON()) };\n    },\n    fromJSON(json) {\n        return new HistoryState(json.done.map(HistEvent.fromJSON), json.undone.map(HistEvent.fromJSON));\n    }\n});\n/**\nCreate a history extension with the given configuration.\n*/\nfunction history(config = {}) {\n    return [\n        historyField_,\n        historyConfig.of(config),\n        EditorView.domEventHandlers({\n            beforeinput(e, view) {\n                let command = e.inputType == \"historyUndo\" ? undo : e.inputType == \"historyRedo\" ? redo : null;\n                if (!command)\n                    return false;\n                e.preventDefault();\n                return command(view);\n            }\n        })\n    ];\n}\n/**\nThe state field used to store the history data. Should probably\nonly be used when you want to\n[serialize](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) or\n[deserialize](https://codemirror.net/6/docs/ref/#state.EditorState^fromJSON) state objects in a way\nthat preserves history.\n*/\nconst historyField = historyField_;\nfunction cmd(side, selection) {\n    return function ({ state, dispatch }) {\n        if (!selection && state.readOnly)\n            return false;\n        let historyState = state.field(historyField_, false);\n        if (!historyState)\n            return false;\n        let tr = historyState.pop(side, state, selection);\n        if (!tr)\n            return false;\n        dispatch(tr);\n        return true;\n    };\n}\n/**\nUndo a single group of history events. Returns false if no group\nwas available.\n*/\nconst undo = /*@__PURE__*/cmd(0 /* BranchName.Done */, false);\n/**\nRedo a group of history events. Returns false if no group was\navailable.\n*/\nconst redo = /*@__PURE__*/cmd(1 /* BranchName.Undone */, false);\n/**\nUndo a change or selection change.\n*/\nconst undoSelection = /*@__PURE__*/cmd(0 /* BranchName.Done */, true);\n/**\nRedo a change or selection change.\n*/\nconst redoSelection = /*@__PURE__*/cmd(1 /* BranchName.Undone */, true);\nfunction depth(side) {\n    return function (state) {\n        let histState = state.field(historyField_, false);\n        if (!histState)\n            return 0;\n        let branch = side == 0 /* BranchName.Done */ ? histState.done : histState.undone;\n        return branch.length - (branch.length && !branch[0].changes ? 1 : 0);\n    };\n}\n/**\nThe amount of undoable change events available in a given state.\n*/\nconst undoDepth = /*@__PURE__*/depth(0 /* BranchName.Done */);\n/**\nThe amount of redoable change events available in a given state.\n*/\nconst redoDepth = /*@__PURE__*/depth(1 /* BranchName.Undone */);\n// History events store groups of changes or effects that need to be\n// undone/redone together.\nclass HistEvent {\n    constructor(\n    // The changes in this event. Normal events hold at least one\n    // change or effect. But it may be necessary to store selection\n    // events before the first change, in which case a special type of\n    // instance is created which doesn't hold any changes, with\n    // changes == startSelection == undefined\n    changes, \n    // The effects associated with this event\n    effects, \n    // Accumulated mapping (from addToHistory==false) that should be\n    // applied to events below this one.\n    mapped, \n    // The selection before this event\n    startSelection, \n    // Stores selection changes after this event, to be used for\n    // selection undo/redo.\n    selectionsAfter) {\n        this.changes = changes;\n        this.effects = effects;\n        this.mapped = mapped;\n        this.startSelection = startSelection;\n        this.selectionsAfter = selectionsAfter;\n    }\n    setSelAfter(after) {\n        return new HistEvent(this.changes, this.effects, this.mapped, this.startSelection, after);\n    }\n    toJSON() {\n        var _a, _b, _c;\n        return {\n            changes: (_a = this.changes) === null || _a === void 0 ? void 0 : _a.toJSON(),\n            mapped: (_b = this.mapped) === null || _b === void 0 ? void 0 : _b.toJSON(),\n            startSelection: (_c = this.startSelection) === null || _c === void 0 ? void 0 : _c.toJSON(),\n            selectionsAfter: this.selectionsAfter.map(s => s.toJSON())\n        };\n    }\n    static fromJSON(json) {\n        return new HistEvent(json.changes && ChangeSet.fromJSON(json.changes), [], json.mapped && ChangeDesc.fromJSON(json.mapped), json.startSelection && EditorSelection.fromJSON(json.startSelection), json.selectionsAfter.map(EditorSelection.fromJSON));\n    }\n    // This does not check `addToHistory` and such, it assumes the\n    // transaction needs to be converted to an item. Returns null when\n    // there are no changes or effects in the transaction.\n    static fromTransaction(tr, selection) {\n        let effects = none;\n        for (let invert of tr.startState.facet(invertedEffects)) {\n            let result = invert(tr);\n            if (result.length)\n                effects = effects.concat(result);\n        }\n        if (!effects.length && tr.changes.empty)\n            return null;\n        return new HistEvent(tr.changes.invert(tr.startState.doc), effects, undefined, selection || tr.startState.selection, none);\n    }\n    static selection(selections) {\n        return new HistEvent(undefined, none, undefined, undefined, selections);\n    }\n}\nfunction updateBranch(branch, to, maxLen, newEvent) {\n    let start = to + 1 > maxLen + 20 ? to - maxLen - 1 : 0;\n    let newBranch = branch.slice(start, to);\n    newBranch.push(newEvent);\n    return newBranch;\n}\nfunction isAdjacent(a, b) {\n    let ranges = [], isAdjacent = false;\n    a.iterChangedRanges((f, t) => ranges.push(f, t));\n    b.iterChangedRanges((_f, _t, f, t) => {\n        for (let i = 0; i < ranges.length;) {\n            let from = ranges[i++], to = ranges[i++];\n            if (t >= from && f <= to)\n                isAdjacent = true;\n        }\n    });\n    return isAdjacent;\n}\nfunction eqSelectionShape(a, b) {\n    return a.ranges.length == b.ranges.length &&\n        a.ranges.filter((r, i) => r.empty != b.ranges[i].empty).length === 0;\n}\nfunction conc(a, b) {\n    return !a.length ? b : !b.length ? a : a.concat(b);\n}\nconst none = [];\nconst MaxSelectionsPerEvent = 200;\nfunction addSelection(branch, selection) {\n    if (!branch.length) {\n        return [HistEvent.selection([selection])];\n    }\n    else {\n        let lastEvent = branch[branch.length - 1];\n        let sels = lastEvent.selectionsAfter.slice(Math.max(0, lastEvent.selectionsAfter.length - MaxSelectionsPerEvent));\n        if (sels.length && sels[sels.length - 1].eq(selection))\n            return branch;\n        sels.push(selection);\n        return updateBranch(branch, branch.length - 1, 1e9, lastEvent.setSelAfter(sels));\n    }\n}\n// Assumes the top item has one or more selectionAfter values\nfunction popSelection(branch) {\n    let last = branch[branch.length - 1];\n    let newBranch = branch.slice();\n    newBranch[branch.length - 1] = last.setSelAfter(last.selectionsAfter.slice(0, last.selectionsAfter.length - 1));\n    return newBranch;\n}\n// Add a mapping to the top event in the given branch. If this maps\n// away all the changes and effects in that item, drop it and\n// propagate the mapping to the next item.\nfunction addMappingToBranch(branch, mapping) {\n    if (!branch.length)\n        return branch;\n    let length = branch.length, selections = none;\n    while (length) {\n        let event = mapEvent(branch[length - 1], mapping, selections);\n        if (event.changes && !event.changes.empty || event.effects.length) { // Event survived mapping\n            let result = branch.slice(0, length);\n            result[length - 1] = event;\n            return result;\n        }\n        else { // Drop this event, since there's no changes or effects left\n            mapping = event.mapped;\n            length--;\n            selections = event.selectionsAfter;\n        }\n    }\n    return selections.length ? [HistEvent.selection(selections)] : none;\n}\nfunction mapEvent(event, mapping, extraSelections) {\n    let selections = conc(event.selectionsAfter.length ? event.selectionsAfter.map(s => s.map(mapping)) : none, extraSelections);\n    // Change-less events don't store mappings (they are always the last event in a branch)\n    if (!event.changes)\n        return HistEvent.selection(selections);\n    let mappedChanges = event.changes.map(mapping), before = mapping.mapDesc(event.changes, true);\n    let fullMapping = event.mapped ? event.mapped.composeDesc(before) : before;\n    return new HistEvent(mappedChanges, StateEffect.mapEffects(event.effects, mapping), fullMapping, event.startSelection.map(before), selections);\n}\nconst joinableUserEvent = /^(input\\.type|delete)($|\\.)/;\nclass HistoryState {\n    constructor(done, undone, prevTime = 0, prevUserEvent = undefined) {\n        this.done = done;\n        this.undone = undone;\n        this.prevTime = prevTime;\n        this.prevUserEvent = prevUserEvent;\n    }\n    isolate() {\n        return this.prevTime ? new HistoryState(this.done, this.undone) : this;\n    }\n    addChanges(event, time, userEvent, config, tr) {\n        let done = this.done, lastEvent = done[done.length - 1];\n        if (lastEvent && lastEvent.changes && !lastEvent.changes.empty && event.changes &&\n            (!userEvent || joinableUserEvent.test(userEvent)) &&\n            ((!lastEvent.selectionsAfter.length &&\n                time - this.prevTime < config.newGroupDelay &&\n                config.joinToEvent(tr, isAdjacent(lastEvent.changes, event.changes))) ||\n                // For compose (but not compose.start) events, always join with previous event\n                userEvent == \"input.type.compose\")) {\n            done = updateBranch(done, done.length - 1, config.minDepth, new HistEvent(event.changes.compose(lastEvent.changes), conc(event.effects, lastEvent.effects), lastEvent.mapped, lastEvent.startSelection, none));\n        }\n        else {\n            done = updateBranch(done, done.length, config.minDepth, event);\n        }\n        return new HistoryState(done, none, time, userEvent);\n    }\n    addSelection(selection, time, userEvent, newGroupDelay) {\n        let last = this.done.length ? this.done[this.done.length - 1].selectionsAfter : none;\n        if (last.length > 0 &&\n            time - this.prevTime < newGroupDelay &&\n            userEvent == this.prevUserEvent && userEvent && /^select($|\\.)/.test(userEvent) &&\n            eqSelectionShape(last[last.length - 1], selection))\n            return this;\n        return new HistoryState(addSelection(this.done, selection), this.undone, time, userEvent);\n    }\n    addMapping(mapping) {\n        return new HistoryState(addMappingToBranch(this.done, mapping), addMappingToBranch(this.undone, mapping), this.prevTime, this.prevUserEvent);\n    }\n    pop(side, state, selection) {\n        let branch = side == 0 /* BranchName.Done */ ? this.done : this.undone;\n        if (branch.length == 0)\n            return null;\n        let event = branch[branch.length - 1];\n        if (selection && event.selectionsAfter.length) {\n            return state.update({\n                selection: event.selectionsAfter[event.selectionsAfter.length - 1],\n                annotations: fromHistory.of({ side, rest: popSelection(branch) }),\n                userEvent: side == 0 /* BranchName.Done */ ? \"select.undo\" : \"select.redo\",\n                scrollIntoView: true\n            });\n        }\n        else if (!event.changes) {\n            return null;\n        }\n        else {\n            let rest = branch.length == 1 ? none : branch.slice(0, branch.length - 1);\n            if (event.mapped)\n                rest = addMappingToBranch(rest, event.mapped);\n            return state.update({\n                changes: event.changes,\n                selection: event.startSelection,\n                effects: event.effects,\n                annotations: fromHistory.of({ side, rest }),\n                filter: false,\n                userEvent: side == 0 /* BranchName.Done */ ? \"undo\" : \"redo\",\n                scrollIntoView: true\n            });\n        }\n    }\n}\nHistoryState.empty = /*@__PURE__*/new HistoryState(none, none);\n/**\nDefault key bindings for the undo history.\n\n- Mod-z: [`undo`](https://codemirror.net/6/docs/ref/#commands.undo).\n- Mod-y (Mod-Shift-z on macOS) + Ctrl-Shift-z on Linux: [`redo`](https://codemirror.net/6/docs/ref/#commands.redo).\n- Mod-u: [`undoSelection`](https://codemirror.net/6/docs/ref/#commands.undoSelection).\n- Alt-u (Mod-Shift-u on macOS): [`redoSelection`](https://codemirror.net/6/docs/ref/#commands.redoSelection).\n*/\nconst historyKeymap = [\n    { key: \"Mod-z\", run: undo, preventDefault: true },\n    { key: \"Mod-y\", mac: \"Mod-Shift-z\", run: redo, preventDefault: true },\n    { linux: \"Ctrl-Shift-z\", run: redo, preventDefault: true },\n    { key: \"Mod-u\", run: undoSelection, preventDefault: true },\n    { key: \"Alt-u\", mac: \"Mod-Shift-u\", run: redoSelection, preventDefault: true }\n];\n\nfunction updateSel(sel, by) {\n    return EditorSelection.create(sel.ranges.map(by), sel.mainIndex);\n}\nfunction setSel(state, selection) {\n    return state.update({ selection, scrollIntoView: true, userEvent: \"select\" });\n}\nfunction moveSel({ state, dispatch }, how) {\n    let selection = updateSel(state.selection, how);\n    if (selection.eq(state.selection))\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\nfunction rangeEnd(range, forward) {\n    return EditorSelection.cursor(forward ? range.to : range.from);\n}\nfunction cursorByChar(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByChar(range, forward) : rangeEnd(range, forward));\n}\nfunction ltrAtCursor(view) {\n    return view.textDirectionAt(view.state.selection.main.head) == Direction.LTR;\n}\n/**\nMove the selection one character to the left (which is backward in\nleft-to-right text, forward in right-to-left text).\n*/\nconst cursorCharLeft = view => cursorByChar(view, !ltrAtCursor(view));\n/**\nMove the selection one character to the right.\n*/\nconst cursorCharRight = view => cursorByChar(view, ltrAtCursor(view));\n/**\nMove the selection one character forward.\n*/\nconst cursorCharForward = view => cursorByChar(view, true);\n/**\nMove the selection one character backward.\n*/\nconst cursorCharBackward = view => cursorByChar(view, false);\nfunction cursorByGroup(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByGroup(range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection to the left across one group of word or\nnon-word (but also non-space) characters.\n*/\nconst cursorGroupLeft = view => cursorByGroup(view, !ltrAtCursor(view));\n/**\nMove the selection one group to the right.\n*/\nconst cursorGroupRight = view => cursorByGroup(view, ltrAtCursor(view));\n/**\nMove the selection one group forward.\n*/\nconst cursorGroupForward = view => cursorByGroup(view, true);\n/**\nMove the selection one group backward.\n*/\nconst cursorGroupBackward = view => cursorByGroup(view, false);\nconst segmenter = typeof Intl != \"undefined\" && Intl.Segmenter ?\n    /*@__PURE__*/new (Intl.Segmenter)(undefined, { granularity: \"word\" }) : null;\nfunction moveBySubword(view, range, forward) {\n    let categorize = view.state.charCategorizer(range.from);\n    let cat = CharCategory.Space, pos = range.from, steps = 0;\n    let done = false, sawUpper = false, sawLower = false;\n    let step = (next) => {\n        if (done)\n            return false;\n        pos += forward ? next.length : -next.length;\n        let nextCat = categorize(next), ahead;\n        if (nextCat == CharCategory.Word && next.charCodeAt(0) < 128 && /[\\W_]/.test(next))\n            nextCat = -1; // Treat word punctuation specially\n        if (cat == CharCategory.Space)\n            cat = nextCat;\n        if (cat != nextCat)\n            return false;\n        if (cat == CharCategory.Word) {\n            if (next.toLowerCase() == next) {\n                if (!forward && sawUpper)\n                    return false;\n                sawLower = true;\n            }\n            else if (sawLower) {\n                if (forward)\n                    return false;\n                done = true;\n            }\n            else {\n                if (sawUpper && forward && categorize(ahead = view.state.sliceDoc(pos, pos + 1)) == CharCategory.Word &&\n                    ahead.toLowerCase() == ahead)\n                    return false;\n                sawUpper = true;\n            }\n        }\n        steps++;\n        return true;\n    };\n    let end = view.moveByChar(range, forward, start => {\n        step(start);\n        return step;\n    });\n    if (segmenter && cat == CharCategory.Word && end.from == range.from + steps * (forward ? 1 : -1)) {\n        let from = Math.min(range.head, end.head), to = Math.max(range.head, end.head);\n        let skipped = view.state.sliceDoc(from, to);\n        if (skipped.length > 1 && /[\\u4E00-\\uffff]/.test(skipped)) {\n            let segments = Array.from(segmenter.segment(skipped));\n            if (segments.length > 1) {\n                if (forward)\n                    return EditorSelection.cursor(range.head + segments[1].index, -1);\n                return EditorSelection.cursor(end.head + segments[segments.length - 1].index, 1);\n            }\n        }\n    }\n    return end;\n}\nfunction cursorBySubword(view, forward) {\n    return moveSel(view, range => range.empty ? moveBySubword(view, range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection one group or camel-case subword forward.\n*/\nconst cursorSubwordForward = view => cursorBySubword(view, true);\n/**\nMove the selection one group or camel-case subword backward.\n*/\nconst cursorSubwordBackward = view => cursorBySubword(view, false);\nfunction interestingNode(state, node, bracketProp) {\n    if (node.type.prop(bracketProp))\n        return true;\n    let len = node.to - node.from;\n    return len && (len > 2 || /[^\\s,.;:]/.test(state.sliceDoc(node.from, node.to))) || node.firstChild;\n}\nfunction moveBySyntax(state, start, forward) {\n    let pos = syntaxTree(state).resolveInner(start.head);\n    let bracketProp = forward ? NodeProp.closedBy : NodeProp.openedBy;\n    // Scan forward through child nodes to see if there's an interesting\n    // node ahead.\n    for (let at = start.head;;) {\n        let next = forward ? pos.childAfter(at) : pos.childBefore(at);\n        if (!next)\n            break;\n        if (interestingNode(state, next, bracketProp))\n            pos = next;\n        else\n            at = forward ? next.to : next.from;\n    }\n    let bracket = pos.type.prop(bracketProp), match, newPos;\n    if (bracket && (match = forward ? matchBrackets(state, pos.from, 1) : matchBrackets(state, pos.to, -1)) && match.matched)\n        newPos = forward ? match.end.to : match.end.from;\n    else\n        newPos = forward ? pos.to : pos.from;\n    return EditorSelection.cursor(newPos, forward ? -1 : 1);\n}\n/**\nMove the cursor over the next syntactic element to the left.\n*/\nconst cursorSyntaxLeft = view => moveSel(view, range => moveBySyntax(view.state, range, !ltrAtCursor(view)));\n/**\nMove the cursor over the next syntactic element to the right.\n*/\nconst cursorSyntaxRight = view => moveSel(view, range => moveBySyntax(view.state, range, ltrAtCursor(view)));\nfunction cursorByLine(view, forward) {\n    return moveSel(view, range => {\n        if (!range.empty)\n            return rangeEnd(range, forward);\n        let moved = view.moveVertically(range, forward);\n        return moved.head != range.head ? moved : view.moveToLineBoundary(range, forward);\n    });\n}\n/**\nMove the selection one line up.\n*/\nconst cursorLineUp = view => cursorByLine(view, false);\n/**\nMove the selection one line down.\n*/\nconst cursorLineDown = view => cursorByLine(view, true);\nfunction pageInfo(view) {\n    let selfScroll = view.scrollDOM.clientHeight < view.scrollDOM.scrollHeight - 2;\n    let marginTop = 0, marginBottom = 0, height;\n    if (selfScroll) {\n        for (let source of view.state.facet(EditorView.scrollMargins)) {\n            let margins = source(view);\n            if (margins === null || margins === void 0 ? void 0 : margins.top)\n                marginTop = Math.max(margins === null || margins === void 0 ? void 0 : margins.top, marginTop);\n            if (margins === null || margins === void 0 ? void 0 : margins.bottom)\n                marginBottom = Math.max(margins === null || margins === void 0 ? void 0 : margins.bottom, marginBottom);\n        }\n        height = view.scrollDOM.clientHeight - marginTop - marginBottom;\n    }\n    else {\n        height = (view.dom.ownerDocument.defaultView || window).innerHeight;\n    }\n    return { marginTop, marginBottom, selfScroll,\n        height: Math.max(view.defaultLineHeight, height - 5) };\n}\nfunction cursorByPage(view, forward) {\n    let page = pageInfo(view);\n    let { state } = view, selection = updateSel(state.selection, range => {\n        return range.empty ? view.moveVertically(range, forward, page.height)\n            : rangeEnd(range, forward);\n    });\n    if (selection.eq(state.selection))\n        return false;\n    let effect;\n    if (page.selfScroll) {\n        let startPos = view.coordsAtPos(state.selection.main.head);\n        let scrollRect = view.scrollDOM.getBoundingClientRect();\n        let scrollTop = scrollRect.top + page.marginTop, scrollBottom = scrollRect.bottom - page.marginBottom;\n        if (startPos && startPos.top > scrollTop && startPos.bottom < scrollBottom)\n            effect = EditorView.scrollIntoView(selection.main.head, { y: \"start\", yMargin: startPos.top - scrollTop });\n    }\n    view.dispatch(setSel(state, selection), { effects: effect });\n    return true;\n}\n/**\nMove the selection one page up.\n*/\nconst cursorPageUp = view => cursorByPage(view, false);\n/**\nMove the selection one page down.\n*/\nconst cursorPageDown = view => cursorByPage(view, true);\nfunction moveByLineBoundary(view, start, forward) {\n    let line = view.lineBlockAt(start.head), moved = view.moveToLineBoundary(start, forward);\n    if (moved.head == start.head && moved.head != (forward ? line.to : line.from))\n        moved = view.moveToLineBoundary(start, forward, false);\n    if (!forward && moved.head == line.from && line.length) {\n        let space = /^\\s*/.exec(view.state.sliceDoc(line.from, Math.min(line.from + 100, line.to)))[0].length;\n        if (space && start.head != line.from + space)\n            moved = EditorSelection.cursor(line.from + space);\n    }\n    return moved;\n}\n/**\nMove the selection to the next line wrap point, or to the end of\nthe line if there isn't one left on this line.\n*/\nconst cursorLineBoundaryForward = view => moveSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection to previous line wrap point, or failing that to\nthe start of the line. If the line is indented, and the cursor\nisn't already at the end of the indentation, this will move to the\nend of the indentation instead of the start of the line.\n*/\nconst cursorLineBoundaryBackward = view => moveSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection one line wrap point to the left.\n*/\nconst cursorLineBoundaryLeft = view => moveSel(view, range => moveByLineBoundary(view, range, !ltrAtCursor(view)));\n/**\nMove the selection one line wrap point to the right.\n*/\nconst cursorLineBoundaryRight = view => moveSel(view, range => moveByLineBoundary(view, range, ltrAtCursor(view)));\n/**\nMove the selection to the start of the line.\n*/\nconst cursorLineStart = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from, 1));\n/**\nMove the selection to the end of the line.\n*/\nconst cursorLineEnd = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to, -1));\nfunction toMatchingBracket(state, dispatch, extend) {\n    let found = false, selection = updateSel(state.selection, range => {\n        let matching = matchBrackets(state, range.head, -1)\n            || matchBrackets(state, range.head, 1)\n            || (range.head > 0 && matchBrackets(state, range.head - 1, 1))\n            || (range.head < state.doc.length && matchBrackets(state, range.head + 1, -1));\n        if (!matching || !matching.end)\n            return range;\n        found = true;\n        let head = matching.start.from == range.head ? matching.end.to : matching.end.from;\n        return extend ? EditorSelection.range(range.anchor, head) : EditorSelection.cursor(head);\n    });\n    if (!found)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\n/**\nMove the selection to the bracket matching the one it is currently\non, if any.\n*/\nconst cursorMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, false);\n/**\nExtend the selection to the bracket matching the one the selection\nhead is currently on, if any.\n*/\nconst selectMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, true);\nfunction extendSel(view, how) {\n    let selection = updateSel(view.state.selection, range => {\n        let head = how(range);\n        return EditorSelection.range(range.anchor, head.head, head.goalColumn, head.bidiLevel || undefined);\n    });\n    if (selection.eq(view.state.selection))\n        return false;\n    view.dispatch(setSel(view.state, selection));\n    return true;\n}\nfunction selectByChar(view, forward) {\n    return extendSel(view, range => view.moveByChar(range, forward));\n}\n/**\nMove the selection head one character to the left, while leaving\nthe anchor in place.\n*/\nconst selectCharLeft = view => selectByChar(view, !ltrAtCursor(view));\n/**\nMove the selection head one character to the right.\n*/\nconst selectCharRight = view => selectByChar(view, ltrAtCursor(view));\n/**\nMove the selection head one character forward.\n*/\nconst selectCharForward = view => selectByChar(view, true);\n/**\nMove the selection head one character backward.\n*/\nconst selectCharBackward = view => selectByChar(view, false);\nfunction selectByGroup(view, forward) {\n    return extendSel(view, range => view.moveByGroup(range, forward));\n}\n/**\nMove the selection head one [group](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) to\nthe left.\n*/\nconst selectGroupLeft = view => selectByGroup(view, !ltrAtCursor(view));\n/**\nMove the selection head one group to the right.\n*/\nconst selectGroupRight = view => selectByGroup(view, ltrAtCursor(view));\n/**\nMove the selection head one group forward.\n*/\nconst selectGroupForward = view => selectByGroup(view, true);\n/**\nMove the selection head one group backward.\n*/\nconst selectGroupBackward = view => selectByGroup(view, false);\nfunction selectBySubword(view, forward) {\n    return extendSel(view, range => moveBySubword(view, range, forward));\n}\n/**\nMove the selection head one group or camel-case subword forward.\n*/\nconst selectSubwordForward = view => selectBySubword(view, true);\n/**\nMove the selection head one group or subword backward.\n*/\nconst selectSubwordBackward = view => selectBySubword(view, false);\n/**\nMove the selection head over the next syntactic element to the left.\n*/\nconst selectSyntaxLeft = view => extendSel(view, range => moveBySyntax(view.state, range, !ltrAtCursor(view)));\n/**\nMove the selection head over the next syntactic element to the right.\n*/\nconst selectSyntaxRight = view => extendSel(view, range => moveBySyntax(view.state, range, ltrAtCursor(view)));\nfunction selectByLine(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward));\n}\n/**\nMove the selection head one line up.\n*/\nconst selectLineUp = view => selectByLine(view, false);\n/**\nMove the selection head one line down.\n*/\nconst selectLineDown = view => selectByLine(view, true);\nfunction selectByPage(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward, pageInfo(view).height));\n}\n/**\nMove the selection head one page up.\n*/\nconst selectPageUp = view => selectByPage(view, false);\n/**\nMove the selection head one page down.\n*/\nconst selectPageDown = view => selectByPage(view, true);\n/**\nMove the selection head to the next line boundary.\n*/\nconst selectLineBoundaryForward = view => extendSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection head to the previous line boundary.\n*/\nconst selectLineBoundaryBackward = view => extendSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection head one line boundary to the left.\n*/\nconst selectLineBoundaryLeft = view => extendSel(view, range => moveByLineBoundary(view, range, !ltrAtCursor(view)));\n/**\nMove the selection head one line boundary to the right.\n*/\nconst selectLineBoundaryRight = view => extendSel(view, range => moveByLineBoundary(view, range, ltrAtCursor(view)));\n/**\nMove the selection head to the start of the line.\n*/\nconst selectLineStart = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from));\n/**\nMove the selection head to the end of the line.\n*/\nconst selectLineEnd = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to));\n/**\nMove the selection to the start of the document.\n*/\nconst cursorDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: 0 }));\n    return true;\n};\n/**\nMove the selection to the end of the document.\n*/\nconst cursorDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.doc.length }));\n    return true;\n};\n/**\nMove the selection head to the start of the document.\n*/\nconst selectDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: 0 }));\n    return true;\n};\n/**\nMove the selection head to the end of the document.\n*/\nconst selectDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: state.doc.length }));\n    return true;\n};\n/**\nSelect the entire document.\n*/\nconst selectAll = ({ state, dispatch }) => {\n    dispatch(state.update({ selection: { anchor: 0, head: state.doc.length }, userEvent: \"select\" }));\n    return true;\n};\n/**\nExpand the selection to cover entire lines.\n*/\nconst selectLine = ({ state, dispatch }) => {\n    let ranges = selectedLineBlocks(state).map(({ from, to }) => EditorSelection.range(from, Math.min(to + 1, state.doc.length)));\n    dispatch(state.update({ selection: EditorSelection.create(ranges), userEvent: \"select\" }));\n    return true;\n};\n/**\nSelect the next syntactic construct that is larger than the\nselection. Note that this will only work insofar as the language\n[provider](https://codemirror.net/6/docs/ref/#language.language) you use builds up a full\nsyntax tree.\n*/\nconst selectParentSyntax = ({ state, dispatch }) => {\n    let selection = updateSel(state.selection, range => {\n        var _a;\n        let context = syntaxTree(state).resolveInner(range.head, 1);\n        while (!((context.from < range.from && context.to >= range.to) ||\n            (context.to > range.to && context.from <= range.from) ||\n            !((_a = context.parent) === null || _a === void 0 ? void 0 : _a.parent)))\n            context = context.parent;\n        return EditorSelection.range(context.to, context.from);\n    });\n    dispatch(setSel(state, selection));\n    return true;\n};\n/**\nSimplify the current selection. When multiple ranges are selected,\nreduce it to its main range. Otherwise, if the selection is\nnon-empty, convert it to a cursor selection.\n*/\nconst simplifySelection = ({ state, dispatch }) => {\n    let cur = state.selection, selection = null;\n    if (cur.ranges.length > 1)\n        selection = EditorSelection.create([cur.main]);\n    else if (!cur.main.empty)\n        selection = EditorSelection.create([EditorSelection.cursor(cur.main.head)]);\n    if (!selection)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n};\nfunction deleteBy(target, by) {\n    if (target.state.readOnly)\n        return false;\n    let event = \"delete.selection\", { state } = target;\n    let changes = state.changeByRange(range => {\n        let { from, to } = range;\n        if (from == to) {\n            let towards = by(from);\n            if (towards < from) {\n                event = \"delete.backward\";\n                towards = skipAtomic(target, towards, false);\n            }\n            else if (towards > from) {\n                event = \"delete.forward\";\n                towards = skipAtomic(target, towards, true);\n            }\n            from = Math.min(from, towards);\n            to = Math.max(to, towards);\n        }\n        else {\n            from = skipAtomic(target, from, false);\n            to = skipAtomic(target, to, true);\n        }\n        return from == to ? { range } : { changes: { from, to }, range: EditorSelection.cursor(from) };\n    });\n    if (changes.changes.empty)\n        return false;\n    target.dispatch(state.update(changes, {\n        scrollIntoView: true,\n        userEvent: event,\n        effects: event == \"delete.selection\" ? EditorView.announce.of(state.phrase(\"Selection deleted\")) : undefined\n    }));\n    return true;\n}\nfunction skipAtomic(target, pos, forward) {\n    if (target instanceof EditorView)\n        for (let ranges of target.state.facet(EditorView.atomicRanges).map(f => f(target)))\n            ranges.between(pos, pos, (from, to) => {\n                if (from < pos && to > pos)\n                    pos = forward ? to : from;\n            });\n    return pos;\n}\nconst deleteByChar = (target, forward) => deleteBy(target, pos => {\n    let { state } = target, line = state.doc.lineAt(pos), before, targetPos;\n    if (!forward && pos > line.from && pos < line.from + 200 &&\n        !/[^ \\t]/.test(before = line.text.slice(0, pos - line.from))) {\n        if (before[before.length - 1] == \"\\t\")\n            return pos - 1;\n        let col = countColumn(before, state.tabSize), drop = col % getIndentUnit(state) || getIndentUnit(state);\n        for (let i = 0; i < drop && before[before.length - 1 - i] == \" \"; i++)\n            pos--;\n        targetPos = pos;\n    }\n    else {\n        targetPos = findClusterBreak(line.text, pos - line.from, forward, forward) + line.from;\n        if (targetPos == pos && line.number != (forward ? state.doc.lines : 1))\n            targetPos += forward ? 1 : -1;\n    }\n    return targetPos;\n});\n/**\nDelete the selection, or, for cursor selections, the character\nbefore the cursor.\n*/\nconst deleteCharBackward = view => deleteByChar(view, false);\n/**\nDelete the selection or the character after the cursor.\n*/\nconst deleteCharForward = view => deleteByChar(view, true);\nconst deleteByGroup = (target, forward) => deleteBy(target, start => {\n    let pos = start, { state } = target, line = state.doc.lineAt(pos);\n    let categorize = state.charCategorizer(pos);\n    for (let cat = null;;) {\n        if (pos == (forward ? line.to : line.from)) {\n            if (pos == start && line.number != (forward ? state.doc.lines : 1))\n                pos += forward ? 1 : -1;\n            break;\n        }\n        let next = findClusterBreak(line.text, pos - line.from, forward) + line.from;\n        let nextChar = line.text.slice(Math.min(pos, next) - line.from, Math.max(pos, next) - line.from);\n        let nextCat = categorize(nextChar);\n        if (cat != null && nextCat != cat)\n            break;\n        if (nextChar != \" \" || pos != start)\n            cat = nextCat;\n        pos = next;\n    }\n    return pos;\n});\n/**\nDelete the selection or backward until the end of the next\n[group](https://codemirror.net/6/docs/ref/#view.EditorView.moveByGroup), only skipping groups of\nwhitespace when they consist of a single space.\n*/\nconst deleteGroupBackward = target => deleteByGroup(target, false);\n/**\nDelete the selection or forward until the end of the next group.\n*/\nconst deleteGroupForward = target => deleteByGroup(target, true);\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe end of the line. If the cursor is directly at the end of the\nline, delete the line break after it.\n*/\nconst deleteToLineEnd = view => deleteBy(view, pos => {\n    let lineEnd = view.lineBlockAt(pos).to;\n    return pos < lineEnd ? lineEnd : Math.min(view.state.doc.length, pos + 1);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe start of the line. If the cursor is directly at the start of the\nline, delete the line break before it.\n*/\nconst deleteToLineStart = view => deleteBy(view, pos => {\n    let lineStart = view.lineBlockAt(pos).from;\n    return pos > lineStart ? lineStart : Math.max(0, pos - 1);\n});\n/**\nDelete all whitespace directly before a line end from the\ndocument.\n*/\nconst deleteTrailingWhitespace = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let pos = 0, prev = \"\", iter = state.doc.iter();;) {\n        iter.next();\n        if (iter.lineBreak || iter.done) {\n            let trailing = prev.search(/\\s+$/);\n            if (trailing > -1)\n                changes.push({ from: pos - (prev.length - trailing), to: pos });\n            if (iter.done)\n                break;\n            prev = \"\";\n        }\n        else {\n            prev = iter.value;\n        }\n        pos += iter.value.length;\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({ changes, userEvent: \"delete\" }));\n    return true;\n};\n/**\nReplace each selection range with a line break, leaving the cursor\non the line before the break.\n*/\nconst splitLine = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        return { changes: { from: range.from, to: range.to, insert: Text.of([\"\", \"\"]) },\n            range: EditorSelection.cursor(range.from) };\n    });\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nFlip the characters before and after the cursor(s).\n*/\nconst transposeChars = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        if (!range.empty || range.from == 0 || range.from == state.doc.length)\n            return { range };\n        let pos = range.from, line = state.doc.lineAt(pos);\n        let from = pos == line.from ? pos - 1 : findClusterBreak(line.text, pos - line.from, false) + line.from;\n        let to = pos == line.to ? pos + 1 : findClusterBreak(line.text, pos - line.from, true) + line.from;\n        return { changes: { from, to, insert: state.doc.slice(pos, to).append(state.doc.slice(from, pos)) },\n            range: EditorSelection.cursor(to) };\n    });\n    if (changes.changes.empty)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"move.character\" }));\n    return true;\n};\nfunction selectedLineBlocks(state) {\n    let blocks = [], upto = -1;\n    for (let range of state.selection.ranges) {\n        let startLine = state.doc.lineAt(range.from), endLine = state.doc.lineAt(range.to);\n        if (!range.empty && range.to == endLine.from)\n            endLine = state.doc.lineAt(range.to - 1);\n        if (upto >= startLine.number) {\n            let prev = blocks[blocks.length - 1];\n            prev.to = endLine.to;\n            prev.ranges.push(range);\n        }\n        else {\n            blocks.push({ from: startLine.from, to: endLine.to, ranges: [range] });\n        }\n        upto = endLine.number + 1;\n    }\n    return blocks;\n}\nfunction moveLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [], ranges = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward ? block.to == state.doc.length : block.from == 0)\n            continue;\n        let nextLine = state.doc.lineAt(forward ? block.to + 1 : block.from - 1);\n        let size = nextLine.length + 1;\n        if (forward) {\n            changes.push({ from: block.to, to: nextLine.to }, { from: block.from, insert: nextLine.text + state.lineBreak });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(Math.min(state.doc.length, r.anchor + size), Math.min(state.doc.length, r.head + size)));\n        }\n        else {\n            changes.push({ from: nextLine.from, to: block.from }, { from: block.to, insert: state.lineBreak + nextLine.text });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(r.anchor - size, r.head - size));\n        }\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({\n        changes,\n        scrollIntoView: true,\n        selection: EditorSelection.create(ranges, state.selection.mainIndex),\n        userEvent: \"move.line\"\n    }));\n    return true;\n}\n/**\nMove the selected lines up one line.\n*/\nconst moveLineUp = ({ state, dispatch }) => moveLine(state, dispatch, false);\n/**\nMove the selected lines down one line.\n*/\nconst moveLineDown = ({ state, dispatch }) => moveLine(state, dispatch, true);\nfunction copyLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward)\n            changes.push({ from: block.from, insert: state.doc.slice(block.from, block.to) + state.lineBreak });\n        else\n            changes.push({ from: block.to, insert: state.lineBreak + state.doc.slice(block.from, block.to) });\n    }\n    dispatch(state.update({ changes, scrollIntoView: true, userEvent: \"input.copyline\" }));\n    return true;\n}\n/**\nCreate a copy of the selected lines. Keep the selection in the top copy.\n*/\nconst copyLineUp = ({ state, dispatch }) => copyLine(state, dispatch, false);\n/**\nCreate a copy of the selected lines. Keep the selection in the bottom copy.\n*/\nconst copyLineDown = ({ state, dispatch }) => copyLine(state, dispatch, true);\n/**\nDelete selected lines.\n*/\nconst deleteLine = view => {\n    if (view.state.readOnly)\n        return false;\n    let { state } = view, changes = state.changes(selectedLineBlocks(state).map(({ from, to }) => {\n        if (from > 0)\n            from--;\n        else if (to < state.doc.length)\n            to++;\n        return { from, to };\n    }));\n    let selection = updateSel(state.selection, range => view.moveVertically(range, true)).map(changes);\n    view.dispatch({ changes, selection, scrollIntoView: true, userEvent: \"delete.line\" });\n    return true;\n};\n/**\nReplace the selection with a newline.\n*/\nconst insertNewline = ({ state, dispatch }) => {\n    dispatch(state.update(state.replaceSelection(state.lineBreak), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\nfunction isBetweenBrackets(state, pos) {\n    if (/\\(\\)|\\[\\]|\\{\\}/.test(state.sliceDoc(pos - 1, pos + 1)))\n        return { from: pos, to: pos };\n    let context = syntaxTree(state).resolveInner(pos);\n    let before = context.childBefore(pos), after = context.childAfter(pos), closedBy;\n    if (before && after && before.to <= pos && after.from >= pos &&\n        (closedBy = before.type.prop(NodeProp.closedBy)) && closedBy.indexOf(after.name) > -1 &&\n        state.doc.lineAt(before.to).from == state.doc.lineAt(after.from).from &&\n        !/\\S/.test(state.sliceDoc(before.to, after.from)))\n        return { from: before.to, to: after.from };\n    return null;\n}\n/**\nReplace the selection with a newline and indent the newly created\nline(s). If the current line consists only of whitespace, this\nwill also delete that whitespace. When the cursor is between\nmatching brackets, an additional newline will be inserted after\nthe cursor.\n*/\nconst insertNewlineAndIndent = /*@__PURE__*/newlineAndIndent(false);\n/**\nCreate a blank, indented line below the current line.\n*/\nconst insertBlankLine = /*@__PURE__*/newlineAndIndent(true);\nfunction newlineAndIndent(atEof) {\n    return ({ state, dispatch }) => {\n        if (state.readOnly)\n            return false;\n        let changes = state.changeByRange(range => {\n            let { from, to } = range, line = state.doc.lineAt(from);\n            let explode = !atEof && from == to && isBetweenBrackets(state, from);\n            if (atEof)\n                from = to = (to <= line.to ? line : state.doc.lineAt(to)).to;\n            let cx = new IndentContext(state, { simulateBreak: from, simulateDoubleBreak: !!explode });\n            let indent = getIndentation(cx, from);\n            if (indent == null)\n                indent = countColumn(/^\\s*/.exec(state.doc.lineAt(from).text)[0], state.tabSize);\n            while (to < line.to && /\\s/.test(line.text[to - line.from]))\n                to++;\n            if (explode)\n                ({ from, to } = explode);\n            else if (from > line.from && from < line.from + 100 && !/\\S/.test(line.text.slice(0, from)))\n                from = line.from;\n            let insert = [\"\", indentString(state, indent)];\n            if (explode)\n                insert.push(indentString(state, cx.lineIndent(line.from, -1)));\n            return { changes: { from, to, insert: Text.of(insert) },\n                range: EditorSelection.cursor(from + 1 + insert[1].length) };\n        });\n        dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n        return true;\n    };\n}\nfunction changeBySelectedLine(state, f) {\n    let atLine = -1;\n    return state.changeByRange(range => {\n        let changes = [];\n        for (let pos = range.from; pos <= range.to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.number > atLine && (range.empty || range.to > line.from)) {\n                f(line, changes, range);\n                atLine = line.number;\n            }\n            pos = line.to + 1;\n        }\n        let changeSet = state.changes(changes);\n        return { changes,\n            range: EditorSelection.range(changeSet.mapPos(range.anchor, 1), changeSet.mapPos(range.head, 1)) };\n    });\n}\n/**\nAuto-indent the selected lines. This uses the [indentation service\nfacet](https://codemirror.net/6/docs/ref/#language.indentService) as source for auto-indent\ninformation.\n*/\nconst indentSelection = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let updated = Object.create(null);\n    let context = new IndentContext(state, { overrideIndentation: start => {\n            let found = updated[start];\n            return found == null ? -1 : found;\n        } });\n    let changes = changeBySelectedLine(state, (line, changes, range) => {\n        let indent = getIndentation(context, line.from);\n        if (indent == null)\n            return;\n        if (!/\\S/.test(line.text))\n            indent = 0;\n        let cur = /^\\s*/.exec(line.text)[0];\n        let norm = indentString(state, indent);\n        if (cur != norm || range.from < line.from + cur.length) {\n            updated[line.from] = indent;\n            changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n    });\n    if (!changes.changes.empty)\n        dispatch(state.update(changes, { userEvent: \"indent\" }));\n    return true;\n};\n/**\nAdd a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation to all selected\nlines.\n*/\nconst indentMore = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        changes.push({ from: line.from, insert: state.facet(indentUnit) });\n    }), { userEvent: \"input.indent\" }));\n    return true;\n};\n/**\nRemove a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation from all\nselected lines.\n*/\nconst indentLess = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        let space = /^\\s*/.exec(line.text)[0];\n        if (!space)\n            return;\n        let col = countColumn(space, state.tabSize), keep = 0;\n        let insert = indentString(state, Math.max(0, col - getIndentUnit(state)));\n        while (keep < space.length && keep < insert.length && space.charCodeAt(keep) == insert.charCodeAt(keep))\n            keep++;\n        changes.push({ from: line.from + keep, to: line.from + space.length, insert: insert.slice(keep) });\n    }), { userEvent: \"delete.dedent\" }));\n    return true;\n};\n/**\nInsert a tab character at the cursor or, if something is selected,\nuse [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) to indent the entire\nselection.\n*/\nconst insertTab = ({ state, dispatch }) => {\n    if (state.selection.ranges.some(r => !r.empty))\n        return indentMore({ state, dispatch });\n    dispatch(state.update(state.replaceSelection(\"\\t\"), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nArray of key bindings containing the Emacs-style bindings that are\navailable on macOS by default.\n\n - Ctrl-b: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - Ctrl-f: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-p: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - Ctrl-n: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Ctrl-a: [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Ctrl-e: [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - Ctrl-d: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-h: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Ctrl-k: [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd)\n - Ctrl-Alt-h: [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-o: [`splitLine`](https://codemirror.net/6/docs/ref/#commands.splitLine)\n - Ctrl-t: [`transposeChars`](https://codemirror.net/6/docs/ref/#commands.transposeChars)\n - Ctrl-v: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown)\n - Alt-v: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp)\n*/\nconst emacsStyleKeymap = [\n    { key: \"Ctrl-b\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Ctrl-f\", run: cursorCharRight, shift: selectCharRight },\n    { key: \"Ctrl-p\", run: cursorLineUp, shift: selectLineUp },\n    { key: \"Ctrl-n\", run: cursorLineDown, shift: selectLineDown },\n    { key: \"Ctrl-a\", run: cursorLineStart, shift: selectLineStart },\n    { key: \"Ctrl-e\", run: cursorLineEnd, shift: selectLineEnd },\n    { key: \"Ctrl-d\", run: deleteCharForward },\n    { key: \"Ctrl-h\", run: deleteCharBackward },\n    { key: \"Ctrl-k\", run: deleteToLineEnd },\n    { key: \"Ctrl-Alt-h\", run: deleteGroupBackward },\n    { key: \"Ctrl-o\", run: splitLine },\n    { key: \"Ctrl-t\", run: transposeChars },\n    { key: \"Ctrl-v\", run: cursorPageDown },\n];\n/**\nAn array of key bindings closely sticking to platform-standard or\nwidely used bindings. (This includes the bindings from\n[`emacsStyleKeymap`](https://codemirror.net/6/docs/ref/#commands.emacsStyleKeymap), with their `key`\nproperty changed to `mac`.)\n\n - ArrowLeft: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - ArrowRight: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-ArrowLeft (Alt-ArrowLeft on macOS): [`cursorGroupLeft`](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) ([`selectGroupLeft`](https://codemirror.net/6/docs/ref/#commands.selectGroupLeft) with Shift)\n - Ctrl-ArrowRight (Alt-ArrowRight on macOS): [`cursorGroupRight`](https://codemirror.net/6/docs/ref/#commands.cursorGroupRight) ([`selectGroupRight`](https://codemirror.net/6/docs/ref/#commands.selectGroupRight) with Shift)\n - Cmd-ArrowLeft (on macOS): [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Cmd-ArrowRight (on macOS): [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - ArrowUp: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - ArrowDown: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Cmd-ArrowUp (on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Cmd-ArrowDown (on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Ctrl-ArrowUp (on macOS): [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - Ctrl-ArrowDown (on macOS): [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - PageUp: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - PageDown: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - Home: [`cursorLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryBackward) ([`selectLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryBackward) with Shift)\n - End: [`cursorLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryForward) ([`selectLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryForward) with Shift)\n - Ctrl-Home (Cmd-Home on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Ctrl-End (Cmd-Home on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Enter: [`insertNewlineAndIndent`](https://codemirror.net/6/docs/ref/#commands.insertNewlineAndIndent)\n - Ctrl-a (Cmd-a on macOS): [`selectAll`](https://codemirror.net/6/docs/ref/#commands.selectAll)\n - Backspace: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Delete: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-Backspace (Alt-Backspace on macOS): [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-Delete (Alt-Delete on macOS): [`deleteGroupForward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupForward)\n - Cmd-Backspace (macOS): [`deleteToLineStart`](https://codemirror.net/6/docs/ref/#commands.deleteToLineStart).\n - Cmd-Delete (macOS): [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd).\n*/\nconst standardKeymap = /*@__PURE__*/[\n    { key: \"ArrowLeft\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Mod-ArrowLeft\", mac: \"Alt-ArrowLeft\", run: cursorGroupLeft, shift: selectGroupLeft, preventDefault: true },\n    { mac: \"Cmd-ArrowLeft\", run: cursorLineBoundaryLeft, shift: selectLineBoundaryLeft, preventDefault: true },\n    { key: \"ArrowRight\", run: cursorCharRight, shift: selectCharRight, preventDefault: true },\n    { key: \"Mod-ArrowRight\", mac: \"Alt-ArrowRight\", run: cursorGroupRight, shift: selectGroupRight, preventDefault: true },\n    { mac: \"Cmd-ArrowRight\", run: cursorLineBoundaryRight, shift: selectLineBoundaryRight, preventDefault: true },\n    { key: \"ArrowUp\", run: cursorLineUp, shift: selectLineUp, preventDefault: true },\n    { mac: \"Cmd-ArrowUp\", run: cursorDocStart, shift: selectDocStart },\n    { mac: \"Ctrl-ArrowUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"ArrowDown\", run: cursorLineDown, shift: selectLineDown, preventDefault: true },\n    { mac: \"Cmd-ArrowDown\", run: cursorDocEnd, shift: selectDocEnd },\n    { mac: \"Ctrl-ArrowDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"PageUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"PageDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"Home\", run: cursorLineBoundaryBackward, shift: selectLineBoundaryBackward, preventDefault: true },\n    { key: \"Mod-Home\", run: cursorDocStart, shift: selectDocStart },\n    { key: \"End\", run: cursorLineBoundaryForward, shift: selectLineBoundaryForward, preventDefault: true },\n    { key: \"Mod-End\", run: cursorDocEnd, shift: selectDocEnd },\n    { key: \"Enter\", run: insertNewlineAndIndent },\n    { key: \"Mod-a\", run: selectAll },\n    { key: \"Backspace\", run: deleteCharBackward, shift: deleteCharBackward },\n    { key: \"Delete\", run: deleteCharForward },\n    { key: \"Mod-Backspace\", mac: \"Alt-Backspace\", run: deleteGroupBackward },\n    { key: \"Mod-Delete\", mac: \"Alt-Delete\", run: deleteGroupForward },\n    { mac: \"Mod-Backspace\", run: deleteToLineStart },\n    { mac: \"Mod-Delete\", run: deleteToLineEnd }\n].concat(/*@__PURE__*/emacsStyleKeymap.map(b => ({ mac: b.key, run: b.run, shift: b.shift })));\n/**\nThe default keymap. Includes all bindings from\n[`standardKeymap`](https://codemirror.net/6/docs/ref/#commands.standardKeymap) plus the following:\n\n- Alt-ArrowLeft (Ctrl-ArrowLeft on macOS): [`cursorSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxLeft) ([`selectSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxLeft) with Shift)\n- Alt-ArrowRight (Ctrl-ArrowRight on macOS): [`cursorSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxRight) ([`selectSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxRight) with Shift)\n- Alt-ArrowUp: [`moveLineUp`](https://codemirror.net/6/docs/ref/#commands.moveLineUp)\n- Alt-ArrowDown: [`moveLineDown`](https://codemirror.net/6/docs/ref/#commands.moveLineDown)\n- Shift-Alt-ArrowUp: [`copyLineUp`](https://codemirror.net/6/docs/ref/#commands.copyLineUp)\n- Shift-Alt-ArrowDown: [`copyLineDown`](https://codemirror.net/6/docs/ref/#commands.copyLineDown)\n- Escape: [`simplifySelection`](https://codemirror.net/6/docs/ref/#commands.simplifySelection)\n- Ctrl-Enter (Cmd-Enter on macOS): [`insertBlankLine`](https://codemirror.net/6/docs/ref/#commands.insertBlankLine)\n- Alt-l (Ctrl-l on macOS): [`selectLine`](https://codemirror.net/6/docs/ref/#commands.selectLine)\n- Ctrl-i (Cmd-i on macOS): [`selectParentSyntax`](https://codemirror.net/6/docs/ref/#commands.selectParentSyntax)\n- Ctrl-[ (Cmd-[ on macOS): [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess)\n- Ctrl-] (Cmd-] on macOS): [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore)\n- Ctrl-Alt-\\\\ (Cmd-Alt-\\\\ on macOS): [`indentSelection`](https://codemirror.net/6/docs/ref/#commands.indentSelection)\n- Shift-Ctrl-k (Shift-Cmd-k on macOS): [`deleteLine`](https://codemirror.net/6/docs/ref/#commands.deleteLine)\n- Shift-Ctrl-\\\\ (Shift-Cmd-\\\\ on macOS): [`cursorMatchingBracket`](https://codemirror.net/6/docs/ref/#commands.cursorMatchingBracket)\n- Ctrl-/ (Cmd-/ on macOS): [`toggleComment`](https://codemirror.net/6/docs/ref/#commands.toggleComment).\n- Shift-Alt-a: [`toggleBlockComment`](https://codemirror.net/6/docs/ref/#commands.toggleBlockComment).\n*/\nconst defaultKeymap = /*@__PURE__*/[\n    { key: \"Alt-ArrowLeft\", mac: \"Ctrl-ArrowLeft\", run: cursorSyntaxLeft, shift: selectSyntaxLeft },\n    { key: \"Alt-ArrowRight\", mac: \"Ctrl-ArrowRight\", run: cursorSyntaxRight, shift: selectSyntaxRight },\n    { key: \"Alt-ArrowUp\", run: moveLineUp },\n    { key: \"Shift-Alt-ArrowUp\", run: copyLineUp },\n    { key: \"Alt-ArrowDown\", run: moveLineDown },\n    { key: \"Shift-Alt-ArrowDown\", run: copyLineDown },\n    { key: \"Escape\", run: simplifySelection },\n    { key: \"Mod-Enter\", run: insertBlankLine },\n    { key: \"Alt-l\", mac: \"Ctrl-l\", run: selectLine },\n    { key: \"Mod-i\", run: selectParentSyntax, preventDefault: true },\n    { key: \"Mod-[\", run: indentLess },\n    { key: \"Mod-]\", run: indentMore },\n    { key: \"Mod-Alt-\\\\\", run: indentSelection },\n    { key: \"Shift-Mod-k\", run: deleteLine },\n    { key: \"Shift-Mod-\\\\\", run: cursorMatchingBracket },\n    { key: \"Mod-/\", run: toggleComment },\n    { key: \"Alt-A\", run: toggleBlockComment }\n].concat(standardKeymap);\n/**\nA binding that binds Tab to [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) and\nShift-Tab to [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess).\nPlease see the [Tab example](../../examples/tab/) before using\nthis.\n*/\nconst indentWithTab = { key: \"Tab\", run: indentMore, shift: indentLess };\n\nexport { blockComment, blockUncomment, copyLineDown, copyLineUp, cursorCharBackward, cursorCharForward, cursorCharLeft, cursorCharRight, cursorDocEnd, cursorDocStart, cursorGroupBackward, cursorGroupForward, cursorGroupLeft, cursorGroupRight, cursorLineBoundaryBackward, cursorLineBoundaryForward, cursorLineBoundaryLeft, cursorLineBoundaryRight, cursorLineDown, cursorLineEnd, cursorLineStart, cursorLineUp, cursorMatchingBracket, cursorPageDown, cursorPageUp, cursorSubwordBackward, cursorSubwordForward, cursorSyntaxLeft, cursorSyntaxRight, defaultKeymap, deleteCharBackward, deleteCharForward, deleteGroupBackward, deleteGroupForward, deleteLine, deleteToLineEnd, deleteToLineStart, deleteTrailingWhitespace, emacsStyleKeymap, history, historyField, historyKeymap, indentLess, indentMore, indentSelection, indentWithTab, insertBlankLine, insertNewline, insertNewlineAndIndent, insertTab, invertedEffects, isolateHistory, lineComment, lineUncomment, moveLineDown, moveLineUp, redo, redoDepth, redoSelection, selectAll, selectCharBackward, selectCharForward, selectCharLeft, selectCharRight, selectDocEnd, selectDocStart, selectGroupBackward, selectGroupForward, selectGroupLeft, selectGroupRight, selectLine, selectLineBoundaryBackward, selectLineBoundaryForward, selectLineBoundaryLeft, selectLineBoundaryRight, selectLineDown, selectLineEnd, selectLineStart, selectLineUp, selectMatchingBracket, selectPageDown, selectPageUp, selectParentSyntax, selectSubwordBackward, selectSubwordForward, selectSyntaxLeft, selectSyntaxRight, simplifySelection, splitLine, standardKeymap, toggleBlockComment, toggleBlockCommentByLine, toggleComment, toggleLineComment, transposeChars, undo, undoDepth, undoSelection };\n", "/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n\nimport { indentMore, insertTab } from '@codemirror/commands';\nimport { EditorState, Transaction } from '@codemirror/state';\n\n/**\n * CodeMirror commands namespace\n */\nexport namespace StateCommands {\n  /**\n   * Indent or insert a tab as appropriate.\n   */\n  export function indentMoreOrInsertTab(target: {\n    state: EditorState;\n    dispatch: (transaction: Transaction) => void;\n  }): boolean {\n    const arg = { state: target.state, dispatch: target.dispatch };\n    const from = target.state.selection.main.from;\n    const to = target.state.selection.main.to;\n    if (from != to) {\n      return indentMore(arg);\n    }\n    const line = target.state.doc.lineAt(from);\n    const before = target.state.doc.slice(line.from, from).toString();\n    if (/^\\s*$/.test(before)) {\n      return indentMore(arg);\n    } else {\n      return insertTab(arg);\n    }\n  }\n}\n", "/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n\nimport { combineConfig, Extension, Facet } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\n\n/**\n * Editor customizable styles\n */\nexport type CustomTheme = {\n  /**\n   * Font family\n   */\n  fontFamily: string | null;\n  /**\n   * Font size\n   */\n  fontSize: number | null;\n  /**\n   * Line height\n   */\n  lineHeight: number | null;\n};\n\n/**\n * Custom theme configuration\n *\n * The first non-null value takes precedence\n */\nconst customThemeConfig = Facet.define<CustomTheme, CustomTheme>({\n  combine(configs: CustomTheme[]) {\n    return combineConfig(\n      configs,\n      {\n        fontFamily: null,\n        fontSize: null,\n        lineHeight: null\n      },\n      {\n        fontFamily: (a, b) => a ?? b,\n        fontSize: (a, b) => a ?? b,\n        lineHeight: (a, b) => a ?? b\n      }\n    );\n  }\n});\n\nfunction setEditorStyle(view: EditorView): Record<string, string> | null {\n  const { fontFamily, fontSize, lineHeight } =\n    view.state.facet(customThemeConfig);\n\n  let style = '';\n  if (fontSize) {\n    style += `font-size: ${fontSize}px !important;`;\n  }\n  if (fontFamily) {\n    style += `font-family: ${fontFamily} !important;`;\n  }\n  if (lineHeight) {\n    style += `line-height: ${lineHeight.toString()} !important`;\n  }\n\n  return { style: style };\n}\n\n/**\n * Get the extension to customize an editor theme.\n *\n * @param config Theme customization\n * @returns Editor extension\n */\nexport function customTheme(config: CustomTheme): Extension {\n  return [\n    customThemeConfig.of(config),\n    EditorView.editorAttributes.of(setEditorStyle)\n  ];\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { parseMixed, Parser } from '@lezer/common';\nimport { tags } from '@lezer/highlight';\nimport {\n  DelimiterType,\n  InlineContext,\n  MarkdownConfig,\n  NodeSpec\n} from '@lezer/markdown';\n\n// Mathematical expression delimiters\nconst INLINE_MATH_DOLLAR = 'InlineMathDollar';\nconst INLINE_MATH_BRACKET = 'InlineMathBracket';\nconst BLOCK_MATH_DOLLAR = 'BlockMathDollar';\nconst BLOCK_MATH_BRACKET = 'BlockMathBracket';\n\n/**\n * Lengh of the delimiter for a math expression\n */\nconst DELIMITER_LENGTH: Record<string, number> = {\n  [INLINE_MATH_DOLLAR]: 1,\n  [INLINE_MATH_BRACKET]: 3,\n  [BLOCK_MATH_DOLLAR]: 2,\n  [BLOCK_MATH_BRACKET]: 3\n};\n\n/**\n * Delimiters for math expressions\n */\n// Delimiters must be defined as constant because they are used in object match tests\nconst DELIMITERS = Object.keys(DELIMITER_LENGTH).reduce<\n  Record<string, DelimiterType>\n>((agg, name) => {\n  agg[name] = { mark: `${name}Mark`, resolve: name };\n  return agg;\n}, {});\n\n/**\n * Define an IPython mathematical expression parser for Markdown.\n *\n * @param latexParser CodeMirror {@link Parser} for LaTeX mathematical expression\n * @returns Markdown extension\n */\nexport function parseMathIPython(latexParser?: Parser): MarkdownConfig {\n  const defineNodes = new Array<NodeSpec>();\n  Object.keys(DELIMITER_LENGTH).forEach(name => {\n    defineNodes.push(\n      {\n        name,\n        style: tags.emphasis\n      },\n      { name: `${name}Mark`, style: tags.processingInstruction }\n    );\n  });\n  return {\n    defineNodes,\n    parseInline: [\n      {\n        name: BLOCK_MATH_DOLLAR,\n        parse(cx: InlineContext, next: number, pos: number): number {\n          if (next != 36 /* '$' */ || cx.char(pos + 1) != 36) {\n            return -1;\n          }\n\n          return cx.addDelimiter(\n            DELIMITERS[BLOCK_MATH_DOLLAR],\n            pos,\n            pos + DELIMITER_LENGTH[BLOCK_MATH_DOLLAR],\n            true,\n            true\n          );\n        }\n      },\n      {\n        name: INLINE_MATH_DOLLAR,\n        parse(cx: InlineContext, next: number, pos: number): number {\n          if (next != 36 /* '$' */ || cx.char(pos + 1) == 36) {\n            return -1;\n          }\n\n          return cx.addDelimiter(\n            DELIMITERS[INLINE_MATH_DOLLAR],\n            pos,\n            pos + DELIMITER_LENGTH[INLINE_MATH_DOLLAR],\n            true,\n            true\n          );\n        }\n      },\n      // Inline expression wrapped in \\\\( ... \\\\)\n      {\n        name: INLINE_MATH_BRACKET,\n        before: 'Escape', // Search for this delimiter before the escape character\n        parse(cx: InlineContext, next: number, pos: number): number {\n          if (\n            next != 92 /* '\\' */ ||\n            cx.char(pos + 1) != 92 ||\n            ![40 /* '(' */, 41 /* ')' */].includes(cx.char(pos + 2))\n          ) {\n            return -1;\n          }\n\n          return cx.addDelimiter(\n            DELIMITERS[INLINE_MATH_BRACKET],\n            pos,\n            pos + DELIMITER_LENGTH[INLINE_MATH_BRACKET],\n            cx.char(pos + 2) == 40,\n            cx.char(pos + 2) == 41\n          );\n        }\n      },\n      // Block expression wrapped in \\\\[ ... \\\\]\n      {\n        name: BLOCK_MATH_BRACKET,\n        before: 'Escape', // Search for this delimiter before the escape character\n        parse(cx: InlineContext, next: number, pos: number): number {\n          if (\n            next != 92 /* '\\' */ ||\n            cx.char(pos + 1) != 92 ||\n            ![91 /* '[' */, 93 /* ']' */].includes(cx.char(pos + 2))\n          ) {\n            return -1;\n          }\n\n          return cx.addDelimiter(\n            DELIMITERS[BLOCK_MATH_BRACKET],\n            pos,\n            pos + DELIMITER_LENGTH[BLOCK_MATH_BRACKET],\n            cx.char(pos + 2) == 91,\n            cx.char(pos + 2) == 93\n          );\n        }\n      }\n    ],\n    wrap: latexParser\n      ? parseMixed((node, input) => {\n          // Test if the node type is one of the math expression\n          const delimiterLength = DELIMITER_LENGTH[node.type.name];\n          if (delimiterLength) {\n            return {\n              parser: latexParser,\n              // Remove delimiter from LaTeX parser otherwise it won't be highlighted\n              overlay: [\n                {\n                  from: node.from + delimiterLength,\n                  to: node.to - delimiterLength\n                }\n              ]\n            };\n          }\n\n          return null;\n        })\n      : undefined\n  };\n}\n", "/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n\n// Inspired by https://discuss.codemirror.net/t/how-to-implement-ruler/4616/\n\nimport { Extension, Facet } from '@codemirror/state';\nimport { EditorView, ViewPlugin, ViewUpdate } from '@codemirror/view';\nimport { JSONExt } from '@lumino/coreutils';\n\nconst RULERS_CLASSNAME = 'cm-rulers';\n\n/**\n * Rulers style\n */\nconst baseTheme = EditorView.baseTheme({\n  [`.${RULERS_CLASSNAME}`]: { borderRight: '1px dotted gray', opacity: 0.7 }\n});\n\n/**\n * Rulers facet\n */\nconst rulerConfig = Facet.define<number[], number[]>({\n  // Merge all unique values\n  combine(value) {\n    const final = value.reduce(\n      (agg, arr) =>\n        agg.concat(\n          // Check value is not in aggregate nor multiple time in the array.\n          arr.filter((v, idx) => !agg.includes(v) && idx == arr.lastIndexOf(v))\n        ),\n      []\n    );\n    return final;\n  }\n});\n\n/**\n * View plugin displaying the rulers\n */\nconst plugin = ViewPlugin.fromClass(\n  class {\n    constructor(view: EditorView) {\n      this.rulersContainer = view.dom.appendChild(\n        document.createElement('div')\n      );\n      this.rulersContainer.style.cssText = `\n                position: absolute;\n                left: 0;\n                top: 0;\n                width: 100%;\n                height: 100%;\n                pointer-events: none;\n                overflow: hidden;\n            `;\n\n      const defaultCharacterWidth = view.defaultCharacterWidth;\n      const widths = view.state.facet(rulerConfig);\n      const guttersWidths =\n        view.scrollDOM.querySelector('.cm-gutters')?.clientWidth ?? 0;\n      this.rulers = widths.map(width => {\n        const ruler = this.rulersContainer.appendChild(\n          document.createElement('div')\n        );\n        ruler.classList.add(RULERS_CLASSNAME);\n        ruler.style.cssText = `\n                position: absolute;\n                left: ${guttersWidths + width * defaultCharacterWidth}px;\n                height: 100%;\n            `;\n        // FIXME: This should be equal to the amount of padding on a line.\n        // This value should be extracted from CodeMirror rather than hardcoded.\n        ruler.style.width = '6px';\n\n        return ruler;\n      });\n    }\n\n    update(update: ViewUpdate) {\n      const widths = update.view.state.facet(rulerConfig);\n\n      if (\n        update.viewportChanged ||\n        update.geometryChanged ||\n        !JSONExt.deepEqual(widths, update.startState.facet(rulerConfig))\n      ) {\n        const guttersWidth =\n          update.view.scrollDOM.querySelector('.cm-gutters')?.clientWidth ?? 0;\n        const defaultCharacterWidth = update.view.defaultCharacterWidth;\n        this.rulers.forEach((ruler, rulerIdx) => {\n          ruler.style.left = `${\n            guttersWidth + widths[rulerIdx] * defaultCharacterWidth\n          }px`;\n        });\n      }\n    }\n\n    destroy() {\n      this.rulers.forEach(ruler => {\n        ruler.remove();\n      });\n      this.rulersContainer.remove();\n    }\n\n    rulersContainer: HTMLDivElement;\n    rulers: HTMLDivElement[];\n  }\n);\n\n/**\n * Extension for CodeMirror 6 displaying rulers.\n *\n * @param value Rulers position\n * @returns CodeMirror 6 extension\n */\nexport function rulers(value: number[]): Extension {\n  return [baseTheme, rulerConfig.of(value), plugin];\n}\n", "/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template V,K\n * @template {Map<K,V>} MAP\n * @param {MAP} map\n * @param {K} key\n * @param {function():V} createT\n * @return {V}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n", "/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T}\n */\nexport const first = set =>\n  set.values().next().value || undefined\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => new Set(entries)\n", "/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n * @template {ArrayLike<ITEM>} ARR\n *\n * @param {ARR} arr\n * @param {function(ITEM, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @template {ArrayLike<S>} ARR\n * @param {ARR} arr\n * @param {function(S, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => fold(arr, /** @type {Array<ELEM>} */ ([]), (acc, val) => acc.concat(val))\n\n/**\n * @template T\n * @param {number} len\n * @param {function(number, Array<T>):T} f\n * @return {Array<T>}\n */\nexport const unfold = (len, f) => {\n  const array = new Array(len)\n  for (let i = 0; i < len; i++) {\n    array[i] = f(i, array)\n  }\n  return array\n}\n\n/**\n * @template T\n * @template RESULT\n * @param {Array<T>} arr\n * @param {RESULT} seed\n * @param {function(RESULT, T, number):RESULT} folder\n */\nexport const fold = (arr, seed, folder) => arr.reduce(folder, seed)\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n\n/**\n * @template {ArrayLike<any>} ARR\n * @template {function(ARR extends ArrayLike<infer T> ? T : never, number, ARR):any} MAPPER\n * @param {ARR} arr\n * @param {MAPPER} mapper\n * @return {Array<MAPPER extends function(...any): infer M ? M : never>}\n */\nexport const map = (arr, mapper) => {\n  /**\n   * @type {Array<any>}\n   */\n  const res = Array(arr.length)\n  for (let i = 0; i < arr.length; i++) {\n    res[i] = mapper(/** @type {any} */ (arr[i]), i, /** @type {any} */ (arr))\n  }\n  return /** @type {any} */ (res)\n}\n", "/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n * @experimental\n *\n * This is basically a (better typed) duplicate of Observable, which will replace Observable in the\n * next release.\n *\n * @template {{[key: string]: function(...any):void}} EVENTS\n */\nexport class ObservableV2 {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<string, Set<any>>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @template {string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, /** @type {string} */ (name), set.create).add(f)\n    return f\n  }\n\n  /**\n   * @template {string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, /** @type {any} */ (_f))\n      f(...args)\n    }\n    this.on(name, /** @type {any} */ (_f))\n  }\n\n  /**\n   * @template {string} NAME\n   * @param {NAME} name\n   * @param {EVENTS[NAME]} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @template {string} NAME\n   * @param {NAME} name The event name.\n   * @param {Parameters<EVENTS[NAME]>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n\n/* c8 ignore start */\n/**\n * Handles named events.\n *\n * @deprecated\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n/* c8 ignore end */\n", "/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n", "import * as array from './array.js'\n\n/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * The largest utf16 character.\n * Corresponds to Uint8Array([255, 255]) or charcodeof(2x2^8)\n */\nexport const MAX_UTF16_CHARACTER = fromCharCode(65535)\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* c8 ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* c8 ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* c8 ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* c8 ignore start */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* c8 ignore next */\n  utf8TextDecoder = null\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* c8 ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n\n/**\n * @param {string} source\n * @param {number} n\n */\nexport const repeat = (source, n) => array.unfold(n, () => source).join('')\n", "/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* c8 ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n", "/* eslint-env browser */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* c8 ignore start */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\n/* c8 ignore start */\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n/* c8 ignore stop */\n\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\n/* c8 ignore next */\nexport const varStorage = _localStorage\n\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n\n/**\n * A polyfill for `removeEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const offChange = eventHandler => usePolyfill || removeEventListener('storage', /** @type {any} */ (eventHandler))\n", "/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @template V\n * @param {{[k:string]:V}} obj\n * @param {function(V,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @todo implement mapToArray & map\n *\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object|undefined} obj\n */\nexport const isEmpty = obj => {\n  // eslint-disable-next-line\n  for (const _k in obj) {\n    return false\n  }\n  return true\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n", "/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((array.isArray(a) && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/* c8 ignore start */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n/* c8 ignore stop */\n\nexport const isArray = array.isArray\n\n/**\n * @param {any} s\n * @return {s is String}\n */\nexport const isString = (s) => s && s.constructor === String\n\n/**\n * @param {any} n\n * @return {n is Number}\n */\nexport const isNumber = n => n != null && n.constructor === Number\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {any} n\n * @param {TYPE} T\n * @return {n is InstanceType<TYPE>}\n */\nexport const is = (n, T) => n && n.constructor === T\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {TYPE} T\n */\nexport const isTemplate = (T) =>\n  /**\n   * @param {any} n\n   * @return {n is InstanceType<TYPE>}\n   **/\n  n => n && n.constructor === T\n", "/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\nimport * as f from './function.js'\n\n/* c8 ignore next */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release &&\n  /node|io\\.js/.test(process.release.name)\n/* c8 ignore next */\nexport const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && !isNode\n/* c8 ignore next 3 */\nexport const isMac = typeof navigator !== 'undefined'\n  ? /Mac/.test(navigator.platform)\n  : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* c8 ignore start */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n      // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create(); // eslint-disable-next-line no-undef\n      (location.search || '?').slice(1).split('&').forEach((kv) => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next */\nexport const hasParam = (name) => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* c8 ignore next 2 */\nexport const getParam = (name, defaultVal) =>\n  computeParams().get(name) || defaultVal\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 4 */\nexport const getVariable = (name) =>\n  isNode\n    ? conditions.undefinedToNull(process.env[name.toUpperCase()])\n    : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 2 */\nexport const getConf = (name) =>\n  computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next 2 */\nexport const hasConf = (name) =>\n  hasParam('--' + name) || getVariable(name) !== null\n\n/* c8 ignore next */\nexport const production = hasConf('production')\n\n/* c8 ignore next 2 */\nconst forceColor = isNode &&\n  f.isOneOf(process.env.FORCE_COLOR, ['true', '1', '2'])\n\n/* c8 ignore start */\nexport const supportsColor = !hasParam('no-colors') &&\n  (!isNode || process.stdout.isTTY || forceColor) && (\n  !isNode || hasParam('color') || forceColor ||\n    getVariable('COLORTERM') !== null ||\n    (getVariable('TERM') || '').includes('color')\n)\n/* c8 ignore stop */\n", "/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n", "/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\nexport const HIGHEST_INT32 = binary.BITS31\nexport const HIGHEST_UINT32 = binary.BITS32\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n\n/**\n * Count the number of \"1\" bits in an unsigned 32bit number.\n *\n * Super fun bitcount algorithm by Brian Kernighan.\n *\n * @param {number} n\n */\nexport const countBits = n => {\n  n &= binary.BITS32\n  let count = 0\n  while (n) {\n    n &= (n - 1)\n    count++\n  }\n  return count\n}\n", "/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* c8 ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n", "/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as array from './array.js'\nimport * as math from './math.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* c8 ignore start */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* c8 ignore start */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* c8 ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* c8 ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Implements base64url - see https://datatracker.ietf.org/doc/html/rfc4648#section-5\n * @param {Uint8Array} buf\n */\nexport const toBase64UrlEncoded = buf => toBase64(buf).replaceAll('+', '-').replaceAll('/', '_').replaceAll('=', '')\n\n/**\n * @param {string} base64\n */\nexport const fromBase64UrlEncoded = base64 => fromBase64(base64.replaceAll('-', '+').replaceAll('_', '/'))\n\n/**\n * Base64 is always a more efficient choice. This exists for utility purposes only.\n *\n * @param {Uint8Array} buf\n */\nexport const toHexString = buf => array.map(buf, b => b.toString(16).padStart(2, '0')).join('')\n\n/**\n * Note: This function expects that the hex doesn't start with 0x..\n *\n * @param {string} hex\n */\nexport const fromHexString = hex => {\n  const hlen = hex.length\n  const buf = new Uint8Array(math.ceil(hlen / 2))\n  for (let i = 0; i < hlen; i += 2) {\n    buf[buf.length - i / 2 - 1] = Number.parseInt(hex.slice(hlen - i - 2, hlen - i), 16)\n  }\n  return buf\n}\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data => {\n  const encoder = encoding.createEncoder()\n  encoding.writeAny(encoder, data)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n\n/**\n * Shift Byte Array {N} bits to the left. Does not expand byte array.\n *\n * @param {Uint8Array} bs\n * @param {number} N should be in the range of [0-7]\n */\nexport const shiftNBitsLeft = (bs, N) => {\n  if (N === 0) return bs\n  bs = new Uint8Array(bs)\n  bs[0] <<= N\n  for (let i = 1; i < bs.length; i++) {\n    bs[i - 1] |= bs[i] >>> (8 - N)\n    bs[i] <<= N\n  }\n  return bs\n}\n", "/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\nimport * as array from './array.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * @param {function(Encoder):void} f\n */\nexport const encode = (f) => {\n  const encoder = createEncoder()\n  f(encoder)\n  return toUint8Array(encoder)\n}\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Check whether encoder is empty.\n *\n * @function\n * @param {Encoder} encoder\n * @return {boolean}\n */\nexport const hasContent = encoder => encoder.cpos > 0 || encoder.bufs.length > 0\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* c8 ignore next */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* c8 ignore next */\nexport const writeVarString = (string.utf8TextEncoder && /** @type {any} */ (string.utf8TextEncoder).encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write a string terminated by a special byte sequence. This is not very performant and is\n * generally discouraged. However, the resulting byte arrays are lexiographically ordered which\n * makes this a nice feature for databases.\n *\n * The string will be encoded using utf8 and then terminated and escaped using writeTerminatingUint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeTerminatedString = (encoder, str) =>\n  writeTerminatedUint8Array(encoder, string.encodeUtf8(str))\n\n/**\n * Write a terminating Uint8Array. Note that this is not performant and is generally\n * discouraged. There are few situations when this is needed.\n *\n * We use 0x0 as a terminating character. 0x1 serves as an escape character for 0x0 and 0x1.\n *\n * Example: [0,1,2] is encoded to [1,0,1,1,2,0]. 0x0, and 0x1 needed to be escaped using 0x1. Then\n * the result is terminated using the 0x0 character.\n *\n * This is basically how many systems implement null terminated strings. However, we use an escape\n * character 0x1 to avoid issues and potenial attacks on our database (if this is used as a key\n * encoder for NoSql databases).\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} buf The string that is to be encoded.\n */\nexport const writeTerminatedUint8Array = (encoder, buf) => {\n  for (let i = 0; i < buf.length; i++) {\n    const b = buf[i]\n    if (b === 0 || b === 1) {\n      write(encoder, 1)\n    }\n    write(encoder, buf[i])\n  }\n  write(encoder, 0)\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * \u2022 Transforms data to a binary format (not to a string)\n * \u2022 Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * \u2022 Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (array.isArray(data)) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) \u21D2 RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n", "/* eslint-env browser */\n\nexport const subtle = crypto.subtle\nexport const getRandomValues = crypto.getRandomValues.bind(crypto)\n", "/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\nimport { getRandomValues } from 'lib0/webcrypto'\n\nexport const rand = Math.random\n\nexport const uint32 = () => getRandomValues(new Uint32Array(1))[0]\n\nexport const uint53 = () => {\n  const arr = getRandomValues(new Uint32Array(8))\n  return (arr[0] & binary.BITS21) * (binary.BITS32 + 1) + (arr[1] >>> 0)\n}\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\n\n/**\n * @return {string}\n */\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32() & 15 >> c / 4).toString(16)\n)\n", "/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10\u03BCs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* c8 ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n", "/**\n * Utility helpers to work with promises.\n *\n * @module promise\n */\n\nimport * as time from './time.js'\n\n/**\n * @template T\n * @callback PromiseResolve\n * @param {T|PromiseLike<T>} [result]\n */\n\n/**\n * @template T\n * @param {function(PromiseResolve<T>,function(Error):void):any} f\n * @return {Promise<T>}\n */\nexport const create = f => /** @type {Promise<T>} */ (new Promise(f))\n\n/**\n * @param {function(function():void,function(Error):void):void} f\n * @return {Promise<void>}\n */\nexport const createEmpty = f => new Promise(f)\n\n/**\n * `Promise.all` wait for all promises in the array to resolve and return the result\n * @template {unknown[] | []} PS\n *\n * @param {PS} ps\n * @return {Promise<{ -readonly [P in keyof PS]: Awaited<PS[P]> }>}\n */\nexport const all = Promise.all.bind(Promise)\n\n/**\n * @param {Error} [reason]\n * @return {Promise<never>}\n */\nexport const reject = reason => Promise.reject(reason)\n\n/**\n * @template T\n * @param {T|void} res\n * @return {Promise<T|void>}\n */\nexport const resolve = res => Promise.resolve(res)\n\n/**\n * @template T\n * @param {T} res\n * @return {Promise<T>}\n */\nexport const resolveWith = res => Promise.resolve(res)\n\n/**\n * @todo Next version, reorder parameters: check, [timeout, [intervalResolution]]\n *\n * @param {number} timeout\n * @param {function():boolean} check\n * @param {number} [intervalResolution]\n * @return {Promise<void>}\n */\nexport const until = (timeout, check, intervalResolution = 10) => create((resolve, reject) => {\n  const startTime = time.getUnixTime()\n  const hasTimeout = timeout > 0\n  const untilInterval = () => {\n    if (check()) {\n      clearInterval(intervalHandle)\n      resolve()\n    } else if (hasTimeout) {\n      /* c8 ignore else */\n      if (time.getUnixTime() - startTime > timeout) {\n        clearInterval(intervalHandle)\n        reject(new Error('Timeout'))\n      }\n    }\n  }\n  const intervalHandle = setInterval(untilInterval, intervalResolution)\n})\n\n/**\n * @param {number} timeout\n * @return {Promise<undefined>}\n */\nexport const wait = timeout => create((resolve, reject) => setTimeout(resolve, timeout))\n\n/**\n * Checks if an object is a promise using ducktyping.\n *\n * Promises are often polyfilled, so it makes sense to add some additional guarantees if the user of this\n * library has some insane environment where global Promise objects are overwritten.\n *\n * @param {any} p\n * @return {boolean}\n */\nexport const isPromise = p => p instanceof Promise || (p && p.then && p.catch && p.finally)\n", "/**\n * Working with value pairs.\n *\n * @module pair\n */\n\n/**\n * @template L,R\n */\nexport class Pair {\n  /**\n   * @param {L} left\n   * @param {R} right\n   */\n  constructor (left, right) {\n    this.left = left\n    this.right = right\n  }\n}\n\n/**\n * @template L,R\n * @param {L} left\n * @param {R} right\n * @return {Pair<L,R>}\n */\nexport const create = (left, right) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {R} right\n * @param {L} left\n * @return {Pair<L,R>}\n */\nexport const createReversed = (right, left) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):any} f\n */\nexport const forEach = (arr, f) => arr.forEach(p => f(p.left, p.right))\n\n/**\n * @template L,R,X\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):X} f\n * @return {Array<X>}\n */\nexport const map = (arr, f) => arr.map(p => f(p.left, p.right))\n", "/* eslint-env browser */\n\n/**\n * Utility module to work with the DOM.\n *\n * @module dom\n */\n\nimport * as pair from './pair.js'\nimport * as map from './map.js'\n\n/* c8 ignore start */\n/**\n * @type {Document}\n */\nexport const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {})\n\n/**\n * @param {string} name\n * @return {HTMLElement}\n */\nexport const createElement = name => doc.createElement(name)\n\n/**\n * @return {DocumentFragment}\n */\nexport const createDocumentFragment = () => doc.createDocumentFragment()\n\n/**\n * @param {string} text\n * @return {Text}\n */\nexport const createTextNode = text => doc.createTextNode(text)\n\nexport const domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null)\n\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Object} opts\n */\nexport const emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts))\n\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */\nexport const setAttributes = (el, attrs) => {\n  pair.forEach(attrs, (key, value) => {\n    if (value === false) {\n      el.removeAttribute(key)\n    } else if (value === true) {\n      el.setAttribute(key, '')\n    } else {\n      // @ts-ignore\n      el.setAttribute(key, value)\n    }\n  })\n  return el\n}\n\n/**\n * @param {Element} el\n * @param {Map<string, string>} attrs Array of key-value pairs\n * @return {Element}\n */\nexport const setAttributesMap = (el, attrs) => {\n  attrs.forEach((value, key) => { el.setAttribute(key, value) })\n  return el\n}\n\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */\nexport const fragment = children => {\n  const fragment = createDocumentFragment()\n  for (let i = 0; i < children.length; i++) {\n    appendChild(fragment, children[i])\n  }\n  return fragment\n}\n\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */\nexport const append = (parent, nodes) => {\n  appendChild(parent, fragment(nodes))\n  return parent\n}\n\n/**\n * @param {HTMLElement} el\n */\nexport const remove = el => el.remove()\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\nexport const addEventListener = (el, name, f) => el.addEventListener(name, f)\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\nexport const removeEventListener = (el, name, f) => el.removeEventListener(name, f)\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\nexport const addEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\nexport const removeEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */\nexport const element = (name, attrs = [], children = []) =>\n  append(setAttributes(createElement(name), attrs), children)\n\n/**\n * @param {number} width\n * @param {number} height\n */\nexport const canvas = (width, height) => {\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'))\n  c.height = height\n  c.width = width\n  return c\n}\n\n/**\n * @param {string} t\n * @return {Text}\n */\nexport const text = createTextNode\n\n/**\n * @param {pair.Pair<string,string>} pair\n */\nexport const pairToStyleString = pair => `${pair.left}:${pair.right};`\n\n/**\n * @param {Array<pair.Pair<string,string>>} pairs\n * @return {string}\n */\nexport const pairsToStyleString = pairs => pairs.map(pairToStyleString).join('')\n\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */\nexport const mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('')\n\n/**\n * @todo should always query on a dom element\n *\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {HTMLElement | null}\n */\nexport const querySelector = (el, query) => el.querySelector(query)\n\n/**\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {NodeListOf<HTMLElement>}\n */\nexport const querySelectorAll = (el, query) => el.querySelectorAll(query)\n\n/**\n * @param {string} id\n * @return {HTMLElement}\n */\nexport const getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body\n\n/**\n * @param {string} html\n * @return {DocumentFragment}\n */\nexport const parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\nexport const parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild)\n\n/**\n * @param {HTMLElement} oldEl\n * @param {HTMLElement|DocumentFragment} newEl\n */\nexport const replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl)\n\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement} el\n * @param {Node|null} ref\n * @return {HTMLElement}\n */\nexport const insertBefore = (parent, el, ref) => parent.insertBefore(el, ref)\n\n/**\n * @param {Node} parent\n * @param {Node} child\n * @return {Node}\n */\nexport const appendChild = (parent, child) => parent.appendChild(child)\n\nexport const ELEMENT_NODE = doc.ELEMENT_NODE\nexport const TEXT_NODE = doc.TEXT_NODE\nexport const CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE\nexport const COMMENT_NODE = doc.COMMENT_NODE\nexport const DOCUMENT_NODE = doc.DOCUMENT_NODE\nexport const DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE\nexport const DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE\n\n/**\n * @param {any} node\n * @param {number} type\n */\nexport const checkNodeType = (node, type) => node.nodeType === type\n\n/**\n * @param {Node} parent\n * @param {HTMLElement} child\n */\nexport const isParentOf = (parent, child) => {\n  let p = child.parentNode\n  while (p && p !== parent) {\n    p = p.parentNode\n  }\n  return p === parent\n}\n/* c8 ignore stop */\n", "/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */\n\n/**\n * Return fresh symbol.\n *\n * @return {Symbol}\n */\nexport const create = Symbol\n\n/**\n * @param {any} s\n * @return {boolean}\n */\nexport const isSymbol = s => typeof s === 'symbol'\n", "import * as symbol from './symbol.js'\nimport * as time from './time.js'\nimport * as env from './environment.js'\nimport * as func from './function.js'\n\nexport const BOLD = symbol.create()\nexport const UNBOLD = symbol.create()\nexport const BLUE = symbol.create()\nexport const GREY = symbol.create()\nexport const GREEN = symbol.create()\nexport const RED = symbol.create()\nexport const PURPLE = symbol.create()\nexport const ORANGE = symbol.create()\nexport const UNCOLOR = symbol.create()\n\n/* c8 ignore start */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nexport const computeNoColorLoggingArgs = args => {\n  const strBuilder = []\n  const logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (arg.constructor === String || arg.constructor === Number) {\n      strBuilder.push(arg)\n    } else if (arg.constructor === Object) {\n      logArgs.push(JSON.stringify(arg))\n    }\n  }\n  return logArgs\n}\n/* c8 ignore stop */\n\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\nlet nextColor = 0\nlet lastLoggingTime = time.getUnixTime()\n\n/* c8 ignore start */\n/**\n * @param {function(...any):void} _print\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = (_print, moduleName) => {\n  const color = loggingColors[nextColor]\n  const debugRegexVar = env.getVariable('log')\n  const doLogging = debugRegexVar !== null &&\n    (debugRegexVar === '*' || debugRegexVar === 'true' ||\n      new RegExp(debugRegexVar, 'gi').test(moduleName))\n  nextColor = (nextColor + 1) % loggingColors.length\n  moduleName += ': '\n  return !doLogging\n    ? func.nop\n    : (...args) => {\n        const timeNow = time.getUnixTime()\n        const timeDiff = timeNow - lastLoggingTime\n        lastLoggingTime = timeNow\n        _print(\n          color,\n          moduleName,\n          UNCOLOR,\n          ...args.map((arg) =>\n            (typeof arg === 'string' || typeof arg === 'symbol')\n              ? arg\n              : JSON.stringify(arg)\n          ),\n          color,\n          ' +' + timeDiff + 'ms'\n        )\n      }\n}\n/* c8 ignore stop */\n", "/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */\n\nimport * as env from './environment.js'\nimport * as set from './set.js'\nimport * as pair from './pair.js'\nimport * as dom from './dom.js'\nimport * as json from './json.js'\nimport * as map from './map.js'\nimport * as eventloop from './eventloop.js'\nimport * as math from './math.js'\nimport * as common from './logging.common.js'\n\nexport { BOLD, UNBOLD, BLUE, GREY, GREEN, RED, PURPLE, ORANGE, UNCOLOR } from './logging.common.js'\n\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */\nconst _browserStyleMap = {\n  [common.BOLD]: pair.create('font-weight', 'bold'),\n  [common.UNBOLD]: pair.create('font-weight', 'normal'),\n  [common.BLUE]: pair.create('color', 'blue'),\n  [common.GREEN]: pair.create('color', 'green'),\n  [common.GREY]: pair.create('color', 'grey'),\n  [common.RED]: pair.create('color', 'red'),\n  [common.PURPLE]: pair.create('color', 'purple'),\n  [common.ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\n  [common.UNCOLOR]: pair.create('color', 'black')\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\n/* c8 ignore start */\nconst computeBrowserLoggingArgs = (args) => {\n  const strBuilder = []\n  const styles = []\n  const currentStyle = map.create()\n  /**\n   * @type {Array<string|Object|number>}\n   */\n  let logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        const style = dom.mapToStyleString(currentStyle)\n        if (i > 0 || style.length > 0) {\n          strBuilder.push('%c' + arg)\n          styles.push(style)\n        } else {\n          strBuilder.push(arg)\n        }\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs = styles\n    logArgs.unshift(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n/* c8 ignore stop */\n\n/* c8 ignore start */\nconst computeLoggingArgs = env.supportsColor\n  ? computeBrowserLoggingArgs\n  : common.computeNoColorLoggingArgs\n/* c8 ignore stop */\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const print = (...args) => {\n  console.log(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.print(args))\n}\n\n/* c8 ignore start */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const warn = (...args) => {\n  console.warn(...computeLoggingArgs(args))\n  args.unshift(common.ORANGE)\n  vconsoles.forEach((vc) => vc.print(args))\n}\n/* c8 ignore stop */\n\n/**\n * @param {Error} err\n */\n/* c8 ignore start */\nexport const printError = (err) => {\n  console.error(err)\n  vconsoles.forEach((vc) => vc.printError(err))\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} url image location\n * @param {number} height height of the image in pixel\n */\n/* c8 ignore start */\nexport const printImg = (url, height) => {\n  if (env.isBrowser) {\n    console.log(\n      '%c                      ',\n      `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`\n    )\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n  }\n  vconsoles.forEach((vc) => vc.printImg(url, height))\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} base64\n * @param {number} height\n */\n/* c8 ignore next 2 */\nexport const printImgBase64 = (base64, height) =>\n  printImg(`data:image/gif;base64,${base64}`, height)\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const group = (...args) => {\n  console.group(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.group(args))\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const groupCollapsed = (...args) => {\n  console.groupCollapsed(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.groupCollapsed(args))\n}\n\nexport const groupEnd = () => {\n  console.groupEnd()\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.groupEnd())\n}\n\n/**\n * @param {function():Node} createNode\n */\n/* c8 ignore next 2 */\nexport const printDom = (createNode) =>\n  vconsoles.forEach((vc) => vc.printDom(createNode()))\n\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */\n/* c8 ignore next 2 */\nexport const printCanvas = (canvas, height) =>\n  printImg(canvas.toDataURL(), height)\n\nexport const vconsoles = set.create()\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */\n/* c8 ignore start */\nconst _computeLineSpans = (args) => {\n  const spans = []\n  const currentStyle = new Map()\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        // @ts-ignore\n        const span = dom.element('span', [\n          pair.create('style', dom.mapToStyleString(currentStyle))\n        ], [dom.text(arg.toString())])\n        if (span.innerHTML === '') {\n          span.innerHTML = '&nbsp;'\n        }\n        spans.push(span)\n      } else {\n        break\n      }\n    }\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    let content = args[i]\n    if (!(content instanceof Symbol)) {\n      if (content.constructor !== String && content.constructor !== Number) {\n        content = ' ' + json.stringify(content) + ' '\n      }\n      spans.push(\n        dom.element('span', [], [dom.text(/** @type {string} */ (content))])\n      )\n    }\n  }\n  return spans\n}\n/* c8 ignore stop */\n\nconst lineStyle =\n  'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;'\n\n/* c8 ignore start */\nexport class VConsole {\n  /**\n   * @param {Element} dom\n   */\n  constructor (dom) {\n    this.dom = dom\n    /**\n     * @type {Element}\n     */\n    this.ccontainer = this.dom\n    this.depth = 0\n    vconsoles.add(this)\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */\n  group (args, collapsed = false) {\n    eventloop.enqueue(() => {\n      const triangleDown = dom.element('span', [\n        pair.create('hidden', collapsed),\n        pair.create('style', 'color:grey;font-size:120%;')\n      ], [dom.text('\u25BC')])\n      const triangleRight = dom.element('span', [\n        pair.create('hidden', !collapsed),\n        pair.create('style', 'color:grey;font-size:125%;')\n      ], [dom.text('\u25B6')])\n      const content = dom.element(\n        'div',\n        [pair.create(\n          'style',\n          `${lineStyle};padding-left:${this.depth * 10}px`\n        )],\n        [triangleDown, triangleRight, dom.text(' ')].concat(\n          _computeLineSpans(args)\n        )\n      )\n      const nextContainer = dom.element('div', [\n        pair.create('hidden', collapsed)\n      ])\n      const nextLine = dom.element('div', [], [content, nextContainer])\n      dom.append(this.ccontainer, [nextLine])\n      this.ccontainer = nextContainer\n      this.depth++\n      // when header is clicked, collapse/uncollapse container\n      dom.addEventListener(content, 'click', (_event) => {\n        nextContainer.toggleAttribute('hidden')\n        triangleDown.toggleAttribute('hidden')\n        triangleRight.toggleAttribute('hidden')\n      })\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  groupCollapsed (args) {\n    this.group(args, true)\n  }\n\n  groupEnd () {\n    eventloop.enqueue(() => {\n      if (this.depth > 0) {\n        this.depth--\n        // @ts-ignore\n        this.ccontainer = this.ccontainer.parentElement.parentElement\n      }\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  print (args) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [\n        dom.element('div', [\n          pair.create(\n            'style',\n            `${lineStyle};padding-left:${this.depth * 10}px`\n          )\n        ], _computeLineSpans(args))\n      ])\n    })\n  }\n\n  /**\n   * @param {Error} err\n   */\n  printError (err) {\n    this.print([common.RED, common.BOLD, err.toString()])\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} height\n   */\n  printImg (url, height) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [\n        dom.element('img', [\n          pair.create('src', url),\n          pair.create('height', `${math.round(height * 1.5)}px`)\n        ])\n      ])\n    })\n  }\n\n  /**\n   * @param {Node} node\n   */\n  printDom (node) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [node])\n    })\n  }\n\n  destroy () {\n    eventloop.enqueue(() => {\n      vconsoles.delete(this)\n    })\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @param {Element} dom\n */\n/* c8 ignore next */\nexport const createVConsole = (dom) => new VConsole(dom)\n\n/**\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = (moduleName) => common.createModuleLogger(print, moduleName)\n", "/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */\n\n/**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */\nexport const mapIterator = (iterator, f) => ({\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next () {\n    const r = iterator.next()\n    return { value: r.done ? undefined : f(r.value), done: r.done }\n  }\n})\n\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */\nexport const createIterator = next => ({\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next\n})\n\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */\nexport const iteratorFilter = (iterator, filter) => createIterator(() => {\n  let res\n  do {\n    res = iterator.next()\n  } while (!res.done && !filter(res.value))\n  return res\n})\n\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */\nexport const iteratorMap = (iterator, fmap) => createIterator(() => {\n  const { done, value } = iterator.next()\n  return { done, value: done ? undefined : fmap(value) }\n})\n", "\nimport { Observable } from 'lib0/observable'\n\nimport {\n  Doc // eslint-disable-line\n} from '../internals.js'\n\n/**\n * This is an abstract interface that all Connectors should implement to keep them interchangeable.\n *\n * @note This interface is experimental and it is not advised to actually inherit this class.\n *       It just serves as typing information.\n *\n * @extends {Observable<any>}\n */\nexport class AbstractConnector extends Observable {\n  /**\n   * @param {Doc} ydoc\n   * @param {any} awareness\n   */\n  constructor (ydoc, awareness) {\n    super()\n    this.doc = ydoc\n    this.awareness = awareness\n  }\n}\n", "\nimport {\n  findIndexSS,\n  getState,\n  splitItem,\n  iterateStructs,\n  UpdateEncoderV2,\n  DSDecoderV1, DSEncoderV1, DSDecoderV2, DSEncoderV2, Item, GC, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nimport * as array from 'lib0/array'\nimport * as math from 'lib0/math'\nimport * as map from 'lib0/map'\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\n\nexport class DeleteItem {\n  /**\n   * @param {number} clock\n   * @param {number} len\n   */\n  constructor (clock, len) {\n    /**\n     * @type {number}\n     */\n    this.clock = clock\n    /**\n     * @type {number}\n     */\n    this.len = len\n  }\n}\n\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nexport class DeleteSet {\n  constructor () {\n    /**\n     * @type {Map<number,Array<DeleteItem>>}\n     */\n    this.clients = new Map()\n  }\n}\n\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateDeletedStructs = (transaction, ds, f) =>\n  ds.clients.forEach((deletes, clientid) => {\n    const structs = /** @type {Array<GC|Item>} */ (transaction.doc.store.clients.get(clientid))\n    for (let i = 0; i < deletes.length; i++) {\n      const del = deletes[i]\n      iterateStructs(transaction, structs, del.clock, del.len, f)\n    }\n  })\n\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nexport const findIndexDS = (dis, clock) => {\n  let left = 0\n  let right = dis.length - 1\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2)\n    const mid = dis[midindex]\n    const midclock = mid.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.len) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n  }\n  return null\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const isDeleted = (ds, id) => {\n  const dis = ds.clients.get(id.client)\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\n}\n\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const sortAndMergeDeleteSet = ds => {\n  ds.clients.forEach(dels => {\n    dels.sort((a, b) => a.clock - b.clock)\n    // merge items without filtering or splicing the array\n    // i is the current pointer\n    // j refers to the current insert position for the pointed item\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n    let i, j\n    for (i = 1, j = 1; i < dels.length; i++) {\n      const left = dels[j - 1]\n      const right = dels[i]\n      if (left.clock + left.len >= right.clock) {\n        left.len = math.max(left.len, right.clock + right.len - left.clock)\n      } else {\n        if (j < i) {\n          dels[j] = right\n        }\n        j++\n      }\n    }\n    dels.length = j\n  })\n}\n\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */\nexport const mergeDeleteSets = dss => {\n  const merged = new DeleteSet()\n  for (let dssI = 0; dssI < dss.length; dssI++) {\n    dss[dssI].clients.forEach((delsLeft, client) => {\n      if (!merged.clients.has(client)) {\n        // Write all missing keys from current ds and all following.\n        // If merged already contains `client` current ds has already been added.\n        /**\n         * @type {Array<DeleteItem>}\n         */\n        const dels = delsLeft.slice()\n        for (let i = dssI + 1; i < dss.length; i++) {\n          array.appendTo(dels, dss[i].clients.get(client) || [])\n        }\n        merged.clients.set(client, dels)\n      }\n    })\n  }\n  sortAndMergeDeleteSet(merged)\n  return merged\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {number} client\n * @param {number} clock\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const addToDeleteSet = (ds, client, clock, length) => {\n  map.setIfUndefined(ds.clients, client, () => /** @type {Array<DeleteItem>} */ ([])).push(new DeleteItem(clock, length))\n}\n\nexport const createDeleteSet = () => new DeleteSet()\n\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nexport const createDeleteSetFromStructStore = ss => {\n  const ds = createDeleteSet()\n  ss.clients.forEach((structs, client) => {\n    /**\n     * @type {Array<DeleteItem>}\n     */\n    const dsitems = []\n    for (let i = 0; i < structs.length; i++) {\n      const struct = structs[i]\n      if (struct.deleted) {\n        const clock = struct.id.clock\n        let len = struct.length\n        if (i + 1 < structs.length) {\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.deleted; next = structs[++i + 1]) {\n            len += next.length\n          }\n        }\n        dsitems.push(new DeleteItem(clock, len))\n      }\n    }\n    if (dsitems.length > 0) {\n      ds.clients.set(client, dsitems)\n    }\n  })\n  return ds\n}\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const writeDeleteSet = (encoder, ds) => {\n  encoding.writeVarUint(encoder.restEncoder, ds.clients.size)\n\n  // Ensure that the delete set is written in a deterministic order\n  array.from(ds.clients.entries())\n    .sort((a, b) => b[0] - a[0])\n    .forEach(([client, dsitems]) => {\n      encoder.resetDsCurVal()\n      encoding.writeVarUint(encoder.restEncoder, client)\n      const len = dsitems.length\n      encoding.writeVarUint(encoder.restEncoder, len)\n      for (let i = 0; i < len; i++) {\n        const item = dsitems[i]\n        encoder.writeDsClock(item.clock)\n        encoder.writeDsLen(item.len)\n      }\n    })\n}\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */\nexport const readDeleteSet = decoder => {\n  const ds = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal()\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\n    if (numberOfDeletes > 0) {\n      const dsField = map.setIfUndefined(ds.clients, client, () => /** @type {Array<DeleteItem>} */ ([]))\n      for (let i = 0; i < numberOfDeletes; i++) {\n        dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()))\n      }\n    }\n  }\n  return ds\n}\n\n/**\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\n */\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\n *\n * @private\n * @function\n */\nexport const readAndApplyDeleteSet = (decoder, transaction, store) => {\n  const unappliedDS = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal()\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\n    const structs = store.clients.get(client) || []\n    const state = getState(store, client)\n    for (let i = 0; i < numberOfDeletes; i++) {\n      const clock = decoder.readDsClock()\n      const clockEnd = clock + decoder.readDsLen()\n      if (clock < state) {\n        if (state < clockEnd) {\n          addToDeleteSet(unappliedDS, client, state, clockEnd - state)\n        }\n        let index = findIndexSS(structs, clock)\n        /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */\n        // @ts-ignore\n        let struct = structs[index]\n        // split the first item if necessary\n        if (!struct.deleted && struct.id.clock < clock) {\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n          index++ // increase we now want to use the next struct\n        }\n        while (index < structs.length) {\n          // @ts-ignore\n          struct = structs[index++]\n          if (struct.id.clock < clockEnd) {\n            if (!struct.deleted) {\n              if (clockEnd < struct.id.clock + struct.length) {\n                structs.splice(index, 0, splitItem(transaction, struct, clockEnd - struct.id.clock))\n              }\n              struct.delete(transaction)\n            }\n          } else {\n            break\n          }\n        }\n      } else {\n        addToDeleteSet(unappliedDS, client, clock, clockEnd - clock)\n      }\n    }\n  }\n  if (unappliedDS.clients.size > 0) {\n    const ds = new UpdateEncoderV2()\n    encoding.writeVarUint(ds.restEncoder, 0) // encode 0 structs\n    writeDeleteSet(ds, unappliedDS)\n    return ds.toUint8Array()\n  }\n  return null\n}\n\n/**\n * @param {DeleteSet} ds1\n * @param {DeleteSet} ds2\n */\nexport const equalDeleteSets = (ds1, ds2) => {\n  if (ds1.clients.size !== ds2.clients.size) return false\n  for (const [client, deleteItems1] of ds1.clients.entries()) {\n    const deleteItems2 = /** @type {Array<import('../internals.js').DeleteItem>} */ (ds2.clients.get(client))\n    if (deleteItems2 === undefined || deleteItems1.length !== deleteItems2.length) return false\n    for (let i = 0; i < deleteItems1.length; i++) {\n      const di1 = deleteItems1[i]\n      const di2 = deleteItems2[i]\n      if (di1.clock !== di2.clock || di1.len !== di2.len) {\n        return false\n      }\n    }\n  }\n  return true\n}\n", "/**\n * @module Y\n */\n\nimport {\n  StructStore,\n  AbstractType,\n  YArray,\n  YText,\n  YMap,\n  YXmlFragment,\n  transact,\n  ContentDoc, Item, Transaction, YEvent // eslint-disable-line\n} from '../internals.js'\n\nimport { Observable } from 'lib0/observable'\nimport * as random from 'lib0/random'\nimport * as map from 'lib0/map'\nimport * as array from 'lib0/array'\nimport * as promise from 'lib0/promise'\n\nexport const generateNewClientId = random.uint32\n\n/**\n * @typedef {Object} DocOpts\n * @property {boolean} [DocOpts.gc=true] Disable garbage collection (default: gc=true)\n * @property {function(Item):boolean} [DocOpts.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\n * @property {string} [DocOpts.guid] Define a globally unique identifier for this document\n * @property {string | null} [DocOpts.collectionid] Associate this document with a collection. This only plays a role if your provider has a concept of collection.\n * @property {any} [DocOpts.meta] Any kind of meta information you want to associate with this document. If this is a subdocument, remote peers will store the meta information as well.\n * @property {boolean} [DocOpts.autoLoad] If a subdocument, automatically load document. If this is a subdocument, remote peers will load the document as well automatically.\n * @property {boolean} [DocOpts.shouldLoad] Whether the document should be synced by the provider now. This is toggled to true when you call ydoc.load()\n */\n\n/**\n * A Yjs instance handles the state of shared data.\n * @extends Observable<string>\n */\nexport class Doc extends Observable {\n  /**\n   * @param {DocOpts} opts configuration\n   */\n  constructor ({ guid = random.uuidv4(), collectionid = null, gc = true, gcFilter = () => true, meta = null, autoLoad = false, shouldLoad = true } = {}) {\n    super()\n    this.gc = gc\n    this.gcFilter = gcFilter\n    this.clientID = generateNewClientId()\n    this.guid = guid\n    this.collectionid = collectionid\n    /**\n     * @type {Map<string, AbstractType<YEvent<any>>>}\n     */\n    this.share = new Map()\n    this.store = new StructStore()\n    /**\n     * @type {Transaction | null}\n     */\n    this._transaction = null\n    /**\n     * @type {Array<Transaction>}\n     */\n    this._transactionCleanups = []\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocs = new Set()\n    /**\n     * If this document is a subdocument - a document integrated into another document - then _item is defined.\n     * @type {Item?}\n     */\n    this._item = null\n    this.shouldLoad = shouldLoad\n    this.autoLoad = autoLoad\n    this.meta = meta\n    /**\n     * This is set to true when the persistence provider loaded the document from the database or when the `sync` event fires.\n     * Note that not all providers implement this feature. Provider authors are encouraged to fire the `load` event when the doc content is loaded from the database.\n     *\n     * @type {boolean}\n     */\n    this.isLoaded = false\n    /**\n     * This is set to true when the connection provider has successfully synced with a backend.\n     * Note that when using peer-to-peer providers this event may not provide very useful.\n     * Also note that not all providers implement this feature. Provider authors are encouraged to fire\n     * the `sync` event when the doc has been synced (with `true` as a parameter) or if connection is\n     * lost (with false as a parameter).\n     */\n    this.isSynced = false\n    /**\n     * Promise that resolves once the document has been loaded from a presistence provider.\n     */\n    this.whenLoaded = promise.create(resolve => {\n      this.on('load', () => {\n        this.isLoaded = true\n        resolve(this)\n      })\n    })\n    const provideSyncedPromise = () => promise.create(resolve => {\n      /**\n       * @param {boolean} isSynced\n       */\n      const eventHandler = (isSynced) => {\n        if (isSynced === undefined || isSynced === true) {\n          this.off('sync', eventHandler)\n          resolve()\n        }\n      }\n      this.on('sync', eventHandler)\n    })\n    this.on('sync', isSynced => {\n      if (isSynced === false && this.isSynced) {\n        this.whenSynced = provideSyncedPromise()\n      }\n      this.isSynced = isSynced === undefined || isSynced === true\n      if (!this.isLoaded) {\n        this.emit('load', [])\n      }\n    })\n    /**\n     * Promise that resolves once the document has been synced with a backend.\n     * This promise is recreated when the connection is lost.\n     * Note the documentation about the `isSynced` property.\n     */\n    this.whenSynced = provideSyncedPromise()\n  }\n\n  /**\n   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\n   *\n   * `load()` might be used in the future to request any provider to load the most current data.\n   *\n   * It is safe to call `load()` multiple times.\n   */\n  load () {\n    const item = this._item\n    if (item !== null && !this.shouldLoad) {\n      transact(/** @type {any} */ (item.parent).doc, transaction => {\n        transaction.subdocsLoaded.add(this)\n      }, null, true)\n    }\n    this.shouldLoad = true\n  }\n\n  getSubdocs () {\n    return this.subdocs\n  }\n\n  getSubdocGuids () {\n    return new Set(array.from(this.subdocs).map(doc => doc.guid))\n  }\n\n  /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @template T\n   * @param {function(Transaction):T} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   * @return T\n   *\n   * @public\n   */\n  transact (f, origin = null) {\n    return transact(this, f, origin)\n  }\n\n  /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `y.define(name, Y.Array) === y.define(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `y.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Yjs instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @example\n   *   const y = new Y(..)\n   *   const appState = {\n   *     document: y.getText('document')\n   *     comments: y.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */\n  get (name, TypeConstructor = AbstractType) {\n    const type = map.setIfUndefined(this.share, name, () => {\n      // @ts-ignore\n      const t = new TypeConstructor()\n      t._integrate(this, null)\n      return t\n    })\n    const Constr = type.constructor\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n      if (Constr === AbstractType) {\n        // @ts-ignore\n        const t = new TypeConstructor()\n        t._map = type._map\n        type._map.forEach(/** @param {Item?} n */ n => {\n          for (; n !== null; n = n.left) {\n            // @ts-ignore\n            n.parent = t\n          }\n        })\n        t._start = type._start\n        for (let n = t._start; n !== null; n = n.right) {\n          n.parent = t\n        }\n        t._length = type._length\n        this.share.set(name, t)\n        t._integrate(this, null)\n        return t\n      } else {\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\n      }\n    }\n    return type\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YArray<T>}\n   *\n   * @public\n   */\n  getArray (name = '') {\n    // @ts-ignore\n    return this.get(name, YArray)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YText}\n   *\n   * @public\n   */\n  getText (name = '') {\n    // @ts-ignore\n    return this.get(name, YText)\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YMap<T>}\n   *\n   * @public\n   */\n  getMap (name = '') {\n    // @ts-ignore\n    return this.get(name, YMap)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YXmlFragment}\n   *\n   * @public\n   */\n  getXmlFragment (name = '') {\n    // @ts-ignore\n    return this.get(name, YXmlFragment)\n  }\n\n  /**\n   * Converts the entire document into a js object, recursively traversing each yjs type\n   * Doesn't log types that have not been defined (using ydoc.getType(..)).\n   *\n   * @deprecated Do not use this method and rather call toJSON directly on the shared types.\n   *\n   * @return {Object<string, any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string, any>}\n     */\n    const doc = {}\n\n    this.share.forEach((value, key) => {\n      doc[key] = value.toJSON()\n    })\n\n    return doc\n  }\n\n  /**\n   * Emit `destroy` event and unregister all event handlers.\n   */\n  destroy () {\n    array.from(this.subdocs).forEach(subdoc => subdoc.destroy())\n    const item = this._item\n    if (item !== null) {\n      this._item = null\n      const content = /** @type {ContentDoc} */ (item.content)\n      content.doc = new Doc({ guid: this.guid, ...content.opts, shouldLoad: false })\n      content.doc._item = item\n      transact(/** @type {any} */ (item).parent.doc, transaction => {\n        const doc = content.doc\n        if (!item.deleted) {\n          transaction.subdocsAdded.add(doc)\n        }\n        transaction.subdocsRemoved.add(this)\n      }, null, true)\n    }\n    this.emit('destroyed', [true])\n    this.emit('destroy', [this])\n    super.destroy()\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function(...any):any} f\n   */\n  on (eventName, f) {\n    super.on(eventName, f)\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} f\n   */\n  off (eventName, f) {\n    super.off(eventName, f)\n  }\n}\n", "import * as buffer from 'lib0/buffer'\nimport * as decoding from 'lib0/decoding'\nimport {\n  ID, createID\n} from '../internals.js'\n\nexport class DSDecoderV1 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    this.restDecoder = decoder\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n}\n\nexport class UpdateDecoderV1 extends DSDecoderV1 {\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return createID(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder))\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return decoding.readUint8(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return decoding.readVarString(this.restDecoder)\n  }\n\n  /**\n   * @return {boolean} isKey\n   */\n  readParentInfo () {\n    return decoding.readVarUint(this.restDecoder) === 1\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number} len\n   */\n  readLen () {\n    return decoding.readVarUint(this.restDecoder)\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return buffer.copyUint8Array(decoding.readVarUint8Array(this.restDecoder))\n  }\n\n  /**\n   * Legacy implementation uses JSON parse. We use any-decoding in v2.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return JSON.parse(decoding.readVarString(this.restDecoder))\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    return decoding.readVarString(this.restDecoder)\n  }\n}\n\nexport class DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    /**\n     * @private\n     */\n    this.dsCurrVal = 0\n    this.restDecoder = decoder\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsClock () {\n    this.dsCurrVal += decoding.readVarUint(this.restDecoder)\n    return this.dsCurrVal\n  }\n\n  /**\n   * @return {number}\n   */\n  readDsLen () {\n    const diff = decoding.readVarUint(this.restDecoder) + 1\n    this.dsCurrVal += diff\n    return diff\n  }\n}\n\nexport class UpdateDecoderV2 extends DSDecoderV2 {\n  /**\n   * @param {decoding.Decoder} decoder\n   */\n  constructor (decoder) {\n    super(decoder)\n    /**\n     * List of cached keys. If the keys[id] does not exist, we read a new key\n     * from stringEncoder and push it to keys.\n     *\n     * @type {Array<string>}\n     */\n    this.keys = []\n    decoding.readVarUint(decoder) // read feature flag - currently unused\n    this.keyClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.clientDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.leftClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.rightClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.infoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8)\n    this.stringDecoder = new decoding.StringDecoder(decoding.readVarUint8Array(decoder))\n    this.parentInfoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8)\n    this.typeRefDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n    this.lenDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder))\n  }\n\n  /**\n   * @return {ID}\n   */\n  readLeftID () {\n    return new ID(this.clientDecoder.read(), this.leftClockDecoder.read())\n  }\n\n  /**\n   * @return {ID}\n   */\n  readRightID () {\n    return new ID(this.clientDecoder.read(), this.rightClockDecoder.read())\n  }\n\n  /**\n   * Read the next client id.\n   * Use this in favor of readID whenever possible to reduce the number of objects created.\n   */\n  readClient () {\n    return this.clientDecoder.read()\n  }\n\n  /**\n   * @return {number} info An unsigned 8-bit integer\n   */\n  readInfo () {\n    return /** @type {number} */ (this.infoDecoder.read())\n  }\n\n  /**\n   * @return {string}\n   */\n  readString () {\n    return this.stringDecoder.read()\n  }\n\n  /**\n   * @return {boolean}\n   */\n  readParentInfo () {\n    return this.parentInfoDecoder.read() === 1\n  }\n\n  /**\n   * @return {number} An unsigned 8-bit integer\n   */\n  readTypeRef () {\n    return this.typeRefDecoder.read()\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @return {number}\n   */\n  readLen () {\n    return this.lenDecoder.read()\n  }\n\n  /**\n   * @return {any}\n   */\n  readAny () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {Uint8Array}\n   */\n  readBuf () {\n    return decoding.readVarUint8Array(this.restDecoder)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @return {any}\n   */\n  readJSON () {\n    return decoding.readAny(this.restDecoder)\n  }\n\n  /**\n   * @return {string}\n   */\n  readKey () {\n    const keyClock = this.keyClockDecoder.read()\n    if (keyClock < this.keys.length) {\n      return this.keys[keyClock]\n    } else {\n      const key = this.stringDecoder.read()\n      this.keys.push(key)\n      return key\n    }\n  }\n}\n", "\nimport * as error from 'lib0/error'\nimport * as encoding from 'lib0/encoding'\n\nimport {\n  ID // eslint-disable-line\n} from '../internals.js'\n\nexport class DSEncoderV1 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder()\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    encoding.writeVarUint(this.restEncoder, clock)\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    encoding.writeVarUint(this.restEncoder, len)\n  }\n}\n\nexport class UpdateEncoderV1 extends DSEncoderV1 {\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client)\n    encoding.writeVarUint(this.restEncoder, id.clock)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client)\n    encoding.writeVarUint(this.restEncoder, id.clock)\n  }\n\n  /**\n   * Use writeClient and writeClock instead of writeID if possible.\n   * @param {number} client\n   */\n  writeClient (client) {\n    encoding.writeVarUint(this.restEncoder, client)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    encoding.writeUint8(this.restEncoder, info)\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    encoding.writeVarString(this.restEncoder, s)\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    encoding.writeVarUint(this.restEncoder, info)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    encoding.writeVarUint(this.restEncoder, len)\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf)\n  }\n\n  /**\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeVarString(this.restEncoder, JSON.stringify(embed))\n  }\n\n  /**\n   * @param {string} key\n   */\n  writeKey (key) {\n    encoding.writeVarString(this.restEncoder, key)\n  }\n}\n\nexport class DSEncoderV2 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder() // encodes all the rest / non-optimized\n    this.dsCurrVal = 0\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    const diff = clock - this.dsCurrVal\n    this.dsCurrVal = clock\n    encoding.writeVarUint(this.restEncoder, diff)\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    if (len === 0) {\n      error.unexpectedCase()\n    }\n    encoding.writeVarUint(this.restEncoder, len - 1)\n    this.dsCurrVal += len\n  }\n}\n\nexport class UpdateEncoderV2 extends DSEncoderV2 {\n  constructor () {\n    super()\n    /**\n     * @type {Map<string,number>}\n     */\n    this.keyMap = new Map()\n    /**\n     * Refers to the next uniqe key-identifier to me used.\n     * See writeKey method for more information.\n     *\n     * @type {number}\n     */\n    this.keyClock = 0\n    this.keyClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.clientEncoder = new encoding.UintOptRleEncoder()\n    this.leftClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.rightClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.infoEncoder = new encoding.RleEncoder(encoding.writeUint8)\n    this.stringEncoder = new encoding.StringEncoder()\n    this.parentInfoEncoder = new encoding.RleEncoder(encoding.writeUint8)\n    this.typeRefEncoder = new encoding.UintOptRleEncoder()\n    this.lenEncoder = new encoding.UintOptRleEncoder()\n  }\n\n  toUint8Array () {\n    const encoder = encoding.createEncoder()\n    encoding.writeVarUint(encoder, 0) // this is a feature flag that we might use in the future\n    encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.infoEncoder))\n    encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.parentInfoEncoder))\n    encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array())\n    // @note The rest encoder is appended! (note the missing var)\n    encoding.writeUint8Array(encoder, encoding.toUint8Array(this.restEncoder))\n    return encoding.toUint8Array(encoder)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    this.clientEncoder.write(id.client)\n    this.leftClockEncoder.write(id.clock)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    this.clientEncoder.write(id.client)\n    this.rightClockEncoder.write(id.clock)\n  }\n\n  /**\n   * @param {number} client\n   */\n  writeClient (client) {\n    this.clientEncoder.write(client)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    this.infoEncoder.write(info)\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    this.stringEncoder.write(s)\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    this.parentInfoEncoder.write(isYKey ? 1 : 0)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    this.typeRefEncoder.write(info)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    this.lenEncoder.write(len)\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeAny(this.restEncoder, embed)\n  }\n\n  /**\n   * Property keys are often reused. For example, in y-prosemirror the key `bold` might\n   * occur very often. For a 3d application, the key `position` might occur very often.\n   *\n   * We cache these keys in a Map and refer to them via a unique number.\n   *\n   * @param {string} key\n   */\n  writeKey (key) {\n    const clock = this.keyMap.get(key)\n    if (clock === undefined) {\n      /**\n       * @todo uncomment to introduce this feature finally\n       *\n       * Background. The ContentFormat object was always encoded using writeKey, but the decoder used to use readString.\n       * Furthermore, I forgot to set the keyclock. So everything was working fine.\n       *\n       * However, this feature here is basically useless as it is not being used (it actually only consumes extra memory).\n       *\n       * I don't know yet how to reintroduce this feature..\n       *\n       * Older clients won't be able to read updates when we reintroduce this feature. So this should probably be done using a flag.\n       *\n       */\n      // this.keyMap.set(key, this.keyClock)\n      this.keyClockEncoder.write(this.keyClock++)\n      this.stringEncoder.write(key)\n    } else {\n      this.keyClockEncoder.write(clock)\n    }\n  }\n}\n", "\n/**\n * @module encoding\n */\n/*\n * We use the first five bits in the info flag for determining the type of the struct.\n *\n * 0: GC\n * 1: Item with Deleted content\n * 2: Item with JSON content\n * 3: Item with Binary content\n * 4: Item with String content\n * 5: Item with Embed content (for richtext content)\n * 6: Item with Format content (a formatting marker for richtext content)\n * 7: Item with Type\n */\n\nimport {\n  findIndexSS,\n  getState,\n  createID,\n  getStateVector,\n  readAndApplyDeleteSet,\n  writeDeleteSet,\n  createDeleteSetFromStructStore,\n  transact,\n  readItemContent,\n  UpdateDecoderV1,\n  UpdateDecoderV2,\n  UpdateEncoderV1,\n  UpdateEncoderV2,\n  DSEncoderV2,\n  DSDecoderV1,\n  DSEncoderV1,\n  mergeUpdates,\n  mergeUpdatesV2,\n  Skip,\n  diffUpdateV2,\n  convertUpdateFormatV2ToV1,\n  DSDecoderV2, Doc, Transaction, GC, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as binary from 'lib0/binary'\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as array from 'lib0/array'\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Array<GC|Item>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n  // write first id\n  clock = math.max(clock, structs[0].id.clock) // make sure the first id exists\n  const startNewStructs = findIndexSS(structs, clock)\n  // write # encoded structs\n  encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs)\n  encoder.writeClient(client)\n  encoding.writeVarUint(encoder.restEncoder, clock)\n  const firstStruct = structs[startNewStructs]\n  // write first struct with an offset\n  firstStruct.write(encoder, clock - firstStruct.id.clock)\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\n    structs[i].write(encoder, 0)\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nexport const writeClientsStructs = (encoder, store, _sm) => {\n  // we filter all valid _sm entries into sm\n  const sm = new Map()\n  _sm.forEach((clock, client) => {\n    // only write if new structs are available\n    if (getState(store, client) > clock) {\n      sm.set(client, clock)\n    }\n  })\n  getStateVector(store).forEach((_clock, client) => {\n    if (!_sm.has(client)) {\n      sm.set(client, 0)\n    }\n  })\n  // write # states that were updated\n  encoding.writeVarUint(encoder.restEncoder, sm.size)\n  // Write items with higher client ids first\n  // This heavily improves the conflict algorithm.\n  array.from(sm.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    writeStructs(encoder, /** @type {Array<GC|Item>} */ (store.clients.get(client)), client, clock)\n  })\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\n * @param {Doc} doc\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\n *\n * @private\n * @function\n */\nexport const readClientsStructRefs = (decoder, doc) => {\n  /**\n   * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\n   */\n  const clientRefs = map.create()\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\n    /**\n     * @type {Array<GC|Item>}\n     */\n    const refs = new Array(numberOfStructs)\n    const client = decoder.readClient()\n    let clock = decoding.readVarUint(decoder.restDecoder)\n    // const start = performance.now()\n    clientRefs.set(client, { i: 0, refs })\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo()\n      switch (binary.BITS5 & info) {\n        case 0: { // GC\n          const len = decoder.readLen()\n          refs[i] = new GC(createID(client, clock), len)\n          clock += len\n          break\n        }\n        case 10: { // Skip Struct (nothing to apply)\n          // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\n          const len = decoding.readVarUint(decoder.restDecoder)\n          refs[i] = new Skip(createID(client, clock), len)\n          clock += len\n          break\n        }\n        default: { // Item with content\n          /**\n           * The optimized implementation doesn't use any variables because inlining variables is faster.\n           * Below a non-optimized version is shown that implements the basic algorithm with\n           * a few comments\n           */\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n            null, // right\n            (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n            cantCopyParentInfo ? (decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID()) : null, // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          /* A non-optimized implementation of the above algorithm:\n\n          // The item that was originally to the left of this item.\n          const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\n          // The item that was originally to the right of this item.\n          const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\n\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            origin, // origin\n            null, // right\n            rightOrigin, // right origin\n            cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          */\n          refs[i] = struct\n          clock += struct.length\n        }\n      }\n    }\n    // console.log('time to read: ', performance.now() - start) // @todo remove\n  }\n  return clientRefs\n}\n\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\n *\n * @private\n * @function\n */\nconst integrateStructs = (transaction, store, clientsStructRefs) => {\n  /**\n   * @type {Array<Item | GC>}\n   */\n  const stack = []\n  // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\n  let clientsStructRefsIds = array.from(clientsStructRefs.keys()).sort((a, b) => a - b)\n  if (clientsStructRefsIds.length === 0) {\n    return null\n  }\n  const getNextStructTarget = () => {\n    if (clientsStructRefsIds.length === 0) {\n      return null\n    }\n    let nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\n    while (nextStructsTarget.refs.length === nextStructsTarget.i) {\n      clientsStructRefsIds.pop()\n      if (clientsStructRefsIds.length > 0) {\n        nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\n      } else {\n        return null\n      }\n    }\n    return nextStructsTarget\n  }\n  let curStructsTarget = getNextStructTarget()\n  if (curStructsTarget === null && stack.length === 0) {\n    return null\n  }\n\n  /**\n   * @type {StructStore}\n   */\n  const restStructs = new StructStore()\n  const missingSV = new Map()\n  /**\n   * @param {number} client\n   * @param {number} clock\n   */\n  const updateMissingSv = (client, clock) => {\n    const mclock = missingSV.get(client)\n    if (mclock == null || mclock > clock) {\n      missingSV.set(client, clock)\n    }\n  }\n  /**\n   * @type {GC|Item}\n   */\n  let stackHead = /** @type {any} */ (curStructsTarget).refs[/** @type {any} */ (curStructsTarget).i++]\n  // caching the state because it is used very often\n  const state = new Map()\n\n  const addStackToRestSS = () => {\n    for (const item of stack) {\n      const client = item.id.client\n      const unapplicableItems = clientsStructRefs.get(client)\n      if (unapplicableItems) {\n        // decrement because we weren't able to apply previous operation\n        unapplicableItems.i--\n        restStructs.clients.set(client, unapplicableItems.refs.slice(unapplicableItems.i))\n        clientsStructRefs.delete(client)\n        unapplicableItems.i = 0\n        unapplicableItems.refs = []\n      } else {\n        // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\n        restStructs.clients.set(client, [item])\n      }\n      // remove client from clientsStructRefsIds to prevent users from applying the same update again\n      clientsStructRefsIds = clientsStructRefsIds.filter(c => c !== client)\n    }\n    stack.length = 0\n  }\n\n  // iterate over all struct readers until we are done\n  while (true) {\n    if (stackHead.constructor !== Skip) {\n      const localClock = map.setIfUndefined(state, stackHead.id.client, () => getState(store, stackHead.id.client))\n      const offset = localClock - stackHead.id.clock\n      if (offset < 0) {\n        // update from the same client is missing\n        stack.push(stackHead)\n        updateMissingSv(stackHead.id.client, stackHead.id.clock - 1)\n        // hid a dead wall, add all items from stack to restSS\n        addStackToRestSS()\n      } else {\n        const missing = stackHead.getMissing(transaction, store)\n        if (missing !== null) {\n          stack.push(stackHead)\n          // get the struct reader that has the missing struct\n          /**\n           * @type {{ refs: Array<GC|Item>, i: number }}\n           */\n          const structRefs = clientsStructRefs.get(/** @type {number} */ (missing)) || { refs: [], i: 0 }\n          if (structRefs.refs.length === structRefs.i) {\n            // This update message causally depends on another update message that doesn't exist yet\n            updateMissingSv(/** @type {number} */ (missing), getState(store, missing))\n            addStackToRestSS()\n          } else {\n            stackHead = structRefs.refs[structRefs.i++]\n            continue\n          }\n        } else if (offset === 0 || offset < stackHead.length) {\n          // all fine, apply the stackhead\n          stackHead.integrate(transaction, offset)\n          state.set(stackHead.id.client, stackHead.id.clock + stackHead.length)\n        }\n      }\n    }\n    // iterate to next stackHead\n    if (stack.length > 0) {\n      stackHead = /** @type {GC|Item} */ (stack.pop())\n    } else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) {\n      stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\n    } else {\n      curStructsTarget = getNextStructTarget()\n      if (curStructsTarget === null) {\n        // we are done!\n        break\n      } else {\n        stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\n      }\n    }\n  }\n  if (restStructs.clients.size > 0) {\n    const encoder = new UpdateEncoderV2()\n    writeClientsStructs(encoder, restStructs, new Map())\n    // write empty deleteset\n    // writeDeleteSet(encoder, new DeleteSet())\n    encoding.writeVarUint(encoder.restEncoder, 0) // => no need for an extra function call, just write 0 deletes\n    return { missing: missingSV, update: encoder.toUint8Array() }\n  }\n  return null\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState)\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\n *\n * @function\n */\nexport const readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new UpdateDecoderV2(decoder)) =>\n  transact(ydoc, transaction => {\n    // force that transaction.local is set to non-local\n    transaction.local = false\n    let retry = false\n    const doc = transaction.doc\n    const store = doc.store\n    // let start = performance.now()\n    const ss = readClientsStructRefs(structDecoder, doc)\n    // console.log('time to read structs: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    // console.log('time to merge: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const restStructs = integrateStructs(transaction, store, ss)\n    const pending = store.pendingStructs\n    if (pending) {\n      // check if we can apply something\n      for (const [client, clock] of pending.missing) {\n        if (clock < getState(store, client)) {\n          retry = true\n          break\n        }\n      }\n      if (restStructs) {\n        // merge restStructs into store.pending\n        for (const [client, clock] of restStructs.missing) {\n          const mclock = pending.missing.get(client)\n          if (mclock == null || mclock > clock) {\n            pending.missing.set(client, clock)\n          }\n        }\n        pending.update = mergeUpdatesV2([pending.update, restStructs.update])\n      }\n    } else {\n      store.pendingStructs = restStructs\n    }\n    // console.log('time to integrate: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const dsRest = readAndApplyDeleteSet(structDecoder, transaction, store)\n    if (store.pendingDs) {\n      // @todo we could make a lower-bound state-vector check as we do above\n      const pendingDSUpdate = new UpdateDecoderV2(decoding.createDecoder(store.pendingDs))\n      decoding.readVarUint(pendingDSUpdate.restDecoder) // read 0 structs, because we only encode deletes in pendingdsupdate\n      const dsRest2 = readAndApplyDeleteSet(pendingDSUpdate, transaction, store)\n      if (dsRest && dsRest2) {\n        // case 1: ds1 != null && ds2 != null\n        store.pendingDs = mergeUpdatesV2([dsRest, dsRest2])\n      } else {\n        // case 2: ds1 != null\n        // case 3: ds2 != null\n        // case 4: ds1 == null && ds2 == null\n        store.pendingDs = dsRest || dsRest2\n      }\n    } else {\n      // Either dsRest == null && pendingDs == null OR dsRest != null\n      store.pendingDs = dsRest\n    }\n    // console.log('time to cleanup: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n\n    // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    if (retry) {\n      const update = /** @type {{update: Uint8Array}} */ (store.pendingStructs).update\n      store.pendingStructs = null\n      applyUpdateV2(transaction.doc, update)\n    }\n  }, transactionOrigin, false)\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const readUpdate = (decoder, ydoc, transactionOrigin) => readUpdateV2(decoder, ydoc, transactionOrigin, new UpdateDecoderV1(decoder))\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n *\n * @function\n */\nexport const applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = UpdateDecoderV2) => {\n  const decoder = decoding.createDecoder(update)\n  readUpdateV2(decoder, ydoc, transactionOrigin, new YDecoder(decoder))\n}\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const applyUpdate = (ydoc, update, transactionOrigin) => applyUpdateV2(ydoc, update, transactionOrigin, UpdateDecoderV1)\n\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nexport const writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n  writeClientsStructs(encoder, doc.store, targetStateVector)\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store))\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([0]), encoder = new UpdateEncoderV2()) => {\n  const targetStateVector = decodeStateVector(encodedTargetStateVector)\n  writeStateAsUpdate(encoder, doc, targetStateVector)\n  const updates = [encoder.toUint8Array()]\n  // also add the pending updates (if there are any)\n  if (doc.store.pendingDs) {\n    updates.push(doc.store.pendingDs)\n  }\n  if (doc.store.pendingStructs) {\n    updates.push(diffUpdateV2(doc.store.pendingStructs.update, encodedTargetStateVector))\n  }\n  if (updates.length > 1) {\n    if (encoder.constructor === UpdateEncoderV1) {\n      return mergeUpdates(updates.map((update, i) => i === 0 ? update : convertUpdateFormatV2ToV1(update)))\n    } else if (encoder.constructor === UpdateEncoderV2) {\n      return mergeUpdatesV2(updates)\n    }\n  }\n  return updates[0]\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdate = (doc, encodedTargetStateVector) => encodeStateAsUpdateV2(doc, encodedTargetStateVector, new UpdateEncoderV1())\n\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const readStateVector = decoder => {\n  const ss = new Map()\n  const ssLength = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < ssLength; i++) {\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const clock = decoding.readVarUint(decoder.restDecoder)\n    ss.set(client, clock)\n  }\n  return ss\n}\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\n// export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const decodeStateVector = decodedState => readStateVector(new DSDecoderV1(decoding.createDecoder(decodedState)))\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Map<number,number>} sv\n * @function\n */\nexport const writeStateVector = (encoder, sv) => {\n  encoding.writeVarUint(encoder.restEncoder, sv.size)\n  array.from(sv.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    encoding.writeVarUint(encoder.restEncoder, client) // @todo use a special client decoder that is based on mapping\n    encoding.writeVarUint(encoder.restEncoder, clock)\n  })\n  return encoder\n}\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Doc} doc\n *\n * @function\n */\nexport const writeDocumentStateVector = (encoder, doc) => writeStateVector(encoder, getStateVector(doc.store))\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVectorV2 = (doc, encoder = new DSEncoderV2()) => {\n  if (doc instanceof Map) {\n    writeStateVector(encoder, doc)\n  } else {\n    writeDocumentStateVector(encoder, doc)\n  }\n  return encoder.toUint8Array()\n}\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVector = doc => encodeStateVectorV2(doc, new DSEncoderV1())\n", "import * as f from 'lib0/function'\n\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nexport class EventHandler {\n  constructor () {\n    /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */\n    this.l = []\n  }\n}\n\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nexport const createEventHandler = () => new EventHandler()\n\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nexport const addEventHandlerListener = (eventHandler, f) =>\n  eventHandler.l.push(f)\n\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nexport const removeEventHandlerListener = (eventHandler, f) => {\n  const l = eventHandler.l\n  const len = l.length\n  eventHandler.l = l.filter(g => f !== g)\n  if (len === eventHandler.l.length) {\n    console.error('[yjs] Tried to remove event handler that doesn\\'t exist.')\n  }\n}\n\n/**\n * Removes all event listeners.\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n *\n * @private\n * @function\n */\nexport const removeAllEventHandlerListeners = eventHandler => {\n  eventHandler.l.length = 0\n}\n\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nexport const callEventHandlerListeners = (eventHandler, arg0, arg1) =>\n  f.callAll(eventHandler.l, [arg0, arg1])\n", "\nimport { AbstractType } from '../internals.js' // eslint-disable-line\n\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\nimport * as error from 'lib0/error'\n\nexport class ID {\n  /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */\n  constructor (client, clock) {\n    /**\n     * Client id\n     * @type {number}\n     */\n    this.client = client\n    /**\n     * unique per client id, continuous number\n     * @type {number}\n     */\n    this.clock = clock\n  }\n}\n\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock)\n\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nexport const createID = (client, clock) => new ID(client, clock)\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nexport const writeID = (encoder, id) => {\n  encoding.writeVarUint(encoder, id.client)\n  encoding.writeVarUint(encoder, id.clock)\n}\n\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nexport const readID = decoder =>\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder))\n\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nexport const findRootTypeKey = type => {\n  // @ts-ignore _y must be defined, otherwise unexpected case\n  for (const [key, value] of type.doc.share.entries()) {\n    if (value === type) {\n      return key\n    }\n  }\n  throw error.unexpectedCase()\n}\n", "\nimport { AbstractType, Item } from '../internals.js' // eslint-disable-line\n\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nexport const isParentOf = (parent, child) => {\n  while (child !== null) {\n    if (child.parent === parent) {\n      return true\n    }\n    child = /** @type {AbstractType<any>} */ (child.parent)._item\n  }\n  return false\n}\n", "\nimport {\n  AbstractType // eslint-disable-line\n} from '../internals.js'\n\n/**\n * Convenient helper to log type information.\n *\n * Do not use in productive systems as the output can be immense!\n *\n * @param {AbstractType<any>} type\n */\nexport const logType = type => {\n  const res = []\n  let n = type._start\n  while (n) {\n    res.push(n)\n    n = n.right\n  }\n  console.log('Children: ', res)\n  console.log('Children content: ', res.filter(m => !m.deleted).map(m => m.content))\n}\n", "\nimport {\n  YArray,\n  YMap,\n  readDeleteSet,\n  writeDeleteSet,\n  createDeleteSet,\n  DSEncoderV1, DSDecoderV1, ID, DeleteSet, YArrayEvent, Transaction, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as decoding from 'lib0/decoding'\n\nimport { mergeDeleteSets, isDeleted } from './DeleteSet.js'\n\nexport class PermanentUserData {\n  /**\n   * @param {Doc} doc\n   * @param {YMap<any>} [storeType]\n   */\n  constructor (doc, storeType = doc.getMap('users')) {\n    /**\n     * @type {Map<string,DeleteSet>}\n     */\n    const dss = new Map()\n    this.yusers = storeType\n    this.doc = doc\n    /**\n     * Maps from clientid to userDescription\n     *\n     * @type {Map<number,string>}\n     */\n    this.clients = new Map()\n    this.dss = dss\n    /**\n     * @param {YMap<any>} user\n     * @param {string} userDescription\n     */\n    const initUser = (user, userDescription) => {\n      /**\n       * @type {YArray<Uint8Array>}\n       */\n      const ds = user.get('ds')\n      const ids = user.get('ids')\n      const addClientId = /** @param {number} clientid */ clientid => this.clients.set(clientid, userDescription)\n      ds.observe(/** @param {YArrayEvent<any>} event */ event => {\n        event.changes.added.forEach(item => {\n          item.content.getContent().forEach(encodedDs => {\n            if (encodedDs instanceof Uint8Array) {\n              this.dss.set(userDescription, mergeDeleteSets([this.dss.get(userDescription) || createDeleteSet(), readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs)))]))\n            }\n          })\n        })\n      })\n      this.dss.set(userDescription, mergeDeleteSets(ds.map(encodedDs => readDeleteSet(new DSDecoderV1(decoding.createDecoder(encodedDs))))))\n      ids.observe(/** @param {YArrayEvent<any>} event */ event =>\n        event.changes.added.forEach(item => item.content.getContent().forEach(addClientId))\n      )\n      ids.forEach(addClientId)\n    }\n    // observe users\n    storeType.observe(event => {\n      event.keysChanged.forEach(userDescription =>\n        initUser(storeType.get(userDescription), userDescription)\n      )\n    })\n    // add intial data\n    storeType.forEach(initUser)\n  }\n\n  /**\n   * @param {Doc} doc\n   * @param {number} clientid\n   * @param {string} userDescription\n   * @param {Object} conf\n   * @param {function(Transaction, DeleteSet):boolean} [conf.filter]\n   */\n  setUserMapping (doc, clientid, userDescription, { filter = () => true } = {}) {\n    const users = this.yusers\n    let user = users.get(userDescription)\n    if (!user) {\n      user = new YMap()\n      user.set('ids', new YArray())\n      user.set('ds', new YArray())\n      users.set(userDescription, user)\n    }\n    user.get('ids').push([clientid])\n    users.observe(_event => {\n      setTimeout(() => {\n        const userOverwrite = users.get(userDescription)\n        if (userOverwrite !== user) {\n          // user was overwritten, port all data over to the next user object\n          // @todo Experiment with Y.Sets here\n          user = userOverwrite\n          // @todo iterate over old type\n          this.clients.forEach((_userDescription, clientid) => {\n            if (userDescription === _userDescription) {\n              user.get('ids').push([clientid])\n            }\n          })\n          const encoder = new DSEncoderV1()\n          const ds = this.dss.get(userDescription)\n          if (ds) {\n            writeDeleteSet(encoder, ds)\n            user.get('ds').push([encoder.toUint8Array()])\n          }\n        }\n      }, 0)\n    })\n    doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      setTimeout(() => {\n        const yds = user.get('ds')\n        const ds = transaction.deleteSet\n        if (transaction.local && ds.clients.size > 0 && filter(transaction, ds)) {\n          const encoder = new DSEncoderV1()\n          writeDeleteSet(encoder, ds)\n          yds.push([encoder.toUint8Array()])\n        }\n      })\n    })\n  }\n\n  /**\n   * @param {number} clientid\n   * @return {any}\n   */\n  getUserByClientId (clientid) {\n    return this.clients.get(clientid) || null\n  }\n\n  /**\n   * @param {ID} id\n   * @return {string | null}\n   */\n  getUserByDeletedId (id) {\n    for (const [userDescription, ds] of this.dss.entries()) {\n      if (isDeleted(ds, id)) {\n        return userDescription\n      }\n    }\n    return null\n  }\n}\n", "\nimport {\n  writeID,\n  readID,\n  compareIDs,\n  getState,\n  findRootTypeKey,\n  Item,\n  createID,\n  ContentType,\n  followRedone,\n  ID, Doc, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as error from 'lib0/error'\n\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *   // Current cursor position is at position 10\n *   const relativePosition = createRelativePositionFromIndex(yText, 10)\n *   // modify yText\n *   yText.insert(0, 'abc')\n *   yText.delete(3, 10)\n *   // Compute the cursor position\n *   const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *   absolutePosition.type === yText // => true\n *   console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */\nexport class RelativePosition {\n  /**\n   * @param {ID|null} type\n   * @param {string|null} tname\n   * @param {ID|null} item\n   * @param {number} assoc\n   */\n  constructor (type, tname, item, assoc = 0) {\n    /**\n     * @type {ID|null}\n     */\n    this.type = type\n    /**\n     * @type {string|null}\n     */\n    this.tname = tname\n    /**\n     * @type {ID | null}\n     */\n    this.item = item\n    /**\n     * A relative position is associated to a specific character. By default\n     * assoc >= 0, the relative position is associated to the character\n     * after the meant position.\n     * I.e. position 1 in 'ab' is associated to character 'b'.\n     *\n     * If assoc < 0, then the relative position is associated to the caharacter\n     * before the meant position.\n     *\n     * @type {number}\n     */\n    this.assoc = assoc\n  }\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {any}\n */\nexport const relativePositionToJSON = rpos => {\n  const json = {}\n  if (rpos.type) {\n    json.type = rpos.type\n  }\n  if (rpos.tname) {\n    json.tname = rpos.tname\n  }\n  if (rpos.item) {\n    json.item = rpos.item\n  }\n  if (rpos.assoc != null) {\n    json.assoc = rpos.assoc\n  }\n  return json\n}\n\n/**\n * @param {any} json\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromJSON = json => new RelativePosition(json.type == null ? null : createID(json.type.client, json.type.clock), json.tname || null, json.item == null ? null : createID(json.item.client, json.item.clock), json.assoc == null ? 0 : json.assoc)\n\nexport class AbsolutePosition {\n  /**\n   * @param {AbstractType<any>} type\n   * @param {number} index\n   * @param {number} [assoc]\n   */\n  constructor (type, index, assoc = 0) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n    /**\n     * @type {number}\n     */\n    this.index = index\n    this.assoc = assoc\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @param {number} [assoc]\n *\n * @function\n */\nexport const createAbsolutePosition = (type, index, assoc = 0) => new AbsolutePosition(type, index, assoc)\n\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n * @param {number} [assoc]\n *\n * @function\n */\nexport const createRelativePosition = (type, item, assoc) => {\n  let typeid = null\n  let tname = null\n  if (type._item === null) {\n    tname = findRootTypeKey(type)\n  } else {\n    typeid = createID(type._item.id.client, type._item.id.clock)\n  }\n  return new RelativePosition(typeid, tname, item, assoc)\n}\n\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @param {number} [assoc]\n * @return {RelativePosition}\n *\n * @function\n */\nexport const createRelativePositionFromTypeIndex = (type, index, assoc = 0) => {\n  let t = type._start\n  if (assoc < 0) {\n    // associated to the left character or the beginning of a type, increment index if possible.\n    if (index === 0) {\n      return createRelativePosition(type, null, assoc)\n    }\n    index--\n  }\n  while (t !== null) {\n    if (!t.deleted && t.countable) {\n      if (t.length > index) {\n        // case 1: found position somewhere in the linked list\n        return createRelativePosition(type, createID(t.id.client, t.id.clock + index), assoc)\n      }\n      index -= t.length\n    }\n    if (t.right === null && assoc < 0) {\n      // left-associated position, return last available id\n      return createRelativePosition(type, t.lastId, assoc)\n    }\n    t = t.right\n  }\n  return createRelativePosition(type, null, assoc)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */\nexport const writeRelativePosition = (encoder, rpos) => {\n  const { type, tname, item, assoc } = rpos\n  if (item !== null) {\n    encoding.writeVarUint(encoder, 0)\n    writeID(encoder, item)\n  } else if (tname !== null) {\n    // case 2: found position at the end of the list and type is stored in y.share\n    encoding.writeUint8(encoder, 1)\n    encoding.writeVarString(encoder, tname)\n  } else if (type !== null) {\n    // case 3: found position at the end of the list and type is attached to an item\n    encoding.writeUint8(encoder, 2)\n    writeID(encoder, type)\n  } else {\n    throw error.unexpectedCase()\n  }\n  encoding.writeVarInt(encoder, assoc)\n  return encoder\n}\n\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */\nexport const encodeRelativePosition = rpos => {\n  const encoder = encoding.createEncoder()\n  writeRelativePosition(encoder, rpos)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition}\n *\n * @function\n */\nexport const readRelativePosition = decoder => {\n  let type = null\n  let tname = null\n  let itemID = null\n  switch (decoding.readVarUint(decoder)) {\n    case 0:\n      // case 1: found position somewhere in the linked list\n      itemID = readID(decoder)\n      break\n    case 1:\n      // case 2: found position at the end of the list and type is stored in y.share\n      tname = decoding.readVarString(decoder)\n      break\n    case 2: {\n      // case 3: found position at the end of the list and type is attached to an item\n      type = readID(decoder)\n    }\n  }\n  const assoc = decoding.hasContent(decoder) ? decoding.readVarInt(decoder) : 0\n  return new RelativePosition(type, tname, itemID, assoc)\n}\n\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition}\n */\nexport const decodeRelativePosition = uint8Array => readRelativePosition(decoding.createDecoder(uint8Array))\n\n/**\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @return {AbsolutePosition|null}\n *\n * @function\n */\nexport const createAbsolutePositionFromRelativePosition = (rpos, doc) => {\n  const store = doc.store\n  const rightID = rpos.item\n  const typeID = rpos.type\n  const tname = rpos.tname\n  const assoc = rpos.assoc\n  let type = null\n  let index = 0\n  if (rightID !== null) {\n    if (getState(store, rightID.client) <= rightID.clock) {\n      return null\n    }\n    const res = followRedone(store, rightID)\n    const right = res.item\n    if (!(right instanceof Item)) {\n      return null\n    }\n    type = /** @type {AbstractType<any>} */ (right.parent)\n    if (type._item === null || !type._item.deleted) {\n      index = (right.deleted || !right.countable) ? 0 : (res.diff + (assoc >= 0 ? 0 : 1)) // adjust position based on left association if necessary\n      let n = right.left\n      while (n !== null) {\n        if (!n.deleted && n.countable) {\n          index += n.length\n        }\n        n = n.left\n      }\n    }\n  } else {\n    if (tname !== null) {\n      type = doc.get(tname)\n    } else if (typeID !== null) {\n      if (getState(store, typeID.client) <= typeID.clock) {\n        // type does not exist yet\n        return null\n      }\n      const { item } = followRedone(store, typeID)\n      if (item instanceof Item && item.content instanceof ContentType) {\n        type = item.content.type\n      } else {\n        // struct is garbage collected\n        return null\n      }\n    } else {\n      throw error.unexpectedCase()\n    }\n    if (assoc >= 0) {\n      index = type._length\n    } else {\n      index = 0\n    }\n  }\n  return createAbsolutePosition(type, index, rpos.assoc)\n}\n\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareRelativePositions = (a, b) => a === b || (\n  a !== null && b !== null && a.tname === b.tname && compareIDs(a.item, b.item) && compareIDs(a.type, b.type) && a.assoc === b.assoc\n)\n", "\nimport {\n  isDeleted,\n  createDeleteSetFromStructStore,\n  getStateVector,\n  getItemCleanStart,\n  iterateDeletedStructs,\n  writeDeleteSet,\n  writeStateVector,\n  readDeleteSet,\n  readStateVector,\n  createDeleteSet,\n  createID,\n  getState,\n  findIndexSS,\n  UpdateEncoderV2,\n  applyUpdateV2,\n  LazyStructReader,\n  equalDeleteSets,\n  UpdateDecoderV1, UpdateDecoderV2, DSEncoderV1, DSEncoderV2, DSDecoderV1, DSDecoderV2, Transaction, Doc, DeleteSet, Item, // eslint-disable-line\n  mergeDeleteSets\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as set from 'lib0/set'\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\n\nexport class Snapshot {\n  /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sv state map\n   */\n  constructor (ds, sv) {\n    /**\n     * @type {DeleteSet}\n     */\n    this.ds = ds\n    /**\n     * State Map\n     * @type {Map<number,number>}\n     */\n    this.sv = sv\n  }\n}\n\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */\nexport const equalSnapshots = (snap1, snap2) => {\n  const ds1 = snap1.ds.clients\n  const ds2 = snap2.ds.clients\n  const sv1 = snap1.sv\n  const sv2 = snap2.sv\n  if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\n    return false\n  }\n  for (const [key, value] of sv1.entries()) {\n    if (sv2.get(key) !== value) {\n      return false\n    }\n  }\n  for (const [client, dsitems1] of ds1.entries()) {\n    const dsitems2 = ds2.get(client) || []\n    if (dsitems1.length !== dsitems2.length) {\n      return false\n    }\n    for (let i = 0; i < dsitems1.length; i++) {\n      const dsitem1 = dsitems1[i]\n      const dsitem2 = dsitems2[i]\n      if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\n/**\n * @param {Snapshot} snapshot\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n */\nexport const encodeSnapshotV2 = (snapshot, encoder = new DSEncoderV2()) => {\n  writeDeleteSet(encoder, snapshot.ds)\n  writeStateVector(encoder, snapshot.sv)\n  return encoder.toUint8Array()\n}\n\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */\nexport const encodeSnapshot = snapshot => encodeSnapshotV2(snapshot, new DSEncoderV1())\n\n/**\n * @param {Uint8Array} buf\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\n * @return {Snapshot}\n */\nexport const decodeSnapshotV2 = (buf, decoder = new DSDecoderV2(decoding.createDecoder(buf))) => {\n  return new Snapshot(readDeleteSet(decoder), readStateVector(decoder))\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */\nexport const decodeSnapshot = buf => decodeSnapshotV2(buf, new DSDecoderV1(decoding.createDecoder(buf)))\n\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */\nexport const createSnapshot = (ds, sm) => new Snapshot(ds, sm)\n\nexport const emptySnapshot = createSnapshot(createDeleteSet(), new Map())\n\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */\nexport const snapshot = doc => createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store))\n\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nexport const isVisible = (item, snapshot) => snapshot === undefined\n  ? !item.deleted\n  : snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id)\n\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */\nexport const splitSnapshotAffectedStructs = (transaction, snapshot) => {\n  const meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create)\n  const store = transaction.doc.store\n  // check if we already split for this snapshot\n  if (!meta.has(snapshot)) {\n    snapshot.sv.forEach((clock, client) => {\n      if (clock < getState(store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n    })\n    iterateDeletedStructs(transaction, snapshot.ds, _item => {})\n    meta.add(snapshot)\n  }\n}\n\n/**\n * @example\n *  const ydoc = new Y.Doc({ gc: false })\n *  ydoc.getText().insert(0, 'world!')\n *  const snapshot = Y.snapshot(ydoc)\n *  ydoc.getText().insert(0, 'hello ')\n *  const restored = Y.createDocFromSnapshot(ydoc, snapshot)\n *  assert(restored.getText().toString() === 'world!')\n *\n * @param {Doc} originDoc\n * @param {Snapshot} snapshot\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\n * @return {Doc}\n */\nexport const createDocFromSnapshot = (originDoc, snapshot, newDoc = new Doc()) => {\n  if (originDoc.gc) {\n    // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\n    throw new Error('Garbage-collection must be disabled in `originDoc`!')\n  }\n  const { sv, ds } = snapshot\n\n  const encoder = new UpdateEncoderV2()\n  originDoc.transact(transaction => {\n    let size = 0\n    sv.forEach(clock => {\n      if (clock > 0) {\n        size++\n      }\n    })\n    encoding.writeVarUint(encoder.restEncoder, size)\n    // splitting the structs before writing them to the encoder\n    for (const [client, clock] of sv) {\n      if (clock === 0) {\n        continue\n      }\n      if (clock < getState(originDoc.store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n      const structs = originDoc.store.clients.get(client) || []\n      const lastStructIndex = findIndexSS(structs, clock - 1)\n      // write # encoded structs\n      encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1)\n      encoder.writeClient(client)\n      // first clock written is 0\n      encoding.writeVarUint(encoder.restEncoder, 0)\n      for (let i = 0; i <= lastStructIndex; i++) {\n        structs[i].write(encoder, 0)\n      }\n    }\n    writeDeleteSet(encoder, ds)\n  })\n\n  applyUpdateV2(newDoc, encoder.toUint8Array(), 'snapshot')\n  return newDoc\n}\n\n/**\n * @param {Snapshot} snapshot\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n */\nexport const snapshotContainsUpdateV2 = (snapshot, update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n    if ((snapshot.sv.get(curr.id.client) || 0) < curr.id.clock + curr.length) {\n      return false\n    }\n  }\n  const mergedDS = mergeDeleteSets([snapshot.ds, readDeleteSet(updateDecoder)])\n  return equalDeleteSets(snapshot.ds, mergedDS)\n}\n\n/**\n * @param {Snapshot} snapshot\n * @param {Uint8Array} update\n */\nexport const snapshotContainsUpdate = (snapshot, update) => snapshotContainsUpdateV2(snapshot, update, UpdateDecoderV1)\n", "\nimport {\n  GC,\n  splitItem,\n  Transaction, ID, Item, DSDecoderV2 // eslint-disable-line\n} from '../internals.js'\n\nimport * as math from 'lib0/math'\nimport * as error from 'lib0/error'\n\nexport class StructStore {\n  constructor () {\n    /**\n     * @type {Map<number,Array<GC|Item>>}\n     */\n    this.clients = new Map()\n    /**\n     * @type {null | { missing: Map<number, number>, update: Uint8Array }}\n     */\n    this.pendingStructs = null\n    /**\n     * @type {null | Uint8Array}\n     */\n    this.pendingDs = null\n  }\n}\n\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nexport const getStateVector = store => {\n  const sm = new Map()\n  store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1]\n    sm.set(client, struct.id.clock + struct.length)\n  })\n  return sm\n}\n\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nexport const getState = (store, client) => {\n  const structs = store.clients.get(client)\n  if (structs === undefined) {\n    return 0\n  }\n  const lastStruct = structs[structs.length - 1]\n  return lastStruct.id.clock + lastStruct.length\n}\n\n/**\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nexport const integretyCheck = store => {\n  store.clients.forEach(structs => {\n    for (let i = 1; i < structs.length; i++) {\n      const l = structs[i - 1]\n      const r = structs[i]\n      if (l.id.clock + l.length !== r.id.clock) {\n        throw new Error('StructStore failed integrety check')\n      }\n    }\n  })\n}\n\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nexport const addStruct = (store, struct) => {\n  let structs = store.clients.get(struct.id.client)\n  if (structs === undefined) {\n    structs = []\n    store.clients.set(struct.id.client, structs)\n  } else {\n    const lastStruct = structs[structs.length - 1]\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n      throw error.unexpectedCase()\n    }\n  }\n  structs.push(struct)\n}\n\n/**\n * Perform a binary search on a sorted array\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nexport const findIndexSS = (structs, clock) => {\n  let left = 0\n  let right = structs.length - 1\n  let mid = structs[right]\n  let midclock = mid.id.clock\n  if (midclock === clock) {\n    return right\n  }\n  // @todo does it even make sense to pivot the search?\n  // If a good split misses, it might actually increase the time to find the correct item.\n  // Currently, the only advantage is that search with pivoting might find the item on the first try.\n  let midindex = math.floor((clock / (midclock + mid.length - 1)) * right) // pivoting the search\n  while (left <= right) {\n    mid = structs[midindex]\n    midclock = mid.id.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.length) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n    midindex = math.floor((left + right) / 2)\n  }\n  // Always check state before looking for a struct in StructStore\n  // Therefore the case of not finding a struct is unexpected\n  throw error.unexpectedCase()\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nexport const find = (store, id) => {\n  /**\n   * @type {Array<GC|Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  return structs[findIndexSS(structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n * @private\n * @function\n */\nexport const getItem = /** @type {function(StructStore,ID):Item} */ (find)\n\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nexport const findIndexCleanStart = (transaction, structs, clock) => {\n  const index = findIndexSS(structs, clock)\n  const struct = structs[index]\n  if (struct.id.clock < clock && struct instanceof Item) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n    return index + 1\n  }\n  return index\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanStart = (transaction, id) => {\n  const structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client))\n  return structs[findIndexCleanStart(transaction, structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanEnd = (transaction, store, id) => {\n  /**\n   * @type {Array<Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  const index = findIndexSS(structs, id.clock)\n  const struct = structs[index]\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1))\n  }\n  return struct\n}\n\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nexport const replaceStruct = (store, struct, newStruct) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client))\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct\n}\n\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateStructs = (transaction, structs, clockStart, len, f) => {\n  if (len === 0) {\n    return\n  }\n  const clockEnd = clockStart + len\n  let index = findIndexCleanStart(transaction, structs, clockStart)\n  let struct\n  do {\n    struct = structs[index++]\n    if (clockEnd < struct.id.clock + struct.length) {\n      findIndexCleanStart(transaction, structs, clockEnd)\n    }\n    f(struct)\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\n}\n", "\nimport {\n  getState,\n  writeStructsFromTransaction,\n  writeDeleteSet,\n  DeleteSet,\n  sortAndMergeDeleteSet,\n  getStateVector,\n  findIndexSS,\n  callEventHandlerListeners,\n  Item,\n  generateNewClientId,\n  createID,\n  cleanupYTextAfterTransaction,\n  UpdateEncoderV1, UpdateEncoderV2, GC, StructStore, AbstractType, AbstractStruct, YEvent, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as set from 'lib0/set'\nimport * as logging from 'lib0/logging'\nimport { callAll } from 'lib0/function'\n\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const map = y.define('map', YMap)\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * y.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nexport class Transaction {\n  /**\n   * @param {Doc} doc\n   * @param {any} origin\n   * @param {boolean} local\n   */\n  constructor (doc, origin, local) {\n    /**\n     * The Yjs instance.\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */\n    this.deleteSet = new DeleteSet()\n    /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */\n    this.beforeState = getStateVector(doc.store)\n    /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */\n    this.afterState = new Map()\n    /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent<any>>,Set<String|null>>}\n     */\n    this.changed = new Map()\n    /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent<any>>,Array<YEvent<any>>>}\n     */\n    this.changedParentTypes = new Map()\n    /**\n     * @type {Array<AbstractStruct>}\n     */\n    this._mergeStructs = []\n    /**\n     * @type {any}\n     */\n    this.origin = origin\n    /**\n     * Stores meta information on the transaction\n     * @type {Map<any,any>}\n     */\n    this.meta = new Map()\n    /**\n     * Whether this change originates from this doc.\n     * @type {boolean}\n     */\n    this.local = local\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsAdded = new Set()\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsRemoved = new Set()\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsLoaded = new Set()\n    /**\n     * @type {boolean}\n     */\n    this._needFormattingCleanup = false\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n * @return {boolean} Whether data was written.\n */\nexport const writeUpdateMessageFromTransaction = (encoder, transaction) => {\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n    return false\n  }\n  sortAndMergeDeleteSet(transaction.deleteSet)\n  writeStructsFromTransaction(encoder, transaction)\n  writeDeleteSet(encoder, transaction.deleteSet)\n  return true\n}\n\n/**\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const nextID = transaction => {\n  const y = transaction.doc\n  return createID(y.clientID, getState(y.store, y.clientID))\n}\n\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent<any>>} type\n * @param {string|null} parentSub\n */\nexport const addChangedTypeToTransaction = (transaction, type, parentSub) => {\n  const item = type._item\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub)\n  }\n}\n\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n * @return {number} # of merged structs\n */\nconst tryToMergeWithLefts = (structs, pos) => {\n  let right = structs[pos]\n  let left = structs[pos - 1]\n  let i = pos\n  for (; i > 0; right = left, left = structs[--i - 1]) {\n    if (left.deleted === right.deleted && left.constructor === right.constructor) {\n      if (left.mergeWith(right)) {\n        if (right instanceof Item && right.parentSub !== null && /** @type {AbstractType<any>} */ (right.parent)._map.get(right.parentSub) === right) {\n          /** @type {AbstractType<any>} */ (right.parent)._map.set(right.parentSub, /** @type {Item} */ (left))\n        }\n        continue\n      }\n    }\n    break\n  }\n  const merged = pos - i\n  if (merged) {\n    // remove all merged structs from the array\n    structs.splice(pos + 1 - merged, merged)\n  }\n  return merged\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\n  for (const [client, deleteItems] of ds.clients.entries()) {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      const endDeleteItemClock = deleteItem.clock + deleteItem.len\n      for (\n        let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\n        si < structs.length && struct.id.clock < endDeleteItemClock;\n        struct = structs[++si]\n      ) {\n        const struct = structs[si]\n        if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n          break\n        }\n        if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) {\n          struct.gc(store, false)\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */\nconst tryMergeDeleteSet = (ds, store) => {\n  // try to merge deleted / gc'd items\n  // merge from right to left for better efficiecy and so we don't miss any merge targets\n  ds.clients.forEach((deleteItems, client) => {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      // start with merging the item next to the last deleted item\n      const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1))\n      for (\n        let si = mostRightIndexToCheck, struct = structs[si];\n        si > 0 && struct.id.clock >= deleteItem.clock;\n        struct = structs[si]\n      ) {\n        si -= 1 + tryToMergeWithLefts(structs, si)\n      }\n    }\n  })\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nexport const tryGc = (ds, store, gcFilter) => {\n  tryGcDeleteSet(ds, store, gcFilter)\n  tryMergeDeleteSet(ds, store)\n}\n\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */\nconst cleanupTransactions = (transactionCleanups, i) => {\n  if (i < transactionCleanups.length) {\n    const transaction = transactionCleanups[i]\n    const doc = transaction.doc\n    const store = doc.store\n    const ds = transaction.deleteSet\n    const mergeStructs = transaction._mergeStructs\n    try {\n      sortAndMergeDeleteSet(ds)\n      transaction.afterState = getStateVector(transaction.doc.store)\n      doc.emit('beforeObserverCalls', [transaction, doc])\n      /**\n       * An array of event callbacks.\n       *\n       * Each callback is called even if the other ones throw errors.\n       *\n       * @type {Array<function():void>}\n       */\n      const fs = []\n      // observe events on changed types\n      transaction.changed.forEach((subs, itemtype) =>\n        fs.push(() => {\n          if (itemtype._item === null || !itemtype._item.deleted) {\n            itemtype._callObserver(transaction, subs)\n          }\n        })\n      )\n      fs.push(() => {\n        // deep observe events\n        transaction.changedParentTypes.forEach((events, type) => {\n          // We need to think about the possibility that the user transforms the\n          // Y.Doc in the event.\n          if (type._dEH.l.length > 0 && (type._item === null || !type._item.deleted)) {\n            events = events\n              .filter(event =>\n                event.target._item === null || !event.target._item.deleted\n              )\n            events\n              .forEach(event => {\n                event.currentTarget = type\n                // path is relative to the current target\n                event._path = null\n              })\n            // sort events by path length so that top-level events are fired first.\n            events\n              .sort((event1, event2) => event1.path.length - event2.path.length)\n            // We don't need to check for events.length\n            // because we know it has at least one element\n            callEventHandlerListeners(type._dEH, events, transaction)\n          }\n        })\n      })\n      fs.push(() => doc.emit('afterTransaction', [transaction, doc]))\n      callAll(fs, [])\n      if (transaction._needFormattingCleanup) {\n        cleanupYTextAfterTransaction(transaction)\n      }\n    } finally {\n      // Replace deleted items with ItemDeleted / GC.\n      // This is where content is actually remove from the Yjs Doc.\n      if (doc.gc) {\n        tryGcDeleteSet(ds, store, doc.gcFilter)\n      }\n      tryMergeDeleteSet(ds, store)\n\n      // on all affected store.clients props, try to merge\n      transaction.afterState.forEach((clock, client) => {\n        const beforeClock = transaction.beforeState.get(client) || 0\n        if (beforeClock !== clock) {\n          const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n          // we iterate from right to left so we can safely remove entries\n          const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1)\n          for (let i = structs.length - 1; i >= firstChangePos;) {\n            i -= 1 + tryToMergeWithLefts(structs, i)\n          }\n        }\n      })\n      // try to merge mergeStructs\n      // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n      //        but at the moment DS does not handle duplicates\n      for (let i = mergeStructs.length - 1; i >= 0; i--) {\n        const { client, clock } = mergeStructs[i].id\n        const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n        const replacedStructPos = findIndexSS(structs, clock)\n        if (replacedStructPos + 1 < structs.length) {\n          if (tryToMergeWithLefts(structs, replacedStructPos + 1) > 1) {\n            continue // no need to perform next check, both are already merged\n          }\n        }\n        if (replacedStructPos > 0) {\n          tryToMergeWithLefts(structs, replacedStructPos)\n        }\n      }\n      if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\n        logging.print(logging.ORANGE, logging.BOLD, '[yjs] ', logging.UNBOLD, logging.RED, 'Changed the client-id because another client seems to be using it.')\n        doc.clientID = generateNewClientId()\n      }\n      // @todo Merge all the transactions into one and provide send the data as a single update message\n      doc.emit('afterTransactionCleanup', [transaction, doc])\n      if (doc._observers.has('update')) {\n        const encoder = new UpdateEncoderV1()\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\n        if (hasContent) {\n          doc.emit('update', [encoder.toUint8Array(), transaction.origin, doc, transaction])\n        }\n      }\n      if (doc._observers.has('updateV2')) {\n        const encoder = new UpdateEncoderV2()\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\n        if (hasContent) {\n          doc.emit('updateV2', [encoder.toUint8Array(), transaction.origin, doc, transaction])\n        }\n      }\n      const { subdocsAdded, subdocsLoaded, subdocsRemoved } = transaction\n      if (subdocsAdded.size > 0 || subdocsRemoved.size > 0 || subdocsLoaded.size > 0) {\n        subdocsAdded.forEach(subdoc => {\n          subdoc.clientID = doc.clientID\n          if (subdoc.collectionid == null) {\n            subdoc.collectionid = doc.collectionid\n          }\n          doc.subdocs.add(subdoc)\n        })\n        subdocsRemoved.forEach(subdoc => doc.subdocs.delete(subdoc))\n        doc.emit('subdocs', [{ loaded: subdocsLoaded, added: subdocsAdded, removed: subdocsRemoved }, doc, transaction])\n        subdocsRemoved.forEach(subdoc => subdoc.destroy())\n      }\n\n      if (transactionCleanups.length <= i + 1) {\n        doc._transactionCleanups = []\n        doc.emit('afterAllTransactions', [doc, transactionCleanups])\n      } else {\n        cleanupTransactions(transactionCleanups, i + 1)\n      }\n    }\n  }\n}\n\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @template T\n * @param {Doc} doc\n * @param {function(Transaction):T} f\n * @param {any} [origin=true]\n * @return {T}\n *\n * @function\n */\nexport const transact = (doc, f, origin = null, local = true) => {\n  const transactionCleanups = doc._transactionCleanups\n  let initialCall = false\n  /**\n   * @type {any}\n   */\n  let result = null\n  if (doc._transaction === null) {\n    initialCall = true\n    doc._transaction = new Transaction(doc, origin, local)\n    transactionCleanups.push(doc._transaction)\n    if (transactionCleanups.length === 1) {\n      doc.emit('beforeAllTransactions', [doc])\n    }\n    doc.emit('beforeTransaction', [doc._transaction, doc])\n  }\n  try {\n    result = f(doc._transaction)\n  } finally {\n    if (initialCall) {\n      const finishCleanup = doc._transaction === transactionCleanups[0]\n      doc._transaction = null\n      if (finishCleanup) {\n        // The first transaction ended, now process observer calls.\n        // Observer call may create new transactions for which we need to call the observers and do cleanup.\n        // We don't want to nest these calls, so we execute these calls one after\n        // another.\n        // Also we need to ensure that all cleanups are called, even if the\n        // observes throw errors.\n        // This file is full of hacky try {} finally {} blocks to ensure that an\n        // event can throw errors and also that the cleanup is called.\n        cleanupTransactions(transactionCleanups, 0)\n      }\n    }\n  }\n  return result\n}\n", "import {\n  mergeDeleteSets,\n  iterateDeletedStructs,\n  keepItem,\n  transact,\n  createID,\n  redoItem,\n  isParentOf,\n  followRedone,\n  getItemCleanStart,\n  isDeleted,\n  addToDeleteSet,\n  Transaction, Doc, Item, GC, DeleteSet, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as time from 'lib0/time'\nimport * as array from 'lib0/array'\nimport * as logging from 'lib0/logging'\nimport { Observable } from 'lib0/observable'\n\nexport class StackItem {\n  /**\n   * @param {DeleteSet} deletions\n   * @param {DeleteSet} insertions\n   */\n  constructor (deletions, insertions) {\n    this.insertions = insertions\n    this.deletions = deletions\n    /**\n     * Use this to save and restore metadata like selection range\n     */\n    this.meta = new Map()\n  }\n}\n/**\n * @param {Transaction} tr\n * @param {UndoManager} um\n * @param {StackItem} stackItem\n */\nconst clearUndoManagerStackItem = (tr, um, stackItem) => {\n  iterateDeletedStructs(tr, stackItem.deletions, item => {\n    if (item instanceof Item && um.scope.some(type => isParentOf(type, item))) {\n      keepItem(item, false)\n    }\n  })\n}\n\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {string} eventType\n * @return {StackItem?}\n */\nconst popStackItem = (undoManager, stack, eventType) => {\n  /**\n   * Whether a change happened\n   * @type {StackItem?}\n   */\n  let result = null\n  /**\n   * Keep a reference to the transaction so we can fire the event with the changedParentTypes\n   * @type {any}\n   */\n  let _tr = null\n  const doc = undoManager.doc\n  const scope = undoManager.scope\n  transact(doc, transaction => {\n    while (stack.length > 0 && result === null) {\n      const store = doc.store\n      const stackItem = /** @type {StackItem} */ (stack.pop())\n      /**\n       * @type {Set<Item>}\n       */\n      const itemsToRedo = new Set()\n      /**\n       * @type {Array<Item>}\n       */\n      const itemsToDelete = []\n      let performedChange = false\n      iterateDeletedStructs(transaction, stackItem.insertions, struct => {\n        if (struct instanceof Item) {\n          if (struct.redone !== null) {\n            let { item, diff } = followRedone(store, struct.id)\n            if (diff > 0) {\n              item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff))\n            }\n            struct = item\n          }\n          if (!struct.deleted && scope.some(type => isParentOf(type, /** @type {Item} */ (struct)))) {\n            itemsToDelete.push(struct)\n          }\n        }\n      })\n      iterateDeletedStructs(transaction, stackItem.deletions, struct => {\n        if (\n          struct instanceof Item &&\n          scope.some(type => isParentOf(type, struct)) &&\n          // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\n          !isDeleted(stackItem.insertions, struct.id)\n        ) {\n          itemsToRedo.add(struct)\n        }\n      })\n      itemsToRedo.forEach(struct => {\n        performedChange = redoItem(transaction, struct, itemsToRedo, stackItem.insertions, undoManager.ignoreRemoteMapChanges, undoManager) !== null || performedChange\n      })\n      // We want to delete in reverse order so that children are deleted before\n      // parents, so we have more information available when items are filtered.\n      for (let i = itemsToDelete.length - 1; i >= 0; i--) {\n        const item = itemsToDelete[i]\n        if (undoManager.deleteFilter(item)) {\n          item.delete(transaction)\n          performedChange = true\n        }\n      }\n      result = performedChange ? stackItem : null\n    }\n    transaction.changed.forEach((subProps, type) => {\n      // destroy search marker if necessary\n      if (subProps.has(null) && type._searchMarker) {\n        type._searchMarker.length = 0\n      }\n    })\n    _tr = transaction\n  }, undoManager)\n  if (result != null) {\n    const changedParentTypes = _tr.changedParentTypes\n    undoManager.emit('stack-item-popped', [{ stackItem: result, type: eventType, changedParentTypes }, undoManager])\n  }\n  return result\n}\n\n/**\n * @typedef {Object} UndoManagerOptions\n * @property {number} [UndoManagerOptions.captureTimeout=500]\n * @property {function(Transaction):boolean} [UndoManagerOptions.captureTransaction] Do not capture changes of a Transaction if result false.\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\n * it is necessary to filter what an Undo/Redo operation can delete. If this\n * filter returns false, the type/item won't be deleted even it is in the\n * undo/redo scope.\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\n * @property {boolean} [ignoreRemoteMapChanges] Experimental. By default, the UndoManager will never overwrite remote changes. Enable this property to enable overwriting remote changes on key-value changes (Y.Map, properties on Y.Xml, etc..).\n * @property {Doc} [doc] The document that this UndoManager operates on. Only needed if typeScope is empty.\n */\n\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {Observable<'stack-item-added'|'stack-item-popped'|'stack-cleared'|'stack-item-updated'>}\n */\nexport class UndoManager extends Observable {\n  /**\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n   * @param {UndoManagerOptions} options\n   */\n  constructor (typeScope, {\n    captureTimeout = 500,\n    captureTransaction = _tr => true,\n    deleteFilter = () => true,\n    trackedOrigins = new Set([null]),\n    ignoreRemoteMapChanges = false,\n    doc = /** @type {Doc} */ (array.isArray(typeScope) ? typeScope[0].doc : typeScope.doc)\n  } = {}) {\n    super()\n    /**\n     * @type {Array<AbstractType<any>>}\n     */\n    this.scope = []\n    this.doc = doc\n    this.addToScope(typeScope)\n    this.deleteFilter = deleteFilter\n    trackedOrigins.add(this)\n    this.trackedOrigins = trackedOrigins\n    this.captureTransaction = captureTransaction\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.undoStack = []\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.redoStack = []\n    /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */\n    this.undoing = false\n    this.redoing = false\n    this.lastChange = 0\n    this.ignoreRemoteMapChanges = ignoreRemoteMapChanges\n    this.captureTimeout = captureTimeout\n    /**\n     * @param {Transaction} transaction\n     */\n    this.afterTransactionHandler = transaction => {\n      // Only track certain transactions\n      if (\n        !this.captureTransaction(transaction) ||\n        !this.scope.some(type => transaction.changedParentTypes.has(type)) ||\n        (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))\n      ) {\n        return\n      }\n      const undoing = this.undoing\n      const redoing = this.redoing\n      const stack = undoing ? this.redoStack : this.undoStack\n      if (undoing) {\n        this.stopCapturing() // next undo should not be appended to last stack item\n      } else if (!redoing) {\n        // neither undoing nor redoing: delete redoStack\n        this.clear(false, true)\n      }\n      const insertions = new DeleteSet()\n      transaction.afterState.forEach((endClock, client) => {\n        const startClock = transaction.beforeState.get(client) || 0\n        const len = endClock - startClock\n        if (len > 0) {\n          addToDeleteSet(insertions, client, startClock, len)\n        }\n      })\n      const now = time.getUnixTime()\n      let didAdd = false\n      if (this.lastChange > 0 && now - this.lastChange < this.captureTimeout && stack.length > 0 && !undoing && !redoing) {\n        // append change to last stack op\n        const lastOp = stack[stack.length - 1]\n        lastOp.deletions = mergeDeleteSets([lastOp.deletions, transaction.deleteSet])\n        lastOp.insertions = mergeDeleteSets([lastOp.insertions, insertions])\n      } else {\n        // create a new stack op\n        stack.push(new StackItem(transaction.deleteSet, insertions))\n        didAdd = true\n      }\n      if (!undoing && !redoing) {\n        this.lastChange = now\n      }\n      // make sure that deleted structs are not gc'd\n      iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ item => {\n        if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n          keepItem(item, true)\n        }\n      })\n      const changeEvent = [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo', changedParentTypes: transaction.changedParentTypes }, this]\n      if (didAdd) {\n        this.emit('stack-item-added', changeEvent)\n      } else {\n        this.emit('stack-item-updated', changeEvent)\n      }\n    }\n    this.doc.on('afterTransaction', this.afterTransactionHandler)\n    this.doc.on('destroy', () => {\n      this.destroy()\n    })\n  }\n\n  /**\n   * @param {Array<AbstractType<any>> | AbstractType<any>} ytypes\n   */\n  addToScope (ytypes) {\n    ytypes = array.isArray(ytypes) ? ytypes : [ytypes]\n    ytypes.forEach(ytype => {\n      if (this.scope.every(yt => yt !== ytype)) {\n        if (ytype.doc !== this.doc) logging.warn('[yjs#509] Not same Y.Doc') // use MultiDocUndoManager instead. also see https://github.com/yjs/yjs/issues/509\n        this.scope.push(ytype)\n      }\n    })\n  }\n\n  /**\n   * @param {any} origin\n   */\n  addTrackedOrigin (origin) {\n    this.trackedOrigins.add(origin)\n  }\n\n  /**\n   * @param {any} origin\n   */\n  removeTrackedOrigin (origin) {\n    this.trackedOrigins.delete(origin)\n  }\n\n  clear (clearUndoStack = true, clearRedoStack = true) {\n    if ((clearUndoStack && this.canUndo()) || (clearRedoStack && this.canRedo())) {\n      this.doc.transact(tr => {\n        if (clearUndoStack) {\n          this.undoStack.forEach(item => clearUndoManagerStackItem(tr, this, item))\n          this.undoStack = []\n        }\n        if (clearRedoStack) {\n          this.redoStack.forEach(item => clearUndoManagerStackItem(tr, this, item))\n          this.redoStack = []\n        }\n        this.emit('stack-cleared', [{ undoStackCleared: clearUndoStack, redoStackCleared: clearRedoStack }])\n      })\n    }\n  }\n\n  /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */\n  stopCapturing () {\n    this.lastChange = 0\n  }\n\n  /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  undo () {\n    this.undoing = true\n    let res\n    try {\n      res = popStackItem(this, this.undoStack, 'undo')\n    } finally {\n      this.undoing = false\n    }\n    return res\n  }\n\n  /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  redo () {\n    this.redoing = true\n    let res\n    try {\n      res = popStackItem(this, this.redoStack, 'redo')\n    } finally {\n      this.redoing = false\n    }\n    return res\n  }\n\n  /**\n   * Are undo steps available?\n   *\n   * @return {boolean} `true` if undo is possible\n   */\n  canUndo () {\n    return this.undoStack.length > 0\n  }\n\n  /**\n   * Are redo steps available?\n   *\n   * @return {boolean} `true` if redo is possible\n   */\n  canRedo () {\n    return this.redoStack.length > 0\n  }\n\n  destroy () {\n    this.trackedOrigins.delete(this)\n    this.doc.off('afterTransaction', this.afterTransactionHandler)\n    super.destroy()\n  }\n}\n", "\nimport * as binary from 'lib0/binary'\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\nimport * as error from 'lib0/error'\nimport * as f from 'lib0/function'\nimport * as logging from 'lib0/logging'\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as string from 'lib0/string'\n\nimport {\n  ContentAny,\n  ContentBinary,\n  ContentDeleted,\n  ContentDoc,\n  ContentEmbed,\n  ContentFormat,\n  ContentJSON,\n  ContentString,\n  ContentType,\n  createID,\n  decodeStateVector,\n  DSEncoderV1,\n  DSEncoderV2,\n  GC,\n  Item,\n  mergeDeleteSets,\n  readDeleteSet,\n  readItemContent,\n  Skip,\n  UpdateDecoderV1,\n  UpdateDecoderV2,\n  UpdateEncoderV1,\n  UpdateEncoderV2,\n  writeDeleteSet,\n  YXmlElement,\n  YXmlHook\n} from '../internals.js'\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n */\nfunction * lazyStructReaderGenerator (decoder) {\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\n    const client = decoder.readClient()\n    let clock = decoding.readVarUint(decoder.restDecoder)\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo()\n      // @todo use switch instead of ifs\n      if (info === 10) {\n        const len = decoding.readVarUint(decoder.restDecoder)\n        yield new Skip(createID(client, clock), len)\n        clock += len\n      } else if ((binary.BITS5 & info) !== 0) {\n        const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n        // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n        // and we read the next string as parentYKey.\n        // It indicates how we store/retrieve parent from `y.share`\n        // @type {string|null}\n        const struct = new Item(\n          createID(client, clock),\n          null, // left\n          (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n          null, // right\n          (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n          // @ts-ignore Force writing a string here.\n          cantCopyParentInfo ? (decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID()) : null, // parent\n          cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n          readItemContent(decoder, info) // item content\n        )\n        yield struct\n        clock += struct.length\n      } else {\n        const len = decoder.readLen()\n        yield new GC(createID(client, clock), len)\n        clock += len\n      }\n    }\n  }\n}\n\nexport class LazyStructReader {\n  /**\n   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n   * @param {boolean} filterSkips\n   */\n  constructor (decoder, filterSkips) {\n    this.gen = lazyStructReaderGenerator(decoder)\n    /**\n     * @type {null | Item | Skip | GC}\n     */\n    this.curr = null\n    this.done = false\n    this.filterSkips = filterSkips\n    this.next()\n  }\n\n  /**\n   * @return {Item | GC | Skip |null}\n   */\n  next () {\n    // ignore \"Skip\" structs\n    do {\n      this.curr = this.gen.next().value || null\n    } while (this.filterSkips && this.curr !== null && this.curr.constructor === Skip)\n    return this.curr\n  }\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nexport const logUpdate = update => logUpdateV2(update, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nexport const logUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n  }\n  logging.print('Structs: ', structs)\n  const ds = readDeleteSet(updateDecoder)\n  logging.print('DeleteSet: ', ds)\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nexport const decodeUpdate = (update) => decodeUpdateV2(update, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nexport const decodeUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n  }\n  return {\n    structs,\n    ds: readDeleteSet(updateDecoder)\n  }\n}\n\nexport class LazyStructWriter {\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  constructor (encoder) {\n    this.currClient = 0\n    this.startClock = 0\n    this.written = 0\n    this.encoder = encoder\n    /**\n     * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\n     *\n     * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\n     *\n     * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\n     * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\n     *\n     * @type {Array<{ written: number, restEncoder: Uint8Array }>}\n     */\n    this.clientStructs = []\n  }\n}\n\n/**\n * @param {Array<Uint8Array>} updates\n * @return {Uint8Array}\n */\nexport const mergeUpdates = updates => mergeUpdatesV2(updates, UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {Uint8Array}\n */\nexport const encodeStateVectorFromUpdateV2 = (update, YEncoder = DSEncoderV2, YDecoder = UpdateDecoderV2) => {\n  const encoder = new YEncoder()\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\n  let curr = updateDecoder.curr\n  if (curr !== null) {\n    let size = 0\n    let currClient = curr.id.client\n    let stopCounting = curr.id.clock !== 0 // must start at 0\n    let currClock = stopCounting ? 0 : curr.id.clock + curr.length\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        if (currClock !== 0) {\n          size++\n          // We found a new client\n          // write what we have to the encoder\n          encoding.writeVarUint(encoder.restEncoder, currClient)\n          encoding.writeVarUint(encoder.restEncoder, currClock)\n        }\n        currClient = curr.id.client\n        currClock = 0\n        stopCounting = curr.id.clock !== 0\n      }\n      // we ignore skips\n      if (curr.constructor === Skip) {\n        stopCounting = true\n      }\n      if (!stopCounting) {\n        currClock = curr.id.clock + curr.length\n      }\n    }\n    // write what we have\n    if (currClock !== 0) {\n      size++\n      encoding.writeVarUint(encoder.restEncoder, currClient)\n      encoding.writeVarUint(encoder.restEncoder, currClock)\n    }\n    // prepend the size of the state vector\n    const enc = encoding.createEncoder()\n    encoding.writeVarUint(enc, size)\n    encoding.writeBinaryEncoder(enc, encoder.restEncoder)\n    encoder.restEncoder = enc\n    return encoder.toUint8Array()\n  } else {\n    encoding.writeVarUint(encoder.restEncoder, 0)\n    return encoder.toUint8Array()\n  }\n}\n\n/**\n * @param {Uint8Array} update\n * @return {Uint8Array}\n */\nexport const encodeStateVectorFromUpdate = update => encodeStateVectorFromUpdateV2(update, DSEncoderV1, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nexport const parseUpdateMetaV2 = (update, YDecoder = UpdateDecoderV2) => {\n  /**\n   * @type {Map<number, number>}\n   */\n  const from = new Map()\n  /**\n   * @type {Map<number, number>}\n   */\n  const to = new Map()\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\n  let curr = updateDecoder.curr\n  if (curr !== null) {\n    let currClient = curr.id.client\n    let currClock = curr.id.clock\n    // write the beginning to `from`\n    from.set(currClient, currClock)\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        // We found a new client\n        // write the end to `to`\n        to.set(currClient, currClock)\n        // write the beginning to `from`\n        from.set(curr.id.client, curr.id.clock)\n        // update currClient\n        currClient = curr.id.client\n      }\n      currClock = curr.id.clock + curr.length\n    }\n    // write the end to `to`\n    to.set(currClient, currClock)\n  }\n  return { from, to }\n}\n\n/**\n * @param {Uint8Array} update\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nexport const parseUpdateMeta = update => parseUpdateMetaV2(update, UpdateDecoderV1)\n\n/**\n * This method is intended to slice any kind of struct and retrieve the right part.\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\n *\n * @param {Item | GC | Skip} left\n * @param {number} diff\n * @return {Item | GC}\n */\nconst sliceStruct = (left, diff) => {\n  if (left.constructor === GC) {\n    const { client, clock } = left.id\n    return new GC(createID(client, clock + diff), left.length - diff)\n  } else if (left.constructor === Skip) {\n    const { client, clock } = left.id\n    return new Skip(createID(client, clock + diff), left.length - diff)\n  } else {\n    const leftItem = /** @type {Item} */ (left)\n    const { client, clock } = leftItem.id\n    return new Item(\n      createID(client, clock + diff),\n      null,\n      createID(client, clock + diff - 1),\n      null,\n      leftItem.rightOrigin,\n      leftItem.parent,\n      leftItem.parentSub,\n      leftItem.content.splice(diff)\n    )\n  }\n}\n\n/**\n *\n * This function works similarly to `readUpdateV2`.\n *\n * @param {Array<Uint8Array>} updates\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n * @return {Uint8Array}\n */\nexport const mergeUpdatesV2 = (updates, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  if (updates.length === 1) {\n    return updates[0]\n  }\n  const updateDecoders = updates.map(update => new YDecoder(decoding.createDecoder(update)))\n  let lazyStructDecoders = updateDecoders.map(decoder => new LazyStructReader(decoder, true))\n\n  /**\n   * @todo we don't need offset because we always slice before\n   * @type {null | { struct: Item | GC | Skip, offset: number }}\n   */\n  let currWrite = null\n\n  const updateEncoder = new YEncoder()\n  // write structs lazily\n  const lazyStructEncoder = new LazyStructWriter(updateEncoder)\n\n  // Note: We need to ensure that all lazyStructDecoders are fully consumed\n  // Note: Should merge document updates whenever possible - even from different updates\n  // Note: Should handle that some operations cannot be applied yet ()\n\n  while (true) {\n    // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\n    lazyStructDecoders = lazyStructDecoders.filter(dec => dec.curr !== null)\n    lazyStructDecoders.sort(\n      /** @type {function(any,any):number} */ (dec1, dec2) => {\n        if (dec1.curr.id.client === dec2.curr.id.client) {\n          const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock\n          if (clockDiff === 0) {\n            // @todo remove references to skip since the structDecoders must filter Skips.\n            return dec1.curr.constructor === dec2.curr.constructor\n              ? 0\n              : dec1.curr.constructor === Skip ? 1 : -1 // we are filtering skips anyway.\n          } else {\n            return clockDiff\n          }\n        } else {\n          return dec2.curr.id.client - dec1.curr.id.client\n        }\n      }\n    )\n    if (lazyStructDecoders.length === 0) {\n      break\n    }\n    const currDecoder = lazyStructDecoders[0]\n    // write from currDecoder until the next operation is from another client or if filler-struct\n    // then we need to reorder the decoders and find the next operation to write\n    const firstClient = /** @type {Item | GC} */ (currDecoder.curr).id.client\n\n    if (currWrite !== null) {\n      let curr = /** @type {Item | GC | null} */ (currDecoder.curr)\n      let iterated = false\n\n      // iterate until we find something that we haven't written already\n      // remember: first the high client-ids are written\n      while (curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client) {\n        curr = currDecoder.next()\n        iterated = true\n      }\n      if (\n        curr === null || // current decoder is empty\n        curr.id.client !== firstClient || // check whether there is another decoder that has has updates from `firstClient`\n        (iterated && curr.id.clock > currWrite.struct.id.clock + currWrite.struct.length) // the above while loop was used and we are potentially missing updates\n      ) {\n        continue\n      }\n\n      if (firstClient !== currWrite.struct.id.client) {\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n        currWrite = { struct: curr, offset: 0 }\n        currDecoder.next()\n      } else {\n        if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\n          // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\n          if (currWrite.struct.constructor === Skip) {\n            // extend existing skip\n            currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock\n          } else {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n            const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length\n            /**\n             * @type {Skip}\n             */\n            const struct = new Skip(createID(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff)\n            currWrite = { struct, offset: 0 }\n          }\n        } else { // if (currWrite.struct.id.clock + currWrite.struct.length >= curr.id.clock) {\n          const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock\n          if (diff > 0) {\n            if (currWrite.struct.constructor === Skip) {\n              // prefer to slice Skip because the other struct might contain more information\n              currWrite.struct.length -= diff\n            } else {\n              curr = sliceStruct(curr, diff)\n            }\n          }\n          if (!currWrite.struct.mergeWith(/** @type {any} */ (curr))) {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n            currWrite = { struct: curr, offset: 0 }\n            currDecoder.next()\n          }\n        }\n      }\n    } else {\n      currWrite = { struct: /** @type {Item | GC} */ (currDecoder.curr), offset: 0 }\n      currDecoder.next()\n    }\n    for (\n      let next = currDecoder.curr;\n      next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== Skip;\n      next = currDecoder.next()\n    ) {\n      writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n      currWrite = { struct: next, offset: 0 }\n    }\n  }\n  if (currWrite !== null) {\n    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n    currWrite = null\n  }\n  finishLazyStructWriting(lazyStructEncoder)\n\n  const dss = updateDecoders.map(decoder => readDeleteSet(decoder))\n  const ds = mergeDeleteSets(dss)\n  writeDeleteSet(updateEncoder, ds)\n  return updateEncoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n */\nexport const diffUpdateV2 = (update, sv, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const state = decodeStateVector(sv)\n  const encoder = new YEncoder()\n  const lazyStructWriter = new LazyStructWriter(encoder)\n  const decoder = new YDecoder(decoding.createDecoder(update))\n  const reader = new LazyStructReader(decoder, false)\n  while (reader.curr) {\n    const curr = reader.curr\n    const currClient = curr.id.client\n    const svClock = state.get(currClient) || 0\n    if (reader.curr.constructor === Skip) {\n      // the first written struct shouldn't be a skip\n      reader.next()\n      continue\n    }\n    if (curr.id.clock + curr.length > svClock) {\n      writeStructToLazyStructWriter(lazyStructWriter, curr, math.max(svClock - curr.id.clock, 0))\n      reader.next()\n      while (reader.curr && reader.curr.id.client === currClient) {\n        writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0)\n        reader.next()\n      }\n    } else {\n      // read until something new comes up\n      while (reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock) {\n        reader.next()\n      }\n    }\n  }\n  finishLazyStructWriting(lazyStructWriter)\n  // write ds\n  const ds = readDeleteSet(decoder)\n  writeDeleteSet(encoder, ds)\n  return encoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n */\nexport const diffUpdate = (update, sv) => diffUpdateV2(update, sv, UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {LazyStructWriter} lazyWriter\n */\nconst flushLazyStructWriter = lazyWriter => {\n  if (lazyWriter.written > 0) {\n    lazyWriter.clientStructs.push({ written: lazyWriter.written, restEncoder: encoding.toUint8Array(lazyWriter.encoder.restEncoder) })\n    lazyWriter.encoder.restEncoder = encoding.createEncoder()\n    lazyWriter.written = 0\n  }\n}\n\n/**\n * @param {LazyStructWriter} lazyWriter\n * @param {Item | GC} struct\n * @param {number} offset\n */\nconst writeStructToLazyStructWriter = (lazyWriter, struct, offset) => {\n  // flush curr if we start another client\n  if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) {\n    flushLazyStructWriter(lazyWriter)\n  }\n  if (lazyWriter.written === 0) {\n    lazyWriter.currClient = struct.id.client\n    // write next client\n    lazyWriter.encoder.writeClient(struct.id.client)\n    // write startClock\n    encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset)\n  }\n  struct.write(lazyWriter.encoder, offset)\n  lazyWriter.written++\n}\n/**\n * Call this function when we collected all parts and want to\n * put all the parts together. After calling this method,\n * you can continue using the UpdateEncoder.\n *\n * @param {LazyStructWriter} lazyWriter\n */\nconst finishLazyStructWriting = (lazyWriter) => {\n  flushLazyStructWriter(lazyWriter)\n\n  // this is a fresh encoder because we called flushCurr\n  const restEncoder = lazyWriter.encoder.restEncoder\n\n  /**\n   * Now we put all the fragments together.\n   * This works similarly to `writeClientsStructs`\n   */\n\n  // write # states that were updated - i.e. the clients\n  encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length)\n\n  for (let i = 0; i < lazyWriter.clientStructs.length; i++) {\n    const partStructs = lazyWriter.clientStructs[i]\n    /**\n     * Works similarly to `writeStructs`\n     */\n    // write # encoded structs\n    encoding.writeVarUint(restEncoder, partStructs.written)\n    // write the rest of the fragment\n    encoding.writeUint8Array(restEncoder, partStructs.restEncoder)\n  }\n}\n\n/**\n * @param {Uint8Array} update\n * @param {function(Item|GC|Skip):Item|GC|Skip} blockTransformer\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} YDecoder\n * @param {typeof UpdateEncoderV2 | typeof UpdateEncoderV1 } YEncoder\n */\nexport const convertUpdateFormat = (update, blockTransformer, YDecoder, YEncoder) => {\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  const updateEncoder = new YEncoder()\n  const lazyWriter = new LazyStructWriter(updateEncoder)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    writeStructToLazyStructWriter(lazyWriter, blockTransformer(curr), 0)\n  }\n  finishLazyStructWriting(lazyWriter)\n  const ds = readDeleteSet(updateDecoder)\n  writeDeleteSet(updateEncoder, ds)\n  return updateEncoder.toUint8Array()\n}\n\n/**\n * @typedef {Object} ObfuscatorOptions\n * @property {boolean} [ObfuscatorOptions.formatting=true]\n * @property {boolean} [ObfuscatorOptions.subdocs=true]\n * @property {boolean} [ObfuscatorOptions.yxml=true] Whether to obfuscate nodeName / hookName\n */\n\n/**\n * @param {ObfuscatorOptions} obfuscator\n */\nconst createObfuscator = ({ formatting = true, subdocs = true, yxml = true } = {}) => {\n  let i = 0\n  const mapKeyCache = map.create()\n  const nodeNameCache = map.create()\n  const formattingKeyCache = map.create()\n  const formattingValueCache = map.create()\n  formattingValueCache.set(null, null) // end of a formatting range should always be the end of a formatting range\n  /**\n   * @param {Item|GC|Skip} block\n   * @return {Item|GC|Skip}\n   */\n  return block => {\n    switch (block.constructor) {\n      case GC:\n      case Skip:\n        return block\n      case Item: {\n        const item = /** @type {Item} */ (block)\n        const content = item.content\n        switch (content.constructor) {\n          case ContentDeleted:\n            break\n          case ContentType: {\n            if (yxml) {\n              const type = /** @type {ContentType} */ (content).type\n              if (type instanceof YXmlElement) {\n                type.nodeName = map.setIfUndefined(nodeNameCache, type.nodeName, () => 'node-' + i)\n              }\n              if (type instanceof YXmlHook) {\n                type.hookName = map.setIfUndefined(nodeNameCache, type.hookName, () => 'hook-' + i)\n              }\n            }\n            break\n          }\n          case ContentAny: {\n            const c = /** @type {ContentAny} */ (content)\n            c.arr = c.arr.map(() => i)\n            break\n          }\n          case ContentBinary: {\n            const c = /** @type {ContentBinary} */ (content)\n            c.content = new Uint8Array([i])\n            break\n          }\n          case ContentDoc: {\n            const c = /** @type {ContentDoc} */ (content)\n            if (subdocs) {\n              c.opts = {}\n              c.doc.guid = i + ''\n            }\n            break\n          }\n          case ContentEmbed: {\n            const c = /** @type {ContentEmbed} */ (content)\n            c.embed = {}\n            break\n          }\n          case ContentFormat: {\n            const c = /** @type {ContentFormat} */ (content)\n            if (formatting) {\n              c.key = map.setIfUndefined(formattingKeyCache, c.key, () => i + '')\n              c.value = map.setIfUndefined(formattingValueCache, c.value, () => ({ i }))\n            }\n            break\n          }\n          case ContentJSON: {\n            const c = /** @type {ContentJSON} */ (content)\n            c.arr = c.arr.map(() => i)\n            break\n          }\n          case ContentString: {\n            const c = /** @type {ContentString} */ (content)\n            c.str = string.repeat((i % 10) + '', c.str.length)\n            break\n          }\n          default:\n            // unknown content type\n            error.unexpectedCase()\n        }\n        if (item.parentSub) {\n          item.parentSub = map.setIfUndefined(mapKeyCache, item.parentSub, () => i + '')\n        }\n        i++\n        return block\n      }\n      default:\n        // unknown block-type\n        error.unexpectedCase()\n    }\n  }\n}\n\n/**\n * This function obfuscates the content of a Yjs update. This is useful to share\n * buggy Yjs documents while significantly limiting the possibility that a\n * developer can on the user. Note that it might still be possible to deduce\n * some information by analyzing the \"structure\" of the document or by analyzing\n * the typing behavior using the CRDT-related metadata that is still kept fully\n * intact.\n *\n * @param {Uint8Array} update\n * @param {ObfuscatorOptions} [opts]\n */\nexport const obfuscateUpdate = (update, opts) => convertUpdateFormat(update, createObfuscator(opts), UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {ObfuscatorOptions} [opts]\n */\nexport const obfuscateUpdateV2 = (update, opts) => convertUpdateFormat(update, createObfuscator(opts), UpdateDecoderV2, UpdateEncoderV2)\n\n/**\n * @param {Uint8Array} update\n */\nexport const convertUpdateFormatV1ToV2 = update => convertUpdateFormat(update, f.id, UpdateDecoderV1, UpdateEncoderV2)\n\n/**\n * @param {Uint8Array} update\n */\nexport const convertUpdateFormatV2ToV1 = update => convertUpdateFormat(update, f.id, UpdateDecoderV2, UpdateEncoderV1)\n", "\nimport {\n  isDeleted,\n  Item, AbstractType, Transaction, AbstractStruct // eslint-disable-line\n} from '../internals.js'\n\nimport * as set from 'lib0/set'\nimport * as array from 'lib0/array'\nimport * as error from 'lib0/error'\n\nconst errorComputeChanges = 'You must not compute changes after the event-handler fired.'\n\n/**\n * @template {AbstractType<any>} T\n * YEvent describes the changes on a YType.\n */\nexport class YEvent {\n  /**\n   * @param {T} target The changed type.\n   * @param {Transaction} transaction\n   */\n  constructor (target, transaction) {\n    /**\n     * The type on which this event was created on.\n     * @type {T}\n     */\n    this.target = target\n    /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */\n    this.currentTarget = target\n    /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */\n    this.transaction = transaction\n    /**\n     * @type {Object|null}\n     */\n    this._changes = null\n    /**\n     * @type {null | Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n     */\n    this._keys = null\n    /**\n     * @type {null | Array<{ insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any> }>}\n     */\n    this._delta = null\n    /**\n     * @type {Array<string|number>|null}\n     */\n    this._path = null\n  }\n\n  /**\n   * Computes the path from `y` to the changed type.\n   *\n   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */\n  get path () {\n    return this._path || (this._path = getPathTo(this.currentTarget, this.target))\n  }\n\n  /**\n   * Check if a struct is deleted by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  deletes (struct) {\n    return isDeleted(this.transaction.deleteSet, struct.id)\n  }\n\n  /**\n   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n   */\n  get keys () {\n    if (this._keys === null) {\n      if (this.transaction.doc._transactionCleanups.length === 0) {\n        throw error.create(errorComputeChanges)\n      }\n      const keys = new Map()\n      const target = this.target\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      changed.forEach(key => {\n        if (key !== null) {\n          const item = /** @type {Item} */ (target._map.get(key))\n          /**\n           * @type {'delete' | 'add' | 'update'}\n           */\n          let action\n          let oldValue\n          if (this.adds(item)) {\n            let prev = item.left\n            while (prev !== null && this.adds(prev)) {\n              prev = prev.left\n            }\n            if (this.deletes(item)) {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'delete'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                return\n              }\n            } else {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'update'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                action = 'add'\n                oldValue = undefined\n              }\n            }\n          } else {\n            if (this.deletes(item)) {\n              action = 'delete'\n              oldValue = array.last(/** @type {Item} */ item.content.getContent())\n            } else {\n              return // nop\n            }\n          }\n          keys.set(key, { action, oldValue })\n        }\n      })\n      this._keys = keys\n    }\n    return this._keys\n  }\n\n  /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {Array<{insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\n   */\n  get delta () {\n    return this.changes.delta\n  }\n\n  /**\n   * Check if a struct is added by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  adds (struct) {\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\n  }\n\n  /**\n   * This is a computed property. Note that this can only be safely computed during the\n   * event call. Computing this property after other changes happened might result in\n   * unexpected behavior (incorrect computation of deltas). A safe way to collect changes\n   * is to store the `changes` or the `delta` object. Avoid storing the `transaction` object.\n   *\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    let changes = this._changes\n    if (changes === null) {\n      if (this.transaction.doc._transactionCleanups.length === 0) {\n        throw error.create(errorComputeChanges)\n      }\n      const target = this.target\n      const added = set.create()\n      const deleted = set.create()\n      /**\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\n       */\n      const delta = []\n      changes = {\n        added,\n        deleted,\n        delta,\n        keys: this.keys\n      }\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      if (changed.has(null)) {\n        /**\n         * @type {any}\n         */\n        let lastOp = null\n        const packOp = () => {\n          if (lastOp) {\n            delta.push(lastOp)\n          }\n        }\n        for (let item = target._start; item !== null; item = item.right) {\n          if (item.deleted) {\n            if (this.deletes(item) && !this.adds(item)) {\n              if (lastOp === null || lastOp.delete === undefined) {\n                packOp()\n                lastOp = { delete: 0 }\n              }\n              lastOp.delete += item.length\n              deleted.add(item)\n            } // else nop\n          } else {\n            if (this.adds(item)) {\n              if (lastOp === null || lastOp.insert === undefined) {\n                packOp()\n                lastOp = { insert: [] }\n              }\n              lastOp.insert = lastOp.insert.concat(item.content.getContent())\n              added.add(item)\n            } else {\n              if (lastOp === null || lastOp.retain === undefined) {\n                packOp()\n                lastOp = { retain: 0 }\n              }\n              lastOp.retain += item.length\n            }\n          }\n        }\n        if (lastOp !== null && lastOp.retain === undefined) {\n          packOp()\n        }\n      }\n      this._changes = changes\n    }\n    return /** @type {any} */ (changes)\n  }\n}\n\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n  const path = []\n  while (child._item !== null && child !== parent) {\n    if (child._item.parentSub !== null) {\n      // parent is map-ish\n      path.unshift(child._item.parentSub)\n    } else {\n      // parent is array-ish\n      let i = 0\n      let c = /** @type {AbstractType<any>} */ (child._item.parent)._start\n      while (c !== child._item && c !== null) {\n        if (!c.deleted) {\n          i++\n        }\n        c = c.right\n      }\n      path.unshift(i)\n    }\n    child = /** @type {AbstractType<any>} */ (child._item.parent)\n  }\n  return path\n}\n", "\nimport {\n  removeEventHandlerListener,\n  callEventHandlerListeners,\n  addEventHandlerListener,\n  createEventHandler,\n  getState,\n  isVisible,\n  ContentType,\n  createID,\n  ContentAny,\n  ContentBinary,\n  getItemCleanStart,\n  ContentDoc, YText, YArray, UpdateEncoderV1, UpdateEncoderV2, Doc, Snapshot, Transaction, EventHandler, YEvent, Item, // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as iterator from 'lib0/iterator'\nimport * as error from 'lib0/error'\nimport * as math from 'lib0/math'\n\nconst maxSearchMarker = 80\n\n/**\n * A unique timestamp that identifies each marker.\n *\n * Time is relative,.. this is more like an ever-increasing clock.\n *\n * @type {number}\n */\nlet globalSearchMarkerTimestamp = 0\n\nexport class ArraySearchMarker {\n  /**\n   * @param {Item} p\n   * @param {number} index\n   */\n  constructor (p, index) {\n    p.marker = true\n    this.p = p\n    this.index = index\n    this.timestamp = globalSearchMarkerTimestamp++\n  }\n}\n\n/**\n * @param {ArraySearchMarker} marker\n */\nconst refreshMarkerTimestamp = marker => { marker.timestamp = globalSearchMarkerTimestamp++ }\n\n/**\n * This is rather complex so this function is the only thing that should overwrite a marker\n *\n * @param {ArraySearchMarker} marker\n * @param {Item} p\n * @param {number} index\n */\nconst overwriteMarker = (marker, p, index) => {\n  marker.p.marker = false\n  marker.p = p\n  p.marker = true\n  marker.index = index\n  marker.timestamp = globalSearchMarkerTimestamp++\n}\n\n/**\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {Item} p\n * @param {number} index\n */\nconst markPosition = (searchMarker, p, index) => {\n  if (searchMarker.length >= maxSearchMarker) {\n    // override oldest marker (we don't want to create more objects)\n    const marker = searchMarker.reduce((a, b) => a.timestamp < b.timestamp ? a : b)\n    overwriteMarker(marker, p, index)\n    return marker\n  } else {\n    // create new marker\n    const pm = new ArraySearchMarker(p, index)\n    searchMarker.push(pm)\n    return pm\n  }\n}\n\n/**\n * Search marker help us to find positions in the associative array faster.\n *\n * They speed up the process of finding a position without much bookkeeping.\n *\n * A maximum of `maxSearchMarker` objects are created.\n *\n * This function always returns a refreshed marker (updated timestamp)\n *\n * @param {AbstractType<any>} yarray\n * @param {number} index\n */\nexport const findMarker = (yarray, index) => {\n  if (yarray._start === null || index === 0 || yarray._searchMarker === null) {\n    return null\n  }\n  const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b) => math.abs(index - a.index) < math.abs(index - b.index) ? a : b)\n  let p = yarray._start\n  let pindex = 0\n  if (marker !== null) {\n    p = marker.p\n    pindex = marker.index\n    refreshMarkerTimestamp(marker) // we used it, we might need to use it again\n  }\n  // iterate to right if possible\n  while (p.right !== null && pindex < index) {\n    if (!p.deleted && p.countable) {\n      if (index < pindex + p.length) {\n        break\n      }\n      pindex += p.length\n    }\n    p = p.right\n  }\n  // iterate to left if necessary (might be that pindex > index)\n  while (p.left !== null && pindex > index) {\n    p = p.left\n    if (!p.deleted && p.countable) {\n      pindex -= p.length\n    }\n  }\n  // we want to make sure that p can't be merged with left, because that would screw up everything\n  // in that cas just return what we have (it is most likely the best marker anyway)\n  // iterate to left until p can't be merged with left\n  while (p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock) {\n    p = p.left\n    if (!p.deleted && p.countable) {\n      pindex -= p.length\n    }\n  }\n\n  // @todo remove!\n  // assure position\n  // {\n  //   let start = yarray._start\n  //   let pos = 0\n  //   while (start !== p) {\n  //     if (!start.deleted && start.countable) {\n  //       pos += start.length\n  //     }\n  //     start = /** @type {Item} */ (start.right)\n  //   }\n  //   if (pos !== pindex) {\n  //     debugger\n  //     throw new Error('Gotcha position fail!')\n  //   }\n  // }\n  // if (marker) {\n  //   if (window.lengthes == null) {\n  //     window.lengthes = []\n  //     window.getLengthes = () => window.lengthes.sort((a, b) => a - b)\n  //   }\n  //   window.lengthes.push(marker.index - pindex)\n  //   console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\n  // }\n  if (marker !== null && math.abs(marker.index - pindex) < /** @type {YText|YArray<any>} */ (p.parent).length / maxSearchMarker) {\n    // adjust existing marker\n    overwriteMarker(marker, p, pindex)\n    return marker\n  } else {\n    // create new marker\n    return markPosition(yarray._searchMarker, p, pindex)\n  }\n}\n\n/**\n * Update markers when a change happened.\n *\n * This should be called before doing a deletion!\n *\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {number} index\n * @param {number} len If insertion, len is positive. If deletion, len is negative.\n */\nexport const updateMarkerChanges = (searchMarker, index, len) => {\n  for (let i = searchMarker.length - 1; i >= 0; i--) {\n    const m = searchMarker[i]\n    if (len > 0) {\n      /**\n       * @type {Item|null}\n       */\n      let p = m.p\n      p.marker = false\n      // Ideally we just want to do a simple position comparison, but this will only work if\n      // search markers don't point to deleted items for formats.\n      // Iterate marker to prev undeleted countable position so we know what to do when updating a position\n      while (p && (p.deleted || !p.countable)) {\n        p = p.left\n        if (p && !p.deleted && p.countable) {\n          // adjust position. the loop should break now\n          m.index -= p.length\n        }\n      }\n      if (p === null || p.marker === true) {\n        // remove search marker if updated position is null or if position is already marked\n        searchMarker.splice(i, 1)\n        continue\n      }\n      m.p = p\n      p.marker = true\n    }\n    if (index < m.index || (len > 0 && index === m.index)) { // a simple index <= m.index check would actually suffice\n      m.index = math.max(index, m.index + len)\n    }\n  }\n}\n\n/**\n * Accumulate all (list) children of a type and return them as an Array.\n *\n * @param {AbstractType<any>} t\n * @return {Array<Item>}\n */\nexport const getTypeChildren = t => {\n  let s = t._start\n  const arr = []\n  while (s) {\n    arr.push(s)\n    s = s.right\n  }\n  return arr\n}\n\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */\nexport const callTypeObservers = (type, transaction, event) => {\n  const changedType = type\n  const changedParentTypes = transaction.changedParentTypes\n  while (true) {\n    // @ts-ignore\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event)\n    if (type._item === null) {\n      break\n    }\n    type = /** @type {AbstractType<any>} */ (type._item.parent)\n  }\n  callEventHandlerListeners(changedType._eH, event, transaction)\n}\n\n/**\n * @template EventType\n * Abstract Yjs Type class\n */\nexport class AbstractType {\n  constructor () {\n    /**\n     * @type {Item|null}\n     */\n    this._item = null\n    /**\n     * @type {Map<string,Item>}\n     */\n    this._map = new Map()\n    /**\n     * @type {Item|null}\n     */\n    this._start = null\n    /**\n     * @type {Doc|null}\n     */\n    this.doc = null\n    this._length = 0\n    /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */\n    this._eH = createEventHandler()\n    /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent<any>>,Transaction>}\n     */\n    this._dEH = createEventHandler()\n    /**\n     * @type {null | Array<ArraySearchMarker>}\n     */\n    this._searchMarker = null\n  }\n\n  /**\n   * @return {AbstractType<any>|null}\n   */\n  get parent () {\n    return this._item ? /** @type {AbstractType<any>} */ (this._item.parent) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   */\n  _integrate (y, item) {\n    this.doc = y\n    this._item = item\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  _copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  clone () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} _encoder\n   */\n  _write (_encoder) { }\n\n  /**\n   * The first non-deleted item\n   */\n  get _first () {\n    let n = this._start\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} _parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, _parentSubs) {\n    if (!transaction.local && this._searchMarker) {\n      this._searchMarker.length = 0\n    }\n  }\n\n  /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */\n  observe (f) {\n    addEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  observeDeep (f) {\n    addEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */\n  unobserve (f) {\n    removeEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent<any>>,Transaction):void} f Observer function\n   */\n  unobserveDeep (f) {\n    removeEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * @abstract\n   * @return {any}\n   */\n  toJSON () {}\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} start\n * @param {number} end\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListSlice = (type, start, end) => {\n  if (start < 0) {\n    start = type._length + start\n  }\n  if (end < 0) {\n    end = type._length + end\n  }\n  let len = end - start\n  const cs = []\n  let n = type._start\n  while (n !== null && len > 0) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      if (c.length <= start) {\n        start -= c.length\n      } else {\n        for (let i = start; i < c.length && len > 0; i++) {\n          cs.push(c[i])\n          len--\n        }\n        start = 0\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArray = type => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArraySnapshot = (type, snapshot) => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */\nexport const typeListForEach = (type, f) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */\nexport const typeListMap = (type, f) => {\n  /**\n   * @type {Array<any>}\n   */\n  const result = []\n  typeListForEach(type, (c, i) => {\n    result.push(f(c, i, type))\n  })\n  return result\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */\nexport const typeListCreateIterator = type => {\n  let n = type._start\n  /**\n   * @type {Array<any>|null}\n   */\n  let currentContent = null\n  let currentContentIndex = 0\n  return {\n    [Symbol.iterator] () {\n      return this\n    },\n    next: () => {\n      // find some content\n      if (currentContent === null) {\n        while (n !== null && n.deleted) {\n          n = n.right\n        }\n        // check if we reached the end, no need to check currentContent, because it does not exist\n        if (n === null) {\n          return {\n            done: true,\n            value: undefined\n          }\n        }\n        // we found n, so we can set currentContent\n        currentContent = n.content.getContent()\n        currentContentIndex = 0\n        n = n.right // we used the content of n, now iterate to next\n      }\n      const value = currentContent[currentContentIndex++]\n      // check if we need to empty currentContent\n      if (currentContent.length <= currentContentIndex) {\n        currentContent = null\n      }\n      return {\n        done: false,\n        value\n      }\n    }\n  }\n}\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n * Operates on a snapshotted state of the document.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,AbstractType<any>):void} f A function to execute on every element of this YArray.\n * @param {Snapshot} snapshot\n *\n * @private\n * @function\n */\nexport const typeListForEachSnapshot = (type, f, snapshot) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */\nexport const typeListGet = (type, index) => {\n  const marker = findMarker(type, index)\n  let n = type._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        return n.content.getContent()[index]\n      }\n      index -= n.length\n    }\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n  let left = referenceItem\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  const store = doc.store\n  const right = referenceItem === null ? parent._start : referenceItem.right\n  /**\n   * @type {Array<Object|Array<any>|number|null>}\n   */\n  let jsonContent = []\n  const packJsonContent = () => {\n    if (jsonContent.length > 0) {\n      left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentAny(jsonContent))\n      left.integrate(transaction, 0)\n      jsonContent = []\n    }\n  }\n  content.forEach(c => {\n    if (c === null) {\n      jsonContent.push(c)\n    } else {\n      switch (c.constructor) {\n        case Number:\n        case Object:\n        case Boolean:\n        case Array:\n        case String:\n          jsonContent.push(c)\n          break\n        default:\n          packJsonContent()\n          switch (c.constructor) {\n            case Uint8Array:\n            case ArrayBuffer:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))))\n              left.integrate(transaction, 0)\n              break\n            case Doc:\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentDoc(/** @type {Doc} */ (c)))\n              left.integrate(transaction, 0)\n              break\n            default:\n              if (c instanceof AbstractType) {\n                left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentType(c))\n                left.integrate(transaction, 0)\n              } else {\n                throw new Error('Unexpected content type in insert operation')\n              }\n          }\n      }\n    }\n  })\n  packJsonContent()\n}\n\nconst lengthExceeded = () => error.create('Length exceeded!')\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenerics = (transaction, parent, index, content) => {\n  if (index > parent._length) {\n    throw lengthExceeded()\n  }\n  if (index === 0) {\n    if (parent._searchMarker) {\n      updateMarkerChanges(parent._searchMarker, index, content.length)\n    }\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\n  }\n  const startIndex = index\n  const marker = findMarker(parent, index)\n  let n = parent._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n    // we need to iterate one to the left so that the algorithm works\n    if (index === 0) {\n      // @todo refactor this as it actually doesn't consider formats\n      n = n.prev // important! get the left undeleted item so that we can actually decrease index\n      index += (n && n.countable && !n.deleted) ? n.length : 0\n    }\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index <= n.length) {\n        if (index < n.length) {\n          // insert in-between\n          getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n        }\n        break\n      }\n      index -= n.length\n    }\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, content.length)\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n}\n\n/**\n * Pushing content is special as we generally want to push after the last item. So we don't have to update\n * the serach marker.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Array<Object<string,any>|Array<any>|number|null|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListPushGenerics = (transaction, parent, content) => {\n  // Use the marker with the highest index and iterate to the right.\n  const marker = (parent._searchMarker || []).reduce((maxMarker, currMarker) => currMarker.index > maxMarker.index ? currMarker : maxMarker, { index: 0, p: parent._start })\n  let n = marker.p\n  if (n) {\n    while (n.right) {\n      n = n.right\n    }\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const typeListDelete = (transaction, parent, index, length) => {\n  if (length === 0) { return }\n  const startIndex = index\n  const startLength = length\n  const marker = findMarker(parent, index)\n  let n = parent._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n  }\n  // compute the first item to be deleted\n  for (; n !== null && index > 0; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n      }\n      index -= n.length\n    }\n  }\n  // delete all items until done\n  while (length > 0 && n !== null) {\n    if (!n.deleted) {\n      if (length < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length))\n      }\n      n.delete(transaction)\n      length -= n.length\n    }\n    n = n.right\n  }\n  if (length > 0) {\n    throw lengthExceeded()\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */\nexport const typeMapDelete = (transaction, parent, key) => {\n  const c = parent._map.get(key)\n  if (c !== undefined) {\n    c.delete(transaction)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */\nexport const typeMapSet = (transaction, parent, key, value) => {\n  const left = parent._map.get(key) || null\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  let content\n  if (value == null) {\n    content = new ContentAny([value])\n  } else {\n    switch (value.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        content = new ContentAny([value])\n        break\n      case Uint8Array:\n        content = new ContentBinary(/** @type {Uint8Array} */ (value))\n        break\n      case Doc:\n        content = new ContentDoc(/** @type {Doc} */ (value))\n        break\n      default:\n        if (value instanceof AbstractType) {\n          content = new ContentType(value)\n        } else {\n          throw new Error('Unexpected content type')\n        }\n    }\n  }\n  new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0)\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGet = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nexport const typeMapGetAll = (parent) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {}\n  parent._map.forEach((value, key) => {\n    if (!value.deleted) {\n      res[key] = value.content.getContent()[value.length - 1]\n    }\n  })\n  return res\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const typeMapHas = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|null|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGetSnapshot = (parent, key, snapshot) => {\n  let v = parent._map.get(key) || null\n  while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n    v = v.left\n  }\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\n}\n\n/**\n * @param {Map<string,Item>} map\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */\nexport const createMapIterator = map => iterator.iteratorFilter(map.entries(), /** @param {any} entry */ entry => !entry[1].deleted)\n", "/**\n * @module YArray\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeListGet,\n  typeListToArray,\n  typeListForEach,\n  typeListCreateIterator,\n  typeListInsertGenerics,\n  typeListPushGenerics,\n  typeListDelete,\n  typeListMap,\n  YArrayRefID,\n  callTypeObservers,\n  transact,\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\nimport { typeListSlice } from './AbstractType.js'\n\n/**\n * Event that describes the changes on a YArray\n * @template T\n * @extends YEvent<YArray<T>>\n */\nexport class YArrayEvent extends YEvent {\n  /**\n   * @param {YArray<T>} yarray The changed type\n   * @param {Transaction} transaction The transaction object\n   */\n  constructor (yarray, transaction) {\n    super(yarray, transaction)\n    this._transaction = transaction\n  }\n}\n\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {Iterable<T>}\n */\nexport class YArray extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>?}\n     * @private\n     */\n    this._prelimContent = []\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = []\n  }\n\n  /**\n   * Construct a new YArray containing the specified items.\n   * @template {Object<string,any>|Array<any>|number|null|string|Uint8Array} T\n   * @param {Array<T>} items\n   * @return {YArray<T>}\n   */\n  static from (items) {\n    /**\n     * @type {YArray<T>}\n     */\n    const a = new YArray()\n    a.push(items)\n    return a\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  _copy () {\n    return new YArray()\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  clone () {\n    /**\n     * @type {YArray<T>}\n     */\n    const arr = new YArray()\n    arr.insert(0, this.toArray().map(el =>\n      el instanceof AbstractType ? /** @type {typeof el} */ (el.clone()) : el\n    ))\n    return arr\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs)\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction))\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, /** @type {any} */ (content))\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   *\n   * @todo Use the following implementation in all types.\n   */\n  push (content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListPushGenerics(transaction, this, /** @type {any} */ (content))\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).push(...content)\n    }\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content)\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, length)\n    }\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<T>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */\n  toJSON () {\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\n  }\n\n  /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */\n  map (f) {\n    return typeListMap(this, /** @type {any} */ (f))\n  }\n\n  /**\n   * Executes a provided function once on overy element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f)\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return typeListCreateIterator(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YArrayRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nexport const readYArray = _decoder => new YArray()\n", "\n/**\n * @module YMap\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapHas,\n  createMapIterator,\n  YMapRefID,\n  callTypeObservers,\n  transact,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as iterator from 'lib0/iterator'\n\n/**\n * @template T\n * @extends YEvent<YMap<T>>\n * Event that describes the changes on a YMap.\n */\nexport class YMapEvent extends YEvent {\n  /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */\n  constructor (ymap, transaction, subs) {\n    super(ymap, transaction)\n    this.keysChanged = subs\n  }\n}\n\n/**\n * @template MapType\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<MapType>>\n * @implements {Iterable<MapType>}\n */\nexport class YMap extends AbstractType {\n  /**\n   *\n   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\n   */\n  constructor (entries) {\n    super()\n    /**\n     * @type {Map<string,any>?}\n     * @private\n     */\n    this._prelimContent = null\n\n    if (entries === undefined) {\n      this._prelimContent = new Map()\n    } else {\n      this._prelimContent = new Map(entries)\n    }\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;/** @type {Map<string, any>} */ (this._prelimContent).forEach((value, key) => {\n      this.set(key, value)\n    })\n    this._prelimContent = null\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  _copy () {\n    return new YMap()\n  }\n\n  /**\n   * @return {YMap<MapType>}\n   */\n  clone () {\n    /**\n     * @type {YMap<MapType>}\n     */\n    const map = new YMap()\n    this.forEach((value, key) => {\n      map.set(key, value instanceof AbstractType ? /** @type {typeof value} */ (value.clone()) : value)\n    })\n    return map\n  }\n\n  /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs))\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string,MapType>}\n     */\n    const map = {}\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        const v = item.content.getContent()[item.length - 1]\n        map[key] = v instanceof AbstractType ? v.toJSON() : v\n      }\n    })\n    return map\n  }\n\n  /**\n   * Returns the size of the YMap (count of key/value pairs)\n   *\n   * @return {number}\n   */\n  get size () {\n    return [...createMapIterator(this._map)].length\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  keys () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[0])\n  }\n\n  /**\n   * Returns the values for each element in the YMap Type.\n   *\n   * @return {IterableIterator<any>}\n   */\n  values () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<any>}\n   */\n  entries () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => [v[0], v[1].content.getContent()[v[1].length - 1]])\n  }\n\n  /**\n   * Executes a provided function on once on every key-value pair.\n   *\n   * @param {function(MapType,string,YMap<MapType>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        f(item.content.getContent()[item.length - 1], key, this)\n      }\n    })\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<any>}\n   */\n  [Symbol.iterator] () {\n    return this.entries()\n  }\n\n  /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */\n  delete (key) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, key)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key)\n    }\n  }\n\n  /**\n   * Adds or updates an element with a specified key and value.\n   * @template {MapType} VAL\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {VAL} value The value of the element to add\n   * @return {VAL}\n   */\n  set (key, value) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, key, /** @type {any} */ (value))\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value)\n    }\n    return value\n  }\n\n  /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {MapType|undefined}\n   */\n  get (key) {\n    return /** @type {any} */ (typeMapGet(this, key))\n  }\n\n  /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */\n  has (key) {\n    return typeMapHas(this, key)\n  }\n\n  /**\n   * Removes all elements from this YMap.\n   */\n  clear () {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        this.forEach(function (_value, key, map) {\n          typeMapDelete(transaction, map, key)\n        })\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).clear()\n    }\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YMapRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nexport const readYMap = _decoder => new YMap()\n", "\n/**\n * @module YText\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  getItemCleanStart,\n  getState,\n  isVisible,\n  createID,\n  YTextRefID,\n  callTypeObservers,\n  transact,\n  ContentEmbed,\n  GC,\n  ContentFormat,\n  ContentString,\n  splitSnapshotAffectedStructs,\n  iterateDeletedStructs,\n  iterateStructs,\n  findMarker,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  updateMarkerChanges,\n  ContentType,\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ID, Doc, Item, Snapshot, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as object from 'lib0/object'\nimport * as map from 'lib0/map'\nimport * as error from 'lib0/error'\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalAttrs = (a, b) => a === b || (typeof a === 'object' && typeof b === 'object' && a && b && object.equalFlat(a, b))\n\nexport class ItemTextListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {number} index\n   * @param {Map<string,any>} currentAttributes\n   */\n  constructor (left, right, index, currentAttributes) {\n    this.left = left\n    this.right = right\n    this.index = index\n    this.currentAttributes = currentAttributes\n  }\n\n  /**\n   * Only call this if you know that this.right is defined\n   */\n  forward () {\n    if (this.right === null) {\n      error.unexpectedCase()\n    }\n    switch (this.right.content.constructor) {\n      case ContentFormat:\n        if (!this.right.deleted) {\n          updateCurrentAttributes(this.currentAttributes, /** @type {ContentFormat} */ (this.right.content))\n        }\n        break\n      default:\n        if (!this.right.deleted) {\n          this.index += this.right.length\n        }\n        break\n    }\n    this.left = this.right\n    this.right = this.right.right\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} pos\n * @param {number} count steps to move forward\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, pos, count) => {\n  while (pos.right !== null && count > 0) {\n    switch (pos.right.content.constructor) {\n      case ContentFormat:\n        if (!pos.right.deleted) {\n          updateCurrentAttributes(pos.currentAttributes, /** @type {ContentFormat} */ (pos.right.content))\n        }\n        break\n      default:\n        if (!pos.right.deleted) {\n          if (count < pos.right.length) {\n            // split right\n            getItemCleanStart(transaction, createID(pos.right.id.client, pos.right.id.clock + count))\n          }\n          pos.index += pos.right.length\n          count -= pos.right.length\n        }\n        break\n    }\n    pos.left = pos.right\n    pos.right = pos.right.right\n    // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\n  }\n  return pos\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findPosition = (transaction, parent, index) => {\n  const currentAttributes = new Map()\n  const marker = findMarker(parent, index)\n  if (marker) {\n    const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes)\n    return findNextPosition(transaction, pos, index - marker.index)\n  } else {\n    const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes)\n    return findNextPosition(transaction, pos, index)\n  }\n}\n\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Map<string,any>} negatedAttributes\n *\n * @private\n * @function\n */\nconst insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes) => {\n  // check if we really need to remove attributes\n  while (\n    currPos.right !== null && (\n      currPos.right.deleted === true || (\n        currPos.right.content.constructor === ContentFormat &&\n        equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ (currPos.right.content).key), /** @type {ContentFormat} */ (currPos.right.content).value)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      negatedAttributes.delete(/** @type {ContentFormat} */ (currPos.right.content).key)\n    }\n    currPos.forward()\n  }\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  negatedAttributes.forEach((val, key) => {\n    const left = currPos.left\n    const right = currPos.right\n    const nextFormat = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\n    nextFormat.integrate(transaction, 0)\n    currPos.right = nextFormat\n    currPos.forward()\n  })\n}\n\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */\nconst updateCurrentAttributes = (currentAttributes, format) => {\n  const { key, value } = format\n  if (value === null) {\n    currentAttributes.delete(key)\n  } else {\n    currentAttributes.set(key, value)\n  }\n}\n\n/**\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst minimizeAttributeChanges = (currPos, attributes) => {\n  // go right while attributes[right.key] === right.value (or right is deleted)\n  while (true) {\n    if (currPos.right === null) {\n      break\n    } else if (currPos.right.deleted || (currPos.right.content.constructor === ContentFormat && equalAttrs(attributes[(/** @type {ContentFormat} */ (currPos.right.content)).key] || null, /** @type {ContentFormat} */ (currPos.right.content).value))) {\n      //\n    } else {\n      break\n    }\n    currPos.forward()\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n * @return {Map<string,any>}\n *\n * @private\n * @function\n **/\nconst insertAttributes = (transaction, parent, currPos, attributes) => {\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  const negatedAttributes = new Map()\n  // insert format-start items\n  for (const key in attributes) {\n    const val = attributes[key]\n    const currentVal = currPos.currentAttributes.get(key) || null\n    if (!equalAttrs(currentVal, val)) {\n      // save negated attribute (set null if currentVal undefined)\n      negatedAttributes.set(key, currentVal)\n      const { left, right } = currPos\n      currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\n      currPos.right.integrate(transaction, 0)\n      currPos.forward()\n    }\n  }\n  return negatedAttributes\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {string|object|AbstractType<any>} text\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n **/\nconst insertText = (transaction, parent, currPos, text, attributes) => {\n  currPos.currentAttributes.forEach((_val, key) => {\n    if (attributes[key] === undefined) {\n      attributes[key] = null\n    }\n  })\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  minimizeAttributeChanges(currPos, attributes)\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\n  // insert content\n  const content = text.constructor === String ? new ContentString(/** @type {string} */ (text)) : (text instanceof AbstractType ? new ContentType(text) : new ContentEmbed(text))\n  let { left, right, index } = currPos\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, content.getLength())\n  }\n  right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content)\n  right.integrate(transaction, 0)\n  currPos.right = right\n  currPos.index = index\n  currPos.forward()\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst formatText = (transaction, parent, currPos, length, attributes) => {\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  minimizeAttributeChanges(currPos, attributes)\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\n  // iterate until first non-format or null is found\n  // delete all formats with attributes[format.key] != null\n  // also check the attributes after the first non-format as we do not want to insert redundant negated attributes there\n  // eslint-disable-next-line no-labels\n  iterationLoop: while (\n    currPos.right !== null &&\n    (length > 0 ||\n      (\n        negatedAttributes.size > 0 &&\n        (currPos.right.deleted || currPos.right.content.constructor === ContentFormat)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      switch (currPos.right.content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (currPos.right.content)\n          const attr = attributes[key]\n          if (attr !== undefined) {\n            if (equalAttrs(attr, value)) {\n              negatedAttributes.delete(key)\n            } else {\n              if (length === 0) {\n                // no need to further extend negatedAttributes\n                // eslint-disable-next-line no-labels\n                break iterationLoop\n              }\n              negatedAttributes.set(key, value)\n            }\n            currPos.right.delete(transaction)\n          } else {\n            currPos.currentAttributes.set(key, value)\n          }\n          break\n        }\n        default:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\n          }\n          length -= currPos.right.length\n          break\n      }\n    }\n    currPos.forward()\n  }\n  // Quill just assumes that the editor starts with a newline and that it always\n  // ends with a newline. We only insert that newline when a new newline is\n  // inserted - i.e when length is bigger than type.length\n  if (length > 0) {\n    let newlines = ''\n    for (; length > 0; length--) {\n      newlines += '\\n'\n    }\n    currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new ContentString(newlines))\n    currPos.right.integrate(transaction, 0)\n    currPos.forward()\n  }\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\n}\n\n/**\n * Call this function after string content has been deleted in order to\n * clean up formatting Items.\n *\n * @param {Transaction} transaction\n * @param {Item} start\n * @param {Item|null} curr exclusive end, automatically iterates to the next Content Item\n * @param {Map<string,any>} startAttributes\n * @param {Map<string,any>} currAttributes\n * @return {number} The amount of formatting Items deleted.\n *\n * @function\n */\nconst cleanupFormattingGap = (transaction, start, curr, startAttributes, currAttributes) => {\n  /**\n   * @type {Item|null}\n   */\n  let end = start\n  /**\n   * @type {Map<string,ContentFormat>}\n   */\n  const endFormats = map.create()\n  while (end && (!end.countable || end.deleted)) {\n    if (!end.deleted && end.content.constructor === ContentFormat) {\n      const cf = /** @type {ContentFormat} */ (end.content)\n      endFormats.set(cf.key, cf)\n    }\n    end = end.right\n  }\n  let cleanups = 0\n  let reachedCurr = false\n  while (start !== end) {\n    if (curr === start) {\n      reachedCurr = true\n    }\n    if (!start.deleted) {\n      const content = start.content\n      switch (content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (content)\n          const startAttrValue = startAttributes.get(key) || null\n          if (endFormats.get(key) !== content || startAttrValue === value) {\n            // Either this format is overwritten or it is not necessary because the attribute already existed.\n            start.delete(transaction)\n            cleanups++\n            if (!reachedCurr && (currAttributes.get(key) || null) === value && startAttrValue !== value) {\n              if (startAttrValue === null) {\n                currAttributes.delete(key)\n              } else {\n                currAttributes.set(key, startAttrValue)\n              }\n            }\n          }\n          if (!reachedCurr && !start.deleted) {\n            updateCurrentAttributes(currAttributes, /** @type {ContentFormat} */ (content))\n          }\n          break\n        }\n      }\n    }\n    start = /** @type {Item} */ (start.right)\n  }\n  return cleanups\n}\n\n/**\n * @param {Transaction} transaction\n * @param {Item | null} item\n */\nconst cleanupContextlessFormattingGap = (transaction, item) => {\n  // iterate until item.right is null or content\n  while (item && item.right && (item.right.deleted || !item.right.countable)) {\n    item = item.right\n  }\n  const attrs = new Set()\n  // iterate back until a content item is found\n  while (item && (item.deleted || !item.countable)) {\n    if (!item.deleted && item.content.constructor === ContentFormat) {\n      const key = /** @type {ContentFormat} */ (item.content).key\n      if (attrs.has(key)) {\n        item.delete(transaction)\n      } else {\n        attrs.add(key)\n      }\n    }\n    item = item.left\n  }\n}\n\n/**\n * This function is experimental and subject to change / be removed.\n *\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\n * automatically after each change. This function iterates twice over the complete YText type\n * and removes unnecessary formatting attributes. This is also helpful for testing.\n *\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\n *\n * @param {YText} type\n * @return {number} How many formatting attributes have been cleaned up.\n */\nexport const cleanupYTextFormatting = type => {\n  let res = 0\n  transact(/** @type {Doc} */ (type.doc), transaction => {\n    let start = /** @type {Item} */ (type._start)\n    let end = type._start\n    let startAttributes = map.create()\n    const currentAttributes = map.copy(startAttributes)\n    while (end) {\n      if (end.deleted === false) {\n        switch (end.content.constructor) {\n          case ContentFormat:\n            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (end.content))\n            break\n          default:\n            res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes)\n            startAttributes = map.copy(currentAttributes)\n            start = end\n            break\n        }\n      }\n      end = end.right\n    }\n  })\n  return res\n}\n\n/**\n * This will be called by the transction once the event handlers are called to potentially cleanup\n * formatting attributes.\n *\n * @param {Transaction} transaction\n */\nexport const cleanupYTextAfterTransaction = transaction => {\n  /**\n   * @type {Set<YText>}\n   */\n  const needFullCleanup = new Set()\n  // check if another formatting item was inserted\n  const doc = transaction.doc\n  for (const [client, afterClock] of transaction.afterState.entries()) {\n    const clock = transaction.beforeState.get(client) || 0\n    if (afterClock === clock) {\n      continue\n    }\n    iterateStructs(transaction, /** @type {Array<Item|GC>} */ (doc.store.clients.get(client)), clock, afterClock, item => {\n      if (\n        !item.deleted && /** @type {Item} */ (item).content.constructor === ContentFormat && item.constructor !== GC\n      ) {\n        needFullCleanup.add(/** @type {any} */ (item).parent)\n      }\n    })\n  }\n  // cleanup in a new transaction\n  transact(doc, (t) => {\n    iterateDeletedStructs(transaction, transaction.deleteSet, item => {\n      if (item instanceof GC || !(/** @type {YText} */ (item.parent)._hasFormatting) || needFullCleanup.has(/** @type {YText} */ (item.parent))) {\n        return\n      }\n      const parent = /** @type {YText} */ (item.parent)\n      if (item.content.constructor === ContentFormat) {\n        needFullCleanup.add(parent)\n      } else {\n        // If no formatting attribute was inserted or deleted, we can make due with contextless\n        // formatting cleanups.\n        // Contextless: it is not necessary to compute currentAttributes for the affected position.\n        cleanupContextlessFormattingGap(t, item)\n      }\n    })\n    // If a formatting item was inserted, we simply clean the whole type.\n    // We need to compute currentAttributes for the current position anyway.\n    for (const yText of needFullCleanup) {\n      cleanupYTextFormatting(yText)\n    }\n  })\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst deleteText = (transaction, currPos, length) => {\n  const startLength = length\n  const startAttrs = map.copy(currPos.currentAttributes)\n  const start = currPos.right\n  while (length > 0 && currPos.right !== null) {\n    if (currPos.right.deleted === false) {\n      switch (currPos.right.content.constructor) {\n        case ContentType:\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\n          }\n          length -= currPos.right.length\n          currPos.right.delete(transaction)\n          break\n      }\n    }\n    currPos.forward()\n  }\n  if (start) {\n    cleanupFormattingGap(transaction, start, currPos.right, startAttrs, currPos.currentAttributes)\n  }\n  const parent = /** @type {AbstractType<any>} */ (/** @type {Item} */ (currPos.left || currPos.right).parent)\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, -startLength + length)\n  }\n  return currPos\n}\n\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */\n\n/**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */\n\n/**\n * @extends YEvent<YText>\n * Event that describes the changes on a YText type.\n */\nexport class YTextEvent extends YEvent {\n  /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed\n   */\n  constructor (ytext, transaction, subs) {\n    super(ytext, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.keysChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.keysChanged.add(sub)\n      }\n    })\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    if (this._changes === null) {\n      /**\n       * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string|AbstractType<any>|object, delete?:number, retain?:number}>}}\n       */\n      const changes = {\n        keys: this.keys,\n        delta: this.delta,\n        added: new Set(),\n        deleted: new Set()\n      }\n      this._changes = changes\n    }\n    return /** @type {any} */ (this._changes)\n  }\n\n  /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n   *\n   * @public\n   */\n  get delta () {\n    if (this._delta === null) {\n      const y = /** @type {Doc} */ (this.target.doc)\n      /**\n       * @type {Array<{insert?:string|object|AbstractType<any>, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n       */\n      const delta = []\n      transact(y, transaction => {\n        const currentAttributes = new Map() // saves all current attributes for insert\n        const oldAttributes = new Map()\n        let item = this.target._start\n        /**\n         * @type {string?}\n         */\n        let action = null\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {} // counts added or removed new attributes for retain\n        /**\n         * @type {string|object}\n         */\n        let insert = ''\n        let retain = 0\n        let deleteLen = 0\n        const addOp = () => {\n          if (action !== null) {\n            /**\n             * @type {any}\n             */\n            let op = null\n            switch (action) {\n              case 'delete':\n                if (deleteLen > 0) {\n                  op = { delete: deleteLen }\n                }\n                deleteLen = 0\n                break\n              case 'insert':\n                if (typeof insert === 'object' || insert.length > 0) {\n                  op = { insert }\n                  if (currentAttributes.size > 0) {\n                    op.attributes = {}\n                    currentAttributes.forEach((value, key) => {\n                      if (value !== null) {\n                        op.attributes[key] = value\n                      }\n                    })\n                  }\n                }\n                insert = ''\n                break\n              case 'retain':\n                if (retain > 0) {\n                  op = { retain }\n                  if (!object.isEmpty(attributes)) {\n                    op.attributes = object.assign({}, attributes)\n                  }\n                }\n                retain = 0\n                break\n            }\n            if (op) delta.push(op)\n            action = null\n          }\n        }\n        while (item !== null) {\n          switch (item.content.constructor) {\n            case ContentType:\n            case ContentEmbed:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  addOp()\n                  action = 'insert'\n                  insert = item.content.getContent()[0]\n                  addOp()\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += 1\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += 1\n              }\n              break\n            case ContentString:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  if (action !== 'insert') {\n                    addOp()\n                    action = 'insert'\n                  }\n                  insert += /** @type {ContentString} */ (item.content).str\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += item.length\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += item.length\n              }\n              break\n            case ContentFormat: {\n              const { key, value } = /** @type {ContentFormat} */ (item.content)\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  const curVal = currentAttributes.get(key) || null\n                  if (!equalAttrs(curVal, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (equalAttrs(value, (oldAttributes.get(key) || null))) {\n                      delete attributes[key]\n                    } else {\n                      attributes[key] = value\n                    }\n                  } else if (value !== null) {\n                    item.delete(transaction)\n                  }\n                }\n              } else if (this.deletes(item)) {\n                oldAttributes.set(key, value)\n                const curVal = currentAttributes.get(key) || null\n                if (!equalAttrs(curVal, value)) {\n                  if (action === 'retain') {\n                    addOp()\n                  }\n                  attributes[key] = curVal\n                }\n              } else if (!item.deleted) {\n                oldAttributes.set(key, value)\n                const attr = attributes[key]\n                if (attr !== undefined) {\n                  if (!equalAttrs(attr, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (value === null) {\n                      delete attributes[key]\n                    } else {\n                      attributes[key] = value\n                    }\n                  } else if (attr !== null) { // this will be cleaned up automatically by the contextless cleanup function\n                    item.delete(transaction)\n                  }\n                }\n              }\n              if (!item.deleted) {\n                if (action === 'insert') {\n                  addOp()\n                }\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content))\n              }\n              break\n            }\n          }\n          item = item.right\n        }\n        addOp()\n        while (delta.length > 0) {\n          const lastOp = delta[delta.length - 1]\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n            // retain delta's if they don't assign attributes\n            delta.pop()\n          } else {\n            break\n          }\n        }\n      })\n      this._delta = delta\n    }\n    return /** @type {any} */ (this._delta)\n  }\n}\n\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */\nexport class YText extends AbstractType {\n  /**\n   * @param {String} [string] The initial value of the YText.\n   */\n  constructor (string) {\n    super()\n    /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     */\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : []\n    /**\n     * @type {Array<ArraySearchMarker>|null}\n     */\n    this._searchMarker = []\n    /**\n     * Whether this YText contains formatting attributes.\n     * This flag is updated when a formatting item is integrated (see ContentFormat.integrate)\n     */\n    this._hasFormatting = false\n  }\n\n  /**\n   * Number of characters of this text type.\n   *\n   * @type {number}\n   */\n  get length () {\n    return this._length\n  }\n\n  /**\n   * @param {Doc} y\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    try {\n      /** @type {Array<function>} */ (this._pending).forEach(f => f())\n    } catch (e) {\n      console.error(e)\n    }\n    this._pending = null\n  }\n\n  _copy () {\n    return new YText()\n  }\n\n  /**\n   * @return {YText}\n   */\n  clone () {\n    const text = new YText()\n    text.applyDelta(this.toDelta())\n    return text\n  }\n\n  /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs)\n    const event = new YTextEvent(this, transaction, parentSubs)\n    callTypeObservers(this, transaction, event)\n    // If a remote change happened, we try to cleanup potential formatting duplicates.\n    if (!transaction.local && this._hasFormatting) {\n      transaction._needFormattingCleanup = true\n    }\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */\n  toString () {\n    let str = ''\n    /**\n     * @type {Item|null}\n     */\n    let n = this._start\n    while (n !== null) {\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\n        str += /** @type {ContentString} */ (n.content).str\n      }\n      n = n.right\n    }\n    return str\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @return {string}\n   * @public\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {any} delta The changes to apply on this element.\n   * @param {object}  opts\n   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\n   *\n   *\n   * @public\n   */\n  applyDelta (delta, { sanitize = true } = {}) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const currPos = new ItemTextListPosition(null, this._start, 0, new Map())\n        for (let i = 0; i < delta.length; i++) {\n          const op = delta[i]\n          if (op.insert !== undefined) {\n            // Quill assumes that the content starts with an empty paragraph.\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\n            // there is a newline at the end of the content.\n            // If we omit this step, clients will see a different number of\n            // paragraphs, but nothing bad will happen.\n            const ins = (!sanitize && typeof op.insert === 'string' && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert\n            if (typeof ins !== 'string' || ins.length > 0) {\n              insertText(transaction, this, currPos, ins, op.attributes || {})\n            }\n          } else if (op.retain !== undefined) {\n            formatText(transaction, this, currPos, op.retain, op.attributes || {})\n          } else if (op.delete !== undefined) {\n            deleteText(transaction, currPos, op.delete)\n          }\n        }\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta))\n    }\n  }\n\n  /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */\n  toDelta (snapshot, prevSnapshot, computeYChange) {\n    /**\n     * @type{Array<any>}\n     */\n    const ops = []\n    const currentAttributes = new Map()\n    const doc = /** @type {Doc} */ (this.doc)\n    let str = ''\n    let n = this._start\n    function packStr () {\n      if (str.length > 0) {\n        // pack str with attributes to ops\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {}\n        let addAttributes = false\n        currentAttributes.forEach((value, key) => {\n          addAttributes = true\n          attributes[key] = value\n        })\n        /**\n         * @type {Object<string,any>}\n         */\n        const op = { insert: str }\n        if (addAttributes) {\n          op.attributes = attributes\n        }\n        ops.push(op)\n        str = ''\n      }\n    }\n    const computeDelta = () => {\n      while (n !== null) {\n        if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\n          switch (n.content.constructor) {\n            case ContentString: {\n              const cur = currentAttributes.get('ychange')\n              if (snapshot !== undefined && !isVisible(n, snapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'removed') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' })\n                }\n              } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'added') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' })\n                }\n              } else if (cur !== undefined) {\n                packStr()\n                currentAttributes.delete('ychange')\n              }\n              str += /** @type {ContentString} */ (n.content).str\n              break\n            }\n            case ContentType:\n            case ContentEmbed: {\n              packStr()\n              /**\n               * @type {Object<string,any>}\n               */\n              const op = {\n                insert: n.content.getContent()[0]\n              }\n              if (currentAttributes.size > 0) {\n                const attrs = /** @type {Object<string,any>} */ ({})\n                op.attributes = attrs\n                currentAttributes.forEach((value, key) => {\n                  attrs[key] = value\n                })\n              }\n              ops.push(op)\n              break\n            }\n            case ContentFormat:\n              if (isVisible(n, snapshot)) {\n                packStr()\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content))\n              }\n              break\n          }\n        }\n        n = n.right\n      }\n      packStr()\n    }\n    if (snapshot || prevSnapshot) {\n      // snapshots are merged again after the transaction, so we need to keep the\n      // transaction alive until we are done\n      transact(doc, transaction => {\n        if (snapshot) {\n          splitSnapshotAffectedStructs(transaction, snapshot)\n        }\n        if (prevSnapshot) {\n          splitSnapshotAffectedStructs(transaction, prevSnapshot)\n        }\n        computeDelta()\n      }, 'cleanup')\n    } else {\n      computeDelta()\n    }\n    return ops\n  }\n\n  /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} [attributes] Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */\n  insert (index, text, attributes) {\n    if (text.length <= 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        if (!attributes) {\n          attributes = {}\n          // @ts-ignore\n          pos.currentAttributes.forEach((v, k) => { attributes[k] = v })\n        }\n        insertText(transaction, this, pos, text, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes))\n    }\n  }\n\n  /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object | AbstractType<any>} embed The Object that represents the embed.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */\n  insertEmbed (index, embed, attributes = {}) {\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        insertText(transaction, this, pos, embed, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes))\n    }\n  }\n\n  /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */\n  delete (index, length) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        deleteText(transaction, findPosition(transaction, this, index), length)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length))\n    }\n  }\n\n  /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */\n  format (index, length, attributes) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        if (pos.right === null) {\n          return\n        }\n        formatText(transaction, this, pos, length, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes))\n    }\n  }\n\n  /**\n   * Removes an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.removeAttribute(attributeName))\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {any} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.setAttribute(attributeName, attributeValue))\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {any} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes () {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YTextRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nexport const readYText = _decoder => new YText()\n", "/**\n * @module YXml\n */\n\nimport {\n  YXmlEvent,\n  YXmlElement,\n  AbstractType,\n  typeListMap,\n  typeListForEach,\n  typeListInsertGenerics,\n  typeListInsertGenericsAfter,\n  typeListDelete,\n  typeListToArray,\n  YXmlFragmentRefID,\n  callTypeObservers,\n  transact,\n  typeListGet,\n  typeListSlice,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, ContentType, Transaction, Item, YXmlText, YXmlHook // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\nimport * as array from 'lib0/array'\n\n/**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */\n\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\n */\nexport class YXmlTreeWalker {\n  /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */\n  constructor (root, f = () => true) {\n    this._filter = f\n    this._root = root\n    /**\n     * @type {Item}\n     */\n    this._currentNode = /** @type {Item} */ (root._start)\n    this._firstCall = true\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n\n  /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */\n  next () {\n    /**\n     * @type {Item|null}\n     */\n    let n = this._currentNode\n    let type = n && n.content && /** @type {any} */ (n.content).type\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n      do {\n        type = /** @type {any} */ (n.content).type\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n          // walk down in the tree\n          n = type._start\n        } else {\n          // walk right or up in the tree\n          while (n !== null) {\n            if (n.right !== null) {\n              n = n.right\n              break\n            } else if (n.parent === this._root) {\n              n = null\n            } else {\n              n = /** @type {AbstractType<any>} */ (n.parent)._item\n            }\n          }\n        }\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\n    }\n    this._firstCall = false\n    if (n === null) {\n      // @ts-ignore\n      return { value: undefined, done: true }\n    }\n    this._currentNode = n\n    return { value: /** @type {any} */ (n.content).type, done: false }\n  }\n}\n\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */\nexport class YXmlFragment extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>|null}\n     */\n    this._prelimContent = []\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get firstChild () {\n    const first = this._first\n    return first ? first.content.getContent()[0] : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YXmlFragment()\n  }\n\n  /**\n   * @return {YXmlFragment}\n   */\n  clone () {\n    const el = new YXmlFragment()\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\n    return el\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */\n  createTreeWalker (filter) {\n    return new YXmlTreeWalker(this, filter)\n  }\n\n  /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */\n  querySelector (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query)\n    const next = iterator.next()\n    if (next.done) {\n      return null\n    } else {\n      return next.value\n    }\n  }\n\n  /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */\n  querySelectorAll (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    return array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\n  }\n\n  /**\n   * Creates YXmlEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction))\n  }\n\n  /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */\n  toString () {\n    return typeListMap(this, xml => xml.toString()).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const fragment = _document.createDocumentFragment()\n    if (binding !== undefined) {\n      binding._createAssociation(fragment, this)\n    }\n    typeListForEach(this, xmlType => {\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null)\n    })\n    return fragment\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insertAfter (ref, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const refItem = (ref && ref instanceof AbstractType) ? ref._item : ref\n        typeListInsertGenericsAfter(transaction, this, refItem, content)\n      })\n    } else {\n      const pc = /** @type {Array<any>} */ (this._prelimContent)\n      const index = ref === null ? 0 : pc.findIndex(el => el === ref) + 1\n      if (index === 0 && ref !== null) {\n        throw error.create('Reference item not found')\n      }\n      pc.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, length)\n    }\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content)\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content)\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {YXmlElement|YXmlText}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<YXmlElement|YXmlText>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Executes a provided function on once on overy child element.\n   *\n   * @param {function(YXmlElement|YXmlText,number, typeof self):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f)\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlFragmentRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nexport const readYXmlFragment = _decoder => new YXmlFragment()\n", "import * as object from 'lib0/object'\n\nimport {\n  YXmlFragment,\n  transact,\n  typeMapDelete,\n  typeMapHas,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  typeListForEach,\n  YXmlElementRefID,\n  YXmlText, ContentType, AbstractType, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Item // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @typedef {Object|number|null|Array<any>|string|Uint8Array|AbstractType<any>} ValueTypes\n */\n\n/**\n * An YXmlElement imitates the behavior of a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n *\n * @template {{ [key: string]: ValueTypes }} [KV={ [key: string]: string }]\n */\nexport class YXmlElement extends YXmlFragment {\n  constructor (nodeName = 'UNDEFINED') {\n    super()\n    this.nodeName = nodeName\n    /**\n     * @type {Map<string, any>|null}\n     */\n    this._prelimAttrs = new Map()\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\n      this.setAttribute(key, value)\n    })\n    this._prelimAttrs = null\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   */\n  _copy () {\n    return new YXmlElement(this.nodeName)\n  }\n\n  /**\n   * @return {YXmlElement<KV>}\n   */\n  clone () {\n    /**\n     * @type {YXmlElement<KV>}\n     */\n    const el = new YXmlElement(this.nodeName)\n    const attrs = this.getAttributes()\n    object.forEach(attrs, (value, key) => {\n      if (typeof value === 'string') {\n        el.setAttribute(key, value)\n      }\n    })\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\n    return el\n  }\n\n  /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */\n  toString () {\n    const attrs = this.getAttributes()\n    const stringBuilder = []\n    const keys = []\n    for (const key in attrs) {\n      keys.push(key)\n    }\n    keys.sort()\n    const keysLen = keys.length\n    for (let i = 0; i < keysLen; i++) {\n      const key = keys[i]\n      stringBuilder.push(key + '=\"' + attrs[key] + '\"')\n    }\n    const nodeName = this.nodeName.toLocaleLowerCase()\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : ''\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\n  }\n\n  /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {string} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName)\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @template {keyof KV & string} KEY\n   *\n   * @param {KEY} attributeName The attribute name that is to be set.\n   * @param {KV[KEY]} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue)\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @template {keyof KV & string} KEY\n   *\n   * @param {KEY} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {KV[KEY]|undefined} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns whether an attribute exists\n   *\n   * @param {string} attributeName The attribute name to check for existence.\n   * @return {boolean} whether the attribute exists.\n   *\n   * @public\n   */\n  hasAttribute (attributeName) {\n    return /** @type {any} */ (typeMapHas(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @return {{ [Key in Extract<keyof KV,string>]?: KV[Key]}} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes () {\n    return /** @type {any} */ (typeMapGetAll(this))\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const dom = _document.createElement(this.nodeName)\n    const attrs = this.getAttributes()\n    for (const key in attrs) {\n      const value = attrs[key]\n      if (typeof value === 'string') {\n        dom.setAttribute(key, value)\n      }\n    }\n    typeListForEach(this, yxml => {\n      dom.appendChild(yxml.toDOM(_document, hooks, binding))\n    })\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlElementRefID)\n    encoder.writeKey(this.nodeName)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlElement}\n *\n * @function\n */\nexport const readYXmlElement = decoder => new YXmlElement(decoder.readKey())\n", "\nimport {\n  YEvent,\n  YXmlText, YXmlElement, YXmlFragment, Transaction // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @extends YEvent<YXmlElement|YXmlText|YXmlFragment>\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nexport class YXmlEvent extends YEvent {\n  /**\n   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with wich the\n   *                                  change was created.\n   */\n  constructor (target, subs, transaction) {\n    super(target, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.attributesChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.attributesChanged.add(sub)\n      }\n    })\n  }\n}\n", "\nimport {\n  YMap,\n  YXmlHookRefID,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2 // eslint-disable-line\n} from '../internals.js'\n\n/**\n * You can manage binding to a custom type with YXmlHook.\n *\n * @extends {YMap<any>}\n */\nexport class YXmlHook extends YMap {\n  /**\n   * @param {string} hookName nodeName of the Dom Node.\n   */\n  constructor (hookName) {\n    super()\n    /**\n     * @type {string}\n     */\n    this.hookName = hookName\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   */\n  _copy () {\n    return new YXmlHook(this.hookName)\n  }\n\n  /**\n   * @return {YXmlHook}\n   */\n  clone () {\n    const el = new YXmlHook(this.hookName)\n    this.forEach((value, key) => {\n      el.set(key, value)\n    })\n    return el\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type\n   * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const hook = hooks[this.hookName]\n    let dom\n    if (hook !== undefined) {\n      dom = hook.createDom(this)\n    } else {\n      dom = document.createElement(this.hookName)\n    }\n    dom.setAttribute('data-yjs-hook', this.hookName)\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlHookRefID)\n    encoder.writeKey(this.hookName)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */\nexport const readYXmlHook = decoder =>\n  new YXmlHook(decoder.readKey())\n", "\nimport {\n  YText,\n  YXmlTextRefID,\n  ContentType, YXmlElement, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, // eslint-disable-line\n} from '../internals.js'\n\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */\nexport class YXmlText extends YText {\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  _copy () {\n    return new YXmlText()\n  }\n\n  /**\n   * @return {YXmlText}\n   */\n  clone () {\n    const text = new YXmlText()\n    text.applyDelta(this.toDelta())\n    return text\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlText.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks, binding) {\n    const dom = _document.createTextNode(this.toString())\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  toString () {\n    // @ts-ignore\n    return this.toDelta().map(delta => {\n      const nestedNodes = []\n      for (const nodeName in delta.attributes) {\n        const attrs = []\n        for (const key in delta.attributes[nodeName]) {\n          attrs.push({ key, value: delta.attributes[nodeName][key] })\n        }\n        // sort attributes to get a unique order\n        attrs.sort((a, b) => a.key < b.key ? -1 : 1)\n        nestedNodes.push({ nodeName, attrs })\n      }\n      // sort node order to get a unique order\n      nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1)\n      // now convert to dom string\n      let str = ''\n      for (let i = 0; i < nestedNodes.length; i++) {\n        const node = nestedNodes[i]\n        str += `<${node.nodeName}`\n        for (let j = 0; j < node.attrs.length; j++) {\n          const attr = node.attrs[j]\n          str += ` ${attr.key}=\"${attr.value}\"`\n        }\n        str += '>'\n      }\n      str += delta.insert\n      for (let i = nestedNodes.length - 1; i >= 0; i--) {\n        str += `</${nestedNodes[i].nodeName}>`\n      }\n      return str\n    }).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlTextRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */\nexport const readYXmlText = decoder => new YXmlText()\n", "\nimport {\n  UpdateEncoderV1, UpdateEncoderV2, ID, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\nexport class AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    this.id = id\n    this.length = length\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get deleted () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} wether this merged with right\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   */\n  write (encoder, offset, encodingRef) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    throw error.methodUnimplemented()\n  }\n}\n", "\nimport {\n  AbstractStruct,\n  addStruct,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nexport const structGCRefNumber = 0\n\n/**\n * @private\n */\nexport class GC extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {GC} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset\n      this.length -= offset\n    }\n    addStruct(transaction.doc.store, this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structGCRefNumber)\n    encoder.writeLen(this.length - offset)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n", "import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\nexport class ContentBinary {\n  /**\n   * @param {Uint8Array} content\n   */\n  constructor (content) {\n    this.content = content\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.content]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentBinary}\n   */\n  copy () {\n    return new ContentBinary(this.content)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeBuf(this.content)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 3\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentBinary}\n */\nexport const readContentBinary = decoder => new ContentBinary(decoder.readBuf())\n", "\nimport {\n  addToDeleteSet,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nexport class ContentDeleted {\n  /**\n   * @param {number} len\n   */\n  constructor (len) {\n    this.len = len\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.len\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentDeleted}\n   */\n  copy () {\n    return new ContentDeleted(this.len)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */\n  splice (offset) {\n    const right = new ContentDeleted(this.len - offset)\n    this.len = offset\n    return right\n  }\n\n  /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.len += right.len\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    addToDeleteSet(transaction.deleteSet, item.id.client, item.id.clock, this.len)\n    item.markDeleted()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeLen(this.len - offset)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 1\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentDeleted}\n */\nexport const readContentDeleted = decoder => new ContentDeleted(decoder.readLen())\n", "\nimport {\n  Doc, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @param {string} guid\n * @param {Object<string, any>} opts\n */\nconst createDocFromOpts = (guid, opts) => new Doc({ guid, ...opts, shouldLoad: opts.shouldLoad || opts.autoLoad || false })\n\n/**\n * @private\n */\nexport class ContentDoc {\n  /**\n   * @param {Doc} doc\n   */\n  constructor (doc) {\n    if (doc._item) {\n      console.error('This document was already integrated as a sub-document. You should create a second instance instead with the same guid.')\n    }\n    /**\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * @type {any}\n     */\n    const opts = {}\n    this.opts = opts\n    if (!doc.gc) {\n      opts.gc = false\n    }\n    if (doc.autoLoad) {\n      opts.autoLoad = true\n    }\n    if (doc.meta !== null) {\n      opts.meta = doc.meta\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.doc]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentDoc}\n   */\n  copy () {\n    return new ContentDoc(createDocFromOpts(this.doc.guid, this.opts))\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDoc}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentDoc} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // this needs to be reflected in doc.destroy as well\n    this.doc._item = item\n    transaction.subdocsAdded.add(this.doc)\n    if (this.doc.shouldLoad) {\n      transaction.subdocsLoaded.add(this.doc)\n    }\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (transaction.subdocsAdded.has(this.doc)) {\n      transaction.subdocsAdded.delete(this.doc)\n    } else {\n      transaction.subdocsRemoved.add(this.doc)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) { }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(this.doc.guid)\n    encoder.writeAny(this.opts)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 9\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentDoc}\n */\nexport const readContentDoc = decoder => new ContentDoc(createDocFromOpts(decoder.readString(), decoder.readAny()))\n", "\nimport {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @private\n */\nexport class ContentEmbed {\n  /**\n   * @param {Object} embed\n   */\n  constructor (embed) {\n    this.embed = embed\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.embed]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentEmbed}\n   */\n  copy () {\n    return new ContentEmbed(this.embed)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeJSON(this.embed)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 5\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentEmbed}\n */\nexport const readContentEmbed = decoder => new ContentEmbed(decoder.readJSON())\n", "\nimport {\n  YText, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Item, StructStore, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @private\n */\nexport class ContentFormat {\n  /**\n   * @param {string} key\n   * @param {Object} value\n   */\n  constructor (key, value) {\n    this.key = key\n    this.value = value\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentFormat}\n   */\n  copy () {\n    return new ContentFormat(this.key, this.value)\n  }\n\n  /**\n   * @param {number} _offset\n   * @return {ContentFormat}\n   */\n  splice (_offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentFormat} _right\n   * @return {boolean}\n   */\n  mergeWith (_right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} _transaction\n   * @param {Item} item\n   */\n  integrate (_transaction, item) {\n    // @todo searchmarker are currently unsupported for rich text documents\n    const p = /** @type {YText} */ (item.parent)\n    p._searchMarker = null\n    p._hasFormatting = true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeKey(this.key)\n    encoder.writeJSON(this.value)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 6\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentFormat}\n */\nexport const readContentFormat = decoder => new ContentFormat(decoder.readKey(), decoder.readJSON())\n", "import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @private\n */\nexport class ContentJSON {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentJSON}\n   */\n  copy () {\n    return new ContentJSON(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentJSON}\n   */\n  splice (offset) {\n    const right = new ContentJSON(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentJSON} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoder.writeLen(len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoder.writeString(c === undefined ? 'undefined' : JSON.stringify(c))\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 2\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentJSON}\n */\nexport const readContentJSON = decoder => {\n  const len = decoder.readLen()\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    const c = decoder.readString()\n    if (c === 'undefined') {\n      cs.push(undefined)\n    } else {\n      cs.push(JSON.parse(c))\n    }\n  }\n  return new ContentJSON(cs)\n}\n", "import {\n  UpdateEncoderV1, UpdateEncoderV2, UpdateDecoderV1, UpdateDecoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nexport class ContentAny {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentAny}\n   */\n  copy () {\n    return new ContentAny(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentAny}\n   */\n  splice (offset) {\n    const right = new ContentAny(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentAny} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoder.writeLen(len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoder.writeAny(c)\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 8\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentAny}\n */\nexport const readContentAny = decoder => {\n  const len = decoder.readLen()\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    cs.push(decoder.readAny())\n  }\n  return new ContentAny(cs)\n}\n", "import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @private\n */\nexport class ContentString {\n  /**\n   * @param {string} str\n   */\n  constructor (str) {\n    /**\n     * @type {string}\n     */\n    this.str = str\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.str.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.str.split('')\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentString}\n   */\n  copy () {\n    return new ContentString(this.str)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentString}\n   */\n  splice (offset) {\n    const right = new ContentString(this.str.slice(offset))\n    this.str = this.str.slice(0, offset)\n\n    // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\n    const firstCharCode = this.str.charCodeAt(offset - 1)\n    if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\n      // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\n      // We don't support splitting of surrogate pairs because this may lead to invalid documents.\n      // Replace the invalid character with a unicode replacement character (� / U+FFFD)\n      this.str = this.str.slice(0, offset - 1) + '�'\n      // replace right as well\n      right.str = '�' + right.str.slice(1)\n    }\n    return right\n  }\n\n  /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.str += right.str\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(offset === 0 ? this.str : this.str.slice(offset))\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 4\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentString}\n */\nexport const readContentString = decoder => new ContentString(decoder.readString())\n", "\nimport {\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item, YEvent, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractType<any>>}\n * @private\n */\nexport const typeRefs = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText\n]\n\nexport const YArrayRefID = 0\nexport const YMapRefID = 1\nexport const YTextRefID = 2\nexport const YXmlElementRefID = 3\nexport const YXmlFragmentRefID = 4\nexport const YXmlHookRefID = 5\nexport const YXmlTextRefID = 6\n\n/**\n * @private\n */\nexport class ContentType {\n  /**\n   * @param {AbstractType<any>} type\n   */\n  constructor (type) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.type]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentType}\n   */\n  copy () {\n    return new ContentType(this.type._copy())\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentType}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    this.type._integrate(transaction.doc, item)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    let item = this.type._start\n    while (item !== null) {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else if (item.id.clock < (transaction.beforeState.get(item.id.client) || 0)) {\n        // This will be gc'd later and we want to merge it if possible\n        // We try to merge all deleted items after each transaction,\n        // but we have no knowledge about that this needs to be merged\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n        transaction._mergeStructs.push(item)\n      }\n      item = item.right\n    }\n    this.type._map.forEach(item => {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else if (item.id.clock < (transaction.beforeState.get(item.id.client) || 0)) {\n        // same as above\n        transaction._mergeStructs.push(item)\n      }\n    })\n    transaction.changed.delete(this.type)\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    let item = this.type._start\n    while (item !== null) {\n      item.gc(store, true)\n      item = item.right\n    }\n    this.type._start = null\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\n      while (item !== null) {\n        item.gc(store, true)\n        item = item.left\n      }\n    })\n    this.type._map = new Map()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    this.type._write(encoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 7\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentType}\n */\nexport const readContentType = decoder => new ContentType(typeRefs[decoder.readTypeRef()](decoder))\n", "\nimport {\n  GC,\n  getState,\n  AbstractStruct,\n  replaceStruct,\n  addStruct,\n  addToDeleteSet,\n  findRootTypeKey,\n  compareIDs,\n  getItem,\n  getItemCleanEnd,\n  getItemCleanStart,\n  readContentDeleted,\n  readContentBinary,\n  readContentJSON,\n  readContentAny,\n  readContentString,\n  readContentEmbed,\n  readContentDoc,\n  createID,\n  readContentFormat,\n  readContentType,\n  addChangedTypeToTransaction,\n  isDeleted,\n  StackItem, DeleteSet, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ContentType, ContentDeleted, StructStore, ID, AbstractType, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\nimport * as binary from 'lib0/binary'\nimport * as array from 'lib0/array'\n\n/**\n * @todo This should return several items\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */\nexport const followRedone = (store, id) => {\n  /**\n   * @type {ID|null}\n   */\n  let nextID = id\n  let diff = 0\n  let item\n  do {\n    if (diff > 0) {\n      nextID = createID(nextID.client, nextID.clock + diff)\n    }\n    item = getItem(store, nextID)\n    diff = nextID.clock - item.id.clock\n    nextID = item.redone\n  } while (nextID !== null && item instanceof Item)\n  return {\n    item, diff\n  }\n}\n\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n * @param {boolean} keep\n */\nexport const keepItem = (item, keep) => {\n  while (item !== null && item.keep !== keep) {\n    item.keep = keep\n    item = /** @type {AbstractType<any>} */ (item.parent)._item\n  }\n}\n\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */\nexport const splitItem = (transaction, leftItem, diff) => {\n  // create rightItem\n  const { client, clock } = leftItem.id\n  const rightItem = new Item(\n    createID(client, clock + diff),\n    leftItem,\n    createID(client, clock + diff - 1),\n    leftItem.right,\n    leftItem.rightOrigin,\n    leftItem.parent,\n    leftItem.parentSub,\n    leftItem.content.splice(diff)\n  )\n  if (leftItem.deleted) {\n    rightItem.markDeleted()\n  }\n  if (leftItem.keep) {\n    rightItem.keep = true\n  }\n  if (leftItem.redone !== null) {\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff)\n  }\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n  leftItem.right = rightItem\n  // update right\n  if (rightItem.right !== null) {\n    rightItem.right.left = rightItem\n  }\n  // right is more specific.\n  transaction._mergeStructs.push(rightItem)\n  // update parent._map\n  if (rightItem.parentSub !== null && rightItem.right === null) {\n    /** @type {AbstractType<any>} */ (rightItem.parent)._map.set(rightItem.parentSub, rightItem)\n  }\n  leftItem.length = diff\n  return rightItem\n}\n\n/**\n * @param {Array<StackItem>} stack\n * @param {ID} id\n */\nconst isDeletedByUndoStack = (stack, id) => array.some(stack, /** @param {StackItem} s */ s => isDeleted(s.deletions, id))\n\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n * @param {DeleteSet} itemsToDelete\n * @param {boolean} ignoreRemoteMapChanges\n * @param {import('../utils/UndoManager.js').UndoManager} um\n *\n * @return {Item|null}\n *\n * @private\n */\nexport const redoItem = (transaction, item, redoitems, itemsToDelete, ignoreRemoteMapChanges, um) => {\n  const doc = transaction.doc\n  const store = doc.store\n  const ownClientID = doc.clientID\n  const redone = item.redone\n  if (redone !== null) {\n    return getItemCleanStart(transaction, redone)\n  }\n  let parentItem = /** @type {AbstractType<any>} */ (item.parent)._item\n  /**\n   * @type {Item|null}\n   */\n  let left = null\n  /**\n   * @type {Item|null}\n   */\n  let right\n  // make sure that parent is redone\n  if (parentItem !== null && parentItem.deleted === true) {\n    // try to undo parent if it will be undone anyway\n    if (parentItem.redone === null && (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems, itemsToDelete, ignoreRemoteMapChanges, um) === null)) {\n      return null\n    }\n    while (parentItem.redone !== null) {\n      parentItem = getItemCleanStart(transaction, parentItem.redone)\n    }\n  }\n  const parentType = parentItem === null ? /** @type {AbstractType<any>} */ (item.parent) : /** @type {ContentType} */ (parentItem.content).type\n\n  if (item.parentSub === null) {\n    // Is an array item. Insert at the old position\n    left = item.left\n    right = item\n    // find next cloned_redo items\n    while (left !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let leftTrace = left\n      // trace redone until parent matches\n      while (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item !== parentItem) {\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone)\n      }\n      if (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item === parentItem) {\n        left = leftTrace\n        break\n      }\n      left = left.left\n    }\n    while (right !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let rightTrace = right\n      // trace redone until parent matches\n      while (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item !== parentItem) {\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone)\n      }\n      if (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item === parentItem) {\n        right = rightTrace\n        break\n      }\n      right = right.right\n    }\n  } else {\n    right = null\n    if (item.right && !ignoreRemoteMapChanges) {\n      left = item\n      // Iterate right while right is in itemsToDelete\n      // If it is intended to delete right while item is redone, we can expect that item should replace right.\n      while (left !== null && left.right !== null && (left.right.redone || isDeleted(itemsToDelete, left.right.id) || isDeletedByUndoStack(um.undoStack, left.right.id) || isDeletedByUndoStack(um.redoStack, left.right.id))) {\n        left = left.right\n        // follow redone\n        while (left.redone) left = getItemCleanStart(transaction, left.redone)\n      }\n      if (left && left.right !== null) {\n        // It is not possible to redo this item because it conflicts with a\n        // change from another client\n        return null\n      }\n    } else {\n      left = parentType._map.get(item.parentSub) || null\n    }\n  }\n  const nextClock = getState(store, ownClientID)\n  const nextId = createID(ownClientID, nextClock)\n  const redoneItem = new Item(\n    nextId,\n    left, left && left.lastId,\n    right, right && right.id,\n    parentType,\n    item.parentSub,\n    item.content.copy()\n  )\n  item.redone = nextId\n  keepItem(redoneItem, true)\n  redoneItem.integrate(transaction, 0)\n  return redoneItem\n}\n\n/**\n * Abstract class that represents any content.\n */\nexport class Item extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\n    super(id, content.getLength())\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */\n    this.origin = origin\n    /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */\n    this.left = left\n    /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */\n    this.right = right\n    /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */\n    this.rightOrigin = rightOrigin\n    /**\n     * @type {AbstractType<any>|ID|null}\n     */\n    this.parent = parent\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */\n    this.parentSub = parentSub\n    /**\n     * If this type's effect is redone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */\n    this.redone = null\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = content\n    /**\n     * bit1: keep\n     * bit2: countable\n     * bit3: deleted\n     * bit4: mark - mark node as fast-search-marker\n     * @type {number} byte\n     */\n    this.info = this.content.isCountable() ? binary.BIT2 : 0\n  }\n\n  /**\n   * This is used to mark the item as an indexed fast-search marker\n   *\n   * @type {boolean}\n   */\n  set marker (isMarked) {\n    if (((this.info & binary.BIT4) > 0) !== isMarked) {\n      this.info ^= binary.BIT4\n    }\n  }\n\n  get marker () {\n    return (this.info & binary.BIT4) > 0\n  }\n\n  /**\n   * If true, do not garbage collect this Item.\n   */\n  get keep () {\n    return (this.info & binary.BIT1) > 0\n  }\n\n  set keep (doKeep) {\n    if (this.keep !== doKeep) {\n      this.info ^= binary.BIT1\n    }\n  }\n\n  get countable () {\n    return (this.info & binary.BIT2) > 0\n  }\n\n  /**\n   * Whether this item was deleted or not.\n   * @type {Boolean}\n   */\n  get deleted () {\n    return (this.info & binary.BIT3) > 0\n  }\n\n  set deleted (doDelete) {\n    if (this.deleted !== doDelete) {\n      this.info ^= binary.BIT3\n    }\n  }\n\n  markDeleted () {\n    this.info |= binary.BIT3\n  }\n\n  /**\n   * Return the creator clientID of the missing op or define missing items and return null.\n   *\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= getState(store, this.origin.client)) {\n      return this.origin.client\n    }\n    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= getState(store, this.rightOrigin.client)) {\n      return this.rightOrigin.client\n    }\n    if (this.parent && this.parent.constructor === ID && this.id.client !== this.parent.client && this.parent.clock >= getState(store, this.parent.client)) {\n      return this.parent.client\n    }\n\n    // We have all missing ids, now find the items\n\n    if (this.origin) {\n      this.left = getItemCleanEnd(transaction, store, this.origin)\n      this.origin = this.left.lastId\n    }\n    if (this.rightOrigin) {\n      this.right = getItemCleanStart(transaction, this.rightOrigin)\n      this.rightOrigin = this.right.id\n    }\n    if ((this.left && this.left.constructor === GC) || (this.right && this.right.constructor === GC)) {\n      this.parent = null\n    } else if (!this.parent) {\n      // only set parent if this shouldn't be garbage collected\n      if (this.left && this.left.constructor === Item) {\n        this.parent = this.left.parent\n        this.parentSub = this.left.parentSub\n      }\n      if (this.right && this.right.constructor === Item) {\n        this.parent = this.right.parent\n        this.parentSub = this.right.parentSub\n      }\n    } else if (this.parent.constructor === ID) {\n      const parentItem = getItem(store, this.parent)\n      if (parentItem.constructor === GC) {\n        this.parent = null\n      } else {\n        this.parent = /** @type {ContentType} */ (parentItem.content).type\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset\n      this.left = getItemCleanEnd(transaction, transaction.doc.store, createID(this.id.client, this.id.clock - 1))\n      this.origin = this.left.lastId\n      this.content = this.content.splice(offset)\n      this.length -= offset\n    }\n\n    if (this.parent) {\n      if ((!this.left && (!this.right || this.right.left !== null)) || (this.left && this.left.right !== this.right)) {\n        /**\n         * @type {Item|null}\n         */\n        let left = this.left\n\n        /**\n         * @type {Item|null}\n         */\n        let o\n        // set o to the first conflicting item\n        if (left !== null) {\n          o = left.right\n        } else if (this.parentSub !== null) {\n          o = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\n          while (o !== null && o.left !== null) {\n            o = o.left\n          }\n        } else {\n          o = /** @type {AbstractType<any>} */ (this.parent)._start\n        }\n        // TODO: use something like DeleteSet here (a tree implementation would be best)\n        // @todo use global set definitions\n        /**\n         * @type {Set<Item>}\n         */\n        const conflictingItems = new Set()\n        /**\n         * @type {Set<Item>}\n         */\n        const itemsBeforeOrigin = new Set()\n        // Let c in conflictingItems, b in itemsBeforeOrigin\n        // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n        // Note that conflictingItems is a subset of itemsBeforeOrigin\n        while (o !== null && o !== this.right) {\n          itemsBeforeOrigin.add(o)\n          conflictingItems.add(o)\n          if (compareIDs(this.origin, o.origin)) {\n            // case 1\n            if (o.id.client < this.id.client) {\n              left = o\n              conflictingItems.clear()\n            } else if (compareIDs(this.rightOrigin, o.rightOrigin)) {\n              // this and o are conflicting and point to the same integration points. The id decides which item comes first.\n              // Since this is to the left of o, we can break here\n              break\n            } // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\n          } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(transaction.doc.store, o.origin))) { // use getItem instead of getItemCleanEnd because we don't want / need to split items.\n            // case 2\n            if (!conflictingItems.has(getItem(transaction.doc.store, o.origin))) {\n              left = o\n              conflictingItems.clear()\n            }\n          } else {\n            break\n          }\n          o = o.right\n        }\n        this.left = left\n      }\n      // reconnect left/right + update parent map/start if necessary\n      if (this.left !== null) {\n        const right = this.left.right\n        this.right = right\n        this.left.right = this\n      } else {\n        let r\n        if (this.parentSub !== null) {\n          r = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\n          while (r !== null && r.left !== null) {\n            r = r.left\n          }\n        } else {\n          r = /** @type {AbstractType<any>} */ (this.parent)._start\n          ;/** @type {AbstractType<any>} */ (this.parent)._start = this\n        }\n        this.right = r\n      }\n      if (this.right !== null) {\n        this.right.left = this\n      } else if (this.parentSub !== null) {\n        // set as current parent value if right === null and this is parentSub\n        /** @type {AbstractType<any>} */ (this.parent)._map.set(this.parentSub, this)\n        if (this.left !== null) {\n          // this is the current attribute value of parent. delete right\n          this.left.delete(transaction)\n        }\n      }\n      // adjust length of parent\n      if (this.parentSub === null && this.countable && !this.deleted) {\n        /** @type {AbstractType<any>} */ (this.parent)._length += this.length\n      }\n      addStruct(transaction.doc.store, this)\n      this.content.integrate(transaction, this)\n      // add parent to transaction.changed\n      addChangedTypeToTransaction(transaction, /** @type {AbstractType<any>} */ (this.parent), this.parentSub)\n      if ((/** @type {AbstractType<any>} */ (this.parent)._item !== null && /** @type {AbstractType<any>} */ (this.parent)._item.deleted) || (this.parentSub !== null && this.right !== null)) {\n        // delete if parent is deleted or if this is not the current attribute value of parent\n        this.delete(transaction)\n      }\n    } else {\n      // parent is not defined. Integrate GC struct instead\n      new GC(this.id, this.length).integrate(transaction, 0)\n    }\n  }\n\n  /**\n   * Returns the next non-deleted item\n   */\n  get next () {\n    let n = this.right\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Returns the previous non-deleted item\n   */\n  get prev () {\n    let n = this.left\n    while (n !== null && n.deleted) {\n      n = n.left\n    }\n    return n\n  }\n\n  /**\n   * Computes the last content address of this Item.\n   */\n  get lastId () {\n    // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\n    return this.length === 1 ? this.id : createID(this.id.client, this.id.clock + this.length - 1)\n  }\n\n  /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (\n      this.constructor === right.constructor &&\n      compareIDs(right.origin, this.lastId) &&\n      this.right === right &&\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\n      this.id.client === right.id.client &&\n      this.id.clock + this.length === right.id.clock &&\n      this.deleted === right.deleted &&\n      this.redone === null &&\n      right.redone === null &&\n      this.content.constructor === right.content.constructor &&\n      this.content.mergeWith(right.content)\n    ) {\n      const searchMarker = /** @type {AbstractType<any>} */ (this.parent)._searchMarker\n      if (searchMarker) {\n        searchMarker.forEach(marker => {\n          if (marker.p === right) {\n            // right is going to be \"forgotten\" so we need to update the marker\n            marker.p = this\n            // adjust marker index\n            if (!this.deleted && this.countable) {\n              marker.index -= this.length\n            }\n          }\n        })\n      }\n      if (right.keep) {\n        this.keep = true\n      }\n      this.right = right.right\n      if (this.right !== null) {\n        this.right.left = this\n      }\n      this.length += right.length\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (!this.deleted) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\n      // adjust the length of parent\n      if (this.countable && this.parentSub === null) {\n        parent._length -= this.length\n      }\n      this.markDeleted()\n      addToDeleteSet(transaction.deleteSet, this.id.client, this.id.clock, this.length)\n      addChangedTypeToTransaction(transaction, parent, this.parentSub)\n      this.content.delete(transaction)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   */\n  gc (store, parentGCd) {\n    if (!this.deleted) {\n      throw error.unexpectedCase()\n    }\n    this.content.gc(store)\n    if (parentGCd) {\n      replaceStruct(store, this, new GC(this.id, this.length))\n    } else {\n      this.content = new ContentDeleted(this.length)\n    }\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin\n    const rightOrigin = this.rightOrigin\n    const parentSub = this.parentSub\n    const info = (this.content.getRef() & binary.BITS5) |\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n      (parentSub === null ? 0 : binary.BIT6) // parentSub is non-null\n    encoder.writeInfo(info)\n    if (origin !== null) {\n      encoder.writeLeftID(origin)\n    }\n    if (rightOrigin !== null) {\n      encoder.writeRightID(rightOrigin)\n    }\n    if (origin === null && rightOrigin === null) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\n      if (parent._item !== undefined) {\n        const parentItem = parent._item\n        if (parentItem === null) {\n          // parent type on y._map\n          // find the correct key\n          const ykey = findRootTypeKey(parent)\n          encoder.writeParentInfo(true) // write parentYKey\n          encoder.writeString(ykey)\n        } else {\n          encoder.writeParentInfo(false) // write parent id\n          encoder.writeLeftID(parentItem.id)\n        }\n      } else if (parent.constructor === String) { // this edge case was added by differential updates\n        encoder.writeParentInfo(true) // write parentYKey\n        encoder.writeString(parent)\n      } else if (parent.constructor === ID) {\n        encoder.writeParentInfo(false) // write parent id\n        encoder.writeLeftID(parent)\n      } else {\n        error.unexpectedCase()\n      }\n      if (parentSub !== null) {\n        encoder.writeString(parentSub)\n      }\n    }\n    this.content.write(encoder, offset)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @param {number} info\n */\nexport const readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder)\n\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractContent>}\n */\nexport const contentRefs = [\n  () => { error.unexpectedCase() }, // GC is not ItemContent\n  readContentDeleted, // 1\n  readContentJSON, // 2\n  readContentBinary, // 3\n  readContentString, // 4\n  readContentEmbed, // 5\n  readContentFormat, // 6\n  readContentType, // 7\n  readContentAny, // 8\n  readContentDoc, // 9\n  () => { error.unexpectedCase() } // 10 - Skip is not ItemContent\n]\n\n/**\n * Do not implement this class!\n */\nexport class AbstractContent {\n  /**\n   * @return {number}\n   */\n  getLength () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Should return false if this Item is some kind of meta information\n   * (e.g. format information).\n   *\n   * * Whether this Item should be addressable via `yarray.get(i)`\n   * * Whether this Item should be counted when computing yarray.length\n   *\n   * @return {boolean}\n   */\n  isCountable () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractContent}\n   */\n  copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {number} _offset\n   * @return {AbstractContent}\n   */\n  splice (_offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {AbstractContent} _right\n   * @return {boolean}\n   */\n  mergeWith (_right) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} _transaction\n   * @param {Item} _item\n   */\n  integrate (_transaction, _item) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} _transaction\n   */\n  delete (_transaction) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {StructStore} _store\n   */\n  gc (_store) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} _encoder\n   * @param {number} _offset\n   */\n  write (_encoder, _offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    throw error.methodUnimplemented()\n  }\n}\n", "\nimport {\n  AbstractStruct,\n  UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\nimport * as error from 'lib0/error'\nimport * as encoding from 'lib0/encoding'\n\nexport const structSkipRefNumber = 10\n\n/**\n * @private\n */\nexport class Skip extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {Skip} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    // skip structs cannot be integrated\n    error.unexpectedCase()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structSkipRefNumber)\n    // write as VarUint because Skips can't make use of predictable length-encoding\n    encoding.writeVarUint(encoder.restEncoder, this.length - offset)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n", "/** eslint-env browser */\n\nexport {\n  Doc,\n  Transaction,\n  YArray as Array,\n  YMap as Map,\n  YText as Text,\n  YXmlText as XmlText,\n  YXmlHook as XmlHook,\n  YXmlElement as XmlElement,\n  YXmlFragment as XmlFragment,\n  YXmlEvent,\n  YMapEvent,\n  YArrayEvent,\n  YTextEvent,\n  YEvent,\n  Item,\n  AbstractStruct,\n  GC,\n  ContentBinary,\n  ContentDeleted,\n  ContentEmbed,\n  ContentFormat,\n  ContentJSON,\n  ContentAny,\n  ContentString,\n  ContentType,\n  AbstractType,\n  getTypeChildren,\n  createRelativePositionFromTypeIndex,\n  createRelativePositionFromJSON,\n  createAbsolutePositionFromRelativePosition,\n  compareRelativePositions,\n  AbsolutePosition,\n  RelativePosition,\n  ID,\n  createID,\n  compareIDs,\n  getState,\n  Snapshot,\n  createSnapshot,\n  createDeleteSet,\n  createDeleteSetFromStructStore,\n  cleanupYTextFormatting,\n  snapshot,\n  emptySnapshot,\n  findRootTypeKey,\n  findIndexSS,\n  getItem,\n  typeListToArraySnapshot,\n  typeMapGetSnapshot,\n  createDocFromSnapshot,\n  iterateDeletedStructs,\n  applyUpdate,\n  applyUpdateV2,\n  readUpdate,\n  readUpdateV2,\n  encodeStateAsUpdate,\n  encodeStateAsUpdateV2,\n  encodeStateVector,\n  UndoManager,\n  decodeSnapshot,\n  encodeSnapshot,\n  decodeSnapshotV2,\n  encodeSnapshotV2,\n  decodeStateVector,\n  logUpdate,\n  logUpdateV2,\n  decodeUpdate,\n  decodeUpdateV2,\n  relativePositionToJSON,\n  isDeleted,\n  isParentOf,\n  equalSnapshots,\n  PermanentUserData, // @TODO experimental\n  tryGc,\n  transact,\n  AbstractConnector,\n  logType,\n  mergeUpdates,\n  mergeUpdatesV2,\n  parseUpdateMeta,\n  parseUpdateMetaV2,\n  encodeStateVectorFromUpdate,\n  encodeStateVectorFromUpdateV2,\n  encodeRelativePosition,\n  decodeRelativePosition,\n  diffUpdate,\n  diffUpdateV2,\n  convertUpdateFormatV1ToV2,\n  convertUpdateFormatV2ToV1,\n  obfuscateUpdate,\n  obfuscateUpdateV2,\n  UpdateEncoderV1,\n  equalDeleteSets,\n  snapshotContainsUpdate\n} from './internals.js'\n\nconst glo = /** @type {any} */ (typeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof window !== 'undefined'\n    ? window\n    // @ts-ignore\n    : typeof global !== 'undefined' ? global : {})\n\nconst importIdentifier = '__ $YJS$ __'\n\nif (glo[importIdentifier] === true) {\n  /**\n   * Dear reader of this message. Please take this seriously.\n   *\n   * If you see this message, make sure that you only import one version of Yjs. In many cases,\n   * your package manager installs two versions of Yjs that are used by different packages within your project.\n   * Another reason for this message is that some parts of your project use the commonjs version of Yjs\n   * and others use the EcmaScript version of Yjs.\n   *\n   * This often leads to issues that are hard to debug. We often need to perform constructor checks,\n   * e.g. `struct instanceof GC`. If you imported different versions of Yjs, it is impossible for us to\n   * do the constructor checks anymore - which might break the CRDT algorithm.\n   *\n   * https://github.com/yjs/yjs/issues/438\n   */\n  console.error('Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438')\n}\nglo[importIdentifier] = true\n", "/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n *\n * Binding for yjs and codemirror\n *\n * It is a simplification of https://github.com/yjs/y-codemirror.next\n * licensed under MIT License by Kevin Jahns\n */\nimport {\n  Annotation,\n  EditorSelection,\n  Extension,\n  Facet,\n  SelectionRange\n} from '@codemirror/state';\nimport { EditorView, ViewPlugin, ViewUpdate } from '@codemirror/view';\nimport type {\n  RelativePosition,\n  Text,\n  Transaction,\n  UndoManager,\n  YTextEvent\n} from 'yjs';\nimport {\n  createAbsolutePositionFromRelativePosition,\n  createRelativePositionFromJSON,\n  createRelativePositionFromTypeIndex,\n  relativePositionToJSON\n} from 'yjs';\n\nexport type ID = {\n  client: number;\n  clock: number;\n};\n\nexport type Position = {\n  type: ID | null;\n  tname: string | null;\n  item: ID | null;\n  assoc: number;\n};\n\nexport type Range = {\n  yanchor: Position;\n  yhead: Position;\n};\n\n/**\n * Defines a range on text using relative positions that can be transformed back to\n * absolute positions. (https://docs.yjs.dev/api/relative-positions)\n */\nexport class YRange {\n  /**\n   * @param yanchor\n   * @param yhead\n   */\n  constructor(\n    public yanchor: RelativePosition,\n    public yhead: RelativePosition\n  ) {}\n\n  /**\n   * Convert the position to JSON\n   */\n  toJSON(): Range {\n    return {\n      yanchor: relativePositionToJSON(this.yanchor),\n      yhead: relativePositionToJSON(this.yhead)\n    };\n  }\n\n  /**\n   * Convert a JSON range to a YRange\n   * @param json Range to convert\n   * @return The range as YRange\n   */\n  static fromJSON(json: Range): YRange {\n    return new YRange(\n      createRelativePositionFromJSON(json.yanchor),\n      createRelativePositionFromJSON(json.yhead)\n    );\n  }\n}\n\n/**\n * Yjs binding configuration\n */\nexport class YSyncConfig {\n  /**\n   * Create a new binding configuration\n   *\n   * @param ytext Yjs text to synchronize\n   */\n  constructor(public ytext: Text) {}\n\n  /**\n   * Helper function to transform an absolute index position to a Yjs-based relative position\n   * (https://docs.yjs.dev/api/relative-positions).\n   *\n   * A relative position can be transformed back to an absolute position even after the document has changed. The position is\n   * automatically adapted. This does not require any position transformations. Relative positions are computed based on\n   * the internal Yjs document model. Peers that share content through Yjs are guaranteed that their positions will always\n   * synced up when using relative positions.\n   *\n   * ```js\n   * import { ySyncFacet } from 'y-codemirror'\n   *\n   * ..\n   * const ysync = view.state.facet(ySyncFacet)\n   * // transform an absolute index position to a ypos\n   * const ypos = ysync.getYPos(3)\n   * // transform the ypos back to an absolute position\n   * ysync.fromYPos(ypos) // => 3\n   * ```\n   *\n   * It cannot be guaranteed that absolute index positions can be synced up between peers.\n   * This might lead to undesired behavior when implementing features that require that all peers see the\n   * same marked range (e.g. a comment plugin).\n   *\n   * @param pos\n   * @param assoc\n   */\n  toYPos(pos: number, assoc = 0): RelativePosition {\n    return createRelativePositionFromTypeIndex(this.ytext, pos, assoc);\n  }\n\n  /**\n   * @param rpos\n   */\n  fromYPos(rpos: RelativePosition | Record<string, any>) {\n    const pos = createAbsolutePositionFromRelativePosition(\n      createRelativePositionFromJSON(rpos),\n      this.ytext.doc!\n    );\n    if (pos == null || pos.type !== this.ytext) {\n      throw new Error(\n        '[y-codemirror] The position you want to retrieve was created by a different document'\n      );\n    }\n    return {\n      pos: pos.index,\n      assoc: pos.assoc\n    };\n  }\n\n  /**\n   * @param range\n   * @return\n   */\n  toYRange(range: SelectionRange): YRange {\n    const assoc = range.assoc;\n    const yanchor = this.toYPos(range.anchor, assoc);\n    const yhead = this.toYPos(range.head, assoc);\n    return new YRange(yanchor, yhead);\n  }\n\n  /**\n   * @param yrange\n   */\n  fromYRange(yrange: YRange): SelectionRange {\n    const anchor = this.fromYPos(yrange.yanchor);\n    const head = this.fromYPos(yrange.yhead);\n    if (anchor.pos === head.pos) {\n      return EditorSelection.cursor(head.pos, head.assoc);\n    }\n    return EditorSelection.range(anchor.pos, head.pos);\n  }\n}\n\n/**\n * Yjs binding facet\n */\nexport const ySyncFacet = Facet.define<YSyncConfig, YSyncConfig>({\n  combine(inputs) {\n    return inputs[inputs.length - 1];\n  }\n});\n\n/**\n * Yjs binding annotation\n *\n * It is used to track the origin of the document changes\n */\nexport const ySyncAnnotation = Annotation.define<YSyncConfig>();\n\n/**\n * Yjs binding view plugin to synchronize the\n * editor state with the Yjs document.\n */\nexport const ySync = ViewPlugin.fromClass(\n  class {\n    constructor(view: EditorView) {\n      this.conf = view.state.facet(ySyncFacet);\n      this._observer = (event: YTextEvent, tr: Transaction) => {\n        if (tr.origin !== this.conf) {\n          const delta = event.delta;\n          const changes: any[] = [];\n          let pos = 0;\n          for (let i = 0; i < delta.length; i++) {\n            const d = delta[i];\n            if (d.insert != null) {\n              changes.push({ from: pos, to: pos, insert: d.insert });\n            } else if (d.delete != null) {\n              changes.push({ from: pos, to: pos + d.delete, insert: '' });\n              pos += d.delete;\n            } else {\n              pos += d.retain ?? 0;\n            }\n          }\n          view.dispatch({\n            changes,\n            // Specified the changes origin to not loop when synchronizing\n            annotations: [ySyncAnnotation.of(this.conf)]\n          });\n        }\n      };\n      this._ytext = this.conf.ytext;\n      this._ytext.observe(this._observer);\n    }\n\n    update(update: ViewUpdate) {\n      if (\n        !update.docChanged ||\n        (update.transactions.length > 0 &&\n          update.transactions[0].annotation(ySyncAnnotation) === this.conf)\n      ) {\n        return;\n      }\n\n      const ytext = this.conf.ytext;\n      ytext.doc!.transact(() => {\n        /**\n         * This variable adjusts the fromA position to the current position in the Y.Text type.\n         */\n        let adj = 0;\n        update.changes.iterChanges((fromA, toA, fromB, toB, insert) => {\n          const insertText = insert.sliceString(0, insert.length, '\\n');\n          if (fromA !== toA) {\n            ytext.delete(fromA + adj, toA - fromA);\n          }\n          if (insertText.length > 0) {\n            ytext.insert(fromA + adj, insertText);\n          }\n          adj += insertText.length - (toA - fromA);\n        });\n        // Set the configuration as origin to not loop when synchronizing\n      }, this.conf);\n    }\n\n    destroy() {\n      this._ytext.unobserve(this._observer);\n    }\n\n    conf: YSyncConfig;\n    _observer: (event: YTextEvent, tr: Transaction) => void;\n    _ytext: Text;\n  }\n);\n\n/**\n * Extension for CodeMirror 6 binding the Yjs text (source of truth)\n * and the editor state.\n *\n * @param ytext Yjs text to bind\n * @param undoManager Yjs text undo manager\n * @returns CodeMirror 6 extension\n */\nexport function ybinding({\n  ytext,\n  undoManager\n}: {\n  ytext: Text;\n  undoManager?: UndoManager;\n}): Extension {\n  const ySyncConfig = new YSyncConfig(ytext);\n  // We don't need the undo manager extension as in y-codemirror.next\n  // because we deal with undo/redo with our own keyboard shortcut mechanism.\n  return [\n    ySyncFacet.of(ySyncConfig),\n    ySync,\n    // We need to add a new origin to the undo manager to ensure text updates\n    // are tracked.\n    undoManager\n      ? ViewPlugin.define(() => {\n          undoManager.addTrackedOrigin(ySyncConfig);\n          return {\n            destroy: () => {\n              undoManager.removeTrackedOrigin(ySyncConfig);\n            }\n          };\n        })\n      : []\n  ];\n}\n", "/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n\nexport * from './customStyle';\nexport * from './ipython-md';\nexport * from './rulers';\nexport * from './ybinding';\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { closeBrackets, closeBracketsKeymap } from '@codemirror/autocomplete';\nimport { defaultKeymap, indentLess } from '@codemirror/commands';\nimport {\n  bracketMatching,\n  foldGutter,\n  indentOnInput,\n  indentUnit\n} from '@codemirror/language';\nimport {\n  Compartment,\n  EditorState,\n  Extension,\n  Prec,\n  StateEffect\n} from '@codemirror/state';\nimport {\n  crosshairCursor,\n  drawSelection,\n  EditorView,\n  highlightActiveLine,\n  highlightTrailingWhitespace,\n  highlightWhitespace,\n  KeyBinding,\n  keymap,\n  lineNumbers,\n  rectangularSelection,\n  scrollPastEnd,\n  tooltips\n} from '@codemirror/view';\nimport { ITranslator, nullTranslator } from '@jupyterlab/translation';\nimport { JSONExt, ReadonlyJSONObject } from '@lumino/coreutils';\nimport { IObservableDisposable } from '@lumino/disposable';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { StateCommands } from './commands';\nimport { customTheme, CustomTheme, rulers } from './extensions';\nimport {\n  IConfigurableExtension,\n  IEditorExtensionFactory,\n  IEditorExtensionRegistry,\n  IEditorThemeRegistry,\n  IExtensionsHandler\n} from './token';\n\n/**\n * The class name added to read only editor widgets.\n */\nconst READ_ONLY_CLASS = 'jp-mod-readOnly';\n\n/**\n * Editor configuration handler options\n */\nexport interface IEditorHandlerOptions {\n  /**\n   * The base configuration options for all editor.\n   */\n  baseConfiguration?: Record<string, any>;\n  /**\n   * The configuration options for the editor.\n   *\n   * They take precendence over the base configuration.\n   */\n  config?: Record<string, any>;\n  /**\n   * Editor default extensions.\n   *\n   * Extension defined in the mapping without a base configuration\n   * will not be configurable.\n   */\n  defaultExtensions?: [string, IConfigurableExtension<any>][];\n}\n\n/**\n * Editor configuration handler\n *\n * It stores the editor configuration and the editor extensions.\n * It also allows to inject new extensions into an editor.\n */\nexport class ExtensionsHandler\n  implements IExtensionsHandler, IObservableDisposable\n{\n  constructor({\n    baseConfiguration,\n    config,\n    defaultExtensions\n  }: IEditorHandlerOptions = {}) {\n    this._baseConfig = baseConfiguration ?? {};\n    this._config = config ?? {};\n\n    this._configurableBuilderMap = new Map<string, IConfigurableExtension<any>>(\n      defaultExtensions\n    );\n\n    const configurables = Object.keys(this._config).concat(\n      Object.keys(this._baseConfig)\n    );\n    this._immutables = new Set(\n      [...this._configurableBuilderMap.keys()].filter(\n        key => !configurables.includes(key)\n      )\n    );\n  }\n\n  /**\n   * Signal triggered when the editor configuration changes.\n   * It provides the mapping of the new configuration (only those that changed).\n   *\n   * It should result in a call to `IExtensionsHandler.reconfigureExtensions`.\n   */\n  get configChanged(): ISignal<this, Record<string, any>> {\n    return this._configChanged;\n  }\n\n  /**\n   * A signal emitted when the object is disposed.\n   */\n  get disposed(): ISignal<this, void> {\n    return this._disposed;\n  }\n\n  /**\n   * Tests whether the object is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * Dispose of the resources held by the object.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    this._disposed.emit();\n    Signal.clearData(this);\n  }\n\n  /**\n   * Get a config option for the editor.\n   */\n  getOption(option: string): unknown {\n    return this._config[option] ?? this._baseConfig[option];\n  }\n\n  /**\n   * Whether the option exists or not.\n   */\n  hasOption(option: string): boolean {\n    return (\n      Object.keys(this._config).includes(option) ||\n      Object.keys(this._baseConfig).includes(option)\n    );\n  }\n\n  /**\n   * Set a config option for the editor.\n   *\n   * You will need to reconfigure the editor extensions by listening\n   * to `IExtensionsHandler.configChanged`.\n   */\n  setOption(option: string, value: unknown): void {\n    // Don't bother setting the option if it is already the same.\n    if (this._config[option] !== value) {\n      this._config[option] = value;\n      this._configChanged.emit({ [option]: value });\n    }\n  }\n\n  /**\n   * Set a base config option for the editor.\n   *\n   * You will need to reconfigure the editor extensions by listening\n   * to `IExtensionsHandler.configChanged`.\n   */\n  setBaseOptions(options: Record<string, any>): void {\n    const changed = this._getChangedOptions(options, this._baseConfig);\n    if (changed.length > 0) {\n      this._baseConfig = options;\n      const customizedKeys = Object.keys(this._config);\n      const notOverridden = changed.filter(k => !customizedKeys.includes(k));\n      if (notOverridden.length > 0) {\n        this._configChanged.emit(\n          notOverridden.reduce<Record<string, any>>((agg, key) => {\n            agg[key] = this._baseConfig[key];\n            return agg;\n          }, {})\n        );\n      }\n    }\n  }\n\n  /**\n   * Set config options for the editor.\n   *\n   * You will need to reconfigure the editor extensions by listening\n   * to `EditorHandler.configChanged`.\n   *\n   * This method is preferred when setting several options. The\n   * options are set within an operation, which only performs\n   * the costly update at the end, and not after every option\n   * is set.\n   */\n  setOptions(options: Record<string, any>): void {\n    const changed = this._getChangedOptions(options, this._config);\n    if (changed.length > 0) {\n      this._config = { ...options };\n\n      this._configChanged.emit(\n        changed.reduce<Record<string, any>>((agg, key) => {\n          agg[key] = this._config[key] ?? this._baseConfig[key];\n          return agg;\n        }, {})\n      );\n    }\n  }\n\n  /**\n   * Reconfigures the extension mapped with key with the provided value.\n   *\n   * @param view Editor view\n   * @param key Parameter unique key\n   * @param value Parameter value to be applied\n   */\n  reconfigureExtension<T>(view: EditorView, key: string, value: T): void {\n    const effect = this.getEffect<T>(view.state, key, value);\n\n    if (effect) {\n      view.dispatch({\n        effects: [effect]\n      });\n    }\n  }\n\n  /**\n   * Reconfigures all the extensions mapped with the options from the\n   * provided partial configuration.\n   *\n   * @param view Editor view\n   * @param configuration Editor configuration\n   */\n  reconfigureExtensions(\n    view: EditorView,\n    configuration: Record<string, any>\n  ): void {\n    const effects = Object.keys(configuration)\n      .filter(key => this.has(key))\n      .map(key => this.getEffect(view.state, key, configuration[key]));\n\n    view.dispatch({\n      effects: effects.filter(\n        effect => effect !== null\n      ) as StateEffect<unknown>[]\n    });\n  }\n\n  /**\n   * Appends extensions to the top-level configuration of the\n   * editor.\n   *\n   * Injected extension cannot be removed.\n   *\n   * ### Notes\n   * You should prefer registering a IEditorExtensionFactory instead\n   * of this feature.\n   *\n   * @alpha\n   * @param view Editor view\n   * @param extension Editor extension to inject\n   */\n  injectExtension(view: EditorView, extension: Extension): void {\n    view.dispatch({\n      effects: StateEffect.appendConfig.of(extension)\n    });\n  }\n\n  /**\n   * Returns the list of initial extensions of an editor\n   * based on the configuration.\n   *\n   * @returns The initial editor extensions\n   */\n  getInitialExtensions(): Extension[] {\n    const configuration = { ...this._baseConfig, ...this._config };\n\n    const extensions = [...this._immutables]\n      .map(key => this.get(key)?.instance(undefined))\n      .filter(ext => ext) as Extension[];\n    for (const k of Object.keys(configuration)) {\n      const builder = this.get(k);\n      if (builder) {\n        const value = configuration[k];\n        extensions.push(builder.instance(value));\n      }\n    }\n\n    return extensions;\n  }\n\n  /**\n   * Get a extension builder\n   * @param key Extension unique identifier\n   * @returns The extension builder\n   */\n  protected get(key: string): IConfigurableExtension<any> | undefined {\n    return this._configurableBuilderMap.get(key);\n  }\n\n  /**\n   * Whether the editor has an extension for the identifier.\n   *\n   * @param key Extension unique identifier\n   * @returns Extension existence\n   */\n  protected has(key: string): boolean {\n    return this._configurableBuilderMap.has(key);\n  }\n\n  protected getEffect<T>(\n    state: EditorState,\n    key: string,\n    value: T\n  ): StateEffect<unknown> | null {\n    const builder = this.get(key);\n    return builder?.reconfigure(value) ?? null;\n  }\n\n  private _getChangedOptions(\n    newConfig: Record<string, any>,\n    oldConfig: Record<string, any>\n  ): string[] {\n    const changed = new Array<string>();\n    const newKeys = new Array<string>();\n    for (const [key, value] of Object.entries(newConfig)) {\n      newKeys.push(key);\n      if (oldConfig[key] !== value) {\n        changed.push(key);\n      }\n    }\n    // Add removed old keys\n    changed.push(...Object.keys(oldConfig).filter(k => !newKeys.includes(k)));\n\n    return changed;\n  }\n\n  private _baseConfig: Record<string, any>;\n  private _config: Record<string, any>;\n  private _configChanged = new Signal<this, Record<string, any>>(this);\n  private _configurableBuilderMap: Map<string, IConfigurableExtension<any>>;\n  private _disposed = new Signal<this, void>(this);\n  private _isDisposed = false;\n  private _immutables = new Set<string>();\n}\n\n/**\n * CodeMirror extensions registry\n */\nexport class EditorExtensionRegistry implements IEditorExtensionRegistry {\n  /**\n   * Base editor configuration\n   *\n   * This is the default configuration optionally modified by the user;\n   * e.g. through user settings.\n   */\n  get baseConfiguration(): Record<string, any> {\n    return { ...this.defaultOptions, ...this._baseConfiguration };\n  }\n  set baseConfiguration(v: Record<string, any>) {\n    if (!JSONExt.deepEqual(v, this._baseConfiguration)) {\n      this._baseConfiguration = v;\n      for (const handler of this.handlers) {\n        handler.setBaseOptions(this.baseConfiguration);\n      }\n    }\n  }\n\n  /**\n   * Default editor configuration\n   *\n   * This is the default configuration as defined when extensions\n   * are registered.\n   */\n  get defaultConfiguration(): Record<string, any> {\n    // Only options with schema should be JSON serializable\n    // So we cannot use `JSONExt.deepCopy` on the default options.\n    return Object.freeze({ ...this.defaultOptions });\n  }\n\n  /**\n   * Editor configuration JSON schema\n   */\n  get settingsSchema(): ReadonlyJSONObject {\n    return Object.freeze(JSONExt.deepCopy(this.configurationSchema));\n  }\n\n  /**\n   * Add a default editor extension\n   *\n   * @template T Extension parameter type\n   * @param factory Extension factory\n   */\n  addExtension<T>(factory: IEditorExtensionFactory<T>): void {\n    if (this.configurationBuilder.has(factory.name)) {\n      throw new Error(`Extension named ${factory.name} is already registered.`);\n    }\n\n    this.configurationBuilder.set(factory.name, factory);\n    if (typeof factory.default != 'undefined') {\n      this.defaultOptions[factory.name] = factory.default;\n    }\n    if (factory.schema) {\n      this.configurationSchema[factory.name] = {\n        default: factory.default ?? null,\n        ...factory.schema\n      };\n      this.defaultOptions[factory.name] =\n        this.configurationSchema[factory.name].default;\n    }\n  }\n\n  /**\n   * Create a new extensions handler for an editor\n   *\n   * @param options Extensions options and initial editor configuration\n   */\n  createNew(\n    options: IEditorExtensionFactory.IOptions & {\n      /**\n       * The configuration options for the editor.\n       */\n      config?: Record<string, any>;\n    }\n  ): IExtensionsHandler {\n    const configuration = new Array<[string, IConfigurableExtension<any>]>();\n    for (const [key, builder] of this.configurationBuilder.entries()) {\n      const extension = builder.factory(options);\n      if (extension) {\n        configuration.push([key, extension]);\n      }\n    }\n\n    const handler = new ExtensionsHandler({\n      baseConfiguration: this.baseConfiguration,\n      config: options.config,\n      defaultExtensions: configuration\n    });\n\n    this.handlers.add(handler);\n    handler.disposed.connect(() => {\n      this.handlers.delete(handler);\n    });\n\n    return handler;\n  }\n  protected configurationBuilder = new Map<\n    string,\n    IEditorExtensionFactory<any>\n  >();\n  protected configurationSchema: Record<string, any> = {};\n\n  protected defaultOptions: Record<string, any> = {};\n  protected handlers = new Set<ExtensionsHandler>();\n  protected immutableExtensions = new Set<string>();\n  private _baseConfiguration: Record<string, any> = {};\n}\n\n/**\n * Editor extension registry namespace\n */\nexport namespace EditorExtensionRegistry {\n  /**\n   * Dynamically configurable editor extension.\n   */\n  class ConfigurableExtension<T> implements IConfigurableExtension<T> {\n    /**\n     * Create a dynamic editor extension.\n     *\n     * @param builder Extension builder\n     */\n    constructor(builder: (value: T) => Extension) {\n      this._compartment = new Compartment();\n      this._builder = builder;\n    }\n\n    /**\n     * Create an editor extension for the provided value.\n     *\n     * @param value Editor extension parameter value\n     * @returns The editor extension\n     */\n    instance(value: T): Extension {\n      return this._compartment.of(this._builder(value));\n    }\n\n    /**\n     * Reconfigure an editor extension.\n     *\n     * @param value Editor extension value\n     * @returns Editor state effect\n     */\n    reconfigure(value: T): StateEffect<T> {\n      return this._compartment.reconfigure(\n        this._builder(value)\n      ) as StateEffect<T>;\n    }\n\n    private _compartment: Compartment;\n    private _builder: (value: T) => Extension;\n  }\n\n  /**\n   * Immutable editor extension class\n   */\n  class ImmutableExtension implements IConfigurableExtension<undefined> {\n    /**\n     * Create an immutable editor extension.\n     *\n     * @param extension Extension\n     */\n    constructor(extension: Extension) {\n      this._extension = extension;\n    }\n\n    /**\n     * Create an editor extension.\n     *\n     * @returns The editor extension\n     */\n    instance(): Extension {\n      return this._extension;\n    }\n\n    /**\n     * Reconfigure an editor extension.\n     *\n     * This is a no-op\n     */\n    reconfigure(): null {\n      // This is a no-op\n      return null;\n    }\n\n    private _extension: Extension;\n  }\n\n  /**\n   * Creates a dynamically configurable editor extension.\n   *\n   * @param builder Extension builder\n   * @return The extension\n   */\n  export function createConfigurableExtension<T>(\n    builder: (value: T) => Extension\n  ): IConfigurableExtension<T> {\n    return new ConfigurableExtension<T>(builder);\n  }\n\n  /**\n   * Creates a configurable extension returning\n   * one of two extensions depending on a boolean value.\n   *\n   * @param truthy Extension to apply when the parameter is true\n   * @param falsy Extension to apply when the parameter is false\n   * @return The extension\n   */\n  export function createConditionalExtension(\n    truthy: Extension,\n    falsy: Extension = []\n  ): IConfigurableExtension<boolean> {\n    return new ConfigurableExtension<boolean>(value =>\n      value ? truthy : falsy\n    );\n  }\n\n  /**\n   * Creates an immutable extension.\n   *\n   * @param extension Immutable extension\n   * @return The extension\n   */\n  export function createImmutableExtension(\n    extension: Extension\n  ): IConfigurableExtension<undefined> {\n    return new ImmutableExtension(extension);\n  }\n\n  /**\n   * Get the default editor extensions.\n   *\n   * @returns CodeMirror 6 extension factories\n   */\n  export function getDefaultExtensions(\n    options: {\n      themes?: IEditorThemeRegistry;\n      translator?: ITranslator | null;\n    } = {}\n  ): ReadonlyArray<Readonly<IEditorExtensionFactory<any>>> {\n    const { themes, translator } = options;\n    const trans = (translator ?? nullTranslator).load('jupyterlab');\n    const extensions: IEditorExtensionFactory<any>[] = [\n      Object.freeze({\n        name: 'autoClosingBrackets',\n        default: false,\n        factory: () => createConditionalExtension(closeBrackets()),\n        schema: {\n          type: 'boolean',\n          title: trans.__('Auto Closing Brackets')\n        }\n      }),\n      Object.freeze({\n        name: 'codeFolding',\n        default: false,\n        factory: () => createConditionalExtension(foldGutter()),\n        schema: {\n          type: 'boolean',\n          title: trans.__('Code Folding')\n        }\n      }),\n      Object.freeze({\n        name: 'cursorBlinkRate',\n        default: 1200,\n        factory: () =>\n          createConfigurableExtension((value: number) =>\n            drawSelection({ cursorBlinkRate: value })\n          ),\n        schema: {\n          type: 'number',\n          title: trans.__('Cursor blinking rate'),\n          description: trans.__(\n            'Half-period in milliseconds used for cursor blinking. The default blink rate is 1200ms. By setting this to zero, blinking can be disabled.'\n          )\n        }\n      }),\n      Object.freeze({\n        name: 'highlightActiveLine',\n        default: false,\n        factory: () => createConditionalExtension(highlightActiveLine()),\n        schema: {\n          type: 'boolean',\n          title: trans.__('Highlight the active line')\n        }\n      }),\n      Object.freeze({\n        name: 'highlightTrailingWhitespace',\n        default: false,\n        factory: () =>\n          createConditionalExtension(highlightTrailingWhitespace()),\n        schema: {\n          type: 'boolean',\n          title: trans.__('Highlight trailing white spaces')\n        }\n      }),\n      Object.freeze({\n        name: 'highlightWhitespace',\n        default: false,\n        factory: () => createConditionalExtension(highlightWhitespace()),\n        schema: {\n          type: 'boolean',\n          title: trans.__('Highlight white spaces')\n        }\n      }),\n      Object.freeze({\n        name: 'indentUnit',\n        default: '4',\n        factory: () =>\n          createConfigurableExtension<string>((value: string) =>\n            value == 'Tab'\n              ? indentUnit.of('\\t')\n              : indentUnit.of(' '.repeat(parseInt(value, 10)))\n          ),\n        schema: {\n          type: 'string',\n          title: trans.__('Indentation unit'),\n          description: trans.__(\n            'The indentation is a `Tab` or the number of spaces. This defaults to 4 spaces.'\n          ),\n          enum: ['Tab', '1', '2', '4', '8']\n        }\n      }),\n      // Default keyboard shortcuts\n      // TODO at some point we may want to get this configurable\n      Object.freeze({\n        name: 'keymap',\n        default: [\n          ...defaultKeymap,\n          {\n            key: 'Tab',\n            run: StateCommands.indentMoreOrInsertTab,\n            shift: indentLess\n          }\n        ],\n        factory: () =>\n          createConfigurableExtension<KeyBinding[]>(value => keymap.of(value))\n      }),\n      Object.freeze({\n        name: 'lineNumbers',\n        default: true,\n        factory: () => createConditionalExtension(lineNumbers()),\n        schema: {\n          type: 'boolean',\n          title: trans.__('Line Numbers')\n        }\n      }),\n      Object.freeze({\n        name: 'lineWrap',\n        factory: () => createConditionalExtension(EditorView.lineWrapping),\n        default: true,\n        schema: {\n          type: 'boolean',\n          title: trans.__('Line Wrap')\n        }\n      }),\n      Object.freeze({\n        name: 'matchBrackets',\n        default: true,\n        factory: () =>\n          createConditionalExtension([\n            bracketMatching(),\n            // closeBracketsKeymap must have higher precedence over defaultKeymap\n            Prec.high(keymap.of(closeBracketsKeymap))\n          ]),\n        schema: {\n          type: 'boolean',\n          title: trans.__('Match Brackets')\n        }\n      }),\n      Object.freeze({\n        name: 'rectangularSelection',\n        default: true,\n        factory: () =>\n          createConditionalExtension([\n            rectangularSelection(),\n            crosshairCursor()\n          ]),\n        schema: {\n          type: 'boolean',\n          title: trans.__('Rectangular selection'),\n          description: trans.__(\n            'Rectangular (block) selection can be created by dragging the mouse pointer while holding the left mouse button and the Alt key. When the Alt key is pressed, a crosshair cursor will appear, indicating that the rectangular selection mode is active.'\n          )\n        }\n      }),\n      Object.freeze({\n        name: 'readOnly',\n        default: false,\n        factory: () =>\n          createConfigurableExtension((value: boolean) => [\n            EditorState.readOnly.of(value),\n            value\n              ? EditorView.editorAttributes.of({ class: READ_ONLY_CLASS })\n              : []\n          ])\n      }),\n      Object.freeze({\n        name: 'rulers',\n        default: [],\n        factory: () =>\n          createConfigurableExtension((value: number[]) =>\n            value.length > 0 ? rulers(value) : []\n          ),\n        schema: {\n          type: 'array',\n          title: trans.__('Rulers'),\n          items: {\n            type: 'number',\n            minimum: 0\n          }\n        }\n      }),\n      Object.freeze({\n        name: 'scrollPastEnd',\n        default: false,\n        factory: (options: IEditorExtensionFactory.IOptions) =>\n          options.inline ? null : createConditionalExtension(scrollPastEnd())\n      }),\n      Object.freeze({\n        name: 'smartIndent',\n        default: true,\n        factory: () => createConditionalExtension(indentOnInput()),\n        schema: {\n          type: 'boolean',\n          title: trans.__('Smart Indentation')\n        }\n      }),\n      Object.freeze({\n        name: 'tabSize',\n        default: 4,\n        factory: () =>\n          createConfigurableExtension((value: number) =>\n            EditorState.tabSize.of(value)\n          ),\n        schema: {\n          type: 'number',\n          title: trans.__('Tab size')\n        }\n      }),\n      Object.freeze({\n        name: 'tooltips',\n        factory: () =>\n          // we need `absolute` due to use of `contain: layout` in lumino;\n          // we attach to body to ensure cursor collaboration tooltip is\n          // visible in first line of the editor.\n          createImmutableExtension(\n            tooltips({\n              position: 'absolute',\n              parent: document.body\n            })\n          )\n      }),\n      Object.freeze({\n        name: 'allowMultipleSelections',\n        default: true,\n        factory: () =>\n          createConfigurableExtension((value: boolean) =>\n            EditorState.allowMultipleSelections.of(value)\n          ),\n        schema: {\n          type: 'boolean',\n          title: trans.__('Multiple selections')\n        }\n      }),\n      Object.freeze({\n        name: 'customStyles',\n        factory: () =>\n          createConfigurableExtension<CustomTheme>(config =>\n            customTheme(config)\n          ),\n        default: {\n          fontFamily: null,\n          fontSize: null,\n          lineHeight: null\n        },\n        schema: {\n          title: trans.__('Custom editor styles'),\n          type: 'object',\n          properties: {\n            fontFamily: {\n              type: ['string', 'null'],\n              title: trans.__('Font Family')\n            },\n            fontSize: {\n              type: ['number', 'null'],\n              minimum: 1,\n              maximum: 100,\n              title: trans.__('Font Size')\n            },\n            lineHeight: {\n              type: ['number', 'null'],\n              title: trans.__('Line Height')\n            }\n          },\n          additionalProperties: false\n        }\n      })\n    ];\n\n    if (themes) {\n      extensions.push(\n        Object.freeze({\n          name: 'theme',\n          default: 'jupyter',\n          factory: () =>\n            createConfigurableExtension<string>(value =>\n              themes.getTheme(value)\n            ),\n          schema: {\n            type: 'string',\n            title: trans.__('Theme'),\n            description: trans.__('CodeMirror theme')\n          }\n        })\n      );\n    }\n\n    if (translator) {\n      extensions.push(\n        Object.freeze({\n          name: 'translation',\n          // The list of internal strings is available at https://codemirror.net/examples/translate/\n          default: {\n            // @codemirror/view\n            'Control character': trans.__('Control character'),\n            // @codemirror/commands\n            'Selection deleted': trans.__('Selection deleted'),\n            // @codemirror/language\n            'Folded lines': trans.__('Folded lines'),\n            'Unfolded lines': trans.__('Unfolded lines'),\n            to: trans.__('to'),\n            'folded code': trans.__('folded code'),\n            unfold: trans.__('unfold'),\n            'Fold line': trans.__('Fold line'),\n            'Unfold line': trans.__('Unfold line'),\n            // @codemirror/search\n            'Go to line': trans.__('Go to line'),\n            go: trans.__('go'),\n            Find: trans.__('Find'),\n            Replace: trans.__('Replace'),\n            next: trans.__('next'),\n            previous: trans.__('previous'),\n            all: trans.__('all'),\n            'match case': trans.__('match case'),\n            replace: trans.__('replace'),\n            'replace all': trans.__('replace all'),\n            close: trans.__('close'),\n            'current match': trans.__('current match'),\n            'replaced $ matches': trans.__('replaced $ matches'),\n            'replaced match on line $': trans.__('replaced match on line $'),\n            'on line': trans.__('on line'),\n            // @codemirror/autocomplete\n            Completions: trans.__('Completions'),\n            // @codemirror/lint\n            Diagnostics: trans.__('Diagnostics'),\n            'No diagnostics': trans.__('No diagnostics')\n          },\n          factory: () =>\n            createConfigurableExtension<Record<string, string>>(value =>\n              EditorState.phrases.of(value)\n            )\n        })\n      );\n    }\n\n    return extensions;\n  }\n}\n", null, null, null, null, "/**\n * @module awareness-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as time from 'lib0/time'\nimport * as math from 'lib0/math'\nimport { Observable } from 'lib0/observable'\nimport * as f from 'lib0/function'\nimport * as Y from 'yjs' // eslint-disable-line\n\nexport const outdatedTimeout = 30000\n\n/**\n * @typedef {Object} MetaClientState\n * @property {number} MetaClientState.clock\n * @property {number} MetaClientState.lastUpdated unix timestamp\n */\n\n/**\n * The Awareness class implements a simple shared state protocol that can be used for non-persistent data like awareness information\n * (cursor, username, status, ..). Each client can update its own local state and listen to state changes of\n * remote clients. Every client may set a state of a remote peer to `null` to mark the client as offline.\n *\n * Each client is identified by a unique client id (something we borrow from `doc.clientID`). A client can override\n * its own state by propagating a message with an increasing timestamp (`clock`). If such a message is received, it is\n * applied if the known state of that client is older than the new state (`clock < newClock`). If a client thinks that\n * a remote client is offline, it may propagate a message with\n * `{ clock: currentClientClock, state: null, client: remoteClient }`. If such a\n * message is received, and the known clock of that client equals the received clock, it will override the state with `null`.\n *\n * Before a client disconnects, it should propagate a `null` state with an updated clock.\n *\n * Awareness states must be updated every 30 seconds. Otherwise the Awareness instance will delete the client state.\n *\n * @extends {Observable<string>}\n */\nexport class Awareness extends Observable {\n  /**\n   * @param {Y.Doc} doc\n   */\n  constructor (doc) {\n    super()\n    this.doc = doc\n    /**\n     * @type {number}\n     */\n    this.clientID = doc.clientID\n    /**\n     * Maps from client id to client state\n     * @type {Map<number, Object<string, any>>}\n     */\n    this.states = new Map()\n    /**\n     * @type {Map<number, MetaClientState>}\n     */\n    this.meta = new Map()\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      const now = time.getUnixTime()\n      if (this.getLocalState() !== null && (outdatedTimeout / 2 <= now - /** @type {{lastUpdated:number}} */ (this.meta.get(this.clientID)).lastUpdated)) {\n        // renew local clock\n        this.setLocalState(this.getLocalState())\n      }\n      /**\n       * @type {Array<number>}\n       */\n      const remove = []\n      this.meta.forEach((meta, clientid) => {\n        if (clientid !== this.clientID && outdatedTimeout <= now - meta.lastUpdated && this.states.has(clientid)) {\n          remove.push(clientid)\n        }\n      })\n      if (remove.length > 0) {\n        removeAwarenessStates(this, remove, 'timeout')\n      }\n    }, math.floor(outdatedTimeout / 10)))\n    doc.on('destroy', () => {\n      this.destroy()\n    })\n    this.setLocalState({})\n  }\n\n  destroy () {\n    this.emit('destroy', [this])\n    this.setLocalState(null)\n    super.destroy()\n    clearInterval(this._checkInterval)\n  }\n\n  /**\n   * @return {Object<string,any>|null}\n   */\n  getLocalState () {\n    return this.states.get(this.clientID) || null\n  }\n\n  /**\n   * @param {Object<string,any>|null} state\n   */\n  setLocalState (state) {\n    const clientID = this.clientID\n    const currLocalMeta = this.meta.get(clientID)\n    const clock = currLocalMeta === undefined ? 0 : currLocalMeta.clock + 1\n    const prevState = this.states.get(clientID)\n    if (state === null) {\n      this.states.delete(clientID)\n    } else {\n      this.states.set(clientID, state)\n    }\n    this.meta.set(clientID, {\n      clock,\n      lastUpdated: time.getUnixTime()\n    })\n    const added = []\n    const updated = []\n    const filteredUpdated = []\n    const removed = []\n    if (state === null) {\n      removed.push(clientID)\n    } else if (prevState == null) {\n      if (state != null) {\n        added.push(clientID)\n      }\n    } else {\n      updated.push(clientID)\n      if (!f.equalityDeep(prevState, state)) {\n        filteredUpdated.push(clientID)\n      }\n    }\n    if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n      this.emit('change', [{ added, updated: filteredUpdated, removed }, 'local'])\n    }\n    this.emit('update', [{ added, updated, removed }, 'local'])\n  }\n\n  /**\n   * @param {string} field\n   * @param {any} value\n   */\n  setLocalStateField (field, value) {\n    const state = this.getLocalState()\n    if (state !== null) {\n      this.setLocalState({\n        ...state,\n        [field]: value\n      })\n    }\n  }\n\n  /**\n   * @return {Map<number,Object<string,any>>}\n   */\n  getStates () {\n    return this.states\n  }\n}\n\n/**\n * Mark (remote) clients as inactive and remove them from the list of active peers.\n * This change will be propagated to remote clients.\n *\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @param {any} origin\n */\nexport const removeAwarenessStates = (awareness, clients, origin) => {\n  const removed = []\n  for (let i = 0; i < clients.length; i++) {\n    const clientID = clients[i]\n    if (awareness.states.has(clientID)) {\n      awareness.states.delete(clientID)\n      if (clientID === awareness.clientID) {\n        const curMeta = /** @type {MetaClientState} */ (awareness.meta.get(clientID))\n        awareness.meta.set(clientID, {\n          clock: curMeta.clock + 1,\n          lastUpdated: time.getUnixTime()\n        })\n      }\n      removed.push(clientID)\n    }\n  }\n  if (removed.length > 0) {\n    awareness.emit('change', [{ added: [], updated: [], removed }, origin])\n    awareness.emit('update', [{ added: [], updated: [], removed }, origin])\n  }\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @return {Uint8Array}\n */\nexport const encodeAwarenessUpdate = (awareness, clients, states = awareness.states) => {\n  const len = clients.length\n  const encoder = encoding.createEncoder()\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = clients[i]\n    const state = states.get(clientID) || null\n    const clock = /** @type {MetaClientState} */ (awareness.meta.get(clientID)).clock\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(state))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Modify the content of an awareness update before re-encoding it to an awareness update.\n *\n * This might be useful when you have a central server that wants to ensure that clients\n * cant hijack somebody elses identity.\n *\n * @param {Uint8Array} update\n * @param {function(any):any} modify\n * @return {Uint8Array}\n */\nexport const modifyAwarenessUpdate = (update, modify) => {\n  const decoder = decoding.createDecoder(update)\n  const encoder = encoding.createEncoder()\n  const len = decoding.readVarUint(decoder)\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    const clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const modifiedState = modify(state)\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(modifiedState))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Uint8Array} update\n * @param {any} origin This will be added to the emitted change event\n */\nexport const applyAwarenessUpdate = (awareness, update, origin) => {\n  const decoder = decoding.createDecoder(update)\n  const timestamp = time.getUnixTime()\n  const added = []\n  const updated = []\n  const filteredUpdated = []\n  const removed = []\n  const len = decoding.readVarUint(decoder)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    let clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const clientMeta = awareness.meta.get(clientID)\n    const prevState = awareness.states.get(clientID)\n    const currClock = clientMeta === undefined ? 0 : clientMeta.clock\n    if (currClock < clock || (currClock === clock && state === null && awareness.states.has(clientID))) {\n      if (state === null) {\n        // never let a remote client remove this local state\n        if (clientID === awareness.clientID && awareness.getLocalState() != null) {\n          // remote client removed the local state. Do not remote state. Broadcast a message indicating\n          // that this client still exists by increasing the clock\n          clock++\n        } else {\n          awareness.states.delete(clientID)\n        }\n      } else {\n        awareness.states.set(clientID, state)\n      }\n      awareness.meta.set(clientID, {\n        clock,\n        lastUpdated: timestamp\n      })\n      if (clientMeta === undefined && state !== null) {\n        added.push(clientID)\n      } else if (clientMeta !== undefined && state === null) {\n        removed.push(clientID)\n      } else if (state !== null) {\n        if (!f.equalityDeep(state, prevState)) {\n          filteredUpdated.push(clientID)\n        }\n        updated.push(clientID)\n      }\n    }\n  }\n  if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n    awareness.emit('change', [{\n      added, updated: filteredUpdated, removed\n    }, origin])\n  }\n  if (added.length > 0 || updated.length > 0 || removed.length > 0) {\n    awareness.emit('update', [{\n      added, updated, removed\n    }, origin])\n  }\n}\n", null, null, null, null, null, "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport type { Extension } from '@codemirror/state';\nimport { ISharedText, YFile } from '@jupyter/ydoc';\nimport { IChangedArgs } from '@jupyterlab/coreutils';\nimport { IObservableMap, ObservableMap } from '@jupyterlab/observables';\nimport { ITranslator } from '@jupyterlab/translation';\nimport { JSONObject } from '@lumino/coreutils';\nimport { IDisposable } from '@lumino/disposable';\nimport { ISignal, Signal } from '@lumino/signaling';\n\n/**\n * A namespace for code editors.\n *\n * #### Notes\n * - A code editor is a set of common assumptions which hold for all concrete editors.\n * - Changes in implementations of the code editor should only be caused by changes in concrete editors.\n * - Common JLab services which are based on the code editor should belong to `IEditorServices`.\n */\nexport namespace CodeEditor {\n  /**\n   * A zero-based position in the editor.\n   */\n  export interface IPosition extends JSONObject {\n    /**\n     * The cursor line number.\n     */\n    readonly line: number;\n\n    /**\n     * The cursor column number.\n     */\n    readonly column: number;\n  }\n\n  /**\n   * The dimension of an element.\n   */\n  export interface IDimension {\n    /**\n     * The width of an element in pixels.\n     */\n    readonly width: number;\n\n    /**\n     * The height of an element in pixels.\n     */\n    readonly height: number;\n  }\n\n  /**\n   * An interface describing editor state coordinates.\n   */\n  export interface ICoordinate extends DOMRectReadOnly {}\n\n  /**\n   * A range.\n   */\n  export interface IRange extends JSONObject {\n    /**\n     * The position of the first character in the current range.\n     *\n     * #### Notes\n     * If this position is greater than [end] then the range is considered\n     * to be backward.\n     */\n    readonly start: IPosition;\n\n    /**\n     * The position of the last character in the current range.\n     *\n     * #### Notes\n     * If this position is less than [start] then the range is considered\n     * to be backward.\n     */\n    readonly end: IPosition;\n  }\n\n  /**\n   * A text selection.\n   */\n  export interface ITextSelection extends IRange {\n    /**\n     * The uuid of the text selection owner.\n     */\n    readonly uuid: string;\n  }\n\n  /**\n   * An interface for a text token, such as a word, keyword, or variable.\n   */\n  export interface IToken {\n    /**\n     * The value of the token.\n     */\n    value: string;\n\n    /**\n     * The offset of the token in the code editor.\n     */\n    offset: number;\n\n    /**\n     * An optional type for the token.\n     */\n    type?: string;\n  }\n\n  /**\n   * An interface to manage selections by selection owners.\n   *\n   * #### Definitions\n   * - a user code that has an associated uuid is called a selection owner, see `CodeEditor.ISelectionOwner`\n   * - a selection belongs to a selection owner only if it is associated with the owner by an uuid, see `CodeEditor.ITextSelection`\n   *\n   * #### Read access\n   * - any user code can observe any selection\n   *\n   * #### Write access\n   * - if a user code is a selection owner then:\n   *   - it can change selections belonging to it\n   *   - but it must not change selections belonging to other selection owners\n   * - otherwise it must not change any selection\n   */\n\n  /**\n   * An editor model.\n   */\n  export interface IModel extends IDisposable {\n    /**\n     * A signal emitted when a property changes.\n     */\n    mimeTypeChanged: ISignal<IModel, IChangedArgs<string>>;\n\n    /**\n     * A mime type of the model.\n     *\n     * #### Notes\n     * It is never `null`, the default mime type is `text/plain`.\n     */\n    mimeType: string;\n\n    /**\n     * The currently selected code.\n     */\n    readonly selections: IObservableMap<ITextSelection[]>;\n\n    /**\n     * The shared model for the cell editor.\n     */\n    readonly sharedModel: ISharedText;\n  }\n\n  /**\n   * The default implementation of the editor model.\n   */\n  export class Model implements IModel {\n    /**\n     * Construct a new Model.\n     */\n    constructor(options: Model.IOptions = {}) {\n      // Track if we need to dispose the model or not.\n      this.standaloneModel = typeof options.sharedModel === 'undefined';\n      this.sharedModel = options.sharedModel ?? new YFile();\n      this._mimeType = options.mimeType ?? 'text/plain';\n    }\n\n    /**\n     * The shared model for the cell editor.\n     */\n    readonly sharedModel: ISharedText;\n\n    /**\n     * A signal emitted when a mimetype changes.\n     */\n    get mimeTypeChanged(): ISignal<this, IChangedArgs<string>> {\n      return this._mimeTypeChanged;\n    }\n\n    /**\n     * Get the selections for the model.\n     */\n    get selections(): IObservableMap<ITextSelection[]> {\n      return this._selections;\n    }\n\n    /**\n     * A mime type of the model.\n     */\n    get mimeType(): string {\n      return this._mimeType;\n    }\n    set mimeType(newValue: string) {\n      const oldValue = this.mimeType;\n      if (oldValue === newValue) {\n        return;\n      }\n      this._mimeType = newValue;\n      this._mimeTypeChanged.emit({\n        name: 'mimeType',\n        oldValue: oldValue,\n        newValue: newValue\n      });\n    }\n\n    /**\n     * Whether the model is disposed.\n     */\n    get isDisposed(): boolean {\n      return this._isDisposed;\n    }\n\n    /**\n     * Dispose of the resources used by the model.\n     */\n    dispose(): void {\n      if (this._isDisposed) {\n        return;\n      }\n      this._isDisposed = true;\n      this._selections.dispose();\n      if (this.standaloneModel) {\n        this.sharedModel.dispose();\n      }\n      Signal.clearData(this);\n    }\n\n    /**\n     * Whether the model should disposed the shared model on disposal or not.\n     */\n    protected standaloneModel = false;\n\n    private _isDisposed = false;\n    private _selections = new ObservableMap<ITextSelection[]>();\n    private _mimeType = 'text/plain';\n    private _mimeTypeChanged = new Signal<this, IChangedArgs<string>>(this);\n  }\n\n  /**\n   * A selection owner.\n   */\n  export interface ISelectionOwner {\n    /**\n     * The uuid of this selection owner.\n     */\n    uuid: string;\n\n    /**\n     * Returns the primary position of the cursor, never `null`.\n     */\n    getCursorPosition(): IPosition;\n\n    /**\n     * Set the primary position of the cursor.\n     *\n     * @param position - The new primary position.\n     * @param options - Adjustment options allowing to disable scrolling.\n     *\n     * #### Notes\n     * This will remove any secondary cursors.\n     */\n    setCursorPosition(\n      position: IPosition,\n      options?: { scroll?: boolean }\n    ): void;\n\n    /**\n     * Returns the primary selection, never `null`.\n     */\n    getSelection(): IRange;\n\n    /**\n     * Set the primary selection.\n     *\n     * @param selection - The desired selection range.\n     *\n     * #### Notes\n     * This will remove any secondary cursors.\n     */\n    setSelection(selection: IRange): void;\n\n    /**\n     * Gets the selections for all the cursors, never `null` or empty.\n     */\n    getSelections(): IRange[];\n\n    /**\n     * Sets the selections for all the cursors.\n     *\n     * @param selections - The new selections.\n     *\n     * #### Notes\n     * Cursors will be removed or added, as necessary.\n     * Passing an empty array resets a cursor position to the start of a\n     * document.\n     */\n    setSelections(selections: IRange[]): void;\n  }\n\n  /**\n   * A keydown handler type.\n   *\n   * #### Notes\n   * Return `true` to prevent the default handling of the event by the\n   * editor.\n   */\n  export type KeydownHandler = (\n    instance: IEditor,\n    event: KeyboardEvent\n  ) => boolean;\n\n  /**\n   * The location of requested edges.\n   */\n  export type EdgeLocation = 'top' | 'topLine' | 'bottom';\n\n  /**\n   * A widget that provides a code editor.\n   *\n   * As of JupyterLab 4.0.0, it is not possible to provide an editor\n   * that is different of CodeMirror 6.\n   */\n  export interface IEditor extends ISelectionOwner, IDisposable {\n    /**\n     * A signal emitted when either the top or bottom edge is requested.\n     */\n    readonly edgeRequested: ISignal<IEditor, EdgeLocation>;\n\n    /**\n     * The DOM node that hosts the editor.\n     */\n    readonly host: HTMLElement;\n\n    /**\n     * The model used by the editor.\n     */\n    readonly model: IModel;\n\n    /**\n     * The height of a line in the editor in pixels.\n     */\n    readonly lineHeight: number;\n\n    /**\n     * The widget of a character in the editor in pixels.\n     */\n    readonly charWidth: number;\n\n    /**\n     * Get the number of lines in the editor.\n     */\n    readonly lineCount: number;\n\n    /**\n     * Get a config option for the editor.\n     */\n    getOption(option: string): unknown;\n\n    /**\n     * Set a config option for the editor.\n     */\n    setOption(option: string, value: unknown): void;\n\n    /**\n     * Set config options for the editor.\n     */\n    setOptions(options: Record<string, any>): void;\n\n    /**\n     * Inject an extension into the editor\n     *\n     * @alpha\n     * @experimental\n     * @param ext Editor extension\n     */\n    injectExtension(ext: Extension): void;\n\n    /**\n     * Returns the content for the given line number.\n     *\n     * @param line - The line of interest.\n     *\n     * @returns The value of the line.\n     *\n     * #### Notes\n     * Lines are 0-based, and accessing a line out of range returns\n     * `undefined`.\n     */\n    getLine(line: number): string | undefined;\n\n    /**\n     * Find an offset for the given position.\n     *\n     * @param position - The position of interest.\n     *\n     * @returns The offset at the position, clamped to the extent of the\n     * editor contents.\n     */\n    getOffsetAt(position: IPosition): number;\n\n    /**\n     * Find a position for the given offset.\n     *\n     * @param offset - The offset of interest.\n     *\n     * @returns The position at the offset, clamped to the extent of the\n     * editor contents.\n     */\n    getPositionAt(offset: number): IPosition | undefined;\n\n    /**\n     * Undo one edit (if any undo events are stored).\n     */\n    undo(): void;\n\n    /**\n     * Redo one undone edit.\n     */\n    redo(): void;\n\n    /**\n     * Clear the undo history.\n     */\n    clearHistory(): void;\n\n    /**\n     * Brings browser focus to this editor text.\n     */\n    focus(): void;\n\n    /**\n     * Test whether the editor has keyboard focus.\n     */\n    hasFocus(): boolean;\n\n    /**\n     * Explicitly blur the editor.\n     */\n    blur(): void;\n\n    /**\n     * Reveals the given position in the editor.\n     *\n     * @param position - The desired position to reveal.\n     */\n    revealPosition(position: IPosition): void;\n\n    /**\n     * Reveals the given selection in the editor.\n     *\n     * @param selection - The desired selection to reveal.\n     */\n    revealSelection(selection: IRange): void;\n\n    /**\n     * Get the window coordinates given a cursor position.\n     *\n     * @param position - The desired position.\n     *\n     * @returns The coordinates of the position.\n     */\n    getCoordinateForPosition(position: IPosition): ICoordinate;\n\n    /**\n     * Get the cursor position given window coordinates.\n     *\n     * @param coordinate - The desired coordinate.\n     *\n     * @returns The position of the coordinates, or null if not\n     *   contained in the editor.\n     */\n    getPositionForCoordinate(coordinate: ICoordinate): IPosition | null;\n\n    /**\n     * Get a list of tokens for the current editor text content.\n     */\n    getTokens(): CodeEditor.IToken[];\n\n    /**\n     * Get the token at a given editor position.\n     */\n    getTokenAt(offset: number): CodeEditor.IToken;\n\n    /**\n     * Get the token a the cursor position.\n     */\n    getTokenAtCursor(): CodeEditor.IToken;\n\n    /**\n     * Inserts a new line at the cursor position and indents it.\n     */\n    newIndentedLine(): void;\n\n    /**\n     * Replaces selection with the given text.\n     */\n    replaceSelection?(text: string): void;\n  }\n\n  /**\n   * A factory used to create a code editor.\n   */\n  export type Factory = (options: IOptions) => CodeEditor.IEditor;\n\n  /**\n   * The options used to initialize an editor.\n   */\n  export interface IOptions {\n    /**\n     * The host widget used by the editor.\n     */\n    host: HTMLElement;\n\n    /**\n     * The model used by the editor.\n     */\n    model: IModel;\n\n    /**\n     * The configuration options for the editor.\n     */\n    config?: Record<string, any>;\n\n    /**\n     * List of editor extensions to be added.\n     */\n    extensions?: Extension[];\n\n    /**\n     * Whether the editor will be inline or not.\n     */\n    inline?: boolean;\n\n    /**\n     * The configuration options for the editor.\n     */\n    translator?: ITranslator;\n\n    /**\n     * The desired uuid for the editor.\n     */\n    uuid?: string;\n  }\n\n  export namespace Model {\n    export interface IOptions {\n      /**\n       * A unique identifier for the model.\n       */\n      id?: string;\n\n      /**\n       * The mimetype of the model.\n       */\n      mimeType?: string;\n\n      /**\n       * Shared editor text.\n       */\n      sharedModel?: ISharedText;\n    }\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { CodeEditor } from './editor';\n\n/**\n * The editor factory service interface.\n */\nexport interface IEditorFactoryService {\n  /**\n   * Create a new editor for inline code.\n   */\n  newInlineEditor: CodeEditor.Factory;\n\n  /**\n   * Create a new editor for a full document.\n   */\n  newDocumentEditor: CodeEditor.Factory;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { IObservableJSON } from '@jupyterlab/observables';\nimport { ISharedText, SourceChange } from '@jupyter/ydoc';\nimport {\n  ITranslator,\n  nullTranslator,\n  TranslationBundle\n} from '@jupyterlab/translation';\nimport { checkIcon, undoIcon } from '@jupyterlab/ui-components';\nimport {\n  JSONExt,\n  JSONObject,\n  ReadonlyPartialJSONObject\n} from '@lumino/coreutils';\nimport { Message } from '@lumino/messaging';\nimport { Widget } from '@lumino/widgets';\nimport { CodeEditor } from './editor';\n\n/**\n * The class name added to a JSONEditor instance.\n */\nconst JSONEDITOR_CLASS = 'jp-JSONEditor';\n\n/**\n * The class name added when the Metadata editor contains invalid JSON.\n */\nconst ERROR_CLASS = 'jp-mod-error';\n\n/**\n * The class name added to the editor host node.\n */\nconst HOST_CLASS = 'jp-JSONEditor-host';\n\n/**\n * The class name added to the header area.\n */\nconst HEADER_CLASS = 'jp-JSONEditor-header';\n\n/**\n * A widget for editing observable JSON.\n */\nexport class JSONEditor extends Widget {\n  /**\n   * Construct a new JSON editor.\n   */\n  constructor(options: JSONEditor.IOptions) {\n    super();\n    this.translator = options.translator || nullTranslator;\n    this._trans = this.translator.load('jupyterlab');\n    this.addClass(JSONEDITOR_CLASS);\n\n    this.headerNode = document.createElement('div');\n    this.headerNode.className = HEADER_CLASS;\n\n    this.revertButtonNode = undoIcon.element({\n      tag: 'span',\n      title: this._trans.__('Revert changes to data')\n    });\n\n    this.commitButtonNode = checkIcon.element({\n      tag: 'span',\n      title: this._trans.__('Commit changes to data'),\n      marginLeft: '8px'\n    });\n\n    this.editorHostNode = document.createElement('div');\n    this.editorHostNode.className = HOST_CLASS;\n\n    this.headerNode.appendChild(this.revertButtonNode);\n    this.headerNode.appendChild(this.commitButtonNode);\n\n    this.node.appendChild(this.headerNode);\n    this.node.appendChild(this.editorHostNode);\n\n    const model = new CodeEditor.Model({ mimeType: 'application/json' });\n    model.sharedModel.changed.connect(this._onModelChanged, this);\n\n    this.model = model;\n    this.editor = options.editorFactory({\n      host: this.editorHostNode,\n      model,\n      config: {\n        readOnly: true\n      }\n    });\n  }\n\n  /**\n   * The code editor used by the editor.\n   */\n  readonly editor: CodeEditor.IEditor;\n\n  /**\n   * The code editor model used by the editor.\n   */\n  readonly model: CodeEditor.IModel;\n\n  /**\n   * The editor host node used by the JSON editor.\n   */\n  readonly headerNode: HTMLDivElement;\n\n  /**\n   * The editor host node used by the JSON editor.\n   */\n  readonly editorHostNode: HTMLDivElement;\n\n  /**\n   * The revert button used by the JSON editor.\n   */\n  readonly revertButtonNode: HTMLSpanElement;\n\n  /**\n   * The commit button used by the JSON editor.\n   */\n  readonly commitButtonNode: HTMLSpanElement;\n\n  /**\n   * The observable source.\n   */\n  get source(): IObservableJSON | null {\n    return this._source;\n  }\n  set source(value: IObservableJSON | null) {\n    if (this._source === value) {\n      return;\n    }\n    if (this._source) {\n      this._source.changed.disconnect(this._onSourceChanged, this);\n    }\n    this._source = value;\n    this.editor.setOption('readOnly', value === null);\n    if (value) {\n      value.changed.connect(this._onSourceChanged, this);\n    }\n    this._setValue();\n  }\n\n  /**\n   * Get whether the editor is dirty.\n   */\n  get isDirty(): boolean {\n    return this._dataDirty || this._inputDirty;\n  }\n\n  /**\n   * Dispose of the editor.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n\n    this.source?.dispose();\n    this.model.dispose();\n    this.editor.dispose();\n\n    super.dispose();\n  }\n\n  /**\n   * Handle the DOM events for the widget.\n   *\n   * @param event - The DOM event sent to the widget.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the notebook panel's node. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'blur':\n        this._evtBlur(event as FocusEvent);\n        break;\n      case 'click':\n        this._evtClick(event as MouseEvent);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Handle `after-attach` messages for the widget.\n   */\n  protected onAfterAttach(msg: Message): void {\n    const node = this.editorHostNode;\n    node.addEventListener('blur', this, true);\n    node.addEventListener('click', this, true);\n    this.revertButtonNode.hidden = true;\n    this.commitButtonNode.hidden = true;\n    this.headerNode.addEventListener('click', this);\n  }\n\n  /**\n   * Handle `before-detach` messages for the widget.\n   */\n  protected onBeforeDetach(msg: Message): void {\n    const node = this.editorHostNode;\n    node.removeEventListener('blur', this, true);\n    node.removeEventListener('click', this, true);\n    this.headerNode.removeEventListener('click', this);\n  }\n\n  /**\n   * Handle a change to the metadata of the source.\n   */\n  private _onSourceChanged(\n    sender: IObservableJSON,\n    args: IObservableJSON.IChangedArgs\n  ) {\n    if (this._changeGuard) {\n      return;\n    }\n    if (this._inputDirty || this.editor.hasFocus()) {\n      this._dataDirty = true;\n      return;\n    }\n    this._setValue();\n  }\n\n  /**\n   * Handle change events.\n   */\n  private _onModelChanged(model: ISharedText, change: SourceChange): void {\n    if (change.sourceChange) {\n      let valid = true;\n      try {\n        const value = JSON.parse(this.editor.model.sharedModel.getSource());\n        this.removeClass(ERROR_CLASS);\n        this._inputDirty =\n          !this._changeGuard && !JSONExt.deepEqual(value, this._originalValue);\n      } catch (err) {\n        this.addClass(ERROR_CLASS);\n        this._inputDirty = true;\n        valid = false;\n      }\n      this.revertButtonNode.hidden = !this._inputDirty;\n      this.commitButtonNode.hidden = !valid || !this._inputDirty;\n    }\n  }\n\n  /**\n   * Handle blur events for the text area.\n   */\n  private _evtBlur(event: FocusEvent): void {\n    // Update the metadata if necessary.\n    if (!this._inputDirty && this._dataDirty) {\n      this._setValue();\n    }\n  }\n\n  /**\n   * Handle click events for the buttons.\n   */\n  private _evtClick(event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    if (this.revertButtonNode.contains(target)) {\n      this._setValue();\n    } else if (this.commitButtonNode.contains(target)) {\n      if (!this.commitButtonNode.hidden && !this.hasClass(ERROR_CLASS)) {\n        this._changeGuard = true;\n        this._mergeContent();\n        this._changeGuard = false;\n        this._setValue();\n      }\n    } else if (this.editorHostNode.contains(target)) {\n      this.editor.focus();\n    }\n  }\n\n  /**\n   * Merge the user content.\n   */\n  private _mergeContent(): void {\n    const model = this.editor.model;\n    const old = this._originalValue;\n    const user = JSON.parse(model.sharedModel.getSource()) as JSONObject;\n    const source = this.source;\n    if (!source) {\n      return;\n    }\n\n    // If it is in user and has changed from old, set in new.\n    for (const key in user) {\n      if (!JSONExt.deepEqual(user[key], old[key] || null)) {\n        source.set(key, user[key]);\n      }\n    }\n\n    // If it was in old and is not in user, remove from source.\n    for (const key in old) {\n      if (!(key in user)) {\n        source.delete(key);\n      }\n    }\n  }\n\n  /**\n   * Set the value given the owner contents.\n   */\n  private _setValue(): void {\n    this._dataDirty = false;\n    this._inputDirty = false;\n    this.revertButtonNode.hidden = true;\n    this.commitButtonNode.hidden = true;\n    this.removeClass(ERROR_CLASS);\n    const model = this.editor.model;\n    const content = this._source ? this._source.toJSON() : {};\n    this._changeGuard = true;\n    if (content === void 0) {\n      model.sharedModel.setSource(this._trans.__('No data!'));\n      this._originalValue = JSONExt.emptyObject;\n    } else {\n      const value = JSON.stringify(content, null, 4);\n      model.sharedModel.setSource(value);\n      this._originalValue = content;\n      // Move the cursor to within the brace.\n      if (value.length > 1 && value[0] === '{') {\n        this.editor.setCursorPosition({ line: 0, column: 1 });\n      }\n    }\n    this._changeGuard = false;\n    this.commitButtonNode.hidden = true;\n    this.revertButtonNode.hidden = true;\n  }\n\n  protected translator: ITranslator;\n  private _trans: TranslationBundle;\n  private _dataDirty = false;\n  private _inputDirty = false;\n  private _source: IObservableJSON | null = null;\n  private _originalValue: ReadonlyPartialJSONObject = JSONExt.emptyObject;\n  private _changeGuard = false;\n}\n\n/**\n * The static namespace JSONEditor class statics.\n */\nexport namespace JSONEditor {\n  /**\n   * The options used to initialize a json editor.\n   */\n  export interface IOptions {\n    /**\n     * The editor factory used by the editor.\n     */\n    editorFactory: CodeEditor.Factory;\n\n    /**\n     * The language translator.\n     */\n    translator?: ITranslator;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { Popup, showPopup, TextItem } from '@jupyterlab/statusbar';\nimport {\n  ITranslator,\n  nullTranslator,\n  TranslationBundle\n} from '@jupyterlab/translation';\nimport {\n  classes,\n  lineFormIcon,\n  ReactWidget,\n  VDomModel,\n  VDomRenderer\n} from '@jupyterlab/ui-components';\nimport React from 'react';\nimport { CodeEditor } from './editor';\n\n/**\n * A namespace for LineFormComponent statics.\n */\nnamespace LineFormComponent {\n  /**\n   * The props for LineFormComponent.\n   */\n  export interface IProps {\n    /**\n     * A callback for when the form is submitted.\n     */\n    handleSubmit: (value: number) => void;\n\n    /**\n     * The current line of the form.\n     */\n    currentLine: number;\n\n    /**\n     * The maximum line the form can take (typically the\n     * maximum line of the relevant editor).\n     */\n    maxLine: number;\n\n    /**\n     * The application language translator.\n     */\n    translator?: ITranslator;\n  }\n\n  /**\n   * The props for LineFormComponent.\n   */\n  export interface IState {\n    /**\n     * The current value of the form.\n     */\n    value: string;\n\n    /**\n     * Whether the form has focus.\n     */\n    hasFocus: boolean;\n  }\n}\n\n/**\n * A component for rendering a \"go-to-line\" form.\n */\nclass LineFormComponent extends React.Component<\n  LineFormComponent.IProps,\n  LineFormComponent.IState\n> {\n  /**\n   * Construct a new LineFormComponent.\n   */\n  constructor(props: LineFormComponent.IProps) {\n    super(props);\n    this.translator = props.translator || nullTranslator;\n    this._trans = this.translator.load('jupyterlab');\n    this.state = {\n      value: '',\n      hasFocus: false\n    };\n  }\n\n  /**\n   * Focus the element on mount.\n   */\n  componentDidMount() {\n    this._textInput!.focus();\n  }\n\n  /**\n   * Render the LineFormComponent.\n   */\n  render() {\n    return (\n      <div className=\"jp-lineFormSearch\">\n        <form name=\"lineColumnForm\" onSubmit={this._handleSubmit} noValidate>\n          <div\n            className={classes(\n              'jp-lineFormWrapper',\n              'lm-lineForm-wrapper',\n              this.state.hasFocus ? 'jp-lineFormWrapperFocusWithin' : undefined\n            )}\n          >\n            <input\n              type=\"text\"\n              className=\"jp-lineFormInput\"\n              onChange={this._handleChange}\n              onFocus={this._handleFocus}\n              onBlur={this._handleBlur}\n              value={this.state.value}\n              ref={input => {\n                this._textInput = input;\n              }}\n            />\n            <div className=\"jp-baseLineForm jp-lineFormButtonContainer\">\n              <lineFormIcon.react\n                className=\"jp-baseLineForm jp-lineFormButtonIcon\"\n                elementPosition=\"center\"\n              />\n              <input\n                type=\"submit\"\n                className=\"jp-baseLineForm jp-lineFormButton\"\n                value=\"\"\n              />\n            </div>\n          </div>\n          <label className=\"jp-lineFormCaption\">\n            {this._trans.__(\n              'Go to line number between 1 and %1',\n              this.props.maxLine\n            )}\n          </label>\n        </form>\n      </div>\n    );\n  }\n\n  /**\n   * Handle a change to the value in the input field.\n   */\n  private _handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ value: event.currentTarget.value });\n  };\n\n  /**\n   * Handle submission of the input field.\n   */\n  private _handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const value = parseInt(this._textInput!.value, 10);\n    if (\n      !isNaN(value) &&\n      isFinite(value) &&\n      1 <= value &&\n      value <= this.props.maxLine\n    ) {\n      this.props.handleSubmit(value);\n    }\n\n    return false;\n  };\n\n  /**\n   * Handle focusing of the input field.\n   */\n  private _handleFocus = () => {\n    this.setState({ hasFocus: true });\n  };\n\n  /**\n   * Handle blurring of the input field.\n   */\n  private _handleBlur = () => {\n    this.setState({ hasFocus: false });\n  };\n\n  protected translator: ITranslator;\n  private _trans: TranslationBundle;\n  private _textInput: HTMLInputElement | null = null;\n}\n\n/**\n * A namespace for LineColComponent.\n */\nnamespace LineColComponent {\n  /**\n   * Props for LineColComponent.\n   */\n  export interface IProps {\n    /**\n     * The current line number.\n     */\n    line: number;\n\n    /**\n     * The current column number.\n     */\n    column: number;\n\n    /**\n     * The application language translator.\n     */\n    translator?: ITranslator;\n\n    /**\n     * A click handler for the LineColComponent, which\n     * we use to launch the LineFormComponent.\n     */\n    handleClick: () => void;\n  }\n}\n\n/**\n * A pure functional component for rendering a line/column\n * status item.\n */\nfunction LineColComponent(\n  props: LineColComponent.IProps\n): React.ReactElement<LineColComponent.IProps> {\n  const translator = props.translator || nullTranslator;\n  const trans = translator.load('jupyterlab');\n  return (\n    <TextItem\n      onClick={props.handleClick}\n      source={trans.__('Ln %1, Col %2', props.line, props.column)}\n      title={trans.__('Go to line number\u2026')}\n    />\n  );\n}\n\n/**\n * A widget implementing a line/column status item.\n */\nexport class LineCol extends VDomRenderer<LineCol.Model> {\n  /**\n   * Construct a new LineCol status item.\n   */\n  constructor(translator?: ITranslator) {\n    super(new LineCol.Model());\n    this.addClass('jp-mod-highlighted');\n    this.translator = translator || nullTranslator;\n  }\n\n  /**\n   * Render the status item.\n   */\n  render(): React.ReactElement<LineColComponent.IProps> | null {\n    if (this.model === null) {\n      return null;\n    } else {\n      return (\n        <LineColComponent\n          line={this.model.line}\n          column={this.model.column}\n          translator={this.translator}\n          handleClick={() => this._handleClick()}\n        />\n      );\n    }\n  }\n\n  /**\n   * A click handler for the widget.\n   */\n  private _handleClick(): void {\n    if (this._popup) {\n      this._popup.dispose();\n    }\n    const body = ReactWidget.create(\n      <LineFormComponent\n        handleSubmit={val => this._handleSubmit(val)}\n        currentLine={this.model!.line}\n        maxLine={this.model!.editor!.lineCount}\n        translator={this.translator}\n      />\n    );\n\n    this._popup = showPopup({\n      body: body,\n      anchor: this,\n      align: 'right'\n    });\n  }\n\n  /**\n   * Handle submission for the widget.\n   */\n  private _handleSubmit(value: number): void {\n    this.model!.editor!.setCursorPosition({ line: value - 1, column: 0 });\n    this._popup!.dispose();\n    this.model!.editor!.focus();\n  }\n\n  protected translator: ITranslator;\n  private _popup: Popup | null = null;\n}\n\n/**\n * A namespace for LineCol statics.\n */\nexport namespace LineCol {\n  /**\n   * A VDom model for a status item tracking the line/column of an editor.\n   */\n  export class Model extends VDomModel {\n    /**\n     * The current editor of the model.\n     */\n    get editor(): CodeEditor.IEditor | null {\n      return this._editor;\n    }\n    set editor(editor: CodeEditor.IEditor | null) {\n      const oldEditor = this._editor;\n      if (oldEditor?.model?.selections) {\n        oldEditor.model.selections.changed.disconnect(this._onSelectionChanged);\n      }\n\n      const oldState = this._getAllState();\n      this._editor = editor;\n      if (!this._editor) {\n        this._column = 1;\n        this._line = 1;\n      } else {\n        this._editor.model.selections.changed.connect(this._onSelectionChanged);\n\n        const pos = this._editor.getCursorPosition();\n        this._column = pos.column + 1;\n        this._line = pos.line + 1;\n      }\n\n      this._triggerChange(oldState, this._getAllState());\n    }\n\n    /**\n     * The current line of the model.\n     */\n    get line(): number {\n      return this._line;\n    }\n\n    /**\n     * The current column of the model.\n     */\n    get column(): number {\n      return this._column;\n    }\n\n    /**\n     * React to a change in the cursors of the current editor.\n     */\n    private _onSelectionChanged = () => {\n      const oldState = this._getAllState();\n      const pos = this.editor!.getCursorPosition();\n      this._line = pos.line + 1;\n      this._column = pos.column + 1;\n\n      this._triggerChange(oldState, this._getAllState());\n    };\n\n    private _getAllState(): [number, number] {\n      return [this._line, this._column];\n    }\n\n    private _triggerChange(\n      oldState: [number, number],\n      newState: [number, number]\n    ) {\n      if (oldState[0] !== newState[0] || oldState[1] !== newState[1]) {\n        this.stateChanged.emit(void 0);\n      }\n    }\n\n    private _line: number = 1;\n    private _column: number = 1;\n    private _editor: CodeEditor.IEditor | null = null;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport * as nbformat from '@jupyterlab/nbformat';\n\n/**\n * The mime type service of a code editor.\n */\nexport interface IEditorMimeTypeService {\n  /**\n   * Get a mime type for the given language info.\n   *\n   * @param info - The language information.\n   *\n   * @returns A valid mimetype.\n   *\n   * #### Notes\n   * If a mime type cannot be found returns the default mime type `text/plain`, never `null`.\n   * There may be more than one mime type, but only the first one will be returned.\n   * To access all mime types, use `IEditorLanguageRegistry` instead.\n   */\n  getMimeTypeByLanguage(info: nbformat.ILanguageInfoMetadata): string;\n\n  /**\n   * Get a mime type for the given file path.\n   *\n   * @param filePath - The full path to the file.\n   *\n   * @returns A valid mimetype.\n   *\n   * #### Notes\n   * If a mime type cannot be found returns the default mime type `text/plain`, never `null`.\n   * There may be more than one mime type, but only the first one will be returned.\n   * To access all mime types, use `IEditorLanguageRegistry` instead.\n   */\n  getMimeTypeByFilePath(filePath: string): string;\n}\n\n/**\n * A namespace for `IEditorMimeTypeService`.\n */\nexport namespace IEditorMimeTypeService {\n  /**\n   * The default mime type.\n   */\n  export const defaultMimeType: string = 'text/plain';\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { Token } from '@lumino/coreutils';\nimport { Widget } from '@lumino/widgets';\nimport { CodeEditor } from './editor';\nimport { IEditorFactoryService } from './factory';\nimport { IEditorMimeTypeService } from './mimetype';\n\n/**\n * Code editor services token.\n */\nexport const IEditorServices = new Token<IEditorServices>(\n  '@jupyterlab/codeeditor:IEditorServices',\n  `A service for the text editor provider\n  for the application. Use this to create new text editors and host them in your\n  UI elements.`\n);\n\n/**\n * Code editor services.\n */\nexport interface IEditorServices {\n  /**\n   * The code editor factory.\n   */\n  readonly factoryService: IEditorFactoryService;\n\n  /**\n   * The editor mime type service.\n   */\n  readonly mimeTypeService: IEditorMimeTypeService;\n}\n\n/**\n * Code editor cursor position token.\n */\nexport const IPositionModel = new Token<IPositionModel>(\n  '@jupyterlab/codeeditor:IPositionModel',\n  `A service to handle an code editor cursor position.`\n);\n\n/**\n * Code editor cursor position model.\n */\nexport interface IPositionModel {\n  /**\n   * Add a editor provider.\n   *\n   * A provider will receive the currently active widget and must return the\n   * associated editor if it can or null otherwise.\n   */\n  addEditorProvider: (\n    provider: (widget: Widget | null) => Promise<CodeEditor.IEditor | null>\n  ) => void;\n\n  /**\n   * Callback to force updating the provider\n   */\n  update(): void;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { MimeData } from '@lumino/coreutils';\nimport { Drag } from '@lumino/dragdrop';\nimport { Message } from '@lumino/messaging';\nimport { Widget } from '@lumino/widgets';\nimport { CodeEditor } from './';\n\n/**\n * The class name added to an editor widget that has a primary selection.\n */\nconst HAS_SELECTION_CLASS = 'jp-mod-has-primary-selection';\n\n/**\n * The class name added to an editor widget that has a cursor/selection\n * within the whitespace at the beginning of a line\n */\nconst HAS_IN_LEADING_WHITESPACE_CLASS = 'jp-mod-in-leading-whitespace';\n\n/**\n * A class used to indicate a drop target.\n */\nconst DROP_TARGET_CLASS = 'jp-mod-dropTarget';\n\n/**\n * RegExp to test for leading whitespace\n */\nconst leadingWhitespaceRe = /^\\s+$/;\n\n/**\n * A widget which hosts a code editor.\n */\nexport class CodeEditorWrapper extends Widget {\n  /**\n   * Construct a new code editor widget.\n   */\n  constructor(options: CodeEditorWrapper.IOptions) {\n    super();\n    const { factory, model, editorOptions } = options;\n    const editor = (this.editor = factory({\n      host: this.node,\n      model,\n      ...editorOptions\n    }));\n    editor.model.selections.changed.connect(this._onSelectionsChanged, this);\n  }\n\n  /**\n   * Get the editor wrapped by the widget.\n   */\n  readonly editor: CodeEditor.IEditor;\n\n  /**\n   * Get the model used by the widget.\n   */\n  get model(): CodeEditor.IModel {\n    return this.editor.model;\n  }\n\n  /**\n   * Dispose of the resources held by the widget.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.editor.dispose();\n    super.dispose();\n  }\n\n  /**\n   * Handle the DOM events for the widget.\n   *\n   * @param event - The DOM event sent to the widget.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the notebook panel's node. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'lm-dragenter':\n        this._evtDragEnter(event as Drag.Event);\n        break;\n      case 'lm-dragleave':\n        this._evtDragLeave(event as Drag.Event);\n        break;\n      case 'lm-dragover':\n        this._evtDragOver(event as Drag.Event);\n        break;\n      case 'lm-drop':\n        this._evtDrop(event as Drag.Event);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Handle `'activate-request'` messages.\n   */\n  protected onActivateRequest(msg: Message): void {\n    this.editor.focus();\n  }\n\n  /**\n   * A message handler invoked on an `'after-attach'` message.\n   */\n  protected onAfterAttach(msg: Message): void {\n    super.onAfterAttach(msg);\n    const node = this.node;\n    node.addEventListener('lm-dragenter', this);\n    node.addEventListener('lm-dragleave', this);\n    node.addEventListener('lm-dragover', this);\n    node.addEventListener('lm-drop', this);\n  }\n\n  /**\n   * Handle `before-detach` messages for the widget.\n   */\n  protected onBeforeDetach(msg: Message): void {\n    const node = this.node;\n    node.removeEventListener('lm-dragenter', this);\n    node.removeEventListener('lm-dragleave', this);\n    node.removeEventListener('lm-dragover', this);\n    node.removeEventListener('lm-drop', this);\n  }\n\n  /**\n   * Handle a change in model selections.\n   */\n  private _onSelectionsChanged(): void {\n    const { start, end } = this.editor.getSelection();\n\n    if (start.column !== end.column || start.line !== end.line) {\n      // a selection was made\n      this.addClass(HAS_SELECTION_CLASS);\n      this.removeClass(HAS_IN_LEADING_WHITESPACE_CLASS);\n    } else {\n      // the cursor was placed\n      this.removeClass(HAS_SELECTION_CLASS);\n\n      if (\n        this.editor\n          .getLine(end.line)!\n          .slice(0, end.column)\n          .match(leadingWhitespaceRe)\n      ) {\n        this.addClass(HAS_IN_LEADING_WHITESPACE_CLASS);\n      } else {\n        this.removeClass(HAS_IN_LEADING_WHITESPACE_CLASS);\n      }\n    }\n  }\n\n  /**\n   * Handle the `'lm-dragenter'` event for the widget.\n   */\n  private _evtDragEnter(event: Drag.Event): void {\n    if (this.editor.getOption('readOnly') === true) {\n      return;\n    }\n    const data = Private.findTextData(event.mimeData);\n    if (data === undefined) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    this.addClass('jp-mod-dropTarget');\n  }\n\n  /**\n   * Handle the `'lm-dragleave'` event for the widget.\n   */\n  private _evtDragLeave(event: Drag.Event): void {\n    this.removeClass(DROP_TARGET_CLASS);\n    if (this.editor.getOption('readOnly') === true) {\n      return;\n    }\n    const data = Private.findTextData(event.mimeData);\n    if (data === undefined) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  /**\n   * Handle the `'lm-dragover'` event for the widget.\n   */\n  private _evtDragOver(event: Drag.Event): void {\n    this.removeClass(DROP_TARGET_CLASS);\n    if (this.editor.getOption('readOnly') === true) {\n      return;\n    }\n    const data = Private.findTextData(event.mimeData);\n    if (data === undefined) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    event.dropAction = 'copy';\n    this.addClass(DROP_TARGET_CLASS);\n  }\n\n  /**\n   * Handle the `'lm-drop'` event for the widget.\n   */\n  private _evtDrop(event: Drag.Event): void {\n    if (this.editor.getOption('readOnly') === true) {\n      return;\n    }\n    const data = Private.findTextData(event.mimeData);\n    if (data === undefined) {\n      return;\n    }\n    const coordinate = {\n      top: event.y,\n      bottom: event.y,\n      left: event.x,\n      right: event.x,\n      x: event.x,\n      y: event.y,\n      width: 0,\n      height: 0\n    } as CodeEditor.ICoordinate;\n    const position = this.editor.getPositionForCoordinate(coordinate);\n    if (position === null) {\n      return;\n    }\n    this.removeClass(DROP_TARGET_CLASS);\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.proposedAction === 'none') {\n      event.dropAction = 'none';\n      return;\n    }\n    const offset = this.editor.getOffsetAt(position);\n    this.model.sharedModel.updateSource(offset, offset, data);\n  }\n}\n\n/**\n * The namespace for the `CodeEditorWrapper` statics.\n */\nexport namespace CodeEditorWrapper {\n  /**\n   * The options used to initialize a code editor widget.\n   */\n  export interface IOptions {\n    /**\n     * A code editor factory.\n     *\n     * #### Notes\n     * The widget needs a factory and a the editor options\n     * because it needs to provide its own node as the host.\n     */\n    factory: CodeEditor.Factory;\n\n    /**\n     * The content model for the wrapper.\n     */\n    model: CodeEditor.IModel;\n\n    /**\n     * Code editor options\n     */\n    editorOptions?: Omit<CodeEditor.IOptions, 'host' | 'model'>;\n  }\n}\n\n/**\n * A namespace for private functionality.\n */\nnamespace Private {\n  /**\n   * Given a MimeData instance, extract the first text data, if any.\n   */\n  export function findTextData(mime: MimeData): string | undefined {\n    const types = mime.types();\n    const textType = types.find(t => t.indexOf('text') === 0);\n    if (textType === undefined) {\n      return undefined;\n    }\n    return mime.getData(textType) as string;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { StackedLayout, Widget } from '@lumino/widgets';\nimport { CodeEditor } from './editor';\nimport { CodeEditorWrapper } from './widget';\n\nexport class CodeViewerWidget extends Widget {\n  /**\n   * Construct a new code viewer widget.\n   */\n  constructor(options: CodeViewerWidget.IOptions) {\n    super();\n    this.model = options.model;\n\n    const editorWidget = new CodeEditorWrapper({\n      factory: options.factory,\n      model: this.model,\n      editorOptions: {\n        ...options.editorOptions,\n        config: { ...options.editorOptions?.config, readOnly: true }\n      }\n    });\n    this.editor = editorWidget.editor;\n\n    const layout = (this.layout = new StackedLayout());\n    layout.addWidget(editorWidget);\n  }\n\n  static createCodeViewer(\n    options: CodeViewerWidget.INoModelOptions\n  ): CodeViewerWidget {\n    const { content, mimeType, ...others } = options;\n    const model = new CodeEditor.Model({\n      mimeType\n    });\n    model.sharedModel.setSource(content);\n    const widget = new CodeViewerWidget({ ...others, model });\n    widget.disposed.connect(() => {\n      model.dispose();\n    });\n    return widget;\n  }\n\n  get content(): string {\n    return this.model.sharedModel.getSource();\n  }\n\n  get mimeType(): string {\n    return this.model.mimeType;\n  }\n\n  readonly model: CodeEditor.IModel;\n  readonly editor: CodeEditor.IEditor;\n}\n\n/**\n * The namespace for code viewer widget.\n */\nexport namespace CodeViewerWidget {\n  /**\n   * The options used to create an code viewer widget.\n   */\n  export interface IOptions {\n    /**\n     * A code editor factory.\n     */\n    factory: CodeEditor.Factory;\n    /**\n     * The content model for the viewer.\n     */\n    model: CodeEditor.IModel;\n    /**\n     * Code editor options\n     */\n    editorOptions?: Omit<CodeEditor.IOptions, 'host' | 'model'>;\n  }\n\n  /**\n   * The options used to create an code viewer widget without a model.\n   */\n  export interface INoModelOptions extends Omit<IOptions, 'model'> {\n    /**\n     * The content to display in the viewer.\n     */\n    content: string;\n\n    /**\n     * The mime type for the content.\n     */\n    mimeType?: string;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module codeeditor\n */\n\nexport * from './editor';\nexport * from './factory';\nexport * from './jsoneditor';\nexport * from './lineCol';\nexport * from './mimetype';\nexport * from './tokens';\nexport * from './viewer';\nexport * from './widget';\n", "import { NodeProp } from '@lezer/common';\nimport { LRParser, LocalTokenGroup } from '@lezer/lr';\n\nclass Node {\n    constructor(start) {\n        this.start = start;\n    }\n}\nclass GrammarDeclaration extends Node {\n    constructor(start, rules, topRules, tokens, localTokens, context, externalTokens, externalSpecializers, externalPropSources, precedences, mainSkip, scopedSkip, dialects, externalProps, autoDelim) {\n        super(start);\n        this.rules = rules;\n        this.topRules = topRules;\n        this.tokens = tokens;\n        this.localTokens = localTokens;\n        this.context = context;\n        this.externalTokens = externalTokens;\n        this.externalSpecializers = externalSpecializers;\n        this.externalPropSources = externalPropSources;\n        this.precedences = precedences;\n        this.mainSkip = mainSkip;\n        this.scopedSkip = scopedSkip;\n        this.dialects = dialects;\n        this.externalProps = externalProps;\n        this.autoDelim = autoDelim;\n    }\n    toString() { return Object.values(this.rules).join(\"\\n\"); }\n}\nclass RuleDeclaration extends Node {\n    constructor(start, id, props, params, expr) {\n        super(start);\n        this.id = id;\n        this.props = props;\n        this.params = params;\n        this.expr = expr;\n    }\n    toString() {\n        return this.id.name + (this.params.length ? `<${this.params.join()}>` : \"\") + \" -> \" + this.expr;\n    }\n}\nclass PrecDeclaration extends Node {\n    constructor(start, items) {\n        super(start);\n        this.items = items;\n    }\n}\nclass TokenPrecDeclaration extends Node {\n    constructor(start, items) {\n        super(start);\n        this.items = items;\n    }\n}\nclass TokenConflictDeclaration extends Node {\n    constructor(start, a, b) {\n        super(start);\n        this.a = a;\n        this.b = b;\n    }\n}\nclass TokenDeclaration extends Node {\n    constructor(start, precedences, conflicts, rules, literals) {\n        super(start);\n        this.precedences = precedences;\n        this.conflicts = conflicts;\n        this.rules = rules;\n        this.literals = literals;\n    }\n}\nclass LocalTokenDeclaration extends Node {\n    constructor(start, precedences, rules, fallback) {\n        super(start);\n        this.precedences = precedences;\n        this.rules = rules;\n        this.fallback = fallback;\n    }\n}\nclass LiteralDeclaration extends Node {\n    constructor(start, literal, props) {\n        super(start);\n        this.literal = literal;\n        this.props = props;\n    }\n}\nclass ContextDeclaration extends Node {\n    constructor(start, id, source) {\n        super(start);\n        this.id = id;\n        this.source = source;\n    }\n}\nclass ExternalTokenDeclaration extends Node {\n    constructor(start, id, source, tokens) {\n        super(start);\n        this.id = id;\n        this.source = source;\n        this.tokens = tokens;\n    }\n}\nclass ExternalSpecializeDeclaration extends Node {\n    constructor(start, type, token, id, source, tokens) {\n        super(start);\n        this.type = type;\n        this.token = token;\n        this.id = id;\n        this.source = source;\n        this.tokens = tokens;\n    }\n}\nclass ExternalPropSourceDeclaration extends Node {\n    constructor(start, id, source) {\n        super(start);\n        this.id = id;\n        this.source = source;\n    }\n}\nclass ExternalPropDeclaration extends Node {\n    constructor(start, id, externalID, source) {\n        super(start);\n        this.id = id;\n        this.externalID = externalID;\n        this.source = source;\n    }\n}\nclass Identifier extends Node {\n    constructor(start, name) {\n        super(start);\n        this.name = name;\n    }\n    toString() { return this.name; }\n}\nclass Expression extends Node {\n    walk(f) { return f(this); }\n    eq(_other) { return false; }\n}\nExpression.prototype.prec = 10;\nclass NameExpression extends Expression {\n    constructor(start, id, args) {\n        super(start);\n        this.id = id;\n        this.args = args;\n    }\n    toString() { return this.id.name + (this.args.length ? `<${this.args.join()}>` : \"\"); }\n    eq(other) {\n        return this.id.name == other.id.name && exprsEq(this.args, other.args);\n    }\n    walk(f) {\n        let args = walkExprs(this.args, f);\n        return f(args == this.args ? this : new NameExpression(this.start, this.id, args));\n    }\n}\nclass SpecializeExpression extends Expression {\n    constructor(start, type, props, token, content) {\n        super(start);\n        this.type = type;\n        this.props = props;\n        this.token = token;\n        this.content = content;\n    }\n    toString() { return `@${this.type}[${this.props.join(\",\")}]<${this.token}, ${this.content}>`; }\n    eq(other) {\n        return this.type == other.type && Prop.eqProps(this.props, other.props) && exprEq(this.token, other.token) &&\n            exprEq(this.content, other.content);\n    }\n    walk(f) {\n        let token = this.token.walk(f), content = this.content.walk(f);\n        return f(token == this.token && content == this.content ? this : new SpecializeExpression(this.start, this.type, this.props, token, content));\n    }\n}\nclass InlineRuleExpression extends Expression {\n    constructor(start, rule) {\n        super(start);\n        this.rule = rule;\n    }\n    toString() {\n        let rule = this.rule;\n        return `${rule.id}${rule.props.length ? `[${rule.props.join(\",\")}]` : \"\"} { ${rule.expr} }`;\n    }\n    eq(other) {\n        let rule = this.rule, oRule = other.rule;\n        return exprEq(rule.expr, oRule.expr) && rule.id.name == oRule.id.name && Prop.eqProps(rule.props, oRule.props);\n    }\n    walk(f) {\n        let rule = this.rule, expr = rule.expr.walk(f);\n        return f(expr == rule.expr ? this :\n            new InlineRuleExpression(this.start, new RuleDeclaration(rule.start, rule.id, rule.props, [], expr)));\n    }\n}\nclass ChoiceExpression extends Expression {\n    constructor(start, exprs) {\n        super(start);\n        this.exprs = exprs;\n    }\n    toString() { return this.exprs.map(e => maybeParens(e, this)).join(\" | \"); }\n    eq(other) {\n        return exprsEq(this.exprs, other.exprs);\n    }\n    walk(f) {\n        let exprs = walkExprs(this.exprs, f);\n        return f(exprs == this.exprs ? this : new ChoiceExpression(this.start, exprs));\n    }\n}\nChoiceExpression.prototype.prec = 1;\nclass SequenceExpression extends Expression {\n    constructor(start, exprs, markers, empty = false) {\n        super(start);\n        this.exprs = exprs;\n        this.markers = markers;\n        this.empty = empty;\n    }\n    toString() { return this.empty ? \"()\" : this.exprs.map(e => maybeParens(e, this)).join(\" \"); }\n    eq(other) {\n        return exprsEq(this.exprs, other.exprs) && this.markers.every((m, i) => {\n            let om = other.markers[i];\n            return m.length == om.length && m.every((x, i) => x.eq(om[i]));\n        });\n    }\n    walk(f) {\n        let exprs = walkExprs(this.exprs, f);\n        return f(exprs == this.exprs ? this : new SequenceExpression(this.start, exprs, this.markers, this.empty && !exprs.length));\n    }\n}\nSequenceExpression.prototype.prec = 2;\nclass ConflictMarker extends Node {\n    constructor(start, id, type) {\n        super(start);\n        this.id = id;\n        this.type = type;\n    }\n    toString() { return (this.type == \"ambig\" ? \"~\" : \"!\") + this.id.name; }\n    eq(other) { return this.id.name == other.id.name && this.type == other.type; }\n}\nclass RepeatExpression extends Expression {\n    constructor(start, expr, kind) {\n        super(start);\n        this.expr = expr;\n        this.kind = kind;\n    }\n    toString() { return maybeParens(this.expr, this) + this.kind; }\n    eq(other) {\n        return exprEq(this.expr, other.expr) && this.kind == other.kind;\n    }\n    walk(f) {\n        let expr = this.expr.walk(f);\n        return f(expr == this.expr ? this : new RepeatExpression(this.start, expr, this.kind));\n    }\n}\nRepeatExpression.prototype.prec = 3;\nclass LiteralExpression extends Expression {\n    // value.length is always > 0\n    constructor(start, value) {\n        super(start);\n        this.value = value;\n    }\n    toString() { return JSON.stringify(this.value); }\n    eq(other) { return this.value == other.value; }\n}\nclass SetExpression extends Expression {\n    constructor(start, ranges, inverted) {\n        super(start);\n        this.ranges = ranges;\n        this.inverted = inverted;\n    }\n    toString() {\n        return `[${this.inverted ? \"^\" : \"\"}${this.ranges.map(([a, b]) => {\n            return String.fromCodePoint(a) + (b == a + 1 ? \"\" : \"-\" + String.fromCodePoint(b));\n        })}]`;\n    }\n    eq(other) {\n        return this.inverted == other.inverted && this.ranges.length == other.ranges.length &&\n            this.ranges.every(([a, b], i) => { let [x, y] = other.ranges[i]; return a == x && b == y; });\n    }\n}\nclass AnyExpression extends Expression {\n    constructor(start) {\n        super(start);\n    }\n    toString() { return \"_\"; }\n    eq() { return true; }\n}\nfunction walkExprs(exprs, f) {\n    let result = null;\n    for (let i = 0; i < exprs.length; i++) {\n        let expr = exprs[i].walk(f);\n        if (expr != exprs[i] && !result)\n            result = exprs.slice(0, i);\n        if (result)\n            result.push(expr);\n    }\n    return result || exprs;\n}\nconst CharClasses = {\n    asciiLetter: [[65, 91], [97, 123]],\n    asciiLowercase: [[97, 123]],\n    asciiUppercase: [[65, 91]],\n    digit: [[48, 58]],\n    whitespace: [[9, 14], [32, 33], [133, 134], [160, 161], [5760, 5761], [8192, 8203],\n        [8232, 8234], [8239, 8240], [8287, 8288], [12288, 12289]],\n    eof: [[0xffff, 0xffff]]\n};\nclass CharClass extends Expression {\n    constructor(start, type) {\n        super(start);\n        this.type = type;\n    }\n    toString() { return \"@\" + this.type; }\n    eq(expr) { return this.type == expr.type; }\n}\nfunction exprEq(a, b) {\n    return a.constructor == b.constructor && a.eq(b);\n}\nfunction exprsEq(a, b) {\n    return a.length == b.length && a.every((e, i) => exprEq(e, b[i]));\n}\nclass Prop extends Node {\n    constructor(start, at, name, value) {\n        super(start);\n        this.at = at;\n        this.name = name;\n        this.value = value;\n    }\n    eq(other) {\n        return this.name == other.name && this.value.length == other.value.length &&\n            this.value.every((v, i) => v.value == other.value[i].value && v.name == other.value[i].name);\n    }\n    toString() {\n        let result = (this.at ? \"@\" : \"\") + this.name;\n        if (this.value.length) {\n            result += \"=\";\n            for (let { name, value } of this.value)\n                result += name ? `{${name}}` : /[^\\w-]/.test(value) ? JSON.stringify(value) : value;\n        }\n        return result;\n    }\n    static eqProps(a, b) {\n        return a.length == b.length && a.every((p, i) => p.eq(b[i]));\n    }\n}\nclass PropPart extends Node {\n    constructor(start, value, name) {\n        super(start);\n        this.value = value;\n        this.name = name;\n    }\n}\nfunction maybeParens(node, parent) {\n    return node.prec < parent.prec ? \"(\" + node.toString() + \")\" : node.toString();\n}\n\n/**\nThe type of error raised when the parser generator finds an issue.\n*/\nclass GenError extends Error {\n}\n\nfunction hasProps(props) {\n    for (let _p in props)\n        return true;\n    return false;\n}\nlet termHash = 0;\nclass Term {\n    constructor(name, flags, nodeName, props = {}) {\n        this.name = name;\n        this.flags = flags;\n        this.nodeName = nodeName;\n        this.props = props;\n        this.hash = ++termHash; // Used for sorting and hashing during parser generation\n        this.id = -1; // Assigned in a later stage, used in actual output\n        // Filled in only after the rules are simplified, used in automaton.ts\n        this.rules = [];\n    }\n    toString() { return this.name; }\n    get nodeType() { return this.top || this.nodeName != null || hasProps(this.props) || this.repeated; }\n    get terminal() { return (this.flags & 1 /* TermFlag.Terminal */) > 0; }\n    get eof() { return (this.flags & 4 /* TermFlag.Eof */) > 0; }\n    get error() { return \"error\" in this.props; }\n    get top() { return (this.flags & 2 /* TermFlag.Top */) > 0; }\n    get interesting() { return this.flags > 0 || this.nodeName != null; }\n    get repeated() { return (this.flags & 16 /* TermFlag.Repeated */) > 0; }\n    set preserve(value) { this.flags = value ? this.flags | 8 /* TermFlag.Preserve */ : this.flags & ~8 /* TermFlag.Preserve */; }\n    get preserve() { return (this.flags & 8 /* TermFlag.Preserve */) > 0; }\n    set inline(value) { this.flags = value ? this.flags | 32 /* TermFlag.Inline */ : this.flags & ~32 /* TermFlag.Inline */; }\n    get inline() { return (this.flags & 32 /* TermFlag.Inline */) > 0; }\n    cmp(other) { return this.hash - other.hash; }\n}\nclass TermSet {\n    constructor() {\n        this.terms = [];\n        // Map from term names to Term instances\n        this.names = Object.create(null);\n        this.tops = [];\n        this.eof = this.term(\"\u2404\", null, 1 /* TermFlag.Terminal */ | 4 /* TermFlag.Eof */);\n        this.error = this.term(\"\u26A0\", \"\u26A0\", 8 /* TermFlag.Preserve */);\n    }\n    term(name, nodeName, flags = 0, props = {}) {\n        let term = new Term(name, flags, nodeName, props);\n        this.terms.push(term);\n        this.names[name] = term;\n        return term;\n    }\n    makeTop(nodeName, props) {\n        const term = this.term(\"@top\", nodeName, 2 /* TermFlag.Top */, props);\n        this.tops.push(term);\n        return term;\n    }\n    makeTerminal(name, nodeName, props = {}) {\n        return this.term(name, nodeName, 1 /* TermFlag.Terminal */, props);\n    }\n    makeNonTerminal(name, nodeName, props = {}) {\n        return this.term(name, nodeName, 0, props);\n    }\n    makeRepeat(name) {\n        return this.term(name, null, 16 /* TermFlag.Repeated */);\n    }\n    uniqueName(name) {\n        for (let i = 0;; i++) {\n            let cur = i ? `${name}-${i}` : name;\n            if (!this.names[cur])\n                return cur;\n        }\n    }\n    finish(rules) {\n        for (let rule of rules)\n            rule.name.rules.push(rule);\n        this.terms = this.terms.filter(t => t.terminal || t.preserve || rules.some(r => r.name == t || r.parts.includes(t)));\n        let names = {};\n        let nodeTypes = [this.error];\n        this.error.id = 0 /* T.Err */;\n        let nextID = 0 /* T.Err */ + 1;\n        // Assign ids to terms that represent node types\n        for (let term of this.terms)\n            if (term.id < 0 && term.nodeType && !term.repeated) {\n                term.id = nextID++;\n                nodeTypes.push(term);\n            }\n        // Put all repeated terms after the regular node types\n        let minRepeatTerm = nextID;\n        for (let term of this.terms)\n            if (term.repeated) {\n                term.id = nextID++;\n                nodeTypes.push(term);\n            }\n        // Then comes the EOF term\n        this.eof.id = nextID++;\n        // And then the remaining (non-node, non-repeat) terms.\n        for (let term of this.terms) {\n            if (term.id < 0)\n                term.id = nextID++;\n            if (term.name)\n                names[term.id] = term.name;\n        }\n        if (nextID >= 0xfffe)\n            throw new GenError(\"Too many terms\");\n        return { nodeTypes, names, minRepeatTerm, maxTerm: nextID - 1 };\n    }\n}\nfunction cmpSet(a, b, cmp) {\n    if (a.length != b.length)\n        return a.length - b.length;\n    for (let i = 0; i < a.length; i++) {\n        let diff = cmp(a[i], b[i]);\n        if (diff)\n            return diff;\n    }\n    return 0;\n}\nconst none$3 = [];\nclass Conflicts {\n    constructor(precedence, ambigGroups = none$3, cut = 0) {\n        this.precedence = precedence;\n        this.ambigGroups = ambigGroups;\n        this.cut = cut;\n    }\n    join(other) {\n        if (this == Conflicts.none || this == other)\n            return other;\n        if (other == Conflicts.none)\n            return this;\n        return new Conflicts(Math.max(this.precedence, other.precedence), union(this.ambigGroups, other.ambigGroups), Math.max(this.cut, other.cut));\n    }\n    cmp(other) {\n        return this.precedence - other.precedence || cmpSet(this.ambigGroups, other.ambigGroups, (a, b) => a < b ? -1 : a > b ? 1 : 0) ||\n            this.cut - other.cut;\n    }\n}\nConflicts.none = new Conflicts(0);\nfunction union(a, b) {\n    if (a.length == 0 || a == b)\n        return b;\n    if (b.length == 0)\n        return a;\n    let result = a.slice();\n    for (let value of b)\n        if (!a.includes(value))\n            result.push(value);\n    return result.sort();\n}\nlet ruleID = 0;\nclass Rule {\n    constructor(name, parts, conflicts, skip) {\n        this.name = name;\n        this.parts = parts;\n        this.conflicts = conflicts;\n        this.skip = skip;\n        this.id = ruleID++;\n    }\n    cmp(rule) {\n        return this.id - rule.id;\n    }\n    cmpNoName(rule) {\n        return this.parts.length - rule.parts.length ||\n            this.skip.hash - rule.skip.hash ||\n            this.parts.reduce((r, s, i) => r || s.cmp(rule.parts[i]), 0) ||\n            cmpSet(this.conflicts, rule.conflicts, (a, b) => a.cmp(b));\n    }\n    toString() {\n        return this.name + \" -> \" + this.parts.join(\" \");\n    }\n    get isRepeatWrap() {\n        return this.name.repeated && this.parts.length == 2 && this.parts[0] == this.name;\n    }\n    sameReduce(other) {\n        return this.name == other.name && this.parts.length == other.parts.length && this.isRepeatWrap == other.isRepeatWrap;\n    }\n}\n\nconst MAX_CHAR = 0xffff;\nclass Edge {\n    constructor(from, to, target) {\n        this.from = from;\n        this.to = to;\n        this.target = target;\n    }\n    toString() {\n        return `-> ${this.target.id}[label=${JSON.stringify(this.from < 0 ? \"\u03B5\" : charFor(this.from) +\n            (this.to > this.from + 1 ? \"-\" + charFor(this.to - 1) : \"\"))}]`;\n    }\n}\nfunction charFor(n) {\n    return n > MAX_CHAR ? \"\u221E\"\n        : n == 10 ? \"\\\\n\"\n            : n == 13 ? \"\\\\r\"\n                : n < 32 || n >= 0xd800 && n < 0xdfff ? \"\\\\u{\" + n.toString(16) + \"}\"\n                    : String.fromCharCode(n);\n}\nfunction minimize(states, start) {\n    let partition = Object.create(null);\n    let byAccepting = Object.create(null);\n    for (let state of states) {\n        let id = ids(state.accepting);\n        let group = byAccepting[id] || (byAccepting[id] = []);\n        group.push(state);\n        partition[state.id] = group;\n    }\n    for (;;) {\n        let split = false, newPartition = Object.create(null);\n        for (let state of states) {\n            if (newPartition[state.id])\n                continue;\n            let group = partition[state.id];\n            if (group.length == 1) {\n                newPartition[group[0].id] = group;\n                continue;\n            }\n            let parts = [];\n            groups: for (let state of group) {\n                for (let p of parts) {\n                    if (isEquivalent(state, p[0], partition)) {\n                        p.push(state);\n                        continue groups;\n                    }\n                }\n                parts.push([state]);\n            }\n            if (parts.length > 1)\n                split = true;\n            for (let p of parts)\n                for (let s of p)\n                    newPartition[s.id] = p;\n        }\n        if (!split)\n            return applyMinimization(states, start, partition);\n        partition = newPartition;\n    }\n}\nfunction isEquivalent(a, b, partition) {\n    if (a.edges.length != b.edges.length)\n        return false;\n    for (let i = 0; i < a.edges.length; i++) {\n        let eA = a.edges[i], eB = b.edges[i];\n        if (eA.from != eB.from || eA.to != eB.to || partition[eA.target.id] != partition[eB.target.id])\n            return false;\n    }\n    return true;\n}\nfunction applyMinimization(states, start, partition) {\n    for (let state of states) {\n        for (let i = 0; i < state.edges.length; i++) {\n            let edge = state.edges[i], target = partition[edge.target.id][0];\n            if (target != edge.target)\n                state.edges[i] = new Edge(edge.from, edge.to, target);\n        }\n    }\n    return partition[start.id][0];\n}\nlet stateID = 1;\nlet State$1 = class State {\n    constructor(accepting = [], id = stateID++) {\n        this.accepting = accepting;\n        this.id = id;\n        this.edges = [];\n    }\n    edge(from, to, target) {\n        this.edges.push(new Edge(from, to, target));\n    }\n    nullEdge(target) { this.edge(-1, -1, target); }\n    compile() {\n        let labeled = Object.create(null), localID = 0;\n        let startState = explore(this.closure().sort((a, b) => a.id - b.id));\n        return minimize(Object.values(labeled), startState);\n        function explore(states) {\n            let newState = labeled[ids(states)] =\n                new State(states.reduce((a, s) => union(a, s.accepting), []), localID++);\n            let out = [];\n            for (let state of states)\n                for (let edge of state.edges) {\n                    if (edge.from >= 0)\n                        out.push(edge);\n                }\n            let transitions = mergeEdges(out);\n            for (let merged of transitions) {\n                let targets = merged.targets.sort((a, b) => a.id - b.id);\n                newState.edge(merged.from, merged.to, labeled[ids(targets)] || explore(targets));\n            }\n            return newState;\n        }\n    }\n    closure() {\n        let result = [], seen = Object.create(null);\n        function explore(state) {\n            if (seen[state.id])\n                return;\n            seen[state.id] = true;\n            // States with only epsilon edges and no accepting term that\n            // isn't also in the next states are left out to help reduce the\n            // number of unique state combinations\n            if (state.edges.some(e => e.from >= 0) ||\n                (state.accepting.length > 0 && !state.edges.some(e => sameSet$1(state.accepting, e.target.accepting))))\n                result.push(state);\n            for (let edge of state.edges)\n                if (edge.from < 0)\n                    explore(edge.target);\n        }\n        explore(this);\n        return result;\n    }\n    findConflicts(occurTogether) {\n        let conflicts = [], cycleTerms = this.cycleTerms();\n        function add(a, b, soft, aEdges, bEdges) {\n            if (a.id < b.id) {\n                [a, b] = [b, a];\n                soft = -soft;\n            }\n            let found = conflicts.find(c => c.a == a && c.b == b);\n            if (!found)\n                conflicts.push(new Conflict$1(a, b, soft, exampleFromEdges(aEdges), bEdges && exampleFromEdges(bEdges)));\n            else if (found.soft != soft)\n                found.soft = 0;\n        }\n        this.reachable((state, edges) => {\n            if (state.accepting.length == 0)\n                return;\n            for (let i = 0; i < state.accepting.length; i++)\n                for (let j = i + 1; j < state.accepting.length; j++)\n                    add(state.accepting[i], state.accepting[j], 0, edges);\n            state.reachable((s, es) => {\n                if (s != state)\n                    for (let term of s.accepting) {\n                        let hasCycle = cycleTerms.includes(term);\n                        for (let orig of state.accepting)\n                            if (term != orig)\n                                add(term, orig, hasCycle || cycleTerms.includes(orig) || !occurTogether(term, orig) ? 0 : 1, edges, edges.concat(es));\n                    }\n            });\n        });\n        return conflicts;\n    }\n    cycleTerms() {\n        let work = [];\n        this.reachable(state => {\n            for (let { target } of state.edges)\n                work.push(state, target);\n        });\n        let table = new Map;\n        let haveCycle = [];\n        for (let i = 0; i < work.length;) {\n            let from = work[i++], to = work[i++];\n            let entry = table.get(from);\n            if (!entry)\n                table.set(from, entry = []);\n            if (entry.includes(to))\n                continue;\n            if (from == to) {\n                if (!haveCycle.includes(from))\n                    haveCycle.push(from);\n            }\n            else {\n                for (let next of entry)\n                    work.push(from, next);\n                entry.push(to);\n            }\n        }\n        let result = [];\n        for (let state of haveCycle) {\n            for (let term of state.accepting) {\n                if (!result.includes(term))\n                    result.push(term);\n            }\n        }\n        return result;\n    }\n    reachable(f) {\n        let seen = [], edges = [];\n        (function explore(s) {\n            f(s, edges);\n            seen.push(s);\n            for (let edge of s.edges)\n                if (!seen.includes(edge.target)) {\n                    edges.push(edge);\n                    explore(edge.target);\n                    edges.pop();\n                }\n        })(this);\n    }\n    toString() {\n        let out = \"digraph {\\n\";\n        this.reachable(state => {\n            if (state.accepting.length)\n                out += `  ${state.id} [label=${JSON.stringify(state.accepting.join())}];\\n`;\n            for (let edge of state.edges)\n                out += `  ${state.id} ${edge};\\n`;\n        });\n        return out + \"}\";\n    }\n    // Tokenizer data is represented as a single flat array. This\n    // contains regions for each tokenizer state. Region offsets are\n    // used to identify states.\n    //\n    // Each state is laid out as:\n    //  - Token group mask\n    //  - Offset of the end of the accepting data\n    //  - Number of outgoing edges in the state\n    //  - Pairs of token masks and term ids that indicate the accepting\n    //    states, sorted by precedence\n    //  - Triples for the edges: each with a low and high bound and the\n    //    offset of the next state.\n    toArray(groupMasks, precedence) {\n        let offsets = []; // Used to 'link' the states after building the arrays\n        let data = [];\n        this.reachable(state => {\n            let start = data.length;\n            let acceptEnd = start + 3 + state.accepting.length * 2;\n            offsets[state.id] = start;\n            data.push(state.stateMask(groupMasks), acceptEnd, state.edges.length);\n            state.accepting.sort((a, b) => precedence.indexOf(a.id) - precedence.indexOf(b.id));\n            for (let term of state.accepting)\n                data.push(term.id, groupMasks[term.id] || 0xffff);\n            for (let edge of state.edges)\n                data.push(edge.from, edge.to, -edge.target.id - 1);\n        });\n        // Replace negative numbers with resolved state offsets\n        for (let i = 0; i < data.length; i++)\n            if (data[i] < 0)\n                data[i] = offsets[-data[i] - 1];\n        if (data.length > Math.pow(2, 16))\n            throw new GenError(\"Tokenizer tables too big to represent with 16-bit offsets.\");\n        return Uint16Array.from(data);\n    }\n    stateMask(groupMasks) {\n        let mask = 0;\n        this.reachable(state => {\n            for (let term of state.accepting)\n                mask |= (groupMasks[term.id] || 0xffff);\n        });\n        return mask;\n    }\n};\nlet Conflict$1 = class Conflict {\n    constructor(a, b, \n    // Conflicts between two non-cyclic tokens are marked as\n    // 'soft', with a negative number if a is shorter than\n    // b, and a positive if b is shorter than a.\n    soft, exampleA, exampleB) {\n        this.a = a;\n        this.b = b;\n        this.soft = soft;\n        this.exampleA = exampleA;\n        this.exampleB = exampleB;\n    }\n};\nfunction exampleFromEdges(edges) {\n    let str = \"\";\n    for (let i = 0; i < edges.length; i++)\n        str += String.fromCharCode(edges[i].from);\n    return str;\n}\nfunction ids(elts) {\n    let result = \"\";\n    for (let elt of elts) {\n        if (result.length)\n            result += \"-\";\n        result += elt.id;\n    }\n    return result;\n}\nfunction sameSet$1(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (a[i] != b[i])\n            return false;\n    return true;\n}\nclass MergedEdge {\n    constructor(from, to, targets) {\n        this.from = from;\n        this.to = to;\n        this.targets = targets;\n    }\n}\n// Merge multiple edges (tagged by character ranges) into a set of\n// mutually exclusive ranges pointing at all target states for that\n// range\nfunction mergeEdges(edges) {\n    let separate = [], result = [];\n    for (let edge of edges) {\n        if (!separate.includes(edge.from))\n            separate.push(edge.from);\n        if (!separate.includes(edge.to))\n            separate.push(edge.to);\n    }\n    separate.sort((a, b) => a - b);\n    for (let i = 1; i < separate.length; i++) {\n        let from = separate[i - 1], to = separate[i];\n        let found = [];\n        for (let edge of edges)\n            if (edge.to > from && edge.from < to) {\n                for (let target of edge.target.closure())\n                    if (!found.includes(target))\n                        found.push(target);\n            }\n        if (found.length)\n            result.push(new MergedEdge(from, to, found));\n    }\n    let eof = edges.filter(e => e.from == 65535 /* Seq.End */ && e.to == 65535 /* Seq.End */);\n    if (eof.length) {\n        let found = [];\n        for (let edge of eof)\n            for (let target of edge.target.closure())\n                if (!found.includes(target))\n                    found.push(target);\n        if (found.length)\n            result.push(new MergedEdge(65535 /* Seq.End */, 65535 /* Seq.End */, found));\n    }\n    return result;\n}\n\n// Note that this is the parser for grammar files, not the generated parser\nlet word = /[\\w_-]+/gy;\n// Some engines (specifically SpiderMonkey) have still not implemented \\p\ntry {\n    word = /[\\p{Alphabetic}\\d_-]+/ugy;\n}\ncatch (_) { }\nconst none$2 = [];\nclass Input {\n    constructor(string, fileName = null) {\n        this.string = string;\n        this.fileName = fileName;\n        this.type = \"sof\";\n        this.value = null;\n        this.start = 0;\n        this.end = 0;\n        this.next();\n    }\n    lineInfo(pos) {\n        for (let line = 1, cur = 0;;) {\n            let next = this.string.indexOf(\"\\n\", cur);\n            if (next > -1 && next < pos) {\n                ++line;\n                cur = next + 1;\n            }\n            else {\n                return { line, ch: pos - cur };\n            }\n        }\n    }\n    message(msg, pos = -1) {\n        let posInfo = this.fileName || \"\";\n        if (pos > -1) {\n            let info = this.lineInfo(pos);\n            posInfo += (posInfo ? \" \" : \"\") + info.line + \":\" + info.ch;\n        }\n        return posInfo ? msg + ` (${posInfo})` : msg;\n    }\n    raise(msg, pos = -1) {\n        throw new GenError(this.message(msg, pos));\n    }\n    match(pos, re) {\n        let match = re.exec(this.string.slice(pos));\n        return match ? pos + match[0].length : -1;\n    }\n    next() {\n        let start = this.match(this.end, /^(\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/);\n        if (start == this.string.length)\n            return this.set(\"eof\", null, start, start);\n        let next = this.string[start];\n        if (next == '\"') {\n            let end = this.match(start + 1, /^(\\\\.|[^\"\\\\])*\"/);\n            if (end == -1)\n                this.raise(\"Unterminated string literal\", start);\n            return this.set(\"string\", readString(this.string.slice(start + 1, end - 1)), start, end);\n        }\n        else if (next == \"'\") {\n            let end = this.match(start + 1, /^(\\\\.|[^'\\\\])*'/);\n            if (end == -1)\n                this.raise(\"Unterminated string literal\", start);\n            return this.set(\"string\", readString(this.string.slice(start + 1, end - 1)), start, end);\n        }\n        else if (next == \"@\") {\n            word.lastIndex = start + 1;\n            let m = word.exec(this.string);\n            if (!m)\n                return this.raise(\"@ without a name\", start);\n            return this.set(\"at\", m[0], start, start + 1 + m[0].length);\n        }\n        else if ((next == \"$\" || next == \"!\") && this.string[start + 1] == \"[\") {\n            let end = this.match(start + 2, /^(?:\\\\.|[^\\]\\\\])*\\]/);\n            if (end == -1)\n                this.raise(\"Unterminated character set\", start);\n            return this.set(\"set\", this.string.slice(start + 2, end - 1), start, end);\n        }\n        else if (/[\\[\\]()!~+*?{}<>\\.,|:$=]/.test(next)) {\n            return this.set(next, null, start, start + 1);\n        }\n        else {\n            word.lastIndex = start;\n            let m = word.exec(this.string);\n            if (!m)\n                return this.raise(\"Unexpected character \" + JSON.stringify(next), start);\n            return this.set(\"id\", m[0], start, start + m[0].length);\n        }\n    }\n    set(type, value, start, end) {\n        this.type = type;\n        this.value = value;\n        this.start = start;\n        this.end = end;\n    }\n    eat(type, value = null) {\n        if (this.type == type && (value == null || this.value === value)) {\n            this.next();\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    unexpected() {\n        return this.raise(`Unexpected token '${this.string.slice(this.start, this.end)}'`, this.start);\n    }\n    expect(type, value = null) {\n        let val = this.value;\n        if (this.type != type || !(value == null || val === value))\n            this.unexpected();\n        this.next();\n        return val;\n    }\n    parse() {\n        return parseGrammar(this);\n    }\n}\nfunction parseGrammar(input) {\n    let start = input.start;\n    let rules = [];\n    let prec = null;\n    let tokens = null;\n    let localTokens = [];\n    let mainSkip = null;\n    let scopedSkip = [];\n    let dialects = [];\n    let context = null;\n    let external = [];\n    let specialized = [];\n    let props = [];\n    let propSources = [];\n    let tops = [];\n    let sawTop = false;\n    let autoDelim = false;\n    while (input.type != \"eof\") {\n        let start = input.start;\n        if (input.eat(\"at\", \"top\")) {\n            if (input.type != \"id\")\n                input.raise(`Top rules must have a name`, input.start);\n            tops.push(parseRule(input, parseIdent(input)));\n            sawTop = true;\n        }\n        else if (input.type == \"at\" && input.value == \"tokens\") {\n            if (tokens)\n                input.raise(`Multiple @tokens declaractions`, input.start);\n            else\n                tokens = parseTokens(input);\n        }\n        else if (input.eat(\"at\", \"local\")) {\n            input.expect(\"id\", \"tokens\");\n            localTokens.push(parseLocalTokens(input, start));\n        }\n        else if (input.eat(\"at\", \"context\")) {\n            if (context)\n                input.raise(`Multiple @context declarations`, start);\n            let id = parseIdent(input);\n            input.expect(\"id\", \"from\");\n            let source = input.expect(\"string\");\n            context = new ContextDeclaration(start, id, source);\n        }\n        else if (input.eat(\"at\", \"external\")) {\n            if (input.eat(\"id\", \"tokens\"))\n                external.push(parseExternalTokens(input, start));\n            else if (input.eat(\"id\", \"prop\"))\n                props.push(parseExternalProp(input, start));\n            else if (input.eat(\"id\", \"extend\"))\n                specialized.push(parseExternalSpecialize(input, \"extend\", start));\n            else if (input.eat(\"id\", \"specialize\"))\n                specialized.push(parseExternalSpecialize(input, \"specialize\", start));\n            else if (input.eat(\"id\", \"propSource\"))\n                propSources.push(parseExternalPropSource(input, start));\n            else\n                input.unexpected();\n        }\n        else if (input.eat(\"at\", \"dialects\")) {\n            input.expect(\"{\");\n            for (let first = true; !input.eat(\"}\"); first = false) {\n                if (!first)\n                    input.eat(\",\");\n                dialects.push(parseIdent(input));\n            }\n        }\n        else if (input.type == \"at\" && input.value == \"precedence\") {\n            if (prec)\n                input.raise(`Multiple precedence declarations`, input.start);\n            prec = parsePrecedence(input);\n        }\n        else if (input.eat(\"at\", \"detectDelim\")) {\n            autoDelim = true;\n        }\n        else if (input.eat(\"at\", \"skip\")) {\n            let skip = parseBracedExpr(input);\n            if (input.type == \"{\") {\n                input.next();\n                let rules = [], topRules = [];\n                while (!input.eat(\"}\")) {\n                    if (input.eat(\"at\", \"top\")) {\n                        topRules.push(parseRule(input, parseIdent(input)));\n                        sawTop = true;\n                    }\n                    else {\n                        rules.push(parseRule(input));\n                    }\n                }\n                scopedSkip.push({ expr: skip, topRules, rules });\n            }\n            else {\n                if (mainSkip)\n                    input.raise(`Multiple top-level skip declarations`, input.start);\n                mainSkip = skip;\n            }\n        }\n        else {\n            rules.push(parseRule(input));\n        }\n    }\n    if (!sawTop)\n        return input.raise(`Missing @top declaration`);\n    return new GrammarDeclaration(start, rules, tops, tokens, localTokens, context, external, specialized, propSources, prec, mainSkip, scopedSkip, dialects, props, autoDelim);\n}\nfunction parseRule(input, named) {\n    let start = named ? named.start : input.start;\n    let id = named || parseIdent(input);\n    let props = parseProps(input);\n    let params = [];\n    if (input.eat(\"<\"))\n        while (!input.eat(\">\")) {\n            if (params.length)\n                input.expect(\",\");\n            params.push(parseIdent(input));\n        }\n    let expr = parseBracedExpr(input);\n    return new RuleDeclaration(start, id, props, params, expr);\n}\nfunction parseProps(input) {\n    if (input.type != \"[\")\n        return none$2;\n    let props = [];\n    input.expect(\"[\");\n    while (!input.eat(\"]\")) {\n        if (props.length)\n            input.expect(\",\");\n        props.push(parseProp(input));\n    }\n    return props;\n}\nfunction parseProp(input) {\n    let start = input.start, value = [], name = input.value, at = input.type == \"at\";\n    if (!input.eat(\"at\") && !input.eat(\"id\"))\n        input.unexpected();\n    if (input.eat(\"=\"))\n        for (;;) {\n            if (input.type == \"string\" || input.type == \"id\") {\n                value.push(new PropPart(input.start, input.value, null));\n                input.next();\n            }\n            else if (input.eat(\".\")) {\n                value.push(new PropPart(input.start, \".\", null));\n            }\n            else if (input.eat(\"{\")) {\n                value.push(new PropPart(input.start, null, input.expect(\"id\")));\n                input.expect(\"}\");\n            }\n            else {\n                break;\n            }\n        }\n    return new Prop(start, at, name, value);\n}\nfunction parseBracedExpr(input) {\n    input.expect(\"{\");\n    let expr = parseExprChoice(input);\n    input.expect(\"}\");\n    return expr;\n}\nconst SET_MARKER = \"\\ufdda\"; // (Invalid unicode character)\nfunction parseExprInner(input) {\n    let start = input.start;\n    if (input.eat(\"(\")) {\n        if (input.eat(\")\"))\n            return new SequenceExpression(start, none$2, [none$2, none$2]);\n        let expr = parseExprChoice(input);\n        input.expect(\")\");\n        return expr;\n    }\n    else if (input.type == \"string\") {\n        let value = input.value;\n        input.next();\n        if (value.length == 0)\n            return new SequenceExpression(start, none$2, [none$2, none$2]);\n        return new LiteralExpression(start, value);\n    }\n    else if (input.eat(\"id\", \"_\")) {\n        return new AnyExpression(start);\n    }\n    else if (input.type == \"set\") {\n        let content = input.value, invert = input.string[input.start] == \"!\";\n        let unescaped = readString(content.replace(/\\\\.|-|\"/g, (m) => {\n            return m == \"-\" ? SET_MARKER : m == '\"' ? '\\\\\"' : m;\n        }));\n        let ranges = [];\n        for (let pos = 0; pos < unescaped.length;) {\n            let code = unescaped.codePointAt(pos);\n            pos += code > 0xffff ? 2 : 1;\n            if (pos < unescaped.length - 1 && unescaped[pos] == SET_MARKER) {\n                let end = unescaped.codePointAt(pos + 1);\n                pos += end > 0xffff ? 3 : 2;\n                if (end < code)\n                    input.raise(\"Invalid character range\", input.start);\n                addRange(input, ranges, code, end + 1);\n            }\n            else {\n                if (code == SET_MARKER.charCodeAt(0))\n                    code = 45;\n                addRange(input, ranges, code, code + 1);\n            }\n        }\n        input.next();\n        return new SetExpression(start, ranges.sort((a, b) => a[0] - b[0]), invert);\n    }\n    else if (input.type == \"at\" && (input.value == \"specialize\" || input.value == \"extend\")) {\n        let { start, value } = input;\n        input.next();\n        let props = parseProps(input);\n        input.expect(\"<\");\n        let token = parseExprChoice(input), content;\n        if (input.eat(\",\")) {\n            content = parseExprChoice(input);\n        }\n        else if (token instanceof LiteralExpression) {\n            content = token;\n        }\n        else {\n            input.raise(`@${value} requires two arguments when its first argument isn't a literal string`);\n        }\n        input.expect(\">\");\n        return new SpecializeExpression(start, value, props, token, content);\n    }\n    else if (input.type == \"at\" && CharClasses.hasOwnProperty(input.value)) {\n        let cls = new CharClass(input.start, input.value);\n        input.next();\n        return cls;\n    }\n    else if (input.type == \"[\") {\n        let rule = parseRule(input, new Identifier(start, \"_anon\"));\n        if (rule.params.length)\n            input.raise(`Inline rules can't have parameters`, rule.start);\n        return new InlineRuleExpression(start, rule);\n    }\n    else {\n        let id = parseIdent(input);\n        if (input.type == \"[\" || input.type == \"{\") {\n            let rule = parseRule(input, id);\n            if (rule.params.length)\n                input.raise(`Inline rules can't have parameters`, rule.start);\n            return new InlineRuleExpression(start, rule);\n        }\n        else {\n            if (input.eat(\".\") && id.name == \"std\" && CharClasses.hasOwnProperty(input.value)) {\n                let cls = new CharClass(start, input.value);\n                input.next();\n                return cls;\n            }\n            return new NameExpression(start, id, parseArgs(input));\n        }\n    }\n}\nfunction parseArgs(input) {\n    let args = [];\n    if (input.eat(\"<\"))\n        while (!input.eat(\">\")) {\n            if (args.length)\n                input.expect(\",\");\n            args.push(parseExprChoice(input));\n        }\n    return args;\n}\nfunction addRange(input, ranges, from, to) {\n    if (!ranges.every(([a, b]) => b <= from || a >= to))\n        input.raise(\"Overlapping character range\", input.start);\n    ranges.push([from, to]);\n}\nfunction parseExprSuffix(input) {\n    let start = input.start;\n    let expr = parseExprInner(input);\n    for (;;) {\n        let kind = input.type;\n        if (input.eat(\"*\") || input.eat(\"?\") || input.eat(\"+\"))\n            expr = new RepeatExpression(start, expr, kind);\n        else\n            return expr;\n    }\n}\nfunction endOfSequence(input) {\n    return input.type == \"}\" || input.type == \")\" || input.type == \"|\" || input.type == \"/\" ||\n        input.type == \"/\\\\\" || input.type == \"{\" || input.type == \",\" || input.type == \">\";\n}\nfunction parseExprSequence(input) {\n    let start = input.start, exprs = [], markers = [none$2];\n    do {\n        // Add markers at this position\n        for (;;) {\n            let localStart = input.start, markerType;\n            if (input.eat(\"~\"))\n                markerType = \"ambig\";\n            else if (input.eat(\"!\"))\n                markerType = \"prec\";\n            else\n                break;\n            markers[markers.length - 1] =\n                markers[markers.length - 1].concat(new ConflictMarker(localStart, parseIdent(input), markerType));\n        }\n        if (endOfSequence(input))\n            break;\n        exprs.push(parseExprSuffix(input));\n        markers.push(none$2);\n    } while (!endOfSequence(input));\n    if (exprs.length == 1 && markers.every(ms => ms.length == 0))\n        return exprs[0];\n    return new SequenceExpression(start, exprs, markers, !exprs.length);\n}\nfunction parseExprChoice(input) {\n    let start = input.start, left = parseExprSequence(input);\n    if (!input.eat(\"|\"))\n        return left;\n    let exprs = [left];\n    do {\n        exprs.push(parseExprSequence(input));\n    } while (input.eat(\"|\"));\n    let empty = exprs.find(s => s instanceof SequenceExpression && s.empty);\n    if (empty)\n        input.raise(\"Empty expression in choice operator. If this is intentional, use () to make it explicit.\", empty.start);\n    return new ChoiceExpression(start, exprs);\n}\nfunction parseIdent(input) {\n    if (input.type != \"id\")\n        input.unexpected();\n    let start = input.start, name = input.value;\n    input.next();\n    return new Identifier(start, name);\n}\nfunction parsePrecedence(input) {\n    let start = input.start;\n    input.next();\n    input.expect(\"{\");\n    let items = [];\n    while (!input.eat(\"}\")) {\n        if (items.length)\n            input.eat(\",\");\n        items.push({\n            id: parseIdent(input),\n            type: input.eat(\"at\", \"left\") ? \"left\" : input.eat(\"at\", \"right\") ? \"right\" : input.eat(\"at\", \"cut\") ? \"cut\" : null\n        });\n    }\n    return new PrecDeclaration(start, items);\n}\nfunction parseTokens(input) {\n    let start = input.start;\n    input.next();\n    input.expect(\"{\");\n    let tokenRules = [];\n    let literals = [];\n    let precedences = [];\n    let conflicts = [];\n    while (!input.eat(\"}\")) {\n        if (input.type == \"at\" && input.value == \"precedence\") {\n            precedences.push(parseTokenPrecedence(input));\n        }\n        else if (input.type == \"at\" && input.value == \"conflict\") {\n            conflicts.push(parseTokenConflict(input));\n        }\n        else if (input.type == \"string\") {\n            literals.push(new LiteralDeclaration(input.start, input.expect(\"string\"), parseProps(input)));\n        }\n        else {\n            tokenRules.push(parseRule(input));\n        }\n    }\n    return new TokenDeclaration(start, precedences, conflicts, tokenRules, literals);\n}\nfunction parseLocalTokens(input, start) {\n    input.expect(\"{\");\n    let tokenRules = [];\n    let precedences = [];\n    let fallback = null;\n    while (!input.eat(\"}\")) {\n        if (input.type == \"at\" && input.value == \"precedence\") {\n            precedences.push(parseTokenPrecedence(input));\n        }\n        else if (input.eat(\"at\", \"else\") && !fallback) {\n            fallback = { id: parseIdent(input), props: parseProps(input) };\n        }\n        else {\n            tokenRules.push(parseRule(input));\n        }\n    }\n    return new LocalTokenDeclaration(start, precedences, tokenRules, fallback);\n}\nfunction parseTokenPrecedence(input) {\n    let start = input.start;\n    input.next();\n    input.expect(\"{\");\n    let tokens = [];\n    while (!input.eat(\"}\")) {\n        if (tokens.length)\n            input.eat(\",\");\n        let expr = parseExprInner(input);\n        if (expr instanceof LiteralExpression || expr instanceof NameExpression)\n            tokens.push(expr);\n        else\n            input.raise(`Invalid expression in token precedences`, expr.start);\n    }\n    return new TokenPrecDeclaration(start, tokens);\n}\nfunction parseTokenConflict(input) {\n    let start = input.start;\n    input.next();\n    input.expect(\"{\");\n    let a = parseExprInner(input);\n    if (!(a instanceof LiteralExpression || a instanceof NameExpression))\n        input.raise(`Invalid expression in token conflict`, a.start);\n    input.eat(\",\");\n    let b = parseExprInner(input);\n    if (!(b instanceof LiteralExpression || b instanceof NameExpression))\n        input.raise(`Invalid expression in token conflict`, b.start);\n    input.expect(\"}\");\n    return new TokenConflictDeclaration(start, a, b);\n}\nfunction parseExternalTokenSet(input) {\n    let tokens = [];\n    input.expect(\"{\");\n    while (!input.eat(\"}\")) {\n        if (tokens.length)\n            input.eat(\",\");\n        let id = parseIdent(input);\n        let props = parseProps(input);\n        tokens.push({ id, props });\n    }\n    return tokens;\n}\nfunction parseExternalTokens(input, start) {\n    let id = parseIdent(input);\n    input.expect(\"id\", \"from\");\n    let from = input.expect(\"string\");\n    return new ExternalTokenDeclaration(start, id, from, parseExternalTokenSet(input));\n}\nfunction parseExternalSpecialize(input, type, start) {\n    let token = parseBracedExpr(input);\n    let id = parseIdent(input);\n    input.expect(\"id\", \"from\");\n    let from = input.expect(\"string\");\n    return new ExternalSpecializeDeclaration(start, type, token, id, from, parseExternalTokenSet(input));\n}\nfunction parseExternalPropSource(input, start) {\n    let id = parseIdent(input);\n    input.expect(\"id\", \"from\");\n    return new ExternalPropSourceDeclaration(start, id, input.expect(\"string\"));\n}\nfunction parseExternalProp(input, start) {\n    let externalID = parseIdent(input);\n    let id = input.eat(\"id\", \"as\") ? parseIdent(input) : externalID;\n    input.expect(\"id\", \"from\");\n    let from = input.expect(\"string\");\n    return new ExternalPropDeclaration(start, id, externalID, from);\n}\nfunction readString(string) {\n    let point = /\\\\(?:u\\{([\\da-f]+)\\}|u([\\da-f]{4})|x([\\da-f]{2})|([ntbrf0])|(.))|[^]/yig;\n    let out = \"\", m;\n    while (m = point.exec(string)) {\n        let [all, u1, u2, u3, single, unknown] = m;\n        if (u1 || u2 || u3)\n            out += String.fromCodePoint(parseInt(u1 || u2 || u3, 16));\n        else if (single)\n            out += single == \"n\" ? \"\\n\" : single == \"t\" ? \"\\t\" : single == \"0\" ? \"\\0\" : single == \"r\" ? \"\\r\" : single == \"f\" ? \"\\f\" : \"\\b\";\n        else if (unknown)\n            out += unknown;\n        else\n            out += all;\n    }\n    return out;\n}\n\nfunction hash(a, b) { return (a << 5) + a + b; }\nfunction hashString(h, s) {\n    for (let i = 0; i < s.length; i++)\n        h = hash(h, s.charCodeAt(i));\n    return h;\n}\n\nconst verbose = (typeof process != \"undefined\" && process.env.LOG) || \"\";\nconst timing = /\\btime\\b/.test(verbose);\nconst time = timing ? (label, f) => {\n    let t0 = Date.now();\n    let result = f();\n    console.log(`${label} (${((Date.now() - t0) / 1000).toFixed(2)}s)`);\n    return result;\n} : (_label, f) => f();\n\nclass Pos {\n    constructor(rule, pos, \n    // NOTE `ahead` and `ambigAhead` aren't mutated anymore after `finish()` has been called\n    ahead, ambigAhead, skipAhead, via) {\n        this.rule = rule;\n        this.pos = pos;\n        this.ahead = ahead;\n        this.ambigAhead = ambigAhead;\n        this.skipAhead = skipAhead;\n        this.via = via;\n        this.hash = 0;\n    }\n    finish() {\n        let h = hash(hash(this.rule.id, this.pos), this.skipAhead.hash);\n        for (let a of this.ahead)\n            h = hash(h, a.hash);\n        for (let group of this.ambigAhead)\n            h = hashString(h, group);\n        this.hash = h;\n        return this;\n    }\n    get next() {\n        return this.pos < this.rule.parts.length ? this.rule.parts[this.pos] : null;\n    }\n    advance() {\n        return new Pos(this.rule, this.pos + 1, this.ahead, this.ambigAhead, this.skipAhead, this.via).finish();\n    }\n    get skip() {\n        return this.pos == this.rule.parts.length ? this.skipAhead : this.rule.skip;\n    }\n    cmp(pos) {\n        return this.rule.cmp(pos.rule) || this.pos - pos.pos || this.skipAhead.hash - pos.skipAhead.hash ||\n            cmpSet(this.ahead, pos.ahead, (a, b) => a.cmp(b)) || cmpSet(this.ambigAhead, pos.ambigAhead, cmpStr);\n    }\n    eqSimple(pos) {\n        return pos.rule == this.rule && pos.pos == this.pos;\n    }\n    toString() {\n        let parts = this.rule.parts.map(t => t.name);\n        parts.splice(this.pos, 0, \"\u00B7\");\n        return `${this.rule.name} -> ${parts.join(\" \")}`;\n    }\n    eq(other) {\n        return this == other ||\n            this.hash == other.hash && this.rule == other.rule && this.pos == other.pos && this.skipAhead == other.skipAhead &&\n                sameSet(this.ahead, other.ahead) &&\n                sameSet(this.ambigAhead, other.ambigAhead);\n    }\n    trail(maxLen = 60) {\n        let result = [];\n        for (let pos = this; pos; pos = pos.via) {\n            for (let i = pos.pos - 1; i >= 0; i--)\n                result.push(pos.rule.parts[i]);\n        }\n        let value = result.reverse().join(\" \");\n        if (value.length > maxLen)\n            value = value.slice(value.length - maxLen).replace(/.*? /, \"\u2026 \");\n        return value;\n    }\n    conflicts(pos = this.pos) {\n        let result = this.rule.conflicts[pos];\n        if (pos == this.rule.parts.length && this.ambigAhead.length)\n            result = result.join(new Conflicts(0, this.ambigAhead));\n        return result;\n    }\n    static addOrigins(group, context) {\n        let result = group.slice();\n        for (let i = 0; i < result.length; i++) {\n            let next = result[i];\n            if (next.pos == 0)\n                for (let pos of context) {\n                    if (pos.next == next.rule.name && !result.includes(pos))\n                        result.push(pos);\n                }\n        }\n        return result;\n    }\n}\nfunction conflictsAt(group) {\n    let result = Conflicts.none;\n    for (let pos of group)\n        result = result.join(pos.conflicts());\n    return result;\n}\n// Applies automatic action precedence based on repeat productions.\n// These are left-associative, so reducing the `R -> R R` rule has\n// higher precedence.\nfunction compareRepeatPrec(a, b) {\n    for (let pos of a)\n        if (pos.rule.name.repeated) {\n            for (let posB of b)\n                if (posB.rule.name == pos.rule.name) {\n                    if (pos.rule.isRepeatWrap && pos.pos == 2)\n                        return 1;\n                    if (posB.rule.isRepeatWrap && posB.pos == 2)\n                        return -1;\n                }\n        }\n    return 0;\n}\nfunction cmpStr(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction termsAhead(rule, pos, after, first) {\n    let found = [];\n    for (let i = pos + 1; i < rule.parts.length; i++) {\n        let next = rule.parts[i], cont = false;\n        if (next.terminal) {\n            addTo(next, found);\n        }\n        else\n            for (let term of first[next.name]) {\n                if (term == null)\n                    cont = true;\n                else\n                    addTo(term, found);\n            }\n        if (!cont)\n            return found;\n    }\n    for (let a of after)\n        addTo(a, found);\n    return found;\n}\nfunction eqSet(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].eq(b[i]))\n            return false;\n    return true;\n}\nfunction sameSet(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (a[i] != b[i])\n            return false;\n    return true;\n}\nclass Shift {\n    constructor(term, target) {\n        this.term = term;\n        this.target = target;\n    }\n    eq(other) { return other instanceof Shift && this.term == other.term && other.target.id == this.target.id; }\n    cmp(other) { return other instanceof Reduce ? -1 : this.term.id - other.term.id || this.target.id - other.target.id; }\n    matches(other, mapping) {\n        return other instanceof Shift && mapping[other.target.id] == mapping[this.target.id];\n    }\n    toString() { return \"s\" + this.target.id; }\n    map(mapping, states) {\n        let mapped = states[mapping[this.target.id]];\n        return mapped == this.target ? this : new Shift(this.term, mapped);\n    }\n}\nclass Reduce {\n    constructor(term, rule) {\n        this.term = term;\n        this.rule = rule;\n    }\n    eq(other) {\n        return other instanceof Reduce && this.term == other.term && other.rule.sameReduce(this.rule);\n    }\n    cmp(other) {\n        return other instanceof Shift ? 1 : this.term.id - other.term.id || this.rule.name.id - other.rule.name.id ||\n            this.rule.parts.length - other.rule.parts.length;\n    }\n    matches(other, mapping) {\n        return other instanceof Reduce && other.rule.sameReduce(this.rule);\n    }\n    toString() { return `${this.rule.name.name}(${this.rule.parts.length})`; }\n    map() { return this; }\n}\nfunction hashPositions(set) {\n    let h = 5381;\n    for (let pos of set)\n        h = hash(h, pos.hash);\n    return h;\n}\nclass State {\n    constructor(id, set, flags = 0, skip, hash = hashPositions(set), startRule = null) {\n        this.id = id;\n        this.set = set;\n        this.flags = flags;\n        this.skip = skip;\n        this.hash = hash;\n        this.startRule = startRule;\n        this.actions = [];\n        this.actionPositions = [];\n        this.goto = [];\n        this.tokenGroup = -1;\n        this.defaultReduce = null;\n        this._actionsByTerm = null;\n    }\n    toString() {\n        let actions = this.actions.map(t => t.term + \"=\" + t).join(\",\") +\n            (this.goto.length ? \" | \" + this.goto.map(g => g.term + \"=\" + g).join(\",\") : \"\");\n        return this.id + \": \" + this.set.filter(p => p.pos > 0).join() +\n            (this.defaultReduce ? `\\n  always ${this.defaultReduce.name}(${this.defaultReduce.parts.length})`\n                : actions.length ? \"\\n  \" + actions : \"\");\n    }\n    addActionInner(value, positions) {\n        check: for (let i = 0; i < this.actions.length; i++) {\n            let action = this.actions[i];\n            if (action.term == value.term) {\n                if (action.eq(value))\n                    return null;\n                let fullPos = Pos.addOrigins(positions, this.set), actionFullPos = Pos.addOrigins(this.actionPositions[i], this.set);\n                let conflicts = conflictsAt(fullPos), actionConflicts = conflictsAt(actionFullPos);\n                let diff = compareRepeatPrec(fullPos, actionFullPos) || conflicts.precedence - actionConflicts.precedence;\n                if (diff > 0) { // Drop the existing action\n                    this.actions.splice(i, 1);\n                    this.actionPositions.splice(i, 1);\n                    i--;\n                    continue check;\n                }\n                else if (diff < 0) { // Drop this one\n                    return null;\n                }\n                else if (conflicts.ambigGroups.some(g => actionConflicts.ambigGroups.includes(g))) { // Explicitly allowed ambiguity\n                    continue check;\n                }\n                else { // Not resolved\n                    return action;\n                }\n            }\n        }\n        this.actions.push(value);\n        this.actionPositions.push(positions);\n        return null;\n    }\n    addAction(value, positions, conflicts) {\n        let conflict = this.addActionInner(value, positions);\n        if (conflict) {\n            let conflictPos = this.actionPositions[this.actions.indexOf(conflict)][0];\n            let rules = [positions[0].rule.name, conflictPos.rule.name];\n            if (conflicts.some(c => c.rules.some(r => rules.includes(r))))\n                return;\n            let error;\n            if (conflict instanceof Shift)\n                error = `shift/reduce conflict between\\n  ${conflictPos}\\nand\\n  ${positions[0].rule}`;\n            else\n                error = `reduce/reduce conflict between\\n  ${conflictPos.rule}\\nand\\n  ${positions[0].rule}`;\n            error += `\\nWith input:\\n  ${positions[0].trail(70)} \u00B7 ${value.term} \u2026`;\n            error += findConflictOrigin(conflictPos, positions[0]);\n            conflicts.push(new Conflict(error, rules));\n        }\n    }\n    getGoto(term) {\n        return this.goto.find(a => a.term == term);\n    }\n    hasSet(set) {\n        return eqSet(this.set, set);\n    }\n    actionsByTerm() {\n        let result = this._actionsByTerm;\n        if (!result) {\n            this._actionsByTerm = result = Object.create(null);\n            for (let action of this.actions)\n                (result[action.term.id] || (result[action.term.id] = [])).push(action);\n        }\n        return result;\n    }\n    finish() {\n        if (this.actions.length) {\n            let first = this.actions[0];\n            if (first instanceof Reduce) {\n                let { rule } = first;\n                if (this.actions.every(a => a instanceof Reduce && a.rule.sameReduce(rule)))\n                    this.defaultReduce = rule;\n            }\n        }\n        this.actions.sort((a, b) => a.cmp(b));\n        this.goto.sort((a, b) => a.cmp(b));\n    }\n    eq(other) {\n        let dThis = this.defaultReduce, dOther = other.defaultReduce;\n        if (dThis || dOther)\n            return dThis && dOther ? dThis.sameReduce(dOther) : false;\n        return this.skip == other.skip &&\n            this.tokenGroup == other.tokenGroup &&\n            eqSet(this.actions, other.actions) &&\n            eqSet(this.goto, other.goto);\n    }\n}\nfunction closure(set, first) {\n    let added = [], redo = [];\n    function addFor(name, ahead, ambigAhead, skipAhead, via) {\n        for (let rule of name.rules) {\n            let add = added.find(a => a.rule == rule);\n            if (!add) {\n                let existing = set.find(p => p.pos == 0 && p.rule == rule);\n                add = existing ? new Pos(rule, 0, existing.ahead.slice(), existing.ambigAhead, existing.skipAhead, existing.via)\n                    : new Pos(rule, 0, [], none$1, skipAhead, via);\n                added.push(add);\n            }\n            if (add.skipAhead != skipAhead)\n                throw new GenError(\"Inconsistent skip sets after \" + via.trail());\n            add.ambigAhead = union(add.ambigAhead, ambigAhead);\n            for (let term of ahead)\n                if (!add.ahead.includes(term)) {\n                    add.ahead.push(term);\n                    if (add.rule.parts.length && !add.rule.parts[0].terminal)\n                        addTo(add, redo);\n                }\n        }\n    }\n    for (let pos of set) {\n        let next = pos.next;\n        if (next && !next.terminal)\n            addFor(next, termsAhead(pos.rule, pos.pos, pos.ahead, first), pos.conflicts(pos.pos + 1).ambigGroups, pos.pos == pos.rule.parts.length - 1 ? pos.skipAhead : pos.rule.skip, pos);\n    }\n    while (redo.length) {\n        let add = redo.pop();\n        addFor(add.rule.parts[0], termsAhead(add.rule, 0, add.ahead, first), union(add.rule.conflicts[1].ambigGroups, add.rule.parts.length == 1 ? add.ambigAhead : none$1), add.rule.parts.length == 1 ? add.skipAhead : add.rule.skip, add);\n    }\n    let result = set.slice();\n    for (let add of added) {\n        add.ahead.sort((a, b) => a.hash - b.hash);\n        add.finish();\n        let origIndex = set.findIndex(p => p.pos == 0 && p.rule == add.rule);\n        if (origIndex > -1)\n            result[origIndex] = add;\n        else\n            result.push(add);\n    }\n    return result.sort((a, b) => a.cmp(b));\n}\nfunction addTo(value, array) {\n    if (!array.includes(value))\n        array.push(value);\n}\nfunction computeFirstSets(terms) {\n    let table = Object.create(null);\n    for (let t of terms.terms)\n        if (!t.terminal)\n            table[t.name] = [];\n    for (;;) {\n        let change = false;\n        for (let nt of terms.terms)\n            if (!nt.terminal)\n                for (let rule of nt.rules) {\n                    let set = table[nt.name];\n                    let found = false, startLen = set.length;\n                    for (let part of rule.parts) {\n                        found = true;\n                        if (part.terminal) {\n                            addTo(part, set);\n                        }\n                        else {\n                            for (let t of table[part.name]) {\n                                if (t == null)\n                                    found = false;\n                                else\n                                    addTo(t, set);\n                            }\n                        }\n                        if (found)\n                            break;\n                    }\n                    if (!found)\n                        addTo(null, set);\n                    if (set.length > startLen)\n                        change = true;\n                }\n        if (!change)\n            return table;\n    }\n}\nclass Core {\n    constructor(set, state) {\n        this.set = set;\n        this.state = state;\n    }\n}\nclass Conflict {\n    constructor(error, rules) {\n        this.error = error;\n        this.rules = rules;\n    }\n}\nfunction findConflictOrigin(a, b) {\n    if (a.eqSimple(b))\n        return \"\";\n    function via(root, start) {\n        let hist = [];\n        for (let p = start.via; !p.eqSimple(root); p = p.via)\n            hist.push(p);\n        if (!hist.length)\n            return \"\";\n        hist.unshift(start);\n        return hist.reverse().map((p, i) => \"\\n\" + \"  \".repeat(i + 1) + (p == start ? \"\" : \"via \") + p).join(\"\");\n    }\n    for (let p = a; p; p = p.via)\n        for (let p2 = b; p2; p2 = p2.via) {\n            if (p.eqSimple(p2))\n                return \"\\nShared origin: \" + p + via(p, a) + via(p, b);\n        }\n    return \"\";\n}\n// Builds a full LR(1) automaton\nfunction buildFullAutomaton(terms, startTerms, first) {\n    let states = [], statesBySetHash = {};\n    let cores = {};\n    let t0 = Date.now();\n    function getState(core, top) {\n        if (core.length == 0)\n            return null;\n        let coreHash = hashPositions(core), byHash = cores[coreHash];\n        let skip;\n        for (let pos of core) {\n            if (!skip)\n                skip = pos.skip;\n            else if (skip != pos.skip)\n                throw new GenError(\"Inconsistent skip sets after \" + pos.trail());\n        }\n        if (byHash)\n            for (let known of byHash)\n                if (eqSet(core, known.set)) {\n                    if (known.state.skip != skip)\n                        throw new GenError(\"Inconsistent skip sets after \" + known.set[0].trail());\n                    return known.state;\n                }\n        let set = closure(core, first);\n        let hash = hashPositions(set), forHash = statesBySetHash[hash] || (statesBySetHash[hash] = []);\n        let found;\n        if (!top)\n            for (let state of forHash)\n                if (state.hasSet(set))\n                    found = state;\n        if (!found) {\n            found = new State(states.length, set, 0, skip, hash, top);\n            forHash.push(found);\n            states.push(found);\n            if (timing && states.length % 500 == 0)\n                console.log(`${states.length} states after ${((Date.now() - t0) / 1000).toFixed(2)}s`);\n        }\n        (cores[coreHash] || (cores[coreHash] = [])).push(new Core(core, found));\n        return found;\n    }\n    for (const startTerm of startTerms) {\n        const startSkip = startTerm.rules.length ? startTerm.rules[0].skip : terms.names[\"%noskip\"];\n        getState(startTerm.rules.map(rule => new Pos(rule, 0, [terms.eof], none$1, startSkip, null).finish()), startTerm);\n    }\n    let conflicts = [];\n    for (let filled = 0; filled < states.length; filled++) {\n        let state = states[filled];\n        let byTerm = [], byTermPos = [], atEnd = [];\n        for (let pos of state.set) {\n            if (pos.pos == pos.rule.parts.length) {\n                if (!pos.rule.name.top)\n                    atEnd.push(pos);\n            }\n            else {\n                let next = pos.rule.parts[pos.pos];\n                let index = byTerm.indexOf(next);\n                if (index < 0) {\n                    byTerm.push(next);\n                    byTermPos.push([pos]);\n                }\n                else {\n                    byTermPos[index].push(pos);\n                }\n            }\n        }\n        for (let i = 0; i < byTerm.length; i++) {\n            let term = byTerm[i], positions = byTermPos[i].map(p => p.advance());\n            if (term.terminal) {\n                let set = applyCut(positions);\n                let next = getState(set);\n                if (next)\n                    state.addAction(new Shift(term, next), byTermPos[i], conflicts);\n            }\n            else {\n                let goto = getState(positions);\n                if (goto)\n                    state.goto.push(new Shift(term, goto));\n            }\n        }\n        let replaced = false;\n        for (let pos of atEnd)\n            for (let ahead of pos.ahead) {\n                let count = state.actions.length;\n                state.addAction(new Reduce(ahead, pos.rule), [pos], conflicts);\n                if (state.actions.length == count)\n                    replaced = true;\n            }\n        // If some actions were replaced by others, double-check whether\n        // goto entries are now superfluous (for example, in an operator\n        // precedence-related state that has a shift for `*` but only a\n        // reduce for `+`, we don't need a goto entry for rules that start\n        // with `+`)\n        if (replaced)\n            for (let i = 0; i < state.goto.length; i++) {\n                let start = first[state.goto[i].term.name];\n                if (!start.some(term => state.actions.some(a => a.term == term && (a instanceof Shift))))\n                    state.goto.splice(i--, 1);\n            }\n    }\n    if (conflicts.length)\n        throw new GenError(conflicts.map(c => c.error).join(\"\\n\\n\"));\n    // Resolve alwaysReduce and sort actions\n    for (let state of states)\n        state.finish();\n    if (timing)\n        console.log(`${states.length} states total.`);\n    return states;\n}\nfunction applyCut(set) {\n    let found = null, cut = 1;\n    for (let pos of set) {\n        let value = pos.rule.conflicts[pos.pos - 1].cut;\n        if (value < cut)\n            continue;\n        if (!found || value > cut) {\n            cut = value;\n            found = [];\n        }\n        found.push(pos);\n    }\n    return found || set;\n}\n// Verify that there are no conflicting actions or goto entries in the\n// two given states (using the state ID remapping provided in mapping)\nfunction canMerge(a, b, mapping) {\n    // If a goto for the same term differs, that makes the states\n    // incompatible\n    for (let goto of a.goto)\n        for (let other of b.goto) {\n            if (goto.term == other.term && mapping[goto.target.id] != mapping[other.target.id])\n                return false;\n        }\n    // If there is an action where a conflicting action exists in the\n    // other state, the merge is only allowed when both states have the\n    // exact same set of actions for this term.\n    let byTerm = b.actionsByTerm();\n    for (let action of a.actions) {\n        let setB = byTerm[action.term.id];\n        if (setB && setB.some(other => !other.matches(action, mapping))) {\n            if (setB.length == 1)\n                return false;\n            let setA = a.actionsByTerm()[action.term.id];\n            if (setA.length != setB.length || setA.some(a1 => !setB.some(a2 => a1.matches(a2, mapping))))\n                return false;\n        }\n    }\n    return true;\n}\nfunction mergeStates(states, mapping) {\n    let newStates = [];\n    for (let state of states) {\n        let newID = mapping[state.id];\n        if (!newStates[newID]) {\n            newStates[newID] = new State(newID, state.set, 0, state.skip, state.hash, state.startRule);\n            newStates[newID].tokenGroup = state.tokenGroup;\n            newStates[newID].defaultReduce = state.defaultReduce;\n        }\n    }\n    for (let state of states) {\n        let newID = mapping[state.id], target = newStates[newID];\n        target.flags |= state.flags;\n        for (let i = 0; i < state.actions.length; i++) {\n            let action = state.actions[i].map(mapping, newStates);\n            if (!target.actions.some(a => a.eq(action))) {\n                target.actions.push(action);\n                target.actionPositions.push(state.actionPositions[i]);\n            }\n        }\n        for (let goto of state.goto) {\n            let mapped = goto.map(mapping, newStates);\n            if (!target.goto.some(g => g.eq(mapped)))\n                target.goto.push(mapped);\n        }\n    }\n    return newStates;\n}\nclass Group {\n    constructor(origin, member) {\n        this.origin = origin;\n        this.members = [member];\n    }\n}\nfunction samePosSet(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].eqSimple(b[i]))\n            return false;\n    return true;\n}\n// Collapse an LR(1) automaton to an LALR-like automaton\nfunction collapseAutomaton(states) {\n    let mapping = [], groups = [];\n    assignGroups: for (let i = 0; i < states.length; i++) {\n        let state = states[i];\n        if (!state.startRule)\n            for (let j = 0; j < groups.length; j++) {\n                let group = groups[j], other = states[group.members[0]];\n                if (state.tokenGroup == other.tokenGroup &&\n                    state.skip == other.skip &&\n                    !other.startRule &&\n                    samePosSet(state.set, other.set)) {\n                    group.members.push(i);\n                    mapping.push(j);\n                    continue assignGroups;\n                }\n            }\n        mapping.push(groups.length);\n        groups.push(new Group(groups.length, i));\n    }\n    function spill(groupIndex, index) {\n        let group = groups[groupIndex], state = states[group.members[index]];\n        let pop = group.members.pop();\n        if (index != group.members.length)\n            group.members[index] = pop;\n        for (let i = groupIndex + 1; i < groups.length; i++) {\n            mapping[state.id] = i;\n            if (groups[i].origin == group.origin &&\n                groups[i].members.every(id => canMerge(state, states[id], mapping))) {\n                groups[i].members.push(state.id);\n                return;\n            }\n        }\n        mapping[state.id] = groups.length;\n        groups.push(new Group(group.origin, state.id));\n    }\n    for (let pass = 1;; pass++) {\n        let conflicts = false, t0 = Date.now();\n        for (let g = 0, startLen = groups.length; g < startLen; g++) {\n            let group = groups[g];\n            for (let i = 0; i < group.members.length - 1; i++) {\n                for (let j = i + 1; j < group.members.length; j++) {\n                    let idA = group.members[i], idB = group.members[j];\n                    if (!canMerge(states[idA], states[idB], mapping)) {\n                        conflicts = true;\n                        spill(g, j--);\n                    }\n                }\n            }\n        }\n        if (timing)\n            console.log(`Collapse pass ${pass}${conflicts ? `` : `, done`} (${((Date.now() - t0) / 1000).toFixed(2)}s)`);\n        if (!conflicts)\n            return mergeStates(states, mapping);\n    }\n}\nfunction mergeIdentical(states) {\n    for (let pass = 1;; pass++) {\n        let mapping = [], didMerge = false, t0 = Date.now();\n        let newStates = [];\n        // Find states that either have the same alwaysReduce or the same\n        // actions, and merge them.\n        for (let i = 0; i < states.length; i++) {\n            let state = states[i];\n            let match = newStates.findIndex(s => state.eq(s));\n            if (match < 0) {\n                mapping[i] = newStates.length;\n                newStates.push(state);\n            }\n            else {\n                mapping[i] = match;\n                didMerge = true;\n                let other = newStates[match], add = null;\n                for (let pos of state.set)\n                    if (!other.set.some(p => p.eqSimple(pos)))\n                        (add || (add = [])).push(pos);\n                if (add)\n                    other.set = add.concat(other.set).sort((a, b) => a.cmp(b));\n            }\n        }\n        if (timing)\n            console.log(`Merge identical pass ${pass}${didMerge ? \"\" : \", done\"} (${((Date.now() - t0) / 1000).toFixed(2)}s)`);\n        if (!didMerge)\n            return states;\n        // Make sure actions point at merged state objects\n        for (let state of newStates)\n            if (!state.defaultReduce) {\n                state.actions = state.actions.map(a => a.map(mapping, newStates));\n                state.goto = state.goto.map(a => a.map(mapping, newStates));\n            }\n        // Renumber ids\n        for (let i = 0; i < newStates.length; i++)\n            newStates[i].id = i;\n        states = newStates;\n    }\n}\nconst none$1 = [];\nfunction finishAutomaton(full) {\n    return mergeIdentical(collapseAutomaton(full));\n}\n\n// Encode numbers as groups of printable ascii characters\n//\n// - 0xffff, which is often used as placeholder, is encoded as \"~\"\n//\n// - The characters from \" \" (32) to \"}\" (125), excluding '\"' and\n//   \"\\\\\", indicate values from 0 to 92\n//\n// - The first bit in a 'digit' is used to indicate whether this is\n//   the end of a number.\n//\n// - That leaves 46 other values, which are actually significant.\n//\n// - The digits in a number are ordered from high to low significance.\nfunction digitToChar(digit) {\n    let ch = digit + 32 /* Encode.Start */;\n    if (ch >= 34 /* Encode.Gap1 */)\n        ch++;\n    if (ch >= 92 /* Encode.Gap2 */)\n        ch++;\n    return String.fromCharCode(ch);\n}\nfunction encode(value, max = 0xffff) {\n    if (value > max)\n        throw new Error(\"Trying to encode a number that's too big: \" + value);\n    if (value == 65535 /* Encode.BigVal */)\n        return String.fromCharCode(126 /* Encode.BigValCode */);\n    let result = \"\";\n    for (let first = 46 /* Encode.Base */;; first = 0) {\n        let low = value % 46 /* Encode.Base */, rest = value - low;\n        result = digitToChar(low + first) + result;\n        if (rest == 0)\n            break;\n        value = rest / 46 /* Encode.Base */;\n    }\n    return result;\n}\nfunction encodeArray(values, max = 0xffff) {\n    let result = '\"' + encode(values.length, 0xffffffff);\n    for (let i = 0; i < values.length; i++)\n        result += encode(values[i], max);\n    result += '\"';\n    return result;\n}\n\nconst none = [];\nclass Parts {\n    constructor(terms, conflicts) {\n        this.terms = terms;\n        this.conflicts = conflicts;\n    }\n    concat(other) {\n        if (this == Parts.none)\n            return other;\n        if (other == Parts.none)\n            return this;\n        let conflicts = null;\n        if (this.conflicts || other.conflicts) {\n            conflicts = this.conflicts ? this.conflicts.slice() : this.ensureConflicts();\n            let otherConflicts = other.ensureConflicts();\n            conflicts[conflicts.length - 1] = conflicts[conflicts.length - 1].join(otherConflicts[0]);\n            for (let i = 1; i < otherConflicts.length; i++)\n                conflicts.push(otherConflicts[i]);\n        }\n        return new Parts(this.terms.concat(other.terms), conflicts);\n    }\n    withConflicts(pos, conflicts) {\n        if (conflicts == Conflicts.none)\n            return this;\n        let array = this.conflicts ? this.conflicts.slice() : this.ensureConflicts();\n        array[pos] = array[pos].join(conflicts);\n        return new Parts(this.terms, array);\n    }\n    ensureConflicts() {\n        if (this.conflicts)\n            return this.conflicts;\n        let empty = [];\n        for (let i = 0; i <= this.terms.length; i++)\n            empty.push(Conflicts.none);\n        return empty;\n    }\n}\nParts.none = new Parts(none, null);\nfunction p(...terms) { return new Parts(terms, null); }\nclass BuiltRule {\n    constructor(id, args, term) {\n        this.id = id;\n        this.args = args;\n        this.term = term;\n    }\n    matches(expr) {\n        return this.id == expr.id.name && exprsEq(expr.args, this.args);\n    }\n    matchesRepeat(expr) {\n        return this.id == \"+\" && exprEq(expr.expr, this.args[0]);\n    }\n}\nclass Builder {\n    constructor(text, options) {\n        this.options = options;\n        this.terms = new TermSet;\n        this.specialized = Object.create(null);\n        this.tokenOrigins = Object.create(null);\n        this.rules = [];\n        this.built = [];\n        this.ruleNames = Object.create(null);\n        this.namespaces = Object.create(null);\n        this.namedTerms = Object.create(null);\n        this.termTable = Object.create(null);\n        this.knownProps = Object.create(null);\n        this.dynamicRulePrecedences = [];\n        this.definedGroups = [];\n        this.astRules = [];\n        this.currentSkip = [];\n        time(\"Parse\", () => {\n            this.input = new Input(text, options.fileName);\n            this.ast = this.input.parse();\n        });\n        let NP = NodeProp;\n        for (let prop in NP) {\n            if (NP[prop] instanceof NodeProp && !NP[prop].perNode)\n                this.knownProps[prop] = { prop: NP[prop], source: { name: prop, from: null } };\n        }\n        for (let prop of this.ast.externalProps) {\n            this.knownProps[prop.id.name] = {\n                prop: this.options.externalProp ? this.options.externalProp(prop.id.name) : new NodeProp(),\n                source: { name: prop.externalID.name, from: prop.source }\n            };\n        }\n        this.dialects = this.ast.dialects.map(d => d.name);\n        this.tokens = new MainTokenSet(this, this.ast.tokens);\n        this.localTokens = this.ast.localTokens.map(g => new LocalTokenSet(this, g));\n        this.externalTokens = this.ast.externalTokens.map(ext => new ExternalTokenSet(this, ext));\n        this.externalSpecializers = this.ast.externalSpecializers.map(decl => new ExternalSpecializer(this, decl));\n        time(\"Build rules\", () => {\n            let noSkip = this.newName(\"%noskip\", true);\n            this.defineRule(noSkip, []);\n            let mainSkip = this.ast.mainSkip ? this.newName(\"%mainskip\", true) : noSkip;\n            let scopedSkip = [], topRules = [];\n            for (let rule of this.ast.rules)\n                this.astRules.push({ skip: mainSkip, rule });\n            for (let rule of this.ast.topRules)\n                topRules.push({ skip: mainSkip, rule });\n            for (let scoped of this.ast.scopedSkip) {\n                let skip = noSkip, found = this.ast.scopedSkip.findIndex((sc, i) => i < scopedSkip.length && exprEq(sc.expr, scoped.expr));\n                if (found > -1)\n                    skip = scopedSkip[found];\n                else if (this.ast.mainSkip && exprEq(scoped.expr, this.ast.mainSkip))\n                    skip = mainSkip;\n                else if (!isEmpty(scoped.expr))\n                    skip = this.newName(\"%skip\", true);\n                scopedSkip.push(skip);\n                for (let rule of scoped.rules)\n                    this.astRules.push({ skip, rule });\n                for (let rule of scoped.topRules)\n                    topRules.push({ skip, rule });\n            }\n            for (let { rule } of this.astRules) {\n                this.unique(rule.id);\n            }\n            this.currentSkip.push(noSkip);\n            this.skipRules = mainSkip == noSkip ? [mainSkip] : [noSkip, mainSkip];\n            if (mainSkip != noSkip)\n                this.defineRule(mainSkip, this.normalizeExpr(this.ast.mainSkip));\n            for (let i = 0; i < this.ast.scopedSkip.length; i++) {\n                let skip = scopedSkip[i];\n                if (!this.skipRules.includes(skip)) {\n                    this.skipRules.push(skip);\n                    if (skip != noSkip)\n                        this.defineRule(skip, this.normalizeExpr(this.ast.scopedSkip[i].expr));\n                }\n            }\n            this.currentSkip.pop();\n            for (let { rule, skip } of topRules.sort((a, b) => a.rule.start - b.rule.start)) {\n                this.unique(rule.id);\n                this.used(rule.id.name);\n                this.currentSkip.push(skip);\n                let { name, props } = this.nodeInfo(rule.props, \"a\", rule.id.name, none, none, rule.expr);\n                let term = this.terms.makeTop(name, props);\n                this.namedTerms[name] = term;\n                this.defineRule(term, this.normalizeExpr(rule.expr));\n                this.currentSkip.pop();\n            }\n            for (let ext of this.externalSpecializers)\n                ext.finish();\n            for (let { skip, rule } of this.astRules) {\n                if (this.ruleNames[rule.id.name] && isExported(rule) && !rule.params.length) {\n                    this.buildRule(rule, [], skip, false);\n                    if (rule.expr instanceof SequenceExpression && rule.expr.exprs.length == 0)\n                        this.used(rule.id.name);\n                }\n            }\n        });\n        for (let name in this.ruleNames) {\n            let value = this.ruleNames[name];\n            if (value)\n                this.warn(`Unused rule '${value.name}'`, value.start);\n        }\n        this.tokens.takePrecedences();\n        this.tokens.takeConflicts();\n        for (let lt of this.localTokens)\n            lt.takePrecedences();\n        for (let { name, group, rule } of this.definedGroups)\n            this.defineGroup(name, group, rule);\n        this.checkGroups();\n    }\n    unique(id) {\n        if (id.name in this.ruleNames)\n            this.raise(`Duplicate definition of rule '${id.name}'`, id.start);\n        this.ruleNames[id.name] = id;\n    }\n    used(name) {\n        this.ruleNames[name] = null;\n    }\n    newName(base, nodeName = null, props = {}) {\n        for (let i = nodeName ? 0 : 1;; i++) {\n            let name = i ? `${base}-${i}` : base;\n            if (!this.terms.names[name])\n                return this.terms.makeNonTerminal(name, nodeName === true ? null : nodeName, props);\n        }\n    }\n    prepareParser() {\n        let rules = time(\"Simplify rules\", () => simplifyRules(this.rules, [\n            ...this.skipRules,\n            ...this.terms.tops\n        ]));\n        let { nodeTypes, names: termNames, minRepeatTerm, maxTerm } = this.terms.finish(rules);\n        for (let prop in this.namedTerms)\n            this.termTable[prop] = this.namedTerms[prop].id;\n        if (/\\bgrammar\\b/.test(verbose))\n            console.log(rules.join(\"\\n\"));\n        let startTerms = this.terms.tops.slice();\n        let first = computeFirstSets(this.terms);\n        let skipInfo = this.skipRules.map((name, id) => {\n            let skip = [], startTokens = [], rules = [];\n            for (let rule of name.rules) {\n                if (!rule.parts.length)\n                    continue;\n                let start = rule.parts[0];\n                for (let t of start.terminal ? [start] : first[start.name] || [])\n                    if (!startTokens.includes(t))\n                        startTokens.push(t);\n                if (start.terminal && rule.parts.length == 1 && !rules.some(r => r != rule && r.parts[0] == start))\n                    skip.push(start);\n                else\n                    rules.push(rule);\n            }\n            name.rules = rules;\n            if (rules.length)\n                startTerms.push(name);\n            return { skip, rule: rules.length ? name : null, startTokens, id };\n        });\n        let fullTable = time(\"Build full automaton\", () => buildFullAutomaton(this.terms, startTerms, first));\n        let localTokens = this.localTokens\n            .map((grp, i) => grp.buildLocalGroup(fullTable, skipInfo, i));\n        let { tokenGroups, tokenPrec, tokenData } = time(\"Build token groups\", () => this.tokens.buildTokenGroups(fullTable, skipInfo, localTokens.length));\n        let table = time(\"Finish automaton\", () => finishAutomaton(fullTable));\n        let skipState = findSkipStates(table, this.terms.tops);\n        if (/\\blr\\b/.test(verbose))\n            console.log(table.join(\"\\n\"));\n        let specialized = [];\n        for (let ext of this.externalSpecializers)\n            specialized.push(ext);\n        for (let name in this.specialized)\n            specialized.push({ token: this.terms.names[name], table: buildSpecializeTable(this.specialized[name]) });\n        let tokStart = (tokenizer) => {\n            if (tokenizer instanceof ExternalTokenSet)\n                return tokenizer.ast.start;\n            return this.tokens.ast ? this.tokens.ast.start : -1;\n        };\n        let tokenizers = tokenGroups\n            .concat(this.externalTokens)\n            .sort((a, b) => tokStart(a) - tokStart(b))\n            .concat(localTokens);\n        let data = new DataBuilder;\n        let skipData = skipInfo.map(info => {\n            let actions = [];\n            for (let term of info.skip)\n                actions.push(term.id, 0, 262144 /* Action.StayFlag */ >> 16);\n            if (info.rule) {\n                let state = table.find(s => s.startRule == info.rule);\n                for (let action of state.actions)\n                    actions.push(action.term.id, state.id, 131072 /* Action.GotoFlag */ >> 16);\n            }\n            actions.push(65535 /* Seq.End */, 0 /* Seq.Done */);\n            return data.storeArray(actions);\n        });\n        let states = time(\"Finish states\", () => {\n            let states = new Uint32Array(table.length * 6 /* ParseState.Size */);\n            let forceReductions = this.computeForceReductions(table, skipInfo);\n            let finishCx = new FinishStateContext(tokenizers, data, states, skipData, skipInfo, table, this);\n            for (let s of table)\n                finishCx.finish(s, skipState(s.id), forceReductions[s.id]);\n            return states;\n        });\n        let dialects = Object.create(null);\n        for (let i = 0; i < this.dialects.length; i++)\n            dialects[this.dialects[i]] = data.storeArray((this.tokens.byDialect[i] || none).map(t => t.id).concat(65535 /* Seq.End */));\n        let dynamicPrecedences = null;\n        if (this.dynamicRulePrecedences.length) {\n            dynamicPrecedences = Object.create(null);\n            for (let { rule, prec } of this.dynamicRulePrecedences)\n                dynamicPrecedences[rule.id] = prec;\n        }\n        let topRules = Object.create(null);\n        for (let term of this.terms.tops)\n            topRules[term.nodeName] = [table.find(state => state.startRule == term).id, term.id];\n        let precTable = data.storeArray(tokenPrec.concat(65535 /* Seq.End */));\n        let { nodeProps, skippedTypes } = this.gatherNodeProps(nodeTypes);\n        return {\n            states,\n            stateData: data.finish(),\n            goto: computeGotoTable(table),\n            nodeNames: nodeTypes.filter(t => t.id < minRepeatTerm).map(t => t.nodeName).join(\" \"),\n            nodeProps,\n            skippedTypes,\n            maxTerm,\n            repeatNodeCount: nodeTypes.length - minRepeatTerm,\n            tokenizers,\n            tokenData,\n            topRules,\n            dialects,\n            dynamicPrecedences,\n            specialized,\n            tokenPrec: precTable,\n            termNames\n        };\n    }\n    getParser() {\n        let { states, stateData, goto, nodeNames, nodeProps: rawNodeProps, skippedTypes, maxTerm, repeatNodeCount, tokenizers, tokenData, topRules, dialects, dynamicPrecedences, specialized: rawSpecialized, tokenPrec, termNames } = this.prepareParser();\n        let specialized = rawSpecialized.map(v => {\n            if (v instanceof ExternalSpecializer) {\n                let ext = this.options.externalSpecializer(v.ast.id.name, this.termTable);\n                return {\n                    term: v.term.id,\n                    get: (value, stack) => (ext(value, stack) << 1) |\n                        (v.ast.type == \"extend\" ? 1 /* Specialize.Extend */ : 0 /* Specialize.Specialize */),\n                    external: ext,\n                    extend: v.ast.type == \"extend\"\n                };\n            }\n            else {\n                return { term: v.token.id, get: (value) => v.table[value] || -1 };\n            }\n        });\n        return LRParser.deserialize({\n            version: 14 /* File.Version */,\n            states,\n            stateData,\n            goto,\n            nodeNames,\n            maxTerm,\n            repeatNodeCount,\n            nodeProps: rawNodeProps.map(({ prop, terms }) => [this.knownProps[prop].prop, ...terms]),\n            propSources: !this.options.externalPropSource ? undefined\n                : this.ast.externalPropSources.map(s => this.options.externalPropSource(s.id.name)),\n            skippedNodes: skippedTypes,\n            tokenData,\n            tokenizers: tokenizers.map(tok => tok.create()),\n            context: !this.ast.context ? undefined\n                : typeof this.options.contextTracker == \"function\" ? this.options.contextTracker(this.termTable)\n                    : this.options.contextTracker,\n            topRules,\n            dialects,\n            dynamicPrecedences,\n            specialized,\n            tokenPrec,\n            termNames\n        });\n    }\n    getParserFile() {\n        let { states, stateData, goto, nodeNames, nodeProps: rawNodeProps, skippedTypes, maxTerm, repeatNodeCount, tokenizers: rawTokenizers, tokenData, topRules, dialects: rawDialects, dynamicPrecedences, specialized: rawSpecialized, tokenPrec, termNames } = this.prepareParser();\n        let mod = this.options.moduleStyle || \"es\", ts = this.options.typeScript ? \": any\" : \"\";\n        let gen = \"// This file was generated by lezer-generator. You probably shouldn't edit it.\\n\", head = gen;\n        let imports = {}, imported = Object.create(null);\n        let defined = Object.create(null);\n        for (let word of KEYWORDS)\n            defined[word] = true;\n        let exportName = this.options.exportName || \"parser\";\n        defined[exportName] = true;\n        let getName = (prefix) => {\n            for (let i = 0;; i++) {\n                let id = prefix + (i ? \"_\" + i : \"\");\n                if (!defined[id])\n                    return id;\n            }\n        };\n        let importName = (name, source, prefix = name) => {\n            let spec = name + \" from \" + source;\n            if (imported[spec])\n                return imported[spec];\n            let src = JSON.stringify(source), varName = name;\n            if (name in defined) {\n                varName = getName(prefix);\n                name += `${mod == \"cjs\" ? \":\" : \" as\"} ${varName}`;\n            }\n            defined[varName] = true;\n            (imports[src] || (imports[src] = [])).push(name);\n            return imported[spec] = varName;\n        };\n        let lrParser = importName(\"LRParser\", \"@lezer/lr\");\n        let tokenizers = rawTokenizers.map(tok => tok.createSource(importName));\n        let context = this.ast.context ? importName(this.ast.context.id.name, this.ast.context.source) : null;\n        let nodeProps = rawNodeProps.map(({ prop, terms }) => {\n            let { source } = this.knownProps[prop];\n            let propID = source.from ? importName(source.name, source.from) : JSON.stringify(source.name);\n            return `[${propID}, ${terms.map(serializePropValue).join(\",\")}]`;\n        });\n        function specializationTableString(table) {\n            return \"{__proto__:null,\" + Object.keys(table).map(key => `${/\\W/.test(key) ? JSON.stringify(key) : key}:${table[key]}`)\n                .join(\", \") + \"}\";\n        }\n        let specHead = \"\";\n        let specialized = rawSpecialized.map(v => {\n            if (v instanceof ExternalSpecializer) {\n                let name = importName(v.ast.id.name, v.ast.source);\n                return `{term: ${v.term.id}, get: (value${ts}, stack${ts}) => (${name}(value, stack) << 1)${v.ast.type == \"extend\" ? ` | ${1 /* Specialize.Extend */}` : ''}, external: ${name}${v.ast.type == \"extend\" ? ', extend: true' : ''}}`;\n            }\n            else {\n                let tableName = getName(\"spec_\" + v.token.name.replace(/\\W/g, \"\"));\n                defined[tableName] = true;\n                specHead += `const ${tableName} = ${specializationTableString(v.table)}\\n`;\n                return `{term: ${v.token.id}, get: (value${ts}) => ${tableName}[value] || -1}`;\n            }\n        });\n        let propSources = this.ast.externalPropSources.map(s => importName(s.id.name, s.source));\n        for (let source in imports) {\n            if (mod == \"cjs\")\n                head += `const {${imports[source].join(\", \")}} = require(${source})\\n`;\n            else\n                head += `import {${imports[source].join(\", \")}} from ${source}\\n`;\n        }\n        head += specHead;\n        function serializePropValue(value) {\n            return typeof value != \"string\" || /^(true|false|\\d+(\\.\\d+)?|\\.\\d+)$/.test(value) ? value : JSON.stringify(value);\n        }\n        let dialects = Object.keys(rawDialects).map(d => `${d}: ${rawDialects[d]}`);\n        let parserStr = `${lrParser}.deserialize({\n  version: ${14 /* File.Version */},\n  states: ${encodeArray(states, 0xffffffff)},\n  stateData: ${encodeArray(stateData)},\n  goto: ${encodeArray(goto)},\n  nodeNames: ${JSON.stringify(nodeNames)},\n  maxTerm: ${maxTerm}${context ? `,\n  context: ${context}` : \"\"}${nodeProps.length ? `,\n  nodeProps: [\n    ${nodeProps.join(\",\\n    \")}\n  ]` : \"\"}${propSources.length ? `,\n  propSources: [${propSources.join()}]` : \"\"}${skippedTypes.length ? `,\n  skippedNodes: ${JSON.stringify(skippedTypes)}` : \"\"},\n  repeatNodeCount: ${repeatNodeCount},\n  tokenData: ${encodeArray(tokenData)},\n  tokenizers: [${tokenizers.join(\", \")}],\n  topRules: ${JSON.stringify(topRules)}${dialects.length ? `,\n  dialects: {${dialects.join(\", \")}}` : \"\"}${dynamicPrecedences ? `,\n  dynamicPrecedences: ${JSON.stringify(dynamicPrecedences)}` : \"\"}${specialized.length ? `,\n  specialized: [${specialized.join(\",\")}]` : \"\"},\n  tokenPrec: ${tokenPrec}${this.options.includeNames ? `,\n  termNames: ${JSON.stringify(termNames)}` : ''}\n})`;\n        let terms = [];\n        for (let name in this.termTable) {\n            let id = name;\n            if (KEYWORDS.includes(id))\n                for (let i = 1;; i++) {\n                    id = \"_\".repeat(i) + name;\n                    if (!(id in this.termTable))\n                        break;\n                }\n            terms.push(`${id}${mod == \"cjs\" ? \":\" : \" =\"} ${this.termTable[name]}`);\n        }\n        for (let id = 0; id < this.dialects.length; id++)\n            terms.push(`Dialect_${this.dialects[id]}${mod == \"cjs\" ? \":\" : \" =\"} ${id}`);\n        return {\n            parser: head + (mod == \"cjs\" ? `exports.${exportName} = ${parserStr}\\n` : `export const ${exportName} = ${parserStr}\\n`),\n            terms: mod == \"cjs\" ? `${gen}module.exports = {\\n  ${terms.join(\",\\n  \")}\\n}`\n                : `${gen}export const\\n  ${terms.join(\",\\n  \")}\\n`\n        };\n    }\n    gatherNonSkippedNodes() {\n        let seen = Object.create(null);\n        let work = [];\n        let add = (term) => {\n            if (!seen[term.id]) {\n                seen[term.id] = true;\n                work.push(term);\n            }\n        };\n        this.terms.tops.forEach(add);\n        for (let i = 0; i < work.length; i++) {\n            for (let rule of work[i].rules)\n                for (let part of rule.parts)\n                    add(part);\n        }\n        return seen;\n    }\n    gatherNodeProps(nodeTypes) {\n        let notSkipped = this.gatherNonSkippedNodes(), skippedTypes = [];\n        let nodeProps = [];\n        for (let type of nodeTypes) {\n            if (!notSkipped[type.id] && !type.error)\n                skippedTypes.push(type.id);\n            for (let prop in type.props) {\n                let known = this.knownProps[prop];\n                if (!known)\n                    throw new GenError(\"No known prop type for \" + prop);\n                if (known.source.from == null && (known.source.name == \"repeated\" || known.source.name == \"error\"))\n                    continue;\n                let rec = nodeProps.find(r => r.prop == prop);\n                if (!rec)\n                    nodeProps.push(rec = { prop, values: {} });\n                (rec.values[type.props[prop]] || (rec.values[type.props[prop]] = [])).push(type.id);\n            }\n        }\n        return {\n            nodeProps: nodeProps.map(({ prop, values }) => {\n                let terms = [];\n                for (let val in values) {\n                    let ids = values[val];\n                    if (ids.length == 1) {\n                        terms.push(ids[0], val);\n                    }\n                    else {\n                        terms.push(-ids.length);\n                        for (let id of ids)\n                            terms.push(id);\n                        terms.push(val);\n                    }\n                }\n                return { prop, terms };\n            }),\n            skippedTypes\n        };\n    }\n    makeTerminal(name, tag, props) {\n        return this.terms.makeTerminal(this.terms.uniqueName(name), tag, props);\n    }\n    computeForceReductions(states, skipInfo) {\n        // This finds a forced reduction for every state, trying to guard\n        // against cyclic forced reductions, where a given parse stack can\n        // endlessly continue running forced reductions without making any\n        // progress.\n        //\n        // This occurs with length-1 reductions. We never generate\n        // length-0 reductions, and length-2+ reductions always shrink the\n        // stack, so they are guaranteed to make progress.\n        //\n        // If there are states S1 and S2 whose forced reductions reduce\n        // terms T1 and T2 respectively, both with a length of 1, _and_\n        // there is a state S3, which has goto entries T1 -> S2, T2 -> S1,\n        // you can get cyclic reductions. Of course, the cycle may also\n        // contain more than two steps.\n        let reductions = [];\n        let candidates = [];\n        // A map from terms to states that they are mapped to in goto\n        // entries.\n        let gotoEdges = Object.create(null);\n        for (let state of states) {\n            reductions.push(0);\n            for (let edge of state.goto) {\n                let array = gotoEdges[edge.term.id] || (gotoEdges[edge.term.id] = []);\n                let found = array.find(o => o.target == edge.target.id);\n                if (found)\n                    found.parents.push(state.id);\n                else\n                    array.push({ parents: [state.id], target: edge.target.id });\n            }\n            candidates[state.id] = state.set.filter(pos => pos.pos > 0 && !pos.rule.name.top)\n                .sort((a, b) => b.pos - a.pos || a.rule.parts.length - b.rule.parts.length);\n        }\n        // Mapping from state ids to terms that that state has a length-1\n        // forced reduction for.\n        let length1Reductions = Object.create(null);\n        function createsCycle(term, startState, parents = null) {\n            let edges = gotoEdges[term];\n            if (!edges)\n                return false;\n            return edges.some(val => {\n                let parentIntersection = parents ? parents.filter(id => val.parents.includes(id)) : val.parents;\n                if (parentIntersection.length == 0)\n                    return false;\n                if (val.target == startState)\n                    return true;\n                let found = length1Reductions[val.target];\n                return found != null && createsCycle(found, startState, parentIntersection);\n            });\n        }\n        for (let state of states) {\n            if (state.defaultReduce && state.defaultReduce.parts.length > 0) {\n                reductions[state.id] = reduceAction(state.defaultReduce, skipInfo);\n                if (state.defaultReduce.parts.length == 1)\n                    length1Reductions[state.id] = state.defaultReduce.name.id;\n            }\n        }\n        // To avoid painting states that only have one potential forced\n        // reduction into a corner, reduction assignment is done by\n        // candidate size, starting with the states with fewer candidates.\n        for (let setSize = 1;; setSize++) {\n            let done = true;\n            for (let state of states) {\n                if (state.defaultReduce)\n                    continue;\n                let set = candidates[state.id];\n                if (set.length != setSize) {\n                    if (set.length > setSize)\n                        done = false;\n                    continue;\n                }\n                for (let pos of set) {\n                    if (pos.pos != 1 || !createsCycle(pos.rule.name.id, state.id)) {\n                        reductions[state.id] = reduceAction(pos.rule, skipInfo, pos.pos);\n                        if (pos.pos == 1)\n                            length1Reductions[state.id] = pos.rule.name.id;\n                        break;\n                    }\n                }\n            }\n            if (done)\n                break;\n        }\n        return reductions;\n    }\n    substituteArgs(expr, args, params) {\n        if (args.length == 0)\n            return expr;\n        return expr.walk(expr => {\n            let found;\n            if (expr instanceof NameExpression &&\n                (found = params.findIndex(p => p.name == expr.id.name)) > -1) {\n                let arg = args[found];\n                if (expr.args.length) {\n                    if (arg instanceof NameExpression && !arg.args.length)\n                        return new NameExpression(expr.start, arg.id, expr.args);\n                    this.raise(`Passing arguments to a parameter that already has arguments`, expr.start);\n                }\n                return arg;\n            }\n            else if (expr instanceof InlineRuleExpression) {\n                let r = expr.rule, props = this.substituteArgsInProps(r.props, args, params);\n                return props == r.props ? expr :\n                    new InlineRuleExpression(expr.start, new RuleDeclaration(r.start, r.id, props, r.params, r.expr));\n            }\n            else if (expr instanceof SpecializeExpression) {\n                let props = this.substituteArgsInProps(expr.props, args, params);\n                return props == expr.props ? expr :\n                    new SpecializeExpression(expr.start, expr.type, props, expr.token, expr.content);\n            }\n            return expr;\n        });\n    }\n    substituteArgsInProps(props, args, params) {\n        let substituteInValue = (value) => {\n            let result = value;\n            for (let i = 0; i < value.length; i++) {\n                let part = value[i];\n                if (!part.name)\n                    continue;\n                let found = params.findIndex(p => p.name == part.name);\n                if (found < 0)\n                    continue;\n                if (result == value)\n                    result = value.slice();\n                let expr = args[found];\n                if (expr instanceof NameExpression && !expr.args.length)\n                    result[i] = new PropPart(part.start, expr.id.name, null);\n                else if (expr instanceof LiteralExpression)\n                    result[i] = new PropPart(part.start, expr.value, null);\n                else\n                    this.raise(`Trying to interpolate expression '${expr}' into a prop`, part.start);\n            }\n            return result;\n        };\n        let result = props;\n        for (let i = 0; i < props.length; i++) {\n            let prop = props[i], value = substituteInValue(prop.value);\n            if (value != prop.value) {\n                if (result == props)\n                    result = props.slice();\n                result[i] = new Prop(prop.start, prop.at, prop.name, value);\n            }\n        }\n        return result;\n    }\n    conflictsFor(markers) {\n        let here = Conflicts.none, atEnd = Conflicts.none;\n        for (let marker of markers) {\n            if (marker.type == \"ambig\") {\n                here = here.join(new Conflicts(0, [marker.id.name]));\n            }\n            else {\n                let precs = this.ast.precedences;\n                let index = precs ? precs.items.findIndex(item => item.id.name == marker.id.name) : -1;\n                if (index < 0)\n                    this.raise(`Reference to unknown precedence: '${marker.id.name}'`, marker.id.start);\n                let prec = precs.items[index], value = precs.items.length - index;\n                if (prec.type == \"cut\") {\n                    here = here.join(new Conflicts(0, none, value));\n                }\n                else {\n                    here = here.join(new Conflicts(value << 2));\n                    atEnd = atEnd.join(new Conflicts((value << 2) + (prec.type == \"left\" ? 1 : prec.type == \"right\" ? -1 : 0)));\n                }\n            }\n        }\n        return { here, atEnd };\n    }\n    raise(message, pos = 1) {\n        return this.input.raise(message, pos);\n    }\n    warn(message, pos = -1) {\n        let msg = this.input.message(message, pos);\n        if (this.options.warn)\n            this.options.warn(msg);\n        else\n            console.warn(msg);\n    }\n    defineRule(name, choices) {\n        let skip = this.currentSkip[this.currentSkip.length - 1];\n        for (let choice of choices)\n            this.rules.push(new Rule(name, choice.terms, choice.ensureConflicts(), skip));\n    }\n    resolve(expr) {\n        for (let built of this.built)\n            if (built.matches(expr))\n                return [p(built.term)];\n        let found = this.tokens.getToken(expr);\n        if (found)\n            return [p(found)];\n        for (let grp of this.localTokens) {\n            let found = grp.getToken(expr);\n            if (found)\n                return [p(found)];\n        }\n        for (let ext of this.externalTokens) {\n            let found = ext.getToken(expr);\n            if (found)\n                return [p(found)];\n        }\n        for (let ext of this.externalSpecializers) {\n            let found = ext.getToken(expr);\n            if (found)\n                return [p(found)];\n        }\n        let known = this.astRules.find(r => r.rule.id.name == expr.id.name);\n        if (!known)\n            return this.raise(`Reference to undefined rule '${expr.id.name}'`, expr.start);\n        if (known.rule.params.length != expr.args.length)\n            this.raise(`Wrong number or arguments for '${expr.id.name}'`, expr.start);\n        this.used(known.rule.id.name);\n        return [p(this.buildRule(known.rule, expr.args, known.skip))];\n    }\n    // For tree-balancing reasons, repeat expressions X+ have to be\n    // normalized to something like\n    //\n    //     R -> X | R R\n    //\n    // Returns the `R` term.\n    normalizeRepeat(expr) {\n        let known = this.built.find(b => b.matchesRepeat(expr));\n        if (known)\n            return p(known.term);\n        let name = expr.expr.prec < expr.prec ? `(${expr.expr})+` : `${expr.expr}+`;\n        let term = this.terms.makeRepeat(this.terms.uniqueName(name));\n        this.built.push(new BuiltRule(\"+\", [expr.expr], term));\n        this.defineRule(term, this.normalizeExpr(expr.expr).concat(p(term, term)));\n        return p(term);\n    }\n    normalizeSequence(expr) {\n        let result = expr.exprs.map(e => this.normalizeExpr(e));\n        let builder = this;\n        function complete(start, from, endConflicts) {\n            let { here, atEnd } = builder.conflictsFor(expr.markers[from]);\n            if (from == result.length)\n                return [start.withConflicts(start.terms.length, here.join(endConflicts))];\n            let choices = [];\n            for (let choice of result[from]) {\n                for (let full of complete(start.concat(choice).withConflicts(start.terms.length, here), from + 1, endConflicts.join(atEnd)))\n                    choices.push(full);\n            }\n            return choices;\n        }\n        return complete(Parts.none, 0, Conflicts.none);\n    }\n    normalizeExpr(expr) {\n        if (expr instanceof RepeatExpression && expr.kind == \"?\") {\n            return [Parts.none, ...this.normalizeExpr(expr.expr)];\n        }\n        else if (expr instanceof RepeatExpression) {\n            let repeated = this.normalizeRepeat(expr);\n            return expr.kind == \"+\" ? [repeated] : [Parts.none, repeated];\n        }\n        else if (expr instanceof ChoiceExpression) {\n            return expr.exprs.reduce((o, e) => o.concat(this.normalizeExpr(e)), []);\n        }\n        else if (expr instanceof SequenceExpression) {\n            return this.normalizeSequence(expr);\n        }\n        else if (expr instanceof LiteralExpression) {\n            return [p(this.tokens.getLiteral(expr))];\n        }\n        else if (expr instanceof NameExpression) {\n            return this.resolve(expr);\n        }\n        else if (expr instanceof SpecializeExpression) {\n            return [p(this.resolveSpecialization(expr))];\n        }\n        else if (expr instanceof InlineRuleExpression) {\n            return [p(this.buildRule(expr.rule, none, this.currentSkip[this.currentSkip.length - 1], true))];\n        }\n        else {\n            return this.raise(`This type of expression ('${expr}') may not occur in non-token rules`, expr.start);\n        }\n    }\n    buildRule(rule, args, skip, inline = false) {\n        let expr = this.substituteArgs(rule.expr, args, rule.params);\n        let { name: nodeName, props, dynamicPrec, inline: explicitInline, group, exported } = this.nodeInfo(rule.props || none, inline ? \"pg\" : \"pgi\", rule.id.name, args, rule.params, rule.expr);\n        if (exported && rule.params.length)\n            this.warn(`Can't export parameterized rules`, rule.start);\n        if (exported && inline)\n            this.warn(`Can't export inline rule`, rule.start);\n        let name = this.newName(rule.id.name + (args.length ? \"<\" + args.join(\",\") + \">\" : \"\"), nodeName || true, props);\n        if (explicitInline)\n            name.inline = true;\n        if (dynamicPrec)\n            this.registerDynamicPrec(name, dynamicPrec);\n        if ((name.nodeType || exported) && rule.params.length == 0) {\n            if (!nodeName)\n                name.preserve = true;\n            if (!inline)\n                this.namedTerms[exported || rule.id.name] = name;\n        }\n        if (!inline)\n            this.built.push(new BuiltRule(rule.id.name, args, name));\n        this.currentSkip.push(skip);\n        this.defineRule(name, this.normalizeExpr(expr));\n        this.currentSkip.pop();\n        if (group)\n            this.definedGroups.push({ name, group, rule });\n        return name;\n    }\n    nodeInfo(props, \n    // p for dynamic precedence, d for dialect, i for inline, g for group, a for disabling the ignore test for default name\n    allow, defaultName = null, args = none, params = none, expr, defaultProps) {\n        let result = {};\n        let name = defaultName && (allow.indexOf(\"a\") > -1 || !ignored(defaultName)) && !/ /.test(defaultName) ? defaultName : null;\n        let dialect = null, dynamicPrec = 0, inline = false, group = null, exported = null;\n        for (let prop of props) {\n            if (!prop.at) {\n                if (!this.knownProps[prop.name]) {\n                    let builtin = [\"name\", \"dialect\", \"dynamicPrecedence\", \"export\", \"isGroup\"].includes(prop.name)\n                        ? ` (did you mean '@${prop.name}'?)` : \"\";\n                    this.raise(`Unknown prop name '${prop.name}'${builtin}`, prop.start);\n                }\n                result[prop.name] = this.finishProp(prop, args, params);\n            }\n            else if (prop.name == \"name\") {\n                name = this.finishProp(prop, args, params);\n                if (/ /.test(name))\n                    this.raise(`Node names cannot have spaces ('${name}')`, prop.start);\n            }\n            else if (prop.name == \"dialect\") {\n                if (allow.indexOf(\"d\") < 0)\n                    this.raise(\"Can't specify a dialect on non-token rules\", props[0].start);\n                if (prop.value.length != 1 && !prop.value[0].value)\n                    this.raise(\"The '@dialect' rule prop must hold a plain string value\");\n                let dialectID = this.dialects.indexOf(prop.value[0].value);\n                if (dialectID < 0)\n                    this.raise(`Unknown dialect '${prop.value[0].value}'`, prop.value[0].start);\n                dialect = dialectID;\n            }\n            else if (prop.name == \"dynamicPrecedence\") {\n                if (allow.indexOf(\"p\") < 0)\n                    this.raise(\"Dynamic precedence can only be specified on nonterminals\");\n                if (prop.value.length != 1 || !/^-?(?:10|\\d)$/.test(prop.value[0].value))\n                    this.raise(\"The '@dynamicPrecedence' rule prop must hold an integer between -10 and 10\");\n                dynamicPrec = +prop.value[0].value;\n            }\n            else if (prop.name == \"inline\") {\n                if (prop.value.length)\n                    this.raise(\"'@inline' doesn't take a value\", prop.value[0].start);\n                if (allow.indexOf(\"i\") < 0)\n                    this.raise(\"Inline can only be specified on nonterminals\");\n                inline = true;\n            }\n            else if (prop.name == \"isGroup\") {\n                if (allow.indexOf(\"g\") < 0)\n                    this.raise(\"'@isGroup' can only be specified on nonterminals\");\n                group = prop.value.length ? this.finishProp(prop, args, params) : defaultName;\n            }\n            else if (prop.name == \"export\") {\n                if (prop.value.length)\n                    exported = this.finishProp(prop, args, params);\n                else\n                    exported = defaultName;\n            }\n            else {\n                this.raise(`Unknown built-in prop name '@${prop.name}'`, prop.start);\n            }\n        }\n        if (expr && this.ast.autoDelim && (name || hasProps(result))) {\n            let delim = this.findDelimiters(expr);\n            if (delim) {\n                addToProp(delim[0], \"closedBy\", delim[1].nodeName);\n                addToProp(delim[1], \"openedBy\", delim[0].nodeName);\n            }\n        }\n        if (defaultProps && hasProps(defaultProps)) {\n            for (let prop in defaultProps)\n                if (!(prop in result))\n                    result[prop] = defaultProps[prop];\n        }\n        if (hasProps(result) && !name)\n            this.raise(`Node has properties but no name`, props.length ? props[0].start : expr.start);\n        if (inline && (hasProps(result) || dialect || dynamicPrec))\n            this.raise(`Inline nodes can't have props, dynamic precedence, or a dialect`, props[0].start);\n        if (inline && name)\n            name = null;\n        return { name, props: result, dialect, dynamicPrec, inline, group, exported };\n    }\n    finishProp(prop, args, params) {\n        return prop.value.map(part => {\n            if (part.value)\n                return part.value;\n            let pos = params.findIndex(param => param.name == part.name);\n            if (pos < 0)\n                this.raise(`Property refers to '${part.name}', but no parameter by that name is in scope`, part.start);\n            let expr = args[pos];\n            if (expr instanceof NameExpression && !expr.args.length)\n                return expr.id.name;\n            if (expr instanceof LiteralExpression)\n                return expr.value;\n            return this.raise(`Expression '${expr}' can not be used as part of a property value`, part.start);\n        }).join(\"\");\n    }\n    resolveSpecialization(expr) {\n        let type = expr.type;\n        let { name, props, dialect } = this.nodeInfo(expr.props, \"d\");\n        let terminal = this.normalizeExpr(expr.token);\n        if (terminal.length != 1 || terminal[0].terms.length != 1 || !terminal[0].terms[0].terminal)\n            this.raise(`The first argument to '${type}' must resolve to a token`, expr.token.start);\n        let values;\n        if (expr.content instanceof LiteralExpression)\n            values = [expr.content.value];\n        else if ((expr.content instanceof ChoiceExpression) && expr.content.exprs.every(e => e instanceof LiteralExpression))\n            values = expr.content.exprs.map(expr => expr.value);\n        else\n            return this.raise(`The second argument to '${expr.type}' must be a literal or choice of literals`, expr.content.start);\n        let term = terminal[0].terms[0], token = null;\n        let table = this.specialized[term.name] || (this.specialized[term.name] = []);\n        for (let value of values) {\n            let known = table.find(sp => sp.value == value);\n            if (known == null) {\n                if (!token) {\n                    token = this.makeTerminal(term.name + \"/\" + JSON.stringify(value), name, props);\n                    if (dialect != null)\n                        (this.tokens.byDialect[dialect] || (this.tokens.byDialect[dialect] = [])).push(token);\n                }\n                table.push({ value, term: token, type, dialect, name });\n                this.tokenOrigins[token.name] = { spec: term };\n            }\n            else {\n                if (known.type != type)\n                    this.raise(`Conflicting specialization types for ${JSON.stringify(value)} of ${term.name} (${type} vs ${known.type})`, expr.start);\n                if (known.dialect != dialect)\n                    this.raise(`Conflicting dialects for specialization ${JSON.stringify(value)} of ${term.name}`, expr.start);\n                if (known.name != name)\n                    this.raise(`Conflicting names for specialization ${JSON.stringify(value)} of ${term.name}`, expr.start);\n                if (token && known.term != token)\n                    this.raise(`Conflicting specialization tokens for ${JSON.stringify(value)} of ${term.name}`, expr.start);\n                token = known.term;\n            }\n        }\n        return token;\n    }\n    findDelimiters(expr) {\n        if (!(expr instanceof SequenceExpression) || expr.exprs.length < 2)\n            return null;\n        let findToken = (expr) => {\n            if (expr instanceof LiteralExpression)\n                return { term: this.tokens.getLiteral(expr), str: expr.value };\n            if (expr instanceof NameExpression && expr.args.length == 0) {\n                let rule = this.ast.rules.find(r => r.id.name == expr.id.name);\n                if (rule)\n                    return findToken(rule.expr);\n                let token = this.tokens.rules.find(r => r.id.name == expr.id.name);\n                if (token && token.expr instanceof LiteralExpression)\n                    return { term: this.tokens.getToken(expr), str: token.expr.value };\n            }\n            return null;\n        };\n        let lastToken = findToken(expr.exprs[expr.exprs.length - 1]);\n        if (!lastToken || !lastToken.term.nodeName)\n            return null;\n        const brackets = [\"()\", \"[]\", \"{}\", \"<>\"];\n        let bracket = brackets.find(b => lastToken.str.indexOf(b[1]) > -1 && lastToken.str.indexOf(b[0]) < 0);\n        if (!bracket)\n            return null;\n        let firstToken = findToken(expr.exprs[0]);\n        if (!firstToken || !firstToken.term.nodeName ||\n            firstToken.str.indexOf(bracket[0]) < 0 || firstToken.str.indexOf(bracket[1]) > -1)\n            return null;\n        return [firstToken.term, lastToken.term];\n    }\n    registerDynamicPrec(term, prec) {\n        this.dynamicRulePrecedences.push({ rule: term, prec });\n        term.preserve = true;\n    }\n    defineGroup(rule, group, ast) {\n        var _a;\n        let recur = [];\n        let getNamed = (rule) => {\n            if (rule.nodeName)\n                return [rule];\n            if (recur.includes(rule))\n                this.raise(`Rule '${ast.id.name}' cannot define a group because it contains a non-named recursive rule ('${rule.name}')`, ast.start);\n            let result = [];\n            recur.push(rule);\n            for (let r of this.rules)\n                if (r.name == rule) {\n                    let names = r.parts.map(getNamed).filter(x => x.length);\n                    if (names.length > 1)\n                        this.raise(`Rule '${ast.id.name}' cannot define a group because some choices produce multiple named nodes`, ast.start);\n                    if (names.length == 1)\n                        for (let n of names[0])\n                            result.push(n);\n                }\n            recur.pop();\n            return result;\n        };\n        for (let name of getNamed(rule))\n            name.props[\"group\"] = (((_a = name.props[\"group\"]) === null || _a === void 0 ? void 0 : _a.split(\" \")) || []).concat(group).sort().join(\" \");\n    }\n    checkGroups() {\n        let groups = Object.create(null), nodeNames = Object.create(null);\n        for (let term of this.terms.terms)\n            if (term.nodeName) {\n                nodeNames[term.nodeName] = true;\n                if (term.props[\"group\"])\n                    for (let group of term.props[\"group\"].split(\" \")) {\n                        (groups[group] || (groups[group] = [])).push(term);\n                    }\n            }\n        let names = Object.keys(groups);\n        for (let i = 0; i < names.length; i++) {\n            let name = names[i], terms = groups[name];\n            if (nodeNames[name])\n                this.warn(`Group name '${name}' conflicts with a node of the same name`);\n            for (let j = i + 1; j < names.length; j++) {\n                let other = groups[names[j]];\n                if (terms.some(t => other.includes(t)) &&\n                    (terms.length > other.length ? other.some(t => !terms.includes(t)) : terms.some(t => !other.includes(t))))\n                    this.warn(`Groups '${name}' and '${names[j]}' overlap without one being a superset of the other`);\n            }\n        }\n    }\n}\nconst MinSharedActions = 5;\nclass FinishStateContext {\n    constructor(tokenizers, data, stateArray, skipData, skipInfo, states, builder) {\n        this.tokenizers = tokenizers;\n        this.data = data;\n        this.stateArray = stateArray;\n        this.skipData = skipData;\n        this.skipInfo = skipInfo;\n        this.states = states;\n        this.builder = builder;\n        this.sharedActions = [];\n    }\n    findSharedActions(state) {\n        if (state.actions.length < MinSharedActions)\n            return null;\n        let found = null;\n        for (let shared of this.sharedActions) {\n            if ((!found || shared.actions.length > found.actions.length) &&\n                shared.actions.every(a => state.actions.some(b => b.eq(a))))\n                found = shared;\n        }\n        if (found)\n            return found;\n        let max = null, scratch = [];\n        for (let i = state.id + 1; i < this.states.length; i++) {\n            let other = this.states[i], fill = 0;\n            if (other.defaultReduce || other.actions.length < MinSharedActions)\n                continue;\n            for (let a of state.actions)\n                for (let b of other.actions)\n                    if (a.eq(b))\n                        scratch[fill++] = a;\n            if (fill >= MinSharedActions && (!max || max.length < fill)) {\n                max = scratch;\n                scratch = [];\n            }\n        }\n        if (!max)\n            return null;\n        let result = { actions: max, addr: this.storeActions(max, -1, null) };\n        this.sharedActions.push(result);\n        return result;\n    }\n    storeActions(actions, skipReduce, shared) {\n        if (skipReduce < 0 && shared && shared.actions.length == actions.length)\n            return shared.addr;\n        let data = [];\n        for (let action of actions) {\n            if (shared && shared.actions.some(a => a.eq(action)))\n                continue;\n            if (action instanceof Shift) {\n                data.push(action.term.id, action.target.id, 0);\n            }\n            else {\n                let code = reduceAction(action.rule, this.skipInfo);\n                if (code != skipReduce)\n                    data.push(action.term.id, code & 65535 /* Action.ValueMask */, code >> 16);\n            }\n        }\n        data.push(65535 /* Seq.End */);\n        if (skipReduce > -1)\n            data.push(2 /* Seq.Other */, skipReduce & 65535 /* Action.ValueMask */, skipReduce >> 16);\n        else if (shared)\n            data.push(1 /* Seq.Next */, shared.addr & 0xffff, shared.addr >> 16);\n        else\n            data.push(0 /* Seq.Done */);\n        return this.data.storeArray(data);\n    }\n    finish(state, isSkip, forcedReduce) {\n        let b = this.builder;\n        let skipID = b.skipRules.indexOf(state.skip);\n        let skipTable = this.skipData[skipID], skipTerms = this.skipInfo[skipID].startTokens;\n        let defaultReduce = state.defaultReduce ? reduceAction(state.defaultReduce, this.skipInfo) : 0;\n        let flags = isSkip ? 1 /* StateFlag.Skipped */ : 0;\n        let skipReduce = -1, shared = null;\n        if (defaultReduce == 0) {\n            if (isSkip)\n                for (const action of state.actions)\n                    if (action instanceof Reduce && action.term.eof)\n                        skipReduce = reduceAction(action.rule, this.skipInfo);\n            if (skipReduce < 0)\n                shared = this.findSharedActions(state);\n        }\n        if (state.set.some(p => p.rule.name.top && p.pos == p.rule.parts.length))\n            flags |= 2 /* StateFlag.Accepting */;\n        let external = [];\n        for (let i = 0; i < state.actions.length + skipTerms.length; i++) {\n            let term = i < state.actions.length ? state.actions[i].term : skipTerms[i - state.actions.length];\n            for (;;) {\n                let orig = b.tokenOrigins[term.name];\n                if (orig && orig.spec) {\n                    term = orig.spec;\n                    continue;\n                }\n                if (orig && (orig.external instanceof ExternalTokenSet))\n                    addToSet(external, orig.external);\n                break;\n            }\n        }\n        let tokenizerMask = 0;\n        for (let i = 0; i < this.tokenizers.length; i++) {\n            let tok = this.tokenizers[i];\n            if (external.includes(tok) || tok.groupID == state.tokenGroup)\n                tokenizerMask |= (1 << i);\n        }\n        let base = state.id * 6 /* ParseState.Size */;\n        this.stateArray[base + 0 /* ParseState.Flags */] = flags;\n        this.stateArray[base + 1 /* ParseState.Actions */] = this.storeActions(defaultReduce ? none : state.actions, skipReduce, shared);\n        this.stateArray[base + 2 /* ParseState.Skip */] = skipTable;\n        this.stateArray[base + 3 /* ParseState.TokenizerMask */] = tokenizerMask;\n        this.stateArray[base + 4 /* ParseState.DefaultReduce */] = defaultReduce;\n        this.stateArray[base + 5 /* ParseState.ForcedReduce */] = forcedReduce;\n    }\n}\nfunction addToProp(term, prop, value) {\n    let cur = term.props[prop];\n    if (!cur || cur.split(\" \").indexOf(value) < 0)\n        term.props[prop] = cur ? cur + \" \" + value : value;\n}\nfunction buildSpecializeTable(spec) {\n    let table = Object.create(null);\n    for (let { value, term, type } of spec) {\n        let code = type == \"specialize\" ? 0 /* Specialize.Specialize */ : 1 /* Specialize.Extend */;\n        table[value] = (term.id << 1) | code;\n    }\n    return table;\n}\nfunction reduceAction(rule, skipInfo, depth = rule.parts.length) {\n    return rule.name.id | 65536 /* Action.ReduceFlag */ |\n        (rule.isRepeatWrap && depth == rule.parts.length ? 131072 /* Action.RepeatFlag */ : 0) |\n        (skipInfo.some(i => i.rule == rule.name) ? 262144 /* Action.StayFlag */ : 0) |\n        (depth << 19 /* Action.ReduceDepthShift */);\n}\nfunction findArray(data, value) {\n    search: for (let i = 0;;) {\n        let next = data.indexOf(value[0], i);\n        if (next == -1 || next + value.length > data.length)\n            break;\n        for (let j = 1; j < value.length; j++) {\n            if (value[j] != data[next + j]) {\n                i = next + 1;\n                continue search;\n            }\n        }\n        return next;\n    }\n    return -1;\n}\nfunction findSkipStates(table, startRules) {\n    let nonSkip = Object.create(null);\n    let work = [];\n    let add = (state) => {\n        if (!nonSkip[state.id]) {\n            nonSkip[state.id] = true;\n            work.push(state);\n        }\n    };\n    for (let state of table)\n        if (state.startRule && startRules.includes(state.startRule))\n            add(state);\n    for (let i = 0; i < work.length; i++) {\n        for (let a of work[i].actions)\n            if (a instanceof Shift)\n                add(a.target);\n        for (let a of work[i].goto)\n            add(a.target);\n    }\n    return (id) => !nonSkip[id];\n}\nclass DataBuilder {\n    constructor() {\n        this.data = [];\n    }\n    storeArray(data) {\n        let found = findArray(this.data, data);\n        if (found > -1)\n            return found;\n        let pos = this.data.length;\n        for (let num of data)\n            this.data.push(num);\n        return pos;\n    }\n    finish() {\n        return Uint16Array.from(this.data);\n    }\n}\n// The goto table maps a start state + a term to a new state, and is\n// used to determine the new state when reducing. Because this allows\n// more more efficient representation and access, unlike the action\n// tables, the goto table is organized by term, with groups of start\n// states that map to a given end state enumerated for each term.\n// Since many terms only have a single valid goto target, this makes\n// it cheaper to look those up.\n//\n// (Unfortunately, though the standard LR parsing mechanism never\n// looks up invalid goto states, the incremental parsing mechanism\n// needs accurate goto information for a state/term pair, so we do\n// need to store state ids even for terms that have only one target.)\n//\n// - First comes the amount of terms in the table\n//\n// - Then, for each term, the offset of the term's data\n//\n// - At these offsets, there's a record for each target state\n//\n//   - Such a record starts with the amount of start states that go to\n//     this target state, shifted one to the left, with the first bit\n//     only set if this is the last record for this term.\n//\n//   - Then follows the target state id\n//\n//   - And then the start state ids\nfunction computeGotoTable(states) {\n    let goto = {};\n    let maxTerm = 0;\n    for (let state of states) {\n        for (let entry of state.goto) {\n            maxTerm = Math.max(entry.term.id, maxTerm);\n            let set = goto[entry.term.id] || (goto[entry.term.id] = {});\n            (set[entry.target.id] || (set[entry.target.id] = [])).push(state.id);\n        }\n    }\n    let data = new DataBuilder;\n    let index = [];\n    let offset = maxTerm + 2; // Offset of the data, taking index size into account\n    for (let term = 0; term <= maxTerm; term++) {\n        let entries = goto[term];\n        if (!entries) {\n            index.push(1);\n            continue;\n        }\n        let termTable = [];\n        let keys = Object.keys(entries);\n        for (let target of keys) {\n            let list = entries[target];\n            termTable.push((target == keys[keys.length - 1] ? 1 : 0) + (list.length << 1));\n            termTable.push(+target);\n            for (let source of list)\n                termTable.push(source);\n        }\n        index.push(data.storeArray(termTable) + offset);\n    }\n    if (index.some(n => n > 0xffff))\n        throw new GenError(\"Goto table too large\");\n    return Uint16Array.from([maxTerm + 1, ...index, ...data.data]);\n}\nclass TokenGroup {\n    constructor(tokens, groupID) {\n        this.tokens = tokens;\n        this.groupID = groupID;\n    }\n    create() { return this.groupID; }\n    createSource() { return String(this.groupID); }\n}\nfunction addToSet(set, value) {\n    if (!set.includes(value))\n        set.push(value);\n}\nfunction buildTokenMasks(groups) {\n    let masks = Object.create(null);\n    for (let group of groups) {\n        let groupMask = 1 << group.groupID;\n        for (let term of group.tokens) {\n            masks[term.id] = (masks[term.id] || 0) | groupMask;\n        }\n    }\n    return masks;\n}\nclass TokenArg {\n    constructor(name, expr, scope) {\n        this.name = name;\n        this.expr = expr;\n        this.scope = scope;\n    }\n}\nclass BuildingRule {\n    constructor(name, start, to, args) {\n        this.name = name;\n        this.start = start;\n        this.to = to;\n        this.args = args;\n    }\n}\nclass TokenSet {\n    constructor(b, ast) {\n        this.b = b;\n        this.ast = ast;\n        this.startState = new State$1;\n        this.built = [];\n        this.building = []; // Used for recursion check\n        this.byDialect = Object.create(null);\n        this.precedenceRelations = [];\n        this.rules = ast ? ast.rules : none;\n        for (let rule of this.rules)\n            b.unique(rule.id);\n    }\n    getToken(expr) {\n        for (let built of this.built)\n            if (built.matches(expr))\n                return built.term;\n        let name = expr.id.name;\n        let rule = this.rules.find(r => r.id.name == name);\n        if (!rule)\n            return null;\n        let { name: nodeName, props, dialect, exported } = this.b.nodeInfo(rule.props, \"d\", name, expr.args, rule.params.length != expr.args.length ? none : rule.params);\n        let term = this.b.makeTerminal(expr.toString(), nodeName, props);\n        if (dialect != null)\n            (this.byDialect[dialect] || (this.byDialect[dialect] = [])).push(term);\n        if ((term.nodeType || exported) && rule.params.length == 0) {\n            if (!term.nodeType)\n                term.preserve = true;\n            this.b.namedTerms[exported || name] = term;\n        }\n        this.buildRule(rule, expr, this.startState, new State$1([term]));\n        this.built.push(new BuiltRule(name, expr.args, term));\n        return term;\n    }\n    buildRule(rule, expr, from, to, args = none) {\n        let name = expr.id.name;\n        if (rule.params.length != expr.args.length)\n            this.b.raise(`Incorrect number of arguments for token '${name}'`, expr.start);\n        let building = this.building.find(b => b.name == name && exprsEq(expr.args, b.args));\n        if (building) {\n            if (building.to == to) {\n                from.nullEdge(building.start);\n                return;\n            }\n            let lastIndex = this.building.length - 1;\n            while (this.building[lastIndex].name != name)\n                lastIndex--;\n            this.b.raise(`Invalid (non-tail) recursion in token rules: ${this.building.slice(lastIndex).map(b => b.name).join(\" -> \")}`, expr.start);\n        }\n        this.b.used(rule.id.name);\n        let start = new State$1;\n        from.nullEdge(start);\n        this.building.push(new BuildingRule(name, start, to, expr.args));\n        this.build(this.b.substituteArgs(rule.expr, expr.args, rule.params), start, to, expr.args.map((e, i) => new TokenArg(rule.params[i].name, e, args)));\n        this.building.pop();\n    }\n    build(expr, from, to, args) {\n        if (expr instanceof NameExpression) {\n            let name = expr.id.name, arg = args.find(a => a.name == name);\n            if (arg)\n                return this.build(arg.expr, from, to, arg.scope);\n            let rule;\n            for (let i = 0, lt = this.b.localTokens; i <= lt.length; i++) {\n                let set = i == lt.length ? this.b.tokens : lt[i];\n                rule = set.rules.find(r => r.id.name == name);\n            }\n            if (!rule)\n                return this.b.raise(`Reference to token rule '${expr.id.name}', which isn't found`, expr.start);\n            this.buildRule(rule, expr, from, to, args);\n        }\n        else if (expr instanceof CharClass) {\n            for (let [a, b] of CharClasses[expr.type])\n                from.edge(a, b, to);\n        }\n        else if (expr instanceof ChoiceExpression) {\n            for (let choice of expr.exprs)\n                this.build(choice, from, to, args);\n        }\n        else if (isEmpty(expr)) {\n            from.nullEdge(to);\n        }\n        else if (expr instanceof SequenceExpression) {\n            let conflict = expr.markers.find(c => c.length > 0);\n            if (conflict)\n                this.b.raise(\"Conflict marker in token expression\", conflict[0].start);\n            for (let i = 0; i < expr.exprs.length; i++) {\n                let next = i == expr.exprs.length - 1 ? to : new State$1;\n                this.build(expr.exprs[i], from, next, args);\n                from = next;\n            }\n        }\n        else if (expr instanceof RepeatExpression) {\n            if (expr.kind == \"*\") {\n                let loop = new State$1;\n                from.nullEdge(loop);\n                this.build(expr.expr, loop, loop, args);\n                loop.nullEdge(to);\n            }\n            else if (expr.kind == \"+\") {\n                let loop = new State$1;\n                this.build(expr.expr, from, loop, args);\n                this.build(expr.expr, loop, loop, args);\n                loop.nullEdge(to);\n            }\n            else { // expr.kind == \"?\"\n                from.nullEdge(to);\n                this.build(expr.expr, from, to, args);\n            }\n        }\n        else if (expr instanceof SetExpression) {\n            for (let [a, b] of expr.inverted ? invertRanges(expr.ranges) : expr.ranges)\n                rangeEdges(from, to, a, b);\n        }\n        else if (expr instanceof LiteralExpression) {\n            for (let i = 0; i < expr.value.length; i++) {\n                let ch = expr.value.charCodeAt(i);\n                let next = i == expr.value.length - 1 ? to : new State$1;\n                from.edge(ch, ch + 1, next);\n                from = next;\n            }\n        }\n        else if (expr instanceof AnyExpression) {\n            let mid = new State$1;\n            from.edge(0, 0xDC00, to);\n            from.edge(0xDC00, MAX_CHAR + 1, to);\n            from.edge(0xD800, 0xDC00, mid);\n            mid.edge(0xDC00, 0xE000, to);\n        }\n        else {\n            return this.b.raise(`Unrecognized expression type in token`, expr.start);\n        }\n    }\n    takePrecedences() {\n        let rel = this.precedenceRelations = [];\n        if (this.ast)\n            for (let group of this.ast.precedences) {\n                let prev = [];\n                for (let item of group.items) {\n                    let level = [];\n                    if (item instanceof NameExpression) {\n                        for (let built of this.built)\n                            if (item.args.length ? built.matches(item) : built.id == item.id.name)\n                                level.push(built.term);\n                    }\n                    else {\n                        let id = JSON.stringify(item.value), found = this.built.find(b => b.id == id);\n                        if (found)\n                            level.push(found.term);\n                    }\n                    if (!level.length)\n                        this.b.warn(`Precedence specified for unknown token ${item}`, item.start);\n                    for (let term of level)\n                        addRel(rel, term, prev);\n                    prev = prev.concat(level);\n                }\n            }\n    }\n    precededBy(a, b) {\n        let found = this.precedenceRelations.find(r => r.term == a);\n        return found && found.after.includes(b);\n    }\n    buildPrecTable(softConflicts) {\n        let precTable = [], rel = this.precedenceRelations.slice();\n        // Add entries for soft-conflicting tokens that are in the\n        // precedence table, to make sure they'll appear in the right\n        // order and don't mess up the longer-wins default rule.\n        for (let { a, b, soft } of softConflicts)\n            if (soft) {\n                if (!rel.some(r => r.term == a) || !rel.some(r => r.term == b))\n                    continue;\n                if (soft < 0)\n                    [a, b] = [b, a]; // Now a is longer than b (and should thus take precedence)\n                addRel(rel, b, [a]);\n                addRel(rel, a, []);\n            }\n        add: while (rel.length) {\n            for (let i = 0; i < rel.length; i++) {\n                let record = rel[i];\n                if (record.after.every(t => precTable.includes(t.id))) {\n                    precTable.push(record.term.id);\n                    if (rel.length == 1)\n                        break add;\n                    rel[i] = rel.pop();\n                    continue add;\n                }\n            }\n            this.b.raise(`Cyclic token precedence relation between ${rel.map(r => r.term).join(\", \")}`);\n        }\n        return precTable;\n    }\n}\nclass MainTokenSet extends TokenSet {\n    constructor() {\n        super(...arguments);\n        this.explicitConflicts = [];\n    }\n    getLiteral(expr) {\n        let id = JSON.stringify(expr.value);\n        for (let built of this.built)\n            if (built.id == id)\n                return built.term;\n        let name = null, props = {}, dialect = null, exported = null;\n        let decl = this.ast ? this.ast.literals.find(l => l.literal == expr.value) : null;\n        if (decl)\n            ({ name, props, dialect, exported } = this.b.nodeInfo(decl.props, \"da\", expr.value));\n        let term = this.b.makeTerminal(id, name, props);\n        if (dialect != null)\n            (this.byDialect[dialect] || (this.byDialect[dialect] = [])).push(term);\n        if (exported)\n            this.b.namedTerms[exported] = term;\n        this.build(expr, this.startState, new State$1([term]), none);\n        this.built.push(new BuiltRule(id, none, term));\n        return term;\n    }\n    takeConflicts() {\n        var _a;\n        let resolve = (expr) => {\n            if (expr instanceof NameExpression) {\n                for (let built of this.built)\n                    if (built.matches(expr))\n                        return built.term;\n            }\n            else {\n                let id = JSON.stringify(expr.value), found = this.built.find(b => b.id == id);\n                if (found)\n                    return found.term;\n            }\n            this.b.warn(`Precedence specified for unknown token ${expr}`, expr.start);\n            return null;\n        };\n        for (let c of ((_a = this.ast) === null || _a === void 0 ? void 0 : _a.conflicts) || []) {\n            let a = resolve(c.a), b = resolve(c.b);\n            if (a && b) {\n                if (a.id < b.id)\n                    [a, b] = [b, a];\n                this.explicitConflicts.push({ a, b });\n            }\n        }\n    }\n    // Token groups are a mechanism for allowing conflicting (matching\n    // overlapping input, without an explicit precedence being given)\n    // tokens to exist in a grammar _if_ they don't occur in the same\n    // place (aren't used in the same states).\n    //\n    // States that use tokens that conflict will raise an error when any\n    // of the conflicting pairs of tokens both occur in that state.\n    // Otherwise, they are assigned a token group, which includes all\n    // the potentially-conflicting tokens they use. If there's already a\n    // group that doesn't have any conflicts with those tokens, that is\n    // reused, otherwise a new group is created.\n    //\n    // So each state has zero or one token groups, and each conflicting\n    // token may belong to one or more groups. Tokens get assigned a\n    // 16-bit bitmask with the groups they belong to set to 1 (all-1s\n    // for non-conflicting tokens). When tokenizing, that mask is\n    // compared to the current state's group (again using all-1s for\n    // group-less states) to determine whether a token is applicable for\n    // this state.\n    //\n    // Extended/specialized tokens are treated as their parent token for\n    // this purpose.\n    buildTokenGroups(states, skipInfo, startID) {\n        let tokens = this.startState.compile();\n        if (tokens.accepting.length)\n            this.b.raise(`Grammar contains zero-length tokens (in '${tokens.accepting[0].name}')`, this.rules.find(r => r.id.name == tokens.accepting[0].name).start);\n        if (/\\btokens\\b/.test(verbose))\n            console.log(tokens.toString());\n        // If there is a precedence specified for the pair, the conflict is resolved\n        let allConflicts = tokens.findConflicts(checkTogether(states, this.b, skipInfo))\n            .filter(({ a, b }) => !this.precededBy(a, b) && !this.precededBy(b, a));\n        for (let { a, b } of this.explicitConflicts) {\n            if (!allConflicts.some(c => c.a == a && c.b == b))\n                allConflicts.push(new Conflict$1(a, b, 0, \"\", \"\"));\n        }\n        let softConflicts = allConflicts.filter(c => c.soft), conflicts = allConflicts.filter(c => !c.soft);\n        let errors = [];\n        let groups = [];\n        for (let state of states) {\n            if (state.defaultReduce || state.tokenGroup > -1)\n                continue;\n            // Find potentially-conflicting terms (in terms) and the things\n            // they conflict with (in conflicts), and raise an error if\n            // there's a token conflict directly in this state.\n            let terms = [], incompatible = [];\n            let skip = skipInfo[this.b.skipRules.indexOf(state.skip)].startTokens;\n            for (let term of skip)\n                if (state.actions.some(a => a.term == term))\n                    this.b.raise(`Use of token ${term.name} conflicts with skip rule`);\n            let stateTerms = [];\n            for (let i = 0; i < state.actions.length + (skip ? skip.length : 0); i++) {\n                let term = i < state.actions.length ? state.actions[i].term : skip[i - state.actions.length];\n                let orig = this.b.tokenOrigins[term.name];\n                if (orig && orig.spec)\n                    term = orig.spec;\n                else if (orig && orig.external)\n                    continue;\n                addToSet(stateTerms, term);\n            }\n            if (stateTerms.length == 0)\n                continue;\n            for (let term of stateTerms) {\n                for (let conflict of conflicts) {\n                    let conflicting = conflict.a == term ? conflict.b : conflict.b == term ? conflict.a : null;\n                    if (!conflicting)\n                        continue;\n                    if (stateTerms.includes(conflicting) && !errors.some(e => e.conflict == conflict)) {\n                        let example = conflict.exampleA ? ` (example: ${JSON.stringify(conflict.exampleA)}${conflict.exampleB ? ` vs ${JSON.stringify(conflict.exampleB)}` : \"\"})` : \"\";\n                        errors.push({\n                            error: `Overlapping tokens ${term.name} and ${conflicting.name} used in same context${example}\\n` +\n                                `After: ${state.set[0].trail()}`,\n                            conflict\n                        });\n                    }\n                    addToSet(terms, term);\n                    addToSet(incompatible, conflicting);\n                }\n            }\n            let tokenGroup = null;\n            for (let group of groups) {\n                if (incompatible.some(term => group.tokens.includes(term)))\n                    continue;\n                for (let term of terms)\n                    addToSet(group.tokens, term);\n                tokenGroup = group;\n                break;\n            }\n            if (!tokenGroup) {\n                tokenGroup = new TokenGroup(terms, groups.length + startID);\n                groups.push(tokenGroup);\n            }\n            state.tokenGroup = tokenGroup.groupID;\n        }\n        if (errors.length)\n            this.b.raise(errors.map(e => e.error).join(\"\\n\\n\"));\n        if (groups.length + startID > 16)\n            this.b.raise(`Too many different token groups (${groups.length}) to represent them as a 16-bit bitfield`);\n        let precTable = this.buildPrecTable(softConflicts);\n        return {\n            tokenGroups: groups,\n            tokenPrec: precTable,\n            tokenData: tokens.toArray(buildTokenMasks(groups), precTable)\n        };\n    }\n}\nclass LocalTokenSet extends TokenSet {\n    constructor(b, ast) {\n        super(b, ast);\n        this.fallback = null;\n        if (ast.fallback)\n            b.unique(ast.fallback.id);\n    }\n    getToken(expr) {\n        let term = null;\n        if (this.ast.fallback && this.ast.fallback.id.name == expr.id.name) {\n            if (expr.args.length)\n                this.b.raise(`Incorrect number of arguments for ${expr.id.name}`, expr.start);\n            if (!this.fallback) {\n                let { name: nodeName, props, exported } = this.b.nodeInfo(this.ast.fallback.props, \"\", expr.id.name, none, none);\n                let term = this.fallback = this.b.makeTerminal(expr.id.name, nodeName, props);\n                if (term.nodeType || exported) {\n                    if (!term.nodeType)\n                        term.preserve = true;\n                    this.b.namedTerms[exported || expr.id.name] = term;\n                }\n                this.b.used(expr.id.name);\n            }\n            term = this.fallback;\n        }\n        else {\n            term = super.getToken(expr);\n        }\n        if (term && !this.b.tokenOrigins[term.name])\n            this.b.tokenOrigins[term.name] = { group: this };\n        return term;\n    }\n    buildLocalGroup(states, skipInfo, id) {\n        let tokens = this.startState.compile();\n        if (tokens.accepting.length)\n            this.b.raise(`Grammar contains zero-length tokens (in '${tokens.accepting[0].name}')`, this.rules.find(r => r.id.name == tokens.accepting[0].name).start);\n        for (let { a, b, exampleA } of tokens.findConflicts(() => true)) {\n            if (!this.precededBy(a, b) && !this.precededBy(b, a))\n                this.b.raise(`Overlapping tokens ${a.name} and ${b.name} in local token group${exampleA ? ` (example: ${JSON.stringify(exampleA)})` : ''}`);\n        }\n        for (let state of states) {\n            if (state.defaultReduce)\n                continue;\n            // See if this state uses any of the tokens in this group, and\n            // if so, make sure it *only* uses tokens from this group.\n            let usesThis = null;\n            let usesOther = skipInfo[this.b.skipRules.indexOf(state.skip)].startTokens[0];\n            for (let { term } of state.actions) {\n                let orig = this.b.tokenOrigins[term.name];\n                if ((orig === null || orig === void 0 ? void 0 : orig.group) == this)\n                    usesThis = term;\n                else\n                    usesOther = term;\n            }\n            if (usesThis) {\n                if (usesOther)\n                    this.b.raise(`Tokens from a local token group used together with other tokens (${usesThis.name} with ${usesOther.name})`);\n                state.tokenGroup = id;\n            }\n        }\n        let precTable = this.buildPrecTable(none);\n        let tokenData = tokens.toArray({ [id]: 65535 /* Seq.End */ }, precTable);\n        let precOffset = tokenData.length;\n        let fullData = new Uint16Array(tokenData.length + precTable.length + 1);\n        fullData.set(tokenData, 0);\n        fullData.set(precTable, precOffset);\n        fullData[fullData.length - 1] = 65535 /* Seq.End */;\n        return {\n            groupID: id,\n            create: () => new LocalTokenGroup(fullData, precOffset, this.fallback ? this.fallback.id : undefined),\n            createSource: importName => `new ${importName(\"LocalTokenGroup\", \"@lezer/lr\")}(${encodeArray(fullData)}, ${precOffset}${this.fallback ? `, ${this.fallback.id}` : ''})`\n        };\n    }\n}\nfunction checkTogether(states, b, skipInfo) {\n    let cache = Object.create(null);\n    function hasTerm(state, term) {\n        return state.actions.some(a => a.term == term) ||\n            skipInfo[b.skipRules.indexOf(state.skip)].startTokens.includes(term);\n    }\n    return (a, b) => {\n        if (a.id < b.id)\n            [a, b] = [b, a];\n        let key = a.id | (b.id << 16), cached = cache[key];\n        if (cached != null)\n            return cached;\n        return cache[key] = states.some(state => hasTerm(state, a) && hasTerm(state, b));\n    };\n}\nfunction invertRanges(ranges) {\n    let pos = 0, result = [];\n    for (let [a, b] of ranges) {\n        if (a > pos)\n            result.push([pos, a]);\n        pos = b;\n    }\n    if (pos <= MAX_CODE)\n        result.push([pos, MAX_CODE + 1]);\n    return result;\n}\nconst ASTRAL = 0x10000, GAP_START = 0xd800, GAP_END = 0xe000, MAX_CODE = 0x10ffff;\nconst LOW_SURR_B = 0xdc00, HIGH_SURR_B = 0xdfff;\n// Create intermediate states for astral characters in a range, if\n// necessary, since the tokenizer acts on UTF16 characters\nfunction rangeEdges(from, to, low, hi) {\n    if (low < ASTRAL) {\n        if (low < GAP_START)\n            from.edge(low, Math.min(hi, GAP_START), to);\n        if (hi > GAP_END)\n            from.edge(Math.max(low, GAP_END), Math.min(hi, MAX_CHAR + 1), to);\n        low = ASTRAL;\n    }\n    if (hi <= ASTRAL)\n        return;\n    let lowStr = String.fromCodePoint(low), hiStr = String.fromCodePoint(hi - 1);\n    let lowA = lowStr.charCodeAt(0), lowB = lowStr.charCodeAt(1);\n    let hiA = hiStr.charCodeAt(0), hiB = hiStr.charCodeAt(1);\n    if (lowA == hiA) { // Share the first char code\n        let hop = new State$1;\n        from.edge(lowA, lowA + 1, hop);\n        hop.edge(lowB, hiB + 1, to);\n    }\n    else {\n        let midStart = lowA, midEnd = hiA;\n        if (lowB > LOW_SURR_B) {\n            midStart++;\n            let hop = new State$1;\n            from.edge(lowA, lowA + 1, hop);\n            hop.edge(lowB, HIGH_SURR_B + 1, to);\n        }\n        if (hiB < HIGH_SURR_B) {\n            midEnd--;\n            let hop = new State$1;\n            from.edge(hiA, hiA + 1, hop);\n            hop.edge(LOW_SURR_B, hiB + 1, to);\n        }\n        if (midStart <= midEnd) {\n            let hop = new State$1;\n            from.edge(midStart, midEnd + 1, hop);\n            hop.edge(LOW_SURR_B, HIGH_SURR_B + 1, to);\n        }\n    }\n}\nfunction isEmpty(expr) {\n    return expr instanceof SequenceExpression && expr.exprs.length == 0;\n}\nfunction gatherExtTokens(b, tokens) {\n    let result = Object.create(null);\n    for (let token of tokens) {\n        b.unique(token.id);\n        let { name, props, dialect } = b.nodeInfo(token.props, \"d\", token.id.name);\n        let term = b.makeTerminal(token.id.name, name, props);\n        if (dialect != null)\n            (b.tokens.byDialect[dialect] || (b.tokens.byDialect[dialect] = [])).push(term);\n        b.namedTerms[token.id.name] = result[token.id.name] = term;\n    }\n    return result;\n}\nfunction findExtToken(b, tokens, expr) {\n    let found = tokens[expr.id.name];\n    if (!found)\n        return null;\n    if (expr.args.length)\n        b.raise(\"External tokens cannot take arguments\", expr.args[0].start);\n    b.used(expr.id.name);\n    return found;\n}\nfunction addRel(rel, term, after) {\n    let found = rel.findIndex(r => r.term == term);\n    if (found < 0)\n        rel.push({ term, after });\n    else\n        rel[found] = { term, after: rel[found].after.concat(after) };\n}\nclass ExternalTokenSet {\n    constructor(b, ast) {\n        this.b = b;\n        this.ast = ast;\n        this.tokens = gatherExtTokens(b, ast.tokens);\n        for (let name in this.tokens)\n            this.b.tokenOrigins[this.tokens[name].name] = { external: this };\n    }\n    getToken(expr) { return findExtToken(this.b, this.tokens, expr); }\n    create() {\n        return this.b.options.externalTokenizer(this.ast.id.name, this.b.termTable);\n    }\n    createSource(importName) {\n        let { source, id: { name } } = this.ast;\n        return importName(name, source);\n    }\n}\nclass ExternalSpecializer {\n    constructor(b, ast) {\n        this.b = b;\n        this.ast = ast;\n        this.term = null;\n        this.tokens = gatherExtTokens(b, ast.tokens);\n    }\n    finish() {\n        let terms = this.b.normalizeExpr(this.ast.token);\n        if (terms.length != 1 || terms[0].terms.length != 1 || !terms[0].terms[0].terminal)\n            this.b.raise(`The token expression to '@external ${this.ast.type}' must resolve to a token`, this.ast.token.start);\n        this.term = terms[0].terms[0];\n        for (let name in this.tokens)\n            this.b.tokenOrigins[this.tokens[name].name] = { spec: this.term, external: this };\n    }\n    getToken(expr) { return findExtToken(this.b, this.tokens, expr); }\n}\nfunction inlineRules(rules, preserve) {\n    for (let pass = 0;; pass++) {\n        let inlinable = Object.create(null), found;\n        if (pass == 0)\n            for (let rule of rules) {\n                if (rule.name.inline && !inlinable[rule.name.name]) {\n                    let group = rules.filter(r => r.name == rule.name);\n                    if (group.some(r => r.parts.includes(rule.name)))\n                        continue;\n                    found = inlinable[rule.name.name] = group;\n                }\n            }\n        for (let i = 0; i < rules.length; i++) {\n            let rule = rules[i];\n            if (!rule.name.interesting && !rule.parts.includes(rule.name) && rule.parts.length < 3 &&\n                !preserve.includes(rule.name) &&\n                (rule.parts.length == 1 || rules.every(other => other.skip == rule.skip || !other.parts.includes(rule.name))) &&\n                !rule.parts.some(p => !!inlinable[p.name]) &&\n                !rules.some((r, j) => j != i && r.name == rule.name))\n                found = inlinable[rule.name.name] = [rule];\n        }\n        if (!found)\n            return rules;\n        let newRules = [];\n        for (let rule of rules) {\n            if (inlinable[rule.name.name])\n                continue;\n            if (!rule.parts.some(p => !!inlinable[p.name])) {\n                newRules.push(rule);\n                continue;\n            }\n            function expand(at, conflicts, parts) {\n                if (at == rule.parts.length) {\n                    newRules.push(new Rule(rule.name, parts, conflicts, rule.skip));\n                    return;\n                }\n                let next = rule.parts[at], replace = inlinable[next.name];\n                if (!replace) {\n                    expand(at + 1, conflicts.concat(rule.conflicts[at + 1]), parts.concat(next));\n                    return;\n                }\n                for (let r of replace)\n                    expand(at + 1, conflicts.slice(0, conflicts.length - 1)\n                        .concat(conflicts[at].join(r.conflicts[0]))\n                        .concat(r.conflicts.slice(1, r.conflicts.length - 1))\n                        .concat(rule.conflicts[at + 1].join(r.conflicts[r.conflicts.length - 1])), parts.concat(r.parts));\n            }\n            expand(0, [rule.conflicts[0]], []);\n        }\n        rules = newRules;\n    }\n}\nfunction mergeRules(rules) {\n    let merged = Object.create(null), found;\n    for (let i = 0; i < rules.length;) {\n        let groupStart = i;\n        let name = rules[i++].name;\n        while (i < rules.length && rules[i].name == name)\n            i++;\n        let size = i - groupStart;\n        if (name.interesting)\n            continue;\n        for (let j = i; j < rules.length;) {\n            let otherStart = j, otherName = rules[j++].name;\n            while (j < rules.length && rules[j].name == otherName)\n                j++;\n            if (j - otherStart != size || otherName.interesting)\n                continue;\n            let match = true;\n            for (let k = 0; k < size && match; k++) {\n                let a = rules[groupStart + k], b = rules[otherStart + k];\n                if (a.cmpNoName(b) != 0)\n                    match = false;\n            }\n            if (match)\n                found = merged[name.name] = otherName;\n        }\n    }\n    if (!found)\n        return rules;\n    let newRules = [];\n    for (let rule of rules)\n        if (!merged[rule.name.name]) {\n            newRules.push(rule.parts.every(p => !merged[p.name]) ? rule :\n                new Rule(rule.name, rule.parts.map(p => merged[p.name] || p), rule.conflicts, rule.skip));\n        }\n    return newRules;\n}\nfunction simplifyRules(rules, preserve) {\n    return mergeRules(inlineRules(rules, preserve));\n}\n/**\nBuild an in-memory parser instance for a given grammar. This is\nmostly useful for testing. If your grammar uses external\ntokenizers, you'll have to provide the `externalTokenizer` option\nfor the returned parser to be able to parse anything.\n*/\nfunction buildParser(text, options = {}) {\n    let builder = new Builder(text, options), parser = builder.getParser();\n    parser.termTable = builder.termTable;\n    return parser;\n}\nconst KEYWORDS = [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\",\n    \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"while\", \"with\",\n    \"null\", \"true\", \"false\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"new\", \"in\", \"this\",\n    \"const\", \"class\", \"extends\", \"export\", \"import\", \"super\", \"enum\", \"implements\", \"interface\",\n    \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"require\"];\n/**\nBuild the code that represents the parser tables for a given\ngrammar description. The `parser` property in the return value\nholds the main file that exports the `Parser` instance. The\n`terms` property holds a declaration file that defines constants\nfor all of the named terms in grammar, holding their ids as value.\nThis is useful when external code, such as a tokenizer, needs to\nbe able to use these ids. It is recommended to run a tree-shaking\nbundler when importing this file, since you usually only need a\nhandful of the many terms in your code.\n*/\nfunction buildParserFile(text, options = {}) {\n    return new Builder(text, options).getParserFile();\n}\nfunction ignored(name) {\n    let first = name[0];\n    return first == \"_\" || first.toUpperCase() != first;\n}\nfunction isExported(rule) {\n    return rule.props.some(p => p.at && p.name == \"export\");\n}\n\nexport { GenError, buildParser, buildParserFile };\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport {\n  defaultHighlightStyle,\n  HighlightStyle,\n  syntaxHighlighting\n} from '@codemirror/language';\nimport { Extension } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\nimport { ITranslator, nullTranslator } from '@jupyterlab/translation';\nimport { tags as t } from '@lezer/highlight';\nimport { IEditorTheme, IEditorThemeRegistry } from './token';\n\nexport const jupyterEditorTheme = EditorView.theme({\n  /**\n   * CodeMirror themes are handling the background/color in this way. This works\n   * fine for CodeMirror editors outside the notebook, but the notebook styles\n   * these things differently.\n   */\n  '&': {\n    background: 'var(--jp-layout-color0)',\n    color: 'var(--jp-content-font-color1)'\n  },\n\n  /* In the notebook, we want this styling to be handled by its container */\n  '.jp-CodeConsole &, .jp-Notebook &': {\n    background: 'transparent'\n  },\n\n  '.cm-content': {\n    caretColor: 'var(--jp-editor-cursor-color)'\n  },\n\n  /* Inherit font family from .cm-editor */\n  '.cm-scroller': {\n    fontFamily: 'inherit'\n  },\n\n  '.cm-cursor, .cm-dropCursor': {\n    borderLeft:\n      'var(--jp-code-cursor-width0) solid var(--jp-editor-cursor-color)'\n  },\n\n  '.cm-selectionBackground, .cm-content ::selection': {\n    backgroundColor: 'var(--jp-editor-selected-background)'\n  },\n\n  '&.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground': {\n    backgroundColor: 'var(--jp-editor-selected-focused-background)'\n  },\n\n  '.cm-gutters': {\n    borderRight: '1px solid var(--jp-border-color2)',\n    backgroundColor: 'var(--jp-layout-color2)'\n  },\n\n  '.cm-gutter': {\n    backgroundColor: 'var(--jp-layout-color2)'\n  },\n\n  '.cm-activeLine': {\n    backgroundColor:\n      'color-mix(in srgb, var(--jp-layout-color3) 25%, transparent)'\n  },\n\n  '.cm-lineNumbers': {\n    color: 'var(--jp-ui-font-color2)'\n  },\n\n  '.cm-searchMatch': {\n    backgroundColor: 'var(--jp-search-unselected-match-background-color)',\n    color: 'var(--jp-search-unselected-match-color)'\n  },\n\n  '.cm-searchMatch.cm-searchMatch-selected': {\n    backgroundColor:\n      'var(--jp-search-selected-match-background-color) !important',\n    color: 'var(--jp-search-selected-match-color) !important'\n  },\n\n  '.cm-tooltip': {\n    backgroundColor: 'var(--jp-layout-color1)'\n  }\n});\n\n// The list of available tags for syntax highlighting is available at\n// https://lezer.codemirror.net/docs/ref/#highlight.tags\nexport const jupyterHighlightStyle = HighlightStyle.define([\n  // Order matters - a rule will override the previous ones; important for example for in headings styles.\n  { tag: t.meta, color: 'var(--jp-mirror-editor-meta-color)' },\n  { tag: t.heading, color: 'var(--jp-mirror-editor-header-color)' },\n  {\n    tag: [t.heading1, t.heading2, t.heading3, t.heading4],\n    color: 'var(--jp-mirror-editor-header-color)',\n    fontWeight: 'bold'\n  },\n  {\n    tag: t.keyword,\n    color: 'var(--jp-mirror-editor-keyword-color)',\n    fontWeight: 'bold'\n  },\n  { tag: t.atom, color: 'var(--jp-mirror-editor-atom-color)' },\n  { tag: t.number, color: 'var(--jp-mirror-editor-number-color)' },\n  {\n    tag: [t.definition(t.name), t.function(t.definition(t.variableName))],\n    color: 'var(--jp-mirror-editor-def-color)'\n  },\n  {\n    tag: t.standard(t.variableName),\n    color: 'var(--jp-mirror-editor-builtin-color)'\n  },\n  {\n    tag: [t.special(t.variableName), t.self],\n    color: 'var(--jp-mirror-editor-variable-2-color)'\n  },\n  { tag: t.punctuation, color: 'var(--jp-mirror-editor-punctuation-color)' },\n  { tag: t.propertyName, color: 'var(--jp-mirror-editor-property-color)' },\n  {\n    tag: t.operator,\n    color: 'var(--jp-mirror-editor-operator-color)',\n    fontWeight: 'bold'\n  },\n  {\n    tag: t.comment,\n    color: 'var(--jp-mirror-editor-comment-color)',\n    fontStyle: 'italic'\n  },\n  { tag: t.string, color: 'var(--jp-mirror-editor-string-color)' },\n  {\n    tag: [t.labelName, t.monospace, t.special(t.string)],\n    color: 'var(--jp-mirror-editor-string-2-color)'\n  },\n  { tag: t.bracket, color: 'var(--jp-mirror-editor-bracket-color)' },\n  { tag: t.tagName, color: 'var(--jp-mirror-editor-tag-color)' },\n  { tag: t.attributeName, color: 'var(--jp-mirror-editor-attribute-color)' },\n  { tag: t.quote, color: 'var(--jp-mirror-editor-quote-color)' },\n  {\n    tag: t.link,\n    color: 'var(--jp-mirror-editor-link-color)',\n    textDecoration: 'underline'\n  },\n  { tag: [t.separator, t.derefOperator, t.paren], color: '' },\n  { tag: t.strong, fontWeight: 'bold' },\n  { tag: t.emphasis, fontStyle: 'italic' },\n  { tag: t.strikethrough, textDecoration: 'line-through' },\n  {\n    tag: t.bool,\n    color: 'var(--jp-mirror-editor-keyword-color)',\n    fontWeight: 'bold'\n  }\n]);\n\n/**\n * JupyterLab CodeMirror 6 theme\n */\nexport const jupyterTheme: Extension = [\n  jupyterEditorTheme,\n  syntaxHighlighting(jupyterHighlightStyle)\n];\n\n/**\n * CodeMirror 6 theme registry\n */\nexport class EditorThemeRegistry implements IEditorThemeRegistry {\n  /**\n   * CodeMirror 6 themes\n   */\n  private _themeMap: Map<string, IEditorTheme> = new Map([\n    ['jupyter', Object.freeze({ name: 'jupyter', theme: jupyterTheme })]\n  ]);\n\n  /**\n   * Get all themes\n   */\n  get themes(): IEditorTheme[] {\n    return Array.from(this._themeMap.values());\n  }\n\n  /**\n   * Get the default CodeMirror 6 theme for JupyterLab\n   *\n   * @returns Default theme\n   */\n  defaultTheme(): Extension {\n    return this._themeMap.get('jupyter')!.theme;\n  }\n\n  /**\n   * Register a new theme.\n   *\n   * @param theme Codemirror 6 theme\n   */\n  addTheme(theme: IEditorTheme) {\n    if (this._themeMap.has(theme.name)) {\n      throw new Error(`A theme named '${theme.name}' is already registered.`);\n    }\n    this._themeMap.set(theme.name, { displayName: theme.name, ...theme });\n  }\n\n  /**\n   * Get a theme.\n   *\n   * #### Notes\n   * It falls back to the default theme\n   *\n   * @param name Theme name\n   * @returns Theme extension\n   */\n  getTheme(name: string): Extension {\n    const ext = this._themeMap.get(name)?.theme;\n\n    return ext ?? this.defaultTheme();\n  }\n}\n\n/**\n * EditorThemeRegistry namespace\n */\nexport namespace EditorThemeRegistry {\n  /**\n   * Get the default editor themes.\n   *\n   * @param translator Application translator\n   * @returns Default CodeMirror 6 themes\n   */\n  export function getDefaultThemes(\n    translator?: ITranslator | null\n  ): ReadonlyArray<Readonly<IEditorTheme>> {\n    const trans = (translator ?? nullTranslator).load('jupyterlab');\n    return [\n      Object.freeze({\n        name: 'codemirror',\n        displayName: trans.__('codemirror'),\n        theme: [\n          EditorView.baseTheme({}),\n          syntaxHighlighting(defaultHighlightStyle)\n        ]\n      })\n    ];\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport {\n  LanguageDescription,\n  LanguageSupport,\n  LRLanguage,\n  StreamLanguage,\n  StreamParser\n} from '@codemirror/language';\nimport { IEditorMimeTypeService } from '@jupyterlab/codeeditor';\nimport { PathExt } from '@jupyterlab/coreutils';\nimport { ITranslator, nullTranslator } from '@jupyterlab/translation';\nimport { buildParser } from '@lezer/generator';\nimport { highlightTree } from '@lezer/highlight';\n\nimport { jupyterHighlightStyle } from './theme';\nimport { IEditorLanguage, IEditorLanguageRegistry } from './token';\n\n/**\n * CodeMirror language registry\n */\nexport class EditorLanguageRegistry implements IEditorLanguageRegistry {\n  private _modeList: IEditorLanguage[] = [];\n\n  constructor() {\n    // Add default language text/plain -> No expressions to parse\n    this.addLanguage({\n      name: 'none',\n      mime: 'text/plain',\n      support: new LanguageSupport(\n        // Create a dummy parser that as no expression to parse\n        LRLanguage.define({ parser: buildParser('@top Program { }') })\n      )\n    });\n  }\n\n  /**\n   * Register a new language for CodeMirror\n   *\n   * @param language Language to register\n   */\n  addLanguage(language: IEditorLanguage): void {\n    const info =\n      this.findByName(language.name) ?? this.findByMIME(language.mime, true);\n    if (info) {\n      throw new Error(`${language.mime} already registered`);\n    }\n    this._modeList.push(this.makeSpec(language));\n  }\n\n  /**\n   * Ensure a codemirror mode is available by name or Codemirror spec.\n   *\n   * @param language - The mode to ensure.  If it is a string, uses [findBest]\n   *   to get the appropriate spec.\n   *\n   * @returns A promise that resolves when the mode is available.\n   */\n  async getLanguage(\n    language: string | IEditorLanguage\n  ): Promise<IEditorLanguage | null> {\n    const spec = this.findBest(language);\n    if (spec && !spec.support) {\n      spec.support = await spec.load!();\n    }\n    return spec;\n  }\n\n  /**\n   * Get the raw list of available modes specs.\n   *\n   * @returns The available modes\n   */\n  getLanguages(): IEditorLanguage[] {\n    return [...this._modeList] as IEditorLanguage[];\n  }\n\n  /**\n   * Find a codemirror mode by MIME.\n   *\n   * @param mime Mime type to look for\n   * @param strict Whether xml and json should be assimilated to the generic mimetype\n   * @returns The mode or null\n   */\n  findByMIME(\n    mime: string | readonly string[],\n    strict = false\n  ): IEditorLanguage | null {\n    if (Array.isArray(mime)) {\n      for (let i = 0; i < mime.length; i++) {\n        const spec = this.findByMIME(mime[i]);\n        if (spec) return spec;\n      }\n      return null;\n    }\n    mime = (mime as string).toLowerCase();\n    for (let i = 0; i < this._modeList.length; i++) {\n      let info = this._modeList[i];\n      if (Array.isArray(info.mime)) {\n        for (let j = 0; j < info.mime.length; j++) {\n          if (info.mime[j] == mime) {\n            return info;\n          }\n        }\n      } else if (info.mime == mime) {\n        return info;\n      }\n    }\n    if (!strict) {\n      if (/\\+xml$/.test(mime)) return this.findByMIME('application/xml');\n      if (/\\+json$/.test(mime)) return this.findByMIME('application/json');\n    }\n    return null;\n  }\n\n  /**\n   * Find a codemirror mode by name.\n   *\n   * @param name The mode name\n   * @returns The mode or null\n   */\n  findByName(name: string): IEditorLanguage | null {\n    name = name.toLowerCase();\n    for (let i = 0; i < this._modeList.length; i++) {\n      let info = this._modeList[i];\n      if (info.name.toLowerCase() == name) return info;\n      if (info.alias) {\n        for (let j = 0; j < info.alias.length; j++) {\n          if (info.alias[j].toLowerCase() == name) {\n            return info;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Find a codemirror mode by extension.\n   *\n   * @param ext The extension name\n   * @returns The mode or null\n   */\n  findByExtension(ext: string | readonly string[]): IEditorLanguage | null {\n    if (Array.isArray(ext)) {\n      for (let i = 0; i < ext.length; i++) {\n        const spec = this.findByExtension(ext[i]);\n        if (spec) return spec;\n      }\n      return null;\n    }\n    ext = (ext as string).toLowerCase();\n    for (let i = 0; i < this._modeList.length; i++) {\n      let info = this._modeList[i];\n      for (let j = 0; j < info.extensions!.length; j++) {\n        if (info.extensions![j].toLowerCase() == ext) {\n          return info;\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Find a codemirror mode by filename.\n   *\n   * @param name File name\n   * @returns The mode or null\n   */\n  findByFileName(name: string): IEditorLanguage | null {\n    const basename = PathExt.basename(name);\n    for (let i = 0; i < this._modeList.length; i++) {\n      let info = this._modeList[i];\n      if (info.filename && info.filename.test(basename)) {\n        return info;\n      }\n    }\n    let dot = basename.lastIndexOf('.');\n    let ext = dot > -1 && basename.substring(dot + 1, basename.length);\n    if (ext) {\n      return this.findByExtension(ext);\n    }\n    return null;\n  }\n\n  /**\n   * Find a codemirror mode by name or CodeMirror spec.\n   *\n   * @param language The CodeMirror mode\n   * @param fallback Whether to fallback to default mimetype spec or not\n   * @returns The mode or null\n   */\n  findBest(\n    language: string | IEditorLanguage,\n    fallback = true\n  ): IEditorLanguage | null {\n    const modename = typeof language === 'string' ? language : language.name;\n    const mimetype = typeof language !== 'string' ? language.mime : modename;\n    const ext = typeof language !== 'string' ? language.extensions ?? [] : [];\n\n    return (\n      (modename ? this.findByName(modename) : null) ??\n      (mimetype ? this.findByMIME(mimetype) : null) ??\n      this.findByExtension(ext) ??\n      (fallback\n        ? this.findByMIME(IEditorMimeTypeService.defaultMimeType)\n        : null)\n    );\n  }\n\n  /**\n   * Parse and style a string.\n   *\n   * @param code Code to highlight\n   * @param language Code language\n   * @param el HTML element into which the highlighted code will be inserted\n   */\n  async highlight(\n    code: string,\n    language: IEditorLanguage | null,\n    el: HTMLElement\n  ): Promise<void> {\n    if (language) {\n      await this.getLanguage(language);\n    }\n\n    const language_ = language?.support?.language;\n    if (!language_) {\n      el.appendChild(document.createTextNode(code));\n      return;\n    }\n\n    const tree = language_.parser.parse(code);\n    // position state required because unstyled tokens are not emitted\n    // in highlightTree\n    let pos = 0;\n    highlightTree(tree, jupyterHighlightStyle, (from, to, classes) => {\n      if (from > pos) {\n        // No style applied to the token between pos and from\n        el.appendChild(document.createTextNode(code.slice(pos, from)));\n      }\n      const sp = el.appendChild(document.createElement('span'));\n      sp.className = classes;\n      sp.appendChild(document.createTextNode(code.slice(from, to)));\n      pos = to;\n    });\n\n    if (pos < tree.length - 1) {\n      // No style applied on the trailing text\n      el.appendChild(document.createTextNode(code.slice(pos, tree.length)));\n    }\n  }\n\n  // Code mirror uses two similar structures, a plain object with optional fields,\n  // and a class with the same fields but all mandatory. Maybe adopting the same\n  // pattern would be less confusing (although far more verbose)\n  protected makeSpec(spec: IEditorLanguage): IEditorLanguage {\n    let res = LanguageDescription.of(spec) as any;\n    // CodeMirror does not store/use mime type of a language\n    res.mime = spec.mime;\n    res.displayName = spec.displayName;\n    return res as IEditorLanguage;\n  }\n}\n\n/**\n * EditorLanguageRegistry namespace\n */\nexport namespace EditorLanguageRegistry {\n  /**\n   * Convert an CodeMirror 5 language parser to CodeMirror 6\n   *\n   * @param parser Legacy parser\n   * @returns Language object\n   */\n  export function legacy(parser: StreamParser<unknown>): LanguageSupport {\n    return new LanguageSupport(StreamLanguage.define(parser));\n  }\n\n  /**\n   * Create a dialect of SQL\n   *\n   * @param dialectName SQL dialect\n   * @returns Language object\n   */\n  async function sql(\n    dialectName: keyof typeof import('@codemirror/lang-sql')\n  ): Promise<LanguageSupport> {\n    const m = await import('@codemirror/lang-sql');\n    return m.sql({ dialect: (m as any)[dialectName] });\n  }\n\n  /**\n   * Get the default editor languages\n   *\n   * @param translator Application translator\n   * @returns Default CodeMirror 6 languages\n   */\n  export function getDefaultLanguages(\n    translator?: ITranslator | null\n  ): ReadonlyArray<IEditorLanguage> {\n    const trans = (translator ?? nullTranslator).load('jupyterlab');\n    return [\n      {\n        name: 'C',\n        displayName: trans.__('C'),\n        mime: 'text/x-csrc',\n        extensions: ['c', 'h', 'ino'],\n        async load() {\n          const m = await import('@codemirror/lang-cpp');\n          return m.cpp();\n        }\n      },\n      {\n        name: 'C++',\n        displayName: trans.__('C++'),\n        mime: 'text/x-c++src',\n        extensions: ['cpp', 'c++', 'cc', 'cxx', 'hpp', 'h++', 'hh', 'hxx'],\n        async load() {\n          const m = await import('@codemirror/lang-cpp');\n          return m.cpp();\n        }\n      },\n      {\n        name: 'CQL',\n        displayName: trans.__('CQL'),\n        mime: 'text/x-cassandra',\n        extensions: ['cql'],\n        load() {\n          return sql('Cassandra');\n        }\n      },\n      {\n        name: 'CSS',\n        displayName: trans.__('CSS'),\n        mime: 'text/css',\n        extensions: ['css'],\n        async load() {\n          const m = await import('@codemirror/lang-css');\n          return m.css();\n        }\n      },\n      {\n        name: 'HTML',\n        displayName: trans.__('HTML'),\n        alias: ['xhtml'],\n        mime: 'text/html',\n        extensions: ['html', 'htm', 'handlebars', 'hbs'],\n        async load() {\n          const m = await import('@codemirror/lang-html');\n          return m.html();\n        }\n      },\n      {\n        name: 'Java',\n        displayName: trans.__('Java'),\n        mime: 'text/x-java',\n        extensions: ['java'],\n        async load() {\n          const m = await import('@codemirror/lang-java');\n          return m.java();\n        }\n      },\n      {\n        name: 'Javascript',\n        displayName: trans.__('Javascript'),\n        alias: ['ecmascript', 'js', 'node'],\n        mime: [\n          'text/javascript',\n          'text/ecmascript',\n          'application/javascript',\n          'application/x-javascript',\n          'application/ecmascript'\n        ],\n        extensions: ['js', 'mjs', 'cjs'],\n        async load() {\n          const m = await import('@codemirror/lang-javascript');\n          return m.javascript();\n        }\n      },\n      {\n        name: 'JSON',\n        displayName: trans.__('JSON'),\n        alias: ['json5'],\n        mime: ['application/json', 'application/x-json'],\n        extensions: ['json', 'map'],\n        async load() {\n          const m = await import('@codemirror/lang-json');\n          return m.json();\n        }\n      },\n      {\n        name: 'JSX',\n        displayName: trans.__('JSX'),\n        mime: 'text/jsx',\n        extensions: ['jsx'],\n        async load() {\n          const m = await import('@codemirror/lang-javascript');\n          return m.javascript({ jsx: true });\n        }\n      },\n      {\n        name: 'MariaDB SQL',\n        displayName: trans.__('MariaDB SQL'),\n        mime: 'text/x-mariadb',\n        load() {\n          return sql('MariaSQL');\n        }\n      },\n      {\n        name: 'Markdown',\n        displayName: trans.__('Markdown'),\n        mime: 'text/x-markdown',\n        extensions: ['md', 'markdown', 'mkd'],\n        async load() {\n          const m = await import('@codemirror/lang-markdown');\n          return m.markdown({ codeLanguages: this._modeList as any });\n        }\n      },\n      {\n        name: 'MS SQL',\n        displayName: trans.__('MS SQL'),\n        mime: 'text/x-mssql',\n        load() {\n          return sql('MSSQL');\n        }\n      },\n      {\n        name: 'MySQL',\n        displayName: trans.__('MySQL'),\n        mime: 'text/x-mysql',\n        load() {\n          return sql('MySQL');\n        }\n      },\n      {\n        name: 'PHP',\n        displayName: trans.__('PHP'),\n        mime: [\n          'text/x-php',\n          'application/x-httpd-php',\n          'application/x-httpd-php-open'\n        ],\n        extensions: ['php', 'php3', 'php4', 'php5', 'php7', 'phtml'],\n        async load() {\n          const m = await import('@codemirror/lang-php');\n          return m.php();\n        }\n      },\n      {\n        name: 'PLSQL',\n        displayName: trans.__('PLSQL'),\n        mime: 'text/x-plsql',\n        extensions: ['pls'],\n        load() {\n          return sql('PLSQL');\n        }\n      },\n      {\n        name: 'PostgreSQL',\n        displayName: trans.__('PostgreSQL'),\n        mime: 'text/x-pgsql',\n        load() {\n          return sql('PostgreSQL');\n        }\n      },\n      {\n        name: 'Python',\n        displayName: trans.__('Python'),\n        mime: 'text/x-python',\n        extensions: ['BUILD', 'bzl', 'py', 'pyw'],\n        filename: /^(BUCK|BUILD)$/,\n        async load() {\n          const m = await import('@codemirror/lang-python');\n          return m.python();\n        }\n      },\n      {\n        name: 'ipython',\n        displayName: trans.__('ipython'),\n        mime: 'text/x-ipython',\n        async load() {\n          // FIXME Restore '?' operator - using the default python LanguageSupport allows\n          // to activate feature such as code folding.\n          // return Promise.resolve(legacy(mkPython({ singleOperators: /\\?/ })));\n          const m = await import('@codemirror/lang-python');\n          return m.python();\n        }\n      },\n      {\n        name: 'Rust',\n        displayName: trans.__('Rust'),\n        mime: 'text/x-rustsrc',\n        extensions: ['rs'],\n        async load() {\n          const m = await import('@codemirror/lang-rust');\n          return m.rust();\n        }\n      },\n      {\n        name: 'SQL',\n        displayName: trans.__('SQL'),\n        mime: ['application/sql', 'text/x-sql'],\n        extensions: ['sql'],\n        load() {\n          return sql('StandardSQL');\n        }\n      },\n      {\n        name: 'SQLite',\n        displayName: trans.__('SQLite'),\n        mime: 'text/x-sqlite',\n        load() {\n          return sql('SQLite');\n        }\n      },\n      {\n        name: 'TSX',\n        displayName: trans.__('TSX'),\n        alias: ['TypeScript-JSX'],\n        mime: 'text/typescript-jsx',\n        extensions: ['tsx'],\n        async load() {\n          const m = await import('@codemirror/lang-javascript');\n          return m.javascript({ jsx: true, typescript: true });\n        }\n      },\n      {\n        name: 'TypeScript',\n        displayName: trans.__('TypeScript'),\n        alias: ['ts'],\n        mime: 'application/typescript',\n        extensions: ['ts'],\n        async load() {\n          const m = await import('@codemirror/lang-javascript');\n          return m.javascript({ typescript: true });\n        }\n      },\n      {\n        name: 'WebAssembly',\n        displayName: trans.__('WebAssembly'),\n        mime: 'text/webassembly',\n        extensions: ['wat', 'wast'],\n        async load() {\n          const m = await import('@codemirror/lang-wast');\n          return m.wast();\n        }\n      },\n      {\n        name: 'XML',\n        displayName: trans.__('XML'),\n        alias: ['rss', 'wsdl', 'xsd'],\n        mime: ['application/xml', 'text/xml'],\n        extensions: ['xml', 'xsl', 'xsd', 'svg'],\n        async load() {\n          const m = await import('@codemirror/lang-xml');\n          return m.xml();\n        }\n      },\n      // Legacy modes ported from CodeMirror 5\n      {\n        name: 'APL',\n        displayName: trans.__('APL'),\n        mime: 'text/apl',\n        extensions: ['dyalog', 'apl'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/apl');\n          return legacy(m.apl);\n        }\n      },\n      {\n        name: 'PGP',\n        displayName: trans.__('PGP'),\n        alias: ['asciiarmor'],\n        mime: [\n          'application/pgp',\n          'application/pgp-encrypted',\n          'application/pgp-keys',\n          'application/pgp-signature'\n        ],\n        extensions: ['asc', 'pgp', 'sig'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/asciiarmor');\n          return legacy(m.asciiArmor);\n        }\n      },\n      {\n        name: 'ASN.1',\n        displayName: trans.__('ASN.1'),\n        mime: 'text/x-ttcn-asn',\n        extensions: ['asn', 'asn1'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/asn1');\n          return legacy(m.asn1({}));\n        }\n      },\n      {\n        name: 'Asterisk',\n        displayName: trans.__('Asterisk'),\n        mime: 'text/x-asterisk',\n        filename: /^extensions\\.conf$/i,\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/asterisk');\n          return legacy(m.asterisk);\n        }\n      },\n      {\n        name: 'Brainfuck',\n        displayName: trans.__('Brainfuck'),\n        mime: 'text/x-brainfuck',\n        extensions: ['b', 'bf'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/brainfuck');\n          return legacy(m.brainfuck);\n        }\n      },\n      {\n        name: 'Cobol',\n        displayName: trans.__('Cobol'),\n        mime: 'text/x-cobol',\n        extensions: ['cob', 'cpy'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/cobol');\n          return legacy(m.cobol);\n        }\n      },\n      {\n        name: 'C#',\n        displayName: trans.__('C#'),\n        alias: ['csharp', 'cs'],\n        mime: 'text/x-csharp',\n        extensions: ['cs'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/clike');\n          return legacy(m.csharp);\n        }\n      },\n      {\n        name: 'Clojure',\n        displayName: trans.__('Clojure'),\n        mime: 'text/x-clojure',\n        extensions: ['clj', 'cljc', 'cljx'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/clojure');\n          return legacy(m.clojure);\n        }\n      },\n      {\n        name: 'ClojureScript',\n        displayName: trans.__('ClojureScript'),\n        mime: 'text/x-clojurescript',\n        extensions: ['cljs'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/clojure');\n          return legacy(m.clojure);\n        }\n      },\n      {\n        name: 'Closure Stylesheets (GSS)',\n        displayName: trans.__('Closure Stylesheets (GSS)'),\n        mime: 'text/x-gss',\n        extensions: ['gss'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/css');\n          return legacy(m.gss);\n        }\n      },\n      {\n        name: 'CMake',\n        displayName: trans.__('CMake'),\n        mime: 'text/x-cmake',\n        extensions: ['cmake', 'cmake.in'],\n        filename: /^CMakeLists\\.txt$/,\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/cmake');\n          return legacy(m.cmake);\n        }\n      },\n      {\n        name: 'CoffeeScript',\n        displayName: trans.__('CoffeeScript'),\n        alias: ['coffee', 'coffee-script'],\n        mime: [\n          'application/vnd.coffeescript',\n          'text/coffeescript',\n          'text/x-coffeescript'\n        ],\n        extensions: ['coffee'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/coffeescript');\n          return legacy(m.coffeeScript);\n        }\n      },\n      {\n        name: 'Common Lisp',\n        displayName: trans.__('Common Lisp'),\n        alias: ['lisp'],\n        mime: 'text/x-common-lisp',\n        extensions: ['cl', 'lisp', 'el'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/commonlisp');\n          return legacy(m.commonLisp);\n        }\n      },\n      {\n        name: 'Cypher',\n        displayName: trans.__('Cypher'),\n        mime: 'application/x-cypher-query',\n        extensions: ['cyp', 'cypher'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/cypher');\n          return legacy(m.cypher);\n        }\n      },\n      {\n        name: 'Cython',\n        displayName: trans.__('Cython'),\n        mime: 'text/x-cython',\n        extensions: ['pyx', 'pxd', 'pxi'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/python');\n          return legacy(m.cython);\n        }\n      },\n      {\n        name: 'Crystal',\n        displayName: trans.__('Crystal'),\n        mime: 'text/x-crystal',\n        extensions: ['cr'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/crystal');\n          return legacy(m.crystal);\n        }\n      },\n      {\n        name: 'D',\n        displayName: trans.__('D'),\n        mime: 'text/x-d',\n        extensions: ['d'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/d');\n          return legacy(m.d);\n        }\n      },\n      {\n        name: 'Dart',\n        displayName: trans.__('Dart'),\n        mime: ['application/dart', 'text/x-dart'],\n        extensions: ['dart'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/clike');\n          return legacy(m.dart);\n        }\n      },\n      {\n        name: 'diff',\n        displayName: trans.__('diff'),\n        mime: 'text/x-diff',\n        extensions: ['diff', 'patch'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/diff');\n          return legacy(m.diff);\n        }\n      },\n      {\n        name: 'Dockerfile',\n        displayName: trans.__('Dockerfile'),\n        mime: 'text/x-dockerfile',\n        filename: /^Dockerfile$/,\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/dockerfile');\n          return legacy(m.dockerFile);\n        }\n      },\n      {\n        name: 'DTD',\n        displayName: trans.__('DTD'),\n        mime: 'application/xml-dtd',\n        extensions: ['dtd'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/dtd');\n          return legacy(m.dtd);\n        }\n      },\n      {\n        name: 'Dylan',\n        displayName: trans.__('Dylan'),\n        mime: 'text/x-dylan',\n        extensions: ['dylan', 'dyl', 'intr'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/dylan');\n          return legacy(m.dylan);\n        }\n      },\n      {\n        name: 'EBNF',\n        displayName: trans.__('EBNF'),\n        mime: 'text/x-ebnf',\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/ebnf');\n          return legacy(m.ebnf);\n        }\n      },\n      {\n        name: 'ECL',\n        displayName: trans.__('ECL'),\n        mime: 'text/x-ecl',\n        extensions: ['ecl'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/ecl');\n          return legacy(m.ecl);\n        }\n      },\n      {\n        name: 'edn',\n        displayName: trans.__('edn'),\n        mime: 'application/edn',\n        extensions: ['edn'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/clojure');\n          return legacy(m.clojure);\n        }\n      },\n      {\n        name: 'Eiffel',\n        displayName: trans.__('Eiffel'),\n        mime: 'text/x-eiffel',\n        extensions: ['e'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/eiffel');\n          return legacy(m.eiffel);\n        }\n      },\n      {\n        name: 'Elm',\n        displayName: trans.__('Elm'),\n        mime: 'text/x-elm',\n        extensions: ['elm'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/elm');\n          return legacy(m.elm);\n        }\n      },\n      {\n        name: 'Erlang',\n        displayName: trans.__('Erlang'),\n        mime: 'text/x-erlang',\n        extensions: ['erl'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/erlang');\n          return legacy(m.erlang);\n        }\n      },\n      {\n        name: 'Esper',\n        displayName: trans.__('Esper'),\n        mime: 'text/x-esper',\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/sql');\n          return legacy(m.esper);\n        }\n      },\n      {\n        name: 'Factor',\n        displayName: trans.__('Factor'),\n        mime: 'text/x-factor',\n        extensions: ['factor'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/factor');\n          return legacy(m.factor);\n        }\n      },\n      {\n        name: 'FCL',\n        displayName: trans.__('FCL'),\n        mime: 'text/x-fcl',\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/fcl');\n          return legacy(m.fcl);\n        }\n      },\n      {\n        name: 'Forth',\n        displayName: trans.__('Forth'),\n        mime: 'text/x-forth',\n        extensions: ['forth', 'fth', '4th'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/forth');\n          return legacy(m.forth);\n        }\n      },\n      {\n        name: 'Fortran',\n        displayName: trans.__('Fortran'),\n        mime: 'text/x-fortran',\n        extensions: ['f', 'for', 'f77', 'f90', 'f95'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/fortran');\n          return legacy(m.fortran);\n        }\n      },\n      {\n        name: 'F#',\n        displayName: trans.__('F#'),\n        alias: ['fsharp'],\n        mime: 'text/x-fsharp',\n        extensions: ['fs'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/mllike');\n          return legacy(m.fSharp);\n        }\n      },\n      {\n        name: 'Gas',\n        displayName: trans.__('Gas'),\n        mime: 'text/x-gas',\n        extensions: ['s'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/gas');\n          return legacy(m.gas);\n        }\n      },\n      {\n        name: 'Gherkin',\n        displayName: trans.__('Gherkin'),\n        mime: 'text/x-feature',\n        extensions: ['feature'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/gherkin');\n          return legacy(m.gherkin);\n        }\n      },\n      {\n        name: 'Go',\n        displayName: trans.__('Go'),\n        mime: 'text/x-go',\n        extensions: ['go'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/go');\n          return legacy(m.go);\n        }\n      },\n      {\n        name: 'Groovy',\n        displayName: trans.__('Groovy'),\n        mime: 'text/x-groovy',\n        extensions: ['groovy', 'gradle'],\n        filename: /^Jenkinsfile$/,\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/groovy');\n          return legacy(m.groovy);\n        }\n      },\n      {\n        name: 'Haskell',\n        displayName: trans.__('Haskell'),\n        mime: 'text/x-haskell',\n        extensions: ['hs'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/haskell');\n          return legacy(m.haskell);\n        }\n      },\n      {\n        name: 'Haxe',\n        displayName: trans.__('Haxe'),\n        mime: 'text/x-haxe',\n        extensions: ['hx'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/haxe');\n          return legacy(m.haxe);\n        }\n      },\n      {\n        name: 'HXML',\n        displayName: trans.__('HXML'),\n        mime: 'text/x-hxml',\n        extensions: ['hxml'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/haxe');\n          return legacy(m.hxml);\n        }\n      },\n      {\n        name: 'HTTP',\n        displayName: trans.__('HTTP'),\n        mime: 'message/http',\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/http');\n          return legacy(m.http);\n        }\n      },\n      {\n        name: 'IDL',\n        displayName: trans.__('IDL'),\n        mime: 'text/x-idl',\n        extensions: ['pro'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/idl');\n          return legacy(m.idl);\n        }\n      },\n      {\n        name: 'JSON-LD',\n        displayName: trans.__('JSON-LD'),\n        alias: ['jsonld'],\n        mime: 'application/ld+json',\n        extensions: ['jsonld'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/javascript');\n          return legacy(m.jsonld);\n        }\n      },\n      {\n        name: 'Jinja2',\n        displayName: trans.__('Jinja2'),\n        mime: 'text/jinja2',\n        extensions: ['j2', 'jinja', 'jinja2'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/jinja2');\n          return legacy(m.jinja2);\n        }\n      },\n      {\n        name: 'Julia',\n        displayName: trans.__('Julia'),\n        mime: 'text/x-julia',\n        extensions: ['jl'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/julia');\n          return legacy(m.julia);\n        }\n      },\n      {\n        name: 'Kotlin',\n        displayName: trans.__('Kotlin'),\n        mime: 'text/x-kotlin',\n        extensions: ['kt'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/clike');\n          return legacy(m.kotlin);\n        }\n      },\n      {\n        name: 'LESS',\n        displayName: trans.__('LESS'),\n        mime: 'text/x-less',\n        extensions: ['less'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/css');\n          return legacy(m.less);\n        }\n      },\n      {\n        name: 'LiveScript',\n        displayName: trans.__('LiveScript'),\n        alias: ['ls'],\n        mime: 'text/x-livescript',\n        extensions: ['ls'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/livescript');\n          return legacy(m.liveScript);\n        }\n      },\n      {\n        name: 'Lua',\n        displayName: trans.__('Lua'),\n        mime: 'text/x-lua',\n        extensions: ['lua'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/lua');\n          return legacy(m.lua);\n        }\n      },\n      {\n        name: 'mIRC',\n        displayName: trans.__('mIRC'),\n        mime: 'text/mirc',\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/mirc');\n          return legacy(m.mirc);\n        }\n      },\n      {\n        name: 'Mathematica',\n        displayName: trans.__('Mathematica'),\n        mime: 'text/x-mathematica',\n        extensions: ['m', 'nb', 'wl', 'wls'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/mathematica');\n          return legacy(m.mathematica);\n        }\n      },\n      {\n        name: 'Modelica',\n        displayName: trans.__('Modelica'),\n        mime: 'text/x-modelica',\n        extensions: ['mo'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/modelica');\n          return legacy(m.modelica);\n        }\n      },\n      {\n        name: 'MUMPS',\n        displayName: trans.__('MUMPS'),\n        mime: 'text/x-mumps',\n        extensions: ['mps'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/mumps');\n          return legacy(m.mumps);\n        }\n      },\n      {\n        name: 'mbox',\n        displayName: trans.__('mbox'),\n        mime: 'application/mbox',\n        extensions: ['mbox'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/mbox');\n          return legacy(m.mbox);\n        }\n      },\n      {\n        name: 'Nginx',\n        displayName: trans.__('Nginx'),\n        mime: 'text/x-nginx-conf',\n        filename: /nginx.*\\.conf$/i,\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/nginx');\n          return legacy(m.nginx);\n        }\n      },\n      {\n        name: 'NSIS',\n        displayName: trans.__('NSIS'),\n        mime: 'text/x-nsis',\n        extensions: ['nsh', 'nsi'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/nsis');\n          return legacy(m.nsis);\n        }\n      },\n      {\n        name: 'NTriples',\n        displayName: trans.__('NTriples'),\n        mime: [\n          'application/n-triples',\n          'application/n-quads',\n          'text/n-triples'\n        ],\n        extensions: ['nt', 'nq'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/ntriples');\n          return legacy(m.ntriples);\n        }\n      },\n      {\n        name: 'Objective-C',\n        displayName: trans.__('Objective-C'),\n        alias: ['objective-c', 'objc'],\n        mime: 'text/x-objectivec',\n        extensions: ['m'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/clike');\n          return legacy(m.objectiveC);\n        }\n      },\n      {\n        name: 'Objective-C++',\n        displayName: trans.__('Objective-C++'),\n        alias: ['objective-c++', 'objc++'],\n        mime: 'text/x-objectivec++',\n        extensions: ['mm'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/clike');\n          return legacy(m.objectiveCpp);\n        }\n      },\n      {\n        name: 'OCaml',\n        displayName: trans.__('OCaml'),\n        mime: 'text/x-ocaml',\n        extensions: ['ml', 'mli', 'mll', 'mly'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/mllike');\n          return legacy(m.oCaml);\n        }\n      },\n      {\n        name: 'Octave',\n        displayName: trans.__('Octave'),\n        mime: 'text/x-octave',\n        extensions: ['m'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/octave');\n          return legacy(m.octave);\n        }\n      },\n      {\n        name: 'Oz',\n        displayName: trans.__('Oz'),\n        mime: 'text/x-oz',\n        extensions: ['oz'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/oz');\n          return legacy(m.oz);\n        }\n      },\n      {\n        name: 'Pascal',\n        displayName: trans.__('Pascal'),\n        mime: 'text/x-pascal',\n        extensions: ['p', 'pas'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/pascal');\n          return legacy(m.pascal);\n        }\n      },\n      {\n        name: 'Perl',\n        displayName: trans.__('Perl'),\n        mime: 'text/x-perl',\n        extensions: ['pl', 'pm'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/perl');\n          return legacy(m.perl);\n        }\n      },\n      {\n        name: 'Pig',\n        displayName: trans.__('Pig'),\n        mime: 'text/x-pig',\n        extensions: ['pig'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/pig');\n          return legacy(m.pig);\n        }\n      },\n      {\n        name: 'PowerShell',\n        displayName: trans.__('PowerShell'),\n        mime: 'application/x-powershell',\n        extensions: ['ps1', 'psd1', 'psm1'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/powershell');\n          return legacy(m.powerShell);\n        }\n      },\n      {\n        name: 'Properties files',\n        displayName: trans.__('Properties files'),\n        alias: ['ini', 'properties'],\n        mime: 'text/x-properties',\n        extensions: ['properties', 'ini', 'in'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/properties');\n          return legacy(m.properties);\n        }\n      },\n      {\n        name: 'ProtoBuf',\n        displayName: trans.__('ProtoBuf'),\n        mime: 'text/x-protobuf',\n        extensions: ['proto'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/protobuf');\n          return legacy(m.protobuf);\n        }\n      },\n      {\n        name: 'Puppet',\n        displayName: trans.__('Puppet'),\n        mime: 'text/x-puppet',\n        extensions: ['pp'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/puppet');\n          return legacy(m.puppet);\n        }\n      },\n      {\n        name: 'Q',\n        displayName: trans.__('Q'),\n        mime: 'text/x-q',\n        extensions: ['q'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/q');\n          return legacy(m.q);\n        }\n      },\n      {\n        name: 'R',\n        displayName: trans.__('R'),\n        alias: ['rscript'],\n        mime: 'text/x-rsrc',\n        extensions: ['r', 'R'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/r');\n          return legacy(m.r);\n        }\n      },\n      {\n        name: 'RPM Changes',\n        displayName: trans.__('RPM Changes'),\n        mime: 'text/x-rpm-changes',\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/rpm');\n          return legacy(m.rpmChanges);\n        }\n      },\n      {\n        name: 'RPM Spec',\n        displayName: trans.__('RPM Spec'),\n        mime: 'text/x-rpm-spec',\n        extensions: ['spec'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/rpm');\n          return legacy(m.rpmSpec);\n        }\n      },\n      {\n        name: 'Ruby',\n        displayName: trans.__('Ruby'),\n        alias: ['jruby', 'macruby', 'rake', 'rb', 'rbx'],\n        mime: 'text/x-ruby',\n        extensions: ['rb'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/ruby');\n          return legacy(m.ruby);\n        }\n      },\n      {\n        name: 'SAS',\n        displayName: trans.__('SAS'),\n        mime: 'text/x-sas',\n        extensions: ['sas'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/sas');\n          return legacy(m.sas);\n        }\n      },\n      {\n        name: 'Scala',\n        displayName: trans.__('Scala'),\n        mime: 'text/x-scala',\n        extensions: ['scala'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/clike');\n          return legacy(m.scala);\n        }\n      },\n      {\n        name: 'Scheme',\n        displayName: trans.__('Scheme'),\n        mime: 'text/x-scheme',\n        extensions: ['scm', 'ss'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/scheme');\n          return legacy(m.scheme);\n        }\n      },\n      {\n        name: 'SCSS',\n        displayName: trans.__('SCSS'),\n        mime: 'text/x-scss',\n        extensions: ['scss'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/css');\n          return legacy(m.sCSS);\n        }\n      },\n      {\n        name: 'Shell',\n        displayName: trans.__('Shell'),\n        alias: ['bash', 'sh', 'zsh'],\n        mime: ['text/x-sh', 'application/x-sh'],\n        extensions: ['sh', 'ksh', 'bash'],\n        filename: /^PKGBUILD$/,\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/shell');\n          return legacy(m.shell);\n        }\n      },\n      {\n        name: 'Sieve',\n        displayName: trans.__('Sieve'),\n        mime: 'application/sieve',\n        extensions: ['siv', 'sieve'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/sieve');\n          return legacy(m.sieve);\n        }\n      },\n      {\n        name: 'Smalltalk',\n        displayName: trans.__('Smalltalk'),\n        mime: 'text/x-stsrc',\n        extensions: ['st'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/smalltalk');\n          return legacy(m.smalltalk);\n        }\n      },\n      {\n        name: 'Solr',\n        displayName: trans.__('Solr'),\n        mime: 'text/x-solr',\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/solr');\n          return legacy(m.solr);\n        }\n      },\n      {\n        name: 'SML',\n        displayName: trans.__('SML'),\n        mime: 'text/x-sml',\n        extensions: ['sml', 'sig', 'fun', 'smackspec'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/mllike');\n          return legacy(m.sml);\n        }\n      },\n      {\n        name: 'SPARQL',\n        displayName: trans.__('SPARQL'),\n        alias: ['sparul'],\n        mime: 'application/sparql-query',\n        extensions: ['rq', 'sparql'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/sparql');\n          return legacy(m.sparql);\n        }\n      },\n      {\n        name: 'Spreadsheet',\n        displayName: trans.__('Spreadsheet'),\n        alias: ['excel', 'formula'],\n        mime: 'text/x-spreadsheet',\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/spreadsheet');\n          return legacy(m.spreadsheet);\n        }\n      },\n      {\n        name: 'Squirrel',\n        displayName: trans.__('Squirrel'),\n        mime: 'text/x-squirrel',\n        extensions: ['nut'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/clike');\n          return legacy(m.squirrel);\n        }\n      },\n      {\n        name: 'Stylus',\n        displayName: trans.__('Stylus'),\n        mime: 'text/x-styl',\n        extensions: ['styl'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/stylus');\n          return legacy(m.stylus);\n        }\n      },\n      {\n        name: 'Swift',\n        displayName: trans.__('Swift'),\n        mime: 'text/x-swift',\n        extensions: ['swift'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/swift');\n          return legacy(m.swift);\n        }\n      },\n      {\n        name: 'sTeX',\n        displayName: trans.__('sTeX'),\n        mime: 'text/x-stex',\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/stex');\n          return legacy(m.stex);\n        }\n      },\n      {\n        name: 'LaTeX',\n        displayName: trans.__('LaTeX'),\n        alias: ['tex'],\n        mime: 'text/x-latex',\n        extensions: ['text', 'ltx', 'tex'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/stex');\n          return legacy(m.stex);\n        }\n      },\n      {\n        name: 'SystemVerilog',\n        displayName: trans.__('SystemVerilog'),\n        mime: 'text/x-systemverilog',\n        extensions: ['v', 'sv', 'svh'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/verilog');\n          return legacy(m.verilog);\n        }\n      },\n      {\n        name: 'Tcl',\n        displayName: trans.__('Tcl'),\n        mime: 'text/x-tcl',\n        extensions: ['tcl'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/tcl');\n          return legacy(m.tcl);\n        }\n      },\n      {\n        name: 'Textile',\n        displayName: trans.__('Textile'),\n        mime: 'text/x-textile',\n        extensions: ['textile'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/textile');\n          return legacy(m.textile);\n        }\n      },\n      {\n        name: 'TiddlyWiki',\n        displayName: trans.__('TiddlyWiki'),\n        mime: 'text/x-tiddlywiki',\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/tiddlywiki');\n          return legacy(m.tiddlyWiki);\n        }\n      },\n      {\n        name: 'Tiki wiki',\n        displayName: trans.__('Tiki wiki'),\n        mime: 'text/tiki',\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/tiki');\n          return legacy(m.tiki);\n        }\n      },\n      {\n        name: 'TOML',\n        displayName: trans.__('TOML'),\n        mime: 'text/x-toml',\n        extensions: ['toml'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/toml');\n          return legacy(m.toml);\n        }\n      },\n      {\n        name: 'troff',\n        displayName: trans.__('troff'),\n        mime: 'text/troff',\n        extensions: ['1', '2', '3', '4', '5', '6', '7', '8', '9'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/troff');\n          return legacy(m.troff);\n        }\n      },\n      {\n        name: 'TTCN',\n        displayName: trans.__('TTCN'),\n        mime: 'text/x-ttcn',\n        extensions: ['ttcn', 'ttcn3', 'ttcnpp'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/ttcn');\n          return legacy(m.ttcn);\n        }\n      },\n      {\n        name: 'TTCN_CFG',\n        displayName: trans.__('TTCN_CFG'),\n        mime: 'text/x-ttcn-cfg',\n        extensions: ['cfg'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/ttcn-cfg');\n          return legacy(m.ttcnCfg);\n        }\n      },\n      {\n        name: 'Turtle',\n        displayName: trans.__('Turtle'),\n        mime: 'text/turtle',\n        extensions: ['ttl'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/turtle');\n          return legacy(m.turtle);\n        }\n      },\n      {\n        name: 'Web IDL',\n        displayName: trans.__('Web IDL'),\n        mime: 'text/x-webidl',\n        extensions: ['webidl'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/webidl');\n          return legacy(m.webIDL);\n        }\n      },\n      {\n        name: 'VB.NET',\n        displayName: trans.__('VB.NET'),\n        mime: 'text/x-vb',\n        extensions: ['vb'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/vb');\n          return legacy(m.vb);\n        }\n      },\n      {\n        name: 'VBScript',\n        displayName: trans.__('VBScript'),\n        mime: 'text/vbscript',\n        extensions: ['vbs'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/vbscript');\n          return legacy(m.vbScript);\n        }\n      },\n      {\n        name: 'Velocity',\n        displayName: trans.__('Velocity'),\n        mime: 'text/velocity',\n        extensions: ['vtl'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/velocity');\n          return legacy(m.velocity);\n        }\n      },\n      {\n        name: 'Verilog',\n        displayName: trans.__('Verilog'),\n        mime: 'text/x-verilog',\n        extensions: ['v'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/verilog');\n          return legacy(m.verilog);\n        }\n      },\n      {\n        name: 'VHDL',\n        displayName: trans.__('VHDL'),\n        mime: 'text/x-vhdl',\n        extensions: ['vhd', 'vhdl'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/vhdl');\n          return legacy(m.vhdl);\n        }\n      },\n      {\n        name: 'XQuery',\n        displayName: trans.__('XQuery'),\n        mime: 'application/xquery',\n        extensions: ['xy', 'xquery'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/xquery');\n          return legacy(m.xQuery);\n        }\n      },\n      {\n        name: 'Yacas',\n        displayName: trans.__('Yacas'),\n        mime: 'text/x-yacas',\n        extensions: ['ys'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/yacas');\n          return legacy(m.yacas);\n        }\n      },\n      {\n        name: 'YAML',\n        displayName: trans.__('YAML'),\n        alias: ['yml'],\n        mime: ['text/x-yaml', 'text/yaml'],\n        extensions: ['yaml', 'yml'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/yaml');\n          return legacy(m.yaml);\n        }\n      },\n      {\n        name: 'Z80',\n        displayName: trans.__('Z80'),\n        mime: 'text/x-z80',\n        extensions: ['z80'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/z80');\n          return legacy(m.z80);\n        }\n      },\n      {\n        name: 'mscgen',\n        displayName: trans.__('mscgen'),\n        mime: 'text/x-mscgen',\n        extensions: ['mscgen', 'mscin', 'msc'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/mscgen');\n          return legacy(m.mscgen);\n        }\n      },\n      {\n        name: 'xu',\n        displayName: trans.__('xu'),\n        mime: 'text/x-xu',\n        extensions: ['xu'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/mscgen');\n          return legacy(m.xu);\n        }\n      },\n      {\n        name: 'msgenny',\n        displayName: trans.__('msgenny'),\n        mime: 'text/x-msgenny',\n        extensions: ['msgenny'],\n        async load() {\n          const m = await import('@codemirror/legacy-modes/mode/mscgen');\n          return legacy(m.msgenny);\n        }\n      }\n    ];\n  }\n}\n", "/* eslint-disable @typescript-eslint/ban-types */\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { insertNewlineAndIndent } from '@codemirror/commands';\nimport { ensureSyntaxTree } from '@codemirror/language';\nimport {\n  Compartment,\n  EditorSelection,\n  EditorState,\n  Extension,\n  Prec,\n  StateCommand,\n  Text\n} from '@codemirror/state';\nimport { Command, EditorView, ViewUpdate } from '@codemirror/view';\nimport { CodeEditor } from '@jupyterlab/codeeditor';\nimport { SyntaxNodeRef } from '@lezer/common';\nimport { UUID } from '@lumino/coreutils';\nimport { Signal } from '@lumino/signaling';\nimport { ExtensionsHandler } from './extension';\nimport { EditorLanguageRegistry } from './language';\nimport {\n  IEditorExtensionRegistry,\n  IEditorLanguageRegistry,\n  IExtensionsHandler\n} from './token';\n\n/**\n * The class name added to CodeMirrorWidget instances.\n */\nconst EDITOR_CLASS = 'jp-CodeMirrorEditor';\n\n/**\n * The key code for the up arrow key.\n */\nconst UP_ARROW = 38;\n\n/**\n * The key code for the down arrow key.\n */\nconst DOWN_ARROW = 40;\n\n/**\n * CodeMirror editor.\n */\nexport class CodeMirrorEditor implements CodeEditor.IEditor {\n  /**\n   * Construct a CodeMirror editor.\n   */\n  constructor(options: CodeMirrorEditor.IOptions) {\n    this._languages = options.languages ?? new EditorLanguageRegistry();\n    this._configurator =\n      options.extensionsRegistry?.createNew({\n        ...options,\n        inline: options.inline ?? false\n      }) ?? new ExtensionsHandler();\n    const host = (this.host = options.host);\n\n    host.classList.add(EDITOR_CLASS);\n    host.classList.add('jp-Editor');\n    host.addEventListener('focus', this, true);\n    host.addEventListener('blur', this, true);\n    host.addEventListener('scroll', this, true);\n\n    this._uuid = options.uuid ?? UUID.uuid4();\n\n    const model = (this._model = options.model);\n\n    // Default keydown handler - it will have low priority\n    const onKeyDown = EditorView.domEventHandlers({\n      keydown: (event: KeyboardEvent, view: EditorView) => {\n        return this.onKeydown(event);\n      }\n    });\n\n    const updateListener = EditorView.updateListener.of(\n      (update: ViewUpdate) => {\n        this._onDocChanged(update);\n      }\n    );\n\n    this._editor = Private.createEditor(\n      host,\n      this._configurator,\n      [\n        // We need to set the order to high, otherwise the keybinding for ArrowUp/ArrowDown\n        // will process the event shunting our edge detection code.\n        Prec.high(onKeyDown),\n        updateListener,\n        // Initialize with empty extension\n        this._language.of([]),\n        ...(options.extensions ?? [])\n      ],\n      model.sharedModel.source\n    );\n\n    this._onMimeTypeChanged();\n    this._onCursorActivity();\n\n    this._configurator.configChanged.connect(this.onConfigChanged, this);\n    model.mimeTypeChanged.connect(this._onMimeTypeChanged, this);\n  }\n\n  /**\n   * A signal emitted when either the top or bottom edge is requested.\n   */\n  readonly edgeRequested = new Signal<this, CodeEditor.EdgeLocation>(this);\n\n  /**\n   * The DOM node that hosts the editor.\n   */\n  readonly host: HTMLElement;\n\n  /**\n   * The uuid of this editor;\n   */\n  get uuid(): string {\n    return this._uuid;\n  }\n  set uuid(value: string) {\n    this._uuid = value;\n  }\n\n  /**\n   * Get the codemirror editor wrapped by the editor.\n   */\n  get editor(): EditorView {\n    return this._editor;\n  }\n\n  /**\n   * Get the codemirror doc wrapped by the widget.\n   */\n  get doc(): Text {\n    return this._editor.state.doc;\n  }\n\n  /**\n   * Get the number of lines in the editor.\n   */\n  get lineCount(): number {\n    return this.doc.lines;\n  }\n\n  /**\n   * Returns a model for this editor.\n   */\n  get model(): CodeEditor.IModel {\n    return this._model;\n  }\n\n  /**\n   * The height of a line in the editor in pixels.\n   */\n  get lineHeight(): number {\n    return this._editor.defaultLineHeight;\n  }\n\n  /**\n   * The widget of a character in the editor in pixels.\n   */\n  get charWidth(): number {\n    return this._editor.defaultCharacterWidth;\n  }\n\n  /**\n   * Tests whether the editor is disposed.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * Dispose of the resources held by the widget.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    this.host.removeEventListener('focus', this, true);\n    this.host.removeEventListener('blur', this, true);\n    this.host.removeEventListener('scroll', this, true);\n    this._configurator.dispose();\n    Signal.clearData(this);\n    this.editor.destroy();\n  }\n\n  /**\n   * Get a config option for the editor.\n   */\n  getOption(option: string): unknown {\n    return this._configurator.getOption(option);\n  }\n\n  /**\n   * Whether the option exists or not.\n   */\n  hasOption(option: string): boolean {\n    return this._configurator.hasOption(option);\n  }\n\n  /**\n   * Set a config option for the editor.\n   */\n  setOption(option: string, value: unknown): void {\n    this._configurator.setOption(option, value);\n  }\n\n  /**\n   * Set config options for the editor.\n   *\n   * This method is preferred when setting several options. The\n   * options are set within an operation, which only performs\n   * the costly update at the end, and not after every option\n   * is set.\n   */\n  setOptions(options: Record<string, any>): void {\n    this._configurator.setOptions(options);\n  }\n\n  /**\n   * Inject an extension into the editor\n   *\n   * @alpha\n   * @experimental\n   * @param ext CodeMirror 6 extension\n   */\n  injectExtension(ext: Extension): void {\n    this._configurator.injectExtension(this._editor, ext);\n  }\n\n  /**\n   * Returns the content for the given line number.\n   */\n  getLine(line: number): string | undefined {\n    // TODO: CM6 remove +1 when CM6 first line number has propagated\n    line = line + 1;\n    return line <= this.doc.lines ? this.doc.line(line).text : undefined;\n  }\n\n  /**\n   * Find an offset for the given position.\n   */\n  getOffsetAt(position: CodeEditor.IPosition): number {\n    // TODO: CM6 remove +1 when CM6 first line number has propagated\n    return this.doc.line(position.line + 1).from + position.column;\n  }\n\n  /**\n   * Find a position for the given offset.\n   */\n  getPositionAt(offset: number): CodeEditor.IPosition {\n    // TODO: CM6 remove -1 when CM6 first line number has propagated\n    const line = this.doc.lineAt(offset);\n    return { line: line.number - 1, column: offset - line.from };\n  }\n\n  /**\n   * Undo one edit (if any undo events are stored).\n   */\n  undo(): void {\n    this.model.sharedModel.undo();\n  }\n\n  /**\n   * Redo one undone edit.\n   */\n  redo(): void {\n    this.model.sharedModel.redo();\n  }\n\n  /**\n   * Clear the undo history.\n   */\n  clearHistory(): void {\n    this.model.sharedModel.clearUndoHistory();\n  }\n\n  /**\n   * Brings browser focus to this editor text.\n   */\n  focus(): void {\n    this._editor.focus();\n  }\n\n  /**\n   * Test whether the editor has keyboard focus.\n   */\n  hasFocus(): boolean {\n    return this._editor.hasFocus;\n  }\n\n  /**\n   * Explicitly blur the editor.\n   */\n  blur(): void {\n    this._editor.contentDOM.blur();\n  }\n\n  get state(): EditorState {\n    return this._editor.state;\n  }\n\n  firstLine(): number {\n    // TODO: return 1 when CM6 first line number has propagated\n    return 0;\n  }\n\n  lastLine(): number {\n    return this.doc.lines - 1;\n  }\n\n  cursorCoords(\n    where: boolean,\n    mode?: 'window' | 'page' | 'local'\n  ): { left: number; top: number; bottom: number } {\n    const selection = this.state.selection.main;\n    const pos = where ? selection.from : selection.to;\n    const rect = this.editor.coordsAtPos(pos);\n    return rect as { left: number; top: number; bottom: number };\n  }\n\n  getRange(\n    from: { line: number; ch: number },\n    to: { line: number; ch: number },\n    separator?: string\n  ): string {\n    const fromOffset = this.getOffsetAt(this._toPosition(from));\n    const toOffset = this.getOffsetAt(this._toPosition(to));\n    return this.state.sliceDoc(fromOffset, toOffset);\n  }\n\n  /**\n   * Reveal the given position in the editor.\n   */\n  revealPosition(position: CodeEditor.IPosition): void {\n    const offset = this.getOffsetAt(position);\n    this._editor.dispatch({\n      effects: EditorView.scrollIntoView(offset)\n    });\n  }\n\n  /**\n   * Reveal the given selection in the editor.\n   */\n  revealSelection(selection: CodeEditor.IRange): void {\n    const start = this.getOffsetAt(selection.start);\n    const end = this.getOffsetAt(selection.end);\n    this._editor.dispatch({\n      effects: EditorView.scrollIntoView(EditorSelection.range(start, end))\n    });\n  }\n\n  /**\n   * Get the window coordinates given a cursor position.\n   */\n  getCoordinateForPosition(\n    position: CodeEditor.IPosition\n  ): CodeEditor.ICoordinate {\n    const offset = this.getOffsetAt(position);\n    const rect = this.editor.coordsAtPos(offset);\n    return rect as CodeEditor.ICoordinate;\n  }\n\n  /**\n   * Get the cursor position given window coordinates.\n   *\n   * @param coordinate - The desired coordinate.\n   *\n   * @returns The position of the coordinates, or null if not\n   *   contained in the editor.\n   */\n  getPositionForCoordinate(\n    coordinate: CodeEditor.ICoordinate\n  ): CodeEditor.IPosition | null {\n    const offset = this.editor.posAtCoords({\n      x: coordinate.left,\n      y: coordinate.top\n    });\n    return this.getPositionAt(offset!) || null;\n  }\n\n  /**\n   * Returns the primary position of the cursor, never `null`.\n   */\n  getCursorPosition(): CodeEditor.IPosition {\n    const offset = this.state.selection.main.head;\n    return this.getPositionAt(offset);\n  }\n\n  /**\n   * Set the primary position of the cursor.\n   *\n   * #### Notes\n   * This will remove any secondary cursors.\n   */\n  setCursorPosition(\n    position: CodeEditor.IPosition,\n    options?: { bias?: number; origin?: string; scroll?: boolean }\n  ): void {\n    const offset = this.getOffsetAt(position);\n    this.editor.dispatch({\n      selection: { anchor: offset },\n      scrollIntoView: options?.scroll === false ? false : true\n    });\n    // If the editor does not have focus, this cursor change\n    // will get screened out in _onCursorsChanged(). Make an\n    // exception for this method.\n    if (!this.editor.hasFocus) {\n      this.model.selections.set(this.uuid, this.getSelections());\n    }\n  }\n\n  /**\n   * Returns the primary selection, never `null`.\n   */\n  getSelection(): CodeEditor.ITextSelection {\n    return this.getSelections()[0];\n  }\n\n  /**\n   * Set the primary selection. This will remove any secondary cursors.\n   */\n  setSelection(selection: CodeEditor.IRange): void {\n    this.setSelections([selection]);\n  }\n\n  /**\n   * Gets the selections for all the cursors, never `null` or empty.\n   */\n  getSelections(): CodeEditor.ITextSelection[] {\n    const selections = this.state.selection.ranges; //= [{anchor: number, head: number}]\n    if (selections.length > 0) {\n      const sel = selections.map(r => ({\n        anchor: this._toCodeMirrorPosition(this.getPositionAt(r.from)),\n        head: this._toCodeMirrorPosition(this.getPositionAt(r.to))\n      }));\n      return sel.map(selection => this._toSelection(selection));\n    }\n    const cursor = this._toCodeMirrorPosition(\n      this.getPositionAt(this.state.selection.main.head)\n    );\n    const selection = this._toSelection({ anchor: cursor, head: cursor });\n    return [selection];\n  }\n\n  /**\n   * Sets the selections for all the cursors, should not be empty.\n   * Cursors will be removed or added, as necessary.\n   * Passing an empty array resets a cursor position to the start of a document.\n   */\n  setSelections(selections: CodeEditor.IRange[]): void {\n    const sel = selections.length\n      ? selections.map(r =>\n          EditorSelection.range(\n            this.getOffsetAt(r.start),\n            this.getOffsetAt(r.end)\n          )\n        )\n      : [EditorSelection.range(0, 0)];\n    this.editor.dispatch({ selection: EditorSelection.create(sel) });\n  }\n\n  /**\n   * Replaces the current selection with the given text.\n   *\n   * Behaviour for multiple selections is undefined.\n   *\n   * @param text The text to be inserted.\n   */\n  replaceSelection(text: string): void {\n    const firstSelection = this.getSelections()[0];\n    this.model.sharedModel.updateSource(\n      this.getOffsetAt(firstSelection.start),\n      this.getOffsetAt(firstSelection.end),\n      text\n    );\n    const newPosition = this.getPositionAt(\n      this.getOffsetAt(firstSelection.start) + text.length\n    );\n    this.setSelection({ start: newPosition, end: newPosition });\n  }\n\n  /**\n   * Get a list of tokens for the current editor text content.\n   */\n  getTokens(): CodeEditor.IToken[] {\n    const tokens: CodeEditor.IToken[] = [];\n    const tree = ensureSyntaxTree(this.state, this.doc.length);\n    if (tree) {\n      tree.iterate({\n        enter: (ref: SyntaxNodeRef) => {\n          if (ref.node.firstChild === null) {\n            tokens.push({\n              value: this.state.sliceDoc(ref.from, ref.to),\n              offset: ref.from,\n              type: ref.name\n            });\n          }\n          return true;\n        }\n      });\n    }\n    return tokens;\n  }\n\n  /**\n   * Get the token at a given editor position.\n   */\n  getTokenAt(offset: number): CodeEditor.IToken {\n    const tree = ensureSyntaxTree(this.state, offset);\n    let token: CodeEditor.IToken | null = null;\n    if (tree) {\n      tree.iterate({\n        enter: (ref: SyntaxNodeRef) => {\n          // If a token has already been discovered, stop iterating.\n          if (token) {\n            return false;\n          }\n          // If it is not a leaf, keep iterating.\n          if (ref.node.firstChild) {\n            return true;\n          }\n          // If the relevant leaf token has been found, stop iterating.\n          if (offset >= ref.from && offset <= ref.to) {\n            token = {\n              value: this.state.sliceDoc(ref.from, ref.to),\n              offset: ref.from,\n              type: ref.name\n            };\n            return false;\n          }\n          return true;\n        }\n      });\n    }\n    return token || { offset, value: '' };\n  }\n\n  /**\n   * Get the token a the cursor position.\n   */\n  getTokenAtCursor(): CodeEditor.IToken {\n    return this.getTokenAt(this.state.selection.main.head);\n  }\n\n  /**\n   * Insert a new indented line at the current cursor position.\n   */\n  newIndentedLine(): void {\n    insertNewlineAndIndent({\n      state: this.state,\n      dispatch: this.editor.dispatch\n    });\n  }\n\n  /**\n   * Execute a codemirror command on the editor.\n   *\n   * @param command - The name of the command to execute.\n   */\n  execCommand(command: Command | StateCommand): void {\n    command(this.editor);\n  }\n\n  protected onConfigChanged(\n    configurator: IExtensionsHandler,\n    changes: Record<string, any>\n  ): void {\n    configurator.reconfigureExtensions(this._editor, changes);\n  }\n\n  /**\n   * Handle keydown events from the editor.\n   */\n  protected onKeydown(event: KeyboardEvent): boolean {\n    const position = this.state.selection.main.head;\n\n    if (position === 0 && event.keyCode === UP_ARROW) {\n      if (!event.shiftKey) {\n        this.edgeRequested.emit('top');\n      }\n      return false;\n    }\n\n    const line = this.doc.lineAt(position).number;\n    if (line === 1 && event.keyCode === UP_ARROW) {\n      if (!event.shiftKey) {\n        this.edgeRequested.emit('topLine');\n      }\n      return false;\n    }\n\n    const length = this.doc.length;\n    if (position === length && event.keyCode === DOWN_ARROW) {\n      if (!event.shiftKey) {\n        this.edgeRequested.emit('bottom');\n      }\n      return false;\n    }\n\n    return false;\n  }\n\n  /**\n   * Handles a mime type change.\n   */\n  private _onMimeTypeChanged(): void {\n    // TODO: should we provide a hook for when the mode is done being set?\n    this._languages\n      .getLanguage(this._model.mimeType)\n      .then(language => {\n        this._editor.dispatch({\n          effects: this._language.reconfigure(language?.support ?? [])\n        });\n      })\n      .catch(reason => {\n        console.log(\n          `Failed to load language for '${this._model.mimeType}'.`,\n          reason\n        );\n        this._editor.dispatch({\n          effects: this._language.reconfigure([])\n        });\n      });\n  }\n\n  /**\n   * Handles a cursor activity event.\n   */\n  private _onCursorActivity(): void {\n    // Only add selections if the editor has focus. This avoids unwanted\n    // triggering of cursor activity due to collaborator actions.\n    if (this._editor.hasFocus) {\n      const selections = this.getSelections();\n      this.model.selections.set(this.uuid, selections);\n    }\n  }\n\n  /**\n   * Converts a code mirror selection to an editor selection.\n   */\n  private _toSelection(selection: {\n    anchor: { line: number; ch: number };\n    head: { line: number; ch: number };\n  }): CodeEditor.ITextSelection {\n    return {\n      uuid: this.uuid,\n      start: this._toPosition(selection.anchor),\n      end: this._toPosition(selection.head)\n    };\n  }\n\n  /**\n   * Convert a code mirror position to an editor position.\n   */\n  private _toPosition(position: { line: number; ch: number }) {\n    return {\n      line: position.line,\n      column: position.ch\n    };\n  }\n\n  /**\n   * Convert an editor position to a code mirror position.\n   */\n  private _toCodeMirrorPosition(position: CodeEditor.IPosition) {\n    return {\n      line: position.line,\n      ch: position.column\n    };\n  }\n\n  /**\n   * Handles document changes.\n   */\n  private _onDocChanged(update: ViewUpdate) {\n    if (update.transactions.length && update.transactions[0].selection) {\n      this._onCursorActivity();\n    }\n  }\n\n  /**\n   * Handle the DOM events for the editor.\n   *\n   * @param event - The DOM event sent to the editor.\n   *\n   * #### Notes\n   * This method implements the DOM `EventListener` interface and is\n   * called in response to events on the editor's DOM node. It should\n   * not be called directly by user code.\n   */\n  handleEvent(event: Event): void {\n    switch (event.type) {\n      case 'focus':\n        this._evtFocus(event as FocusEvent);\n        break;\n      case 'blur':\n        this._evtBlur(event as FocusEvent);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Handle `focus` events for the editor.\n   */\n  private _evtFocus(event: FocusEvent): void {\n    this.host.classList.add('jp-mod-focused');\n\n    // Update the selections on editor gaining focus because\n    // the onCursorActivity function filters usual cursor events\n    // based on the editor's focus.\n    this._onCursorActivity();\n  }\n\n  /**\n   * Handle `blur` events for the editor.\n   */\n  private _evtBlur(event: FocusEvent): void {\n    this.host.classList.remove('jp-mod-focused');\n  }\n\n  private _configurator: IExtensionsHandler;\n  private _editor: EditorView;\n  private _isDisposed = false;\n  private _language = new Compartment();\n  private _languages: IEditorLanguageRegistry;\n  private _model: CodeEditor.IModel;\n  private _uuid = '';\n}\n\n/**\n * The namespace for `CodeMirrorEditor` statics.\n */\nexport namespace CodeMirrorEditor {\n  /**\n   * The options used to initialize a code mirror editor.\n   */\n  export interface IOptions extends CodeEditor.IOptions {\n    /**\n     * CodeMirror extensions registry\n     */\n    extensionsRegistry?: IEditorExtensionRegistry;\n    /**\n     * CodeMirror languages registry\n     */\n    languages?: IEditorLanguageRegistry;\n  }\n}\n\n/**\n * The namespace for module private data.\n */\nnamespace Private {\n  export function createEditor(\n    host: HTMLElement,\n    editorConfig: IExtensionsHandler,\n    additionalExtensions: Extension[],\n    doc?: string\n  ): EditorView {\n    const extensions = editorConfig.getInitialExtensions();\n    extensions.push(...additionalExtensions);\n    const view = new EditorView({\n      state: EditorState.create({\n        doc,\n        extensions\n      }),\n      parent: host\n    });\n\n    return view;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { CodeEditor, IEditorFactoryService } from '@jupyterlab/codeeditor';\nimport { ITranslator, nullTranslator } from '@jupyterlab/translation';\nimport { EditorExtensionRegistry } from './extension';\nimport { CodeMirrorEditor } from './editor';\nimport { EditorLanguageRegistry } from './language';\nimport {\n  IEditorExtensionFactory,\n  IEditorExtensionRegistry,\n  IEditorFactoryOptions,\n  IEditorLanguageRegistry\n} from './token';\nimport { EditorView, keymap } from '@codemirror/view';\nimport { searchKeymap } from '@codemirror/search';\n\n/**\n * CodeMirror editor factory.\n */\nexport class CodeMirrorEditorFactory implements IEditorFactoryService {\n  /**\n   * Construct an IEditorFactoryService for CodeMirrorEditors.\n   */\n  constructor(options: IEditorFactoryOptions = {}) {\n    this.languages = options.languages ?? new EditorLanguageRegistry();\n    this.extensions = options.extensions ?? new EditorExtensionRegistry();\n    this.translator = options.translator ?? nullTranslator;\n    this.inlineCodeMirrorConfig = {};\n    this.documentCodeMirrorConfig = {\n      lineNumbers: true,\n      scrollPastEnd: true\n    };\n  }\n\n  /**\n   * Create a new editor for inline code.\n   */\n  readonly newInlineEditor = (\n    options: CodeEditor.IOptions\n  ): CodeMirrorEditor => {\n    options.host.dataset.type = 'inline';\n    return this.newEditor({\n      ...options,\n      config: { ...this.inlineCodeMirrorConfig, ...(options.config || {}) },\n      inline: true,\n      // FIXME the search keymap should be added in the search plugin\n      extensions: [keymap.of(searchKeymap)].concat(options.extensions ?? [])\n    });\n  };\n\n  /**\n   * Create a new editor for a full document.\n   */\n  readonly newDocumentEditor = (\n    options: CodeEditor.IOptions\n  ): CodeMirrorEditor => {\n    options.host.dataset.type = 'document';\n    return this.newEditor({\n      ...options,\n      config: { ...this.documentCodeMirrorConfig, ...(options.config ?? {}) },\n      inline: false,\n      extensions: [\n        keymap.of([\n          {\n            key: 'Shift-Enter',\n            run: (target: EditorView) => {\n              return true;\n            }\n          }\n        ])\n      ].concat(options.extensions ?? [])\n    });\n  };\n\n  /**\n   * Create a new editor\n   *\n   * @param options Editor options\n   * @returns The editor\n   */\n  protected newEditor(\n    options: CodeEditor.IOptions & IEditorExtensionFactory.IOptions\n  ): CodeMirrorEditor {\n    const editor = new CodeMirrorEditor({\n      extensionsRegistry: this.extensions,\n      languages: this.languages,\n      translator: this.translator,\n      ...options\n    });\n\n    return editor;\n  }\n\n  protected extensions: IEditorExtensionRegistry;\n  protected languages: IEditorLanguageRegistry;\n  protected translator: ITranslator;\n  protected inlineCodeMirrorConfig: Record<string, any>;\n  protected documentCodeMirrorConfig: Record<string, any>;\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { IEditorMimeTypeService } from '@jupyterlab/codeeditor';\nimport { PathExt } from '@jupyterlab/coreutils';\nimport * as nbformat from '@jupyterlab/nbformat';\nimport { IEditorLanguageRegistry } from './token';\n\n/**\n * The mime type service for CodeMirror.\n */\nexport class CodeMirrorMimeTypeService implements IEditorMimeTypeService {\n  constructor(protected languages: IEditorLanguageRegistry) {}\n  /**\n   * Returns a mime type for the given language info.\n   *\n   * #### Notes\n   * If a mime type cannot be found returns the default mime type `text/plain`, never `null`.\n   * There may be more than one mime type, but only the first one will be returned.\n   * To access all mime types, use `IEditorLanguageRegistry` instead.\n   */\n  getMimeTypeByLanguage(info: nbformat.ILanguageInfoMetadata): string {\n    const ext = info.file_extension || '';\n    const mode = this.languages.findBest(\n      (info.codemirror_mode as any) || {\n        mimetype: info.mimetype,\n        name: info.name,\n        ext: [ext.split('.').slice(-1)[0]]\n      }\n    );\n    return mode\n      ? Array.isArray(mode.mime)\n        ? mode.mime[0] ?? IEditorMimeTypeService.defaultMimeType\n        : mode.mime\n      : IEditorMimeTypeService.defaultMimeType;\n  }\n\n  /**\n   * Returns a mime type for the given file path.\n   *\n   * #### Notes\n   * If a mime type cannot be found returns the default mime type `text/plain`, never `null`.\n   * There may be more than one mime type, but only the first one will be returned.\n   * To access all mime types, use `IEditorLanguageRegistry` instead.\n   */\n  getMimeTypeByFilePath(path: string): string {\n    const ext = PathExt.extname(path);\n    if (ext === '.ipy') {\n      return 'text/x-python';\n    } else if (ext === '.md') {\n      return 'text/x-ipythongfm';\n    }\n    const mode = this.languages.findByFileName(path);\n    return mode\n      ? Array.isArray(mode.mime)\n        ? mode.mime[0] ?? IEditorMimeTypeService.defaultMimeType\n        : mode.mime\n      : IEditorMimeTypeService.defaultMimeType;\n  }\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n/*\n  Parts of the implementation of the search in this file were derived from\n  CodeMirror's search at:\n  https://github.com/codemirror/CodeMirror/blob/c2676685866c571a1c9c82cb25018cc08b4d42b2/addon/search/search.js\n  which is licensed with the following license:\n\n  MIT License\n\n  Copyright (C) 2017 by Marijn Haverbeke <marijnh@gmail.com> and others\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nimport { ISearchMatch } from '@jupyterlab/documentsearch';\nimport { CodeMirrorEditor } from './editor';\nimport {\n  EditorSelection,\n  Extension,\n  StateEffect,\n  StateEffectType,\n  StateField\n} from '@codemirror/state';\nimport { Decoration, DecorationSet, EditorView } from '@codemirror/view';\nimport { CodeEditor } from '@jupyterlab/codeeditor';\nimport {\n  GenericSearchProvider,\n  IBaseSearchProvider,\n  IFilters,\n  IReplaceOptions,\n  TextSearchEngine\n} from '@jupyterlab/documentsearch';\nimport { ISignal, Signal } from '@lumino/signaling';\nimport { ISharedText, SourceChange } from '@jupyter/ydoc';\n\n/**\n * Defines from which position the search should be executed.\n * - `'selection'` - search from selection head/anchor (depending on search direction)\n * - `'previous-match'` - search from previous match\n * - `'auto'` - search from selection if editor is focused or previous match otherwise\n * - `'selection-start'` - search from selection head/anchor whichever is smaller\n * - `'start'` - from start of the editor\n */\ntype SearchStartAnchor =\n  | 'auto'\n  | 'selection'\n  | 'selection-start'\n  | 'previous-match'\n  | 'start';\n\ninterface IHighlightMatchOptions {\n  /**\n   * Whether the highlighted match should be scrolled into view.\n   * Defaults to `true`.\n   */\n  scroll?: boolean;\n  /**\n   * Whether the user cursor should be moved to select the match.\n   * `protectSelection` flag takes precedence over this option.\n   * Defaults to `true`.\n   */\n  select?: boolean;\n}\n\nexport interface IHighlightAdjacentMatchOptions extends IHighlightMatchOptions {\n  /**\n   * What should be used as an anchor when searching for adjacent match.\n   * Defaults to `'auto'`.\n   */\n  from?: SearchStartAnchor;\n}\n\n/**\n * Search provider for editors.\n */\nexport abstract class EditorSearchProvider<\n  T extends CodeEditor.IModel = CodeEditor.IModel\n> implements IBaseSearchProvider\n{\n  /**\n   * Constructor\n   */\n  constructor() {\n    this.currentIndex = null;\n    this._stateChanged = new Signal<IBaseSearchProvider, void>(this);\n  }\n\n  /**\n   * CodeMirror search highlighter\n   */\n  protected get cmHandler(): CodeMirrorSearchHighlighter {\n    if (!this._cmHandler) {\n      this._cmHandler = new CodeMirrorSearchHighlighter(\n        this.editor as CodeMirrorEditor\n      );\n    }\n    return this._cmHandler;\n  }\n\n  /**\n   * Text editor\n   */\n  protected abstract get editor(): CodeEditor.IEditor | null;\n  /**\n   * Editor content model\n   */\n  protected abstract get model(): T;\n\n  /**\n   * Changed signal to be emitted when search matches change.\n   */\n  get stateChanged(): ISignal<IBaseSearchProvider, void> {\n    return this._stateChanged;\n  }\n\n  /**\n   * Current match index\n   */\n  get currentMatchIndex(): number | null {\n    return this.isActive ? this.currentIndex : null;\n  }\n\n  /**\n   * Whether the cell search is active.\n   *\n   * This is used when applying search only on selected cells.\n   */\n  get isActive(): boolean {\n    return this._isActive;\n  }\n\n  /**\n   * Whether the search provider is disposed or not.\n   */\n  get isDisposed(): boolean {\n    return this._isDisposed;\n  }\n\n  /**\n   * Number of matches in the cell.\n   */\n  get matchesCount(): number {\n    return this.isActive ? this.cmHandler.matches.length : 0;\n  }\n\n  /**\n   * Clear currently highlighted match\n   */\n  clearHighlight(): Promise<void> {\n    this.currentIndex = null;\n    this.cmHandler.clearHighlight();\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Dispose the search provider\n   */\n  dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    Signal.clearData(this);\n    if (this.isActive) {\n      this.endQuery().catch(reason => {\n        console.error(`Failed to end search query on cells.`, reason);\n      });\n    }\n  }\n\n  /**\n   * Set `isActive` status.\n   *\n   * #### Notes\n   * It will start or end the search\n   *\n   * @param v New value\n   */\n  async setIsActive(v: boolean): Promise<void> {\n    if (this._isActive === v) {\n      return;\n    }\n    this._isActive = v;\n    if (this._isActive) {\n      if (this.query !== null) {\n        await this.startQuery(this.query, this.filters);\n      }\n    } else {\n      await this.endQuery();\n    }\n  }\n\n  /**\n   * Set whether search should be limitted to specified text selection.\n   */\n  async setSearchSelection(selection: CodeEditor.IRange | null): Promise<void> {\n    if (this._inSelection === selection) {\n      return;\n    }\n    this._inSelection = selection;\n    await this.updateCodeMirror(this.model.sharedModel.getSource());\n    this._stateChanged.emit();\n  }\n\n  /**\n   * Set whether user selection should be protected from modifications.\n   *\n   * If disabled, the selection will be updated on search and on editor focus\n   * to cover the current match. We need to protect selection from modifications\n   * for both: search in text and search in cells; since `setSearchSelection`\n   * is only telling us about search in text, we need to have an additional\n   * way to signal that either search in text or in cells is active, or for\n   * any other reason selection range should be protected.\n   */\n  setProtectSelection(v: boolean) {\n    this.cmHandler.protectSelection = v;\n  }\n\n  /**\n   * Initialize the search using the provided options. Should update the UI\n   * to highlight all matches and \"select\" the first match.\n   *\n   * @param query A RegExp to be use to perform the search\n   * @param filters Filter parameters to pass to provider\n   */\n  async startQuery(query: RegExp | null, filters?: IFilters): Promise<void> {\n    this.query = query;\n    this.filters = filters;\n\n    // Search input\n    const content = this.model.sharedModel.getSource();\n    await this.updateCodeMirror(content);\n    this.model.sharedModel.changed.connect(this.onSharedModelChanged, this);\n  }\n\n  /**\n   * Stop the search and clean any UI elements.\n   */\n  async endQuery(): Promise<void> {\n    await this.clearHighlight();\n    await this.cmHandler.endQuery();\n    this.currentIndex = null;\n  }\n\n  /**\n   * Highlight the next match.\n   *\n   * @returns The next match if there is one.\n   */\n  async highlightNext(\n    loop = true,\n    options?: IHighlightAdjacentMatchOptions\n  ): Promise<ISearchMatch | undefined> {\n    if (this.matchesCount === 0 || !this.isActive) {\n      this.currentIndex = null;\n    } else {\n      let match = await this.cmHandler.highlightNext(options);\n      if (match) {\n        this.currentIndex = this.cmHandler.currentIndex;\n      } else {\n        // Note: the loop logic is only used in single-editor (e.g. file editor)\n        // provider sub-classes, notebook has it's own loop logic and ignores\n        // `currentIndex` as set here.\n        this.currentIndex = loop ? 0 : null;\n      }\n      return match;\n    }\n\n    return Promise.resolve(this.getCurrentMatch());\n  }\n\n  /**\n   * Highlight the previous match.\n   *\n   * @returns The previous match if there is one.\n   */\n  async highlightPrevious(\n    loop = true,\n    options?: IHighlightAdjacentMatchOptions\n  ): Promise<ISearchMatch | undefined> {\n    if (this.matchesCount === 0 || !this.isActive) {\n      this.currentIndex = null;\n    } else {\n      let match = await this.cmHandler.highlightPrevious(options);\n      if (match) {\n        this.currentIndex = this.cmHandler.currentIndex;\n      } else {\n        this.currentIndex = loop ? this.matchesCount - 1 : null;\n      }\n      return match;\n    }\n\n    return Promise.resolve(this.getCurrentMatch());\n  }\n\n  /**\n   * Replace the currently selected match with the provided text.\n   *\n   * If no match is selected, it won't do anything.\n   *\n   * The caller of this method is expected to call `highlightNext` if after\n   * calling `replaceCurrentMatch()` attribute `this.currentIndex` is null.\n   * It is necesary to let the caller handle highlighting because this\n   * method is used in composition pattern (search engine of notebook cells)\n   * and highligthing on the composer (notebook) level needs to switch to next\n   * engine (cell) with matches.\n   *\n   * @param newText The replacement text.\n   * @returns Whether a replace occurred.\n   */\n  replaceCurrentMatch(\n    newText: string,\n    loop?: boolean,\n    options?: IReplaceOptions\n  ): Promise<boolean> {\n    if (!this.isActive) {\n      return Promise.resolve(false);\n    }\n\n    let occurred = false;\n\n    if (\n      this.currentIndex !== null &&\n      this.currentIndex < this.cmHandler.matches.length\n    ) {\n      const match = this.getCurrentMatch();\n      // If cursor there is no match selected, highlight the next match\n      if (!match) {\n        this.currentIndex = null;\n      } else {\n        this.cmHandler.matches.splice(this.currentIndex, 1);\n        this.currentIndex =\n          this.currentIndex < this.cmHandler.matches.length\n            ? Math.max(this.currentIndex - 1, 0)\n            : null;\n        const substitutedText = options?.regularExpression\n          ? match!.text.replace(this.query!, newText)\n          : newText;\n        const insertText = options?.preserveCase\n          ? GenericSearchProvider.preserveCase(match.text, substitutedText)\n          : substitutedText;\n        this.model.sharedModel.updateSource(\n          match!.position,\n          match!.position + match!.text.length,\n          insertText\n        );\n        occurred = true;\n      }\n    }\n\n    return Promise.resolve(occurred);\n  }\n\n  /**\n   * Replace all matches in the cell source with the provided text\n   *\n   * @param newText The replacement text.\n   * @returns Whether a replace occurred.\n   */\n  replaceAllMatches(\n    newText: string,\n    options?: IReplaceOptions\n  ): Promise<boolean> {\n    if (!this.isActive) {\n      return Promise.resolve(false);\n    }\n\n    let occurred = this.cmHandler.matches.length > 0;\n    let src = this.model.sharedModel.getSource();\n    let lastEnd = 0;\n    const finalSrc = this.cmHandler.matches.reduce((agg, match) => {\n      const start = match.position as number;\n      const end = start + match.text.length;\n      const substitutedText = options?.regularExpression\n        ? match!.text.replace(this.query!, newText)\n        : newText;\n      const insertText = options?.preserveCase\n        ? GenericSearchProvider.preserveCase(match.text, substitutedText)\n        : substitutedText;\n      const newStep = `${agg}${src.slice(lastEnd, start)}${insertText}`;\n      lastEnd = end;\n      return newStep;\n    }, '');\n\n    if (occurred) {\n      this.cmHandler.matches = [];\n      this.currentIndex = null;\n      this.model.sharedModel.setSource(`${finalSrc}${src.slice(lastEnd)}`);\n    }\n    return Promise.resolve(occurred);\n  }\n\n  /**\n   * Get the current match if it exists.\n   *\n   * @returns The current match\n   */\n  getCurrentMatch(): ISearchMatch | undefined {\n    if (this.currentIndex === null) {\n      return undefined;\n    } else {\n      let match: ISearchMatch | undefined = undefined;\n      if (this.currentIndex < this.cmHandler.matches.length) {\n        match = this.cmHandler.matches[this.currentIndex];\n      }\n      return match;\n    }\n  }\n\n  /**\n   * Callback on source change\n   *\n   * @param emitter Source of the change\n   * @param changes Source change\n   */\n  protected async onSharedModelChanged(\n    emitter: ISharedText,\n    changes: SourceChange\n  ): Promise<void> {\n    if (changes.sourceChange) {\n      await this.updateCodeMirror(emitter.getSource());\n      this._stateChanged.emit();\n    }\n  }\n\n  /**\n   * Update matches\n   */\n  protected async updateCodeMirror(content: string) {\n    if (this.query !== null && this.isActive) {\n      const allMatches = await TextSearchEngine.search(this.query, content);\n      if (this._inSelection) {\n        const editor = this.editor!;\n        const start = editor.getOffsetAt(this._inSelection.start);\n        const end = editor.getOffsetAt(this._inSelection.end);\n        this.cmHandler.matches = allMatches.filter(\n          match => match.position >= start && match.position <= end\n        );\n        // A special case to always have a current match when in line selection mode.\n        if (\n          this.cmHandler.currentIndex === null &&\n          this.cmHandler.matches.length > 0\n        ) {\n          await this.cmHandler.highlightNext({\n            from: 'selection',\n            select: false,\n            scroll: false\n          });\n        }\n        this.currentIndex = this.cmHandler.currentIndex;\n      } else {\n        this.cmHandler.matches = allMatches;\n      }\n    } else {\n      this.cmHandler.matches = [];\n    }\n  }\n\n  /**\n   * Current match index\n   */\n  protected currentIndex: number | null = null;\n  /**\n   * Current search filters\n   */\n  protected filters: IFilters | undefined;\n  /**\n   * Current search query\n   */\n  protected query: RegExp | null = null;\n  // Needs to be protected so subclass can emit the signal too.\n  protected _stateChanged: Signal<IBaseSearchProvider, void>;\n  private _isActive = true;\n  private _inSelection: CodeEditor.IRange | null = null;\n  private _isDisposed = false;\n  private _cmHandler: CodeMirrorSearchHighlighter | null = null;\n}\n\n/**\n * Matches to be highlighted.\n */\ninterface IEffectValue {\n  matches: ISearchMatch[];\n  currentMatch: ISearchMatch | null;\n}\n\n/**\n * Helper class to highlight texts in a code mirror editor.\n *\n * Highlighted texts (aka `matches`) must be provided through\n * the `matches` attributes.\n *\n * **NOTES:**\n * - to retain the selection visibility `drawSelection` extension is needed.\n * - highlighting starts from the cursor (if editor is focused and `from` is set\n *   to `'auto'`, cursor moved, or `from` argument is set to `'selection'` or\n *   `'selection-start'`), or from last \"current\" match otherwise.\n * - `currentIndex` is the (readonly) source of truth for the current match.\n */\nexport class CodeMirrorSearchHighlighter {\n  /**\n   * Constructor\n   *\n   * @param editor The CodeMirror editor\n   */\n  constructor(editor: CodeMirrorEditor | null) {\n    this._cm = editor;\n    this._matches = new Array<ISearchMatch>();\n    this._currentIndex = null;\n\n    this._highlightEffect = StateEffect.define<IEffectValue>({\n      map: (value, mapping) => {\n        const transform = (v: ISearchMatch) => ({\n          text: v.text,\n          position: mapping.mapPos(v.position)\n        });\n        return {\n          matches: value.matches.map(transform),\n          currentMatch: value.currentMatch\n            ? transform(value.currentMatch)\n            : null\n        };\n      }\n    });\n    this._highlightMark = Decoration.mark({ class: 'cm-searching' });\n    this._currentMark = Decoration.mark({ class: 'jp-current-match' });\n\n    this._highlightField = StateField.define<DecorationSet>({\n      create: () => {\n        return Decoration.none;\n      },\n      update: (highlights, transaction) => {\n        highlights = highlights.map(transaction.changes);\n        for (let ef of transaction.effects) {\n          if (ef.is(this._highlightEffect)) {\n            const e = ef as StateEffect<IEffectValue>;\n            if (e.value.matches.length) {\n              // Note: nesting will vary; sometimes `.cm-searching` will be\n              // inside `.jp-current-match`, sometime the other way round.\n              highlights = highlights.update({\n                add: e.value.matches.map(m =>\n                  this._highlightMark.range(\n                    m.position,\n                    m.position + m.text.length\n                  )\n                ),\n                // filter out old marks\n                filter: () => false\n              });\n              highlights = highlights.update({\n                add: e.value.currentMatch\n                  ? [\n                      this._currentMark.range(\n                        e.value.currentMatch.position,\n                        e.value.currentMatch.position +\n                          e.value.currentMatch.text.length\n                      )\n                    ]\n                  : []\n              });\n            } else {\n              highlights = Decoration.none;\n            }\n          }\n        }\n        return highlights;\n      },\n      provide: f => EditorView.decorations.from(f)\n    });\n\n    this._domEventHandlers = EditorView.domEventHandlers({\n      focus: () => {\n        // Set cursor on active match when editor gets focused.\n        this._selectCurrentMatch();\n      }\n    });\n  }\n\n  /**\n   * The current index of the selected match.\n   */\n  get currentIndex(): number | null {\n    return this._currentIndex;\n  }\n\n  /**\n   * The list of matches\n   */\n  get matches(): ISearchMatch[] {\n    return this._matches;\n  }\n  set matches(v: ISearchMatch[]) {\n    this._matches = v;\n    if (\n      this._currentIndex !== null &&\n      this._currentIndex > this._matches.length\n    ) {\n      this._currentIndex = this._matches.length > 0 ? 0 : null;\n    }\n    this._highlightCurrentMatch({ select: false });\n  }\n\n  private _current: ISearchMatch | null = null;\n\n  /**\n   * Whether the cursor/selection should not be modified.\n   */\n  get protectSelection(): boolean {\n    return this._protectSelection;\n  }\n  set protectSelection(v: boolean) {\n    this._protectSelection = v;\n  }\n  private _protectSelection: boolean;\n\n  /**\n   * Clear all highlighted matches\n   */\n  clearHighlight(): void {\n    this._currentIndex = null;\n    this._highlightCurrentMatch();\n  }\n\n  /**\n   * Clear the highlighted matches.\n   */\n  endQuery(): Promise<void> {\n    this._currentIndex = null;\n    this._matches = [];\n\n    if (this._cm) {\n      this._cm.editor.dispatch({\n        effects: this._highlightEffect.of({ matches: [], currentMatch: null })\n      });\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Highlight the next match\n   *\n   * @returns The next match if available\n   */\n  highlightNext(\n    options?: IHighlightAdjacentMatchOptions\n  ): Promise<ISearchMatch | undefined> {\n    this._currentIndex = this._findNext(false, options?.from ?? 'auto');\n    this._highlightCurrentMatch(options);\n    return Promise.resolve(\n      this._currentIndex !== null\n        ? this._matches[this._currentIndex]\n        : undefined\n    );\n  }\n\n  /**\n   * Highlight the previous match\n   *\n   * @returns The previous match if available\n   */\n  highlightPrevious(\n    options?: IHighlightAdjacentMatchOptions\n  ): Promise<ISearchMatch | undefined> {\n    this._currentIndex = this._findNext(true, options?.from ?? 'auto');\n    this._highlightCurrentMatch(options);\n    return Promise.resolve(\n      this._currentIndex !== null\n        ? this._matches[this._currentIndex]\n        : undefined\n    );\n  }\n\n  /**\n   * Set the editor\n   *\n   * @param editor Editor\n   */\n  setEditor(editor: CodeMirrorEditor): void {\n    if (this._cm) {\n      throw new Error('CodeMirrorEditor already set.');\n    } else {\n      this._cm = editor;\n      if (this._currentIndex !== null) {\n        this._highlightCurrentMatch();\n      }\n      this._cm.editor.dispatch({\n        effects: StateEffect.appendConfig.of(this._domEventHandlers)\n      });\n      this._refresh();\n    }\n  }\n\n  private _selectCurrentMatch(scroll = true): void {\n    // This method has two responsibilities:\n    // 1) Scroll the current match into the view - useful for long lines,\n    //    and file editors with more lines that fit on the screen\n    // 2) When user has focus on the editor (not search box) and presses\n    //    ctrl + g/ctrl + shift + g to jump to next match they want their\n    //    cursor to jump too.\n    // We execute (1) and (2) together as CodeMirror has a special code path\n    // to handle both in a single dispatch.\n    // The (2) case is inapplicable to search in selection mode, as it would\n    // invalidate the query selection, so in that case we only execute (1).\n    const match = this._current;\n    if (!match) {\n      return;\n    }\n    if (!this._cm) {\n      return;\n    }\n    const cursor = {\n      anchor: match.position,\n      head: match.position + match.text.length\n    };\n    const selection = this._cm.editor.state.selection.main;\n    if (\n      (selection.from === match.position &&\n        selection.to === match.position + match.text.length) ||\n      this._protectSelection\n    ) {\n      // Correct selection is already set or search is restricted to selection:\n      // scroll without changing the selection.\n      if (scroll) {\n        this._cm.editor.dispatch({\n          effects: EditorView.scrollIntoView(\n            EditorSelection.range(cursor.anchor, cursor.head)\n          )\n        });\n        return;\n      }\n    } else {\n      this._cm.editor.dispatch({\n        selection: cursor,\n        scrollIntoView: scroll\n      });\n    }\n  }\n\n  private _highlightCurrentMatch(options?: IHighlightMatchOptions): void {\n    if (!this._cm) {\n      // no-op\n      return;\n    }\n\n    // Highlight the current index\n    if (this._currentIndex !== null) {\n      const match = this.matches[this._currentIndex];\n      this._current = match;\n      // We do not change selection nor scroll if:\n      // - user is selecting text,\n      // - document was modified\n      if (options?.select ?? true) {\n        if (this._cm.hasFocus()) {\n          // If editor is focused we actually set the cursor on the match.\n          this._selectCurrentMatch(options?.scroll ?? true);\n        } else if (options?.scroll ?? true) {\n          // otherwise we just scroll to preserve the selection.\n          this._cm.editor.dispatch({\n            effects: EditorView.scrollIntoView(match.position)\n          });\n        }\n      }\n    } else {\n      this._current = null;\n    }\n    this._refresh();\n  }\n\n  private _refresh(): void {\n    if (!this._cm) {\n      // no-op\n      return;\n    }\n    let effects: StateEffect<unknown>[] = [\n      this._highlightEffect.of({\n        matches: this.matches,\n        currentMatch: this._current\n      })\n    ];\n\n    if (!this._cm!.state.field(this._highlightField, false)) {\n      effects.push(StateEffect.appendConfig.of([this._highlightField]));\n    }\n    this._cm!.editor.dispatch({ effects });\n  }\n\n  private _findNext(\n    reverse: boolean,\n    from: SearchStartAnchor = 'auto'\n  ): number | null {\n    if (this._matches.length === 0) {\n      // No-op\n      return null;\n    }\n\n    // If the editor has not be instantiated yet (e.g. a cell that has not yet be seen in the viewport),\n    // force the behavior\n    if (!this._cm && !['previous-match', 'start'].includes(from)) {\n      from = 'previous-match';\n    }\n\n    let lastPosition = 0;\n    if (\n      (from === 'auto' && (this._cm?.hasFocus() ?? false)) ||\n      from === 'selection'\n    ) {\n      const cursor = this._cm!.state.selection.main;\n      lastPosition = reverse ? cursor.anchor : cursor.head;\n    } else if (from === 'selection-start') {\n      const cursor = this._cm!.state.selection.main;\n      lastPosition = Math.min(cursor.anchor, cursor.head);\n    } else if (from === 'start') {\n      lastPosition = 0;\n    } else if (this._current) {\n      lastPosition = reverse\n        ? this._current.position\n        : this._current.position + this._current.text.length;\n    }\n    if (lastPosition === 0 && reverse && this.currentIndex === null) {\n      // The default position is (0, 0) but we want to start from the end in that case\n      // Fallback to the end of the latest match if the editor is not instantiated\n      lastPosition =\n        this._cm?.doc.length ??\n        endLastMatch(this._matches[this._matches.length - 1]);\n    }\n\n    const position = lastPosition;\n\n    let found = Utils.findNext(\n      this._matches,\n      position,\n      0,\n      this._matches.length - 1\n    );\n\n    if (found === null) {\n      // Don't loop\n      return reverse ? this._matches.length - 1 : null;\n    }\n\n    if (reverse) {\n      found -= 1;\n      if (found < 0) {\n        // Don't loop\n        return null;\n      }\n    }\n\n    return found;\n\n    function endLastMatch(lastMatch?: ISearchMatch): number {\n      return lastMatch ? lastMatch.position + lastMatch.text.length : 0;\n    }\n  }\n\n  private _cm: CodeMirrorEditor | null;\n  private _currentIndex: number | null;\n  private _matches: ISearchMatch[];\n  private _highlightEffect: StateEffectType<IEffectValue>;\n  private _highlightMark: Decoration;\n  private _currentMark: Decoration;\n  private _highlightField: StateField<DecorationSet>;\n  private _domEventHandlers: Extension;\n}\n\n/**\n * Helpers namespace\n */\nnamespace Utils {\n  /**\n   * Find the closest match at `position` just after it.\n   *\n   * #### Notes\n   * Search is done using a binary search algorithm\n   *\n   * @param matches List of matches\n   * @param position Searched position\n   * @param lowerBound Lower range index\n   * @param higherBound High range index\n   * @returns The next match or null if none exists\n   */\n  export function findNext(\n    matches: ISearchMatch[],\n    position: number,\n    lowerBound = 0,\n    higherBound = Infinity\n  ): number | null {\n    higherBound = Math.min(matches.length - 1, higherBound);\n\n    while (lowerBound <= higherBound) {\n      let middle = Math.floor(0.5 * (lowerBound + higherBound));\n      const currentPosition = matches[middle].position;\n\n      if (currentPosition < position) {\n        lowerBound = middle + 1;\n        if (\n          lowerBound < matches.length &&\n          matches[lowerBound].position > position\n        ) {\n          return lowerBound;\n        }\n      } else if (currentPosition > position) {\n        higherBound = middle - 1;\n        if (higherBound > 0 && matches[higherBound].position < position) {\n          return middle;\n        }\n      } else {\n        return middle;\n      }\n    }\n\n    // Next could be the first item\n    const first = lowerBound > 0 ? lowerBound - 1 : 0;\n    const match = matches[first];\n    return match.position >= position ? first : null;\n  }\n}\n", "/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n\nimport type { LanguageSupport } from '@codemirror/language';\nimport type { Extension, StateEffect } from '@codemirror/state';\nimport type { EditorView } from '@codemirror/view';\nimport type { CodeEditor } from '@jupyterlab/codeeditor';\nimport type { ITranslator } from '@jupyterlab/translation';\nimport { ReadonlyJSONObject, Token } from '@lumino/coreutils';\nimport type { IDisposable } from '@lumino/disposable';\nimport type { ISignal } from '@lumino/signaling';\n\n/**\n * Dynamically configurable editor extension interface.\n */\nexport interface IConfigurableExtension<T> {\n  /**\n   * Create an editor extension for the provided value.\n   *\n   * @param value Editor extension parameter value\n   * @returns The editor extension\n   */\n  instance(value: T): Extension;\n  /**\n   * Reconfigure an editor extension.\n   *\n   * ### Notes\n   * Return `null` if the value does not trigger\n   * a state effect. In particular for immutable extension.\n   *\n   * @param value Editor extension value\n   * @returns Editor state effect\n   */\n  reconfigure(value: T): StateEffect<T> | null;\n}\n\n/**\n * Editor language token.\n */\nexport const IEditorExtensionRegistry = new Token<IEditorExtensionRegistry>(\n  '@jupyterlab/codemirror:IEditorExtensionRegistry',\n  `A registry for CodeMirror extension factories.`\n);\n\n/**\n * Interface of CodeMirror editor extensions handler\n *\n * ### Notes\n * This handler is instantiated for each editor to manage its own\n * set of extensions.\n */\nexport interface IExtensionsHandler extends IDisposable {\n  /**\n   * Signal triggered when the editor configuration changes.\n   * It provides the mapping of the new configuration (only those that changed).\n   *\n   * It should result in a call to `IExtensionsHandler.reconfigureExtensions`.\n   */\n  readonly configChanged: ISignal<this, Record<string, any>>;\n\n  /**\n   * Get a config option for the editor.\n   */\n  getOption(option: string): unknown;\n\n  /**\n   * Whether the option exists or not.\n   */\n  hasOption(option: string): boolean;\n\n  /**\n   * Set a config option for the editor.\n   *\n   * You will need to reconfigure the editor extensions by listening\n   * to `IExtensionsHandler.configChanged`.\n   */\n  setOption(option: string, value: unknown): void;\n\n  /**\n   * Set config options for the editor.\n   *\n   * You will need to reconfigure the editor extensions by listening\n   * to `IExtensionsHandler.configChanged`.\n   *\n   * This method is preferred when setting several options. The\n   * options are set within an operation, which only performs\n   * the costly update at the end, and not after every option\n   * is set.\n   */\n  setOptions(options: Record<string, any>): void;\n\n  /**\n   * Returns the list of initial extensions of an editor.\n   *\n   * @returns The initial editor extensions\n   */\n  getInitialExtensions(): Extension[];\n\n  /**\n   * Appends extensions to the top-level configuration of the\n   * editor.\n   *\n   * @alpha\n   * @param view Editor view\n   * @param extension Editor extension to inject\n   */\n  injectExtension(view: EditorView, extension: Extension): void;\n\n  /**\n   * Reconfigures the extension mapped with key with the provided value.\n   *\n   * @param view Editor view\n   * @param key Parameter unique key\n   * @param value Parameter value to be applied\n   */\n  reconfigureExtension<T>(view: EditorView, key: string, value: T): void;\n\n  /**\n   * Reconfigures all the extensions mapped with the options from the\n   * provided partial configuration.\n   *\n   * @param view Editor view\n   * @param configuration Editor configuration\n   */\n  reconfigureExtensions(\n    view: EditorView,\n    configuration: Record<string, any>\n  ): void;\n}\n\n/**\n * Editor extension factory interface.\n *\n * @template T Extension parameter type.\n */\nexport interface IEditorExtensionFactory<T = undefined> {\n  /**\n   * Editor extension unique identifier.\n   */\n  readonly name: string;\n  /**\n   * Extension factory.\n   *\n   * @param options\n   * @returns The extension builder or null if the extension is not active for that document\n   */\n  readonly factory: (\n    options: IEditorExtensionFactory.IOptions\n  ) => IConfigurableExtension<T> | null;\n  /**\n   * Extension default value\n   *\n   * ### Notes\n   * If undefined but has a schema, the default value will be `null` to be JSON serializable.\n   */\n  readonly default?: T;\n  /**\n   * JSON schema defining the configurable option through user settings.\n   *\n   * If this is defined, every time the setting changes, `IConfigurableExtension.reconfigure`\n   * will be called with the new setting value.\n   *\n   * ### Notes\n   * If no default value is provided, `IEditorExtensionFactory.default` will be used.\n   * If the extension is to be handled by the code only, this should not be defined.\n   */\n  readonly schema?: ReadonlyJSONObject;\n}\n\n/**\n * CodeMirror extension factory namespace\n */\nexport namespace IEditorExtensionFactory {\n  /**\n   * CodeMirror extension factory options\n   */\n  export interface IOptions {\n    /**\n     * Whether the editor will be inline or not.\n     */\n    inline: boolean;\n    /**\n     * The model used by the editor.\n     */\n    model: CodeEditor.IModel;\n  }\n}\n\n/**\n * Interface for generating editor configuration registry.\n */\nexport interface IEditorExtensionRegistry {\n  /**\n   * Base editor configuration\n   *\n   * This is the default configuration.\n   */\n  readonly baseConfiguration: Record<string, any>;\n\n  /**\n   * Add a default editor extension\n   *\n   * @template T Extension parameter type\n   * @param factory Extension factory\n   */\n  addExtension<T>(factory: IEditorExtensionFactory<T>): void;\n\n  /**\n   * Create a new extensions handler for an editor\n   *\n   * @param options Extensions options and initial editor configuration\n   */\n  createNew(\n    options: IEditorExtensionFactory.IOptions & {\n      /**\n       * The configuration options for the editor.\n       */\n      config?: Record<string, any>;\n    }\n  ): IExtensionsHandler;\n}\n\n/**\n * Editor factory constructor options\n */\nexport interface IEditorFactoryOptions {\n  /**\n   * Editor extensions registry\n   */\n  extensions?: IEditorExtensionRegistry;\n  /**\n   * Editor languages registry\n   */\n  languages?: IEditorLanguageRegistry;\n  /**\n   * Application translation registry\n   */\n  translator?: ITranslator;\n}\n\n/**\n * Editor language token.\n */\nexport const IEditorLanguageRegistry = new Token<IEditorLanguageRegistry>(\n  '@jupyterlab/codemirror:IEditorLanguageRegistry',\n  'A registry for CodeMirror languages.'\n);\n\n/**\n * The interface of a codemirror language specification.\n */\nexport interface IEditorLanguage {\n  /**\n   * Language name.\n   */\n  readonly name: string;\n  /**\n   * Language displayed name.\n   */\n  readonly displayName?: string;\n  /**\n   * Language name alias.\n   */\n  readonly alias?: readonly string[];\n  /**\n   * Language mime types.\n   */\n  readonly mime: string | readonly string[];\n  /**\n   * Language support loader.\n   */\n  readonly load?: () => Promise<LanguageSupport>;\n  /**\n   * Supported file extensions.\n   */\n  readonly extensions?: readonly string[];\n  /**\n   * Filename expression supported by the language.\n   */\n  readonly filename?: RegExp;\n  /**\n   * CodeMirror language support.\n   *\n   * ### Notes\n   * It can provided directly or it will be obtained using `load`.\n   */\n  support?: LanguageSupport;\n}\n\n/**\n * Editor language interface\n */\nexport interface IEditorLanguageRegistry {\n  /**\n   * Register a new language for CodeMirror\n   *\n   * @param language Language to register\n   */\n  addLanguage(language: IEditorLanguage): void;\n\n  /**\n   * Find a codemirror language by name or CodeMirror spec.\n   *\n   * @param language The CodeMirror language\n   * @param fallback Whether to fallback to default mimetype spec or not\n   * @returns The language or null\n   */\n  findBest(\n    language: string | IEditorLanguage,\n    fallback?: boolean\n  ): IEditorLanguage | null;\n\n  /**\n   * Find a codemirror language by MIME.\n   *\n   * @param mime Mime type to look for\n   * @returns The language or null\n   */\n  findByMIME(mime: string | readonly string[]): IEditorLanguage | null;\n\n  /**\n   * Find a codemirror language by name.\n   *\n   * @param name The language name\n   * @returns The language or null\n   */\n  findByName(name: string): IEditorLanguage | null;\n\n  /**\n   * Find a codemirror language by extension.\n   *\n   * @param ext The extension name\n   * @returns The language or null\n   */\n  findByExtension(ext: string | readonly string[]): IEditorLanguage | null;\n\n  /**\n   * Find a codemirror language by filename.\n   *\n   * @param name File name\n   * @returns The language or null\n   */\n  findByFileName(name: string): IEditorLanguage | null;\n\n  /**\n   * Load a CodeMirror language specified by name or Codemirror spec.\n   *\n   * @param language - The language to ensure.  If it is a string, uses {@link findBest}\n   *   to get the appropriate spec.\n   *\n   * @returns A promise that resolves when the language is available.\n   */\n  getLanguage(\n    language: string | IEditorLanguage\n  ): Promise<IEditorLanguage | null>;\n\n  /**\n   * Get the raw list of available languages specs.\n   *\n   * @returns The available languages\n   */\n  getLanguages(): IEditorLanguage[];\n\n  /**\n   * Parse and style a string.\n   *\n   * @param code Code to highlight\n   * @param language Code language\n   * @param el HTML element into which the highlighted code will be inserted\n   */\n  highlight(\n    code: string,\n    language: IEditorLanguage | null,\n    el: HTMLElement\n  ): Promise<void>;\n}\n\n/**\n * Editor theme token.\n */\nexport const IEditorThemeRegistry = new Token<IEditorThemeRegistry>(\n  '@jupyterlab/codemirror:IEditorThemeRegistry',\n  'A registry for CodeMirror theme.'\n);\n\n/**\n * Editor theme interface\n */\nexport interface IEditorTheme {\n  /**\n   * Theme unique identifier\n   */\n  readonly name: string;\n  /**\n   * Theme name\n   */\n  readonly displayName?: string;\n  /**\n   * Editor extension for the theme\n   */\n  readonly theme: Extension;\n}\n\n/**\n * Theme editor registry interface\n */\nexport interface IEditorThemeRegistry {\n  /**\n   * Register a new theme.\n   *\n   * @param theme Codemirror 6 theme\n   */\n  addTheme(theme: IEditorTheme): void;\n\n  /**\n   * Get the default CodeMirror 6 theme for JupyterLab\n   *\n   * @returns Default theme as a CodeMirror extension\n   */\n  defaultTheme(): Extension;\n\n  /**\n   * Get a theme.\n   *\n   * #### Notes\n   * It falls back to the default theme\n   *\n   * @param name Theme name\n   * @returns Theme extension\n   */\n  getTheme(name: string): Extension;\n\n  /**\n   * Get all themes\n   */\n  readonly themes: IEditorTheme[];\n}\n", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module codemirror\n */\n\nexport * from './commands';\nexport * from './editor';\nexport * from './extension';\nexport * from './extensions';\nexport * from './factory';\nexport * from './language';\nexport * from './mimetype';\nexport * from './searchprovider';\nexport * from './theme';\nexport * from './token';\n", " \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8867c861f9f125da279c", "/** @flow */\r\nimport Highlighter from './Highlighter'\r\n\r\nexport default Highlighter\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js", "/* @flow */\r\nimport { findAll } from 'highlight-words-core'\r\nimport PropTypes from 'prop-types'\r\nimport { createElement } from 'react'\r\nimport memoizeOne from 'memoize-one'\r\n\r\nHighlighter.propTypes = {\r\n  activeClassName: PropTypes.string,\r\n  activeIndex: PropTypes.number,\r\n  activeStyle: PropTypes.object,\r\n  autoEscape: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  findChunks: PropTypes.func,\r\n  highlightClassName: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.string\r\n  ]),\r\n  highlightStyle: PropTypes.object,\r\n  highlightTag: PropTypes.oneOfType([\r\n    PropTypes.node,\r\n    PropTypes.func,\r\n    PropTypes.string\r\n  ]),\r\n  sanitize: PropTypes.func,\r\n  searchWords: PropTypes.arrayOf(\r\n    PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.instanceOf(RegExp)\r\n    ])\r\n  ).isRequired,\r\n  textToHighlight: PropTypes.string.isRequired,\r\n  unhighlightTag: PropTypes.oneOfType([\r\n    PropTypes.node,\r\n    PropTypes.func,\r\n    PropTypes.string\r\n  ]),\r\n  unhighlightClassName: PropTypes.string,\r\n  unhighlightStyle: PropTypes.object\r\n}\r\n\r\n/**\r\n * Highlights all occurrences of search terms (searchText) within a string (textToHighlight).\r\n * This function returns an array of strings and <span>s (wrapping highlighted words).\r\n */\r\nexport default function Highlighter ({\r\n  activeClassName = '',\r\n  activeIndex = -1,\r\n  activeStyle,\r\n  autoEscape,\r\n  caseSensitive = false,\r\n  className,\r\n  findChunks,\r\n  highlightClassName = '',\r\n  highlightStyle = {},\r\n  highlightTag = 'mark',\r\n  sanitize,\r\n  searchWords,\r\n  textToHighlight,\r\n  unhighlightTag = 'span',\r\n  unhighlightClassName = '',\r\n  unhighlightStyle,\r\n  ...rest\r\n}) {\r\n  const chunks = findAll({\r\n    autoEscape,\r\n    caseSensitive,\r\n    findChunks,\r\n    sanitize,\r\n    searchWords,\r\n    textToHighlight\r\n  })\r\n  const HighlightTag = highlightTag\r\n  let highlightIndex = -1\r\n  let highlightClassNames = ''\r\n  let highlightStyles\r\n\r\n  const lowercaseProps = object => {\r\n    const mapped = {}\r\n    for (let key in object) {\r\n      mapped[key.toLowerCase()] = object[key]\r\n    }\r\n    return mapped\r\n  }\r\n  const memoizedLowercaseProps = memoizeOne(lowercaseProps)\r\n\r\n  return createElement('span', {\r\n    className,\r\n    ...rest,\r\n    children: chunks.map((chunk, index) => {\r\n      const text = textToHighlight.substr(chunk.start, chunk.end - chunk.start)\r\n\r\n      if (chunk.highlight) {\r\n        highlightIndex++\r\n\r\n        let highlightClass\r\n        if (typeof highlightClassName === 'object') {\r\n          if (!caseSensitive) {\r\n            highlightClassName = memoizedLowercaseProps(highlightClassName)\r\n            highlightClass = highlightClassName[text.toLowerCase()]\r\n          } else {\r\n            highlightClass = highlightClassName[text]\r\n          }\r\n        } else {\r\n          highlightClass = highlightClassName\r\n        }\r\n\r\n        const isActive = highlightIndex === +activeIndex\r\n\r\n        highlightClassNames = `${highlightClass} ${isActive ? activeClassName : ''}`\r\n        highlightStyles = isActive === true && activeStyle != null\r\n          ? Object.assign({}, highlightStyle, activeStyle)\r\n          : highlightStyle\r\n\r\n        const props = {\r\n          children: text,\r\n          className: highlightClassNames,\r\n          key: index,\r\n          style: highlightStyles\r\n        }\r\n\r\n        // Don't attach arbitrary props to DOM elements; this triggers React DEV warnings (https://fb.me/react-unknown-prop)\r\n        // Only pass through the highlightIndex attribute for custom components.\r\n        if (typeof HighlightTag !== 'string') {\r\n          props.highlightIndex = highlightIndex\r\n        }\r\n\r\n        return createElement(HighlightTag, props)\r\n      } else {\r\n        return createElement(unhighlightTag, {\r\n          children: text,\r\n          className: unhighlightClassName,\r\n          key: index,\r\n          style: unhighlightStyle\r\n        })\r\n      }\r\n    })\r\n  })\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Highlighter.js", "module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _utils = __webpack_require__(2);\n\t\n\tObject.defineProperty(exports, 'combineChunks', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _utils.combineChunks;\n\t  }\n\t});\n\tObject.defineProperty(exports, 'fillInChunks', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _utils.fillInChunks;\n\t  }\n\t});\n\tObject.defineProperty(exports, 'findAll', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _utils.findAll;\n\t  }\n\t});\n\tObject.defineProperty(exports, 'findChunks', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _utils.findChunks;\n\t  }\n\t});\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * Creates an array of chunk objects representing both higlightable and non highlightable pieces of text that match each search word.\n\t * @return Array of \"chunks\" (where a Chunk is { start:number, end:number, highlight:boolean })\n\t */\n\tvar findAll = exports.findAll = function findAll(_ref) {\n\t  var autoEscape = _ref.autoEscape,\n\t      _ref$caseSensitive = _ref.caseSensitive,\n\t      caseSensitive = _ref$caseSensitive === undefined ? false : _ref$caseSensitive,\n\t      _ref$findChunks = _ref.findChunks,\n\t      findChunks = _ref$findChunks === undefined ? defaultFindChunks : _ref$findChunks,\n\t      sanitize = _ref.sanitize,\n\t      searchWords = _ref.searchWords,\n\t      textToHighlight = _ref.textToHighlight;\n\t  return fillInChunks({\n\t    chunksToHighlight: combineChunks({\n\t      chunks: findChunks({\n\t        autoEscape: autoEscape,\n\t        caseSensitive: caseSensitive,\n\t        sanitize: sanitize,\n\t        searchWords: searchWords,\n\t        textToHighlight: textToHighlight\n\t      })\n\t    }),\n\t    totalLength: textToHighlight ? textToHighlight.length : 0\n\t  });\n\t};\n\t\n\t/**\n\t * Takes an array of {start:number, end:number} objects and combines chunks that overlap into single chunks.\n\t * @return {start:number, end:number}[]\n\t */\n\tvar combineChunks = exports.combineChunks = function combineChunks(_ref2) {\n\t  var chunks = _ref2.chunks;\n\t\n\t  chunks = chunks.sort(function (first, second) {\n\t    return first.start - second.start;\n\t  }).reduce(function (processedChunks, nextChunk) {\n\t    // First chunk just goes straight in the array...\n\t    if (processedChunks.length === 0) {\n\t      return [nextChunk];\n\t    } else {\n\t      // ... subsequent chunks get checked to see if they overlap...\n\t      var prevChunk = processedChunks.pop();\n\t      if (nextChunk.start <= prevChunk.end) {\n\t        // It may be the case that prevChunk completely surrounds nextChunk, so take the\n\t        // largest of the end indeces.\n\t        var endIndex = Math.max(prevChunk.end, nextChunk.end);\n\t        processedChunks.push({ start: prevChunk.start, end: endIndex });\n\t      } else {\n\t        processedChunks.push(prevChunk, nextChunk);\n\t      }\n\t      return processedChunks;\n\t    }\n\t  }, []);\n\t\n\t  return chunks;\n\t};\n\t\n\t/**\n\t * Examine text for any matches.\n\t * If we find matches, add them to the returned array as a \"chunk\" object ({start:number, end:number}).\n\t * @return {start:number, end:number}[]\n\t */\n\tvar defaultFindChunks = function defaultFindChunks(_ref3) {\n\t  var autoEscape = _ref3.autoEscape,\n\t      caseSensitive = _ref3.caseSensitive,\n\t      _ref3$sanitize = _ref3.sanitize,\n\t      sanitize = _ref3$sanitize === undefined ? identity : _ref3$sanitize,\n\t      searchWords = _ref3.searchWords,\n\t      textToHighlight = _ref3.textToHighlight;\n\t\n\t  textToHighlight = sanitize(textToHighlight);\n\t\n\t  return searchWords.filter(function (searchWord) {\n\t    return searchWord;\n\t  }) // Remove empty words\n\t  .reduce(function (chunks, searchWord) {\n\t    searchWord = sanitize(searchWord);\n\t\n\t    if (autoEscape) {\n\t      searchWord = escapeRegExpFn(searchWord);\n\t    }\n\t\n\t    var regex = new RegExp(searchWord, caseSensitive ? 'g' : 'gi');\n\t\n\t    var match = void 0;\n\t    while (match = regex.exec(textToHighlight)) {\n\t      var start = match.index;\n\t      var end = regex.lastIndex;\n\t      // We do not return zero-length matches\n\t      if (end > start) {\n\t        chunks.push({ start: start, end: end });\n\t      }\n\t\n\t      // Prevent browsers like Firefox from getting stuck in an infinite loop\n\t      // See http://www.regexguru.com/2008/04/watch-out-for-zero-length-matches/\n\t      if (match.index == regex.lastIndex) {\n\t        regex.lastIndex++;\n\t      }\n\t    }\n\t\n\t    return chunks;\n\t  }, []);\n\t};\n\t// Allow the findChunks to be overridden in findAll,\n\t// but for backwards compatibility we export as the old name\n\texports.findChunks = defaultFindChunks;\n\t\n\t/**\n\t * Given a set of chunks to highlight, create an additional set of chunks\n\t * to represent the bits of text between the highlighted text.\n\t * @param chunksToHighlight {start:number, end:number}[]\n\t * @param totalLength number\n\t * @return {start:number, end:number, highlight:boolean}[]\n\t */\n\t\n\tvar fillInChunks = exports.fillInChunks = function fillInChunks(_ref4) {\n\t  var chunksToHighlight = _ref4.chunksToHighlight,\n\t      totalLength = _ref4.totalLength;\n\t\n\t  var allChunks = [];\n\t  var append = function append(start, end, highlight) {\n\t    if (end - start > 0) {\n\t      allChunks.push({\n\t        start: start,\n\t        end: end,\n\t        highlight: highlight\n\t      });\n\t    }\n\t  };\n\t\n\t  if (chunksToHighlight.length === 0) {\n\t    append(0, totalLength, false);\n\t  } else {\n\t    var lastIndex = 0;\n\t    chunksToHighlight.forEach(function (chunk) {\n\t      append(lastIndex, chunk.start, false);\n\t      append(chunk.start, chunk.end, true);\n\t      lastIndex = chunk.end;\n\t    });\n\t    append(lastIndex, totalLength, false);\n\t  }\n\t  return allChunks;\n\t};\n\t\n\tfunction identity(value) {\n\t  return value;\n\t}\n\t\n\tfunction escapeRegExpFn(str) {\n\t  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n\t}\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/highlight-words-core/dist/index.js\n// module id = 3\n// module chunks = 0", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/index.js\n// module id = 4\n// module chunks = 0", "// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 5\n// module chunks = 0", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          invariant(\n            false,\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            warning(\n              false,\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `%s` prop on `%s`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n              propFullName,\n              componentName\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues);\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (propValue.hasOwnProperty(key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        warning(\n          false,\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received %s at index %s.',\n          getPostfixForTypeWarning(checker),\n          i\n        );\n        return emptyFunction.thatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/factoryWithTypeCheckers.js\n// module id = 6\n// module chunks = 0", "\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/emptyFunction.js\n// module id = 7\n// module chunks = 0", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/invariant.js\n// module id = 8\n// module chunks = 0", "/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  var printWarning = function printWarning(format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/warning.js\n// module id = 9\n// module chunks = 0", "/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 10\n// module chunks = 0", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/lib/ReactPropTypesSecret.js\n// module id = 11\n// module chunks = 0", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== 'production') {\n  var invariant = require('fbjs/lib/invariant');\n  var warning = require('fbjs/lib/warning');\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/checkPropTypes.js\n// module id = 12\n// module chunks = 0", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/factoryWithThrowingShims.js\n// module id = 13\n// module chunks = 0", "module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 14\n// module chunks = 0", "'use strict';\n\nvar simpleIsEqual = function simpleIsEqual(a, b) {\n  return a === b;\n};\n\nfunction index (resultFn) {\n  var isEqual = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : simpleIsEqual;\n\n  var lastThis = void 0;\n  var lastArgs = [];\n  var lastResult = void 0;\n  var calledOnce = false;\n\n  var isNewArgEqualToLast = function isNewArgEqualToLast(newArg, index) {\n    return isEqual(newArg, lastArgs[index]);\n  };\n\n  var result = function result() {\n    for (var _len = arguments.length, newArgs = Array(_len), _key = 0; _key < _len; _key++) {\n      newArgs[_key] = arguments[_key];\n    }\n\n    if (calledOnce && lastThis === this && newArgs.length === lastArgs.length && newArgs.every(isNewArgEqualToLast)) {\n      return lastResult;\n    }\n\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    lastResult = resultFn.apply(this, newArgs);\n    return lastResult;\n  };\n\n  return result;\n}\n\nmodule.exports = index;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/memoize-one/dist/memoize-one.cjs.js\n// module id = 15\n// module chunks = 0", "export default function objType(obj) {\n  const type = Object.prototype.toString.call(obj).slice(8, -1);\n  if (type === 'Object' && typeof obj[Symbol.iterator] === 'function') {\n    return 'Iterable';\n  }\n  if (type === 'Custom' && obj.constructor !== Object && obj instanceof Object) {\n    // For projects implementing objects overriding `.prototype[Symbol.toStringTag]`\n    return 'Object';\n  }\n  return type;\n}", "import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nexport default function JSONArrow(_ref) {\n  let {\n    styling,\n    arrowStyle = 'single',\n    expanded,\n    nodeType,\n    onClick\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, styling('arrowContainer', arrowStyle), {\n    onClick: onClick\n  }), /*#__PURE__*/React.createElement(\"div\", styling(['arrow', 'arrowSign'], nodeType, expanded, arrowStyle), '\\u25B6', arrowStyle === 'double' && /*#__PURE__*/React.createElement(\"div\", styling(['arrowSign', 'arrowSignInner']), '\\u25B6')));\n}", "function getLength(type, collection) {\n  if (type === 'Object') {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    return Object.keys(collection).length;\n  } else if (type === 'Array') {\n    return collection.length;\n  }\n  return Infinity;\n}\nfunction isIterableMap(collection) {\n  return typeof collection.set === 'function';\n}\nfunction getEntries(type, collection, sortObjectKeys) {\n  let from = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let to = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Infinity;\n  let res;\n  if (type === 'Object') {\n    let keys = Object.getOwnPropertyNames(collection);\n    if (sortObjectKeys) {\n      keys.sort(sortObjectKeys === true ? undefined : sortObjectKeys);\n    }\n    keys = keys.slice(from, to + 1);\n    res = {\n      entries: keys.map(key => ({\n        key,\n        value: collection[key]\n      }))\n    };\n  } else if (type === 'Array') {\n    res = {\n      entries: collection.slice(from, to + 1).map((val, idx) => ({\n        key: idx + from,\n        value: val\n      }))\n    };\n  } else {\n    let idx = 0;\n    const entries = [];\n    let done = true;\n    const isMap = isIterableMap(collection);\n    for (const item of collection) {\n      if (idx > to) {\n        done = false;\n        break;\n      }\n      if (from <= idx) {\n        if (isMap && Array.isArray(item)) {\n          if (typeof item[0] === 'string' || typeof item[0] === 'number') {\n            entries.push({\n              key: item[0],\n              value: item[1]\n            });\n          } else {\n            entries.push({\n              key: `[entry ${idx}]`,\n              value: {\n                '[key]': item[0],\n                '[value]': item[1]\n              }\n            });\n          }\n        } else {\n          entries.push({\n            key: idx,\n            value: item\n          });\n        }\n      }\n      idx++;\n    }\n    res = {\n      hasMore: !done,\n      entries\n    };\n  }\n  return res;\n}\nfunction getRanges(from, to, limit) {\n  const ranges = [];\n  while (to - from > limit * limit) {\n    limit = limit * limit;\n  }\n  for (let i = from; i <= to; i += limit) {\n    ranges.push({\n      from: i,\n      to: Math.min(to, i + limit - 1)\n    });\n  }\n  return ranges;\n}\nexport default function getCollectionEntries(type, collection, sortObjectKeys, limit) {\n  let from = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  let to = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : Infinity;\n  const getEntriesBound = getEntries.bind(null, type, collection, sortObjectKeys);\n  if (!limit) {\n    return getEntriesBound().entries;\n  }\n  const isSubset = to < Infinity;\n  const length = Math.min(to - from, getLength(type, collection));\n  if (type !== 'Iterable') {\n    if (length <= limit || limit < 7) {\n      return getEntriesBound(from, to).entries;\n    }\n  } else {\n    if (length <= limit && !isSubset) {\n      return getEntriesBound(from, to).entries;\n    }\n  }\n  let limitedEntries;\n  if (type === 'Iterable') {\n    const {\n      hasMore,\n      entries\n    } = getEntriesBound(from, from + limit - 1);\n    limitedEntries = hasMore ? [...entries, ...getRanges(from + limit, from + 2 * limit - 1, limit)] : entries;\n  } else {\n    limitedEntries = isSubset ? getRanges(from, to, limit) : [...getEntriesBound(0, limit - 5).entries, ...getRanges(limit - 4, length - 5, limit), ...getEntriesBound(length - 4, length - 1).entries];\n  }\n  return limitedEntries;\n}", "import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { useCallback, useState } from 'react';\nimport JSONArrow from './JSONArrow';\nexport default function ItemRange(props) {\n  const {\n    styling,\n    from,\n    to,\n    renderChildNodes,\n    nodeType\n  } = props;\n  const [expanded, setExpanded] = useState(false);\n  const handleClick = useCallback(() => {\n    setExpanded(!expanded);\n  }, [expanded]);\n  return expanded ? /*#__PURE__*/React.createElement(\"div\", styling('itemRange', expanded), renderChildNodes(props, from, to)) : /*#__PURE__*/React.createElement(\"div\", _extends({}, styling('itemRange', expanded), {\n    onClick: handleClick\n  }), /*#__PURE__*/React.createElement(JSONArrow, {\n    nodeType: nodeType,\n    styling: styling,\n    expanded: false,\n    onClick: handleClick,\n    arrowStyle: \"double\"\n  }), `${from} ... ${to}`);\n}", "import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { useCallback, useState } from 'react';\nimport JSONArrow from './JSONArrow';\nimport getCollectionEntries from './getCollectionEntries';\nimport JSONNode from './JSONNode';\nimport ItemRange from './ItemRange';\nfunction isRange(rangeOrEntry) {\n  return rangeOrEntry.to !== undefined;\n}\nfunction renderChildNodes(props, from, to) {\n  const {\n    nodeType,\n    data,\n    collectionLimit,\n    circularCache,\n    keyPath,\n    postprocessValue,\n    sortObjectKeys\n  } = props;\n  const childNodes = [];\n  getCollectionEntries(nodeType, data, sortObjectKeys, collectionLimit, from, to).forEach(entry => {\n    if (isRange(entry)) {\n      childNodes.push( /*#__PURE__*/React.createElement(ItemRange, _extends({}, props, {\n        key: `ItemRange--${entry.from}-${entry.to}`,\n        from: entry.from,\n        to: entry.to,\n        renderChildNodes: renderChildNodes\n      })));\n    } else {\n      const {\n        key,\n        value\n      } = entry;\n      const isCircular = circularCache.indexOf(value) !== -1;\n      childNodes.push( /*#__PURE__*/React.createElement(JSONNode, _extends({}, props, {\n        postprocessValue,\n        collectionLimit,\n        key: `Node--${key}`,\n        keyPath: [key, ...keyPath],\n        value: postprocessValue(value),\n        circularCache: [...circularCache, value],\n        isCircular: isCircular,\n        hideRoot: false\n      })));\n    }\n  });\n  return childNodes;\n}\nexport default function JSONNestedNode(props) {\n  const {\n    circularCache = [],\n    collectionLimit,\n    createItemString,\n    data,\n    expandable,\n    getItemString,\n    hideRoot,\n    isCircular,\n    keyPath,\n    labelRenderer,\n    level = 0,\n    nodeType,\n    nodeTypeIndicator,\n    shouldExpandNodeInitially,\n    styling\n  } = props;\n  const [expanded, setExpanded] = useState(\n  // calculate individual node expansion if necessary\n  isCircular ? false : shouldExpandNodeInitially(keyPath, data, level));\n  const handleClick = useCallback(() => {\n    if (expandable) setExpanded(!expanded);\n  }, [expandable, expanded]);\n  const renderedChildren = expanded || hideRoot && level === 0 ? renderChildNodes({\n    ...props,\n    circularCache,\n    level: level + 1\n  }) : null;\n  const itemType = /*#__PURE__*/React.createElement(\"span\", styling('nestedNodeItemType', expanded), nodeTypeIndicator);\n  const renderedItemString = getItemString(nodeType, data, itemType, createItemString(data, collectionLimit), keyPath);\n  const stylingArgs = [keyPath, nodeType, expanded, expandable];\n  return hideRoot ? /*#__PURE__*/React.createElement(\"li\", styling('rootNode', ...stylingArgs), /*#__PURE__*/React.createElement(\"ul\", styling('rootNodeChildren', ...stylingArgs), renderedChildren)) : /*#__PURE__*/React.createElement(\"li\", styling('nestedNode', ...stylingArgs), expandable && /*#__PURE__*/React.createElement(JSONArrow, {\n    styling: styling,\n    nodeType: nodeType,\n    expanded: expanded,\n    onClick: handleClick\n  }), /*#__PURE__*/React.createElement(\"label\", _extends({}, styling(['label', 'nestedNodeLabel'], ...stylingArgs), {\n    onClick: handleClick\n  }), labelRenderer(...stylingArgs)), /*#__PURE__*/React.createElement(\"span\", _extends({}, styling('nestedNodeItemString', ...stylingArgs), {\n    onClick: handleClick\n  }), renderedItemString), /*#__PURE__*/React.createElement(\"ul\", styling('nestedNodeChildren', ...stylingArgs), renderedChildren));\n}", "import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport JSONNestedNode from './JSONNestedNode';\n// Returns the \"n Items\" string for this node,\n// generating and caching it if it hasn't been created yet.\nfunction createItemString(data) {\n  const len = Object.getOwnPropertyNames(data).length;\n  return `${len} ${len !== 1 ? 'keys' : 'key'}`;\n}\n// Configures <JSONNestedNode> to render an Object\nexport default function JSONObjectNode(_ref) {\n  let {\n    data,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(JSONNestedNode, _extends({}, props, {\n    data: data,\n    nodeType: \"Object\",\n    nodeTypeIndicator: props.nodeType === 'Error' ? 'Error()' : '{}',\n    createItemString: createItemString,\n    expandable: Object.getOwnPropertyNames(data).length > 0\n  }));\n}", "import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport JSONNestedNode from './JSONNestedNode';\n// Returns the \"n Items\" string for this node,\n// generating and caching it if it hasn't been created yet.\nfunction createItemString(data) {\n  return `${data.length} ${data.length !== 1 ? 'items' : 'item'}`;\n}\n// Configures <JSONNestedNode> to render an Array\nexport default function JSONArrayNode(_ref) {\n  let {\n    data,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(JSONNestedNode, _extends({}, props, {\n    data: data,\n    nodeType: \"Array\",\n    nodeTypeIndicator: \"[]\",\n    createItemString: createItemString,\n    expandable: data.length > 0\n  }));\n}", "import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport JSONNestedNode from './JSONNestedNode';\n// Returns the \"n Items\" string for this node,\n// generating and caching it if it hasn't been created yet.\nfunction createItemString(data, limit) {\n  let count = 0;\n  let hasMore = false;\n  if (Number.isSafeInteger(data.size)) {\n    count = data.size;\n  } else {\n    // eslint-disable-next-line no-unused-vars\n    for (const entry of data) {\n      if (limit && count + 1 > limit) {\n        hasMore = true;\n        break;\n      }\n      count += 1;\n    }\n  }\n  return `${hasMore ? '>' : ''}${count} ${count !== 1 ? 'entries' : 'entry'}`;\n}\n// Configures <JSONNestedNode> to render an iterable\nexport default function JSONIterableNode(props) {\n  return /*#__PURE__*/React.createElement(JSONNestedNode, _extends({}, props, {\n    nodeType: \"Iterable\",\n    nodeTypeIndicator: \"()\",\n    createItemString: createItemString,\n    expandable: true\n  }));\n}", "import React from 'react';\nexport default function JSONValueNode(_ref) {\n  let {\n    nodeType,\n    styling,\n    labelRenderer,\n    keyPath,\n    valueRenderer,\n    value,\n    valueGetter = value => value\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"li\", styling('value', nodeType, keyPath), /*#__PURE__*/React.createElement(\"label\", styling(['label', 'valueLabel'], nodeType, keyPath), labelRenderer(keyPath, nodeType, false, false)), /*#__PURE__*/React.createElement(\"span\", styling('valueText', nodeType, keyPath), valueRenderer(valueGetter(value), value, ...keyPath)));\n}", "import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport objType from './objType';\nimport JSONObjectNode from './JSONObjectNode';\nimport JSONArrayNode from './JSONArrayNode';\nimport JSONIterableNode from './JSONIterableNode';\nimport JSONValueNode from './JSONValueNode';\nexport default function JSONNode(_ref) {\n  let {\n    getItemString,\n    keyPath,\n    labelRenderer,\n    styling,\n    value,\n    valueRenderer,\n    isCustomNode,\n    ...rest\n  } = _ref;\n  const nodeType = isCustomNode(value) ? 'Custom' : objType(value);\n  const simpleNodeProps = {\n    getItemString,\n    key: keyPath[0],\n    keyPath,\n    labelRenderer,\n    nodeType,\n    styling,\n    value,\n    valueRenderer\n  };\n  const nestedNodeProps = {\n    ...rest,\n    ...simpleNodeProps,\n    data: value,\n    isCustomNode\n  };\n  switch (nodeType) {\n    case 'Object':\n    case 'Error':\n    case 'WeakMap':\n    case 'WeakSet':\n      return /*#__PURE__*/React.createElement(JSONObjectNode, nestedNodeProps);\n    case 'Array':\n      return /*#__PURE__*/React.createElement(JSONArrayNode, nestedNodeProps);\n    case 'Iterable':\n    case 'Map':\n    case 'Set':\n      return /*#__PURE__*/React.createElement(JSONIterableNode, nestedNodeProps);\n    case 'String':\n      return /*#__PURE__*/React.createElement(JSONValueNode, _extends({}, simpleNodeProps, {\n        valueGetter: raw => `\"${raw}\"`\n      }));\n    case 'Number':\n      return /*#__PURE__*/React.createElement(JSONValueNode, simpleNodeProps);\n    case 'Boolean':\n      return /*#__PURE__*/React.createElement(JSONValueNode, _extends({}, simpleNodeProps, {\n        valueGetter: raw => raw ? 'true' : 'false'\n      }));\n    case 'Date':\n      return /*#__PURE__*/React.createElement(JSONValueNode, _extends({}, simpleNodeProps, {\n        valueGetter: raw => raw.toISOString()\n      }));\n    case 'Null':\n      return /*#__PURE__*/React.createElement(JSONValueNode, _extends({}, simpleNodeProps, {\n        valueGetter: () => 'null'\n      }));\n    case 'Undefined':\n      return /*#__PURE__*/React.createElement(JSONValueNode, _extends({}, simpleNodeProps, {\n        valueGetter: () => 'undefined'\n      }));\n    case 'Function':\n    case 'Symbol':\n      return /*#__PURE__*/React.createElement(JSONValueNode, _extends({}, simpleNodeProps, {\n        valueGetter: raw => raw.toString()\n      }));\n    case 'Custom':\n      return /*#__PURE__*/React.createElement(JSONValueNode, simpleNodeProps);\n    default:\n      return /*#__PURE__*/React.createElement(JSONValueNode, _extends({}, simpleNodeProps, {\n        valueGetter: () => `<${nodeType}>`\n      }));\n  }\n}", "export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}", "export default function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}", "export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}", "import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'threezerotwofour',\n  author: 'jan t. sott (http://github.com/idleberg)',\n  base00: '#090300',\n  base01: '#3a3432',\n  base02: '#4a4543',\n  base03: '#5c5855',\n  base04: '#807d7c',\n  base05: '#a5a2a2',\n  base06: '#d6d5d4',\n  base07: '#f7f7f7',\n  base08: '#db2d20',\n  base09: '#e8bbd0',\n  base0A: '#fded02',\n  base0B: '#01a252',\n  base0C: '#b5e4f4',\n  base0D: '#01a0e4',\n  base0E: '#a16a94',\n  base0F: '#cdab53'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'apathy',\n  author: 'jannik siebert (https://github.com/janniks)',\n  base00: '#031A16',\n  base01: '#0B342D',\n  base02: '#184E45',\n  base03: '#2B685E',\n  base04: '#5F9C92',\n  base05: '#81B5AC',\n  base06: '#A7CEC8',\n  base07: '#D2E7E4',\n  base08: '#3E9688',\n  base09: '#3E7996',\n  base0A: '#3E4C96',\n  base0B: '#883E96',\n  base0C: '#963E4C',\n  base0D: '#96883E',\n  base0E: '#4C963E',\n  base0F: '#3E965B'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'ashes',\n  author: 'jannik siebert (https://github.com/janniks)',\n  base00: '#1C2023',\n  base01: '#393F45',\n  base02: '#565E65',\n  base03: '#747C84',\n  base04: '#ADB3BA',\n  base05: '#C7CCD1',\n  base06: '#DFE2E5',\n  base07: '#F3F4F5',\n  base08: '#C7AE95',\n  base09: '#C7C795',\n  base0A: '#AEC795',\n  base0B: '#95C7AE',\n  base0C: '#95AEC7',\n  base0D: '#AE95C7',\n  base0E: '#C795AE',\n  base0F: '#C79595'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'atelier dune',\n  author: 'bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/dune)',\n  base00: '#20201d',\n  base01: '#292824',\n  base02: '#6e6b5e',\n  base03: '#7d7a68',\n  base04: '#999580',\n  base05: '#a6a28c',\n  base06: '#e8e4cf',\n  base07: '#fefbec',\n  base08: '#d73737',\n  base09: '#b65611',\n  base0A: '#cfb017',\n  base0B: '#60ac39',\n  base0C: '#1fad83',\n  base0D: '#6684e1',\n  base0E: '#b854d4',\n  base0F: '#d43552'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'atelier forest',\n  author: 'bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/forest)',\n  base00: '#1b1918',\n  base01: '#2c2421',\n  base02: '#68615e',\n  base03: '#766e6b',\n  base04: '#9c9491',\n  base05: '#a8a19f',\n  base06: '#e6e2e0',\n  base07: '#f1efee',\n  base08: '#f22c40',\n  base09: '#df5320',\n  base0A: '#d5911a',\n  base0B: '#5ab738',\n  base0C: '#00ad9c',\n  base0D: '#407ee7',\n  base0E: '#6666ea',\n  base0F: '#c33ff3'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'atelier heath',\n  author: 'bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/heath)',\n  base00: '#1b181b',\n  base01: '#292329',\n  base02: '#695d69',\n  base03: '#776977',\n  base04: '#9e8f9e',\n  base05: '#ab9bab',\n  base06: '#d8cad8',\n  base07: '#f7f3f7',\n  base08: '#ca402b',\n  base09: '#a65926',\n  base0A: '#bb8a35',\n  base0B: '#379a37',\n  base0C: '#159393',\n  base0D: '#516aec',\n  base0E: '#7b59c0',\n  base0F: '#cc33cc'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'atelier lakeside',\n  author: 'bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/lakeside/)',\n  base00: '#161b1d',\n  base01: '#1f292e',\n  base02: '#516d7b',\n  base03: '#5a7b8c',\n  base04: '#7195a8',\n  base05: '#7ea2b4',\n  base06: '#c1e4f6',\n  base07: '#ebf8ff',\n  base08: '#d22d72',\n  base09: '#935c25',\n  base0A: '#8a8a0f',\n  base0B: '#568c3b',\n  base0C: '#2d8f6f',\n  base0D: '#257fad',\n  base0E: '#5d5db1',\n  base0F: '#b72dd2'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'atelier seaside',\n  author: 'bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/seaside/)',\n  base00: '#131513',\n  base01: '#242924',\n  base02: '#5e6e5e',\n  base03: '#687d68',\n  base04: '#809980',\n  base05: '#8ca68c',\n  base06: '#cfe8cf',\n  base07: '#f0fff0',\n  base08: '#e6193c',\n  base09: '#87711d',\n  base0A: '#c3c322',\n  base0B: '#29a329',\n  base0C: '#1999b3',\n  base0D: '#3d62f5',\n  base0E: '#ad2bee',\n  base0F: '#e619c3'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'bespin',\n  author: 'jan t. sott',\n  base00: '#28211c',\n  base01: '#36312e',\n  base02: '#5e5d5c',\n  base03: '#666666',\n  base04: '#797977',\n  base05: '#8a8986',\n  base06: '#9d9b97',\n  base07: '#baae9e',\n  base08: '#cf6a4c',\n  base09: '#cf7d34',\n  base0A: '#f9ee98',\n  base0B: '#54be0d',\n  base0C: '#afc4db',\n  base0D: '#5ea6ea',\n  base0E: '#9b859d',\n  base0F: '#937121'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'brewer',\n  author: 'timoth\u00E9e poisot (http://github.com/tpoisot)',\n  base00: '#0c0d0e',\n  base01: '#2e2f30',\n  base02: '#515253',\n  base03: '#737475',\n  base04: '#959697',\n  base05: '#b7b8b9',\n  base06: '#dadbdc',\n  base07: '#fcfdfe',\n  base08: '#e31a1c',\n  base09: '#e6550d',\n  base0A: '#dca060',\n  base0B: '#31a354',\n  base0C: '#80b1d3',\n  base0D: '#3182bd',\n  base0E: '#756bb1',\n  base0F: '#b15928'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'bright',\n  author: 'chris kempson (http://chriskempson.com)',\n  base00: '#000000',\n  base01: '#303030',\n  base02: '#505050',\n  base03: '#b0b0b0',\n  base04: '#d0d0d0',\n  base05: '#e0e0e0',\n  base06: '#f5f5f5',\n  base07: '#ffffff',\n  base08: '#fb0120',\n  base09: '#fc6d24',\n  base0A: '#fda331',\n  base0B: '#a1c659',\n  base0C: '#76c7b7',\n  base0D: '#6fb3d2',\n  base0E: '#d381c3',\n  base0F: '#be643c'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'chalk',\n  author: 'chris kempson (http://chriskempson.com)',\n  base00: '#151515',\n  base01: '#202020',\n  base02: '#303030',\n  base03: '#505050',\n  base04: '#b0b0b0',\n  base05: '#d0d0d0',\n  base06: '#e0e0e0',\n  base07: '#f5f5f5',\n  base08: '#fb9fb1',\n  base09: '#eda987',\n  base0A: '#ddb26f',\n  base0B: '#acc267',\n  base0C: '#12cfc0',\n  base0D: '#6fc2ef',\n  base0E: '#e1a3ee',\n  base0F: '#deaf8f'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'codeschool',\n  author: 'brettof86',\n  base00: '#232c31',\n  base01: '#1c3657',\n  base02: '#2a343a',\n  base03: '#3f4944',\n  base04: '#84898c',\n  base05: '#9ea7a6',\n  base06: '#a7cfa3',\n  base07: '#b5d8f6',\n  base08: '#2a5491',\n  base09: '#43820d',\n  base0A: '#a03b1e',\n  base0B: '#237986',\n  base0C: '#b02f30',\n  base0D: '#484d79',\n  base0E: '#c59820',\n  base0F: '#c98344'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'colors',\n  author: 'mrmrs (http://clrs.cc)',\n  base00: '#111111',\n  base01: '#333333',\n  base02: '#555555',\n  base03: '#777777',\n  base04: '#999999',\n  base05: '#bbbbbb',\n  base06: '#dddddd',\n  base07: '#ffffff',\n  base08: '#ff4136',\n  base09: '#ff851b',\n  base0A: '#ffdc00',\n  base0B: '#2ecc40',\n  base0C: '#7fdbff',\n  base0D: '#0074d9',\n  base0E: '#b10dc9',\n  base0F: '#85144b'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'default',\n  author: 'chris kempson (http://chriskempson.com)',\n  base00: '#181818',\n  base01: '#282828',\n  base02: '#383838',\n  base03: '#585858',\n  base04: '#b8b8b8',\n  base05: '#d8d8d8',\n  base06: '#e8e8e8',\n  base07: '#f8f8f8',\n  base08: '#ab4642',\n  base09: '#dc9656',\n  base0A: '#f7ca88',\n  base0B: '#a1b56c',\n  base0C: '#86c1b9',\n  base0D: '#7cafc2',\n  base0E: '#ba8baf',\n  base0F: '#a16946'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'eighties',\n  author: 'chris kempson (http://chriskempson.com)',\n  base00: '#2d2d2d',\n  base01: '#393939',\n  base02: '#515151',\n  base03: '#747369',\n  base04: '#a09f93',\n  base05: '#d3d0c8',\n  base06: '#e8e6df',\n  base07: '#f2f0ec',\n  base08: '#f2777a',\n  base09: '#f99157',\n  base0A: '#ffcc66',\n  base0B: '#99cc99',\n  base0C: '#66cccc',\n  base0D: '#6699cc',\n  base0E: '#cc99cc',\n  base0F: '#d27b53'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'embers',\n  author: 'jannik siebert (https://github.com/janniks)',\n  base00: '#16130F',\n  base01: '#2C2620',\n  base02: '#433B32',\n  base03: '#5A5047',\n  base04: '#8A8075',\n  base05: '#A39A90',\n  base06: '#BEB6AE',\n  base07: '#DBD6D1',\n  base08: '#826D57',\n  base09: '#828257',\n  base0A: '#6D8257',\n  base0B: '#57826D',\n  base0C: '#576D82',\n  base0D: '#6D5782',\n  base0E: '#82576D',\n  base0F: '#825757'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'flat',\n  author: 'chris kempson (http://chriskempson.com)',\n  base00: '#2C3E50',\n  base01: '#34495E',\n  base02: '#7F8C8D',\n  base03: '#95A5A6',\n  base04: '#BDC3C7',\n  base05: '#e0e0e0',\n  base06: '#f5f5f5',\n  base07: '#ECF0F1',\n  base08: '#E74C3C',\n  base09: '#E67E22',\n  base0A: '#F1C40F',\n  base0B: '#2ECC71',\n  base0C: '#1ABC9C',\n  base0D: '#3498DB',\n  base0E: '#9B59B6',\n  base0F: '#be643c'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'google',\n  author: 'seth wright (http://sethawright.com)',\n  base00: '#1d1f21',\n  base01: '#282a2e',\n  base02: '#373b41',\n  base03: '#969896',\n  base04: '#b4b7b4',\n  base05: '#c5c8c6',\n  base06: '#e0e0e0',\n  base07: '#ffffff',\n  base08: '#CC342B',\n  base09: '#F96A38',\n  base0A: '#FBA922',\n  base0B: '#198844',\n  base0C: '#3971ED',\n  base0D: '#3971ED',\n  base0E: '#A36AC7',\n  base0F: '#3971ED'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'grayscale',\n  author: 'alexandre gavioli (https://github.com/alexx2/)',\n  base00: '#101010',\n  base01: '#252525',\n  base02: '#464646',\n  base03: '#525252',\n  base04: '#ababab',\n  base05: '#b9b9b9',\n  base06: '#e3e3e3',\n  base07: '#f7f7f7',\n  base08: '#7c7c7c',\n  base09: '#999999',\n  base0A: '#a0a0a0',\n  base0B: '#8e8e8e',\n  base0C: '#868686',\n  base0D: '#686868',\n  base0E: '#747474',\n  base0F: '#5e5e5e'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'green screen',\n  author: 'chris kempson (http://chriskempson.com)',\n  base00: '#001100',\n  base01: '#003300',\n  base02: '#005500',\n  base03: '#007700',\n  base04: '#009900',\n  base05: '#00bb00',\n  base06: '#00dd00',\n  base07: '#00ff00',\n  base08: '#007700',\n  base09: '#009900',\n  base0A: '#007700',\n  base0B: '#00bb00',\n  base0C: '#005500',\n  base0D: '#009900',\n  base0E: '#00bb00',\n  base0F: '#005500'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'harmonic16',\n  author: 'jannik siebert (https://github.com/janniks)',\n  base00: '#0b1c2c',\n  base01: '#223b54',\n  base02: '#405c79',\n  base03: '#627e99',\n  base04: '#aabcce',\n  base05: '#cbd6e2',\n  base06: '#e5ebf1',\n  base07: '#f7f9fb',\n  base08: '#bf8b56',\n  base09: '#bfbf56',\n  base0A: '#8bbf56',\n  base0B: '#56bf8b',\n  base0C: '#568bbf',\n  base0D: '#8b56bf',\n  base0E: '#bf568b',\n  base0F: '#bf5656'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'hopscotch',\n  author: 'jan t. sott',\n  base00: '#322931',\n  base01: '#433b42',\n  base02: '#5c545b',\n  base03: '#797379',\n  base04: '#989498',\n  base05: '#b9b5b8',\n  base06: '#d5d3d5',\n  base07: '#ffffff',\n  base08: '#dd464c',\n  base09: '#fd8b19',\n  base0A: '#fdcc59',\n  base0B: '#8fc13e',\n  base0C: '#149b93',\n  base0D: '#1290bf',\n  base0E: '#c85e7c',\n  base0F: '#b33508'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'isotope',\n  author: 'jan t. sott',\n  base00: '#000000',\n  base01: '#404040',\n  base02: '#606060',\n  base03: '#808080',\n  base04: '#c0c0c0',\n  base05: '#d0d0d0',\n  base06: '#e0e0e0',\n  base07: '#ffffff',\n  base08: '#ff0000',\n  base09: '#ff9900',\n  base0A: '#ff0099',\n  base0B: '#33ff00',\n  base0C: '#00ffff',\n  base0D: '#0066ff',\n  base0E: '#cc00ff',\n  base0F: '#3300ff'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'marrakesh',\n  author: 'alexandre gavioli (http://github.com/alexx2/)',\n  base00: '#201602',\n  base01: '#302e00',\n  base02: '#5f5b17',\n  base03: '#6c6823',\n  base04: '#86813b',\n  base05: '#948e48',\n  base06: '#ccc37a',\n  base07: '#faf0a5',\n  base08: '#c35359',\n  base09: '#b36144',\n  base0A: '#a88339',\n  base0B: '#18974e',\n  base0C: '#75a738',\n  base0D: '#477ca1',\n  base0E: '#8868b3',\n  base0F: '#b3588e'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'mocha',\n  author: 'chris kempson (http://chriskempson.com)',\n  base00: '#3B3228',\n  base01: '#534636',\n  base02: '#645240',\n  base03: '#7e705a',\n  base04: '#b8afad',\n  base05: '#d0c8c6',\n  base06: '#e9e1dd',\n  base07: '#f5eeeb',\n  base08: '#cb6077',\n  base09: '#d28b71',\n  base0A: '#f4bc87',\n  base0B: '#beb55b',\n  base0C: '#7bbda4',\n  base0D: '#8ab3b5',\n  base0E: '#a89bb9',\n  base0F: '#bb9584'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'monokai',\n  author: 'wimer hazenberg (http://www.monokai.nl)',\n  base00: '#272822',\n  base01: '#383830',\n  base02: '#49483e',\n  base03: '#75715e',\n  base04: '#a59f85',\n  base05: '#f8f8f2',\n  base06: '#f5f4f1',\n  base07: '#f9f8f5',\n  base08: '#f92672',\n  base09: '#fd971f',\n  base0A: '#f4bf75',\n  base0B: '#a6e22e',\n  base0C: '#a1efe4',\n  base0D: '#66d9ef',\n  base0E: '#ae81ff',\n  base0F: '#cc6633'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'ocean',\n  author: 'chris kempson (http://chriskempson.com)',\n  base00: '#2b303b',\n  base01: '#343d46',\n  base02: '#4f5b66',\n  base03: '#65737e',\n  base04: '#a7adba',\n  base05: '#c0c5ce',\n  base06: '#dfe1e8',\n  base07: '#eff1f5',\n  base08: '#bf616a',\n  base09: '#d08770',\n  base0A: '#ebcb8b',\n  base0B: '#a3be8c',\n  base0C: '#96b5b4',\n  base0D: '#8fa1b3',\n  base0E: '#b48ead',\n  base0F: '#ab7967'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'paraiso',\n  author: 'jan t. sott',\n  base00: '#2f1e2e',\n  base01: '#41323f',\n  base02: '#4f424c',\n  base03: '#776e71',\n  base04: '#8d8687',\n  base05: '#a39e9b',\n  base06: '#b9b6b0',\n  base07: '#e7e9db',\n  base08: '#ef6155',\n  base09: '#f99b15',\n  base0A: '#fec418',\n  base0B: '#48b685',\n  base0C: '#5bc4bf',\n  base0D: '#06b6ef',\n  base0E: '#815ba4',\n  base0F: '#e96ba8'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'pop',\n  author: 'chris kempson (http://chriskempson.com)',\n  base00: '#000000',\n  base01: '#202020',\n  base02: '#303030',\n  base03: '#505050',\n  base04: '#b0b0b0',\n  base05: '#d0d0d0',\n  base06: '#e0e0e0',\n  base07: '#ffffff',\n  base08: '#eb008a',\n  base09: '#f29333',\n  base0A: '#f8ca12',\n  base0B: '#37b349',\n  base0C: '#00aabb',\n  base0D: '#0e5a94',\n  base0E: '#b31e8d',\n  base0F: '#7a2d00'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'railscasts',\n  author: 'ryan bates (http://railscasts.com)',\n  base00: '#2b2b2b',\n  base01: '#272935',\n  base02: '#3a4055',\n  base03: '#5a647e',\n  base04: '#d4cfc9',\n  base05: '#e6e1dc',\n  base06: '#f4f1ed',\n  base07: '#f9f7f3',\n  base08: '#da4939',\n  base09: '#cc7833',\n  base0A: '#ffc66d',\n  base0B: '#a5c261',\n  base0C: '#519f50',\n  base0D: '#6d9cbe',\n  base0E: '#b6b3eb',\n  base0F: '#bc9458'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'shapeshifter',\n  author: 'tyler benziger (http://tybenz.com)',\n  base00: '#000000',\n  base01: '#040404',\n  base02: '#102015',\n  base03: '#343434',\n  base04: '#555555',\n  base05: '#ababab',\n  base06: '#e0e0e0',\n  base07: '#f9f9f9',\n  base08: '#e92f2f',\n  base09: '#e09448',\n  base0A: '#dddd13',\n  base0B: '#0ed839',\n  base0C: '#23edda',\n  base0D: '#3b48e3',\n  base0E: '#f996e2',\n  base0F: '#69542d'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'solarized',\n  author: 'ethan schoonover (http://ethanschoonover.com/solarized)',\n  base00: '#002b36',\n  base01: '#073642',\n  base02: '#586e75',\n  base03: '#657b83',\n  base04: '#839496',\n  base05: '#93a1a1',\n  base06: '#eee8d5',\n  base07: '#fdf6e3',\n  base08: '#dc322f',\n  base09: '#cb4b16',\n  base0A: '#b58900',\n  base0B: '#859900',\n  base0C: '#2aa198',\n  base0D: '#268bd2',\n  base0E: '#6c71c4',\n  base0F: '#d33682'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'summerfruit',\n  author: 'christopher corley (http://cscorley.github.io/)',\n  base00: '#151515',\n  base01: '#202020',\n  base02: '#303030',\n  base03: '#505050',\n  base04: '#B0B0B0',\n  base05: '#D0D0D0',\n  base06: '#E0E0E0',\n  base07: '#FFFFFF',\n  base08: '#FF0086',\n  base09: '#FD8900',\n  base0A: '#ABA800',\n  base0B: '#00C918',\n  base0C: '#1faaaa',\n  base0D: '#3777E6',\n  base0E: '#AD00A1',\n  base0F: '#cc6633'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'tomorrow',\n  author: 'chris kempson (http://chriskempson.com)',\n  base00: '#1d1f21',\n  base01: '#282a2e',\n  base02: '#373b41',\n  base03: '#969896',\n  base04: '#b4b7b4',\n  base05: '#c5c8c6',\n  base06: '#e0e0e0',\n  base07: '#ffffff',\n  base08: '#cc6666',\n  base09: '#de935f',\n  base0A: '#f0c674',\n  base0B: '#b5bd68',\n  base0C: '#8abeb7',\n  base0D: '#81a2be',\n  base0E: '#b294bb',\n  base0F: '#a3685a'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'london tube',\n  author: 'jan t. sott',\n  base00: '#231f20',\n  base01: '#1c3f95',\n  base02: '#5a5758',\n  base03: '#737171',\n  base04: '#959ca1',\n  base05: '#d9d8d8',\n  base06: '#e7e7e8',\n  base07: '#ffffff',\n  base08: '#ee2e24',\n  base09: '#f386a1',\n  base0A: '#ffd204',\n  base0B: '#00853e',\n  base0C: '#85cebc',\n  base0D: '#009ddc',\n  base0E: '#98005d',\n  base0F: '#b06110'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\nexports['default'] = {\n  scheme: 'twilight',\n  author: 'david hart (http://hart-dev.com)',\n  base00: '#1e1e1e',\n  base01: '#323537',\n  base02: '#464b50',\n  base03: '#5f5a60',\n  base04: '#838184',\n  base05: '#a7a7a7',\n  base06: '#c3c3c3',\n  base07: '#ffffff',\n  base08: '#cf6a4c',\n  base09: '#cda869',\n  base0A: '#f9ee98',\n  base0B: '#8f9d6a',\n  base0C: '#afc4db',\n  base0D: '#7587a6',\n  base0E: '#9b859d',\n  base0F: '#9b703f'\n};\nmodule.exports = exports['default'];", "'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequire(obj) { return obj && obj.__esModule ? obj['default'] : obj; }\n\nvar _threezerotwofour = require('./threezerotwofour');\n\nexports.threezerotwofour = _interopRequire(_threezerotwofour);\n\nvar _apathy = require('./apathy');\n\nexports.apathy = _interopRequire(_apathy);\n\nvar _ashes = require('./ashes');\n\nexports.ashes = _interopRequire(_ashes);\n\nvar _atelierDune = require('./atelier-dune');\n\nexports.atelierDune = _interopRequire(_atelierDune);\n\nvar _atelierForest = require('./atelier-forest');\n\nexports.atelierForest = _interopRequire(_atelierForest);\n\nvar _atelierHeath = require('./atelier-heath');\n\nexports.atelierHeath = _interopRequire(_atelierHeath);\n\nvar _atelierLakeside = require('./atelier-lakeside');\n\nexports.atelierLakeside = _interopRequire(_atelierLakeside);\n\nvar _atelierSeaside = require('./atelier-seaside');\n\nexports.atelierSeaside = _interopRequire(_atelierSeaside);\n\nvar _bespin = require('./bespin');\n\nexports.bespin = _interopRequire(_bespin);\n\nvar _brewer = require('./brewer');\n\nexports.brewer = _interopRequire(_brewer);\n\nvar _bright = require('./bright');\n\nexports.bright = _interopRequire(_bright);\n\nvar _chalk = require('./chalk');\n\nexports.chalk = _interopRequire(_chalk);\n\nvar _codeschool = require('./codeschool');\n\nexports.codeschool = _interopRequire(_codeschool);\n\nvar _colors = require('./colors');\n\nexports.colors = _interopRequire(_colors);\n\nvar _default = require('./default');\n\nexports['default'] = _interopRequire(_default);\n\nvar _eighties = require('./eighties');\n\nexports.eighties = _interopRequire(_eighties);\n\nvar _embers = require('./embers');\n\nexports.embers = _interopRequire(_embers);\n\nvar _flat = require('./flat');\n\nexports.flat = _interopRequire(_flat);\n\nvar _google = require('./google');\n\nexports.google = _interopRequire(_google);\n\nvar _grayscale = require('./grayscale');\n\nexports.grayscale = _interopRequire(_grayscale);\n\nvar _greenscreen = require('./greenscreen');\n\nexports.greenscreen = _interopRequire(_greenscreen);\n\nvar _harmonic = require('./harmonic');\n\nexports.harmonic = _interopRequire(_harmonic);\n\nvar _hopscotch = require('./hopscotch');\n\nexports.hopscotch = _interopRequire(_hopscotch);\n\nvar _isotope = require('./isotope');\n\nexports.isotope = _interopRequire(_isotope);\n\nvar _marrakesh = require('./marrakesh');\n\nexports.marrakesh = _interopRequire(_marrakesh);\n\nvar _mocha = require('./mocha');\n\nexports.mocha = _interopRequire(_mocha);\n\nvar _monokai = require('./monokai');\n\nexports.monokai = _interopRequire(_monokai);\n\nvar _ocean = require('./ocean');\n\nexports.ocean = _interopRequire(_ocean);\n\nvar _paraiso = require('./paraiso');\n\nexports.paraiso = _interopRequire(_paraiso);\n\nvar _pop = require('./pop');\n\nexports.pop = _interopRequire(_pop);\n\nvar _railscasts = require('./railscasts');\n\nexports.railscasts = _interopRequire(_railscasts);\n\nvar _shapeshifter = require('./shapeshifter');\n\nexports.shapeshifter = _interopRequire(_shapeshifter);\n\nvar _solarized = require('./solarized');\n\nexports.solarized = _interopRequire(_solarized);\n\nvar _summerfruit = require('./summerfruit');\n\nexports.summerfruit = _interopRequire(_summerfruit);\n\nvar _tomorrow = require('./tomorrow');\n\nexports.tomorrow = _interopRequire(_tomorrow);\n\nvar _tube = require('./tube');\n\nexports.tube = _interopRequire(_tube);\n\nvar _twilight = require('./twilight');\n\nexports.twilight = _interopRequire(_twilight);", "/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n", "var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n", "var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n", "'use strict';\n\nvar colorString = require('color-string');\nvar convert = require('color-convert');\n\nvar _slice = [].slice;\n\nvar skippedModels = [\n\t// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// shouldn't really be in color-convert either...\n\t'hex'\n];\n\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\n\nvar limiters = {};\n\nfunction Color(obj, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tvar i;\n\tvar channels;\n\n\tif (obj == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (obj instanceof Color) {\n\t\tthis.model = obj.model;\n\t\tthis.color = obj.color.slice();\n\t\tthis.valpha = obj.valpha;\n\t} else if (typeof obj === 'string') {\n\t\tvar result = colorString.get(obj);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + obj);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (obj.length) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tvar newArr = _slice.call(obj, 0, channels);\n\t\tthis.color = zeroArray(newArr, channels);\n\t\tthis.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n\t} else if (typeof obj === 'number') {\n\t\t// this is always RGB - can be converted later on.\n\t\tobj &= 0xFFFFFF;\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(obj >> 16) & 0xFF,\n\t\t\t(obj >> 8) & 0xFF,\n\t\t\tobj & 0xFF\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tvar keys = Object.keys(obj);\n\t\tif ('alpha' in obj) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n\t\t}\n\n\t\tvar hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tvar labels = convert[this.model].labels;\n\t\tvar color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(obj[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tvar limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString: function () {\n\t\treturn this.string();\n\t},\n\n\ttoJSON: function () {\n\t\treturn this[this.model]();\n\t},\n\n\tstring: function (places) {\n\t\tvar self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString: function (places) {\n\t\tvar self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray: function () {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject: function () {\n\t\tvar result = {};\n\t\tvar channels = convert[this.model].channels;\n\t\tvar labels = convert[this.model].labels;\n\n\t\tfor (var i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray: function () {\n\t\tvar rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject: function () {\n\t\tvar rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround: function (places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.rgb().color;\n\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.rgb().color;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight: function () {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = this.rgb();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\t\treturn rgb;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale: function () {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar rgb = this.rgb().color;\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(val, val, val);\n\t},\n\n\tfade: function (ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer: function (ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.hsl();\n\t\tvar hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix: function (mixinColor, weight) {\n\t\t// ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\t\tvar color1 = mixinColor.rgb();\n\t\tvar color2 = this.rgb();\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t}\n};\n\n// model conversion methods and static constructors\nObject.keys(convert).forEach(function (model) {\n\tif (skippedModels.indexOf(model) !== -1) {\n\t\treturn;\n\t}\n\n\tvar channels = convert[model].channels;\n\n\t// conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tvar newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\t\treturn new Color(color, model);\n\t};\n});\n\nfunction roundTo(num, places) {\n\treturn Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (num) {\n\t\treturn roundTo(num, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tmodel.forEach(function (m) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t});\n\n\tmodel = model[0];\n\n\treturn function (val) {\n\t\tvar result;\n\n\t\tif (arguments.length) {\n\t\t\tif (modifier) {\n\t\t\t\tval = modifier(val);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = val;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(val) {\n\treturn Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tif (typeof arr[i] !== 'number') {\n\t\t\tarr[i] = 0;\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = Color;\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/** Used to compose bitmasks for function metadata. */\nvar BIND_FLAG = 1,\n    BIND_KEY_FLAG = 2,\n    CURRY_BOUND_FLAG = 4,\n    CURRY_FLAG = 8,\n    CURRY_RIGHT_FLAG = 16,\n    PARTIAL_FLAG = 32,\n    PARTIAL_RIGHT_FLAG = 64,\n    ARY_FLAG = 128,\n    REARG_FLAG = 256,\n    FLIP_FLAG = 512;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** Used to associate wrap methods with their bit flags. */\nvar wrapFlags = [\n  ['ary', ARY_FLAG],\n  ['bind', BIND_FLAG],\n  ['bindKey', BIND_KEY_FLAG],\n  ['curry', CURRY_FLAG],\n  ['curryRight', CURRY_RIGHT_FLAG],\n  ['flip', FLIP_FLAG],\n  ['partial', PARTIAL_FLAG],\n  ['partialRight', PARTIAL_RIGHT_FLAG],\n  ['rearg', REARG_FLAG]\n];\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to match wrap detail comments. */\nvar reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n    reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n    reSplitDetails = /,? & /;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array ? array.length : 0;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * Gets the number of `placeholder` occurrences in `array`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} placeholder The placeholder to search for.\n * @returns {number} Returns the placeholder count.\n */\nfunction countHolders(array, placeholder) {\n  var length = array.length,\n      result = 0;\n\n  while (length--) {\n    if (array[length] === placeholder) {\n      result++;\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Replaces all `placeholder` elements in `array` with an internal placeholder\n * and returns an array of their indexes.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {*} placeholder The placeholder to replace.\n * @returns {Array} Returns the new array of placeholder indexes.\n */\nfunction replaceHolders(array, placeholder) {\n  var index = -1,\n      length = array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value === placeholder || value === PLACEHOLDER) {\n      array[index] = PLACEHOLDER;\n      result[resIndex++] = index;\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/* Used to set `toString` methods. */\nvar defineProperty = (function() {\n  var func = getNative(Object, 'defineProperty'),\n      name = getNative.name;\n\n  return (name && name.length > 2) ? func : undefined;\n}());\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * Creates an array that is the composition of partially applied arguments,\n * placeholders, and provided arguments into a single array of arguments.\n *\n * @private\n * @param {Array} args The provided arguments.\n * @param {Array} partials The arguments to prepend to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @params {boolean} [isCurried] Specify composing for a curried function.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgs(args, partials, holders, isCurried) {\n  var argsIndex = -1,\n      argsLength = args.length,\n      holdersLength = holders.length,\n      leftIndex = -1,\n      leftLength = partials.length,\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\n      result = Array(leftLength + rangeLength),\n      isUncurried = !isCurried;\n\n  while (++leftIndex < leftLength) {\n    result[leftIndex] = partials[leftIndex];\n  }\n  while (++argsIndex < holdersLength) {\n    if (isUncurried || argsIndex < argsLength) {\n      result[holders[argsIndex]] = args[argsIndex];\n    }\n  }\n  while (rangeLength--) {\n    result[leftIndex++] = args[argsIndex++];\n  }\n  return result;\n}\n\n/**\n * This function is like `composeArgs` except that the arguments composition\n * is tailored for `_.partialRight`.\n *\n * @private\n * @param {Array} args The provided arguments.\n * @param {Array} partials The arguments to append to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @params {boolean} [isCurried] Specify composing for a curried function.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgsRight(args, partials, holders, isCurried) {\n  var argsIndex = -1,\n      argsLength = args.length,\n      holdersIndex = -1,\n      holdersLength = holders.length,\n      rightIndex = -1,\n      rightLength = partials.length,\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\n      result = Array(rangeLength + rightLength),\n      isUncurried = !isCurried;\n\n  while (++argsIndex < rangeLength) {\n    result[argsIndex] = args[argsIndex];\n  }\n  var offset = argsIndex;\n  while (++rightIndex < rightLength) {\n    result[offset + rightIndex] = partials[rightIndex];\n  }\n  while (++holdersIndex < holdersLength) {\n    if (isUncurried || argsIndex < argsLength) {\n      result[offset + holders[holdersIndex]] = args[argsIndex++];\n    }\n  }\n  return result;\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Creates a function that wraps `func` to invoke it with the optional `this`\n * binding of `thisArg`.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createBind(func, bitmask, thisArg) {\n  var isBind = bitmask & BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return fn.apply(isBind ? thisArg : this, arguments);\n  }\n  return wrapper;\n}\n\n/**\n * Creates a function that produces an instance of `Ctor` regardless of\n * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n *\n * @private\n * @param {Function} Ctor The constructor to wrap.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCtor(Ctor) {\n  return function() {\n    // Use a `switch` statement to work with class constructors. See\n    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n    // for more details.\n    var args = arguments;\n    switch (args.length) {\n      case 0: return new Ctor;\n      case 1: return new Ctor(args[0]);\n      case 2: return new Ctor(args[0], args[1]);\n      case 3: return new Ctor(args[0], args[1], args[2]);\n      case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n    }\n    var thisBinding = baseCreate(Ctor.prototype),\n        result = Ctor.apply(thisBinding, args);\n\n    // Mimic the constructor's `return` behavior.\n    // See https://es5.github.io/#x13.2.2 for more details.\n    return isObject(result) ? result : thisBinding;\n  };\n}\n\n/**\n * Creates a function that wraps `func` to enable currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {number} arity The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCurry(func, bitmask, arity) {\n  var Ctor = createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length,\n        placeholder = getHolder(wrapper);\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n      ? []\n      : replaceHolders(args, placeholder);\n\n    length -= holders.length;\n    if (length < arity) {\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, undefined,\n        args, holders, undefined, undefined, arity - length);\n    }\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return apply(fn, this, args);\n  }\n  return wrapper;\n}\n\n/**\n * Creates a function that wraps `func` to invoke it with optional `this`\n * binding of `thisArg`, partial application, and currying.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [partialsRight] The arguments to append to those provided\n *  to the new function.\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n  var isAry = bitmask & ARY_FLAG,\n      isBind = bitmask & BIND_FLAG,\n      isBindKey = bitmask & BIND_KEY_FLAG,\n      isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n      isFlip = bitmask & FLIP_FLAG,\n      Ctor = isBindKey ? undefined : createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length;\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    if (isCurried) {\n      var placeholder = getHolder(wrapper),\n          holdersCount = countHolders(args, placeholder);\n    }\n    if (partials) {\n      args = composeArgs(args, partials, holders, isCurried);\n    }\n    if (partialsRight) {\n      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n    }\n    length -= holdersCount;\n    if (isCurried && length < arity) {\n      var newHolders = replaceHolders(args, placeholder);\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n        args, newHolders, argPos, ary, arity - length\n      );\n    }\n    var thisBinding = isBind ? thisArg : this,\n        fn = isBindKey ? thisBinding[func] : func;\n\n    length = args.length;\n    if (argPos) {\n      args = reorder(args, argPos);\n    } else if (isFlip && length > 1) {\n      args.reverse();\n    }\n    if (isAry && ary < length) {\n      args.length = ary;\n    }\n    if (this && this !== root && this instanceof wrapper) {\n      fn = Ctor || createCtor(fn);\n    }\n    return fn.apply(thisBinding, args);\n  }\n  return wrapper;\n}\n\n/**\n * Creates a function that wraps `func` to invoke it with the `this` binding\n * of `thisArg` and `partials` prepended to the arguments it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} partials The arguments to prepend to those provided to\n *  the new function.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createPartial(func, bitmask, thisArg, partials) {\n  var isBind = bitmask & BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var argsIndex = -1,\n        argsLength = arguments.length,\n        leftIndex = -1,\n        leftLength = partials.length,\n        args = Array(leftLength + argsLength),\n        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n    while (++leftIndex < leftLength) {\n      args[leftIndex] = partials[leftIndex];\n    }\n    while (argsLength--) {\n      args[leftIndex++] = arguments[++argsIndex];\n    }\n    return apply(fn, isBind ? thisArg : this, args);\n  }\n  return wrapper;\n}\n\n/**\n * Creates a function that wraps `func` to continue currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {Function} wrapFunc The function to create the `func` wrapper.\n * @param {*} placeholder The placeholder value.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n  var isCurry = bitmask & CURRY_FLAG,\n      newHolders = isCurry ? holders : undefined,\n      newHoldersRight = isCurry ? undefined : holders,\n      newPartials = isCurry ? partials : undefined,\n      newPartialsRight = isCurry ? undefined : partials;\n\n  bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n  bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n  if (!(bitmask & CURRY_BOUND_FLAG)) {\n    bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n  }\n\n  var result = wrapFunc(func, bitmask, thisArg, newPartials, newHolders, newPartialsRight, newHoldersRight, argPos, ary, arity);\n  result.placeholder = placeholder;\n  return setWrapToString(result, func, bitmask);\n}\n\n/**\n * Creates a function that either curries or invokes `func` with optional\n * `this` binding and partially applied arguments.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags.\n *  The bitmask may be composed of the following flags:\n *     1 - `_.bind`\n *     2 - `_.bindKey`\n *     4 - `_.curry` or `_.curryRight` of a bound function\n *     8 - `_.curry`\n *    16 - `_.curryRight`\n *    32 - `_.partial`\n *    64 - `_.partialRight`\n *   128 - `_.rearg`\n *   256 - `_.ary`\n *   512 - `_.flip`\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to be partially applied.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n  var isBindKey = bitmask & BIND_KEY_FLAG;\n  if (!isBindKey && typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var length = partials ? partials.length : 0;\n  if (!length) {\n    bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n    partials = holders = undefined;\n  }\n  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n  arity = arity === undefined ? arity : toInteger(arity);\n  length -= holders ? holders.length : 0;\n\n  if (bitmask & PARTIAL_RIGHT_FLAG) {\n    var partialsRight = partials,\n        holdersRight = holders;\n\n    partials = holders = undefined;\n  }\n\n  var newData = [\n    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n    argPos, ary, arity\n  ];\n\n  func = newData[0];\n  bitmask = newData[1];\n  thisArg = newData[2];\n  partials = newData[3];\n  holders = newData[4];\n  arity = newData[9] = newData[9] == null\n    ? (isBindKey ? 0 : func.length)\n    : nativeMax(newData[9] - length, 0);\n\n  if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n    bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n  }\n  if (!bitmask || bitmask == BIND_FLAG) {\n    var result = createBind(func, bitmask, thisArg);\n  } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n    result = createCurry(func, bitmask, arity);\n  } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n    result = createPartial(func, bitmask, thisArg, partials);\n  } else {\n    result = createHybrid.apply(undefined, newData);\n  }\n  return setWrapToString(result, func, bitmask);\n}\n\n/**\n * Gets the argument placeholder value for `func`.\n *\n * @private\n * @param {Function} func The function to inspect.\n * @returns {*} Returns the placeholder value.\n */\nfunction getHolder(func) {\n  var object = func;\n  return object.placeholder;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Extracts wrapper details from the `source` body comment.\n *\n * @private\n * @param {string} source The source to inspect.\n * @returns {Array} Returns the wrapper details.\n */\nfunction getWrapDetails(source) {\n  var match = source.match(reWrapDetails);\n  return match ? match[1].split(reSplitDetails) : [];\n}\n\n/**\n * Inserts wrapper `details` in a comment at the top of the `source` body.\n *\n * @private\n * @param {string} source The source to modify.\n * @returns {Array} details The details to insert.\n * @returns {string} Returns the modified source.\n */\nfunction insertWrapDetails(source, details) {\n  var length = details.length,\n      lastIndex = length - 1;\n\n  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n  details = details.join(length > 2 ? ', ' : ' ');\n  return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Reorder `array` according to the specified indexes where the element at\n * the first index is assigned as the first element, the element at\n * the second index is assigned as the second element, and so on.\n *\n * @private\n * @param {Array} array The array to reorder.\n * @param {Array} indexes The arranged array indexes.\n * @returns {Array} Returns `array`.\n */\nfunction reorder(array, indexes) {\n  var arrLength = array.length,\n      length = nativeMin(indexes.length, arrLength),\n      oldArray = copyArray(array);\n\n  while (length--) {\n    var index = indexes[length];\n    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n  }\n  return array;\n}\n\n/**\n * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n * with wrapper details in a comment at the top of the source body.\n *\n * @private\n * @param {Function} wrapper The function to modify.\n * @param {Function} reference The reference function.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @returns {Function} Returns `wrapper`.\n */\nvar setWrapToString = !defineProperty ? identity : function(wrapper, reference, bitmask) {\n  var source = (reference + '');\n  return defineProperty(wrapper, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)))\n  });\n};\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Updates wrapper `details` based on `bitmask` flags.\n *\n * @private\n * @returns {Array} details The details to modify.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @returns {Array} Returns `details`.\n */\nfunction updateWrapDetails(details, bitmask) {\n  arrayEach(wrapFlags, function(pair) {\n    var value = '_.' + pair[0];\n    if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n      details.push(value);\n    }\n  });\n  return details.sort();\n}\n\n/**\n * Creates a function that accepts arguments of `func` and either invokes\n * `func` returning its result, if at least `arity` number of arguments have\n * been provided, or returns a function that accepts the remaining `func`\n * arguments, and so on. The arity of `func` may be specified if `func.length`\n * is not sufficient.\n *\n * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n * may be used as a placeholder for provided arguments.\n *\n * **Note:** This method doesn't set the \"length\" property of curried functions.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Function\n * @param {Function} func The function to curry.\n * @param {number} [arity=func.length] The arity of `func`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Function} Returns the new curried function.\n * @example\n *\n * var abc = function(a, b, c) {\n *   return [a, b, c];\n * };\n *\n * var curried = _.curry(abc);\n *\n * curried(1)(2)(3);\n * // => [1, 2, 3]\n *\n * curried(1, 2)(3);\n * // => [1, 2, 3]\n *\n * curried(1, 2, 3);\n * // => [1, 2, 3]\n *\n * // Curried with placeholders.\n * curried(1)(_, 3)(2);\n * // => [1, 2, 3]\n */\nfunction curry(func, arity, guard) {\n  arity = guard ? undefined : arity;\n  var result = createWrap(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n  result.placeholder = curry.placeholder;\n  return result;\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n// Assign default placeholders.\ncurry.placeholder = {};\n\nmodule.exports = curry;\n", "export function yuv2rgb(yuv) {\n  var y = yuv[0],\n      u = yuv[1],\n      v = yuv[2];\n  var r, g, b;\n  r = y * 1 + u * 0 + v * 1.13983;\n  g = y * 1 + u * -0.39465 + v * -0.5806;\n  b = y * 1 + u * 2.02311 + v * 0;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n}\nexport function rgb2yuv(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n  var y = r * 0.299 + g * 0.587 + b * 0.114;\n  var u = r * -0.14713 + g * -0.28886 + b * 0.436;\n  var v = r * 0.615 + g * -0.51499 + b * -0.10001;\n  return [y, u, v];\n}", "export {};", "import _typeof from \"@babel/runtime/helpers/typeof\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as base16 from 'base16';\nimport Color from 'color';\nimport curry from 'lodash.curry';\nimport { yuv2rgb, rgb2yuv } from './colorConverters';\nvar DEFAULT_BASE16 = base16.default;\nvar BASE16_KEYS = Object.keys(DEFAULT_BASE16); // we need a correcting factor, so that a dark, but not black background color\n// converts to bright enough inversed color\n\nvar flip = function flip(x) {\n  return x < 0.25 ? 1 : x < 0.5 ? 0.9 - x : 1.1 - x;\n};\n\nvar invertColor = function invertColor(hexString) {\n  var color = Color(hexString);\n\n  var _rgb2yuv = rgb2yuv(color.array()),\n      _rgb2yuv2 = _slicedToArray(_rgb2yuv, 3),\n      y = _rgb2yuv2[0],\n      u = _rgb2yuv2[1],\n      v = _rgb2yuv2[2];\n\n  var flippedYuv = [flip(y), u, v];\n  var rgb = yuv2rgb(flippedYuv);\n  return Color.rgb(rgb).hex();\n};\n\nvar merger = function merger(styling) {\n  return function (prevStyling) {\n    return {\n      className: [prevStyling.className, styling.className].filter(Boolean).join(' '),\n      style: _objectSpread(_objectSpread({}, prevStyling.style || {}), styling.style || {})\n    };\n  };\n};\n\nvar mergeStyling = function mergeStyling(customStyling, defaultStyling) {\n  if (customStyling === undefined) {\n    return defaultStyling;\n  }\n\n  if (defaultStyling === undefined) {\n    return customStyling;\n  }\n\n  var customType = _typeof(customStyling);\n\n  var defaultType = _typeof(defaultStyling);\n\n  switch (customType) {\n    case 'string':\n      switch (defaultType) {\n        case 'string':\n          return [defaultStyling, customStyling].filter(Boolean).join(' ');\n\n        case 'object':\n          return merger({\n            className: customStyling,\n            style: defaultStyling\n          });\n\n        case 'function':\n          return function (styling) {\n            for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              args[_key - 1] = arguments[_key];\n            }\n\n            return merger({\n              className: customStyling\n            })(defaultStyling.apply(void 0, [styling].concat(args)));\n          };\n      }\n\n      break;\n\n    case 'object':\n      switch (defaultType) {\n        case 'string':\n          return merger({\n            className: defaultStyling,\n            style: customStyling\n          });\n\n        case 'object':\n          return _objectSpread(_objectSpread({}, defaultStyling), customStyling);\n\n        case 'function':\n          return function (styling) {\n            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n              args[_key2 - 1] = arguments[_key2];\n            }\n\n            return merger({\n              style: customStyling\n            })(defaultStyling.apply(void 0, [styling].concat(args)));\n          };\n      }\n\n      break;\n\n    case 'function':\n      switch (defaultType) {\n        case 'string':\n          return function (styling) {\n            for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n              args[_key3 - 1] = arguments[_key3];\n            }\n\n            return customStyling.apply(void 0, [merger(styling)({\n              className: defaultStyling\n            })].concat(args));\n          };\n\n        case 'object':\n          return function (styling) {\n            for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n              args[_key4 - 1] = arguments[_key4];\n            }\n\n            return customStyling.apply(void 0, [merger(styling)({\n              style: defaultStyling\n            })].concat(args));\n          };\n\n        case 'function':\n          return function (styling) {\n            for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n              args[_key5 - 1] = arguments[_key5];\n            }\n\n            return customStyling.apply(void 0, [defaultStyling.apply(void 0, [styling].concat(args))].concat(args));\n          };\n      }\n\n  }\n};\n\nvar mergeStylings = function mergeStylings(customStylings, defaultStylings) {\n  var keys = Object.keys(defaultStylings);\n\n  for (var key in customStylings) {\n    if (keys.indexOf(key) === -1) keys.push(key);\n  }\n\n  return keys.reduce(function (mergedStyling, key) {\n    return mergedStyling[key] = mergeStyling(customStylings[key], defaultStylings[key]), mergedStyling;\n  }, {});\n};\n\nvar getStylingByKeys = function getStylingByKeys(mergedStyling, keys) {\n  for (var _len6 = arguments.length, args = new Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {\n    args[_key6 - 2] = arguments[_key6];\n  }\n\n  if (keys === null) {\n    return mergedStyling;\n  }\n\n  if (!Array.isArray(keys)) {\n    keys = [keys];\n  }\n\n  var styles = keys.map(function (key) {\n    return mergedStyling[key];\n  }).filter(Boolean);\n  var props = styles.reduce(function (obj, s) {\n    if (typeof s === 'string') {\n      obj.className = [obj.className, s].filter(Boolean).join(' ');\n    } else if (_typeof(s) === 'object') {\n      obj.style = _objectSpread(_objectSpread({}, obj.style), s);\n    } else if (typeof s === 'function') {\n      obj = _objectSpread(_objectSpread({}, obj), s.apply(void 0, [obj].concat(args)));\n    }\n\n    return obj;\n  }, {\n    className: '',\n    style: {}\n  });\n\n  if (!props.className) {\n    delete props.className;\n  }\n\n  if (Object.keys(props.style).length === 0) {\n    delete props.style;\n  }\n\n  return props;\n};\n\nexport var invertBase16Theme = function invertBase16Theme(base16Theme) {\n  return Object.keys(base16Theme).reduce(function (t, key) {\n    return t[key] = /^base/.test(key) ? invertColor(base16Theme[key]) : key === 'scheme' ? base16Theme[key] + ':inverted' : base16Theme[key], t;\n  }, {});\n};\nexport var createStyling = curry(function (getStylingFromBase16) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var themeOrStyling = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _options$defaultBase = options.defaultBase16,\n      defaultBase16 = _options$defaultBase === void 0 ? DEFAULT_BASE16 : _options$defaultBase,\n      _options$base16Themes = options.base16Themes,\n      base16Themes = _options$base16Themes === void 0 ? null : _options$base16Themes;\n  var base16Theme = getBase16Theme(themeOrStyling, base16Themes);\n\n  if (base16Theme) {\n    themeOrStyling = _objectSpread(_objectSpread({}, base16Theme), themeOrStyling);\n  }\n\n  var theme = BASE16_KEYS.reduce(function (t, key) {\n    return t[key] = themeOrStyling[key] || defaultBase16[key], t;\n  }, {});\n  var customStyling = Object.keys(themeOrStyling).reduce(function (s, key) {\n    return BASE16_KEYS.indexOf(key) === -1 ? (s[key] = themeOrStyling[key], s) : s;\n  }, {});\n  var defaultStyling = getStylingFromBase16(theme);\n  var mergedStyling = mergeStylings(customStyling, defaultStyling);\n\n  for (var _len7 = arguments.length, args = new Array(_len7 > 3 ? _len7 - 3 : 0), _key7 = 3; _key7 < _len7; _key7++) {\n    args[_key7 - 3] = arguments[_key7];\n  }\n\n  return curry(getStylingByKeys, 2).apply(void 0, [mergedStyling].concat(args));\n}, 3);\n\nvar isStylingConfig = function isStylingConfig(theme) {\n  return !!theme.extend;\n};\n\nexport var getBase16Theme = function getBase16Theme(theme, base16Themes) {\n  if (theme && isStylingConfig(theme) && theme.extend) {\n    theme = theme.extend;\n  }\n\n  if (typeof theme === 'string') {\n    var _theme$split = theme.split(':'),\n        _theme$split2 = _slicedToArray(_theme$split, 2),\n        _themeName = _theme$split2[0],\n        modifier = _theme$split2[1];\n\n    if (base16Themes) {\n      theme = base16Themes[_themeName];\n    } else {\n      theme = base16[_themeName];\n    }\n\n    if (modifier === 'inverted') {\n      theme = invertBase16Theme(theme);\n    }\n  }\n\n  return theme && Object.prototype.hasOwnProperty.call(theme, 'base00') ? theme : undefined;\n};\nexport var invertTheme = function invertTheme(theme) {\n  if (typeof theme === 'string') {\n    return \"\".concat(theme, \":inverted\");\n  }\n\n  if (theme && isStylingConfig(theme) && theme.extend) {\n    if (typeof theme.extend === 'string') {\n      return _objectSpread(_objectSpread({}, theme), {}, {\n        extend: \"\".concat(theme.extend, \":inverted\")\n      });\n    }\n\n    return _objectSpread(_objectSpread({}, theme), {}, {\n      extend: invertBase16Theme(theme.extend)\n    });\n  }\n\n  if (theme) {\n    return invertBase16Theme(theme);\n  }\n\n  return theme;\n};\nexport * from './types';", "export default {\n  scheme: 'solarized',\n  author: 'ethan schoonover (http://ethanschoonover.com/solarized)',\n  base00: '#002b36',\n  base01: '#073642',\n  base02: '#586e75',\n  base03: '#657b83',\n  base04: '#839496',\n  base05: '#93a1a1',\n  base06: '#eee8d5',\n  base07: '#fdf6e3',\n  base08: '#dc322f',\n  base09: '#cb4b16',\n  base0A: '#b58900',\n  base0B: '#859900',\n  base0C: '#2aa198',\n  base0D: '#268bd2',\n  base0E: '#6c71c4',\n  base0F: '#d33682'\n};", "import { createStyling } from 'react-base16-styling';\nimport solarized from './themes/solarized';\nconst colorMap = theme => ({\n  BACKGROUND_COLOR: theme.base00,\n  TEXT_COLOR: theme.base07,\n  STRING_COLOR: theme.base0B,\n  DATE_COLOR: theme.base0B,\n  NUMBER_COLOR: theme.base09,\n  BOOLEAN_COLOR: theme.base09,\n  NULL_COLOR: theme.base08,\n  UNDEFINED_COLOR: theme.base08,\n  FUNCTION_COLOR: theme.base08,\n  SYMBOL_COLOR: theme.base08,\n  LABEL_COLOR: theme.base0D,\n  ARROW_COLOR: theme.base0D,\n  ITEM_STRING_COLOR: theme.base0B,\n  ITEM_STRING_EXPANDED_COLOR: theme.base03\n});\nconst valueColorMap = colors => ({\n  String: colors.STRING_COLOR,\n  Date: colors.DATE_COLOR,\n  Number: colors.NUMBER_COLOR,\n  Boolean: colors.BOOLEAN_COLOR,\n  Null: colors.NULL_COLOR,\n  Undefined: colors.UNDEFINED_COLOR,\n  Function: colors.FUNCTION_COLOR,\n  Symbol: colors.SYMBOL_COLOR\n});\nconst getDefaultThemeStyling = theme => {\n  const colors = colorMap(theme);\n  return {\n    tree: {\n      border: 0,\n      padding: 0,\n      marginTop: '0.5em',\n      marginBottom: '0.5em',\n      marginLeft: '0.125em',\n      marginRight: 0,\n      listStyle: 'none',\n      MozUserSelect: 'none',\n      WebkitUserSelect: 'none',\n      backgroundColor: colors.BACKGROUND_COLOR\n    },\n    value: (_ref, nodeType, keyPath) => {\n      let {\n        style\n      } = _ref;\n      return {\n        style: {\n          ...style,\n          paddingTop: '0.25em',\n          paddingRight: 0,\n          marginLeft: '0.875em',\n          WebkitUserSelect: 'text',\n          MozUserSelect: 'text',\n          wordWrap: 'break-word',\n          paddingLeft: keyPath.length > 1 ? '2.125em' : '1.25em',\n          textIndent: '-0.5em',\n          wordBreak: 'break-all'\n        }\n      };\n    },\n    label: {\n      display: 'inline-block',\n      color: colors.LABEL_COLOR\n    },\n    valueLabel: {\n      margin: '0 0.5em 0 0'\n    },\n    valueText: (_ref2, nodeType) => {\n      let {\n        style\n      } = _ref2;\n      return {\n        style: {\n          ...style,\n          color: valueColorMap(colors)[nodeType]\n        }\n      };\n    },\n    itemRange: (styling, expanded) => ({\n      style: {\n        paddingTop: expanded ? 0 : '0.25em',\n        cursor: 'pointer',\n        color: colors.LABEL_COLOR\n      }\n    }),\n    arrow: (_ref3, nodeType, expanded) => {\n      let {\n        style\n      } = _ref3;\n      return {\n        style: {\n          ...style,\n          marginLeft: 0,\n          transition: '150ms',\n          WebkitTransition: '150ms',\n          MozTransition: '150ms',\n          WebkitTransform: expanded ? 'rotateZ(90deg)' : 'rotateZ(0deg)',\n          MozTransform: expanded ? 'rotateZ(90deg)' : 'rotateZ(0deg)',\n          transform: expanded ? 'rotateZ(90deg)' : 'rotateZ(0deg)',\n          transformOrigin: '45% 50%',\n          WebkitTransformOrigin: '45% 50%',\n          MozTransformOrigin: '45% 50%',\n          position: 'relative',\n          lineHeight: '1.1em',\n          fontSize: '0.75em'\n        }\n      };\n    },\n    arrowContainer: (_ref4, arrowStyle) => {\n      let {\n        style\n      } = _ref4;\n      return {\n        style: {\n          ...style,\n          display: 'inline-block',\n          paddingRight: '0.5em',\n          paddingLeft: arrowStyle === 'double' ? '1em' : 0,\n          cursor: 'pointer'\n        }\n      };\n    },\n    arrowSign: {\n      color: colors.ARROW_COLOR\n    },\n    arrowSignInner: {\n      position: 'absolute',\n      top: 0,\n      left: '-0.4em'\n    },\n    nestedNode: (_ref5, keyPath, nodeType, expanded, expandable) => {\n      let {\n        style\n      } = _ref5;\n      return {\n        style: {\n          ...style,\n          position: 'relative',\n          paddingTop: '0.25em',\n          marginLeft: keyPath.length > 1 ? '0.875em' : 0,\n          paddingLeft: !expandable ? '1.125em' : 0\n        }\n      };\n    },\n    rootNode: {\n      padding: 0,\n      margin: 0\n    },\n    nestedNodeLabel: (_ref6, keyPath, nodeType, expanded, expandable) => {\n      let {\n        style\n      } = _ref6;\n      return {\n        style: {\n          ...style,\n          margin: 0,\n          padding: 0,\n          WebkitUserSelect: expandable ? 'inherit' : 'text',\n          MozUserSelect: expandable ? 'inherit' : 'text',\n          cursor: expandable ? 'pointer' : 'default'\n        }\n      };\n    },\n    nestedNodeItemString: (_ref7, keyPath, nodeType, expanded) => {\n      let {\n        style\n      } = _ref7;\n      return {\n        style: {\n          ...style,\n          paddingLeft: '0.5em',\n          cursor: 'default',\n          color: expanded ? colors.ITEM_STRING_EXPANDED_COLOR : colors.ITEM_STRING_COLOR\n        }\n      };\n    },\n    nestedNodeItemType: {\n      marginLeft: '0.3em',\n      marginRight: '0.3em'\n    },\n    nestedNodeChildren: (_ref8, nodeType, expanded) => {\n      let {\n        style\n      } = _ref8;\n      return {\n        style: {\n          ...style,\n          padding: 0,\n          margin: 0,\n          listStyle: 'none',\n          display: expanded ? 'block' : 'none'\n        }\n      };\n    },\n    rootNodeChildren: {\n      padding: 0,\n      margin: 0,\n      listStyle: 'none'\n    }\n  };\n};\nconst createStylingFromTheme = createStyling(getDefaultThemeStyling, {\n  defaultBase16: solarized\n});\nexport default createStylingFromTheme;", "// ES6 + inline style port of JSONViewer https://bitbucket.org/davevedder/react-json-viewer/\n// all credits and original code to the author\n// Dave Vedder <veddermatic@gmail.com> http://www.eskimospy.com/\n// port by Daniele Zannotti http://www.github.com/dzannotti <dzannotti@me.com>\n\nimport React, { useMemo } from 'react';\nimport JSONNode from './JSONNode';\nimport createStylingFromTheme from './createStylingFromTheme';\nimport { invertTheme } from 'react-base16-styling';\nconst identity = value => value;\nconst expandRootNode = (keyPath, data, level) => level === 0;\nconst defaultItemString = (type, data, itemType, itemString) => /*#__PURE__*/React.createElement(\"span\", null, itemType, \" \", itemString);\nconst defaultLabelRenderer = _ref => {\n  let [label] = _ref;\n  return /*#__PURE__*/React.createElement(\"span\", null, label, \":\");\n};\nconst noCustomNode = () => false;\nexport function JSONTree(_ref2) {\n  let {\n    data: value,\n    theme,\n    invertTheme: shouldInvertTheme,\n    keyPath = ['root'],\n    labelRenderer = defaultLabelRenderer,\n    valueRenderer = identity,\n    shouldExpandNodeInitially = expandRootNode,\n    hideRoot = false,\n    getItemString = defaultItemString,\n    postprocessValue = identity,\n    isCustomNode = noCustomNode,\n    collectionLimit = 50,\n    sortObjectKeys = false\n  } = _ref2;\n  const styling = useMemo(() => createStylingFromTheme(shouldInvertTheme ? invertTheme(theme) : theme), [theme, shouldInvertTheme]);\n  return /*#__PURE__*/React.createElement(\"ul\", styling('tree'), /*#__PURE__*/React.createElement(JSONNode, {\n    keyPath: hideRoot ? [] : keyPath,\n    value: postprocessValue(value),\n    isCustomNode: isCustomNode,\n    styling: styling,\n    labelRenderer: labelRenderer,\n    valueRenderer: valueRenderer,\n    shouldExpandNodeInitially: shouldExpandNodeInitially,\n    hideRoot: hideRoot,\n    getItemString: getItemString,\n    postprocessValue: postprocessValue,\n    collectionLimit: collectionLimit,\n    sortObjectKeys: sortObjectKeys\n  }));\n}", "// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { jupyterHighlightStyle } from '@jupyterlab/codemirror';\nimport { ITranslator, nullTranslator } from '@jupyterlab/translation';\nimport { InputGroup } from '@jupyterlab/ui-components';\nimport { Tag, tags } from '@lezer/highlight';\nimport { JSONArray, JSONExt, JSONObject, JSONValue } from '@lumino/coreutils';\nimport * as React from 'react';\nimport Highlighter from 'react-highlight-words';\nimport { JSONTree } from 'react-json-tree';\nimport { StyleModule } from 'style-mod';\n\n/**\n * The properties for the JSON tree component.\n */\nexport interface IProps {\n  data: NonNullable<JSONValue>;\n  metadata?: JSONObject;\n\n  /**\n   * The application language translator.\n   */\n  translator?: ITranslator;\n  forwardedRef?: React.Ref<HTMLDivElement>;\n}\n\n/**\n * The state of the JSON tree component.\n */\nexport interface IState {\n  filter?: string;\n  value: string;\n}\n\n/**\n * Get the CodeMirror style for a given tag.\n */\nfunction getStyle(tag: Tag): string {\n  return jupyterHighlightStyle.style([tag]) ?? '';\n}\n\n/**\n * A component that renders JSON data as a collapsible tree.\n */\nexport class Component extends React.Component<IProps, IState> {\n  state = { filter: '', value: '' };\n\n  timer: number = 0;\n\n  componentDidMount(): void {\n    StyleModule.mount(document, jupyterHighlightStyle.module as StyleModule);\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value } = event.target;\n    this.setState({ value });\n    window.clearTimeout(this.timer);\n    this.timer = window.setTimeout(() => {\n      this.setState({ filter: value });\n    }, 300);\n  };\n\n  render(): JSX.Element {\n    const translator = this.props.translator || nullTranslator;\n    const trans = translator.load('jupyterlab');\n\n    const { data, metadata, forwardedRef } = this.props;\n    const root = metadata && metadata.root ? (metadata.root as string) : 'root';\n    const keyPaths = this.state.filter\n      ? filterPaths(data, this.state.filter, [root])\n      : [root];\n    return (\n      <div className=\"container\" ref={forwardedRef}>\n        <InputGroup\n          className=\"filter\"\n          type=\"text\"\n          placeholder={trans.__('Filter\u2026')}\n          onChange={this.handleChange}\n          value={this.state.value}\n          rightIcon=\"ui-components:search\"\n        />\n        <JSONTree\n          data={data}\n          collectionLimit={100}\n          theme={{\n            extend: theme,\n            valueLabel: getStyle(tags.variableName),\n            valueText: getStyle(tags.string),\n            nestedNodeItemString: getStyle(tags.comment)\n          }}\n          invertTheme={false}\n          keyPath={[root]}\n          getItemString={(type, data, itemType, itemString) =>\n            Array.isArray(data) ? (\n              // Always display array type and the number of items i.e. \"[] 2 items\".\n              <span>\n                {itemType} {itemString}\n              </span>\n            ) : Object.keys(data as object).length === 0 ? (\n              // Only display object type when it's empty i.e. \"{}\".\n              <span>{itemType}</span>\n            ) : (\n              null! // Upstream typings don't accept null, but it should be ok\n            )\n          }\n          labelRenderer={([label, type]) => {\n            return (\n              <span className={getStyle(tags.keyword)}>\n                <Highlighter\n                  searchWords={[this.state.filter]}\n                  textToHighlight={`${label}`}\n                  highlightClassName=\"jp-mod-selected\"\n                ></Highlighter>\n              </span>\n            );\n          }}\n          valueRenderer={raw => {\n            let className = getStyle(tags.string);\n            if (typeof raw === 'number') {\n              className = getStyle(tags.number);\n            }\n            if (raw === 'true' || raw === 'false') {\n              className = getStyle(tags.keyword);\n            }\n            return (\n              <span className={className}>\n                <Highlighter\n                  searchWords={[this.state.filter]}\n                  textToHighlight={`${raw}`}\n                  highlightClassName=\"jp-mod-selected\"\n                ></Highlighter>\n              </span>\n            );\n          }}\n          shouldExpandNodeInitially={(keyPath, data, level) =>\n            metadata && metadata.expanded\n              ? true\n              : keyPaths.join(',').includes(keyPath.join(','))\n          }\n        />\n      </div>\n    );\n  }\n}\n\n// Provide an invalid theme object (this is on purpose!) to invalidate the\n// react-json-tree's inline styles that override CodeMirror CSS classes\nconst theme = {\n  scheme: 'jupyter',\n  base00: 'invalid',\n  base01: 'invalid',\n  base02: 'invalid',\n  base03: 'invalid',\n  base04: 'invalid',\n  base05: 'invalid',\n  base06: 'invalid',\n  base07: 'invalid',\n  base08: 'invalid',\n  base09: 'invalid',\n  base0A: 'invalid',\n  base0B: 'invalid',\n  base0C: 'invalid',\n  base0D: 'invalid',\n  base0E: 'invalid',\n  base0F: 'invalid',\n  author: 'invalid'\n};\n\nfunction objectIncludes(data: JSONValue, query: string): boolean {\n  return JSON.stringify(data).includes(query);\n}\n\nfunction filterPaths(\n  data: NonNullable<JSONValue>,\n  query: string,\n  parent: JSONArray = ['root']\n): JSONArray {\n  if (JSONExt.isArray(data)) {\n    return data.reduce((result: JSONArray, item: JSONValue, index: number) => {\n      if (item && typeof item === 'object' && objectIncludes(item, query)) {\n        return [\n          ...result,\n          [index, ...parent].join(','),\n          ...filterPaths(item, query, [index, ...parent])\n        ];\n      }\n      return result;\n    }, []) as JSONArray;\n  }\n  if (JSONExt.isObject(data)) {\n    return Object.keys(data).reduce((result: JSONArray, key: string) => {\n      const item = data[key];\n      if (\n        item &&\n        typeof item === 'object' &&\n        (key.includes(query) || objectIncludes(item, query))\n      ) {\n        return [\n          ...result,\n          [key, ...parent].join(','),\n          ...filterPaths(item, query, [key, ...parent])\n        ];\n      }\n      return result;\n    }, []);\n  }\n  return [];\n}\n"],
  "mappings": "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",
  "names": ["from", "last", "isAdjacent", "length", "init_dist", "time", "changes", "init_dist", "StateCommands", "from", "init_dist", "init_dist", "init_dist", "map", "create", "create", "args", "isNaN", "args", "isNaN", "parseInt", "create", "length", "length", "keys", "create", "create", "create", "create", "args", "create", "args", "style", "Transaction", "id", "length", "create", "doc", "any", "struct", "i", "keys", "p", "map", "text", "element", "item", "init_dist", "insertText", "import_coreutils", "init_dist", "EditorExtensionRegistry", "options", "init_awareness", "doc", "import_coreutils", "init_awareness", "import_coreutils", "init_awareness", "import_coreutils", "init_lib", "init_lib", "CodeEditor", "import_coreutils", "init_index_es6", "React", "init_lib", "LineCol", "IEditorMimeTypeService", "import_coreutils", "init_index_es6", "Private", "init_index_es6", "init_lib", "id", "state", "p", "from", "start", "rules", "params", "args", "all", "p2", "getState", "hash", "State", "max", "keys", "b", "isEmpty", "text", "Conflict", "none", "init_dist", "i", "states", "word", "terms", "ids", "expr", "result", "found", "rule", "term", "init_dist", "theme", "EditorThemeRegistry", "import_coreutils", "init_dist", "init_lib", "from", "classes", "EditorLanguageRegistry", "import_coreutils", "Private", "init_editor", "init_dist", "doc", "init_factory", "init_editor", "init_mimetype", "Utils", "import_coreutils", "init_lib", "init_editor", "init_factory", "init_mimetype", "module", "Highlighter", "lowercaseProps", "_extends", "text", "exports", "findAll", "combineChunks", "defaultFindChunks", "identity", "fillInChunks", "append", "process", "e", "args", "Item", "assign", "location", "i", "checker", "isNode", "emptyFunction", "validateFormat", "printWarning", "warning", "from", "simpleIsEqual", "isNewArgEqualToLast", "index", "result", "React", "import_react", "from", "keys", "length", "from", "renderChildNodes", "React", "import_react", "from", "React", "createItemString", "import_react", "React", "import_react", "createItemString", "React", "import_react", "createItemString", "React", "import_react", "value", "React", "import_react", "React", "import_react", "r", "require_lib", "min", "max", "p", "args", "from", "args", "args", "Color", "keys", "self", "args", "p", "max", "length", "MAX_SAFE_INTEGER", "args", "length", "identity", "curry", "keys", "flip", "invertColor", "Color", "merger", "mergeStyling", "args", "mergeStylings", "key", "getStylingByKeys", "invertBase16Theme", "curry", "theme", "isStylingConfig", "getBase16Theme", "invertTheme", "theme", "theme", "React", "import_react", "init_esm", "import_coreutils", "React", "Component", "init_lib", "init_dist", "init_esm", "data", "Highlighter"]
}
